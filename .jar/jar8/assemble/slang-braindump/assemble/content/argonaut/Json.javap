Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/Json.class
  Last modified May 29, 2022; size 35927 bytes
  SHA-256 checksum b670d2bf4809835c838a3b7b3c57b9b4c63d9df0f2bdf03fe30337194b1aa000
  Compiled from "Json.scala"
public abstract class argonaut.Json implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // argonaut/Json
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 0, methods: 160, attributes: 6
Constant pool:
     #1 = Utf8               argonaut/Json
     #2 = Class              #1           // argonaut/Json
     #3 = Utf8               java/lang/Object
     #4 = Class              #3           // java/lang/Object
     #5 = Utf8               scala/Product
     #6 = Class              #5           // scala/Product
     #7 = Utf8               java/io/Serializable
     #8 = Class              #7           // java/io/Serializable
     #9 = Utf8               Json.scala
    #10 = Utf8               Lscala/reflect/ScalaSignature;
    #11 = Utf8               bytes
    #12 = Utf8               \u0006\u0005\rmd!\u0002&L\u0003Cq\u0005\"\u00023\u0001\t\u0003)\u0007\"\u00025\u0001\t\u0003I\u0007bBAN\u0001\u0011\u0005\u0011Q\u0014\u0005\b\u0003g\u0003A\u0011AA[\u0011\u001d\ti\f\u0001C\u0001\u0003kCq!a0\u0001\t\u0003\t\t\rC\u0004\u0002J\u0002!\t!a3\t\u000f\u0005M\u0007\u0001\"\u0001\u0002V\"9\u0011q\u001b\u0001\u0005\u0002\u0005e\u0007bBAq\u0001\u0011\u0005\u00111\u001d\u0005\b\u0003O\u0004A\u0011AAu\u0011\u001d\t\t\b\u0001C\u0001\u0003gDq!a\u001b\u0001\t\u0003\t9\u0010C\u0004\u0002|\u0002!\t!!@\t\u000f\t5\u0001\u0001\"\u0001\u0003\u0010!9!\u0011\u0003\u0001\u0005\u0002\tM\u0001b\u0002B\u000e\u0001\u0011\u0005!Q\u0004\u0005\b\u0005G\u0001A\u0011\u0001B\u0013\u0011\u001d\u0011Y\u0003\u0001C\u0001\u0005[AqAa\r\u0001\t\u0003\u0011)\u0004C\u0004\u0003:\u0001!\tAa\u000f\t\u000f\t\r\u0003\u0001\"\u0001\u0003F!9!\u0011\n\u0001\u0005\u0002\t-\u0003b\u0002B)\u0001\u0011\u0005!1\u000b\u0005\b\u0005;\u0002A\u0011\u0001B0\u0011\u001d\u00119\u0007\u0001C\u0001\u0003+DqA!\u001b\u0001\t\u0003\t)\u000eC\u0004\u0003l\u0001!\t!!6\t\u000f\t5\u0004\u0001\"\u0001\u0002V\"9!q\u000e\u0001\u0005\u0002\u0005U\u0007b\u0002B9\u0001\u0011\u0005\u0011Q\u001b\u0005\b\u0005g\u0002A\u0011AAk\u0011\u001d\u0011)\b\u0001C\u0001\u0005oBqAa \u0001\t\u0003\u0011\t\tC\u0004\u0003\b\u0002!\tA!#\t\u000f\t=\u0005\u0001\"\u0001\u0003\u0012\"9!q\u0013\u0001\u0005\u0002\te\u0005b\u0002BN\u0001\u0011\u0005!Q\u0014\u0005\b\u0005?\u0003A\u0011\u0001BQ\u0011\u001d\u0011\u0019\u000b\u0001C\u0001\u0005KCqAa*\u0001\t\u0003\u0011I\u000bC\u0004\u0003.\u0002!\tAa,\t\u000f\tU\u0006\u0001\"\u0001\u00038\"9!\u0011\u0018\u0001\u0005\u0002\tm\u0006b\u0002Ba\u0001\u0011\u0005!1\u0019\u0005\b\u0005\u0013\u0004A\u0011\u0001Bf\u0011\u001d\u0011i\r\u0001C\u0001\u0005\u001fDqAa5\u0001\t\u0003\u0011)\u000eC\u0004\u0003Z\u0002!\tAa7\t\u000f\t\u0015\b\u0001\"\u0001\u0003h\"9!1\u001e\u0001\u0005\u0002\t5\bb\u0002By\u0001\u0011\u0005!1\u001f\u0005\b\u0005o\u0004A\u0011\u0001B}\u0011\u001d\u0011i\u0010\u0001C\u0001\u0005\u007fDqaa\u0001\u0001\t\u0003\u0019)\u0001C\u0004\u0004\n\u0001!\taa\u0003\t\u000f\r=\u0001\u0001\"\u0001\u0004\u0012!911\u0003\u0001\u0005\u0002\rU\u0001bBB\u0018\u0001\u0011\u00051\u0011\u0007\u0005\b\u0007\u007f\u0001A\u0011AB!\u0011\u001d\u0019i\u0005\u0001C\u0001\u0007#Aqaa\u0014\u0001\t\u0003\u0019\t\u0002C\u0004\u0004R\u0001!\ta!\u0005\t\u000f\rM\u0003\u0001\"\u0001\u0004\u0012!91Q\u000b\u0001\u0005\u0002\r]\u0003bBB/\u0001\u0011\u00053qL\u0004\b\u0003gY\u0005\u0012AA\u001b\r\u0019Q5\n#\u0001\u00028!1A\r\u0012C\u0001\u0003\u001bBq!a\u0014E\t\u0003\t\t\u0006C\u0004\u0002l\u0011#\t!!\u001c\t\u000f\u0005ED\t\"\u0001\u0002t!I\u00111\u0010#\u0002\u0002\u0013%\u0011Q\u0010\u0002\u0005\u0015N|gNC\u0001M\u0003!\t\'oZ8oCV$8\u0001A\n\u0005\u0001=+\u0006\f\u0005\u0002Q\'6\t\u0011KC\u0001S\u0003\u0015\u00198-\u00197b\u0013\t!\u0016K\u0001\u0004B]f\u0014VM\u001a\t\u0003!ZK!aV)\u0003\u000fA\u0013x\u000eZ;diB\u0011\u0011,\u0019\b\u00035~s!a\u00170\u000e\u0003qS!!X\'\u0002\rq\u0012xn\u001c;?\u0013\u0005\u0011\u0016B\u00011R\u0003\u001d\u0001\u0018mY6bO\u0016L!AY2\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005\u0001\f\u0016A\u0002\u001fj]&$h\bF\u0001g!\t9\u0007!D\u0001L\u0003\u00111w\u000e\u001c3\u0016\u0005)lGcC6ww\u0006\u001d\u00111CA\u0015\u0003\u001f\u0003\"\u0001\\7\r\u0001\u0011)aN\u0001b\u0001_\n\t\u0001,\u0005\u0002qgB\u0011\u0001+]\u0005\u0003eF\u0013qAT8uQ&tw\r\u0005\u0002Qi&\u0011Q/\u0015\u0002\u0004\u0003:L\bBB<\u0003\t\u0003\u0007\u00010\u0001\u0005kg>tg*\u001e7m!\r\u0001\u0016p[\u0005\u0003uF\u0013\u0001\u0002\u00102z]\u0006lWM\u0010\u0005\u0006y\n\u0001\r!`\u0001\tUN|gNQ8pYB)\u0001K`A\u0001W&\u0011q0\u0015\u0002\n\rVt7\r^5p]F\u00022\u0001UA\u0002\u0013\r\t)!\u0015\u0002\b\u0005>|G.Z1o\u0011\u001d\tIA\u0001a\u0001\u0003\u0017\t!B[:p]:+XNY3s!\u0015\u0001f0!\u0004l!\r9\u0017qB\u0005\u0004\u0003#Y%A\u0003&t_:tU/\u001c2fe\"9\u0011Q\u0003\u0002A\u0002\u0005]\u0011A\u00036t_:\u001cFO]5oOB)\u0001K`A\rWB!\u00111DA\u0012\u001d\u0011\ti\"a\b\u0011\u0005m\u000b\u0016bAA\u0011#\u00061\u0001K]3eK\u001aLA!!\n\u0002(\t11\u000b\u001e:j]\u001eT1!!\tR\u0011\u001d\tYC\u0001a\u0001\u0003[\t\u0011B[:p]\u0006\u0013(/Y=\u0011\u000bAs\u0018qF6\u0011\t\u0005E\u00121\u0012\b\u0003O\u000e\u000bAAS:p]B\u0011q\rR\n\u0007\t>\u000bI$a\u0010\u0011\u0007\u001d\fY$C\u0002\u0002>-\u0013QAS:p]N\u0004B!!\u0011\u0002L5\u0011\u00111\t\u0006\u0005\u0003\u000b\n9%\u0001\u0002j_*\u0011\u0011\u0011J\u0001\u0005U\u00064\u0018-C\u0002c\u0003\u0007\"\"!!\u000e\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0007\u0019\f\u0019\u0006C\u0004\u0002V\u0019\u0003\r!a\u0016\u0002\r\u0019LW\r\u001c3t!\u0015\u0001\u0016\u0011LA/\u0013\r\tY&\u0015\u0002\u000byI,\u0007/Z1uK\u0012t\u0004C\u0002)\u0002`\u0005\rd-C\u0002\u0002bE\u0013a\u0001V;qY\u0016\u0014\u0004\u0003BA3\u0003Oj\u0011\u0001R\u0005\u0005\u0003S\nYDA\u0005Kg>tg)[3mI\u0006\u0019qN\u00196\u0015\u0007\u0019\fy\u0007C\u0004\u0002V\u001d\u0003\r!a\u0016\u0002\u000b\u0005\u0014(/Y=\u0015\u0007\u0019\f)\bC\u0004\u0002x!\u0003\r!!\u001f\u0002\u0011\u0015dW-\\3oiN\u0004B\u0001UA-M\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011q\u0010\t\u0005\u0003\u0003\u000b9)\u0004\u0002\u0002\u0004*!\u0011QQA$\u0003\u0011a\u0017M\\4\n\t\u0005%\u00151\u0011\u0002\u0007\u001f\nTWm\u0019;\n\t\u00055\u00151\b\u0002\n\u0015N|g.\u0011:sCfDq!!%\u0003\u0001\u0004\t\u0019*\u0001\u0006kg>twJ\u00196fGR\u0004R\u0001\u0015@\u0002\u0016.\u00042aZAL\u0013\r\tIj\u0013\u0002\u000b\u0015N|gn\u00142kK\u000e$\u0018!D1se\u0006LxJ](cU\u0016\u001cG/\u0006\u0003\u0002 \u0006\rF\u0003CAQ\u0003K\u000bY+a,\u0011\u00071\f\u0019\u000bB\u0003o\u0007\t\u0007q\u000e\u0003\u0005\u0002(\u000e!\t\u0019AAU\u0003\ty\'\u000f\u0005\u0003Qs\u0006\u0005\u0006bBA\u0016\u0007\u0001\u0007\u0011Q\u0016\t\u0007!z\fy#!)\t\u000f\u0005E5\u00011\u0001\u00022B1\u0001K`AK\u0003C\u000b1\"\u001e8bef|F\u0005\u001d7vgV\u0011\u0011q\u0017\t\u0004O\u0006e\u0016bAA^\u0017\n11)\u001e:t_J\faaY;sg>\u0014\u0018a\u00025dkJ\u001cxN]\u000b\u0003\u0003\u0007\u00042aZAc\u0013\r\t9m\u0013\u0002\b\u0011\u000e+(o]8s\u0003\u001d\t7-\u001e:t_J,\"!!4\u0011\u0007\u001d\fy-C\u0002\u0002R.\u0013q!Q\"veN|\'/\u0001\u0004jg:+H\u000e\\\u000b\u0003\u0003\u0003\tAAY8pYV\u0011\u00111\u001c\t\u0006!\u0006u\u0017\u0011A\u0005\u0004\u0003?\f&AB(qi&|g.\u0001\u0004ok6\u0014WM]\u000b\u0003\u0003K\u0004R\u0001UAo\u0003\u001b\taa\u001d;sS:<WCAAv!\u0015\u0001\u0016Q\\Aw!\u0011\t\t$a<\n\t\u0005E\u00181\b\u0002\u000b\u0015N|gn\u0015;sS:<WCAA{!\u0015\u0001\u0016Q\\A\u0018+\t\tI\u0010E\u0003Q\u0003;\f)*A\u0003bgN|7-\u0006\u0002\u0002\u0000B)\u0001+!8\u0003\u0002A)\u0011La\u0001\u0003\b%\u0019!QA2\u0003\t1K7\u000f\u001e\t\u0005\u0003c\u0011I!\u0003\u0003\u0003\f\u0005m\"!\u0003&t_:\f5o]8d\u0003\rqw\u000e^\u000b\u0002M\u0006Qq/\u001b;i\u001dVl\'-\u001a:\u0015\u0007\u0019\u0014)\u0002C\u0004\u0003\u0018A\u0001\rA!\u0007\u0002\u0003-\u0004b\u0001\u0015@\u0002\u000e\u00055\u0011AC<ji\"\u001cFO]5oOR\u0019aMa\b\t\u000f\t]\u0011\u00031\u0001\u0003\"A1\u0001K`Aw\u0003[\f\u0011b^5uQ\u0006\u0013(/Y=\u0015\u0007\u0019\u00149\u0003C\u0004\u0003\u0018I\u0001\rA!\u000b\u0011\rAs\u0018qFA\u0018\u0003)9\u0018\u000e\u001e5PE*,7\r\u001e\u000b\u0004M\n=\u0002b\u0002B\f\'\u0001\u0007!\u0011\u0007\t\u0007!z\f)*!&\u0002)\u0011j\u0017N\\;tI\u001d\u0014X-\u0019;fe\u0012\u001aw\u000e\\8o)\r1\'q\u0007\u0005\b\u0005/!\u0002\u0019\u0001B\u0004\u0003i!S.\u001b8vg\u0012:\'/Z1uKJ$\u0013/\\1sW\u0012\u001aw\u000e\\8o)\r1\'Q\b\u0005\b\u0005\u007f)\u0002\u0019\u0001B!\u0003\u0005y\u0007#\u0002)\u0002^\n\u001d\u0011A\t\u0013nS:,8\u000fJ7j]V\u001cHe\u001a:fCR,\'\u000fJ4sK\u0006$XM\u001d\u0013d_2|g\u000eF\u0002g\u0005\u000fBaAa\u0006\u0017\u0001\u00041\u0017\u0001\u000b\u0013nS:,8\u000fJ7j]V\u001cHe\u001a:fCR,\'\u000fJ4sK\u0006$XM\u001d\u0013r[\u0006\u00148\u000eJ2pY>tGc\u00014\u0003N!9!qH\fA\u0002\t=\u0003\u0003\u0002)\u0002^\u001a\f!\u0002J7j]V\u001cHEY1s)\u0011\u0011yE!\u0016\t\u0011\t]\u0003\u0004\"a\u0001\u00053\n\u0011A\u001a\t\u0005!f\u0014Y\u0006\u0005\u0003\u00022\u0005\u001d\u0014A\u0004\u0013nS:,8\u000f\n2be\u0012\u0012\u0017M\u001d\u000b\u0005\u0005\u001f\u0012\t\u0007C\u0004\u0003de\u0001\rA!\u001a\u0002\u0005\u0019\u001c\b#B-\u0003\u0004\tm\u0013AB5t)J,X-A\u0004jg\u001a\u000bGn]3\u0002\r%\u001c(i\\8m\u0003!I7OT;nE\u0016\u0014\u0018\u0001C5t\'R\u0014\u0018N\\4\u0002\u000f%\u001c\u0018I\u001d:bs\u0006A\u0011n](cU\u0016\u001cG/\u0001\u0005ok6\u0014WM](s)\u0011\tiA!\u001f\t\u0011\tm\u0014\u0005\"a\u0001\u0005{\n\u0011\u0001\u001a\t\u0005!f\fi!\u0001\u0005tiJLgnZ(s)\u0011\tiOa!\t\u0011\tm$\u0005\"a\u0001\u0005\u000b\u0003B\u0001U=\u0002n\u00069\u0011M\u001d:bs>\u0013H\u0003BA\u0018\u0005\u0017C\u0001Ba\u001f$\t\u0003\u0007!Q\u0012\t\u0005!f\fy#\u0001\u0005pE*,7\r^(s)\u0011\t)Ja%\t\u0011\tmD\u0005\"a\u0001\u0005+\u0003B\u0001U=\u0002\u0016\u0006aa.^7cKJ|%OW3s_V\u0011\u0011QB\u0001\u000egR\u0014\u0018N\\4Pe\u0016k\u0007\u000f^=\u0016\u0005\u00055\u0018\u0001D1se\u0006LxJ]#naRLXCAA\u0018\u00035y\'M[3di>\u0013X)\u001c9usV\u0011\u0011QS\u0001\r_\nTWm\u0019;GS\u0016dGm]\u000b\u0003\u0005W\u0003R\u0001UAo\u0005K\nab\u001c2kK\u000e$h)[3mIN|%\u000f\u0006\u0003\u0003f\tE\u0006\u0002\u0003B,U\u0011\u0005\rAa-\u0011\tAK(QM\u0001\u0014_\nTWm\u0019;GS\u0016dGm](s\u000b6\u0004H/_\u000b\u0003\u0005K\nAb\u001c2kK\u000e$h+\u00197vKN,\"A!0\u0011\u000bA\u000biNa0\u0011\te\u0013\u0019AZ\u0001\u000f_\nTWm\u0019;WC2,Xm](s)\u0011\u0011yL!2\t\u0011\t]Q\u0006\"a\u0001\u0005\u000f\u0004B\u0001U=\u0003@\u0006\u0019rN\u00196fGR4\u0016\r\\;fg>\u0013X)\u001c9usV\u0011!qX\u0001\tQ\u0006\u001ch)[3mIR!\u0011\u0011\u0001Bi\u0011!\u00119f\fCA\u0002\te\u0013!\u00024jK2$G\u0003\u0002B(\u0005/D\u0001Ba\u00161\t\u0003\u0007!\u0011L\u0001\bM&,G\u000eZ(s)\u00151\'Q\u001cBp\u0011!\u00119&\rCA\u0002\te\u0003\u0002\u0003Bqc\u0011\u0005\rAa9\u0002\u0003)\u00042\u0001U=g\u0003-1\u0017.\u001a7e\u001fJtU\u000f\u001c7\u0015\u0007\u0019\u0014I\u000f\u0003\u0005\u0003XI\"\t\u0019\u0001B-\u0003-1\u0017.\u001a7e\u001fJ$&/^3\u0015\u0007\u0019\u0014y\u000f\u0003\u0005\u0003XM\"\t\u0019\u0001B-\u000311\u0017.\u001a7e\u001fJ4\u0015\r\\:f)\r1\'Q\u001f\u0005\t\u0005/\"D\u00111\u0001\u0003Z\u0005Ya-[3mI>\u0013(,\u001a:p)\r1\'1 \u0005\t\u0005/*D\u00111\u0001\u0003Z\u0005\u0011b-[3mI>\u0013X)\u001c9usN#(/\u001b8h)\r17\u0011\u0001\u0005\t\u0005/2D\u00111\u0001\u0003Z\u0005\tb-[3mI>\u0013X)\u001c9us\u0006\u0013(/Y=\u0015\u0007\u0019\u001c9\u0001\u0003\u0005\u0003X]\"\t\u0019\u0001B-\u0003I1\u0017.\u001a7e\u001fJ,U\u000e\u001d;z\u001f\nTWm\u0019;\u0015\u0007\u0019\u001ci\u0001\u0003\u0005\u0003Xa\"\t\u0019\u0001B-\u0003\u0011q\u0017-\\3\u0016\u0005\u0005e\u0011a\u00026eK\u000e|G-Z\u000b\u0005\u0007/\u0019\t\u0003\u0006\u0003\u0004\u001a\r\u0015\u0002#B4\u0004\u001c\r}\u0011bAB\u000f\u0017\naA)Z2pI\u0016\u0014Vm];miB\u0019An!\t\u0005\r\r\r\"H1\u0001p\u0005\u0005\t\u0005bBB\u0014u\u0001\u000f1\u0011F\u0001\u0002KB)qma\u000b\u0004 %\u00191QF&\u0003\u0015\u0011+7m\u001c3f\u0015N|g.\u0001\u0002bgV!11GB\u001d)\u0011\u0019)da\u000f\u0011\u000b\u001d\u001cYba\u000e\u0011\u00071\u001cI\u0004\u0002\u0004\u0004$m\u0012\ra\u001c\u0005\b\u0007OY\u00049AB\u001f!\u0015971FB\u001c\u0003\u0019\u0001(/\u001a;usR!\u0011\u0011DB\"\u0011\u001d\u0019)\u0005\u0010a\u0001\u0007\u000f\n\u0011\u0001\u001d\t\u0004O\u000e%\u0013bAB&\u0017\na\u0001K]3uif\u0004\u0016M]1ng\u0006Aan\\:qC\u000e,7/A\to_N\u0004\u0018mY3t/&$\bn\u0014:eKJ\fqa\u001d9bG\u0016\u001c(\'A\u0004ta\u0006\u001cWm\u001d\u001b\u0002\u0013\u0011,W\r]7fe\u001e,Gc\u00014\u0004Z!111L!A\u0002\u0019\f\u0011!_\u0001\ti>\u001cFO]5oOR\u0011\u0011\u0011D\u0015\u000e\u0001\r\r4qMB6\u0007_\u001a\u0019ha\u001e\n\u0007\r\u00154J\u0001\u0004K\u0003J\u0014\u0018-_\u0005\u0004\u0007SZ%!\u0002&C_>d\'bAB7\u0017\u0006)!JT;mY&\u00191\u0011O&\u0003\u000f)sU/\u001c2fe&\u00191QO&\u0003\u000f){%M[3di&\u00191\u0011P&\u0003\u000f)\u001bFO]5oO\u0002
    #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #14 = Class              #13          // java/lang/invoke/MethodHandles$Lookup
    #15 = Utf8               java/lang/invoke/MethodHandles
    #16 = Class              #15          // java/lang/invoke/MethodHandles
    #17 = Utf8               Lookup
    #18 = Utf8               apply
    #19 = Utf8               (Lscala/collection/immutable/Seq;)Largonaut/Json;
    #20 = Utf8               (Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    #21 = Utf8               fields
    #22 = Utf8               argonaut/Json$
    #23 = Class              #22          // argonaut/Json$
    #24 = Utf8               MODULE$
    #25 = Utf8               Largonaut/Json$;
    #26 = NameAndType        #24:#25      // MODULE$:Largonaut/Json$;
    #27 = Fieldref           #23.#26      // argonaut/Json$.MODULE$:Largonaut/Json$;
    #28 = NameAndType        #18:#19      // apply:(Lscala/collection/immutable/Seq;)Largonaut/Json;
    #29 = Methodref          #23.#28      // argonaut/Json$.apply:(Lscala/collection/immutable/Seq;)Largonaut/Json;
    #30 = Utf8               jObjectFields
    #31 = Utf8               x
    #32 = NameAndType        #30:#19      // jObjectFields:(Lscala/collection/immutable/Seq;)Largonaut/Json;
    #33 = Methodref          #23.#32      // argonaut/Json$.jObjectFields:(Lscala/collection/immutable/Seq;)Largonaut/Json;
    #34 = Utf8               jObjectAssocList
    #35 = Utf8               (Lscala/collection/immutable/List;)Largonaut/Json;
    #36 = Utf8               (Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    #37 = NameAndType        #34:#35      // jObjectAssocList:(Lscala/collection/immutable/List;)Largonaut/Json;
    #38 = Methodref          #23.#37      // argonaut/Json$.jObjectAssocList:(Lscala/collection/immutable/List;)Largonaut/Json;
    #39 = Utf8               jSingleObject
    #40 = Utf8               (Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
    #41 = Utf8               k
    #42 = Utf8               v
    #43 = NameAndType        #39:#40      // jSingleObject:(Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
    #44 = Methodref          #23.#43      // argonaut/Json$.jSingleObject:(Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
    #45 = Utf8               jEmptyObject
    #46 = Utf8               ()Largonaut/Json;
    #47 = NameAndType        #45:#46      // jEmptyObject:()Largonaut/Json;
    #48 = Methodref          #23.#47      // argonaut/Json$.jEmptyObject:()Largonaut/Json;
    #49 = Utf8               jArrayElements
    #50 = Utf8               (Lscala/collection/immutable/Seq<Largonaut/Json;>;)Largonaut/Json;
    #51 = Utf8               elements
    #52 = NameAndType        #49:#19      // jArrayElements:(Lscala/collection/immutable/Seq;)Largonaut/Json;
    #53 = Methodref          #23.#52      // argonaut/Json$.jArrayElements:(Lscala/collection/immutable/Seq;)Largonaut/Json;
    #54 = Utf8               jSingleArray
    #55 = Utf8               (Largonaut/Json;)Largonaut/Json;
    #56 = Utf8               j
    #57 = NameAndType        #54:#55      // jSingleArray:(Largonaut/Json;)Largonaut/Json;
    #58 = Methodref          #23.#57      // argonaut/Json$.jSingleArray:(Largonaut/Json;)Largonaut/Json;
    #59 = Utf8               jEmptyArray
    #60 = NameAndType        #59:#46      // jEmptyArray:()Largonaut/Json;
    #61 = Methodref          #23.#60      // argonaut/Json$.jEmptyArray:()Largonaut/Json;
    #62 = Utf8               jEmptyString
    #63 = NameAndType        #62:#46      // jEmptyString:()Largonaut/Json;
    #64 = Methodref          #23.#63      // argonaut/Json$.jEmptyString:()Largonaut/Json;
    #65 = Utf8               jZero
    #66 = NameAndType        #65:#46      // jZero:()Largonaut/Json;
    #67 = Methodref          #23.#66      // argonaut/Json$.jZero:()Largonaut/Json;
    #68 = Utf8               jFalse
    #69 = NameAndType        #68:#46      // jFalse:()Largonaut/Json;
    #70 = Methodref          #23.#69      // argonaut/Json$.jFalse:()Largonaut/Json;
    #71 = Utf8               jTrue
    #72 = NameAndType        #71:#46      // jTrue:()Largonaut/Json;
    #73 = Methodref          #23.#72      // argonaut/Json$.jTrue:()Largonaut/Json;
    #74 = Utf8               jObject
    #75 = Utf8               ()Lscala/Function1;
    #76 = Utf8               ()Lscala/Function1<Largonaut/JsonObject;Largonaut/Json;>;
    #77 = NameAndType        #74:#75      // jObject:()Lscala/Function1;
    #78 = Methodref          #23.#77      // argonaut/Json$.jObject:()Lscala/Function1;
    #79 = Utf8               jArray
    #80 = Utf8               ()Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;Largonaut/Json;>;
    #81 = NameAndType        #79:#75      // jArray:()Lscala/Function1;
    #82 = Methodref          #23.#81      // argonaut/Json$.jArray:()Lscala/Function1;
    #83 = Utf8               jString
    #84 = Utf8               ()Lscala/Function1<Ljava/lang/String;Largonaut/Json;>;
    #85 = NameAndType        #83:#75      // jString:()Lscala/Function1;
    #86 = Methodref          #23.#85      // argonaut/Json$.jString:()Lscala/Function1;
    #87 = Utf8               jNumberOrString
    #88 = Utf8               (Ljava/lang/String;)Lscala/Option;
    #89 = Utf8               (Ljava/lang/String;)Lscala/Option<Largonaut/Json;>;
    #90 = Utf8               n
    #91 = NameAndType        #87:#88      // jNumberOrString:(Ljava/lang/String;)Lscala/Option;
    #92 = Methodref          #23.#91      // argonaut/Json$.jNumberOrString:(Ljava/lang/String;)Lscala/Option;
    #93 = Utf8               jNumberOrNull
    #94 = NameAndType        #93:#88      // jNumberOrNull:(Ljava/lang/String;)Lscala/Option;
    #95 = Methodref          #23.#94      // argonaut/Json$.jNumberOrNull:(Ljava/lang/String;)Lscala/Option;
    #96 = Utf8               jNumber
    #97 = NameAndType        #96:#88      // jNumber:(Ljava/lang/String;)Lscala/Option;
    #98 = Methodref          #23.#97      // argonaut/Json$.jNumber:(Ljava/lang/String;)Lscala/Option;
    #99 = Utf8               (Lscala/math/BigDecimal;)Largonaut/Json;
   #100 = NameAndType        #96:#99      // jNumber:(Lscala/math/BigDecimal;)Largonaut/Json;
   #101 = Methodref          #23.#100     // argonaut/Json$.jNumber:(Lscala/math/BigDecimal;)Largonaut/Json;
   #102 = Utf8               (D)Largonaut/Json;
   #103 = NameAndType        #87:#102     // jNumberOrString:(D)Largonaut/Json;
   #104 = Methodref          #23.#103     // argonaut/Json$.jNumberOrString:(D)Largonaut/Json;
   #105 = NameAndType        #93:#102     // jNumberOrNull:(D)Largonaut/Json;
   #106 = Methodref          #23.#105     // argonaut/Json$.jNumberOrNull:(D)Largonaut/Json;
   #107 = Utf8               (D)Lscala/Option;
   #108 = Utf8               (D)Lscala/Option<Largonaut/Json;>;
   #109 = NameAndType        #96:#107     // jNumber:(D)Lscala/Option;
   #110 = Methodref          #23.#109     // argonaut/Json$.jNumber:(D)Lscala/Option;
   #111 = Utf8               (J)Largonaut/Json;
   #112 = NameAndType        #96:#111     // jNumber:(J)Largonaut/Json;
   #113 = Methodref          #23.#112     // argonaut/Json$.jNumber:(J)Largonaut/Json;
   #114 = Utf8               (I)Largonaut/Json;
   #115 = NameAndType        #96:#114     // jNumber:(I)Largonaut/Json;
   #116 = Methodref          #23.#115     // argonaut/Json$.jNumber:(I)Largonaut/Json;
   #117 = Utf8               (Largonaut/JsonNumber;)Largonaut/Json;
   #118 = NameAndType        #96:#117     // jNumber:(Largonaut/JsonNumber;)Largonaut/Json;
   #119 = Methodref          #23.#118     // argonaut/Json$.jNumber:(Largonaut/JsonNumber;)Largonaut/Json;
   #120 = Utf8               jBool
   #121 = Utf8               ()Lscala/Function1<Ljava/lang/Object;Largonaut/Json;>;
   #122 = NameAndType        #120:#75     // jBool:()Lscala/Function1;
   #123 = Methodref          #23.#122     // argonaut/Json$.jBool:()Lscala/Function1;
   #124 = Utf8               jNull
   #125 = NameAndType        #124:#46     // jNull:()Largonaut/Json;
   #126 = Methodref          #23.#125     // argonaut/Json$.jNull:()Largonaut/Json;
   #127 = Utf8               productIterator
   #128 = Utf8               ()Lscala/collection/Iterator;
   #129 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #130 = Utf8               productIterator$
   #131 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #132 = NameAndType        #130:#131    // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #133 = InterfaceMethodref #6.#132      // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #134 = Utf8               this
   #135 = Utf8               Largonaut/Json;
   #136 = Utf8               productPrefix
   #137 = Utf8               ()Ljava/lang/String;
   #138 = Utf8               productPrefix$
   #139 = Utf8               (Lscala/Product;)Ljava/lang/String;
   #140 = NameAndType        #138:#139    // productPrefix$:(Lscala/Product;)Ljava/lang/String;
   #141 = InterfaceMethodref #6.#140      // scala/Product.productPrefix$:(Lscala/Product;)Ljava/lang/String;
   #142 = Utf8               productElementName
   #143 = Utf8               (I)Ljava/lang/String;
   #144 = Utf8               productElementName$
   #145 = Utf8               (Lscala/Product;I)Ljava/lang/String;
   #146 = NameAndType        #144:#145    // productElementName$:(Lscala/Product;I)Ljava/lang/String;
   #147 = InterfaceMethodref #6.#146      // scala/Product.productElementName$:(Lscala/Product;I)Ljava/lang/String;
   #148 = Utf8               I
   #149 = Utf8               productElementNames
   #150 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #151 = Utf8               productElementNames$
   #152 = NameAndType        #151:#131    // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #153 = InterfaceMethodref #6.#152      // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #154 = Utf8               fold
   #155 = Utf8               (Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #156 = Utf8               <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Ljava/lang/Object;TX;>;Lscala/Function1<Largonaut/JsonNumber;TX;>;Lscala/Function1<Ljava/lang/String;TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
   #157 = Utf8               jsonNull
   #158 = Utf8               jsonBool
   #159 = Utf8               jsonNumber
   #160 = Utf8               jsonString
   #161 = Utf8               jsonArray
   #162 = Utf8               jsonObject
   #163 = Utf8               argonaut/JNull$
   #164 = Class              #163         // argonaut/JNull$
   #165 = Utf8               Largonaut/JNull$;
   #166 = NameAndType        #24:#165     // MODULE$:Largonaut/JNull$;
   #167 = Fieldref           #164.#166    // argonaut/JNull$.MODULE$:Largonaut/JNull$;
   #168 = Utf8               equals
   #169 = Utf8               (Ljava/lang/Object;)Z
   #170 = NameAndType        #168:#169    // equals:(Ljava/lang/Object;)Z
   #171 = Methodref          #4.#170      // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #172 = Utf8               scala/Function0
   #173 = Class              #172         // scala/Function0
   #174 = Utf8               ()Ljava/lang/Object;
   #175 = NameAndType        #18:#174     // apply:()Ljava/lang/Object;
   #176 = InterfaceMethodref #173.#175    // scala/Function0.apply:()Ljava/lang/Object;
   #177 = Utf8               argonaut/JBool
   #178 = Class              #177         // argonaut/JBool
   #179 = Utf8               b
   #180 = Utf8               ()Z
   #181 = NameAndType        #179:#180    // b:()Z
   #182 = Methodref          #178.#181    // argonaut/JBool.b:()Z
   #183 = Utf8               scala/runtime/BoxesRunTime
   #184 = Class              #183         // scala/runtime/BoxesRunTime
   #185 = Utf8               boxToBoolean
   #186 = Utf8               (Z)Ljava/lang/Boolean;
   #187 = NameAndType        #185:#186    // boxToBoolean:(Z)Ljava/lang/Boolean;
   #188 = Methodref          #184.#187    // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #189 = Utf8               scala/Function1
   #190 = Class              #189         // scala/Function1
   #191 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #192 = NameAndType        #18:#191     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #193 = InterfaceMethodref #190.#192    // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #194 = Utf8               argonaut/JNumber
   #195 = Class              #194         // argonaut/JNumber
   #196 = Utf8               ()Largonaut/JsonNumber;
   #197 = NameAndType        #90:#196     // n:()Largonaut/JsonNumber;
   #198 = Methodref          #195.#197    // argonaut/JNumber.n:()Largonaut/JsonNumber;
   #199 = Utf8               argonaut/JString
   #200 = Class              #199         // argonaut/JString
   #201 = Utf8               s
   #202 = NameAndType        #201:#137    // s:()Ljava/lang/String;
   #203 = Methodref          #200.#202    // argonaut/JString.s:()Ljava/lang/String;
   #204 = Utf8               argonaut/JArray
   #205 = Class              #204         // argonaut/JArray
   #206 = Utf8               a
   #207 = Utf8               ()Lscala/collection/immutable/List;
   #208 = NameAndType        #206:#207    // a:()Lscala/collection/immutable/List;
   #209 = Methodref          #205.#208    // argonaut/JArray.a:()Lscala/collection/immutable/List;
   #210 = Utf8               argonaut/JObject
   #211 = Class              #210         // argonaut/JObject
   #212 = Utf8               o
   #213 = Utf8               ()Largonaut/JsonObject;
   #214 = NameAndType        #212:#213    // o:()Largonaut/JsonObject;
   #215 = Methodref          #211.#214    // argonaut/JObject.o:()Largonaut/JsonObject;
   #216 = Utf8               scala/MatchError
   #217 = Class              #216         // scala/MatchError
   #218 = Utf8               <init>
   #219 = Utf8               (Ljava/lang/Object;)V
   #220 = NameAndType        #218:#219    // "<init>":(Ljava/lang/Object;)V
   #221 = Methodref          #217.#220    // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #222 = Utf8               Z
   #223 = Utf8               Largonaut/JsonNumber;
   #224 = Utf8               Ljava/lang/String;
   #225 = Utf8               Lscala/collection/immutable/List;
   #226 = Utf8               Largonaut/JsonObject;
   #227 = Utf8               Lscala/Function0;
   #228 = Utf8               Lscala/Function1;
   #229 = Utf8               arrayOrObject
   #230 = Utf8               (Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #231 = Utf8               <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
   #232 = Utf8               or
   #233 = Utf8               unary_$plus
   #234 = Utf8               ()Largonaut/Cursor;
   #235 = Utf8               argonaut/Cursor$
   #236 = Class              #235         // argonaut/Cursor$
   #237 = Utf8               Largonaut/Cursor$;
   #238 = NameAndType        #24:#237     // MODULE$:Largonaut/Cursor$;
   #239 = Fieldref           #236.#238    // argonaut/Cursor$.MODULE$:Largonaut/Cursor$;
   #240 = Utf8               (Largonaut/Json;)Largonaut/Cursor;
   #241 = NameAndType        #18:#240     // apply:(Largonaut/Json;)Largonaut/Cursor;
   #242 = Methodref          #236.#241    // argonaut/Cursor$.apply:(Largonaut/Json;)Largonaut/Cursor;
   #243 = Utf8               cursor
   #244 = Utf8               hcursor
   #245 = Utf8               ()Largonaut/HCursor;
   #246 = NameAndType        #243:#234    // cursor:()Largonaut/Cursor;
   #247 = Methodref          #2.#246      // argonaut/Json.cursor:()Largonaut/Cursor;
   #248 = Utf8               argonaut/Cursor
   #249 = Class              #248         // argonaut/Cursor
   #250 = NameAndType        #244:#245    // hcursor:()Largonaut/HCursor;
   #251 = Methodref          #249.#250    // argonaut/Cursor.hcursor:()Largonaut/HCursor;
   #252 = Utf8               acursor
   #253 = Utf8               ()Largonaut/ACursor;
   #254 = Methodref          #2.#250      // argonaut/Json.hcursor:()Largonaut/HCursor;
   #255 = Utf8               argonaut/HCursor
   #256 = Class              #255         // argonaut/HCursor
   #257 = NameAndType        #252:#253    // acursor:()Largonaut/ACursor;
   #258 = Methodref          #256.#257    // argonaut/HCursor.acursor:()Largonaut/ACursor;
   #259 = Utf8               isNull
   #260 = Utf8               bool
   #261 = Utf8               ()Lscala/Option;
   #262 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
   #263 = MethodType         #174         //  ()Ljava/lang/Object;
   #264 = Utf8               $anonfun$bool$1
   #265 = Utf8               ()Lscala/None$;
   #266 = NameAndType        #264:#265    // $anonfun$bool$1:()Lscala/None$;
   #267 = Methodref          #2.#266      // argonaut/Json.$anonfun$bool$1:()Lscala/None$;
   #268 = MethodHandle       6:#267       // REF_invokeStatic argonaut/Json.$anonfun$bool$1:()Lscala/None$;
   #269 = MethodType         #265         //  ()Lscala/None$;
   #270 = Integer            5
   #271 = Integer            1
   #272 = Utf8               java/lang/invoke/LambdaMetafactory
   #273 = Class              #272         // java/lang/invoke/LambdaMetafactory
   #274 = Utf8               altMetafactory
   #275 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #276 = NameAndType        #274:#275    // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #277 = Methodref          #273.#276    // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #278 = MethodHandle       6:#277       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #279 = Utf8               ()Lscala/Function0;
   #280 = NameAndType        #18:#279     // apply:()Lscala/Function0;
   #281 = InvokeDynamic      #0:#280      // #0:apply:()Lscala/Function0;
   #282 = MethodType         #191         //  (Ljava/lang/Object;)Ljava/lang/Object;
   #283 = Utf8               $anonfun$bool$2$adapted
   #284 = Utf8               (Ljava/lang/Object;)Lscala/Some;
   #285 = NameAndType        #283:#284    // $anonfun$bool$2$adapted:(Ljava/lang/Object;)Lscala/Some;
   #286 = Methodref          #2.#285      // argonaut/Json.$anonfun$bool$2$adapted:(Ljava/lang/Object;)Lscala/Some;
   #287 = MethodHandle       6:#286       // REF_invokeStatic argonaut/Json.$anonfun$bool$2$adapted:(Ljava/lang/Object;)Lscala/Some;
   #288 = MethodType         #284         //  (Ljava/lang/Object;)Lscala/Some;
   #289 = NameAndType        #18:#75      // apply:()Lscala/Function1;
   #290 = InvokeDynamic      #1:#289      // #1:apply:()Lscala/Function1;
   #291 = Utf8               $anonfun$bool$3
   #292 = Utf8               (Largonaut/JsonNumber;)Lscala/None$;
   #293 = NameAndType        #291:#292    // $anonfun$bool$3:(Largonaut/JsonNumber;)Lscala/None$;
   #294 = Methodref          #2.#293      // argonaut/Json.$anonfun$bool$3:(Largonaut/JsonNumber;)Lscala/None$;
   #295 = MethodHandle       6:#294       // REF_invokeStatic argonaut/Json.$anonfun$bool$3:(Largonaut/JsonNumber;)Lscala/None$;
   #296 = MethodType         #292         //  (Largonaut/JsonNumber;)Lscala/None$;
   #297 = InvokeDynamic      #2:#289      // #2:apply:()Lscala/Function1;
   #298 = Utf8               $anonfun$bool$4
   #299 = Utf8               (Ljava/lang/String;)Lscala/None$;
   #300 = NameAndType        #298:#299    // $anonfun$bool$4:(Ljava/lang/String;)Lscala/None$;
   #301 = Methodref          #2.#300      // argonaut/Json.$anonfun$bool$4:(Ljava/lang/String;)Lscala/None$;
   #302 = MethodHandle       6:#301       // REF_invokeStatic argonaut/Json.$anonfun$bool$4:(Ljava/lang/String;)Lscala/None$;
   #303 = MethodType         #299         //  (Ljava/lang/String;)Lscala/None$;
   #304 = InvokeDynamic      #3:#289      // #3:apply:()Lscala/Function1;
   #305 = Utf8               $anonfun$bool$5
   #306 = Utf8               (Lscala/collection/immutable/List;)Lscala/None$;
   #307 = NameAndType        #305:#306    // $anonfun$bool$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #308 = Methodref          #2.#307      // argonaut/Json.$anonfun$bool$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #309 = MethodHandle       6:#308       // REF_invokeStatic argonaut/Json.$anonfun$bool$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #310 = MethodType         #306         //  (Lscala/collection/immutable/List;)Lscala/None$;
   #311 = InvokeDynamic      #4:#289      // #4:apply:()Lscala/Function1;
   #312 = Utf8               $anonfun$bool$6
   #313 = Utf8               (Largonaut/JsonObject;)Lscala/None$;
   #314 = NameAndType        #312:#313    // $anonfun$bool$6:(Largonaut/JsonObject;)Lscala/None$;
   #315 = Methodref          #2.#314      // argonaut/Json.$anonfun$bool$6:(Largonaut/JsonObject;)Lscala/None$;
   #316 = MethodHandle       6:#315       // REF_invokeStatic argonaut/Json.$anonfun$bool$6:(Largonaut/JsonObject;)Lscala/None$;
   #317 = MethodType         #313         //  (Largonaut/JsonObject;)Lscala/None$;
   #318 = InvokeDynamic      #5:#289      // #5:apply:()Lscala/Function1;
   #319 = NameAndType        #154:#155    // fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #320 = Methodref          #2.#319      // argonaut/Json.fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #321 = Utf8               scala/Option
   #322 = Class              #321         // scala/Option
   #323 = Utf8               number
   #324 = Utf8               ()Lscala/Option<Largonaut/JsonNumber;>;
   #325 = Utf8               $anonfun$number$1
   #326 = NameAndType        #325:#265    // $anonfun$number$1:()Lscala/None$;
   #327 = Methodref          #2.#326      // argonaut/Json.$anonfun$number$1:()Lscala/None$;
   #328 = MethodHandle       6:#327       // REF_invokeStatic argonaut/Json.$anonfun$number$1:()Lscala/None$;
   #329 = InvokeDynamic      #6:#280      // #6:apply:()Lscala/Function0;
   #330 = Utf8               $anonfun$number$2$adapted
   #331 = Utf8               (Ljava/lang/Object;)Lscala/None$;
   #332 = NameAndType        #330:#331    // $anonfun$number$2$adapted:(Ljava/lang/Object;)Lscala/None$;
   #333 = Methodref          #2.#332      // argonaut/Json.$anonfun$number$2$adapted:(Ljava/lang/Object;)Lscala/None$;
   #334 = MethodHandle       6:#333       // REF_invokeStatic argonaut/Json.$anonfun$number$2$adapted:(Ljava/lang/Object;)Lscala/None$;
   #335 = MethodType         #331         //  (Ljava/lang/Object;)Lscala/None$;
   #336 = InvokeDynamic      #7:#289      // #7:apply:()Lscala/Function1;
   #337 = Utf8               $anonfun$number$3
   #338 = Utf8               (Largonaut/JsonNumber;)Lscala/Some;
   #339 = NameAndType        #337:#338    // $anonfun$number$3:(Largonaut/JsonNumber;)Lscala/Some;
   #340 = Methodref          #2.#339      // argonaut/Json.$anonfun$number$3:(Largonaut/JsonNumber;)Lscala/Some;
   #341 = MethodHandle       6:#340       // REF_invokeStatic argonaut/Json.$anonfun$number$3:(Largonaut/JsonNumber;)Lscala/Some;
   #342 = MethodType         #338         //  (Largonaut/JsonNumber;)Lscala/Some;
   #343 = InvokeDynamic      #8:#289      // #8:apply:()Lscala/Function1;
   #344 = Utf8               $anonfun$number$4
   #345 = NameAndType        #344:#299    // $anonfun$number$4:(Ljava/lang/String;)Lscala/None$;
   #346 = Methodref          #2.#345      // argonaut/Json.$anonfun$number$4:(Ljava/lang/String;)Lscala/None$;
   #347 = MethodHandle       6:#346       // REF_invokeStatic argonaut/Json.$anonfun$number$4:(Ljava/lang/String;)Lscala/None$;
   #348 = InvokeDynamic      #9:#289      // #9:apply:()Lscala/Function1;
   #349 = Utf8               $anonfun$number$5
   #350 = NameAndType        #349:#306    // $anonfun$number$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #351 = Methodref          #2.#350      // argonaut/Json.$anonfun$number$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #352 = MethodHandle       6:#351       // REF_invokeStatic argonaut/Json.$anonfun$number$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #353 = InvokeDynamic      #10:#289     // #10:apply:()Lscala/Function1;
   #354 = Utf8               $anonfun$number$6
   #355 = NameAndType        #354:#313    // $anonfun$number$6:(Largonaut/JsonObject;)Lscala/None$;
   #356 = Methodref          #2.#355      // argonaut/Json.$anonfun$number$6:(Largonaut/JsonObject;)Lscala/None$;
   #357 = MethodHandle       6:#356       // REF_invokeStatic argonaut/Json.$anonfun$number$6:(Largonaut/JsonObject;)Lscala/None$;
   #358 = InvokeDynamic      #11:#289     // #11:apply:()Lscala/Function1;
   #359 = Utf8               string
   #360 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
   #361 = Utf8               $anonfun$string$1
   #362 = NameAndType        #361:#265    // $anonfun$string$1:()Lscala/None$;
   #363 = Methodref          #2.#362      // argonaut/Json.$anonfun$string$1:()Lscala/None$;
   #364 = MethodHandle       6:#363       // REF_invokeStatic argonaut/Json.$anonfun$string$1:()Lscala/None$;
   #365 = InvokeDynamic      #12:#280     // #12:apply:()Lscala/Function0;
   #366 = Utf8               $anonfun$string$2$adapted
   #367 = NameAndType        #366:#331    // $anonfun$string$2$adapted:(Ljava/lang/Object;)Lscala/None$;
   #368 = Methodref          #2.#367      // argonaut/Json.$anonfun$string$2$adapted:(Ljava/lang/Object;)Lscala/None$;
   #369 = MethodHandle       6:#368       // REF_invokeStatic argonaut/Json.$anonfun$string$2$adapted:(Ljava/lang/Object;)Lscala/None$;
   #370 = InvokeDynamic      #13:#289     // #13:apply:()Lscala/Function1;
   #371 = Utf8               $anonfun$string$3
   #372 = NameAndType        #371:#292    // $anonfun$string$3:(Largonaut/JsonNumber;)Lscala/None$;
   #373 = Methodref          #2.#372      // argonaut/Json.$anonfun$string$3:(Largonaut/JsonNumber;)Lscala/None$;
   #374 = MethodHandle       6:#373       // REF_invokeStatic argonaut/Json.$anonfun$string$3:(Largonaut/JsonNumber;)Lscala/None$;
   #375 = InvokeDynamic      #14:#289     // #14:apply:()Lscala/Function1;
   #376 = Utf8               $anonfun$string$4
   #377 = Utf8               (Ljava/lang/String;)Lscala/Some;
   #378 = NameAndType        #376:#377    // $anonfun$string$4:(Ljava/lang/String;)Lscala/Some;
   #379 = Methodref          #2.#378      // argonaut/Json.$anonfun$string$4:(Ljava/lang/String;)Lscala/Some;
   #380 = MethodHandle       6:#379       // REF_invokeStatic argonaut/Json.$anonfun$string$4:(Ljava/lang/String;)Lscala/Some;
   #381 = MethodType         #377         //  (Ljava/lang/String;)Lscala/Some;
   #382 = InvokeDynamic      #15:#289     // #15:apply:()Lscala/Function1;
   #383 = Utf8               $anonfun$string$5
   #384 = NameAndType        #383:#306    // $anonfun$string$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #385 = Methodref          #2.#384      // argonaut/Json.$anonfun$string$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #386 = MethodHandle       6:#385       // REF_invokeStatic argonaut/Json.$anonfun$string$5:(Lscala/collection/immutable/List;)Lscala/None$;
   #387 = InvokeDynamic      #16:#289     // #16:apply:()Lscala/Function1;
   #388 = Utf8               $anonfun$string$6
   #389 = NameAndType        #388:#313    // $anonfun$string$6:(Largonaut/JsonObject;)Lscala/None$;
   #390 = Methodref          #2.#389      // argonaut/Json.$anonfun$string$6:(Largonaut/JsonObject;)Lscala/None$;
   #391 = MethodHandle       6:#390       // REF_invokeStatic argonaut/Json.$anonfun$string$6:(Largonaut/JsonObject;)Lscala/None$;
   #392 = InvokeDynamic      #17:#289     // #17:apply:()Lscala/Function1;
   #393 = Utf8               array
   #394 = Utf8               ()Lscala/Option<Lscala/collection/immutable/List<Largonaut/Json;>;>;
   #395 = Utf8               $anonfun$array$1
   #396 = NameAndType        #395:#265    // $anonfun$array$1:()Lscala/None$;
   #397 = Methodref          #2.#396      // argonaut/Json.$anonfun$array$1:()Lscala/None$;
   #398 = MethodHandle       6:#397       // REF_invokeStatic argonaut/Json.$anonfun$array$1:()Lscala/None$;
   #399 = InvokeDynamic      #18:#280     // #18:apply:()Lscala/Function0;
   #400 = Utf8               $anonfun$array$2
   #401 = Utf8               (Lscala/collection/immutable/List;)Lscala/Some;
   #402 = NameAndType        #400:#401    // $anonfun$array$2:(Lscala/collection/immutable/List;)Lscala/Some;
   #403 = Methodref          #2.#402      // argonaut/Json.$anonfun$array$2:(Lscala/collection/immutable/List;)Lscala/Some;
   #404 = MethodHandle       6:#403       // REF_invokeStatic argonaut/Json.$anonfun$array$2:(Lscala/collection/immutable/List;)Lscala/Some;
   #405 = MethodType         #401         //  (Lscala/collection/immutable/List;)Lscala/Some;
   #406 = InvokeDynamic      #19:#289     // #19:apply:()Lscala/Function1;
   #407 = Utf8               $anonfun$array$3
   #408 = NameAndType        #407:#313    // $anonfun$array$3:(Largonaut/JsonObject;)Lscala/None$;
   #409 = Methodref          #2.#408      // argonaut/Json.$anonfun$array$3:(Largonaut/JsonObject;)Lscala/None$;
   #410 = MethodHandle       6:#409       // REF_invokeStatic argonaut/Json.$anonfun$array$3:(Largonaut/JsonObject;)Lscala/None$;
   #411 = InvokeDynamic      #20:#289     // #20:apply:()Lscala/Function1;
   #412 = NameAndType        #229:#230    // arrayOrObject:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #413 = Methodref          #2.#412      // argonaut/Json.arrayOrObject:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #414 = Utf8               obj
   #415 = Utf8               ()Lscala/Option<Largonaut/JsonObject;>;
   #416 = Utf8               $anonfun$obj$1
   #417 = NameAndType        #416:#265    // $anonfun$obj$1:()Lscala/None$;
   #418 = Methodref          #2.#417      // argonaut/Json.$anonfun$obj$1:()Lscala/None$;
   #419 = MethodHandle       6:#418       // REF_invokeStatic argonaut/Json.$anonfun$obj$1:()Lscala/None$;
   #420 = InvokeDynamic      #21:#280     // #21:apply:()Lscala/Function0;
   #421 = Utf8               $anonfun$obj$2
   #422 = NameAndType        #421:#306    // $anonfun$obj$2:(Lscala/collection/immutable/List;)Lscala/None$;
   #423 = Methodref          #2.#422      // argonaut/Json.$anonfun$obj$2:(Lscala/collection/immutable/List;)Lscala/None$;
   #424 = MethodHandle       6:#423       // REF_invokeStatic argonaut/Json.$anonfun$obj$2:(Lscala/collection/immutable/List;)Lscala/None$;
   #425 = InvokeDynamic      #22:#289     // #22:apply:()Lscala/Function1;
   #426 = Utf8               $anonfun$obj$3
   #427 = Utf8               (Largonaut/JsonObject;)Lscala/Some;
   #428 = NameAndType        #426:#427    // $anonfun$obj$3:(Largonaut/JsonObject;)Lscala/Some;
   #429 = Methodref          #2.#428      // argonaut/Json.$anonfun$obj$3:(Largonaut/JsonObject;)Lscala/Some;
   #430 = MethodHandle       6:#429       // REF_invokeStatic argonaut/Json.$anonfun$obj$3:(Largonaut/JsonObject;)Lscala/Some;
   #431 = MethodType         #427         //  (Largonaut/JsonObject;)Lscala/Some;
   #432 = InvokeDynamic      #23:#289     // #23:apply:()Lscala/Function1;
   #433 = Utf8               assoc
   #434 = Utf8               ()Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;>;
   #435 = NameAndType        #414:#261    // obj:()Lscala/Option;
   #436 = Methodref          #2.#435      // argonaut/Json.obj:()Lscala/Option;
   #437 = Utf8               $anonfun$assoc$1
   #438 = Utf8               (Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #439 = NameAndType        #437:#438    // $anonfun$assoc$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #440 = Methodref          #2.#439      // argonaut/Json.$anonfun$assoc$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #441 = MethodHandle       6:#440       // REF_invokeStatic argonaut/Json.$anonfun$assoc$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #442 = MethodType         #438         //  (Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #443 = InvokeDynamic      #24:#289     // #24:apply:()Lscala/Function1;
   #444 = Utf8               map
   #445 = Utf8               (Lscala/Function1;)Lscala/Option;
   #446 = NameAndType        #444:#445    // map:(Lscala/Function1;)Lscala/Option;
   #447 = Methodref          #322.#446    // scala/Option.map:(Lscala/Function1;)Lscala/Option;
   #448 = Utf8               not
   #449 = Utf8               (Z)V
   #450 = NameAndType        #218:#449    // "<init>":(Z)V
   #451 = Methodref          #178.#450    // argonaut/JBool."<init>":(Z)V
   #452 = Utf8               withNumber
   #453 = Utf8               (Lscala/Function1;)Largonaut/Json;
   #454 = Utf8               (Lscala/Function1<Largonaut/JsonNumber;Largonaut/JsonNumber;>;)Largonaut/Json;
   #455 = Utf8               argonaut/JsonNumber
   #456 = Class              #455         // argonaut/JsonNumber
   #457 = Utf8               (Largonaut/JsonNumber;)V
   #458 = NameAndType        #218:#457    // "<init>":(Largonaut/JsonNumber;)V
   #459 = Methodref          #195.#458    // argonaut/JNumber."<init>":(Largonaut/JsonNumber;)V
   #460 = Utf8               withString
   #461 = Utf8               (Lscala/Function1<Ljava/lang/String;Ljava/lang/String;>;)Largonaut/Json;
   #462 = Utf8               java/lang/String
   #463 = Class              #462         // java/lang/String
   #464 = Utf8               (Ljava/lang/String;)V
   #465 = NameAndType        #218:#464    // "<init>":(Ljava/lang/String;)V
   #466 = Methodref          #200.#465    // argonaut/JString."<init>":(Ljava/lang/String;)V
   #467 = Utf8               withArray
   #468 = Utf8               (Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;Lscala/collection/immutable/List<Largonaut/Json;>;>;)Largonaut/Json;
   #469 = Utf8               scala/collection/immutable/List
   #470 = Class              #469         // scala/collection/immutable/List
   #471 = Utf8               (Lscala/collection/immutable/List;)V
   #472 = NameAndType        #218:#471    // "<init>":(Lscala/collection/immutable/List;)V
   #473 = Methodref          #205.#472    // argonaut/JArray."<init>":(Lscala/collection/immutable/List;)V
   #474 = Utf8               withObject
   #475 = Utf8               (Lscala/Function1<Largonaut/JsonObject;Largonaut/JsonObject;>;)Largonaut/Json;
   #476 = Utf8               argonaut/JsonObject
   #477 = Class              #476         // argonaut/JsonObject
   #478 = Utf8               (Largonaut/JsonObject;)V
   #479 = NameAndType        #218:#478    // "<init>":(Largonaut/JsonObject;)V
   #480 = Methodref          #211.#479    // argonaut/JObject."<init>":(Largonaut/JsonObject;)V
   #481 = Utf8               $minus$greater$colon
   #482 = Utf8               (Lscala/Tuple2;)Largonaut/Json;
   #483 = Utf8               (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;)Largonaut/Json;
   #484 = Utf8               $anonfun$$minus$greater$colon$1
   #485 = Utf8               (Lscala/Tuple2;Largonaut/JsonObject;)Largonaut/JsonObject;
   #486 = NameAndType        #484:#485    // $anonfun$$minus$greater$colon$1:(Lscala/Tuple2;Largonaut/JsonObject;)Largonaut/JsonObject;
   #487 = Methodref          #2.#486      // argonaut/Json.$anonfun$$minus$greater$colon$1:(Lscala/Tuple2;Largonaut/JsonObject;)Largonaut/JsonObject;
   #488 = MethodHandle       6:#487       // REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$colon$1:(Lscala/Tuple2;Largonaut/JsonObject;)Largonaut/JsonObject;
   #489 = Utf8               (Largonaut/JsonObject;)Largonaut/JsonObject;
   #490 = MethodType         #489         //  (Largonaut/JsonObject;)Largonaut/JsonObject;
   #491 = Utf8               (Lscala/Tuple2;)Lscala/Function1;
   #492 = NameAndType        #18:#491     // apply:(Lscala/Tuple2;)Lscala/Function1;
   #493 = InvokeDynamic      #25:#492     // #25:apply:(Lscala/Tuple2;)Lscala/Function1;
   #494 = NameAndType        #474:#453    // withObject:(Lscala/Function1;)Largonaut/Json;
   #495 = Methodref          #2.#494      // argonaut/Json.withObject:(Lscala/Function1;)Largonaut/Json;
   #496 = Utf8               Lscala/Tuple2;
   #497 = Utf8               $minus$greater$qmark$colon
   #498 = Utf8               (Lscala/Option;)Largonaut/Json;
   #499 = Utf8               (Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
   #500 = Utf8               $anonfun$$minus$greater$qmark$colon$1
   #501 = Utf8               (Largonaut/Json;Lscala/Tuple2;)Largonaut/Json;
   #502 = NameAndType        #500:#501    // $anonfun$$minus$greater$qmark$colon$1:(Largonaut/Json;Lscala/Tuple2;)Largonaut/Json;
   #503 = Methodref          #2.#502      // argonaut/Json.$anonfun$$minus$greater$qmark$colon$1:(Largonaut/Json;Lscala/Tuple2;)Largonaut/Json;
   #504 = MethodHandle       6:#503       // REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$qmark$colon$1:(Largonaut/Json;Lscala/Tuple2;)Largonaut/Json;
   #505 = MethodType         #482         //  (Lscala/Tuple2;)Largonaut/Json;
   #506 = Utf8               (Largonaut/Json;)Lscala/Function1;
   #507 = NameAndType        #18:#506     // apply:(Largonaut/Json;)Lscala/Function1;
   #508 = InvokeDynamic      #26:#507     // #26:apply:(Largonaut/Json;)Lscala/Function1;
   #509 = Utf8               $anonfun$$minus$greater$qmark$colon$2
   #510 = NameAndType        #509:#55     // $anonfun$$minus$greater$qmark$colon$2:(Largonaut/Json;)Largonaut/Json;
   #511 = Methodref          #2.#510      // argonaut/Json.$anonfun$$minus$greater$qmark$colon$2:(Largonaut/Json;)Largonaut/Json;
   #512 = MethodHandle       6:#511       // REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$qmark$colon$2:(Largonaut/Json;)Largonaut/Json;
   #513 = MethodType         #46          //  ()Largonaut/Json;
   #514 = Utf8               (Largonaut/Json;)Lscala/Function0;
   #515 = NameAndType        #18:#514     // apply:(Largonaut/Json;)Lscala/Function0;
   #516 = InvokeDynamic      #27:#515     // #27:apply:(Largonaut/Json;)Lscala/Function0;
   #517 = Utf8               getOrElse
   #518 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #519 = NameAndType        #517:#518    // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #520 = Methodref          #322.#519    // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #521 = Utf8               Lscala/Option;
   #522 = Utf8               $minus$minus$greater$greater$colon
   #523 = Utf8               $anonfun$$minus$minus$greater$greater$colon$1
   #524 = Utf8               (Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #525 = NameAndType        #523:#524    // $anonfun$$minus$minus$greater$greater$colon$1:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #526 = Methodref          #2.#525      // argonaut/Json.$anonfun$$minus$minus$greater$greater$colon$1:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #527 = MethodHandle       6:#526       // REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$colon$1:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #528 = Utf8               (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #529 = MethodType         #528         //  (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #530 = InvokeDynamic      #28:#507     // #28:apply:(Largonaut/Json;)Lscala/Function1;
   #531 = NameAndType        #467:#453    // withArray:(Lscala/Function1;)Largonaut/Json;
   #532 = Methodref          #2.#531      // argonaut/Json.withArray:(Lscala/Function1;)Largonaut/Json;
   #533 = Utf8               $minus$minus$greater$greater$qmark$colon
   #534 = Utf8               (Lscala/Option<Largonaut/Json;>;)Largonaut/Json;
   #535 = Utf8               $anonfun$$minus$minus$greater$greater$qmark$colon$1
   #536 = Utf8               (Largonaut/Json;Largonaut/Json;)Largonaut/Json;
   #537 = NameAndType        #535:#536    // $anonfun$$minus$minus$greater$greater$qmark$colon$1:(Largonaut/Json;Largonaut/Json;)Largonaut/Json;
   #538 = Methodref          #2.#537      // argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$1:(Largonaut/Json;Largonaut/Json;)Largonaut/Json;
   #539 = MethodHandle       6:#538       // REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$1:(Largonaut/Json;Largonaut/Json;)Largonaut/Json;
   #540 = MethodType         #55          //  (Largonaut/Json;)Largonaut/Json;
   #541 = InvokeDynamic      #29:#507     // #29:apply:(Largonaut/Json;)Lscala/Function1;
   #542 = Utf8               $anonfun$$minus$minus$greater$greater$qmark$colon$3
   #543 = NameAndType        #542:#55     // $anonfun$$minus$minus$greater$greater$qmark$colon$3:(Largonaut/Json;)Largonaut/Json;
   #544 = Methodref          #2.#543      // argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$3:(Largonaut/Json;)Largonaut/Json;
   #545 = MethodHandle       6:#544       // REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$3:(Largonaut/Json;)Largonaut/Json;
   #546 = InvokeDynamic      #30:#515     // #30:apply:(Largonaut/Json;)Lscala/Function0;
   #547 = Utf8               $minus$bar
   #548 = Utf8               (Lscala/Function0;)Lscala/Option;
   #549 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
   #550 = Utf8               f
   #551 = Utf8               field
   #552 = NameAndType        #551:#548    // field:(Lscala/Function0;)Lscala/Option;
   #553 = Methodref          #2.#552      // argonaut/Json.field:(Lscala/Function0;)Lscala/Option;
   #554 = Utf8               $minus$bar$bar
   #555 = Utf8               (Lscala/collection/immutable/List;)Lscala/Option;
   #556 = Utf8               (Lscala/collection/immutable/List<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
   #557 = Utf8               fs
   #558 = Utf8               scala/collection/immutable/Nil$
   #559 = Class              #558         // scala/collection/immutable/Nil$
   #560 = Utf8               Lscala/collection/immutable/Nil$;
   #561 = NameAndType        #24:#560     // MODULE$:Lscala/collection/immutable/Nil$;
   #562 = Fieldref           #559.#561    // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #563 = Utf8               scala/None$
   #564 = Class              #563         // scala/None$
   #565 = Utf8               Lscala/None$;
   #566 = NameAndType        #24:#565     // MODULE$:Lscala/None$;
   #567 = Fieldref           #564.#566    // scala/None$.MODULE$:Lscala/None$;
   #568 = Utf8               scala/collection/immutable/$colon$colon
   #569 = Class              #568         // scala/collection/immutable/$colon$colon
   #570 = Utf8               head
   #571 = NameAndType        #570:#174    // head:()Ljava/lang/Object;
   #572 = Methodref          #569.#571    // scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
   #573 = Utf8               next$access$1
   #574 = NameAndType        #573:#207    // next$access$1:()Lscala/collection/immutable/List;
   #575 = Methodref          #569.#574    // scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
   #576 = Utf8               $anonfun$$minus$bar$bar$1
   #577 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #578 = NameAndType        #576:#577    // $anonfun$$minus$bar$bar$1:(Ljava/lang/String;)Ljava/lang/String;
   #579 = Methodref          #2.#578      // argonaut/Json.$anonfun$$minus$bar$bar$1:(Ljava/lang/String;)Ljava/lang/String;
   #580 = MethodHandle       6:#579       // REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$1:(Ljava/lang/String;)Ljava/lang/String;
   #581 = MethodType         #137         //  ()Ljava/lang/String;
   #582 = Utf8               (Ljava/lang/String;)Lscala/Function0;
   #583 = NameAndType        #18:#582     // apply:(Ljava/lang/String;)Lscala/Function0;
   #584 = InvokeDynamic      #31:#583     // #31:apply:(Ljava/lang/String;)Lscala/Function0;
   #585 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #586 = MethodType         #585         //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #587 = Utf8               $anonfun$$minus$bar$bar$2
   #588 = Utf8               (Lscala/Option;Ljava/lang/String;)Lscala/Option;
   #589 = NameAndType        #587:#588    // $anonfun$$minus$bar$bar$2:(Lscala/Option;Ljava/lang/String;)Lscala/Option;
   #590 = Methodref          #2.#589      // argonaut/Json.$anonfun$$minus$bar$bar$2:(Lscala/Option;Ljava/lang/String;)Lscala/Option;
   #591 = MethodHandle       6:#590       // REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$2:(Lscala/Option;Ljava/lang/String;)Lscala/Option;
   #592 = MethodType         #588         //  (Lscala/Option;Ljava/lang/String;)Lscala/Option;
   #593 = Utf8               ()Lscala/Function2;
   #594 = NameAndType        #18:#593     // apply:()Lscala/Function2;
   #595 = InvokeDynamic      #32:#594     // #32:apply:()Lscala/Function2;
   #596 = Utf8               foldLeft
   #597 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #598 = NameAndType        #596:#597    // foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #599 = Methodref          #470.#598    // scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #600 = Utf8               h
   #601 = Utf8               t
   #602 = Utf8               isTrue
   #603 = NameAndType        #260:#261    // bool:()Lscala/Option;
   #604 = Methodref          #2.#603      // argonaut/Json.bool:()Lscala/Option;
   #605 = Utf8               $anonfun$isTrue$1$adapted
   #606 = NameAndType        #605:#191    // $anonfun$isTrue$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #607 = Methodref          #2.#606      // argonaut/Json.$anonfun$isTrue$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #608 = MethodHandle       6:#607       // REF_invokeStatic argonaut/Json.$anonfun$isTrue$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #609 = InvokeDynamic      #33:#289     // #33:apply:()Lscala/Function1;
   #610 = Utf8               exists
   #611 = Utf8               (Lscala/Function1;)Z
   #612 = NameAndType        #610:#611    // exists:(Lscala/Function1;)Z
   #613 = Methodref          #322.#612    // scala/Option.exists:(Lscala/Function1;)Z
   #614 = Utf8               isFalse
   #615 = Utf8               $anonfun$isFalse$1$adapted
   #616 = NameAndType        #615:#191    // $anonfun$isFalse$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #617 = Methodref          #2.#616      // argonaut/Json.$anonfun$isFalse$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #618 = MethodHandle       6:#617       // REF_invokeStatic argonaut/Json.$anonfun$isFalse$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #619 = InvokeDynamic      #34:#289     // #34:apply:()Lscala/Function1;
   #620 = Utf8               isBool
   #621 = Utf8               isDefined
   #622 = NameAndType        #621:#180    // isDefined:()Z
   #623 = Methodref          #322.#622    // scala/Option.isDefined:()Z
   #624 = Utf8               isNumber
   #625 = NameAndType        #323:#261    // number:()Lscala/Option;
   #626 = Methodref          #2.#625      // argonaut/Json.number:()Lscala/Option;
   #627 = Utf8               isString
   #628 = NameAndType        #359:#261    // string:()Lscala/Option;
   #629 = Methodref          #2.#628      // argonaut/Json.string:()Lscala/Option;
   #630 = Utf8               isArray
   #631 = NameAndType        #393:#261    // array:()Lscala/Option;
   #632 = Methodref          #2.#631      // argonaut/Json.array:()Lscala/Option;
   #633 = Utf8               isObject
   #634 = Utf8               numberOr
   #635 = Utf8               (Lscala/Function0;)Largonaut/JsonNumber;
   #636 = Utf8               (Lscala/Function0<Largonaut/JsonNumber;>;)Largonaut/JsonNumber;
   #637 = Utf8               d
   #638 = Utf8               stringOr
   #639 = Utf8               (Lscala/Function0;)Ljava/lang/String;
   #640 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Ljava/lang/String;
   #641 = Utf8               arrayOr
   #642 = Utf8               (Lscala/Function0;)Lscala/collection/immutable/List;
   #643 = Utf8               (Lscala/Function0<Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/collection/immutable/List<Largonaut/Json;>;
   #644 = Utf8               objectOr
   #645 = Utf8               (Lscala/Function0;)Largonaut/JsonObject;
   #646 = Utf8               (Lscala/Function0<Largonaut/JsonObject;>;)Largonaut/JsonObject;
   #647 = Utf8               numberOrZero
   #648 = Utf8               $anonfun$numberOrZero$1
   #649 = Utf8               ()Largonaut/JsonLong;
   #650 = NameAndType        #648:#649    // $anonfun$numberOrZero$1:()Largonaut/JsonLong;
   #651 = Methodref          #2.#650      // argonaut/Json.$anonfun$numberOrZero$1:()Largonaut/JsonLong;
   #652 = MethodHandle       6:#651       // REF_invokeStatic argonaut/Json.$anonfun$numberOrZero$1:()Largonaut/JsonLong;
   #653 = MethodType         #649         //  ()Largonaut/JsonLong;
   #654 = InvokeDynamic      #35:#280     // #35:apply:()Lscala/Function0;
   #655 = NameAndType        #634:#635    // numberOr:(Lscala/Function0;)Largonaut/JsonNumber;
   #656 = Methodref          #2.#655      // argonaut/Json.numberOr:(Lscala/Function0;)Largonaut/JsonNumber;
   #657 = Utf8               stringOrEmpty
   #658 = Utf8               $anonfun$stringOrEmpty$1
   #659 = NameAndType        #658:#137    // $anonfun$stringOrEmpty$1:()Ljava/lang/String;
   #660 = Methodref          #2.#659      // argonaut/Json.$anonfun$stringOrEmpty$1:()Ljava/lang/String;
   #661 = MethodHandle       6:#660       // REF_invokeStatic argonaut/Json.$anonfun$stringOrEmpty$1:()Ljava/lang/String;
   #662 = InvokeDynamic      #36:#280     // #36:apply:()Lscala/Function0;
   #663 = NameAndType        #638:#639    // stringOr:(Lscala/Function0;)Ljava/lang/String;
   #664 = Methodref          #2.#663      // argonaut/Json.stringOr:(Lscala/Function0;)Ljava/lang/String;
   #665 = Utf8               arrayOrEmpty
   #666 = Utf8               ()Lscala/collection/immutable/List<Largonaut/Json;>;
   #667 = Utf8               $anonfun$arrayOrEmpty$1
   #668 = Utf8               ()Lscala/collection/immutable/Nil$;
   #669 = NameAndType        #667:#668    // $anonfun$arrayOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #670 = Methodref          #2.#669      // argonaut/Json.$anonfun$arrayOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #671 = MethodHandle       6:#670       // REF_invokeStatic argonaut/Json.$anonfun$arrayOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #672 = MethodType         #668         //  ()Lscala/collection/immutable/Nil$;
   #673 = InvokeDynamic      #37:#280     // #37:apply:()Lscala/Function0;
   #674 = NameAndType        #641:#642    // arrayOr:(Lscala/Function0;)Lscala/collection/immutable/List;
   #675 = Methodref          #2.#674      // argonaut/Json.arrayOr:(Lscala/Function0;)Lscala/collection/immutable/List;
   #676 = Utf8               objectOrEmpty
   #677 = Utf8               $anonfun$objectOrEmpty$1
   #678 = NameAndType        #677:#213    // $anonfun$objectOrEmpty$1:()Largonaut/JsonObject;
   #679 = Methodref          #2.#678      // argonaut/Json.$anonfun$objectOrEmpty$1:()Largonaut/JsonObject;
   #680 = MethodHandle       6:#679       // REF_invokeStatic argonaut/Json.$anonfun$objectOrEmpty$1:()Largonaut/JsonObject;
   #681 = MethodType         #213         //  ()Largonaut/JsonObject;
   #682 = InvokeDynamic      #38:#280     // #38:apply:()Lscala/Function0;
   #683 = NameAndType        #644:#645    // objectOr:(Lscala/Function0;)Largonaut/JsonObject;
   #684 = Methodref          #2.#683      // argonaut/Json.objectOr:(Lscala/Function0;)Largonaut/JsonObject;
   #685 = Utf8               objectFields
   #686 = Utf8               ()Lscala/Option<Lscala/collection/immutable/List<Ljava/lang/String;>;>;
   #687 = Utf8               $anonfun$objectFields$1
   #688 = NameAndType        #687:#438    // $anonfun$objectFields$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #689 = Methodref          #2.#688      // argonaut/Json.$anonfun$objectFields$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #690 = MethodHandle       6:#689       // REF_invokeStatic argonaut/Json.$anonfun$objectFields$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #691 = InvokeDynamic      #39:#289     // #39:apply:()Lscala/Function1;
   #692 = Utf8               objectFieldsOr
   #693 = Utf8               (Lscala/Function0<Lscala/collection/immutable/List<Ljava/lang/String;>;>;)Lscala/collection/immutable/List<Ljava/lang/String;>;
   #694 = NameAndType        #685:#261    // objectFields:()Lscala/Option;
   #695 = Methodref          #2.#694      // argonaut/Json.objectFields:()Lscala/Option;
   #696 = Utf8               objectFieldsOrEmpty
   #697 = Utf8               ()Lscala/collection/immutable/List<Ljava/lang/String;>;
   #698 = Utf8               $anonfun$objectFieldsOrEmpty$1
   #699 = NameAndType        #698:#668    // $anonfun$objectFieldsOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #700 = Methodref          #2.#699      // argonaut/Json.$anonfun$objectFieldsOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #701 = MethodHandle       6:#700       // REF_invokeStatic argonaut/Json.$anonfun$objectFieldsOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #702 = InvokeDynamic      #40:#280     // #40:apply:()Lscala/Function0;
   #703 = NameAndType        #692:#642    // objectFieldsOr:(Lscala/Function0;)Lscala/collection/immutable/List;
   #704 = Methodref          #2.#703      // argonaut/Json.objectFieldsOr:(Lscala/Function0;)Lscala/collection/immutable/List;
   #705 = Utf8               objectValues
   #706 = Utf8               $anonfun$objectValues$1
   #707 = NameAndType        #706:#438    // $anonfun$objectValues$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #708 = Methodref          #2.#707      // argonaut/Json.$anonfun$objectValues$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #709 = MethodHandle       6:#708       // REF_invokeStatic argonaut/Json.$anonfun$objectValues$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
   #710 = InvokeDynamic      #41:#289     // #41:apply:()Lscala/Function1;
   #711 = Utf8               objectValuesOr
   #712 = NameAndType        #705:#261    // objectValues:()Lscala/Option;
   #713 = Methodref          #2.#712      // argonaut/Json.objectValues:()Lscala/Option;
   #714 = Utf8               objectValuesOrEmpty
   #715 = Utf8               $anonfun$objectValuesOrEmpty$1
   #716 = NameAndType        #715:#668    // $anonfun$objectValuesOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #717 = Methodref          #2.#716      // argonaut/Json.$anonfun$objectValuesOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #718 = MethodHandle       6:#717       // REF_invokeStatic argonaut/Json.$anonfun$objectValuesOrEmpty$1:()Lscala/collection/immutable/Nil$;
   #719 = InvokeDynamic      #42:#280     // #42:apply:()Lscala/Function0;
   #720 = NameAndType        #711:#642    // objectValuesOr:(Lscala/Function0;)Lscala/collection/immutable/List;
   #721 = Methodref          #2.#720      // argonaut/Json.objectValuesOr:(Lscala/Function0;)Lscala/collection/immutable/List;
   #722 = Utf8               hasField
   #723 = Utf8               (Lscala/Function0;)Z
   #724 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Z
   #725 = Utf8               $anonfun$hasField$1$adapted
   #726 = Utf8               (Lscala/Function0;Largonaut/JsonObject;)Ljava/lang/Object;
   #727 = NameAndType        #725:#726    // $anonfun$hasField$1$adapted:(Lscala/Function0;Largonaut/JsonObject;)Ljava/lang/Object;
   #728 = Methodref          #2.#727      // argonaut/Json.$anonfun$hasField$1$adapted:(Lscala/Function0;Largonaut/JsonObject;)Ljava/lang/Object;
   #729 = MethodHandle       6:#728       // REF_invokeStatic argonaut/Json.$anonfun$hasField$1$adapted:(Lscala/Function0;Largonaut/JsonObject;)Ljava/lang/Object;
   #730 = Utf8               (Largonaut/JsonObject;)Ljava/lang/Object;
   #731 = MethodType         #730         //  (Largonaut/JsonObject;)Ljava/lang/Object;
   #732 = Utf8               (Lscala/Function0;)Lscala/Function1;
   #733 = NameAndType        #18:#732     // apply:(Lscala/Function0;)Lscala/Function1;
   #734 = InvokeDynamic      #43:#733     // #43:apply:(Lscala/Function0;)Lscala/Function1;
   #735 = Utf8               $anonfun$field$1
   #736 = Utf8               (Lscala/Function0;Largonaut/JsonObject;)Lscala/Option;
   #737 = NameAndType        #735:#736    // $anonfun$field$1:(Lscala/Function0;Largonaut/JsonObject;)Lscala/Option;
   #738 = Methodref          #2.#737      // argonaut/Json.$anonfun$field$1:(Lscala/Function0;Largonaut/JsonObject;)Lscala/Option;
   #739 = MethodHandle       6:#738       // REF_invokeStatic argonaut/Json.$anonfun$field$1:(Lscala/Function0;Largonaut/JsonObject;)Lscala/Option;
   #740 = Utf8               (Largonaut/JsonObject;)Lscala/Option;
   #741 = MethodType         #740         //  (Largonaut/JsonObject;)Lscala/Option;
   #742 = InvokeDynamic      #44:#733     // #44:apply:(Lscala/Function0;)Lscala/Function1;
   #743 = Utf8               flatMap
   #744 = NameAndType        #743:#445    // flatMap:(Lscala/Function1;)Lscala/Option;
   #745 = Methodref          #322.#744    // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
   #746 = Utf8               fieldOr
   #747 = Utf8               (Lscala/Function0;Lscala/Function0;)Largonaut/Json;
   #748 = Utf8               (Lscala/Function0<Ljava/lang/String;>;Lscala/Function0<Largonaut/Json;>;)Largonaut/Json;
   #749 = Utf8               fieldOrNull
   #750 = Utf8               (Lscala/Function0;)Largonaut/Json;
   #751 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
   #752 = Utf8               $anonfun$fieldOrNull$1
   #753 = NameAndType        #752:#46     // $anonfun$fieldOrNull$1:()Largonaut/Json;
   #754 = Methodref          #2.#753      // argonaut/Json.$anonfun$fieldOrNull$1:()Largonaut/Json;
   #755 = MethodHandle       6:#754       // REF_invokeStatic argonaut/Json.$anonfun$fieldOrNull$1:()Largonaut/Json;
   #756 = InvokeDynamic      #45:#280     // #45:apply:()Lscala/Function0;
   #757 = NameAndType        #746:#747    // fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
   #758 = Methodref          #2.#757      // argonaut/Json.fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
   #759 = Utf8               fieldOrTrue
   #760 = Utf8               $anonfun$fieldOrTrue$1
   #761 = NameAndType        #760:#46     // $anonfun$fieldOrTrue$1:()Largonaut/Json;
   #762 = Methodref          #2.#761      // argonaut/Json.$anonfun$fieldOrTrue$1:()Largonaut/Json;
   #763 = MethodHandle       6:#762       // REF_invokeStatic argonaut/Json.$anonfun$fieldOrTrue$1:()Largonaut/Json;
   #764 = InvokeDynamic      #46:#280     // #46:apply:()Lscala/Function0;
   #765 = Utf8               fieldOrFalse
   #766 = Utf8               $anonfun$fieldOrFalse$1
   #767 = NameAndType        #766:#46     // $anonfun$fieldOrFalse$1:()Largonaut/Json;
   #768 = Methodref          #2.#767      // argonaut/Json.$anonfun$fieldOrFalse$1:()Largonaut/Json;
   #769 = MethodHandle       6:#768       // REF_invokeStatic argonaut/Json.$anonfun$fieldOrFalse$1:()Largonaut/Json;
   #770 = InvokeDynamic      #47:#280     // #47:apply:()Lscala/Function0;
   #771 = Utf8               fieldOrZero
   #772 = Utf8               $anonfun$fieldOrZero$1
   #773 = NameAndType        #772:#46     // $anonfun$fieldOrZero$1:()Largonaut/Json;
   #774 = Methodref          #2.#773      // argonaut/Json.$anonfun$fieldOrZero$1:()Largonaut/Json;
   #775 = MethodHandle       6:#774       // REF_invokeStatic argonaut/Json.$anonfun$fieldOrZero$1:()Largonaut/Json;
   #776 = InvokeDynamic      #48:#280     // #48:apply:()Lscala/Function0;
   #777 = Utf8               fieldOrEmptyString
   #778 = Utf8               $anonfun$fieldOrEmptyString$1
   #779 = NameAndType        #778:#46     // $anonfun$fieldOrEmptyString$1:()Largonaut/Json;
   #780 = Methodref          #2.#779      // argonaut/Json.$anonfun$fieldOrEmptyString$1:()Largonaut/Json;
   #781 = MethodHandle       6:#780       // REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyString$1:()Largonaut/Json;
   #782 = InvokeDynamic      #49:#280     // #49:apply:()Lscala/Function0;
   #783 = Utf8               fieldOrEmptyArray
   #784 = Utf8               $anonfun$fieldOrEmptyArray$1
   #785 = NameAndType        #784:#46     // $anonfun$fieldOrEmptyArray$1:()Largonaut/Json;
   #786 = Methodref          #2.#785      // argonaut/Json.$anonfun$fieldOrEmptyArray$1:()Largonaut/Json;
   #787 = MethodHandle       6:#786       // REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyArray$1:()Largonaut/Json;
   #788 = InvokeDynamic      #50:#280     // #50:apply:()Lscala/Function0;
   #789 = Utf8               fieldOrEmptyObject
   #790 = Utf8               $anonfun$fieldOrEmptyObject$1
   #791 = NameAndType        #790:#46     // $anonfun$fieldOrEmptyObject$1:()Largonaut/Json;
   #792 = Methodref          #2.#791      // argonaut/Json.$anonfun$fieldOrEmptyObject$1:()Largonaut/Json;
   #793 = MethodHandle       6:#792       // REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyObject$1:()Largonaut/Json;
   #794 = InvokeDynamic      #51:#280     // #51:apply:()Lscala/Function0;
   #795 = Utf8               name
   #796 = Utf8               Null
   #797 = String             #796         // Null
   #798 = Utf8               Boolean
   #799 = String             #798         // Boolean
   #800 = Utf8               Number
   #801 = String             #800         // Number
   #802 = Utf8               String
   #803 = String             #802         // String
   #804 = Utf8               Array
   #805 = String             #804         // Array
   #806 = Utf8               Object
   #807 = String             #806         // Object
   #808 = Utf8               jdecode
   #809 = Utf8               (Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #810 = Utf8               <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<TA;>;
   #811 = Utf8               e
   #812 = NameAndType        #233:#234    // unary_$plus:()Largonaut/Cursor;
   #813 = Methodref          #2.#812      // argonaut/Json.unary_$plus:()Largonaut/Cursor;
   #814 = Utf8               argonaut/DecodeJson
   #815 = Class              #814         // argonaut/DecodeJson
   #816 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult;
   #817 = NameAndType        #18:#816     // apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
   #818 = InterfaceMethodref #815.#817    // argonaut/DecodeJson.apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
   #819 = Utf8               Largonaut/DecodeJson;
   #820 = Utf8               as
   #821 = NameAndType        #808:#809    // jdecode:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #822 = Methodref          #2.#821      // argonaut/Json.jdecode:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #823 = Utf8               pretty
   #824 = Utf8               (Largonaut/PrettyParams;)Ljava/lang/String;
   #825 = Utf8               p
   #826 = Utf8               argonaut/PrettyParams
   #827 = Class              #826         // argonaut/PrettyParams
   #828 = Utf8               (Largonaut/Json;)Ljava/lang/String;
   #829 = NameAndType        #823:#828    // pretty:(Largonaut/Json;)Ljava/lang/String;
   #830 = Methodref          #827.#829    // argonaut/PrettyParams.pretty:(Largonaut/Json;)Ljava/lang/String;
   #831 = Utf8               Largonaut/PrettyParams;
   #832 = Utf8               nospaces
   #833 = Utf8               argonaut/PrettyParams$
   #834 = Class              #833         // argonaut/PrettyParams$
   #835 = Utf8               Largonaut/PrettyParams$;
   #836 = NameAndType        #24:#835     // MODULE$:Largonaut/PrettyParams$;
   #837 = Fieldref           #834.#836    // argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
   #838 = Utf8               nospace
   #839 = Utf8               ()Largonaut/PrettyParams;
   #840 = NameAndType        #838:#839    // nospace:()Largonaut/PrettyParams;
   #841 = Methodref          #834.#840    // argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
   #842 = Utf8               nospacesWithOrder
   #843 = Utf8               copy$default$1
   #844 = NameAndType        #843:#137    // copy$default$1:()Ljava/lang/String;
   #845 = Methodref          #827.#844    // argonaut/PrettyParams.copy$default$1:()Ljava/lang/String;
   #846 = Utf8               copy$default$2
   #847 = NameAndType        #846:#137    // copy$default$2:()Ljava/lang/String;
   #848 = Methodref          #827.#847    // argonaut/PrettyParams.copy$default$2:()Ljava/lang/String;
   #849 = Utf8               copy$default$3
   #850 = NameAndType        #849:#137    // copy$default$3:()Ljava/lang/String;
   #851 = Methodref          #827.#850    // argonaut/PrettyParams.copy$default$3:()Ljava/lang/String;
   #852 = Utf8               copy$default$4
   #853 = NameAndType        #852:#137    // copy$default$4:()Ljava/lang/String;
   #854 = Methodref          #827.#853    // argonaut/PrettyParams.copy$default$4:()Ljava/lang/String;
   #855 = Utf8               copy$default$5
   #856 = NameAndType        #855:#137    // copy$default$5:()Ljava/lang/String;
   #857 = Methodref          #827.#856    // argonaut/PrettyParams.copy$default$5:()Ljava/lang/String;
   #858 = Utf8               copy$default$6
   #859 = NameAndType        #858:#137    // copy$default$6:()Ljava/lang/String;
   #860 = Methodref          #827.#859    // argonaut/PrettyParams.copy$default$6:()Ljava/lang/String;
   #861 = Utf8               copy$default$7
   #862 = NameAndType        #861:#137    // copy$default$7:()Ljava/lang/String;
   #863 = Methodref          #827.#862    // argonaut/PrettyParams.copy$default$7:()Ljava/lang/String;
   #864 = Utf8               copy$default$8
   #865 = NameAndType        #864:#137    // copy$default$8:()Ljava/lang/String;
   #866 = Methodref          #827.#865    // argonaut/PrettyParams.copy$default$8:()Ljava/lang/String;
   #867 = Utf8               copy$default$9
   #868 = NameAndType        #867:#137    // copy$default$9:()Ljava/lang/String;
   #869 = Methodref          #827.#868    // argonaut/PrettyParams.copy$default$9:()Ljava/lang/String;
   #870 = Utf8               copy$default$10
   #871 = NameAndType        #870:#137    // copy$default$10:()Ljava/lang/String;
   #872 = Methodref          #827.#871    // argonaut/PrettyParams.copy$default$10:()Ljava/lang/String;
   #873 = Utf8               copy$default$11
   #874 = NameAndType        #873:#137    // copy$default$11:()Ljava/lang/String;
   #875 = Methodref          #827.#874    // argonaut/PrettyParams.copy$default$11:()Ljava/lang/String;
   #876 = Utf8               copy$default$12
   #877 = NameAndType        #876:#137    // copy$default$12:()Ljava/lang/String;
   #878 = Methodref          #827.#877    // argonaut/PrettyParams.copy$default$12:()Ljava/lang/String;
   #879 = Utf8               copy$default$13
   #880 = NameAndType        #879:#137    // copy$default$13:()Ljava/lang/String;
   #881 = Methodref          #827.#880    // argonaut/PrettyParams.copy$default$13:()Ljava/lang/String;
   #882 = Utf8               copy$default$14
   #883 = NameAndType        #882:#137    // copy$default$14:()Ljava/lang/String;
   #884 = Methodref          #827.#883    // argonaut/PrettyParams.copy$default$14:()Ljava/lang/String;
   #885 = Utf8               copy$default$15
   #886 = NameAndType        #885:#137    // copy$default$15:()Ljava/lang/String;
   #887 = Methodref          #827.#886    // argonaut/PrettyParams.copy$default$15:()Ljava/lang/String;
   #888 = Utf8               copy$default$16
   #889 = NameAndType        #888:#137    // copy$default$16:()Ljava/lang/String;
   #890 = Methodref          #827.#889    // argonaut/PrettyParams.copy$default$16:()Ljava/lang/String;
   #891 = Utf8               copy$default$18
   #892 = NameAndType        #891:#180    // copy$default$18:()Z
   #893 = Methodref          #827.#892    // argonaut/PrettyParams.copy$default$18:()Z
   #894 = Utf8               copy
   #895 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Largonaut/PrettyParams;
   #896 = NameAndType        #894:#895    // copy:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Largonaut/PrettyParams;
   #897 = Methodref          #827.#896    // argonaut/PrettyParams.copy:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Largonaut/PrettyParams;
   #898 = Utf8               x$1
   #899 = Utf8               x$2
   #900 = Utf8               x$3
   #901 = Utf8               x$4
   #902 = Utf8               x$5
   #903 = Utf8               x$6
   #904 = Utf8               x$7
   #905 = Utf8               x$8
   #906 = Utf8               x$9
   #907 = Utf8               x$10
   #908 = Utf8               x$11
   #909 = Utf8               x$12
   #910 = Utf8               x$13
   #911 = Utf8               x$14
   #912 = Utf8               x$15
   #913 = Utf8               x$16
   #914 = Utf8               x$17
   #915 = Utf8               x$18
   #916 = Utf8               spaces2
   #917 = NameAndType        #916:#839    // spaces2:()Largonaut/PrettyParams;
   #918 = Methodref          #834.#917    // argonaut/PrettyParams$.spaces2:()Largonaut/PrettyParams;
   #919 = Utf8               spaces4
   #920 = NameAndType        #919:#839    // spaces4:()Largonaut/PrettyParams;
   #921 = Methodref          #834.#920    // argonaut/PrettyParams$.spaces4:()Largonaut/PrettyParams;
   #922 = Utf8               deepmerge
   #923 = Utf8               y
   #924 = Utf8               scala/Tuple2
   #925 = Class              #924         // scala/Tuple2
   #926 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #927 = NameAndType        #218:#926    // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #928 = Methodref          #925.#927    // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #929 = Utf8               _1
   #930 = NameAndType        #929:#174    // _1:()Ljava/lang/Object;
   #931 = Methodref          #925.#930    // scala/Tuple2._1:()Ljava/lang/Object;
   #932 = Utf8               _2
   #933 = NameAndType        #932:#174    // _2:()Ljava/lang/Object;
   #934 = Methodref          #925.#933    // scala/Tuple2._2:()Ljava/lang/Object;
   #935 = Utf8               scala/Some
   #936 = Class              #935         // scala/Some
   #937 = Utf8               value
   #938 = NameAndType        #937:#174    // value:()Ljava/lang/Object;
   #939 = Methodref          #936.#938    // scala/Some.value:()Ljava/lang/Object;
   #940 = Utf8               toList
   #941 = NameAndType        #940:#207    // toList:()Lscala/collection/immutable/List;
   #942 = Methodref          #477.#941    // argonaut/JsonObject.toList:()Lscala/collection/immutable/List;
   #943 = Utf8               $anonfun$deepmerge$1
   #944 = Utf8               (Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
   #945 = NameAndType        #943:#944    // $anonfun$deepmerge$1:(Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
   #946 = Methodref          #2.#945      // argonaut/Json.$anonfun$deepmerge$1:(Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
   #947 = MethodHandle       6:#946       // REF_invokeStatic argonaut/Json.$anonfun$deepmerge$1:(Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
   #948 = MethodType         #944         //  (Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
   #949 = InvokeDynamic      #52:#594     // #52:apply:()Lscala/Function2;
   #950 = Utf8               oy
   #951 = Utf8               ox
   #952 = Utf8               toString
   #953 = NameAndType        #842:#137    // nospacesWithOrder:()Ljava/lang/String;
   #954 = Methodref          #2.#953      // argonaut/Json.nospacesWithOrder:()Ljava/lang/String;
   #955 = Utf8               $anonfun$bool$2
   #956 = Utf8               (Z)Lscala/Some;
   #957 = Methodref          #936.#220    // scala/Some."<init>":(Ljava/lang/Object;)V
   #958 = Utf8               $anonfun$number$2
   #959 = Utf8               (Z)Lscala/None$;
   #960 = Utf8               $anonfun$string$2
   #961 = Utf8               x$19
   #962 = Utf8               x$20
   #963 = Utf8               k$1
   #964 = Utf8               $plus$colon
   #965 = Utf8               (Lscala/Tuple2;)Largonaut/JsonObject;
   #966 = NameAndType        #964:#965    // $plus$colon:(Lscala/Tuple2;)Largonaut/JsonObject;
   #967 = Methodref          #477.#966    // argonaut/JsonObject.$plus$colon:(Lscala/Tuple2;)Largonaut/JsonObject;
   #968 = Utf8               $this
   #969 = Utf8               x$21
   #970 = NameAndType        #481:#482    // $minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
   #971 = Methodref          #2.#970      // argonaut/Json.$minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
   #972 = Utf8               k$2
   #973 = Utf8               x$22
   #974 = Utf8               $colon$colon
   #975 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/List;
   #976 = NameAndType        #974:#975    // $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   #977 = Methodref          #470.#976    // scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   #978 = Utf8               $anonfun$$minus$minus$greater$greater$qmark$colon$2
   #979 = Utf8               j$1
   #980 = Utf8               x$23
   #981 = NameAndType        #978:#524    // $anonfun$$minus$minus$greater$greater$qmark$colon$2:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #982 = Methodref          #2.#981      // argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$2:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #983 = MethodHandle       6:#982       // REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$2:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
   #984 = InvokeDynamic      #53:#507     // #53:apply:(Largonaut/Json;)Lscala/Function1;
   #985 = Utf8               h$1
   #986 = Utf8               $anonfun$$minus$bar$bar$4
   #987 = Utf8               b$1
   #988 = Utf8               $anonfun$$minus$bar$bar$3
   #989 = Utf8               (Ljava/lang/String;Largonaut/Json;)Lscala/Option;
   #990 = Utf8               x$24
   #991 = NameAndType        #986:#577    // $anonfun$$minus$bar$bar$4:(Ljava/lang/String;)Ljava/lang/String;
   #992 = Methodref          #2.#991      // argonaut/Json.$anonfun$$minus$bar$bar$4:(Ljava/lang/String;)Ljava/lang/String;
   #993 = MethodHandle       6:#992       // REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$4:(Ljava/lang/String;)Ljava/lang/String;
   #994 = InvokeDynamic      #54:#583     // #54:apply:(Ljava/lang/String;)Lscala/Function0;
   #995 = NameAndType        #547:#548    // $minus$bar:(Lscala/Function0;)Lscala/Option;
   #996 = Methodref          #2.#995      // argonaut/Json.$minus$bar:(Lscala/Function0;)Lscala/Option;
   #997 = NameAndType        #988:#989    // $anonfun$$minus$bar$bar$3:(Ljava/lang/String;Largonaut/Json;)Lscala/Option;
   #998 = Methodref          #2.#997      // argonaut/Json.$anonfun$$minus$bar$bar$3:(Ljava/lang/String;Largonaut/Json;)Lscala/Option;
   #999 = MethodHandle       6:#998       // REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$3:(Ljava/lang/String;Largonaut/Json;)Lscala/Option;
  #1000 = Utf8               (Largonaut/Json;)Lscala/Option;
  #1001 = MethodType         #1000        //  (Largonaut/Json;)Lscala/Option;
  #1002 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #1003 = NameAndType        #18:#1002    // apply:(Ljava/lang/String;)Lscala/Function1;
  #1004 = InvokeDynamic      #55:#1003    // #55:apply:(Ljava/lang/String;)Lscala/Function1;
  #1005 = Utf8               $anonfun$isTrue$1
  #1006 = Utf8               (Z)Z
  #1007 = Utf8               z
  #1008 = Utf8               $anonfun$isFalse$1
  #1009 = Utf8               argonaut/JsonLong
  #1010 = Class              #1009        // argonaut/JsonLong
  #1011 = Utf8               (J)V
  #1012 = NameAndType        #218:#1011   // "<init>":(J)V
  #1013 = Methodref          #1010.#1012  // argonaut/JsonLong."<init>":(J)V
  #1014 = Utf8
  #1015 = String             #1014        //
  #1016 = Utf8               argonaut/JsonObject$
  #1017 = Class              #1016        // argonaut/JsonObject$
  #1018 = Utf8               Largonaut/JsonObject$;
  #1019 = NameAndType        #24:#1018    // MODULE$:Largonaut/JsonObject$;
  #1020 = Fieldref           #1017.#1019  // argonaut/JsonObject$.MODULE$:Largonaut/JsonObject$;
  #1021 = Utf8               empty
  #1022 = NameAndType        #1021:#213   // empty:()Largonaut/JsonObject;
  #1023 = Methodref          #1017.#1022  // argonaut/JsonObject$.empty:()Largonaut/JsonObject;
  #1024 = Utf8               x$25
  #1025 = NameAndType        #21:#207     // fields:()Lscala/collection/immutable/List;
  #1026 = Methodref          #477.#1025   // argonaut/JsonObject.fields:()Lscala/collection/immutable/List;
  #1027 = Utf8               x$26
  #1028 = Utf8               values
  #1029 = NameAndType        #1028:#207   // values:()Lscala/collection/immutable/List;
  #1030 = Methodref          #477.#1029   // argonaut/JsonObject.values:()Lscala/collection/immutable/List;
  #1031 = Utf8               $anonfun$hasField$1
  #1032 = Utf8               (Lscala/Function0;Largonaut/JsonObject;)Z
  #1033 = Utf8               f$1
  #1034 = Utf8               x$27
  #1035 = Utf8               $qmark$qmark
  #1036 = Utf8               (Ljava/lang/String;)Z
  #1037 = NameAndType        #1035:#1036  // $qmark$qmark:(Ljava/lang/String;)Z
  #1038 = Methodref          #477.#1037   // argonaut/JsonObject.$qmark$qmark:(Ljava/lang/String;)Z
  #1039 = Utf8               f$2
  #1040 = Utf8               x$28
  #1041 = NameAndType        #18:#88      // apply:(Ljava/lang/String;)Lscala/Option;
  #1042 = Methodref          #477.#1041   // argonaut/JsonObject.apply:(Ljava/lang/String;)Lscala/Option;
  #1043 = Utf8               x0$1
  #1044 = Utf8               x1$1
  #1045 = Utf8               $plus
  #1046 = Utf8               (Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
  #1047 = NameAndType        #1045:#1046  // $plus:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
  #1048 = Methodref          #477.#1047   // argonaut/JsonObject.$plus:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
  #1049 = NameAndType        #922:#55     // deepmerge:(Largonaut/Json;)Largonaut/Json;
  #1050 = Methodref          #2.#1049     // argonaut/Json.deepmerge:(Largonaut/Json;)Largonaut/Json;
  #1051 = Utf8               l
  #1052 = Utf8               acc
  #1053 = Utf8               ()V
  #1054 = NameAndType        #218:#1053   // "<init>":()V
  #1055 = Methodref          #4.#1054     // java/lang/Object."<init>":()V
  #1056 = Utf8               $init$
  #1057 = Utf8               (Lscala/Product;)V
  #1058 = NameAndType        #1056:#1057  // $init$:(Lscala/Product;)V
  #1059 = InterfaceMethodref #6.#1058     // scala/Product.$init$:(Lscala/Product;)V
  #1060 = Utf8               unboxToBoolean
  #1061 = NameAndType        #1060:#169   // unboxToBoolean:(Ljava/lang/Object;)Z
  #1062 = Methodref          #184.#1061   // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #1063 = NameAndType        #955:#956    // $anonfun$bool$2:(Z)Lscala/Some;
  #1064 = Methodref          #2.#1063     // argonaut/Json.$anonfun$bool$2:(Z)Lscala/Some;
  #1065 = Utf8               Ljava/lang/Object;
  #1066 = NameAndType        #958:#959    // $anonfun$number$2:(Z)Lscala/None$;
  #1067 = Methodref          #2.#1066     // argonaut/Json.$anonfun$number$2:(Z)Lscala/None$;
  #1068 = NameAndType        #960:#959    // $anonfun$string$2:(Z)Lscala/None$;
  #1069 = Methodref          #2.#1068     // argonaut/Json.$anonfun$string$2:(Z)Lscala/None$;
  #1070 = NameAndType        #1005:#1006  // $anonfun$isTrue$1:(Z)Z
  #1071 = Methodref          #2.#1070     // argonaut/Json.$anonfun$isTrue$1:(Z)Z
  #1072 = NameAndType        #1008:#1006  // $anonfun$isFalse$1:(Z)Z
  #1073 = Methodref          #2.#1072     // argonaut/Json.$anonfun$isFalse$1:(Z)Z
  #1074 = NameAndType        #1031:#1032  // $anonfun$hasField$1:(Lscala/Function0;Largonaut/JsonObject;)Z
  #1075 = Methodref          #2.#1074     // argonaut/Json.$anonfun$hasField$1:(Lscala/Function0;Largonaut/JsonObject;)Z
  #1076 = Utf8               $deserializeLambda$
  #1077 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1078 = Utf8               scala/runtime/LambdaDeserialize
  #1079 = Class              #1078        // scala/runtime/LambdaDeserialize
  #1080 = Utf8               bootstrap
  #1081 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1082 = NameAndType        #1080:#1081  // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1083 = Methodref          #1079.#1082  // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1084 = MethodHandle       6:#1083      // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1085 = Utf8               lambdaDeserialize
  #1086 = NameAndType        #1085:#1077  // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1087 = InvokeDynamic      #56:#1086    // #56:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1088 = Utf8               Code
  #1089 = Utf8               Signature
  #1090 = Utf8               MethodParameters
  #1091 = Utf8               LineNumberTable
  #1092 = Utf8               LocalVariableTable
  #1093 = Utf8               StackMapTable
  #1094 = Utf8               InnerClasses
  #1095 = Utf8               SourceFile
  #1096 = Utf8               RuntimeVisibleAnnotations
  #1097 = Utf8               BootstrapMethods
  #1098 = Utf8               ScalaInlineInfo
  #1099 = Utf8               ScalaSig
{
  public static argonaut.Json apply(scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/collection/immutable/Seq;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #29                 // Method argonaut/Json$.apply:(Lscala/collection/immutable/Seq;)Largonaut/Json;
         7: areturn
    Signature: #20                          // (Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      fields                         final

  public static argonaut.Json jObjectFields(scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/collection/immutable/Seq;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #33                 // Method argonaut/Json$.jObjectFields:(Lscala/collection/immutable/Seq;)Largonaut/Json;
         7: areturn
    Signature: #20                          // (Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      x                              final

  public static argonaut.Json jObjectAssocList(scala.collection.immutable.List<scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/collection/immutable/List;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #38                 // Method argonaut/Json$.jObjectAssocList:(Lscala/collection/immutable/List;)Largonaut/Json;
         7: areturn
    Signature: #36                          // (Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      x                              final

  public static argonaut.Json jSingleObject(java.lang.String, argonaut.Json);
    descriptor: (Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: aload_1
         5: invokevirtual #44                 // Method argonaut/Json$.jSingleObject:(Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
         8: areturn
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public static argonaut.Json jEmptyObject();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #48                 // Method argonaut/Json$.jEmptyObject:()Largonaut/Json;
         6: areturn

  public static argonaut.Json jArrayElements(scala.collection.immutable.Seq<argonaut.Json>);
    descriptor: (Lscala/collection/immutable/Seq;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #53                 // Method argonaut/Json$.jArrayElements:(Lscala/collection/immutable/Seq;)Largonaut/Json;
         7: areturn
    Signature: #50                          // (Lscala/collection/immutable/Seq<Largonaut/Json;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      elements                       final

  public static argonaut.Json jSingleArray(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #58                 // Method argonaut/Json$.jSingleArray:(Largonaut/Json;)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      j                              final

  public static argonaut.Json jEmptyArray();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #61                 // Method argonaut/Json$.jEmptyArray:()Largonaut/Json;
         6: areturn

  public static argonaut.Json jEmptyString();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #64                 // Method argonaut/Json$.jEmptyString:()Largonaut/Json;
         6: areturn

  public static argonaut.Json jZero();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #67                 // Method argonaut/Json$.jZero:()Largonaut/Json;
         6: areturn

  public static argonaut.Json jFalse();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #70                 // Method argonaut/Json$.jFalse:()Largonaut/Json;
         6: areturn

  public static argonaut.Json jTrue();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #73                 // Method argonaut/Json$.jTrue:()Largonaut/Json;
         6: areturn

  public static scala.Function1<argonaut.JsonObject, argonaut.Json> jObject();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #78                 // Method argonaut/Json$.jObject:()Lscala/Function1;
         6: areturn
    Signature: #76                          // ()Lscala/Function1<Largonaut/JsonObject;Largonaut/Json;>;

  public static scala.Function1<scala.collection.immutable.List<argonaut.Json>, argonaut.Json> jArray();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #82                 // Method argonaut/Json$.jArray:()Lscala/Function1;
         6: areturn
    Signature: #80                          // ()Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;Largonaut/Json;>;

  public static scala.Function1<java.lang.String, argonaut.Json> jString();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #86                 // Method argonaut/Json$.jString:()Lscala/Function1;
         6: areturn
    Signature: #84                          // ()Lscala/Function1<Ljava/lang/String;Largonaut/Json;>;

  public static scala.Option<argonaut.Json> jNumberOrString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #92                 // Method argonaut/Json$.jNumberOrString:(Ljava/lang/String;)Lscala/Option;
         7: areturn
    Signature: #89                          // (Ljava/lang/String;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public static scala.Option<argonaut.Json> jNumberOrNull(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #95                 // Method argonaut/Json$.jNumberOrNull:(Ljava/lang/String;)Lscala/Option;
         7: areturn
    Signature: #89                          // (Ljava/lang/String;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public static scala.Option<argonaut.Json> jNumber(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #98                 // Method argonaut/Json$.jNumber:(Ljava/lang/String;)Lscala/Option;
         7: areturn
    Signature: #89                          // (Ljava/lang/String;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public static argonaut.Json jNumber(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #101                // Method argonaut/Json$.jNumber:(Lscala/math/BigDecimal;)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      n                              final

  public static argonaut.Json jNumberOrString(double);
    descriptor: (D)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: dload_0
         4: invokevirtual #104                // Method argonaut/Json$.jNumberOrString:(D)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      n                              final

  public static argonaut.Json jNumberOrNull(double);
    descriptor: (D)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: dload_0
         4: invokevirtual #106                // Method argonaut/Json$.jNumberOrNull:(D)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      n                              final

  public static scala.Option<argonaut.Json> jNumber(double);
    descriptor: (D)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: dload_0
         4: invokevirtual #110                // Method argonaut/Json$.jNumber:(D)Lscala/Option;
         7: areturn
    Signature: #108                         // (D)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public static argonaut.Json jNumber(long);
    descriptor: (J)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: lload_0
         4: invokevirtual #113                // Method argonaut/Json$.jNumber:(J)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      n                              final

  public static argonaut.Json jNumber(int);
    descriptor: (I)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: iload_0
         4: invokevirtual #116                // Method argonaut/Json$.jNumber:(I)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      n                              final

  public static argonaut.Json jNumber(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_0
         4: invokevirtual #119                // Method argonaut/Json$.jNumber:(Largonaut/JsonNumber;)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      n                              final

  public static scala.Function1<java.lang.Object, argonaut.Json> jBool();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #123                // Method argonaut/Json$.jBool:()Lscala/Function1;
         6: areturn
    Signature: #121                         // ()Lscala/Function1<Ljava/lang/Object;Largonaut/Json;>;

  public static argonaut.Json jNull();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #126                // Method argonaut/Json$.jNull:()Largonaut/Json;
         6: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #133                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/Json;
    Signature: #129                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #141                // InterfaceMethod scala/Product.productPrefix$:(Lscala/Product;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/Json;

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #147                // InterfaceMethod scala/Product.productElementName$:(Lscala/Product;I)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/Json;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #153                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/Json;
    Signature: #150                         // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public <X extends java.lang.Object> X fold(scala.Function0<X>, scala.Function1<java.lang.Object, X>, scala.Function1<argonaut.JsonNumber, X>, scala.Function1<java.lang.String, X>, scala.Function1<scala.collection.immutable.List<argonaut.Json>, X>, scala.Function1<argonaut.JsonObject, X>);
    descriptor: (Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=19, args_size=7
         0: aload_0
         1: astore        8
         3: getstatic     #167                // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         6: aload         8
         8: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        11: ifeq          25
        14: aload_1
        15: invokeinterface #176,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        20: astore        7
        22: goto          234
        25: goto          28
        28: aload         8
        30: instanceof    #178                // class argonaut/JBool
        33: ifeq          66
        36: aload         8
        38: checkcast     #178                // class argonaut/JBool
        41: astore        9
        43: aload         9
        45: invokevirtual #182                // Method argonaut/JBool.b:()Z
        48: istore        10
        50: aload_2
        51: iload         10
        53: invokestatic  #188                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        56: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        61: astore        7
        63: goto          234
        66: goto          69
        69: aload         8
        71: instanceof    #195                // class argonaut/JNumber
        74: ifeq          104
        77: aload         8
        79: checkcast     #195                // class argonaut/JNumber
        82: astore        11
        84: aload         11
        86: invokevirtual #198                // Method argonaut/JNumber.n:()Largonaut/JsonNumber;
        89: astore        12
        91: aload_3
        92: aload         12
        94: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        99: astore        7
       101: goto          234
       104: goto          107
       107: aload         8
       109: instanceof    #200                // class argonaut/JString
       112: ifeq          143
       115: aload         8
       117: checkcast     #200                // class argonaut/JString
       120: astore        13
       122: aload         13
       124: invokevirtual #203                // Method argonaut/JString.s:()Ljava/lang/String;
       127: astore        14
       129: aload         4
       131: aload         14
       133: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       138: astore        7
       140: goto          234
       143: goto          146
       146: aload         8
       148: instanceof    #205                // class argonaut/JArray
       151: ifeq          182
       154: aload         8
       156: checkcast     #205                // class argonaut/JArray
       159: astore        15
       161: aload         15
       163: invokevirtual #209                // Method argonaut/JArray.a:()Lscala/collection/immutable/List;
       166: astore        16
       168: aload         5
       170: aload         16
       172: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       177: astore        7
       179: goto          234
       182: goto          185
       185: aload         8
       187: instanceof    #211                // class argonaut/JObject
       190: ifeq          221
       193: aload         8
       195: checkcast     #211                // class argonaut/JObject
       198: astore        17
       200: aload         17
       202: invokevirtual #215                // Method argonaut/JObject.o:()Largonaut/JsonObject;
       205: astore        18
       207: aload         6
       209: aload         18
       211: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       216: astore        7
       218: goto          234
       221: goto          224
       224: new           #217                // class scala/MatchError
       227: dup
       228: aload         8
       230: invokespecial #221                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       233: athrow
       234: aload         7
       236: areturn
      StackMapTable: number_of_entries = 13
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class argonaut/Json ]
        frame_type = 2 /* same */
        frame_type = 37 /* same */
        frame_type = 2 /* same */
        frame_type = 34 /* same */
        frame_type = 2 /* same */
        frame_type = 35 /* same */
        frame_type = 2 /* same */
        frame_type = 35 /* same */
        frame_type = 2 /* same */
        frame_type = 35 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/Json, class scala/Function0, class scala/Function1, class scala/Function1, class scala/Function1, class scala/Function1, class scala/Function1, class java/lang/Object, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 27: 0
        line 28: 3
        line 29: 28
        line 30: 69
        line 31: 107
        line 32: 146
        line 33: 185
        line 27: 224
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           48      18    10     b   Z
           89      15    12     n   Largonaut/JsonNumber;
          127      16    14     s   Ljava/lang/String;
          166      16    16     a   Lscala/collection/immutable/List;
          205      16    18     o   Largonaut/JsonObject;
            0     237     0  this   Largonaut/Json;
            0     237     1 jsonNull   Lscala/Function0;
            0     237     2 jsonBool   Lscala/Function1;
            0     237     3 jsonNumber   Lscala/Function1;
            0     237     4 jsonString   Lscala/Function1;
            0     237     5 jsonArray   Lscala/Function1;
            0     237     6 jsonObject   Lscala/Function1;
    Signature: #156                         // <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Ljava/lang/Object;TX;>;Lscala/Function1<Largonaut/JsonNumber;TX;>;Lscala/Function1<Ljava/lang/String;TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
    MethodParameters:
      Name                           Flags
      jsonNull                       final
      jsonBool                       final
      jsonNumber                     final
      jsonString                     final
      jsonArray                      final
      jsonObject                     final

  public <X extends java.lang.Object> X arrayOrObject(scala.Function0<X>, scala.Function1<scala.collection.immutable.List<argonaut.Json>, X>, scala.Function1<argonaut.JsonObject, X>);
    descriptor: (Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=4
         0: aload_0
         1: astore        5
         3: getstatic     #167                // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         6: aload         5
         8: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        11: ifeq          25
        14: aload_1
        15: invokeinterface #176,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        20: astore        4
        22: goto          180
        25: goto          28
        28: aload         5
        30: instanceof    #178                // class argonaut/JBool
        33: ifeq          47
        36: aload_1
        37: invokeinterface #176,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        42: astore        4
        44: goto          180
        47: goto          50
        50: aload         5
        52: instanceof    #195                // class argonaut/JNumber
        55: ifeq          69
        58: aload_1
        59: invokeinterface #176,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        64: astore        4
        66: goto          180
        69: goto          72
        72: aload         5
        74: instanceof    #200                // class argonaut/JString
        77: ifeq          91
        80: aload_1
        81: invokeinterface #176,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        86: astore        4
        88: goto          180
        91: goto          94
        94: aload         5
        96: instanceof    #205                // class argonaut/JArray
        99: ifeq          129
       102: aload         5
       104: checkcast     #205                // class argonaut/JArray
       107: astore        6
       109: aload         6
       111: invokevirtual #209                // Method argonaut/JArray.a:()Lscala/collection/immutable/List;
       114: astore        7
       116: aload_2
       117: aload         7
       119: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       124: astore        4
       126: goto          180
       129: goto          132
       132: aload         5
       134: instanceof    #211                // class argonaut/JObject
       137: ifeq          167
       140: aload         5
       142: checkcast     #211                // class argonaut/JObject
       145: astore        8
       147: aload         8
       149: invokevirtual #215                // Method argonaut/JObject.o:()Largonaut/JsonObject;
       152: astore        9
       154: aload_3
       155: aload         9
       157: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       162: astore        4
       164: goto          180
       167: goto          170
       170: new           #217                // class scala/MatchError
       173: dup
       174: aload         5
       176: invokespecial #221                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       179: athrow
       180: aload         4
       182: areturn
      StackMapTable: number_of_entries = 13
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class argonaut/Json ]
        frame_type = 2 /* same */
        frame_type = 18 /* same */
        frame_type = 2 /* same */
        frame_type = 18 /* same */
        frame_type = 2 /* same */
        frame_type = 18 /* same */
        frame_type = 2 /* same */
        frame_type = 34 /* same */
        frame_type = 2 /* same */
        frame_type = 34 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/Json, class scala/Function0, class scala/Function1, class scala/Function1, class java/lang/Object, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 44: 0
        line 45: 3
        line 46: 28
        line 47: 50
        line 48: 72
        line 49: 94
        line 50: 132
        line 44: 170
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          114      15     7     a   Lscala/collection/immutable/List;
          152      15     9     o   Largonaut/JsonObject;
            0     183     0  this   Largonaut/Json;
            0     183     1    or   Lscala/Function0;
            0     183     2 jsonArray   Lscala/Function1;
            0     183     3 jsonObject   Lscala/Function1;
    Signature: #231                         // <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
    MethodParameters:
      Name                           Flags
      or                             final
      jsonArray                      final
      jsonObject                     final

  public argonaut.Cursor unary_$plus();
    descriptor: ()Largonaut/Cursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #239                // Field argonaut/Cursor$.MODULE$:Largonaut/Cursor$;
         3: aload_0
         4: invokevirtual #242                // Method argonaut/Cursor$.apply:(Largonaut/Json;)Largonaut/Cursor;
         7: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public argonaut.Cursor cursor();
    descriptor: ()Largonaut/Cursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #239                // Field argonaut/Cursor$.MODULE$:Largonaut/Cursor$;
         3: aload_0
         4: invokevirtual #242                // Method argonaut/Cursor$.apply:(Largonaut/Json;)Largonaut/Cursor;
         7: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public argonaut.HCursor hcursor();
    descriptor: ()Largonaut/HCursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #247                // Method cursor:()Largonaut/Cursor;
         4: invokevirtual #251                // Method argonaut/Cursor.hcursor:()Largonaut/HCursor;
         7: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public argonaut.ACursor acursor();
    descriptor: ()Largonaut/ACursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #254                // Method hcursor:()Largonaut/HCursor;
         4: invokevirtual #258                // Method argonaut/HCursor.acursor:()Largonaut/ACursor;
         7: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public boolean isNull();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #167                // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         4: astore_1
         5: dup
         6: ifnonnull     17
         9: pop
        10: aload_1
        11: ifnull        24
        14: goto          28
        17: aload_1
        18: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        21: ifeq          28
        24: iconst_1
        25: goto          29
        28: iconst_0
        29: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class argonaut/Json, class argonaut/JNull$ ]
          stack = [ class argonaut/Json ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Largonaut/Json;

  public scala.Option<java.lang.Object> bool();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #281,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
         6: invokedynamic #290,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        11: invokedynamic #297,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        16: invokedynamic #304,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        21: invokedynamic #311,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        26: invokedynamic #318,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        31: invokevirtual #320                // Method fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
        34: checkcast     #322                // class scala/Option
        37: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Largonaut/Json;
    Signature: #262                         // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<argonaut.JsonNumber> number();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #329,  0            // InvokeDynamic #6:apply:()Lscala/Function0;
         6: invokedynamic #336,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        11: invokedynamic #343,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
        16: invokedynamic #348,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
        21: invokedynamic #353,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
        26: invokedynamic #358,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
        31: invokevirtual #320                // Method fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
        34: checkcast     #322                // class scala/Option
        37: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Largonaut/Json;
    Signature: #324                         // ()Lscala/Option<Largonaut/JsonNumber;>;

  public scala.Option<java.lang.String> string();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #365,  0            // InvokeDynamic #12:apply:()Lscala/Function0;
         6: invokedynamic #370,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
        11: invokedynamic #375,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
        16: invokedynamic #382,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
        21: invokedynamic #387,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
        26: invokedynamic #392,  0            // InvokeDynamic #17:apply:()Lscala/Function1;
        31: invokevirtual #320                // Method fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
        34: checkcast     #322                // class scala/Option
        37: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Largonaut/Json;
    Signature: #360                         // ()Lscala/Option<Ljava/lang/String;>;

  public scala.Option<scala.collection.immutable.List<argonaut.Json>> array();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #399,  0            // InvokeDynamic #18:apply:()Lscala/Function0;
         6: invokedynamic #406,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
        11: invokedynamic #411,  0            // InvokeDynamic #20:apply:()Lscala/Function1;
        16: invokevirtual #413                // Method arrayOrObject:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
        19: checkcast     #322                // class scala/Option
        22: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Largonaut/Json;
    Signature: #394                         // ()Lscala/Option<Lscala/collection/immutable/List<Largonaut/Json;>;>;

  public scala.Option<argonaut.JsonObject> obj();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #420,  0            // InvokeDynamic #21:apply:()Lscala/Function0;
         6: invokedynamic #425,  0            // InvokeDynamic #22:apply:()Lscala/Function1;
        11: invokedynamic #432,  0            // InvokeDynamic #23:apply:()Lscala/Function1;
        16: invokevirtual #413                // Method arrayOrObject:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
        19: checkcast     #322                // class scala/Option
        22: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Largonaut/Json;
    Signature: #415                         // ()Lscala/Option<Largonaut/JsonObject;>;

  public scala.Option<scala.collection.immutable.List<scala.Tuple2<java.lang.String, argonaut.Json>>> assoc();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #436                // Method obj:()Lscala/Option;
         4: invokedynamic #443,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
         9: invokevirtual #447                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/Json;
    Signature: #434                         // ()Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;>;

  public argonaut.Json not();
    descriptor: ()Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #178                // class argonaut/JBool
         6: ifeq          41
         9: aload_2
        10: checkcast     #178                // class argonaut/JBool
        13: astore_3
        14: aload_3
        15: invokevirtual #182                // Method argonaut/JBool.b:()Z
        18: istore        4
        20: new           #178                // class argonaut/JBool
        23: dup
        24: iload         4
        26: ifne          33
        29: iconst_1
        30: goto          34
        33: iconst_0
        34: invokespecial #451                // Method argonaut/JBool."<init>":(Z)V
        37: astore_1
        38: goto          49
        41: goto          44
        44: aload_0
        45: astore_1
        46: goto          49
        49: aload_1
        50: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class argonaut/Json, top, class argonaut/Json, class argonaut/JBool, int ]
          stack = [ uninitialized 20, uninitialized 20 ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class argonaut/Json, top, class argonaut/Json, class argonaut/JBool, int ]
          stack = [ uninitialized 20, uninitialized 20, int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/Json, class argonaut/Json, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 117: 0
        line 118: 2
        line 119: 44
        line 117: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      23     4     b   Z
            0      51     0  this   Largonaut/Json;

  public argonaut.Json withNumber(scala.Function1<argonaut.JsonNumber, argonaut.JsonNumber>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: aload_0
         1: astore_3
         2: aload_3
         3: instanceof    #195                // class argonaut/JNumber
         6: ifeq          44
         9: aload_3
        10: checkcast     #195                // class argonaut/JNumber
        13: astore        4
        15: aload         4
        17: invokevirtual #198                // Method argonaut/JNumber.n:()Largonaut/JsonNumber;
        20: astore        5
        22: new           #195                // class argonaut/JNumber
        25: dup
        26: aload_1
        27: aload         5
        29: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        34: checkcast     #456                // class argonaut/JsonNumber
        37: invokespecial #459                // Method argonaut/JNumber."<init>":(Largonaut/JsonNumber;)V
        40: astore_2
        41: goto          52
        44: goto          47
        47: aload_0
        48: astore_2
        49: goto          52
        52: aload_2
        53: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class argonaut/Json ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/Json, class scala/Function1, class argonaut/Json, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 125: 0
        line 126: 2
        line 127: 47
        line 125: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      24     5     n   Largonaut/JsonNumber;
            0      54     0  this   Largonaut/Json;
            0      54     1     k   Lscala/Function1;
    Signature: #454                         // (Lscala/Function1<Largonaut/JsonNumber;Largonaut/JsonNumber;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public argonaut.Json withString(scala.Function1<java.lang.String, java.lang.String>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: aload_0
         1: astore_3
         2: aload_3
         3: instanceof    #200                // class argonaut/JString
         6: ifeq          44
         9: aload_3
        10: checkcast     #200                // class argonaut/JString
        13: astore        4
        15: aload         4
        17: invokevirtual #203                // Method argonaut/JString.s:()Ljava/lang/String;
        20: astore        5
        22: new           #200                // class argonaut/JString
        25: dup
        26: aload_1
        27: aload         5
        29: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        34: checkcast     #463                // class java/lang/String
        37: invokespecial #466                // Method argonaut/JString."<init>":(Ljava/lang/String;)V
        40: astore_2
        41: goto          52
        44: goto          47
        47: aload_0
        48: astore_2
        49: goto          52
        52: aload_2
        53: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class argonaut/Json ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/Json, class scala/Function1, class argonaut/Json, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 133: 0
        line 134: 2
        line 135: 47
        line 133: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      24     5     s   Ljava/lang/String;
            0      54     0  this   Largonaut/Json;
            0      54     1     k   Lscala/Function1;
    Signature: #461                         // (Lscala/Function1<Ljava/lang/String;Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public argonaut.Json withArray(scala.Function1<scala.collection.immutable.List<argonaut.Json>, scala.collection.immutable.List<argonaut.Json>>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: aload_0
         1: astore_3
         2: aload_3
         3: instanceof    #205                // class argonaut/JArray
         6: ifeq          44
         9: aload_3
        10: checkcast     #205                // class argonaut/JArray
        13: astore        4
        15: aload         4
        17: invokevirtual #209                // Method argonaut/JArray.a:()Lscala/collection/immutable/List;
        20: astore        5
        22: new           #205                // class argonaut/JArray
        25: dup
        26: aload_1
        27: aload         5
        29: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        34: checkcast     #470                // class scala/collection/immutable/List
        37: invokespecial #473                // Method argonaut/JArray."<init>":(Lscala/collection/immutable/List;)V
        40: astore_2
        41: goto          52
        44: goto          47
        47: aload_0
        48: astore_2
        49: goto          52
        52: aload_2
        53: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class argonaut/Json ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/Json, class scala/Function1, class argonaut/Json, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 141: 0
        line 142: 2
        line 143: 47
        line 141: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      24     5     a   Lscala/collection/immutable/List;
            0      54     0  this   Largonaut/Json;
            0      54     1     k   Lscala/Function1;
    Signature: #468                         // (Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;Lscala/collection/immutable/List<Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public argonaut.Json withObject(scala.Function1<argonaut.JsonObject, argonaut.JsonObject>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: aload_0
         1: astore_3
         2: aload_3
         3: instanceof    #211                // class argonaut/JObject
         6: ifeq          44
         9: aload_3
        10: checkcast     #211                // class argonaut/JObject
        13: astore        4
        15: aload         4
        17: invokevirtual #215                // Method argonaut/JObject.o:()Largonaut/JsonObject;
        20: astore        5
        22: new           #211                // class argonaut/JObject
        25: dup
        26: aload_1
        27: aload         5
        29: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        34: checkcast     #477                // class argonaut/JsonObject
        37: invokespecial #480                // Method argonaut/JObject."<init>":(Largonaut/JsonObject;)V
        40: astore_2
        41: goto          52
        44: goto          47
        47: aload_0
        48: astore_2
        49: goto          52
        52: aload_2
        53: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class argonaut/Json ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/Json, class scala/Function1, class argonaut/Json, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 149: 0
        line 150: 2
        line 151: 47
        line 149: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      24     5     o   Largonaut/JsonObject;
            0      54     0  this   Largonaut/Json;
            0      54     1     k   Lscala/Function1;
    Signature: #475                         // (Lscala/Function1<Largonaut/JsonObject;Largonaut/JsonObject;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public argonaut.Json $minus$greater$colon(scala.Tuple2<java.lang.String, argonaut.Json>);
    descriptor: (Lscala/Tuple2;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #493,  0            // InvokeDynamic #25:apply:(Lscala/Tuple2;)Lscala/Function1;
         7: invokevirtual #495                // Method withObject:(Lscala/Function1;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     k   Lscala/Tuple2;
    Signature: #483                         // (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public argonaut.Json $minus$greater$qmark$colon(scala.Option<scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/Option;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #508,  0            // InvokeDynamic #26:apply:(Largonaut/Json;)Lscala/Function1;
         7: invokevirtual #447                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        10: aload_0
        11: invokedynamic #516,  0            // InvokeDynamic #27:apply:(Largonaut/Json;)Lscala/Function0;
        16: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        19: checkcast     #2                  // class argonaut/Json
        22: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Largonaut/Json;
            0      23     1     o   Lscala/Option;
    Signature: #499                         // (Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      o                              final

  public argonaut.Json $minus$minus$greater$greater$colon(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #530,  0            // InvokeDynamic #28:apply:(Largonaut/Json;)Lscala/Function1;
         7: invokevirtual #532                // Method withArray:(Lscala/Function1;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     k   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public argonaut.Json $minus$minus$greater$greater$qmark$colon(scala.Option<argonaut.Json>);
    descriptor: (Lscala/Option;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #541,  0            // InvokeDynamic #29:apply:(Largonaut/Json;)Lscala/Function1;
         7: invokevirtual #447                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        10: aload_0
        11: invokedynamic #546,  0            // InvokeDynamic #30:apply:(Largonaut/Json;)Lscala/Function0;
        16: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        19: checkcast     #2                  // class argonaut/Json
        22: areturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Largonaut/Json;
            0      23     1     o   Lscala/Option;
    Signature: #534                         // (Lscala/Option<Largonaut/Json;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      o                              final

  public scala.Option<argonaut.Json> $minus$bar(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #553                // Method field:(Lscala/Function0;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/Json;
            0       6     1     f   Lscala/Function0;
    Signature: #549                         // (Lscala/Function0<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.Option<argonaut.Json> $minus$bar$bar(scala.collection.immutable.List<java.lang.String>);
    descriptor: (Lscala/collection/immutable/List;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: getstatic     #562                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         5: aload_3
         6: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
         9: ifeq          19
        12: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
        15: astore_2
        16: goto          92
        19: goto          22
        22: aload_3
        23: instanceof    #569                // class scala/collection/immutable/$colon$colon
        26: ifeq          80
        29: aload_3
        30: checkcast     #569                // class scala/collection/immutable/$colon$colon
        33: astore        4
        35: aload         4
        37: invokevirtual #572                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
        40: checkcast     #463                // class java/lang/String
        43: astore        5
        45: aload         4
        47: invokevirtual #575                // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
        50: astore        6
        52: aload         6
        54: aload_0
        55: aload         5
        57: invokedynamic #584,  0            // InvokeDynamic #31:apply:(Ljava/lang/String;)Lscala/Function0;
        62: invokevirtual #553                // Method field:(Lscala/Function0;)Lscala/Option;
        65: invokedynamic #595,  0            // InvokeDynamic #32:apply:()Lscala/Function2;
        70: invokevirtual #599                // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        73: checkcast     #322                // class scala/Option
        76: astore_2
        77: goto          92
        80: goto          83
        83: new           #217                // class scala/MatchError
        86: dup
        87: aload_3
        88: invokespecial #221                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        91: athrow
        92: aload_2
        93: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class scala/collection/immutable/List ]
        frame_type = 2 /* same */
        frame_type = 57 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/Json, class scala/collection/immutable/List, class scala/Option, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 188: 0
        line 189: 2
        line 190: 22
        line 188: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      37     5     h   Ljava/lang/String;
           50      30     6     t   Lscala/collection/immutable/List;
            0      94     0  this   Largonaut/Json;
            0      94     1    fs   Lscala/collection/immutable/List;
    Signature: #556                         // (Lscala/collection/immutable/List<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      fs                             final

  public boolean isTrue();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #604                // Method bool:()Lscala/Option;
         4: invokedynamic #609,  0            // InvokeDynamic #33:apply:()Lscala/Function1;
         9: invokevirtual #613                // Method scala/Option.exists:(Lscala/Function1;)Z
        12: ireturn
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/Json;

  public boolean isFalse();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #604                // Method bool:()Lscala/Option;
         4: invokedynamic #619,  0            // InvokeDynamic #34:apply:()Lscala/Function1;
         9: invokevirtual #613                // Method scala/Option.exists:(Lscala/Function1;)Z
        12: ireturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/Json;

  public boolean isBool();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #604                // Method bool:()Lscala/Option;
         4: invokevirtual #623                // Method scala/Option.isDefined:()Z
         7: ireturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public boolean isNumber();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #626                // Method number:()Lscala/Option;
         4: invokevirtual #623                // Method scala/Option.isDefined:()Z
         7: ireturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public boolean isString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #629                // Method string:()Lscala/Option;
         4: invokevirtual #623                // Method scala/Option.isDefined:()Z
         7: ireturn
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public boolean isArray();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #632                // Method array:()Lscala/Option;
         4: invokevirtual #623                // Method scala/Option.isDefined:()Z
         7: ireturn
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public boolean isObject();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #436                // Method obj:()Lscala/Option;
         4: invokevirtual #623                // Method scala/Option.isDefined:()Z
         7: ireturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/Json;

  public argonaut.JsonNumber numberOr(scala.Function0<argonaut.JsonNumber>);
    descriptor: (Lscala/Function0;)Largonaut/JsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #626                // Method number:()Lscala/Option;
         4: aload_1
         5: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
         8: checkcast     #456                // class argonaut/JsonNumber
        11: areturn
      LineNumberTable:
        line 241: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/Json;
            0      12     1     d   Lscala/Function0;
    Signature: #636                         // (Lscala/Function0<Largonaut/JsonNumber;>;)Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      d                              final

  public java.lang.String stringOr(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #629                // Method string:()Lscala/Option;
         4: aload_1
         5: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
         8: checkcast     #463                // class java/lang/String
        11: areturn
      LineNumberTable:
        line 249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/Json;
            0      12     1     d   Lscala/Function0;
    Signature: #640                         // (Lscala/Function0<Ljava/lang/String;>;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      d                              final

  public scala.collection.immutable.List<argonaut.Json> arrayOr(scala.Function0<scala.collection.immutable.List<argonaut.Json>>);
    descriptor: (Lscala/Function0;)Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #632                // Method array:()Lscala/Option;
         4: aload_1
         5: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
         8: checkcast     #470                // class scala/collection/immutable/List
        11: areturn
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/Json;
            0      12     1     d   Lscala/Function0;
    Signature: #643                         // (Lscala/Function0<Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/collection/immutable/List<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      d                              final

  public argonaut.JsonObject objectOr(scala.Function0<argonaut.JsonObject>);
    descriptor: (Lscala/Function0;)Largonaut/JsonObject;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #436                // Method obj:()Lscala/Option;
         4: aload_1
         5: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
         8: checkcast     #477                // class argonaut/JsonObject
        11: areturn
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/Json;
            0      12     1     d   Lscala/Function0;
    Signature: #646                         // (Lscala/Function0<Largonaut/JsonObject;>;)Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      d                              final

  public argonaut.JsonNumber numberOrZero();
    descriptor: ()Largonaut/JsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #654,  0            // InvokeDynamic #35:apply:()Lscala/Function0;
         6: invokevirtual #656                // Method numberOr:(Lscala/Function0;)Largonaut/JsonNumber;
         9: areturn
      LineNumberTable:
        line 271: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/Json;

  public java.lang.String stringOrEmpty();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #662,  0            // InvokeDynamic #36:apply:()Lscala/Function0;
         6: invokevirtual #664                // Method stringOr:(Lscala/Function0;)Ljava/lang/String;
         9: areturn
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/Json;

  public scala.collection.immutable.List<argonaut.Json> arrayOrEmpty();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #673,  0            // InvokeDynamic #37:apply:()Lscala/Function0;
         6: invokevirtual #675                // Method arrayOr:(Lscala/Function0;)Lscala/collection/immutable/List;
         9: areturn
      LineNumberTable:
        line 283: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/Json;
    Signature: #666                         // ()Lscala/collection/immutable/List<Largonaut/Json;>;

  public argonaut.JsonObject objectOrEmpty();
    descriptor: ()Largonaut/JsonObject;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #682,  0            // InvokeDynamic #38:apply:()Lscala/Function0;
         6: invokevirtual #684                // Method objectOr:(Lscala/Function0;)Largonaut/JsonObject;
         9: areturn
      LineNumberTable:
        line 289: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/Json;

  public scala.Option<scala.collection.immutable.List<java.lang.String>> objectFields();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #436                // Method obj:()Lscala/Option;
         4: invokedynamic #691,  0            // InvokeDynamic #39:apply:()Lscala/Function1;
         9: invokevirtual #447                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/Json;
    Signature: #686                         // ()Lscala/Option<Lscala/collection/immutable/List<Ljava/lang/String;>;>;

  public scala.collection.immutable.List<java.lang.String> objectFieldsOr(scala.Function0<scala.collection.immutable.List<java.lang.String>>);
    descriptor: (Lscala/Function0;)Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #695                // Method objectFields:()Lscala/Option;
         4: aload_1
         5: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
         8: checkcast     #470                // class scala/collection/immutable/List
        11: areturn
      LineNumberTable:
        line 303: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/Json;
            0      12     1     f   Lscala/Function0;
    Signature: #693                         // (Lscala/Function0<Lscala/collection/immutable/List<Ljava/lang/String;>;>;)Lscala/collection/immutable/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.collection.immutable.List<java.lang.String> objectFieldsOrEmpty();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #702,  0            // InvokeDynamic #40:apply:()Lscala/Function0;
         6: invokevirtual #704                // Method objectFieldsOr:(Lscala/Function0;)Lscala/collection/immutable/List;
         9: areturn
      LineNumberTable:
        line 309: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/Json;
    Signature: #697                         // ()Lscala/collection/immutable/List<Ljava/lang/String;>;

  public scala.Option<scala.collection.immutable.List<argonaut.Json>> objectValues();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #436                // Method obj:()Lscala/Option;
         4: invokedynamic #710,  0            // InvokeDynamic #41:apply:()Lscala/Function1;
         9: invokevirtual #447                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/Json;
    Signature: #394                         // ()Lscala/Option<Lscala/collection/immutable/List<Largonaut/Json;>;>;

  public scala.collection.immutable.List<argonaut.Json> objectValuesOr(scala.Function0<scala.collection.immutable.List<argonaut.Json>>);
    descriptor: (Lscala/Function0;)Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #713                // Method objectValues:()Lscala/Option;
         4: aload_1
         5: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
         8: checkcast     #470                // class scala/collection/immutable/List
        11: areturn
      LineNumberTable:
        line 323: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/Json;
            0      12     1     k   Lscala/Function0;
    Signature: #643                         // (Lscala/Function0<Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/collection/immutable/List<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public scala.collection.immutable.List<argonaut.Json> objectValuesOrEmpty();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #719,  0            // InvokeDynamic #42:apply:()Lscala/Function0;
         6: invokevirtual #721                // Method objectValuesOr:(Lscala/Function0;)Lscala/collection/immutable/List;
         9: areturn
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/Json;
    Signature: #666                         // ()Lscala/collection/immutable/List<Largonaut/Json;>;

  public boolean hasField(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #436                // Method obj:()Lscala/Option;
         4: aload_1
         5: invokedynamic #734,  0            // InvokeDynamic #43:apply:(Lscala/Function0;)Lscala/Function1;
        10: invokevirtual #613                // Method scala/Option.exists:(Lscala/Function1;)Z
        13: ireturn
      LineNumberTable:
        line 335: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/Json;
            0      14     1     f   Lscala/Function0;
    Signature: #724                         // (Lscala/Function0<Ljava/lang/String;>;)Z
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.Option<argonaut.Json> field(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #436                // Method obj:()Lscala/Option;
         4: aload_1
         5: invokedynamic #742,  0            // InvokeDynamic #44:apply:(Lscala/Function0;)Lscala/Function1;
        10: invokevirtual #745                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/Json;
            0      14     1     f   Lscala/Function0;
    Signature: #549                         // (Lscala/Function0<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.Json fieldOr(scala.Function0<java.lang.String>, scala.Function0<argonaut.Json>);
    descriptor: (Lscala/Function0;Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #553                // Method field:(Lscala/Function0;)Lscala/Option;
         5: aload_2
         6: invokevirtual #520                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
         9: checkcast     #2                  // class argonaut/Json
        12: areturn
      LineNumberTable:
        line 347: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/Json;
            0      13     1     f   Lscala/Function0;
            0      13     2     j   Lscala/Function0;
    Signature: #748                         // (Lscala/Function0<Ljava/lang/String;>;Lscala/Function0<Largonaut/Json;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final
      j                              final

  public argonaut.Json fieldOrNull(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #756,  0            // InvokeDynamic #45:apply:()Lscala/Function0;
         7: invokevirtual #758                // Method fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 353: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     f   Lscala/Function0;
    Signature: #751                         // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.Json fieldOrTrue(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #764,  0            // InvokeDynamic #46:apply:()Lscala/Function0;
         7: invokevirtual #758                // Method fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 359: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     f   Lscala/Function0;
    Signature: #751                         // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.Json fieldOrFalse(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #770,  0            // InvokeDynamic #47:apply:()Lscala/Function0;
         7: invokevirtual #758                // Method fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 365: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     f   Lscala/Function0;
    Signature: #751                         // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.Json fieldOrZero(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #776,  0            // InvokeDynamic #48:apply:()Lscala/Function0;
         7: invokevirtual #758                // Method fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 371: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     f   Lscala/Function0;
    Signature: #751                         // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.Json fieldOrEmptyString(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #782,  0            // InvokeDynamic #49:apply:()Lscala/Function0;
         7: invokevirtual #758                // Method fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 377: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     f   Lscala/Function0;
    Signature: #751                         // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.Json fieldOrEmptyArray(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #788,  0            // InvokeDynamic #50:apply:()Lscala/Function0;
         7: invokevirtual #758                // Method fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 383: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     f   Lscala/Function0;
    Signature: #751                         // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.Json fieldOrEmptyObject(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #794,  0            // InvokeDynamic #51:apply:()Lscala/Function0;
         7: invokevirtual #758                // Method fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 389: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;
            0      11     1     f   Lscala/Function0;
    Signature: #751                         // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: getstatic     #167                // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         5: aload_2
         6: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
         9: ifeq          19
        12: ldc_w         #797                // String Null
        15: astore_1
        16: goto          116
        19: goto          22
        22: aload_2
        23: instanceof    #178                // class argonaut/JBool
        26: ifeq          36
        29: ldc_w         #799                // String Boolean
        32: astore_1
        33: goto          116
        36: goto          39
        39: aload_2
        40: instanceof    #195                // class argonaut/JNumber
        43: ifeq          53
        46: ldc_w         #801                // String Number
        49: astore_1
        50: goto          116
        53: goto          56
        56: aload_2
        57: instanceof    #200                // class argonaut/JString
        60: ifeq          70
        63: ldc_w         #803                // String String
        66: astore_1
        67: goto          116
        70: goto          73
        73: aload_2
        74: instanceof    #205                // class argonaut/JArray
        77: ifeq          87
        80: ldc_w         #805                // String Array
        83: astore_1
        84: goto          116
        87: goto          90
        90: aload_2
        91: instanceof    #211                // class argonaut/JObject
        94: ifeq          104
        97: ldc_w         #807                // String Object
       100: astore_1
       101: goto          116
       104: goto          107
       107: new           #217                // class scala/MatchError
       110: dup
       111: aload_2
       112: invokespecial #221                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       115: athrow
       116: aload_1
       117: areturn
      StackMapTable: number_of_entries = 13
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class argonaut/Json ]
        frame_type = 2 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/Json, class java/lang/String, class argonaut/Json ]
          stack = []
      LineNumberTable:
        line 395: 0
        line 396: 2
        line 397: 22
        line 398: 39
        line 399: 56
        line 400: 73
        line 401: 90
        line 395: 107
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     118     0  this   Largonaut/Json;

  public <A extends java.lang.Object> argonaut.DecodeResult<A> jdecode(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #813                // Method unary_$plus:()Largonaut/Cursor;
         5: invokevirtual #251                // Method argonaut/Cursor.hcursor:()Largonaut/HCursor;
         8: invokeinterface #818,  2          // InterfaceMethod argonaut/DecodeJson.apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
        13: areturn
      LineNumberTable:
        line 408: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/Json;
            0      14     1     e   Largonaut/DecodeJson;
    Signature: #810                         // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<TA;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public <A extends java.lang.Object> argonaut.DecodeResult<A> as(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #822                // Method jdecode:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
         5: areturn
      LineNumberTable:
        line 414: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/Json;
            0       6     1     e   Largonaut/DecodeJson;
    Signature: #810                         // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<TA;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public java.lang.String pretty(argonaut.PrettyParams);
    descriptor: (Largonaut/PrettyParams;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #830                // Method argonaut/PrettyParams.pretty:(Largonaut/Json;)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 420: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/Json;
            0       6     1     p   Largonaut/PrettyParams;
    MethodParameters:
      Name                           Flags
      p                              final

  public java.lang.String nospaces();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
         3: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
         6: aload_0
         7: invokevirtual #830                // Method argonaut/PrettyParams.pretty:(Largonaut/Json;)Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 426: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;

  public java.lang.String nospacesWithOrder();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=19, locals=19, args_size=1
         0: iconst_1
         1: istore_1
         2: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
         5: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
         8: invokevirtual #845                // Method argonaut/PrettyParams.copy$default$1:()Ljava/lang/String;
        11: astore_2
        12: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        15: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        18: invokevirtual #848                // Method argonaut/PrettyParams.copy$default$2:()Ljava/lang/String;
        21: astore_3
        22: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        25: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        28: invokevirtual #851                // Method argonaut/PrettyParams.copy$default$3:()Ljava/lang/String;
        31: astore        4
        33: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        36: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        39: invokevirtual #854                // Method argonaut/PrettyParams.copy$default$4:()Ljava/lang/String;
        42: astore        5
        44: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        47: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        50: invokevirtual #857                // Method argonaut/PrettyParams.copy$default$5:()Ljava/lang/String;
        53: astore        6
        55: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        58: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        61: invokevirtual #860                // Method argonaut/PrettyParams.copy$default$6:()Ljava/lang/String;
        64: astore        7
        66: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        69: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        72: invokevirtual #863                // Method argonaut/PrettyParams.copy$default$7:()Ljava/lang/String;
        75: astore        8
        77: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        80: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        83: invokevirtual #866                // Method argonaut/PrettyParams.copy$default$8:()Ljava/lang/String;
        86: astore        9
        88: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
        91: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
        94: invokevirtual #869                // Method argonaut/PrettyParams.copy$default$9:()Ljava/lang/String;
        97: astore        10
        99: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       102: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       105: invokevirtual #872                // Method argonaut/PrettyParams.copy$default$10:()Ljava/lang/String;
       108: astore        11
       110: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       113: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       116: invokevirtual #875                // Method argonaut/PrettyParams.copy$default$11:()Ljava/lang/String;
       119: astore        12
       121: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       124: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       127: invokevirtual #878                // Method argonaut/PrettyParams.copy$default$12:()Ljava/lang/String;
       130: astore        13
       132: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       135: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       138: invokevirtual #881                // Method argonaut/PrettyParams.copy$default$13:()Ljava/lang/String;
       141: astore        14
       143: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       146: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       149: invokevirtual #884                // Method argonaut/PrettyParams.copy$default$14:()Ljava/lang/String;
       152: astore        15
       154: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       157: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       160: invokevirtual #887                // Method argonaut/PrettyParams.copy$default$15:()Ljava/lang/String;
       163: astore        16
       165: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       168: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       171: invokevirtual #890                // Method argonaut/PrettyParams.copy$default$16:()Ljava/lang/String;
       174: astore        17
       176: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       179: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       182: invokevirtual #893                // Method argonaut/PrettyParams.copy$default$18:()Z
       185: istore        18
       187: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
       190: invokevirtual #841                // Method argonaut/PrettyParams$.nospace:()Largonaut/PrettyParams;
       193: aload_2
       194: aload_3
       195: aload         4
       197: aload         5
       199: aload         6
       201: aload         7
       203: aload         8
       205: aload         9
       207: aload         10
       209: aload         11
       211: aload         12
       213: aload         13
       215: aload         14
       217: aload         15
       219: aload         16
       221: aload         17
       223: iconst_1
       224: iload         18
       226: invokevirtual #897                // Method argonaut/PrettyParams.copy:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Largonaut/PrettyParams;
       229: aload_0
       230: invokevirtual #830                // Method argonaut/PrettyParams.pretty:(Largonaut/Json;)Ljava/lang/String;
       233: areturn
      LineNumberTable:
        line 432: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            1     228     1   x$1   Z
           11     218     2   x$2   Ljava/lang/String;
           21     208     3   x$3   Ljava/lang/String;
           31     198     4   x$4   Ljava/lang/String;
           42     187     5   x$5   Ljava/lang/String;
           53     176     6   x$6   Ljava/lang/String;
           64     165     7   x$7   Ljava/lang/String;
           75     154     8   x$8   Ljava/lang/String;
           86     143     9   x$9   Ljava/lang/String;
           97     132    10  x$10   Ljava/lang/String;
          108     121    11  x$11   Ljava/lang/String;
          119     110    12  x$12   Ljava/lang/String;
          130      99    13  x$13   Ljava/lang/String;
          141      88    14  x$14   Ljava/lang/String;
          152      77    15  x$15   Ljava/lang/String;
          163      66    16  x$16   Ljava/lang/String;
          174      55    17  x$17   Ljava/lang/String;
          185      44    18  x$18   Z
            0     234     0  this   Largonaut/Json;

  public java.lang.String spaces2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
         3: invokevirtual #918                // Method argonaut/PrettyParams$.spaces2:()Largonaut/PrettyParams;
         6: aload_0
         7: invokevirtual #830                // Method argonaut/PrettyParams.pretty:(Largonaut/Json;)Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 438: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;

  public java.lang.String spaces4();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #837                // Field argonaut/PrettyParams$.MODULE$:Largonaut/PrettyParams$;
         3: invokevirtual #921                // Method argonaut/PrettyParams$.spaces4:()Largonaut/PrettyParams;
         6: aload_0
         7: invokevirtual #830                // Method argonaut/PrettyParams.pretty:(Largonaut/Json;)Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 444: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/Json;

  public argonaut.Json deepmerge(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=10, args_size=2
         0: new           #925                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #436                // Method obj:()Lscala/Option;
         8: aload_1
         9: invokevirtual #436                // Method obj:()Lscala/Option;
        12: invokespecial #928                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        15: astore_3
        16: aload_3
        17: ifnull        127
        20: aload_3
        21: invokevirtual #931                // Method scala/Tuple2._1:()Ljava/lang/Object;
        24: checkcast     #322                // class scala/Option
        27: astore        4
        29: aload_3
        30: invokevirtual #934                // Method scala/Tuple2._2:()Ljava/lang/Object;
        33: checkcast     #322                // class scala/Option
        36: astore        5
        38: aload         4
        40: instanceof    #936                // class scala/Some
        43: ifeq          124
        46: aload         4
        48: checkcast     #936                // class scala/Some
        51: astore        6
        53: aload         6
        55: invokevirtual #939                // Method scala/Some.value:()Ljava/lang/Object;
        58: checkcast     #477                // class argonaut/JsonObject
        61: astore        7
        63: aload         5
        65: instanceof    #936                // class scala/Some
        68: ifeq          121
        71: aload         5
        73: checkcast     #936                // class scala/Some
        76: astore        8
        78: aload         8
        80: invokevirtual #939                // Method scala/Some.value:()Ljava/lang/Object;
        83: checkcast     #477                // class argonaut/JsonObject
        86: astore        9
        88: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        91: invokevirtual #78                 // Method argonaut/Json$.jObject:()Lscala/Function1;
        94: aload         9
        96: invokevirtual #942                // Method argonaut/JsonObject.toList:()Lscala/collection/immutable/List;
        99: aload         7
       101: invokedynamic #949,  0            // InvokeDynamic #52:apply:()Lscala/Function2;
       106: invokevirtual #599                // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       109: invokeinterface #193,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       114: checkcast     #2                  // class argonaut/Json
       117: astore_2
       118: goto          135
       121: goto          130
       124: goto          130
       127: goto          130
       130: aload_1
       131: astore_2
       132: goto          135
       135: aload_2
       136: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 121
          locals = [ class argonaut/Json, class argonaut/Json, top, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class argonaut/JsonObject ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/Json, class argonaut/Json, class argonaut/Json, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 458: 0
        line 459: 16
        line 460: 88
        line 459: 121
        line 466: 130
        line 458: 135
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           86      35     9    oy   Largonaut/JsonObject;
           61      63     7    ox   Largonaut/JsonObject;
            0     137     0  this   Largonaut/Json;
            0     137     1     y   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      y                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #954                // Method nospacesWithOrder:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 474: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/Json;

  public static final scala.None$ $anonfun$bool$1();
    descriptor: ()Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 86: 0

  public static final scala.Some $anonfun$bool$2(boolean);
    descriptor: (Z)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #936                // class scala/Some
         3: dup
         4: iload_0
         5: invokestatic  #188                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: invokespecial #957                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.None$ $anonfun$bool$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$2   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final scala.None$ $anonfun$bool$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final scala.None$ $anonfun$bool$5(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$4   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final scala.None$ $anonfun$bool$6(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$5   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final scala.None$ $anonfun$number$1();
    descriptor: ()Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 91: 0

  public static final scala.None$ $anonfun$number$2(boolean);
    descriptor: (Z)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$6   Z
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final scala.Some $anonfun$number$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #936                // class scala/Some
         3: dup
         4: aload_0
         5: invokespecial #957                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$7   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final scala.None$ $anonfun$number$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$8   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static final scala.None$ $anonfun$number$5(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$9   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      x$9                            final

  public static final scala.None$ $anonfun$number$6(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$10   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$10                           final

  public static final scala.None$ $anonfun$string$1();
    descriptor: ()Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 96: 0

  public static final scala.None$ $anonfun$string$2(boolean);
    descriptor: (Z)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$11   Z
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final scala.None$ $anonfun$string$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$12   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static final scala.Some $anonfun$string$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #936                // class scala/Some
         3: dup
         4: aload_0
         5: invokespecial #957                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$13   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$13                           final

  public static final scala.None$ $anonfun$string$5(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$14   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      x$14                           final

  public static final scala.None$ $anonfun$string$6(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$15   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$15                           final

  public static final scala.None$ $anonfun$array$1();
    descriptor: ()Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 101: 0

  public static final scala.Some $anonfun$array$2(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #936                // class scala/Some
         3: dup
         4: aload_0
         5: invokespecial #957                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$16   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      x$16                           final

  public static final scala.None$ $anonfun$array$3(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$17   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$17                           final

  public static final scala.None$ $anonfun$obj$1();
    descriptor: ()Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 106: 0

  public static final scala.None$ $anonfun$obj$2(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$18   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      x$18                           final

  public static final scala.Some $anonfun$obj$3(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #936                // class scala/Some
         3: dup
         4: aload_0
         5: invokespecial #957                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$19   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$19                           final

  public static final scala.collection.immutable.List $anonfun$assoc$1(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #942                // Method argonaut/JsonObject.toList:()Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$20   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$20                           final

  public static final argonaut.JsonObject $anonfun$$minus$greater$colon$1(scala.Tuple2, argonaut.JsonObject);
    descriptor: (Lscala/Tuple2;Largonaut/JsonObject;)Largonaut/JsonObject;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #925                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #931                // Method scala/Tuple2._1:()Ljava/lang/Object;
         8: aload_0
         9: invokevirtual #934                // Method scala/Tuple2._2:()Ljava/lang/Object;
        12: invokespecial #928                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        15: astore_2
        16: aload_1
        17: aload_2
        18: invokevirtual #967                // Method argonaut/JsonObject.$plus$colon:(Lscala/Tuple2;)Largonaut/JsonObject;
        21: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0   k$1   Lscala/Tuple2;
            0      22     1     o   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      k$1                            final
      o                              final

  public static final argonaut.Json $anonfun$$minus$greater$qmark$colon$1(argonaut.Json, scala.Tuple2);
    descriptor: (Largonaut/Json;Lscala/Tuple2;)Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #971                // Method $minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
         5: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/Json;
            0       6     1  x$21   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$21                           final

  public static final argonaut.Json $anonfun$$minus$greater$qmark$colon$2(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 $this   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final scala.collection.immutable.List $anonfun$$minus$minus$greater$greater$colon$1(argonaut.Json, scala.collection.immutable.List);
    descriptor: (Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: astore_2
         2: aload_1
         3: aload_2
         4: invokevirtual #977                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
         7: areturn
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   k$2   Largonaut/Json;
            0       8     1  x$22   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      k$2                            final
      x$22                           final

  public static final scala.collection.immutable.List $anonfun$$minus$minus$greater$greater$qmark$colon$2(argonaut.Json, scala.collection.immutable.List);
    descriptor: (Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: astore_2
         2: aload_1
         3: aload_2
         4: invokevirtual #977                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
         7: areturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   j$1   Largonaut/Json;
            0       8     1  x$23   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      j$1                            final
      x$23                           final

  public static final argonaut.Json $anonfun$$minus$minus$greater$greater$qmark$colon$1(argonaut.Json, argonaut.Json);
    descriptor: (Largonaut/Json;Largonaut/Json;)Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #984,  0            // InvokeDynamic #53:apply:(Largonaut/Json;)Lscala/Function1;
         7: invokevirtual #532                // Method withArray:(Lscala/Function1;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Largonaut/Json;
            0      11     1     j   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      j                              final

  public static final argonaut.Json $anonfun$$minus$minus$greater$greater$qmark$colon$3(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 $this   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$$minus$bar$bar$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 190: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   h$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      h$1                            final

  public static final java.lang.String $anonfun$$minus$bar$bar$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 190: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   b$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      b$1                            final

  public static final scala.Option $anonfun$$minus$bar$bar$3(java.lang.String, argonaut.Json);
    descriptor: (Ljava/lang/String;Largonaut/Json;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #994,  0            // InvokeDynamic #54:apply:(Ljava/lang/String;)Lscala/Function0;
         7: invokevirtual #996                // Method $minus$bar:(Lscala/Function0;)Lscala/Option;
        10: areturn
      LineNumberTable:
        line 190: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   b$1   Ljava/lang/String;
            0      11     1  x$24   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      b$1                            final
      x$24                           final

  public static final scala.Option $anonfun$$minus$bar$bar$2(scala.Option, java.lang.String);
    descriptor: (Lscala/Option;Ljava/lang/String;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1004,  0           // InvokeDynamic #55:apply:(Ljava/lang/String;)Lscala/Function1;
         7: invokevirtual #745                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        10: areturn
      LineNumberTable:
        line 190: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     a   Lscala/Option;
            0      11     1     b   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      a                              final
      b                              final

  public static final boolean $anonfun$isTrue$1(boolean);
    descriptor: (Z)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: ireturn
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0     z   Z
    MethodParameters:
      Name                           Flags
      z                              final

  public static final boolean $anonfun$isFalse$1(boolean);
    descriptor: (Z)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: ifne          8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     z   Z
    MethodParameters:
      Name                           Flags
      z                              final

  public static final argonaut.JsonLong $anonfun$numberOrZero$1();
    descriptor: ()Largonaut/JsonLong;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #1010               // class argonaut/JsonLong
         3: dup
         4: lconst_0
         5: invokespecial #1013               // Method argonaut/JsonLong."<init>":(J)V
         8: areturn
      LineNumberTable:
        line 271: 0

  public static final java.lang.String $anonfun$stringOrEmpty$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc_w         #1015               // String
         3: areturn
      LineNumberTable:
        line 277: 0

  public static final scala.collection.immutable.Nil$ $anonfun$arrayOrEmpty$1();
    descriptor: ()Lscala/collection/immutable/Nil$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #562                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         3: areturn
      LineNumberTable:
        line 283: 0

  public static final argonaut.JsonObject $anonfun$objectOrEmpty$1();
    descriptor: ()Largonaut/JsonObject;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #1020               // Field argonaut/JsonObject$.MODULE$:Largonaut/JsonObject$;
         3: invokevirtual #1023               // Method argonaut/JsonObject$.empty:()Largonaut/JsonObject;
         6: areturn
      LineNumberTable:
        line 289: 0

  public static final scala.collection.immutable.List $anonfun$objectFields$1(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1026               // Method argonaut/JsonObject.fields:()Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$25   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$25                           final

  public static final scala.collection.immutable.Nil$ $anonfun$objectFieldsOrEmpty$1();
    descriptor: ()Lscala/collection/immutable/Nil$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #562                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         3: areturn
      LineNumberTable:
        line 309: 0

  public static final scala.collection.immutable.List $anonfun$objectValues$1(argonaut.JsonObject);
    descriptor: (Largonaut/JsonObject;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1030               // Method argonaut/JsonObject.values:()Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$26   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      x$26                           final

  public static final scala.collection.immutable.Nil$ $anonfun$objectValuesOrEmpty$1();
    descriptor: ()Lscala/collection/immutable/Nil$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #562                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         3: areturn
      LineNumberTable:
        line 329: 0

  public static final boolean $anonfun$hasField$1(scala.Function0, argonaut.JsonObject);
    descriptor: (Lscala/Function0;Largonaut/JsonObject;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #176,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
         7: checkcast     #463                // class java/lang/String
        10: invokevirtual #1038               // Method argonaut/JsonObject.$qmark$qmark:(Ljava/lang/String;)Z
        13: ireturn
      LineNumberTable:
        line 335: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   f$1   Lscala/Function0;
            0      14     1  x$27   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x$27                           final

  public static final scala.Option $anonfun$field$1(scala.Function0, argonaut.JsonObject);
    descriptor: (Lscala/Function0;Largonaut/JsonObject;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #176,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
         7: checkcast     #463                // class java/lang/String
        10: invokevirtual #1042               // Method argonaut/JsonObject.apply:(Ljava/lang/String;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   f$2   Lscala/Function0;
            0      14     1  x$28   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      f$2                            final
      x$28                           final

  public static final argonaut.Json $anonfun$fieldOrNull$1();
    descriptor: ()Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #126                // Method argonaut/Json$.jNull:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 353: 0

  public static final argonaut.Json $anonfun$fieldOrTrue$1();
    descriptor: ()Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #73                 // Method argonaut/Json$.jTrue:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 359: 0

  public static final argonaut.Json $anonfun$fieldOrFalse$1();
    descriptor: ()Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #70                 // Method argonaut/Json$.jFalse:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 365: 0

  public static final argonaut.Json $anonfun$fieldOrZero$1();
    descriptor: ()Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #67                 // Method argonaut/Json$.jZero:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 371: 0

  public static final argonaut.Json $anonfun$fieldOrEmptyString$1();
    descriptor: ()Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #64                 // Method argonaut/Json$.jEmptyString:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 377: 0

  public static final argonaut.Json $anonfun$fieldOrEmptyArray$1();
    descriptor: ()Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #61                 // Method argonaut/Json$.jEmptyArray:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 383: 0

  public static final argonaut.Json $anonfun$fieldOrEmptyObject$1();
    descriptor: ()Largonaut/Json;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #48                 // Method argonaut/Json$.jEmptyObject:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 389: 0

  public static final argonaut.JsonObject $anonfun$deepmerge$1(argonaut.JsonObject, scala.Tuple2);
    descriptor: (Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=12, args_size=2
         0: new           #925                // class scala/Tuple2
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #928                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: astore        4
        11: aload         4
        13: ifnull        161
        16: aload         4
        18: invokevirtual #931                // Method scala/Tuple2._1:()Ljava/lang/Object;
        21: checkcast     #477                // class argonaut/JsonObject
        24: astore        5
        26: aload         4
        28: invokevirtual #934                // Method scala/Tuple2._2:()Ljava/lang/Object;
        31: checkcast     #925                // class scala/Tuple2
        34: astore        6
        36: aload         6
        38: ifnull        158
        41: aload         6
        43: invokevirtual #931                // Method scala/Tuple2._1:()Ljava/lang/Object;
        46: checkcast     #463                // class java/lang/String
        49: astore        7
        51: aload         6
        53: invokevirtual #934                // Method scala/Tuple2._2:()Ljava/lang/Object;
        56: checkcast     #2                  // class argonaut/Json
        59: astore        8
        61: aload         5
        63: aload         7
        65: invokevirtual #1042               // Method argonaut/JsonObject.apply:(Ljava/lang/String;)Lscala/Option;
        68: astore        9
        70: getstatic     #567                // Field scala/None$.MODULE$:Lscala/None$;
        73: aload         9
        75: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          94
        81: aload         5
        83: aload         7
        85: aload         8
        87: invokevirtual #1048               // Method argonaut/JsonObject.$plus:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
        90: astore_3
        91: goto          153
        94: goto          97
        97: aload         9
        99: instanceof    #936                // class scala/Some
       102: ifeq          140
       105: aload         9
       107: checkcast     #936                // class scala/Some
       110: astore        10
       112: aload         10
       114: invokevirtual #939                // Method scala/Some.value:()Ljava/lang/Object;
       117: checkcast     #2                  // class argonaut/Json
       120: astore        11
       122: aload         5
       124: aload         7
       126: aload         11
       128: aload         8
       130: invokevirtual #1050               // Method deepmerge:(Largonaut/Json;)Largonaut/Json;
       133: invokevirtual #1048               // Method argonaut/JsonObject.$plus:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
       136: astore_3
       137: goto          153
       140: goto          143
       143: new           #217                // class scala/MatchError
       146: dup
       147: aload         9
       149: invokespecial #221                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       152: athrow
       153: aload_3
       154: astore_2
       155: goto          174
       158: goto          164
       161: goto          164
       164: new           #217                // class scala/MatchError
       167: dup
       168: aload         4
       170: invokespecial #221                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       173: athrow
       174: aload_2
       175: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 94
          locals = [ class argonaut/JsonObject, class scala/Tuple2, top, top, class scala/Tuple2, class argonaut/JsonObject, class scala/Tuple2, class java/lang/String, class argonaut/Json, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 42 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonObject, class scala/Tuple2, top, class argonaut/JsonObject, class scala/Tuple2, class argonaut/JsonObject, class scala/Tuple2, class java/lang/String, class argonaut/Json, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/JsonObject, class scala/Tuple2, top, top, class scala/Tuple2, class argonaut/JsonObject, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonObject, class scala/Tuple2, class argonaut/JsonObject, class argonaut/JsonObject, class scala/Tuple2, class argonaut/JsonObject, class scala/Tuple2, class java/lang/String, class argonaut/Json, class scala/Option ]
          stack = []
      LineNumberTable:
        line 460: 0
        line 461: 11
        line 462: 70
        line 463: 97
        line 461: 143
        line 460: 164
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          120      20    11     l   Largonaut/Json;
           49     109     7     k   Ljava/lang/String;
           59      99     8     v   Largonaut/Json;
           24     137     5   acc   Largonaut/JsonObject;
            0     176     0  x0$1   Largonaut/JsonObject;
            0     176     1  x1$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final
      x1$1                           final

  public argonaut.Json();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1055               // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #1059               // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
         8: return
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Largonaut/Json;

  public static final scala.Some $anonfun$bool$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1062               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #1064               // Method $anonfun$bool$2:(Z)Lscala/Some;
         7: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.None$ $anonfun$number$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1062               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #1067               // Method $anonfun$number$2:(Z)Lscala/None$;
         7: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$6   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final scala.None$ $anonfun$string$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1062               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #1069               // Method $anonfun$string$2:(Z)Lscala/None$;
         7: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$11   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final java.lang.Object $anonfun$isTrue$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1062               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #1071               // Method $anonfun$isTrue$1:(Z)Z
         7: invokestatic  #188                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     z   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      z                              final

  public static final java.lang.Object $anonfun$isFalse$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1062               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #1073               // Method $anonfun$isFalse$1:(Z)Z
         7: invokestatic  #188                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     z   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      z                              final

  public static final java.lang.Object $anonfun$hasField$1$adapted(scala.Function0, argonaut.JsonObject);
    descriptor: (Lscala/Function0;Largonaut/JsonObject;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1075               // Method $anonfun$hasField$1:(Lscala/Function0;Largonaut/JsonObject;)Z
         5: invokestatic  #188                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 335: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   f$1   Lscala/Function0;
            0       9     1  x$27   Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x$27                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #1087,  0           // InvokeDynamic #56:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Json.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\rmd!\u0002&L\u0003Cq\u0005\"\u00023\u0001\t\u0003)\u0007\"\u00025\u0001\t\u0003I\u0007bBAN\u0001\u0011\u0005\u0011Q\u0014\u0005\b\u0003g\u0003A\u0011AA[\u0011\u001d\ti\f\u0001C\u0001\u0003kCq!a0\u0001\t\u0003\t\t\rC\u0004\u0002J\u0002!\t!a3\t\u000f\u0005M\u0007\u0001\"\u0001\u0002V\"9\u0011q\u001b\u0001\u0005\u0002\u0005e\u0007bBAq\u0001\u0011\u0005\u00111\u001d\u0005\b\u0003O\u0004A\u0011AAu\u0011\u001d\t\t\b\u0001C\u0001\u0003gDq!a\u001b\u0001\t\u0003\t9\u0010C\u0004\u0002|\u0002!\t!!@\t\u000f\t5\u0001\u0001\"\u0001\u0003\u0010!9!\u0011\u0003\u0001\u0005\u0002\tM\u0001b\u0002B\u000e\u0001\u0011\u0005!Q\u0004\u0005\b\u0005G\u0001A\u0011\u0001B\u0013\u0011\u001d\u0011Y\u0003\u0001C\u0001\u0005[AqAa\r\u0001\t\u0003\u0011)\u0004C\u0004\u0003:\u0001!\tAa\u000f\t\u000f\t\r\u0003\u0001\"\u0001\u0003F!9!\u0011\n\u0001\u0005\u0002\t-\u0003b\u0002B)\u0001\u0011\u0005!1\u000b\u0005\b\u0005;\u0002A\u0011\u0001B0\u0011\u001d\u00119\u0007\u0001C\u0001\u0003+DqA!\u001b\u0001\t\u0003\t)\u000eC\u0004\u0003l\u0001!\t!!6\t\u000f\t5\u0004\u0001\"\u0001\u0002V\"9!q\u000e\u0001\u0005\u0002\u0005U\u0007b\u0002B9\u0001\u0011\u0005\u0011Q\u001b\u0005\b\u0005g\u0002A\u0011AAk\u0011\u001d\u0011)\b\u0001C\u0001\u0005oBqAa \u0001\t\u0003\u0011\t\tC\u0004\u0003\b\u0002!\tA!#\t\u000f\t=\u0005\u0001\"\u0001\u0003\u0012\"9!q\u0013\u0001\u0005\u0002\te\u0005b\u0002BN\u0001\u0011\u0005!Q\u0014\u0005\b\u0005?\u0003A\u0011\u0001BQ\u0011\u001d\u0011\u0019\u000b\u0001C\u0001\u0005KCqAa*\u0001\t\u0003\u0011I\u000bC\u0004\u0003.\u0002!\tAa,\t\u000f\tU\u0006\u0001\"\u0001\u00038\"9!\u0011\u0018\u0001\u0005\u0002\tm\u0006b\u0002Ba\u0001\u0011\u0005!1\u0019\u0005\b\u0005\u0013\u0004A\u0011\u0001Bf\u0011\u001d\u0011i\r\u0001C\u0001\u0005\u001fDqAa5\u0001\t\u0003\u0011)\u000eC\u0004\u0003Z\u0002!\tAa7\t\u000f\t\u0015\b\u0001\"\u0001\u0003h\"9!1\u001e\u0001\u0005\u0002\t5\bb\u0002By\u0001\u0011\u0005!1\u001f\u0005\b\u0005o\u0004A\u0011\u0001B}\u0011\u001d\u0011i\u0010\u0001C\u0001\u0005\u007fDqaa\u0001\u0001\t\u0003\u0019)\u0001C\u0004\u0004\n\u0001!\taa\u0003\t\u000f\r=\u0001\u0001\"\u0001\u0004\u0012!911\u0003\u0001\u0005\u0002\rU\u0001bBB\u0018\u0001\u0011\u00051\u0011\u0007\u0005\b\u0007\u007f\u0001A\u0011AB!\u0011\u001d\u0019i\u0005\u0001C\u0001\u0007#Aqaa\u0014\u0001\t\u0003\u0019\t\u0002C\u0004\u0004R\u0001!\ta!\u0005\t\u000f\rM\u0003\u0001\"\u0001\u0004\u0012!91Q\u000b\u0001\u0005\u0002\r]\u0003bBB/\u0001\u0011\u00053qL\u0004\b\u0003gY\u0005\u0012AA\u001b\r\u0019Q5\n#\u0001\u00028!1A\r\u0012C\u0001\u0003\u001bBq!a\u0014E\t\u0003\t\t\u0006C\u0004\u0002l\u0011#\t!!\u001c\t\u000f\u0005ED\t\"\u0001\u0002t!I\u00111\u0010#\u0002\u0002\u0013%\u0011Q\u0010\u0002\u0005\u0015N|gNC\u0001M\u0003!\t\'oZ8oCV$8\u0001A\n\u0005\u0001=+\u0006\f\u0005\u0002Q\'6\t\u0011KC\u0001S\u0003\u0015\u00198-\u00197b\u0013\t!\u0016K\u0001\u0004B]f\u0014VM\u001a\t\u0003!ZK!aV)\u0003\u000fA\u0013x\u000eZ;diB\u0011\u0011,\u0019\b\u00035~s!a\u00170\u000e\u0003qS!!X\'\u0002\rq\u0012xn\u001c;?\u0013\u0005\u0011\u0016B\u00011R\u0003\u001d\u0001\u0018mY6bO\u0016L!AY2\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005\u0001\f\u0016A\u0002\u001fj]&$h\bF\u0001g!\t9\u0007!D\u0001L\u0003\u00111w\u000e\u001c3\u0016\u0005)lGcC6ww\u0006\u001d\u00111CA\u0015\u0003\u001f\u0003\"\u0001\\7\r\u0001\u0011)aN\u0001b\u0001_\n\t\u0001,\u0005\u0002qgB\u0011\u0001+]\u0005\u0003eF\u0013qAT8uQ&tw\r\u0005\u0002Qi&\u0011Q/\u0015\u0002\u0004\u0003:L\bBB<\u0003\t\u0003\u0007\u00010\u0001\u0005kg>tg*\u001e7m!\r\u0001\u0016p[\u0005\u0003uF\u0013\u0001\u0002\u00102z]\u0006lWM\u0010\u0005\u0006y\n\u0001\r!`\u0001\tUN|gNQ8pYB)\u0001K`A\u0001W&\u0011q0\u0015\u0002\n\rVt7\r^5p]F\u00022\u0001UA\u0002\u0013\r\t)!\u0015\u0002\b\u0005>|G.Z1o\u0011\u001d\tIA\u0001a\u0001\u0003\u0017\t!B[:p]:+XNY3s!\u0015\u0001f0!\u0004l!\r9\u0017qB\u0005\u0004\u0003#Y%A\u0003&t_:tU/\u001c2fe\"9\u0011Q\u0003\u0002A\u0002\u0005]\u0011A\u00036t_:\u001cFO]5oOB)\u0001K`A\rWB!\u00111DA\u0012\u001d\u0011\ti\"a\b\u0011\u0005m\u000b\u0016bAA\u0011#\u00061\u0001K]3eK\u001aLA!!\n\u0002(\t11\u000b\u001e:j]\u001eT1!!\tR\u0011\u001d\tYC\u0001a\u0001\u0003[\t\u0011B[:p]\u0006\u0013(/Y=\u0011\u000bAs\u0018qF6\u0011\t\u0005E\u00121\u0012\b\u0003O\u000e\u000bAAS:p]B\u0011q\rR\n\u0007\t>\u000bI$a\u0010\u0011\u0007\u001d\fY$C\u0002\u0002>-\u0013QAS:p]N\u0004B!!\u0011\u0002L5\u0011\u00111\t\u0006\u0005\u0003\u000b\n9%\u0001\u0002j_*\u0011\u0011\u0011J\u0001\u0005U\u00064\u0018-C\u0002c\u0003\u0007\"\"!!\u000e\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0007\u0019\f\u0019\u0006C\u0004\u0002V\u0019\u0003\r!a\u0016\u0002\r\u0019LW\r\u001c3t!\u0015\u0001\u0016\u0011LA/\u0013\r\tY&\u0015\u0002\u000byI,\u0007/Z1uK\u0012t\u0004C\u0002)\u0002`\u0005\rd-C\u0002\u0002bE\u0013a\u0001V;qY\u0016\u0014\u0004\u0003BA3\u0003Oj\u0011\u0001R\u0005\u0005\u0003S\nYDA\u0005Kg>tg)[3mI\u0006\u0019qN\u00196\u0015\u0007\u0019\fy\u0007C\u0004\u0002V\u001d\u0003\r!a\u0016\u0002\u000b\u0005\u0014(/Y=\u0015\u0007\u0019\f)\bC\u0004\u0002x!\u0003\r!!\u001f\u0002\u0011\u0015dW-\\3oiN\u0004B\u0001UA-M\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011q\u0010\t\u0005\u0003\u0003\u000b9)\u0004\u0002\u0002\u0004*!\u0011QQA$\u0003\u0011a\u0017M\\4\n\t\u0005%\u00151\u0011\u0002\u0007\u001f\nTWm\u0019;\n\t\u00055\u00151\b\u0002\n\u0015N|g.\u0011:sCfDq!!%\u0003\u0001\u0004\t\u0019*\u0001\u0006kg>twJ\u00196fGR\u0004R\u0001\u0015@\u0002\u0016.\u00042aZAL\u0013\r\tIj\u0013\u0002\u000b\u0015N|gn\u00142kK\u000e$\u0018!D1se\u0006LxJ](cU\u0016\u001cG/\u0006\u0003\u0002 \u0006\rF\u0003CAQ\u0003K\u000bY+a,\u0011\u00071\f\u0019\u000bB\u0003o\u0007\t\u0007q\u000e\u0003\u0005\u0002(\u000e!\t\u0019AAU\u0003\ty\'\u000f\u0005\u0003Qs\u0006\u0005\u0006bBA\u0016\u0007\u0001\u0007\u0011Q\u0016\t\u0007!z\fy#!)\t\u000f\u0005E5\u00011\u0001\u00022B1\u0001K`AK\u0003C\u000b1\"\u001e8bef|F\u0005\u001d7vgV\u0011\u0011q\u0017\t\u0004O\u0006e\u0016bAA^\u0017\n11)\u001e:t_J\faaY;sg>\u0014\u0018a\u00025dkJ\u001cxN]\u000b\u0003\u0003\u0007\u00042aZAc\u0013\r\t9m\u0013\u0002\b\u0011\u000e+(o]8s\u0003\u001d\t7-\u001e:t_J,\"!!4\u0011\u0007\u001d\fy-C\u0002\u0002R.\u0013q!Q\"veN|\'/\u0001\u0004jg:+H\u000e\\\u000b\u0003\u0003\u0003\tAAY8pYV\u0011\u00111\u001c\t\u0006!\u0006u\u0017\u0011A\u0005\u0004\u0003?\f&AB(qi&|g.\u0001\u0004ok6\u0014WM]\u000b\u0003\u0003K\u0004R\u0001UAo\u0003\u001b\taa\u001d;sS:<WCAAv!\u0015\u0001\u0016Q\\Aw!\u0011\t\t$a<\n\t\u0005E\u00181\b\u0002\u000b\u0015N|gn\u0015;sS:<WCAA{!\u0015\u0001\u0016Q\\A\u0018+\t\tI\u0010E\u0003Q\u0003;\f)*A\u0003bgN|7-\u0006\u0002\u0002\u0000B)\u0001+!8\u0003\u0002A)\u0011La\u0001\u0003\b%\u0019!QA2\u0003\t1K7\u000f\u001e\t\u0005\u0003c\u0011I!\u0003\u0003\u0003\f\u0005m\"!\u0003&t_:\f5o]8d\u0003\rqw\u000e^\u000b\u0002M\u0006Qq/\u001b;i\u001dVl\'-\u001a:\u0015\u0007\u0019\u0014)\u0002C\u0004\u0003\u0018A\u0001\rA!\u0007\u0002\u0003-\u0004b\u0001\u0015@\u0002\u000e\u00055\u0011AC<ji\"\u001cFO]5oOR\u0019aMa\b\t\u000f\t]\u0011\u00031\u0001\u0003\"A1\u0001K`Aw\u0003[\f\u0011b^5uQ\u0006\u0013(/Y=\u0015\u0007\u0019\u00149\u0003C\u0004\u0003\u0018I\u0001\rA!\u000b\u0011\rAs\u0018qFA\u0018\u0003)9\u0018\u000e\u001e5PE*,7\r\u001e\u000b\u0004M\n=\u0002b\u0002B\f\'\u0001\u0007!\u0011\u0007\t\u0007!z\f)*!&\u0002)\u0011j\u0017N\\;tI\u001d\u0014X-\u0019;fe\u0012\u001aw\u000e\\8o)\r1\'q\u0007\u0005\b\u0005/!\u0002\u0019\u0001B\u0004\u0003i!S.\u001b8vg\u0012:\'/Z1uKJ$\u0013/\\1sW\u0012\u001aw\u000e\\8o)\r1\'Q\b\u0005\b\u0005\u007f)\u0002\u0019\u0001B!\u0003\u0005y\u0007#\u0002)\u0002^\n\u001d\u0011A\t\u0013nS:,8\u000fJ7j]V\u001cHe\u001a:fCR,\'\u000fJ4sK\u0006$XM\u001d\u0013d_2|g\u000eF\u0002g\u0005\u000fBaAa\u0006\u0017\u0001\u00041\u0017\u0001\u000b\u0013nS:,8\u000fJ7j]V\u001cHe\u001a:fCR,\'\u000fJ4sK\u0006$XM\u001d\u0013r[\u0006\u00148\u000eJ2pY>tGc\u00014\u0003N!9!qH\fA\u0002\t=\u0003\u0003\u0002)\u0002^\u001a\f!\u0002J7j]V\u001cHEY1s)\u0011\u0011yE!\u0016\t\u0011\t]\u0003\u0004\"a\u0001\u00053\n\u0011A\u001a\t\u0005!f\u0014Y\u0006\u0005\u0003\u00022\u0005\u001d\u0014A\u0004\u0013nS:,8\u000f\n2be\u0012\u0012\u0017M\u001d\u000b\u0005\u0005\u001f\u0012\t\u0007C\u0004\u0003de\u0001\rA!\u001a\u0002\u0005\u0019\u001c\b#B-\u0003\u0004\tm\u0013AB5t)J,X-A\u0004jg\u001a\u000bGn]3\u0002\r%\u001c(i\\8m\u0003!I7OT;nE\u0016\u0014\u0018\u0001C5t\'R\u0014\u0018N\\4\u0002\u000f%\u001c\u0018I\u001d:bs\u0006A\u0011n](cU\u0016\u001cG/\u0001\u0005ok6\u0014WM](s)\u0011\tiA!\u001f\t\u0011\tm\u0014\u0005\"a\u0001\u0005{\n\u0011\u0001\u001a\t\u0005!f\fi!\u0001\u0005tiJLgnZ(s)\u0011\tiOa!\t\u0011\tm$\u0005\"a\u0001\u0005\u000b\u0003B\u0001U=\u0002n\u00069\u0011M\u001d:bs>\u0013H\u0003BA\u0018\u0005\u0017C\u0001Ba\u001f$\t\u0003\u0007!Q\u0012\t\u0005!f\fy#\u0001\u0005pE*,7\r^(s)\u0011\t)Ja%\t\u0011\tmD\u0005\"a\u0001\u0005+\u0003B\u0001U=\u0002\u0016\u0006aa.^7cKJ|%OW3s_V\u0011\u0011QB\u0001\u000egR\u0014\u0018N\\4Pe\u0016k\u0007\u000f^=\u0016\u0005\u00055\u0018\u0001D1se\u0006LxJ]#naRLXCAA\u0018\u00035y\'M[3di>\u0013X)\u001c9usV\u0011\u0011QS\u0001\r_\nTWm\u0019;GS\u0016dGm]\u000b\u0003\u0005W\u0003R\u0001UAo\u0005K\nab\u001c2kK\u000e$h)[3mIN|%\u000f\u0006\u0003\u0003f\tE\u0006\u0002\u0003B,U\u0011\u0005\rAa-\u0011\tAK(QM\u0001\u0014_\nTWm\u0019;GS\u0016dGm](s\u000b6\u0004H/_\u000b\u0003\u0005K\nAb\u001c2kK\u000e$h+\u00197vKN,\"A!0\u0011\u000bA\u000biNa0\u0011\te\u0013\u0019AZ\u0001\u000f_\nTWm\u0019;WC2,Xm](s)\u0011\u0011yL!2\t\u0011\t]Q\u0006\"a\u0001\u0005\u000f\u0004B\u0001U=\u0003@\u0006\u0019rN\u00196fGR4\u0016\r\\;fg>\u0013X)\u001c9usV\u0011!qX\u0001\tQ\u0006\u001ch)[3mIR!\u0011\u0011\u0001Bi\u0011!\u00119f\fCA\u0002\te\u0013!\u00024jK2$G\u0003\u0002B(\u0005/D\u0001Ba\u00161\t\u0003\u0007!\u0011L\u0001\bM&,G\u000eZ(s)\u00151\'Q\u001cBp\u0011!\u00119&\rCA\u0002\te\u0003\u0002\u0003Bqc\u0011\u0005\rAa9\u0002\u0003)\u00042\u0001U=g\u0003-1\u0017.\u001a7e\u001fJtU\u000f\u001c7\u0015\u0007\u0019\u0014I\u000f\u0003\u0005\u0003XI\"\t\u0019\u0001B-\u0003-1\u0017.\u001a7e\u001fJ$&/^3\u0015\u0007\u0019\u0014y\u000f\u0003\u0005\u0003XM\"\t\u0019\u0001B-\u000311\u0017.\u001a7e\u001fJ4\u0015\r\\:f)\r1\'Q\u001f\u0005\t\u0005/\"D\u00111\u0001\u0003Z\u0005Ya-[3mI>\u0013(,\u001a:p)\r1\'1 \u0005\t\u0005/*D\u00111\u0001\u0003Z\u0005\u0011b-[3mI>\u0013X)\u001c9usN#(/\u001b8h)\r17\u0011\u0001\u0005\t\u0005/2D\u00111\u0001\u0003Z\u0005\tb-[3mI>\u0013X)\u001c9us\u0006\u0013(/Y=\u0015\u0007\u0019\u001c9\u0001\u0003\u0005\u0003X]\"\t\u0019\u0001B-\u0003I1\u0017.\u001a7e\u001fJ,U\u000e\u001d;z\u001f\nTWm\u0019;\u0015\u0007\u0019\u001ci\u0001\u0003\u0005\u0003Xa\"\t\u0019\u0001B-\u0003\u0011q\u0017-\\3\u0016\u0005\u0005e\u0011a\u00026eK\u000e|G-Z\u000b\u0005\u0007/\u0019\t\u0003\u0006\u0003\u0004\u001a\r\u0015\u0002#B4\u0004\u001c\r}\u0011bAB\u000f\u0017\naA)Z2pI\u0016\u0014Vm];miB\u0019An!\t\u0005\r\r\r\"H1\u0001p\u0005\u0005\t\u0005bBB\u0014u\u0001\u000f1\u0011F\u0001\u0002KB)qma\u000b\u0004 %\u00191QF&\u0003\u0015\u0011+7m\u001c3f\u0015N|g.\u0001\u0002bgV!11GB\u001d)\u0011\u0019)da\u000f\u0011\u000b\u001d\u001cYba\u000e\u0011\u00071\u001cI\u0004\u0002\u0004\u0004$m\u0012\ra\u001c\u0005\b\u0007OY\u00049AB\u001f!\u0015971FB\u001c\u0003\u0019\u0001(/\u001a;usR!\u0011\u0011DB\"\u0011\u001d\u0019)\u0005\u0010a\u0001\u0007\u000f\n\u0011\u0001\u001d\t\u0004O\u000e%\u0013bAB&\u0017\na\u0001K]3uif\u0004\u0016M]1ng\u0006Aan\\:qC\u000e,7/A\to_N\u0004\u0018mY3t/&$\bn\u0014:eKJ\fqa\u001d9bG\u0016\u001c(\'A\u0004ta\u0006\u001cWm\u001d\u001b\u0002\u0013\u0011,W\r]7fe\u001e,Gc\u00014\u0004Z!111L!A\u0002\u0019\f\u0011!_\u0001\ti>\u001cFO]5oOR\u0011\u0011\u0011D\u0015\u000e\u0001\r\r4qMB6\u0007_\u001a\u0019ha\u001e\n\u0007\r\u00154J\u0001\u0004K\u0003J\u0014\u0018-_\u0005\u0004\u0007SZ%!\u0002&C_>d\'bAB7\u0017\u0006)!JT;mY&\u00191\u0011O&\u0003\u000f)sU/\u001c2fe&\u00191QO&\u0003\u000f){%M[3di&\u00191\u0011P&\u0003\u000f)\u001bFO]5oO\u0002"
    )
BootstrapMethods:
  0: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #268 REF_invokeStatic argonaut/Json.$anonfun$bool$1:()Lscala/None$;
      #269 ()Lscala/None$;
      #270 5
      #271 1
      #269 ()Lscala/None$;
  1: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #287 REF_invokeStatic argonaut/Json.$anonfun$bool$2$adapted:(Ljava/lang/Object;)Lscala/Some;
      #288 (Ljava/lang/Object;)Lscala/Some;
      #270 5
      #271 1
      #288 (Ljava/lang/Object;)Lscala/Some;
  2: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #295 REF_invokeStatic argonaut/Json.$anonfun$bool$3:(Largonaut/JsonNumber;)Lscala/None$;
      #296 (Largonaut/JsonNumber;)Lscala/None$;
      #270 5
      #271 1
      #296 (Largonaut/JsonNumber;)Lscala/None$;
  3: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #302 REF_invokeStatic argonaut/Json.$anonfun$bool$4:(Ljava/lang/String;)Lscala/None$;
      #303 (Ljava/lang/String;)Lscala/None$;
      #270 5
      #271 1
      #303 (Ljava/lang/String;)Lscala/None$;
  4: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #309 REF_invokeStatic argonaut/Json.$anonfun$bool$5:(Lscala/collection/immutable/List;)Lscala/None$;
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
      #270 5
      #271 1
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
  5: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #316 REF_invokeStatic argonaut/Json.$anonfun$bool$6:(Largonaut/JsonObject;)Lscala/None$;
      #317 (Largonaut/JsonObject;)Lscala/None$;
      #270 5
      #271 1
      #317 (Largonaut/JsonObject;)Lscala/None$;
  6: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #328 REF_invokeStatic argonaut/Json.$anonfun$number$1:()Lscala/None$;
      #269 ()Lscala/None$;
      #270 5
      #271 1
      #269 ()Lscala/None$;
  7: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #334 REF_invokeStatic argonaut/Json.$anonfun$number$2$adapted:(Ljava/lang/Object;)Lscala/None$;
      #335 (Ljava/lang/Object;)Lscala/None$;
      #270 5
      #271 1
      #335 (Ljava/lang/Object;)Lscala/None$;
  8: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #341 REF_invokeStatic argonaut/Json.$anonfun$number$3:(Largonaut/JsonNumber;)Lscala/Some;
      #342 (Largonaut/JsonNumber;)Lscala/Some;
      #270 5
      #271 1
      #342 (Largonaut/JsonNumber;)Lscala/Some;
  9: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #347 REF_invokeStatic argonaut/Json.$anonfun$number$4:(Ljava/lang/String;)Lscala/None$;
      #303 (Ljava/lang/String;)Lscala/None$;
      #270 5
      #271 1
      #303 (Ljava/lang/String;)Lscala/None$;
  10: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #352 REF_invokeStatic argonaut/Json.$anonfun$number$5:(Lscala/collection/immutable/List;)Lscala/None$;
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
      #270 5
      #271 1
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
  11: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #357 REF_invokeStatic argonaut/Json.$anonfun$number$6:(Largonaut/JsonObject;)Lscala/None$;
      #317 (Largonaut/JsonObject;)Lscala/None$;
      #270 5
      #271 1
      #317 (Largonaut/JsonObject;)Lscala/None$;
  12: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #364 REF_invokeStatic argonaut/Json.$anonfun$string$1:()Lscala/None$;
      #269 ()Lscala/None$;
      #270 5
      #271 1
      #269 ()Lscala/None$;
  13: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #369 REF_invokeStatic argonaut/Json.$anonfun$string$2$adapted:(Ljava/lang/Object;)Lscala/None$;
      #335 (Ljava/lang/Object;)Lscala/None$;
      #270 5
      #271 1
      #335 (Ljava/lang/Object;)Lscala/None$;
  14: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #374 REF_invokeStatic argonaut/Json.$anonfun$string$3:(Largonaut/JsonNumber;)Lscala/None$;
      #296 (Largonaut/JsonNumber;)Lscala/None$;
      #270 5
      #271 1
      #296 (Largonaut/JsonNumber;)Lscala/None$;
  15: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #380 REF_invokeStatic argonaut/Json.$anonfun$string$4:(Ljava/lang/String;)Lscala/Some;
      #381 (Ljava/lang/String;)Lscala/Some;
      #270 5
      #271 1
      #381 (Ljava/lang/String;)Lscala/Some;
  16: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #386 REF_invokeStatic argonaut/Json.$anonfun$string$5:(Lscala/collection/immutable/List;)Lscala/None$;
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
      #270 5
      #271 1
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
  17: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #391 REF_invokeStatic argonaut/Json.$anonfun$string$6:(Largonaut/JsonObject;)Lscala/None$;
      #317 (Largonaut/JsonObject;)Lscala/None$;
      #270 5
      #271 1
      #317 (Largonaut/JsonObject;)Lscala/None$;
  18: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #398 REF_invokeStatic argonaut/Json.$anonfun$array$1:()Lscala/None$;
      #269 ()Lscala/None$;
      #270 5
      #271 1
      #269 ()Lscala/None$;
  19: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #404 REF_invokeStatic argonaut/Json.$anonfun$array$2:(Lscala/collection/immutable/List;)Lscala/Some;
      #405 (Lscala/collection/immutable/List;)Lscala/Some;
      #270 5
      #271 1
      #405 (Lscala/collection/immutable/List;)Lscala/Some;
  20: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #410 REF_invokeStatic argonaut/Json.$anonfun$array$3:(Largonaut/JsonObject;)Lscala/None$;
      #317 (Largonaut/JsonObject;)Lscala/None$;
      #270 5
      #271 1
      #317 (Largonaut/JsonObject;)Lscala/None$;
  21: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #419 REF_invokeStatic argonaut/Json.$anonfun$obj$1:()Lscala/None$;
      #269 ()Lscala/None$;
      #270 5
      #271 1
      #269 ()Lscala/None$;
  22: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #424 REF_invokeStatic argonaut/Json.$anonfun$obj$2:(Lscala/collection/immutable/List;)Lscala/None$;
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
      #270 5
      #271 1
      #310 (Lscala/collection/immutable/List;)Lscala/None$;
  23: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #430 REF_invokeStatic argonaut/Json.$anonfun$obj$3:(Largonaut/JsonObject;)Lscala/Some;
      #431 (Largonaut/JsonObject;)Lscala/Some;
      #270 5
      #271 1
      #431 (Largonaut/JsonObject;)Lscala/Some;
  24: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #441 REF_invokeStatic argonaut/Json.$anonfun$assoc$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #442 (Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #270 5
      #271 1
      #442 (Largonaut/JsonObject;)Lscala/collection/immutable/List;
  25: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #488 REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$colon$1:(Lscala/Tuple2;Largonaut/JsonObject;)Largonaut/JsonObject;
      #490 (Largonaut/JsonObject;)Largonaut/JsonObject;
      #270 5
      #271 1
      #490 (Largonaut/JsonObject;)Largonaut/JsonObject;
  26: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #504 REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$qmark$colon$1:(Largonaut/Json;Lscala/Tuple2;)Largonaut/Json;
      #505 (Lscala/Tuple2;)Largonaut/Json;
      #270 5
      #271 1
      #505 (Lscala/Tuple2;)Largonaut/Json;
  27: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #512 REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$qmark$colon$2:(Largonaut/Json;)Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  28: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #527 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$colon$1:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #529 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #270 5
      #271 1
      #529 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  29: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #539 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$1:(Largonaut/Json;Largonaut/Json;)Largonaut/Json;
      #540 (Largonaut/Json;)Largonaut/Json;
      #270 5
      #271 1
      #540 (Largonaut/Json;)Largonaut/Json;
  30: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #545 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$3:(Largonaut/Json;)Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  31: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #580 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$1:(Ljava/lang/String;)Ljava/lang/String;
      #581 ()Ljava/lang/String;
      #270 5
      #271 1
      #581 ()Ljava/lang/String;
  32: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #586 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #591 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$2:(Lscala/Option;Ljava/lang/String;)Lscala/Option;
      #592 (Lscala/Option;Ljava/lang/String;)Lscala/Option;
      #270 5
      #271 1
      #592 (Lscala/Option;Ljava/lang/String;)Lscala/Option;
  33: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #608 REF_invokeStatic argonaut/Json.$anonfun$isTrue$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #271 1
  34: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #618 REF_invokeStatic argonaut/Json.$anonfun$isFalse$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #271 1
  35: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #652 REF_invokeStatic argonaut/Json.$anonfun$numberOrZero$1:()Largonaut/JsonLong;
      #653 ()Largonaut/JsonLong;
      #270 5
      #271 1
      #653 ()Largonaut/JsonLong;
  36: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #661 REF_invokeStatic argonaut/Json.$anonfun$stringOrEmpty$1:()Ljava/lang/String;
      #581 ()Ljava/lang/String;
      #270 5
      #271 1
      #581 ()Ljava/lang/String;
  37: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #671 REF_invokeStatic argonaut/Json.$anonfun$arrayOrEmpty$1:()Lscala/collection/immutable/Nil$;
      #672 ()Lscala/collection/immutable/Nil$;
      #270 5
      #271 1
      #672 ()Lscala/collection/immutable/Nil$;
  38: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #680 REF_invokeStatic argonaut/Json.$anonfun$objectOrEmpty$1:()Largonaut/JsonObject;
      #681 ()Largonaut/JsonObject;
      #270 5
      #271 1
      #681 ()Largonaut/JsonObject;
  39: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #690 REF_invokeStatic argonaut/Json.$anonfun$objectFields$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #442 (Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #270 5
      #271 1
      #442 (Largonaut/JsonObject;)Lscala/collection/immutable/List;
  40: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #701 REF_invokeStatic argonaut/Json.$anonfun$objectFieldsOrEmpty$1:()Lscala/collection/immutable/Nil$;
      #672 ()Lscala/collection/immutable/Nil$;
      #270 5
      #271 1
      #672 ()Lscala/collection/immutable/Nil$;
  41: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #709 REF_invokeStatic argonaut/Json.$anonfun$objectValues$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #442 (Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #270 5
      #271 1
      #442 (Largonaut/JsonObject;)Lscala/collection/immutable/List;
  42: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #718 REF_invokeStatic argonaut/Json.$anonfun$objectValuesOrEmpty$1:()Lscala/collection/immutable/Nil$;
      #672 ()Lscala/collection/immutable/Nil$;
      #270 5
      #271 1
      #672 ()Lscala/collection/immutable/Nil$;
  43: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #729 REF_invokeStatic argonaut/Json.$anonfun$hasField$1$adapted:(Lscala/Function0;Largonaut/JsonObject;)Ljava/lang/Object;
      #731 (Largonaut/JsonObject;)Ljava/lang/Object;
      #270 5
      #271 1
      #731 (Largonaut/JsonObject;)Ljava/lang/Object;
  44: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #739 REF_invokeStatic argonaut/Json.$anonfun$field$1:(Lscala/Function0;Largonaut/JsonObject;)Lscala/Option;
      #741 (Largonaut/JsonObject;)Lscala/Option;
      #270 5
      #271 1
      #741 (Largonaut/JsonObject;)Lscala/Option;
  45: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #755 REF_invokeStatic argonaut/Json.$anonfun$fieldOrNull$1:()Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  46: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #763 REF_invokeStatic argonaut/Json.$anonfun$fieldOrTrue$1:()Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  47: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #769 REF_invokeStatic argonaut/Json.$anonfun$fieldOrFalse$1:()Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  48: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #775 REF_invokeStatic argonaut/Json.$anonfun$fieldOrZero$1:()Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  49: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #781 REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyString$1:()Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  50: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #787 REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyArray$1:()Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  51: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #793 REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyObject$1:()Largonaut/Json;
      #513 ()Largonaut/Json;
      #270 5
      #271 1
      #513 ()Largonaut/Json;
  52: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #586 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #947 REF_invokeStatic argonaut/Json.$anonfun$deepmerge$1:(Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
      #948 (Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
      #270 5
      #271 1
      #948 (Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
  53: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #983 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$2:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #529 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #270 5
      #271 1
      #529 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  54: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #263 ()Ljava/lang/Object;
      #993 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$4:(Ljava/lang/String;)Ljava/lang/String;
      #581 ()Ljava/lang/String;
      #270 5
      #271 1
      #581 ()Ljava/lang/String;
  55: #278 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #282 (Ljava/lang/Object;)Ljava/lang/Object;
      #999 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$3:(Ljava/lang/String;Largonaut/Json;)Lscala/Option;
      #1001 (Largonaut/Json;)Lscala/Option;
      #270 5
      #271 1
      #1001 (Largonaut/Json;)Lscala/Option;
  56: #1084 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #580 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$1:(Ljava/lang/String;)Ljava/lang/String;
      #591 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$2:(Lscala/Option;Ljava/lang/String;)Lscala/Option;
      #999 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$3:(Ljava/lang/String;Largonaut/Json;)Lscala/Option;
      #993 REF_invokeStatic argonaut/Json.$anonfun$$minus$bar$bar$4:(Ljava/lang/String;)Ljava/lang/String;
      #488 REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$colon$1:(Lscala/Tuple2;Largonaut/JsonObject;)Largonaut/JsonObject;
      #504 REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$qmark$colon$1:(Largonaut/Json;Lscala/Tuple2;)Largonaut/Json;
      #512 REF_invokeStatic argonaut/Json.$anonfun$$minus$greater$qmark$colon$2:(Largonaut/Json;)Largonaut/Json;
      #527 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$colon$1:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #539 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$1:(Largonaut/Json;Largonaut/Json;)Largonaut/Json;
      #983 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$2:(Largonaut/Json;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #545 REF_invokeStatic argonaut/Json.$anonfun$$minus$minus$greater$greater$qmark$colon$3:(Largonaut/Json;)Largonaut/Json;
      #398 REF_invokeStatic argonaut/Json.$anonfun$array$1:()Lscala/None$;
      #404 REF_invokeStatic argonaut/Json.$anonfun$array$2:(Lscala/collection/immutable/List;)Lscala/Some;
      #410 REF_invokeStatic argonaut/Json.$anonfun$array$3:(Largonaut/JsonObject;)Lscala/None$;
      #671 REF_invokeStatic argonaut/Json.$anonfun$arrayOrEmpty$1:()Lscala/collection/immutable/Nil$;
      #441 REF_invokeStatic argonaut/Json.$anonfun$assoc$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #268 REF_invokeStatic argonaut/Json.$anonfun$bool$1:()Lscala/None$;
      #287 REF_invokeStatic argonaut/Json.$anonfun$bool$2$adapted:(Ljava/lang/Object;)Lscala/Some;
      #295 REF_invokeStatic argonaut/Json.$anonfun$bool$3:(Largonaut/JsonNumber;)Lscala/None$;
      #302 REF_invokeStatic argonaut/Json.$anonfun$bool$4:(Ljava/lang/String;)Lscala/None$;
      #309 REF_invokeStatic argonaut/Json.$anonfun$bool$5:(Lscala/collection/immutable/List;)Lscala/None$;
      #316 REF_invokeStatic argonaut/Json.$anonfun$bool$6:(Largonaut/JsonObject;)Lscala/None$;
      #947 REF_invokeStatic argonaut/Json.$anonfun$deepmerge$1:(Largonaut/JsonObject;Lscala/Tuple2;)Largonaut/JsonObject;
      #739 REF_invokeStatic argonaut/Json.$anonfun$field$1:(Lscala/Function0;Largonaut/JsonObject;)Lscala/Option;
      #787 REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyArray$1:()Largonaut/Json;
      #793 REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyObject$1:()Largonaut/Json;
      #781 REF_invokeStatic argonaut/Json.$anonfun$fieldOrEmptyString$1:()Largonaut/Json;
      #769 REF_invokeStatic argonaut/Json.$anonfun$fieldOrFalse$1:()Largonaut/Json;
      #755 REF_invokeStatic argonaut/Json.$anonfun$fieldOrNull$1:()Largonaut/Json;
      #763 REF_invokeStatic argonaut/Json.$anonfun$fieldOrTrue$1:()Largonaut/Json;
      #775 REF_invokeStatic argonaut/Json.$anonfun$fieldOrZero$1:()Largonaut/Json;
      #729 REF_invokeStatic argonaut/Json.$anonfun$hasField$1$adapted:(Lscala/Function0;Largonaut/JsonObject;)Ljava/lang/Object;
      #618 REF_invokeStatic argonaut/Json.$anonfun$isFalse$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #608 REF_invokeStatic argonaut/Json.$anonfun$isTrue$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #328 REF_invokeStatic argonaut/Json.$anonfun$number$1:()Lscala/None$;
      #334 REF_invokeStatic argonaut/Json.$anonfun$number$2$adapted:(Ljava/lang/Object;)Lscala/None$;
      #341 REF_invokeStatic argonaut/Json.$anonfun$number$3:(Largonaut/JsonNumber;)Lscala/Some;
      #347 REF_invokeStatic argonaut/Json.$anonfun$number$4:(Ljava/lang/String;)Lscala/None$;
      #352 REF_invokeStatic argonaut/Json.$anonfun$number$5:(Lscala/collection/immutable/List;)Lscala/None$;
      #357 REF_invokeStatic argonaut/Json.$anonfun$number$6:(Largonaut/JsonObject;)Lscala/None$;
      #652 REF_invokeStatic argonaut/Json.$anonfun$numberOrZero$1:()Largonaut/JsonLong;
      #419 REF_invokeStatic argonaut/Json.$anonfun$obj$1:()Lscala/None$;
      #424 REF_invokeStatic argonaut/Json.$anonfun$obj$2:(Lscala/collection/immutable/List;)Lscala/None$;
      #430 REF_invokeStatic argonaut/Json.$anonfun$obj$3:(Largonaut/JsonObject;)Lscala/Some;
      #690 REF_invokeStatic argonaut/Json.$anonfun$objectFields$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #701 REF_invokeStatic argonaut/Json.$anonfun$objectFieldsOrEmpty$1:()Lscala/collection/immutable/Nil$;
      #680 REF_invokeStatic argonaut/Json.$anonfun$objectOrEmpty$1:()Largonaut/JsonObject;
      #709 REF_invokeStatic argonaut/Json.$anonfun$objectValues$1:(Largonaut/JsonObject;)Lscala/collection/immutable/List;
      #718 REF_invokeStatic argonaut/Json.$anonfun$objectValuesOrEmpty$1:()Lscala/collection/immutable/Nil$;
      #364 REF_invokeStatic argonaut/Json.$anonfun$string$1:()Lscala/None$;
      #369 REF_invokeStatic argonaut/Json.$anonfun$string$2$adapted:(Ljava/lang/Object;)Lscala/None$;
      #374 REF_invokeStatic argonaut/Json.$anonfun$string$3:(Largonaut/JsonNumber;)Lscala/None$;
      #380 REF_invokeStatic argonaut/Json.$anonfun$string$4:(Ljava/lang/String;)Lscala/Some;
      #386 REF_invokeStatic argonaut/Json.$anonfun$string$5:(Lscala/collection/immutable/List;)Lscala/None$;
      #391 REF_invokeStatic argonaut/Json.$anonfun$string$6:(Largonaut/JsonObject;)Lscala/None$;
      #661 REF_invokeStatic argonaut/Json.$anonfun$stringOrEmpty$1:()Ljava/lang/String;
  ScalaInlineInfo: length = 0x298 (unknown attribute)
   01 00 00 84 02 40 02 41 01 02 4B 02 4C 01 03 DC
   03 DD 01 03 DA 02 41 01 01 E4 01 E5 01 01 F4 01
   F5 01 01 FD 00 37 01 02 0B 02 0C 01 02 17 02 18
   01 03 D2 02 0C 01 02 1E 00 37 01 01 8B 01 09 01
   01 90 01 91 01 01 97 01 39 01 02 9B 02 9C 01 01
   B5 01 B6 01 01 08 01 09 01 03 BB 03 BC 01 01 1B
   01 1C 01 01 23 01 24 01 01 2A 01 2B 01 01 31 01
   32 01 01 38 01 39 01 03 AF 03 B0 01 02 DF 02 E0
   01 03 10 00 2E 01 03 16 00 2E 01 03 0A 00 2E 01
   02 FE 00 2E 01 02 F0 00 2E 01 02 F8 00 2E 01 03
   04 00 2E 01 04 07 04 08 01 02 D5 02 D6 01 03 F0
   03 EE 01 02 67 00 BF 01 03 ED 03 EE 01 02 5D 00
   BF 01 01 45 01 09 01 03 BE 03 BF 01 01 4A 01 4B
   01 01 51 01 52 01 01 58 01 2B 01 01 5D 01 32 01
   01 62 01 39 01 02 88 02 89 01 01 A0 01 09 01 01
   A5 01 32 01 01 AA 01 AB 01 02 AF 01 B6 01 02 BA
   02 9C 01 02 A5 00 D5 01 02 C2 01 B6 01 02 CB 02
   9C 01 01 69 01 09 01 03 C0 03 BF 01 01 6E 01 4B
   01 01 73 01 24 01 01 78 01 79 01 01 7F 01 32 01
   01 84 01 39 01 02 92 00 89 01 02 23 02 24 00 02
   2A 02 2B 00 01 E1 01 E2 00 01 F1 01 F2 00 02 0A
   00 37 00 02 15 01 F2 00 00 DA 04 1D 00 00 FC 00
   FD 00 01 89 01 05 00 02 81 02 82 00 02 99 00 CF
   00 00 E5 00 E6 00 03 34 03 29 00 01 B1 01 05 00
   01 04 01 05 00 00 F3 00 EA 00 03 9A 00 37 00 02
   27 02 24 00 02 EA 02 EB 00 03 0F 02 EE 00 03 15
   02 EE 00 03 09 02 EE 00 02 FD 02 EE 00 02 ED 02
   EE 00 02 F7 02 EE 00 03 03 02 EE 00 00 9A 00 9B
   00 02 D2 02 D3 00 00 F4 00 F5 00 02 76 00 B4 00
   02 6C 00 B4 00 02 66 00 B4 00 01 03 00 B4 00 02
   70 00 B4 00 02 79 00 B4 00 02 73 00 B4 00 02 5A
   00 B4 00 03 28 03 29 00 03 1B 00 89 00 03 40 00
   89 00 03 4A 00 89 00 01 C0 00 2E 00 01 43 01 05
   00 02 7A 02 7B 00 02 87 00 C4 00 01 9E 01 05 00
   02 AD 01 05 00 02 B4 02 82 00 02 B8 00 CF 00 02
   84 02 85 00 02 A4 00 D5 00 02 C1 01 05 00 02 C7
   02 82 00 02 CA 00 CF 00 03 37 03 38 00 00 8E 00
   8F 00 00 95 00 80 00 00 7F 00 80 00 00 88 00 89
   00 03 94 00 89 00 03 97 00 89 00 01 67 01 05 00
   02 7E 02 7F 00 02 91 00 89 00 03 B8 00 89 00 00
   E9 00 EA 00 01 D3 01 C5 00 01 C4 01 C5 00 01 DA
   01 C5 00 01 CC 01 C5 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
