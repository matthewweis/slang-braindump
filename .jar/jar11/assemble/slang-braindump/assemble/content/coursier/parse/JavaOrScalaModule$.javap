Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/parse/JavaOrScalaModule$.class
  Last modified May 29, 2022; size 1755 bytes
  SHA-256 checksum 6532d84f0dc597338149bafae9789ef896ef0427cfae872403f9391634d415b8
  Compiled from "JavaOrScalaModule.scala"
public final class coursier.parse.JavaOrScalaModule$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/parse/JavaOrScalaModule$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               coursier/parse/JavaOrScalaModule$
   #2 = Class              #1             // coursier/parse/JavaOrScalaModule$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               JavaOrScalaModule.scala
   #8 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #9 = Class              #8             // scala/collection/mutable/ArraySeq$ofRef
  #10 = Utf8               scala/collection/mutable/ArraySeq
  #11 = Class              #10            // scala/collection/mutable/ArraySeq
  #12 = Utf8               ofRef
  #13 = Utf8               MODULE$
  #14 = Utf8               Lcoursier/parse/JavaOrScalaModule$;
  #15 = Utf8               <clinit>
  #16 = Utf8               ()V
  #17 = Utf8               <init>
  #18 = NameAndType        #17:#16        // "<init>":()V
  #19 = Methodref          #2.#18         // coursier/parse/JavaOrScalaModule$."<init>":()V
  #20 = NameAndType        #13:#14        // MODULE$:Lcoursier/parse/JavaOrScalaModule$;
  #21 = Fieldref           #2.#20         // coursier/parse/JavaOrScalaModule$.MODULE$:Lcoursier/parse/JavaOrScalaModule$;
  #22 = Utf8               scalaBinaryVersion
  #23 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #24 = Utf8               scalaVersion
  #25 = Utf8               -M
  #26 = String             #25            // -M
  #27 = Utf8               java/lang/String
  #28 = Class              #27            // java/lang/String
  #29 = Utf8               contains
  #30 = Utf8               (Ljava/lang/CharSequence;)Z
  #31 = NameAndType        #29:#30        // contains:(Ljava/lang/CharSequence;)Z
  #32 = Methodref          #28.#31        // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #33 = Utf8               -RC
  #34 = String             #33            // -RC
  #35 = Utf8               scala/Predef$
  #36 = Class              #35            // scala/Predef$
  #37 = Utf8               Lscala/Predef$;
  #38 = NameAndType        #13:#37        // MODULE$:Lscala/Predef$;
  #39 = Fieldref           #36.#38        // scala/Predef$.MODULE$:Lscala/Predef$;
  #40 = Utf8               scala/collection/ArrayOps$
  #41 = Class              #40            // scala/collection/ArrayOps$
  #42 = Utf8               Lscala/collection/ArrayOps$;
  #43 = NameAndType        #13:#42        // MODULE$:Lscala/collection/ArrayOps$;
  #44 = Fieldref           #41.#43        // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #45 = Utf8               scala/collection/StringOps$
  #46 = Class              #45            // scala/collection/StringOps$
  #47 = Utf8               Lscala/collection/StringOps$;
  #48 = NameAndType        #13:#47        // MODULE$:Lscala/collection/StringOps$;
  #49 = Fieldref           #46.#48        // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #50 = Utf8               augmentString
  #51 = NameAndType        #50:#23        // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #52 = Methodref          #36.#51        // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #53 = Utf8               split$extension
  #54 = Utf8               (Ljava/lang/String;C)[Ljava/lang/String;
  #55 = NameAndType        #53:#54        // split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #56 = Methodref          #46.#55        // scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #57 = Utf8               [Ljava/lang/Object;
  #58 = Class              #57            // "[Ljava/lang/Object;"
  #59 = Utf8               refArrayOps
  #60 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #61 = NameAndType        #59:#60        // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #62 = Methodref          #36.#61        // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #63 = Utf8               take$extension
  #64 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #65 = NameAndType        #63:#64        // take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #66 = Methodref          #41.#65        // scala/collection/ArrayOps$.take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #67 = Utf8               wrapRefArray
  #68 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #69 = NameAndType        #67:#68        // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #70 = Methodref          #36.#69        // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #71 = Utf8               .
  #72 = String             #71            // .
  #73 = Utf8               mkString
  #74 = NameAndType        #73:#23        // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #75 = Methodref          #9.#74         // scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #76 = Utf8               this
  #77 = Utf8               Ljava/lang/String;
  #78 = Utf8               writeReplace
  #79 = Utf8               ()Ljava/lang/Object;
  #80 = Utf8               scala/runtime/ModuleSerializationProxy
  #81 = Class              #80            // scala/runtime/ModuleSerializationProxy
  #82 = Utf8               (Ljava/lang/Class;)V
  #83 = NameAndType        #17:#82        // "<init>":(Ljava/lang/Class;)V
  #84 = Methodref          #81.#83        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #85 = Methodref          #4.#18         // java/lang/Object."<init>":()V
  #86 = Utf8               Code
  #87 = Utf8               LineNumberTable
  #88 = Utf8               StackMapTable
  #89 = Utf8               LocalVariableTable
  #90 = Utf8               MethodParameters
  #91 = Utf8               InnerClasses
  #92 = Utf8               SourceFile
  #93 = Utf8               ScalaInlineInfo
  #94 = Utf8               Scala
{
  public static final coursier.parse.JavaOrScalaModule$ MODULE$;
    descriptor: Lcoursier/parse/JavaOrScalaModule$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/parse/JavaOrScalaModule$
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #21                 // Field MODULE$:Lcoursier/parse/JavaOrScalaModule$;
        10: return
      LineNumberTable:
        line 16: 0

  public java.lang.String scalaBinaryVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_1
         1: ldc           #26                 // String -M
         3: invokevirtual #32                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
         6: ifne          18
         9: aload_1
        10: ldc           #34                 // String -RC
        12: invokevirtual #32                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        15: ifeq          22
        18: aload_1
        19: goto          67
        22: getstatic     #39                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        25: getstatic     #44                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        28: getstatic     #39                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        31: getstatic     #49                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        34: getstatic     #39                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        37: aload_1
        38: invokevirtual #52                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        41: bipush        46
        43: invokevirtual #56                 // Method scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
        46: checkcast     #58                 // class "[Ljava/lang/Object;"
        49: invokevirtual #62                 // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        52: iconst_2
        53: invokevirtual #66                 // Method scala/collection/ArrayOps$.take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        56: checkcast     #58                 // class "[Ljava/lang/Object;"
        59: invokevirtual #70                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
        62: ldc           #72                 // String .
        64: invokevirtual #75                 // Method scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
        67: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 18 /* same */
        frame_type = 3 /* same */
        frame_type = 108 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 19: 0
        line 20: 18
        line 22: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lcoursier/parse/JavaOrScalaModule$;
            0      68     1 scalaVersion   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      scalaVersion                   final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #81                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/parse/JavaOrScalaModule$
         6: invokespecial #84                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/parse/JavaOrScalaModule$;

  private coursier.parse.JavaOrScalaModule$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #85                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 51: 0
        line 16: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/parse/JavaOrScalaModule$;
}
InnerClasses:
  public static final #12= #9 of #11;     // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
SourceFile: "JavaOrScalaModule.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 11 00 10 01 00 16 00 17 01 00 4E
   00 4F 01
  Scala: length = 0x0 (unknown attribute)

