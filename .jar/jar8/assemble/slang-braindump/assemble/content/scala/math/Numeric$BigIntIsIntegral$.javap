Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Numeric$BigIntIsIntegral$.class
  Last modified May 29, 2022; size 10004 bytes
  SHA-256 checksum 5a770783a4be1bfeb93a8e1f98820539771cb28a8e140d9c865ab013e8993325
  Compiled from "Numeric.scala"
public class scala.math.Numeric$BigIntIsIntegral$ implements scala.math.Numeric$BigIntIsIntegral,scala.math.Ordering$BigIntOrdering
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/math/Numeric$BigIntIsIntegral$
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 51, attributes: 4
Constant pool:
    #1 = Utf8               scala/math/Numeric$BigIntIsIntegral$
    #2 = Class              #1            // scala/math/Numeric$BigIntIsIntegral$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/math/Numeric$BigIntIsIntegral
    #6 = Class              #5            // scala/math/Numeric$BigIntIsIntegral
    #7 = Utf8               scala/math/Ordering$BigIntOrdering
    #8 = Class              #7            // scala/math/Ordering$BigIntOrdering
    #9 = Utf8               Numeric.scala
   #10 = Utf8               scala/math/Integral$IntegralOps
   #11 = Class              #10           // scala/math/Integral$IntegralOps
   #12 = Utf8               scala/math/Integral
   #13 = Class              #12           // scala/math/Integral
   #14 = Utf8               IntegralOps
   #15 = Utf8               scala/math/Numeric
   #16 = Class              #15           // scala/math/Numeric
   #17 = Utf8               BigIntIsIntegral
   #18 = Utf8               BigIntIsIntegral$
   #19 = Utf8               scala/math/Numeric$NumericOps
   #20 = Class              #19           // scala/math/Numeric$NumericOps
   #21 = Utf8               NumericOps
   #22 = Utf8               scala/math/Ordering
   #23 = Class              #22           // scala/math/Ordering
   #24 = Utf8               BigIntOrdering
   #25 = Utf8               scala/math/Ordering$OrderingOps
   #26 = Class              #25           // scala/math/Ordering$OrderingOps
   #27 = Utf8               OrderingOps
   #28 = Utf8               MODULE$
   #29 = Utf8               Lscala/math/Numeric$BigIntIsIntegral$;
   #30 = Utf8               <clinit>
   #31 = Utf8               ()V
   #32 = Utf8               <init>
   #33 = NameAndType        #32:#31       // "<init>":()V
   #34 = Methodref          #2.#33        // scala/math/Numeric$BigIntIsIntegral$."<init>":()V
   #35 = NameAndType        #28:#29       // MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
   #36 = Fieldref           #2.#35        // scala/math/Numeric$BigIntIsIntegral$.MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
   #37 = Utf8               compare
   #38 = Utf8               (Lscala/math/BigInt;Lscala/math/BigInt;)I
   #39 = Utf8               x
   #40 = Utf8               y
   #41 = Utf8               compare$
   #42 = Utf8               (Lscala/math/Ordering$BigIntOrdering;Lscala/math/BigInt;Lscala/math/BigInt;)I
   #43 = NameAndType        #41:#42       // compare$:(Lscala/math/Ordering$BigIntOrdering;Lscala/math/BigInt;Lscala/math/BigInt;)I
   #44 = InterfaceMethodref #8.#43        // scala/math/Ordering$BigIntOrdering.compare$:(Lscala/math/Ordering$BigIntOrdering;Lscala/math/BigInt;Lscala/math/BigInt;)I
   #45 = Utf8               this
   #46 = Utf8               Lscala/math/BigInt;
   #47 = Utf8               plus
   #48 = Utf8               (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #49 = Utf8               plus$
   #50 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #51 = NameAndType        #49:#50       // plus$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #52 = InterfaceMethodref #6.#51        // scala/math/Numeric$BigIntIsIntegral.plus$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #53 = Utf8               minus
   #54 = Utf8               minus$
   #55 = NameAndType        #54:#50       // minus$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #56 = InterfaceMethodref #6.#55        // scala/math/Numeric$BigIntIsIntegral.minus$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #57 = Utf8               times
   #58 = Utf8               times$
   #59 = NameAndType        #58:#50       // times$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #60 = InterfaceMethodref #6.#59        // scala/math/Numeric$BigIntIsIntegral.times$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #61 = Utf8               quot
   #62 = Utf8               quot$
   #63 = NameAndType        #62:#50       // quot$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #64 = InterfaceMethodref #6.#63        // scala/math/Numeric$BigIntIsIntegral.quot$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #65 = Utf8               rem
   #66 = Utf8               rem$
   #67 = NameAndType        #66:#50       // rem$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #68 = InterfaceMethodref #6.#67        // scala/math/Numeric$BigIntIsIntegral.rem$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #69 = Utf8               negate
   #70 = Utf8               (Lscala/math/BigInt;)Lscala/math/BigInt;
   #71 = Utf8               negate$
   #72 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;
   #73 = NameAndType        #71:#72       // negate$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;
   #74 = InterfaceMethodref #6.#73        // scala/math/Numeric$BigIntIsIntegral.negate$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;
   #75 = Utf8               fromInt
   #76 = Utf8               (I)Lscala/math/BigInt;
   #77 = Utf8               fromInt$
   #78 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;
   #79 = NameAndType        #77:#78       // fromInt$:(Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;
   #80 = InterfaceMethodref #6.#79        // scala/math/Numeric$BigIntIsIntegral.fromInt$:(Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;
   #81 = Utf8               I
   #82 = Utf8               parseString
   #83 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #84 = Utf8               (Ljava/lang/String;)Lscala/Option<Lscala/math/BigInt;>;
   #85 = Utf8               str
   #86 = Utf8               parseString$
   #87 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Ljava/lang/String;)Lscala/Option;
   #88 = NameAndType        #86:#87       // parseString$:(Lscala/math/Numeric$BigIntIsIntegral;Ljava/lang/String;)Lscala/Option;
   #89 = InterfaceMethodref #6.#88        // scala/math/Numeric$BigIntIsIntegral.parseString$:(Lscala/math/Numeric$BigIntIsIntegral;Ljava/lang/String;)Lscala/Option;
   #90 = Utf8               Ljava/lang/String;
   #91 = Utf8               toInt
   #92 = Utf8               (Lscala/math/BigInt;)I
   #93 = Utf8               toInt$
   #94 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I
   #95 = NameAndType        #93:#94       // toInt$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I
   #96 = InterfaceMethodref #6.#95        // scala/math/Numeric$BigIntIsIntegral.toInt$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I
   #97 = Utf8               toLong
   #98 = Utf8               (Lscala/math/BigInt;)J
   #99 = Utf8               toLong$
  #100 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J
  #101 = NameAndType        #99:#100      // toLong$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J
  #102 = InterfaceMethodref #6.#101       // scala/math/Numeric$BigIntIsIntegral.toLong$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J
  #103 = Utf8               toFloat
  #104 = Utf8               (Lscala/math/BigInt;)F
  #105 = Utf8               toFloat$
  #106 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F
  #107 = NameAndType        #105:#106     // toFloat$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F
  #108 = InterfaceMethodref #6.#107       // scala/math/Numeric$BigIntIsIntegral.toFloat$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F
  #109 = Utf8               toDouble
  #110 = Utf8               (Lscala/math/BigInt;)D
  #111 = Utf8               toDouble$
  #112 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D
  #113 = NameAndType        #111:#112     // toDouble$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D
  #114 = InterfaceMethodref #6.#113       // scala/math/Numeric$BigIntIsIntegral.toDouble$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D
  #115 = Utf8               mkNumericOps
  #116 = Utf8               (Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
  #117 = Utf8               lhs
  #118 = Utf8               mkNumericOps$
  #119 = Utf8               (Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
  #120 = NameAndType        #118:#119     // mkNumericOps$:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
  #121 = InterfaceMethodref #13.#120      // scala/math/Integral.mkNumericOps$:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
  #122 = Utf8               Ljava/lang/Object;
  #123 = Utf8               zero
  #124 = Utf8               ()Ljava/lang/Object;
  #125 = Utf8               zero$
  #126 = Utf8               (Lscala/math/Numeric;)Ljava/lang/Object;
  #127 = NameAndType        #125:#126     // zero$:(Lscala/math/Numeric;)Ljava/lang/Object;
  #128 = InterfaceMethodref #16.#127      // scala/math/Numeric.zero$:(Lscala/math/Numeric;)Ljava/lang/Object;
  #129 = Utf8               one
  #130 = Utf8               one$
  #131 = NameAndType        #130:#126     // one$:(Lscala/math/Numeric;)Ljava/lang/Object;
  #132 = InterfaceMethodref #16.#131      // scala/math/Numeric.one$:(Lscala/math/Numeric;)Ljava/lang/Object;
  #133 = Utf8               abs
  #134 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #135 = Utf8               abs$
  #136 = Utf8               (Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
  #137 = NameAndType        #135:#136     // abs$:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
  #138 = InterfaceMethodref #16.#137      // scala/math/Numeric.abs$:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
  #139 = Utf8               signum
  #140 = Utf8               (Ljava/lang/Object;)I
  #141 = Utf8               signum$
  #142 = Utf8               (Lscala/math/Numeric;Ljava/lang/Object;)I
  #143 = NameAndType        #141:#142     // signum$:(Lscala/math/Numeric;Ljava/lang/Object;)I
  #144 = InterfaceMethodref #16.#143      // scala/math/Numeric.signum$:(Lscala/math/Numeric;Ljava/lang/Object;)I
  #145 = Utf8               sign
  #146 = Utf8               sign$
  #147 = NameAndType        #146:#136     // sign$:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
  #148 = InterfaceMethodref #16.#147      // scala/math/Numeric.sign$:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
  #149 = Utf8               tryCompare
  #150 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #151 = Utf8               tryCompare$
  #152 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #153 = NameAndType        #151:#152     // tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #154 = InterfaceMethodref #23.#153      // scala/math/Ordering.tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #155 = Utf8               lteq
  #156 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #157 = Utf8               lteq$
  #158 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #159 = NameAndType        #157:#158     // lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #160 = InterfaceMethodref #23.#159      // scala/math/Ordering.lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #161 = Utf8               gteq
  #162 = Utf8               gteq$
  #163 = NameAndType        #162:#158     // gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #164 = InterfaceMethodref #23.#163      // scala/math/Ordering.gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #165 = Utf8               lt
  #166 = Utf8               lt$
  #167 = NameAndType        #166:#158     // lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #168 = InterfaceMethodref #23.#167      // scala/math/Ordering.lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #169 = Utf8               gt
  #170 = Utf8               gt$
  #171 = NameAndType        #170:#158     // gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #172 = InterfaceMethodref #23.#171      // scala/math/Ordering.gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #173 = Utf8               equiv
  #174 = Utf8               equiv$
  #175 = NameAndType        #174:#158     // equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #176 = InterfaceMethodref #23.#175      // scala/math/Ordering.equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #177 = Utf8               max
  #178 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #179 = Utf8               max$
  #180 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #181 = NameAndType        #179:#180     // max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #182 = InterfaceMethodref #23.#181      // scala/math/Ordering.max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #183 = Utf8               min
  #184 = Utf8               min$
  #185 = NameAndType        #184:#180     // min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #186 = InterfaceMethodref #23.#185      // scala/math/Ordering.min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #187 = Utf8               reverse
  #188 = Utf8               ()Lscala/math/Ordering;
  #189 = Utf8               ()Lscala/math/Ordering<Lscala/math/BigInt;>;
  #190 = Utf8               reverse$
  #191 = Utf8               (Lscala/math/Ordering;)Lscala/math/Ordering;
  #192 = NameAndType        #190:#191     // reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
  #193 = InterfaceMethodref #23.#192      // scala/math/Ordering.reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
  #194 = Utf8               isReverseOf
  #195 = Utf8               (Lscala/math/Ordering;)Z
  #196 = Utf8               (Lscala/math/Ordering<*>;)Z
  #197 = Utf8               other
  #198 = Utf8               isReverseOf$
  #199 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;)Z
  #200 = NameAndType        #198:#199     // isReverseOf$:(Lscala/math/Ordering;Lscala/math/Ordering;)Z
  #201 = InterfaceMethodref #23.#200      // scala/math/Ordering.isReverseOf$:(Lscala/math/Ordering;Lscala/math/Ordering;)Z
  #202 = Utf8               Lscala/math/Ordering;
  #203 = Utf8               on
  #204 = Utf8               (Lscala/Function1;)Lscala/math/Ordering;
  #205 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TU;Lscala/math/BigInt;>;)Lscala/math/Ordering<TU;>;
  #206 = Utf8               f
  #207 = Utf8               on$
  #208 = Utf8               (Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
  #209 = NameAndType        #207:#208     // on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
  #210 = InterfaceMethodref #23.#209      // scala/math/Ordering.on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
  #211 = Utf8               Lscala/Function1;
  #212 = Utf8               orElse
  #213 = Utf8               (Lscala/math/Ordering<Lscala/math/BigInt;>;)Lscala/math/Ordering<Lscala/math/BigInt;>;
  #214 = Utf8               orElse$
  #215 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #216 = NameAndType        #214:#215     // orElse$:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #217 = InterfaceMethodref #23.#216      // scala/math/Ordering.orElse$:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #218 = Utf8               orElseBy
  #219 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
  #220 = Utf8               <S:Ljava/lang/Object;>(Lscala/Function1<Lscala/math/BigInt;TS;>;Lscala/math/Ordering<TS;>;)Lscala/math/Ordering<Lscala/math/BigInt;>;
  #221 = Utf8               ord
  #222 = Utf8               orElseBy$
  #223 = Utf8               (Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
  #224 = NameAndType        #222:#223     // orElseBy$:(Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
  #225 = InterfaceMethodref #23.#224      // scala/math/Ordering.orElseBy$:(Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
  #226 = Utf8               mkOrderingOps
  #227 = Utf8               (Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #228 = Utf8               mkOrderingOps$
  #229 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #230 = NameAndType        #228:#229     // mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #231 = InterfaceMethodref #23.#230      // scala/math/Ordering.mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #232 = Utf8               writeReplace
  #233 = Utf8               scala/runtime/ModuleSerializationProxy
  #234 = Class              #233          // scala/runtime/ModuleSerializationProxy
  #235 = Utf8               (Ljava/lang/Class;)V
  #236 = NameAndType        #32:#235      // "<init>":(Ljava/lang/Class;)V
  #237 = Methodref          #234.#236     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #238 = Utf8               ()Lscala/math/PartialOrdering;
  #239 = NameAndType        #187:#188     // reverse:()Lscala/math/Ordering;
  #240 = Methodref          #2.#239       // scala/math/Numeric$BigIntIsIntegral$.reverse:()Lscala/math/Ordering;
  #241 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #242 = NameAndType        #149:#150     // tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #243 = Methodref          #2.#242       // scala/math/Numeric$BigIntIsIntegral$.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #244 = Utf8               (Ljava/lang/Object;)Lscala/math/Numeric$NumericOps;
  #245 = NameAndType        #115:#116     // mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
  #246 = Methodref          #2.#245       // scala/math/Numeric$BigIntIsIntegral$.mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
  #247 = Utf8               (Ljava/lang/Object;)D
  #248 = Utf8               scala/math/BigInt
  #249 = Class              #248          // scala/math/BigInt
  #250 = NameAndType        #109:#110     // toDouble:(Lscala/math/BigInt;)D
  #251 = Methodref          #2.#250       // scala/math/Numeric$BigIntIsIntegral$.toDouble:(Lscala/math/BigInt;)D
  #252 = Utf8               (Ljava/lang/Object;)F
  #253 = NameAndType        #103:#104     // toFloat:(Lscala/math/BigInt;)F
  #254 = Methodref          #2.#253       // scala/math/Numeric$BigIntIsIntegral$.toFloat:(Lscala/math/BigInt;)F
  #255 = Utf8               (Ljava/lang/Object;)J
  #256 = NameAndType        #97:#98       // toLong:(Lscala/math/BigInt;)J
  #257 = Methodref          #2.#256       // scala/math/Numeric$BigIntIsIntegral$.toLong:(Lscala/math/BigInt;)J
  #258 = NameAndType        #91:#92       // toInt:(Lscala/math/BigInt;)I
  #259 = Methodref          #2.#258       // scala/math/Numeric$BigIntIsIntegral$.toInt:(Lscala/math/BigInt;)I
  #260 = Utf8               (I)Ljava/lang/Object;
  #261 = NameAndType        #75:#76       // fromInt:(I)Lscala/math/BigInt;
  #262 = Methodref          #2.#261       // scala/math/Numeric$BigIntIsIntegral$.fromInt:(I)Lscala/math/BigInt;
  #263 = NameAndType        #69:#70       // negate:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #264 = Methodref          #2.#263       // scala/math/Numeric$BigIntIsIntegral$.negate:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #265 = NameAndType        #65:#48       // rem:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #266 = Methodref          #2.#265       // scala/math/Numeric$BigIntIsIntegral$.rem:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #267 = NameAndType        #61:#48       // quot:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #268 = Methodref          #2.#267       // scala/math/Numeric$BigIntIsIntegral$.quot:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #269 = NameAndType        #57:#48       // times:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #270 = Methodref          #2.#269       // scala/math/Numeric$BigIntIsIntegral$.times:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #271 = NameAndType        #53:#48       // minus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #272 = Methodref          #2.#271       // scala/math/Numeric$BigIntIsIntegral$.minus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #273 = NameAndType        #47:#48       // plus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #274 = Methodref          #2.#273       // scala/math/Numeric$BigIntIsIntegral$.plus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
  #275 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I
  #276 = NameAndType        #37:#38       // compare:(Lscala/math/BigInt;Lscala/math/BigInt;)I
  #277 = Methodref          #2.#276       // scala/math/Numeric$BigIntIsIntegral$.compare:(Lscala/math/BigInt;Lscala/math/BigInt;)I
  #278 = Methodref          #4.#33        // java/lang/Object."<init>":()V
  #279 = Utf8               Code
  #280 = Utf8               LineNumberTable
  #281 = Utf8               LocalVariableTable
  #282 = Utf8               MethodParameters
  #283 = Utf8               Signature
  #284 = Utf8               Deprecated
  #285 = Utf8               InnerClasses
  #286 = Utf8               SourceFile
  #287 = Utf8               ScalaInlineInfo
  #288 = Utf8               Scala
{
  public static final scala.math.Numeric$BigIntIsIntegral$ MODULE$;
    descriptor: Lscala/math/Numeric$BigIntIsIntegral$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/math/Numeric$BigIntIsIntegral$
         3: dup
         4: invokespecial #34                 // Method "<init>":()V
         7: putstatic     #36                 // Field MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
        10: getstatic     #36                 // Field MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
        13: pop
        14: getstatic     #36                 // Field MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
        17: pop
        18: getstatic     #36                 // Field MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
        21: pop
        22: getstatic     #36                 // Field MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
        25: pop
        26: getstatic     #36                 // Field MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
        29: pop
        30: getstatic     #36                 // Field MODULE$:Lscala/math/Numeric$BigIntIsIntegral$;
        33: pop
        34: return
      LineNumberTable:
        line 49: 0
        line 49: 22
        line 49: 30

  public int compare(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #44                 // InterfaceMethod scala/math/Ordering$BigIntOrdering.compare$:(Lscala/math/Ordering$BigIntOrdering;Lscala/math/BigInt;Lscala/math/BigInt;)I
         6: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.BigInt plus(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #52                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.plus$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.BigInt minus(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #56                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.minus$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.BigInt times(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #60                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.times$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.BigInt quot(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #64                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.quot$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.BigInt rem(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #68                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.rem$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.BigInt negate(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #74                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.negate$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.math.BigInt fromInt(int);
    descriptor: (I)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #80                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.fromInt$:(Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.Option<scala.math.BigInt> parseString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #89                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.parseString$:(Lscala/math/Numeric$BigIntIsIntegral;Ljava/lang/String;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1   str   Ljava/lang/String;
    Signature: #84                          // (Ljava/lang/String;)Lscala/Option<Lscala/math/BigInt;>;
    MethodParameters:
      Name                           Flags
      str                            final

  public int toInt(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #96                 // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.toInt$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I
         5: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public long toLong(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #102                // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.toLong$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J
         5: lreturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public float toFloat(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #108                // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.toFloat$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F
         5: freturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public double toDouble(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #114                // InterfaceMethod scala/math/Numeric$BigIntIsIntegral.toDouble$:(Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D
         5: dreturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.math.Integral$IntegralOps mkNumericOps(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #121                // InterfaceMethod scala/math/Integral.mkNumericOps$:(Lscala/math/Integral;Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1   lhs   Ljava/lang/Object;
    Signature: #116                         // (Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
    MethodParameters:
      Name                           Flags
      lhs                            final

  public java.lang.Object zero();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #128                // InterfaceMethod scala/math/Numeric.zero$:(Lscala/math/Numeric;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral$;

  public java.lang.Object one();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #132                // InterfaceMethod scala/math/Numeric.one$:(Lscala/math/Numeric;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral$;

  public java.lang.Object abs(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #138                // InterfaceMethod scala/math/Numeric.abs$:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public int signum(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #144                // InterfaceMethod scala/math/Numeric.signum$:(Lscala/math/Numeric;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Ljava/lang/Object;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      x                              final

  public java.lang.Object sign(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #148                // InterfaceMethod scala/math/Numeric.sign$:(Lscala/math/Numeric;Ljava/lang/Object;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.Some tryCompare(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #154                // InterfaceMethod scala/math/Ordering.tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean lteq(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #160                // InterfaceMethod scala/math/Ordering.lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean gteq(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #164                // InterfaceMethod scala/math/Ordering.gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean lt(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #168                // InterfaceMethod scala/math/Ordering.lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean gt(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #172                // InterfaceMethod scala/math/Ordering.gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #176                // InterfaceMethod scala/math/Ordering.equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #182                // InterfaceMethod scala/math/Ordering.max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #186                // InterfaceMethod scala/math/Ordering.min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Ordering<scala.math.BigInt> reverse();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #193                // InterfaceMethod scala/math/Ordering.reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
    Signature: #189                         // ()Lscala/math/Ordering<Lscala/math/BigInt;>;

  public boolean isReverseOf(scala.math.Ordering<?>);
    descriptor: (Lscala/math/Ordering;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #201                // InterfaceMethod scala/math/Ordering.isReverseOf$:(Lscala/math/Ordering;Lscala/math/Ordering;)Z
         5: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1 other   Lscala/math/Ordering;
    Signature: #196                         // (Lscala/math/Ordering<*>;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public <U extends java.lang.Object> scala.math.Ordering<U> on(scala.Function1<U, scala.math.BigInt>);
    descriptor: (Lscala/Function1;)Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #210                // InterfaceMethod scala/math/Ordering.on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     f   Lscala/Function1;
    Signature: #205                         // <U:Ljava/lang/Object;>(Lscala/Function1<TU;Lscala/math/BigInt;>;)Lscala/math/Ordering<TU;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.math.Ordering<scala.math.BigInt> orElse(scala.math.Ordering<scala.math.BigInt>);
    descriptor: (Lscala/math/Ordering;)Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #217                // InterfaceMethod scala/math/Ordering.orElse$:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1 other   Lscala/math/Ordering;
    Signature: #213                         // (Lscala/math/Ordering<Lscala/math/BigInt;>;)Lscala/math/Ordering<Lscala/math/BigInt;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public <S extends java.lang.Object> scala.math.Ordering<scala.math.BigInt> orElseBy(scala.Function1<scala.math.BigInt, S>, scala.math.Ordering<S>);
    descriptor: (Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #225                // InterfaceMethod scala/math/Ordering.orElseBy$:(Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     f   Lscala/Function1;
            0       7     2   ord   Lscala/math/Ordering;
    Signature: #220                         // <S:Ljava/lang/Object;>(Lscala/Function1<Lscala/math/BigInt;TS;>;Lscala/math/Ordering<TS;>;)Lscala/math/Ordering<Lscala/math/BigInt;>;
    MethodParameters:
      Name                           Flags
      f                              final
      ord                            final

  public scala.math.Ordering$OrderingOps mkOrderingOps(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #231                // InterfaceMethod scala/math/Ordering.mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1   lhs   Ljava/lang/Object;
    Signature: #227                         // (Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
    MethodParameters:
      Name                           Flags
      lhs                            final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #234                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class scala/math/Numeric$BigIntIsIntegral$
         6: invokespecial #237                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/Numeric$BigIntIsIntegral$;

  public scala.math.PartialOrdering reverse();
    descriptor: ()Lscala/math/PartialOrdering;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #240                // Method reverse:()Lscala/math/Ordering;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral$;

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #243                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Numeric$NumericOps mkNumericOps(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/math/Numeric$NumericOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #246                // Method mkNumericOps:(Ljava/lang/Object;)Lscala/math/Integral$IntegralOps;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1   lhs   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      lhs                            final

  public double toDouble(java.lang.Object);
    descriptor: (Ljava/lang/Object;)D
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: invokevirtual #251                // Method toDouble:(Lscala/math/BigInt;)D
         8: dreturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public float toFloat(java.lang.Object);
    descriptor: (Ljava/lang/Object;)F
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: invokevirtual #254                // Method toFloat:(Lscala/math/BigInt;)F
         8: freturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public long toLong(java.lang.Object);
    descriptor: (Ljava/lang/Object;)J
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: invokevirtual #257                // Method toLong:(Lscala/math/BigInt;)J
         8: lreturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public int toInt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: invokevirtual #259                // Method toInt:(Lscala/math/BigInt;)I
         8: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public java.lang.Object fromInt(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #262                // Method fromInt:(I)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       6     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public java.lang.Object negate(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: invokevirtual #264                // Method negate:(Lscala/math/BigInt;)Lscala/math/BigInt;
         8: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public java.lang.Object rem(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: aload_2
         6: checkcast     #249                // class scala/math/BigInt
         9: invokevirtual #266                // Method rem:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
        12: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public java.lang.Object quot(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: aload_2
         6: checkcast     #249                // class scala/math/BigInt
         9: invokevirtual #268                // Method quot:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
        12: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public java.lang.Object times(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: aload_2
         6: checkcast     #249                // class scala/math/BigInt
         9: invokevirtual #270                // Method times:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
        12: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public java.lang.Object minus(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: aload_2
         6: checkcast     #249                // class scala/math/BigInt
         9: invokevirtual #272                // Method minus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
        12: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public java.lang.Object plus(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: aload_2
         6: checkcast     #249                // class scala/math/BigInt
         9: invokevirtual #274                // Method plus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
        12: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public int compare(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #249                // class scala/math/BigInt
         5: aload_2
         6: checkcast     #249                // class scala/math/BigInt
         9: invokevirtual #277                // Method compare:(Lscala/math/BigInt;Lscala/math/BigInt;)I
        12: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Numeric$BigIntIsIntegral$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #278                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral$;
}
InnerClasses:
  public #14= #11 of #13;                 // IntegralOps=class scala/math/Integral$IntegralOps of class scala/math/Integral
  public static #17= #6 of #16;           // BigIntIsIntegral=class scala/math/Numeric$BigIntIsIntegral of class scala/math/Numeric
  public static #18= #2 of #16;           // BigIntIsIntegral$=class scala/math/Numeric$BigIntIsIntegral$ of class scala/math/Numeric
  public #21= #20 of #16;                 // NumericOps=class scala/math/Numeric$NumericOps of class scala/math/Numeric
  public static #24= #8 of #23;           // BigIntOrdering=class scala/math/Ordering$BigIntOrdering of class scala/math/Ordering
  public #27= #26 of #23;                 // OrderingOps=class scala/math/Ordering$OrderingOps of class scala/math/Ordering
SourceFile: "Numeric.scala"
  ScalaInlineInfo: length = 0xFE (unknown attribute)
   01 01 00 32 00 20 00 1F 01 00 85 00 86 01 00 25
   01 13 01 00 25 00 26 01 00 AD 00 9C 01 00 4B 01
   04 01 00 4B 00 4C 01 00 A9 00 9C 01 00 A1 00 9C
   01 00 C2 00 C3 01 00 A5 00 9C 01 00 9B 00 9C 01
   00 B1 00 B2 01 00 B7 00 B2 01 00 35 00 B2 01 00
   35 00 30 01 00 73 00 74 01 00 73 00 F4 01 00 E2
   00 E3 01 00 45 00 86 01 00 45 00 46 01 00 CB 00
   CC 01 00 81 00 7C 01 00 D4 00 BF 01 00 DA 00 DB
   01 00 52 00 53 01 00 2F 00 B2 01 00 2F 00 30 01
   00 3D 00 B2 01 00 3D 00 30 01 00 41 00 B2 01 00
   41 00 30 01 00 BB 00 BC 01 00 BB 00 EE 01 00 91
   00 86 01 00 8B 00 8C 01 00 39 00 B2 01 00 39 00
   30 01 00 6D 00 F7 01 00 6D 00 6E 01 00 67 00 FC
   01 00 67 00 68 01 00 5B 00 8C 01 00 5B 00 5C 01
   00 61 00 FF 01 00 61 00 62 01 00 95 00 F1 01 00
   95 00 96 01 00 E8 00 7C 01 00 7B 00 7C 01
  Scala: length = 0x0 (unknown attribute)

