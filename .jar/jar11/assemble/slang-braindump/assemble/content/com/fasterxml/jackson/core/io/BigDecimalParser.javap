Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/core/io/BigDecimalParser.class
  Last modified May 29, 2022; size 3959 bytes
  SHA-256 checksum cba592b00c2386b329fcbaa6e07f24b75d7315aac04230ad1c26a731eeb56542
  Compiled from "BigDecimalParser.java"
public final class com.fasterxml.jackson.core.io.BigDecimalParser
  minor version: 0
  major version: 50
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #8                          // com/fasterxml/jackson/core/io/BigDecimalParser
  super_class: #47                        // java/lang/Object
  interfaces: 0, fields: 1, methods: 7, attributes: 1
Constant pool:
    #1 = Methodref          #47.#106      // java/lang/Object."<init>":()V
    #2 = Fieldref           #8.#107       // com/fasterxml/jackson/core/io/BigDecimalParser.chars:[C
    #3 = Methodref          #18.#108      // java/lang/String.toCharArray:()[C
    #4 = Methodref          #8.#109       // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;
    #5 = Methodref          #110.#111     // java/util/Arrays.copyOfRange:([CII)[C
    #6 = Class              #112          // java/math/BigDecimal
    #7 = Methodref          #6.#113       // java/math/BigDecimal."<init>":([C)V
    #8 = Class              #114          // com/fasterxml/jackson/core/io/BigDecimalParser
    #9 = Methodref          #8.#113       // com/fasterxml/jackson/core/io/BigDecimalParser."<init>":([C)V
   #10 = Methodref          #8.#115       // com/fasterxml/jackson/core/io/BigDecimalParser.parseBigDecimal:(I)Ljava/math/BigDecimal;
   #11 = Class              #116          // java/lang/NumberFormatException
   #12 = Methodref          #11.#117      // java/lang/NumberFormatException.getMessage:()Ljava/lang/String;
   #13 = String             #118          // Not a valid number representation
   #14 = Class              #119          // java/lang/StringBuilder
   #15 = Methodref          #14.#106      // java/lang/StringBuilder."<init>":()V
   #16 = String             #120          // Value \"
   #17 = Methodref          #14.#121      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #18 = Class              #122          // java/lang/String
   #19 = Methodref          #18.#113      // java/lang/String."<init>":([C)V
   #20 = String             #123          // \" can not be represented as `java.math.BigDecimal`, reason:
   #21 = Methodref          #14.#124      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #22 = Methodref          #11.#125      // java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
   #23 = String             #126          // Multiple signs in exponent
   #24 = String             #127          // Multiple signs in number
   #25 = String             #128          // Multiple exponent markers
   #26 = String             #129          // Multiple decimal points
   #27 = Methodref          #18.#130      // java/lang/String."<init>":([CII)V
   #28 = Methodref          #34.#131      // java/lang/Integer.parseInt:(Ljava/lang/String;)I
   #29 = Methodref          #8.#132       // com/fasterxml/jackson/core/io/BigDecimalParser.adjustScale:(IJ)I
   #30 = Methodref          #8.#133       // com/fasterxml/jackson/core/io/BigDecimalParser.toBigDecimalRec:(IIII)Ljava/math/BigDecimal;
   #31 = Methodref          #6.#134       // java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
   #32 = Methodref          #6.#135       // java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;
   #33 = Methodref          #6.#136       // java/math/BigDecimal.negate:()Ljava/math/BigDecimal;
   #34 = Class              #137          // java/lang/Integer
   #35 = Long               2147483647l
   #37 = Long               -2147483648l
   #39 = String             #138          // Scale out of range:
   #40 = Methodref          #14.#139      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
   #41 = String             #140          //  while adjusting scale
   #42 = Methodref          #14.#141      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #43 = String             #142          //  to exponent
   #44 = Fieldref           #6.#143       // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
   #45 = Methodref          #6.#130       // java/math/BigDecimal."<init>":([CII)V
   #46 = Methodref          #6.#144       // java/math/BigDecimal.movePointRight:(I)Ljava/math/BigDecimal;
   #47 = Class              #145          // java/lang/Object
   #48 = Utf8               chars
   #49 = Utf8               [C
   #50 = Utf8               <init>
   #51 = Utf8               ([C)V
   #52 = Utf8               Code
   #53 = Utf8               LineNumberTable
   #54 = Utf8               LocalVariableTable
   #55 = Utf8               this
   #56 = Utf8               Lcom/fasterxml/jackson/core/io/BigDecimalParser;
   #57 = Utf8               parse
   #58 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;
   #59 = Utf8               valueStr
   #60 = Utf8               Ljava/lang/String;
   #61 = Utf8               ([CII)Ljava/math/BigDecimal;
   #62 = Utf8               off
   #63 = Utf8               I
   #64 = Utf8               len
   #65 = Utf8               StackMapTable
   #66 = Utf8               ([C)Ljava/math/BigDecimal;
   #67 = Utf8               desc
   #68 = Utf8               e
   #69 = Utf8               Ljava/lang/NumberFormatException;
   #70 = Class              #116          // java/lang/NumberFormatException
   #71 = Class              #122          // java/lang/String
   #72 = Utf8               parseBigDecimal
   #73 = Utf8               (I)Ljava/math/BigDecimal;
   #74 = Utf8               c
   #75 = Utf8               C
   #76 = Utf8               i
   #77 = Utf8               expStr
   #78 = Utf8               numEndIdx
   #79 = Utf8               leftLen
   #80 = Utf8               left
   #81 = Utf8               Ljava/math/BigDecimal;
   #82 = Utf8               rightLen
   #83 = Utf8               right
   #84 = Utf8               res
   #85 = Utf8               splitLen
   #86 = Utf8               numHasSign
   #87 = Utf8               Z
   #88 = Utf8               expHasSign
   #89 = Utf8               neg
   #90 = Utf8               numIdx
   #91 = Utf8               expIdx
   #92 = Utf8               dotIdx
   #93 = Utf8               scale
   #94 = Utf8               exp
   #95 = Class              #114          // com/fasterxml/jackson/core/io/BigDecimalParser
   #96 = Class              #112          // java/math/BigDecimal
   #97 = Utf8               adjustScale
   #98 = Utf8               (IJ)I
   #99 = Utf8               J
  #100 = Utf8               adjScale
  #101 = Utf8               toBigDecimalRec
  #102 = Utf8               (IIII)Ljava/math/BigDecimal;
  #103 = Utf8               mid
  #104 = Utf8               SourceFile
  #105 = Utf8               BigDecimalParser.java
  #106 = NameAndType        #50:#146      // "<init>":()V
  #107 = NameAndType        #48:#49       // chars:[C
  #108 = NameAndType        #147:#148     // toCharArray:()[C
  #109 = NameAndType        #57:#66       // parse:([C)Ljava/math/BigDecimal;
  #110 = Class              #149          // java/util/Arrays
  #111 = NameAndType        #150:#151     // copyOfRange:([CII)[C
  #112 = Utf8               java/math/BigDecimal
  #113 = NameAndType        #50:#51       // "<init>":([C)V
  #114 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser
  #115 = NameAndType        #72:#73       // parseBigDecimal:(I)Ljava/math/BigDecimal;
  #116 = Utf8               java/lang/NumberFormatException
  #117 = NameAndType        #152:#153     // getMessage:()Ljava/lang/String;
  #118 = Utf8               Not a valid number representation
  #119 = Utf8               java/lang/StringBuilder
  #120 = Utf8               Value \"
  #121 = NameAndType        #154:#155     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #122 = Utf8               java/lang/String
  #123 = Utf8               \" can not be represented as `java.math.BigDecimal`, reason:
  #124 = NameAndType        #156:#153     // toString:()Ljava/lang/String;
  #125 = NameAndType        #50:#157      // "<init>":(Ljava/lang/String;)V
  #126 = Utf8               Multiple signs in exponent
  #127 = Utf8               Multiple signs in number
  #128 = Utf8               Multiple exponent markers
  #129 = Utf8               Multiple decimal points
  #130 = NameAndType        #50:#158      // "<init>":([CII)V
  #131 = NameAndType        #159:#160     // parseInt:(Ljava/lang/String;)I
  #132 = NameAndType        #97:#98       // adjustScale:(IJ)I
  #133 = NameAndType        #101:#102     // toBigDecimalRec:(IIII)Ljava/math/BigDecimal;
  #134 = NameAndType        #161:#162     // add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #135 = NameAndType        #163:#73      // setScale:(I)Ljava/math/BigDecimal;
  #136 = NameAndType        #164:#165     // negate:()Ljava/math/BigDecimal;
  #137 = Utf8               java/lang/Integer
  #138 = Utf8               Scale out of range:
  #139 = NameAndType        #154:#166     // append:(J)Ljava/lang/StringBuilder;
  #140 = Utf8                while adjusting scale
  #141 = NameAndType        #154:#167     // append:(I)Ljava/lang/StringBuilder;
  #142 = Utf8                to exponent
  #143 = NameAndType        #168:#81      // ZERO:Ljava/math/BigDecimal;
  #144 = NameAndType        #169:#73      // movePointRight:(I)Ljava/math/BigDecimal;
  #145 = Utf8               java/lang/Object
  #146 = Utf8               ()V
  #147 = Utf8               toCharArray
  #148 = Utf8               ()[C
  #149 = Utf8               java/util/Arrays
  #150 = Utf8               copyOfRange
  #151 = Utf8               ([CII)[C
  #152 = Utf8               getMessage
  #153 = Utf8               ()Ljava/lang/String;
  #154 = Utf8               append
  #155 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #156 = Utf8               toString
  #157 = Utf8               (Ljava/lang/String;)V
  #158 = Utf8               ([CII)V
  #159 = Utf8               parseInt
  #160 = Utf8               (Ljava/lang/String;)I
  #161 = Utf8               add
  #162 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #163 = Utf8               setScale
  #164 = Utf8               negate
  #165 = Utf8               ()Ljava/math/BigDecimal;
  #166 = Utf8               (J)Ljava/lang/StringBuilder;
  #167 = Utf8               (I)Ljava/lang/StringBuilder;
  #168 = Utf8               ZERO
  #169 = Utf8               movePointRight
{
  private final char[] chars;
    descriptor: [C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  com.fasterxml.jackson.core.io.BigDecimalParser(char[]);
    descriptor: ([C)V
    flags: (0x0000)
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #2                  // Field chars:[C
         9: return
      LineNumberTable:
        line 26: 0
        line 27: 4
        line 28: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/fasterxml/jackson/core/io/BigDecimalParser;
            0      10     1 chars   [C

  public static java.math.BigDecimal parse(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #3                  // Method java/lang/String.toCharArray:()[C
         4: invokestatic  #4                  // Method parse:([C)Ljava/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 valueStr   Ljava/lang/String;

  public static java.math.BigDecimal parse(char[], int, int);
    descriptor: ([CII)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: iload_1
         1: ifgt          10
         4: iload_2
         5: aload_0
         6: arraylength
         7: if_icmpeq     19
        10: aload_0
        11: iload_1
        12: iload_1
        13: iload_2
        14: iadd
        15: invokestatic  #5                  // Method java/util/Arrays.copyOfRange:([CII)[C
        18: astore_0
        19: aload_0
        20: invokestatic  #4                  // Method parse:([C)Ljava/math/BigDecimal;
        23: areturn
      LineNumberTable:
        line 35: 0
        line 36: 10
        line 38: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 chars   [C
            0      24     1   off   I
            0      24     2   len   I
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 8 /* same */

  public static java.math.BigDecimal parse(char[]);
    descriptor: ([C)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=4, args_size=1
         0: aload_0
         1: arraylength
         2: istore_1
         3: iload_1
         4: sipush        500
         7: if_icmpge     19
        10: new           #6                  // class java/math/BigDecimal
        13: dup
        14: aload_0
        15: invokespecial #7                  // Method java/math/BigDecimal."<init>":([C)V
        18: areturn
        19: new           #8                  // class com/fasterxml/jackson/core/io/BigDecimalParser
        22: dup
        23: aload_0
        24: invokespecial #9                  // Method "<init>":([C)V
        27: iload_1
        28: bipush        10
        30: idiv
        31: invokespecial #10                 // Method parseBigDecimal:(I)Ljava/math/BigDecimal;
        34: areturn
        35: astore_2
        36: aload_2
        37: invokevirtual #12                 // Method java/lang/NumberFormatException.getMessage:()Ljava/lang/String;
        40: astore_3
        41: aload_3
        42: ifnonnull     48
        45: ldc           #13                 // String Not a valid number representation
        47: astore_3
        48: new           #11                 // class java/lang/NumberFormatException
        51: dup
        52: new           #14                 // class java/lang/StringBuilder
        55: dup
        56: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
        59: ldc           #16                 // String Value \"
        61: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: new           #18                 // class java/lang/String
        67: dup
        68: aload_0
        69: invokespecial #19                 // Method java/lang/String."<init>":([C)V
        72: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        75: ldc           #20                 // String \" can not be represented as `java.math.BigDecimal`, reason:
        77: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        80: aload_3
        81: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        84: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        87: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        90: athrow
      Exception table:
         from    to  target type
             3    18    35   Class java/lang/NumberFormatException
            19    34    35   Class java/lang/NumberFormatException
      LineNumberTable:
        line 42: 0
        line 44: 3
        line 45: 10
        line 47: 19
        line 48: 35
        line 49: 36
        line 51: 41
        line 52: 45
        line 54: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           41      50     3  desc   Ljava/lang/String;
           36      55     2     e   Ljava/lang/NumberFormatException;
            0      91     0 chars   [C
            3      88     1   len   I
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ int ]
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 253 /* append */
          offset_delta = 12
          locals = [ class java/lang/NumberFormatException, class java/lang/String ]

  private java.math.BigDecimal parseBigDecimal(int);
    descriptor: (I)Ljava/math/BigDecimal;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=17, args_size=2
         0: iconst_0
         1: istore_2
         2: iconst_0
         3: istore_3
         4: iconst_0
         5: istore        4
         7: iconst_0
         8: istore        5
        10: iconst_m1
        11: istore        6
        13: iconst_m1
        14: istore        7
        16: iconst_0
        17: istore        8
        19: aload_0
        20: getfield      #2                  // Field chars:[C
        23: arraylength
        24: istore        9
        26: iconst_0
        27: istore        10
        29: iload         10
        31: iload         9
        33: if_icmpge     261
        36: aload_0
        37: getfield      #2                  // Field chars:[C
        40: iload         10
        42: caload
        43: istore        11
        45: iload         11
        47: lookupswitch  { // 5
                      43: 96
                      45: 145
                      46: 219
                      69: 197
                     101: 197
                 default: 241
            }
        96: iload         6
        98: iflt          120
       101: iload_3
       102: ifeq          115
       105: new           #11                 // class java/lang/NumberFormatException
       108: dup
       109: ldc           #23                 // String Multiple signs in exponent
       111: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       114: athrow
       115: iconst_1
       116: istore_3
       117: goto          255
       120: iload_2
       121: ifeq          134
       124: new           #11                 // class java/lang/NumberFormatException
       127: dup
       128: ldc           #24                 // String Multiple signs in number
       130: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       133: athrow
       134: iconst_1
       135: istore_2
       136: iload         10
       138: iconst_1
       139: iadd
       140: istore        5
       142: goto          255
       145: iload         6
       147: iflt          169
       150: iload_3
       151: ifeq          164
       154: new           #11                 // class java/lang/NumberFormatException
       157: dup
       158: ldc           #23                 // String Multiple signs in exponent
       160: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       163: athrow
       164: iconst_1
       165: istore_3
       166: goto          255
       169: iload_2
       170: ifeq          183
       173: new           #11                 // class java/lang/NumberFormatException
       176: dup
       177: ldc           #24                 // String Multiple signs in number
       179: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       182: athrow
       183: iconst_1
       184: istore_2
       185: iconst_1
       186: istore        4
       188: iload         10
       190: iconst_1
       191: iadd
       192: istore        5
       194: goto          255
       197: iload         6
       199: iflt          212
       202: new           #11                 // class java/lang/NumberFormatException
       205: dup
       206: ldc           #25                 // String Multiple exponent markers
       208: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       211: athrow
       212: iload         10
       214: istore        6
       216: goto          255
       219: iload         7
       221: iflt          234
       224: new           #11                 // class java/lang/NumberFormatException
       227: dup
       228: ldc           #26                 // String Multiple decimal points
       230: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       233: athrow
       234: iload         10
       236: istore        7
       238: goto          255
       241: iload         7
       243: iflt          255
       246: iload         6
       248: iconst_m1
       249: if_icmpne     255
       252: iinc          8, 1
       255: iinc          10, 1
       258: goto          29
       261: iconst_0
       262: istore        11
       264: iload         6
       266: iflt          318
       269: iload         6
       271: istore        10
       273: new           #18                 // class java/lang/String
       276: dup
       277: aload_0
       278: getfield      #2                  // Field chars:[C
       281: iload         6
       283: iconst_1
       284: iadd
       285: iload         9
       287: iload         6
       289: isub
       290: iconst_1
       291: isub
       292: invokespecial #27                 // Method java/lang/String."<init>":([CII)V
       295: astore        12
       297: aload         12
       299: invokestatic  #28                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       302: istore        11
       304: aload_0
       305: iload         8
       307: iload         11
       309: i2l
       310: invokespecial #29                 // Method adjustScale:(IJ)I
       313: istore        8
       315: goto          322
       318: iload         9
       320: istore        10
       322: iload         7
       324: iflt          386
       327: iload         7
       329: iload         5
       331: isub
       332: istore        13
       334: aload_0
       335: iload         5
       337: iload         13
       339: iload         11
       341: iload_1
       342: invokespecial #30                 // Method toBigDecimalRec:(IIII)Ljava/math/BigDecimal;
       345: astore        14
       347: iload         10
       349: iload         7
       351: isub
       352: iconst_1
       353: isub
       354: istore        15
       356: aload_0
       357: iload         7
       359: iconst_1
       360: iadd
       361: iload         15
       363: iload         11
       365: iload         15
       367: isub
       368: iload_1
       369: invokespecial #30                 // Method toBigDecimalRec:(IIII)Ljava/math/BigDecimal;
       372: astore        16
       374: aload         14
       376: aload         16
       378: invokevirtual #31                 // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       381: astore        12
       383: goto          402
       386: aload_0
       387: iload         5
       389: iload         10
       391: iload         5
       393: isub
       394: iload         11
       396: iload_1
       397: invokespecial #30                 // Method toBigDecimalRec:(IIII)Ljava/math/BigDecimal;
       400: astore        12
       402: iload         8
       404: ifeq          416
       407: aload         12
       409: iload         8
       411: invokevirtual #32                 // Method java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;
       414: astore        12
       416: iload         4
       418: ifeq          428
       421: aload         12
       423: invokevirtual #33                 // Method java/math/BigDecimal.negate:()Ljava/math/BigDecimal;
       426: astore        12
       428: aload         12
       430: areturn
      LineNumberTable:
        line 60: 0
        line 61: 2
        line 62: 4
        line 63: 7
        line 64: 10
        line 65: 13
        line 66: 16
        line 67: 19
        line 69: 26
        line 70: 36
        line 71: 45
        line 73: 96
        line 74: 101
        line 75: 105
        line 77: 115
        line 79: 120
        line 80: 124
        line 82: 134
        line 83: 136
        line 85: 142
        line 87: 145
        line 88: 150
        line 89: 154
        line 91: 164
        line 93: 169
        line 94: 173
        line 96: 183
        line 97: 185
        line 98: 188
        line 100: 194
        line 103: 197
        line 104: 202
        line 106: 212
        line 107: 216
        line 109: 219
        line 110: 224
        line 112: 234
        line 113: 238
        line 115: 241
        line 116: 252
        line 69: 255
        line 122: 261
        line 123: 264
        line 124: 269
        line 125: 273
        line 126: 297
        line 127: 304
        line 128: 315
        line 129: 318
        line 134: 322
        line 135: 327
        line 136: 334
        line 138: 347
        line 139: 356
        line 141: 374
        line 142: 383
        line 143: 386
        line 146: 402
        line 147: 407
        line 150: 416
        line 151: 421
        line 154: 428
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           45     210    11     c   C
           29     232    10     i   I
          297      18    12 expStr   Ljava/lang/String;
          273      45    10 numEndIdx   I
          334      49    13 leftLen   I
          347      36    14  left   Ljava/math/BigDecimal;
          356      27    15 rightLen   I
          374       9    16 right   Ljava/math/BigDecimal;
          383       3    12   res   Ljava/math/BigDecimal;
            0     431     0  this   Lcom/fasterxml/jackson/core/io/BigDecimalParser;
            0     431     1 splitLen   I
            2     429     2 numHasSign   Z
            4     427     3 expHasSign   Z
            7     424     4   neg   Z
           10     421     5 numIdx   I
           13     418     6 expIdx   I
           16     415     7 dotIdx   I
           19     412     8 scale   I
           26     405     9   len   I
          322     109    10 numEndIdx   I
          264     167    11   exp   I
          402      29    12   res   Ljava/math/BigDecimal;
      StackMapTable: number_of_entries = 22
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class com/fasterxml/jackson/core/io/BigDecimalParser, int, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 66
          locals = [ int ]
        frame_type = 18 /* same */
        frame_type = 4 /* same */
        frame_type = 13 /* same */
        frame_type = 10 /* same */
        frame_type = 18 /* same */
        frame_type = 4 /* same */
        frame_type = 13 /* same */
        frame_type = 13 /* same */
        frame_type = 14 /* same */
        frame_type = 6 /* same */
        frame_type = 14 /* same */
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 13
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 253 /* append */
          offset_delta = 56
          locals = [ top, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class com/fasterxml/jackson/core/io/BigDecimalParser, int, int, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 63 /* same */
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ class java/math/BigDecimal ]
        frame_type = 13 /* same */
        frame_type = 11 /* same */

  private int adjustScale(int, long);
    descriptor: (IJ)I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=3
         0: iload_1
         1: i2l
         2: lload_2
         3: lsub
         4: lstore        4
         6: lload         4
         8: ldc2_w        #35                 // long 2147483647l
        11: lcmp
        12: ifgt          24
        15: lload         4
        17: ldc2_w        #37                 // long -2147483648l
        20: lcmp
        21: ifge          70
        24: new           #11                 // class java/lang/NumberFormatException
        27: dup
        28: new           #14                 // class java/lang/StringBuilder
        31: dup
        32: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
        35: ldc           #39                 // String Scale out of range:
        37: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: lload         4
        42: invokevirtual #40                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        45: ldc           #41                 // String  while adjusting scale
        47: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: iload_1
        51: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        54: ldc           #43                 // String  to exponent
        56: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: lload_2
        60: invokevirtual #40                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        63: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        66: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        69: athrow
        70: lload         4
        72: l2i
        73: ireturn
      LineNumberTable:
        line 158: 0
        line 159: 6
        line 160: 24
        line 164: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      74     0  this   Lcom/fasterxml/jackson/core/io/BigDecimalParser;
            0      74     1 scale   I
            0      74     2   exp   J
            6      68     4 adjScale   J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ long ]
        frame_type = 45 /* same */

  private java.math.BigDecimal toBigDecimalRec(int, int, int, int);
    descriptor: (IIII)Ljava/math/BigDecimal;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=8, args_size=5
         0: iload_2
         1: iload         4
         3: if_icmple     53
         6: iload_2
         7: iconst_2
         8: idiv
         9: istore        5
        11: aload_0
        12: iload_1
        13: iload         5
        15: iload_3
        16: iload_2
        17: iadd
        18: iload         5
        20: isub
        21: iload         4
        23: invokespecial #30                 // Method toBigDecimalRec:(IIII)Ljava/math/BigDecimal;
        26: astore        6
        28: aload_0
        29: iload_1
        30: iload         5
        32: iadd
        33: iload_2
        34: iload         5
        36: isub
        37: iload_3
        38: iload         4
        40: invokespecial #30                 // Method toBigDecimalRec:(IIII)Ljava/math/BigDecimal;
        43: astore        7
        45: aload         6
        47: aload         7
        49: invokevirtual #31                 // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
        52: areturn
        53: iload_2
        54: ifne          63
        57: getstatic     #44                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
        60: goto          80
        63: new           #6                  // class java/math/BigDecimal
        66: dup
        67: aload_0
        68: getfield      #2                  // Field chars:[C
        71: iload_1
        72: iload_2
        73: invokespecial #45                 // Method java/math/BigDecimal."<init>":([CII)V
        76: iload_3
        77: invokevirtual #46                 // Method java/math/BigDecimal.movePointRight:(I)Ljava/math/BigDecimal;
        80: areturn
      LineNumberTable:
        line 168: 0
        line 169: 6
        line 170: 11
        line 171: 28
        line 173: 45
        line 176: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      42     5   mid   I
           28      25     6  left   Ljava/math/BigDecimal;
           45       8     7 right   Ljava/math/BigDecimal;
            0      81     0  this   Lcom/fasterxml/jackson/core/io/BigDecimalParser;
            0      81     1   off   I
            0      81     2   len   I
            0      81     3 scale   I
            0      81     4 splitLen   I
      StackMapTable: number_of_entries = 3
        frame_type = 53 /* same */
        frame_type = 9 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/math/BigDecimal ]
}
SourceFile: "BigDecimalParser.java"
