Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/derive/MkEncodeJson.class
  Last modified May 29, 2022; size 2084 bytes
  SHA-256 checksum 3a5ae780f7b48a7392bda589c309c004ba06feb998eb4753292e338e2247b531
  Compiled from "MkEncodeJson.scala"
public interface argonaut.derive.MkEncodeJson<T extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // argonaut/derive/MkEncodeJson
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 5
Constant pool:
   #1 = Utf8               argonaut/derive/MkEncodeJson
   #2 = Class              #1             // argonaut/derive/MkEncodeJson
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               MkEncodeJson.scala
   #7 = Utf8               Lscala/reflect/ScalaSignature;
   #8 = Utf8               bytes
   #9 = Utf8               \u0006\u0005m3q\u0001C\u0005\u0011\u0002G\u0005a\u0002C\u0003\u0017\u0001\u0019\u0005qcB\u0003(\u0013!\u0005\u0001FB\u0003\t\u0013!\u0005!\u0006C\u0003,\u0007\u0011\u0005A\u0006C\u0003.\u0007\u0011\u0005a\u0006C\u00035\u0007\u0011\rQ\u0007C\u0003L\u0007\u0011\rAJ\u0001\u0007NW\u0016s7m\u001c3f\u0015N|gN\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u0001QCA\b\u001f\'\t\u0001\u0001\u0003\u0005\u0002\u0012)5\t!CC\u0001\u0014\u0003\u0015\u00198-\u00197b\u0013\t)\"C\u0001\u0004B]f\u0014VMZ\u0001\u000bK:\u001cw\u000eZ3Kg>tW#\u0001\r\u0011\u0007eQB$D\u0001\f\u0013\tY2B\u0001\u0006F]\u000e|G-\u001a&t_:\u0004\"!\b\u0010\r\u0001\u0011)q\u0004\u0001b\u0001A\t\tA+\u0005\u0002\"IA\u0011\u0011CI\u0005\u0003GI\u0011qAT8uQ&tw\r\u0005\u0002\u0012K%\u0011aE\u0005\u0002\u0004\u0003:L\u0018\u0001D\'l\u000b:\u001cw\u000eZ3Kg>t\u0007CA\u0015\u0004\u001b\u0005I1CA\u0002\u0011\u0003\u0019a\u0014N\\5u}Q\t\u0001&A\u0003baBd\u00170\u0006\u00020eQ\u0011\u0001g\r\t\u0004S\u0001\t\u0004CA\u000f3\t\u0015yRA1\u0001!\u0011\u00151R\u0001q\u00011\u0003\u001d\u0001(o\u001c3vGR,\"AN\u001d\u0015\u0007]Zd\tE\u0002*\u0001a\u0002\"!H\u001d\u0005\u000bi2!\u0019\u0001\u0011\u0003\u0003ACQ\u0001\u0010\u0004A\u0004u\n!\"\u001e8eKJd\u00170\u001b8h!\rq\u0014iQ\u0007\u0002\u007f)\t\u0001)A\u0005tQ\u0006\u0004X\r\\3tg&\u0011!i\u0010\u0002\u0007\'R\u0014\u0018n\u0019;\u0011\u0007%\"\u0005(\u0003\u0002F\u0013\t\t\u0002K]8ek\u000e$XI\\2pI\u0016T5o\u001c8\t\u000b\u001d3\u00019\u0001%\u0002\u0011\r|G-Z2G_J\u00042!K%9\u0013\tQ\u0015BA\nKg>t\u0007K]8ek\u000e$8i\u001c3fG\u001a{\'/A\u0002tk6,\"!\u0014)\u0015\u00079\u0013v\u000bE\u0002*\u0001=\u0003\"!\b)\u0005\u000bE;!\u0019\u0001\u0011\u0003\u0003MCQ\u0001P\u0004A\u0004M\u00032AP!U!\rISkT\u0005\u0003-&\u0011QbU;n\u000b:\u001cw\u000eZ3Kg>t\u0007\"B$\b\u0001\bA\u0006cA\u0015Z\u001f&\u0011!,\u0003\u0002\u0010\u0015N|gnU;n\u0007>$Wm\u0019$pe\u0002
  #10 = Utf8               sum
  #11 = Utf8               (Lshapeless/Strict;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkEncodeJson;
  #12 = Utf8               <S:Ljava/lang/Object;>(Lshapeless/Strict<Largonaut/derive/SumEncodeJson<TS;>;>;Largonaut/derive/JsonSumCodecFor<TS;>;)Largonaut/derive/MkEncodeJson<TS;>;
  #13 = Utf8               underlying
  #14 = Utf8               codecFor
  #15 = Utf8               argonaut/derive/MkEncodeJson$
  #16 = Class              #15            // argonaut/derive/MkEncodeJson$
  #17 = Utf8               MODULE$
  #18 = Utf8               Largonaut/derive/MkEncodeJson$;
  #19 = NameAndType        #17:#18        // MODULE$:Largonaut/derive/MkEncodeJson$;
  #20 = Fieldref           #16.#19        // argonaut/derive/MkEncodeJson$.MODULE$:Largonaut/derive/MkEncodeJson$;
  #21 = NameAndType        #10:#11        // sum:(Lshapeless/Strict;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkEncodeJson;
  #22 = Methodref          #16.#21        // argonaut/derive/MkEncodeJson$.sum:(Lshapeless/Strict;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkEncodeJson;
  #23 = Utf8               product
  #24 = Utf8               (Lshapeless/Strict;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkEncodeJson;
  #25 = Utf8               <P:Ljava/lang/Object;>(Lshapeless/Strict<Largonaut/derive/ProductEncodeJson<TP;>;>;Largonaut/derive/JsonProductCodecFor<TP;>;)Largonaut/derive/MkEncodeJson<TP;>;
  #26 = NameAndType        #23:#24        // product:(Lshapeless/Strict;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkEncodeJson;
  #27 = Methodref          #16.#26        // argonaut/derive/MkEncodeJson$.product:(Lshapeless/Strict;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkEncodeJson;
  #28 = Utf8               apply
  #29 = Utf8               (Largonaut/derive/MkEncodeJson;)Largonaut/derive/MkEncodeJson;
  #30 = Utf8               <T:Ljava/lang/Object;>(Largonaut/derive/MkEncodeJson<TT;>;)Largonaut/derive/MkEncodeJson<TT;>;
  #31 = Utf8               encodeJson
  #32 = NameAndType        #28:#29        // apply:(Largonaut/derive/MkEncodeJson;)Largonaut/derive/MkEncodeJson;
  #33 = Methodref          #16.#32        // argonaut/derive/MkEncodeJson$.apply:(Largonaut/derive/MkEncodeJson;)Largonaut/derive/MkEncodeJson;
  #34 = Utf8               ()Largonaut/EncodeJson;
  #35 = Utf8               ()Largonaut/EncodeJson<TT;>;
  #36 = Utf8               Code
  #37 = Utf8               Signature
  #38 = Utf8               MethodParameters
  #39 = Utf8               SourceFile
  #40 = Utf8               RuntimeVisibleAnnotations
  #41 = Utf8               ScalaInlineInfo
  #42 = Utf8               ScalaSig
{
  public static <S extends java.lang.Object> argonaut.derive.MkEncodeJson<S> sum(shapeless.Strict<argonaut.derive.SumEncodeJson<S>>, argonaut.derive.JsonSumCodecFor<S>);
    descriptor: (Lshapeless/Strict;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkEncodeJson;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #20                 // Field argonaut/derive/MkEncodeJson$.MODULE$:Largonaut/derive/MkEncodeJson$;
         3: aload_0
         4: aload_1
         5: invokevirtual #22                 // Method argonaut/derive/MkEncodeJson$.sum:(Lshapeless/Strict;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkEncodeJson;
         8: areturn
    Signature: #12                          // <S:Ljava/lang/Object;>(Lshapeless/Strict<Largonaut/derive/SumEncodeJson<TS;>;>;Largonaut/derive/JsonSumCodecFor<TS;>;)Largonaut/derive/MkEncodeJson<TS;>;
    MethodParameters:
      Name                           Flags
      underlying                     final
      codecFor                       final

  public static <P extends java.lang.Object> argonaut.derive.MkEncodeJson<P> product(shapeless.Strict<argonaut.derive.ProductEncodeJson<P>>, argonaut.derive.JsonProductCodecFor<P>);
    descriptor: (Lshapeless/Strict;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkEncodeJson;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #20                 // Field argonaut/derive/MkEncodeJson$.MODULE$:Largonaut/derive/MkEncodeJson$;
         3: aload_0
         4: aload_1
         5: invokevirtual #27                 // Method argonaut/derive/MkEncodeJson$.product:(Lshapeless/Strict;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkEncodeJson;
         8: areturn
    Signature: #25                          // <P:Ljava/lang/Object;>(Lshapeless/Strict<Largonaut/derive/ProductEncodeJson<TP;>;>;Largonaut/derive/JsonProductCodecFor<TP;>;)Largonaut/derive/MkEncodeJson<TP;>;
    MethodParameters:
      Name                           Flags
      underlying                     final
      codecFor                       final

  public static <T extends java.lang.Object> argonaut.derive.MkEncodeJson<T> apply(argonaut.derive.MkEncodeJson<T>);
    descriptor: (Largonaut/derive/MkEncodeJson;)Largonaut/derive/MkEncodeJson;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #20                 // Field argonaut/derive/MkEncodeJson$.MODULE$:Largonaut/derive/MkEncodeJson$;
         3: aload_0
         4: invokevirtual #33                 // Method argonaut/derive/MkEncodeJson$.apply:(Largonaut/derive/MkEncodeJson;)Largonaut/derive/MkEncodeJson;
         7: areturn
    Signature: #30                          // <T:Ljava/lang/Object;>(Largonaut/derive/MkEncodeJson<TT;>;)Largonaut/derive/MkEncodeJson<TT;>;
    MethodParameters:
      Name                           Flags
      encodeJson                     final

  public abstract argonaut.EncodeJson<T> encodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #35                          // ()Largonaut/EncodeJson<TT;>;
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "MkEncodeJson.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005m3q\u0001C\u0005\u0011\u0002G\u0005a\u0002C\u0003\u0017\u0001\u0019\u0005qcB\u0003(\u0013!\u0005\u0001FB\u0003\t\u0013!\u0005!\u0006C\u0003,\u0007\u0011\u0005A\u0006C\u0003.\u0007\u0011\u0005a\u0006C\u00035\u0007\u0011\rQ\u0007C\u0003L\u0007\u0011\rAJ\u0001\u0007NW\u0016s7m\u001c3f\u0015N|gN\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u0001QCA\b\u001f\'\t\u0001\u0001\u0003\u0005\u0002\u0012)5\t!CC\u0001\u0014\u0003\u0015\u00198-\u00197b\u0013\t)\"C\u0001\u0004B]f\u0014VMZ\u0001\u000bK:\u001cw\u000eZ3Kg>tW#\u0001\r\u0011\u0007eQB$D\u0001\f\u0013\tY2B\u0001\u0006F]\u000e|G-\u001a&t_:\u0004\"!\b\u0010\r\u0001\u0011)q\u0004\u0001b\u0001A\t\tA+\u0005\u0002\"IA\u0011\u0011CI\u0005\u0003GI\u0011qAT8uQ&tw\r\u0005\u0002\u0012K%\u0011aE\u0005\u0002\u0004\u0003:L\u0018\u0001D\'l\u000b:\u001cw\u000eZ3Kg>t\u0007CA\u0015\u0004\u001b\u0005I1CA\u0002\u0011\u0003\u0019a\u0014N\\5u}Q\t\u0001&A\u0003baBd\u00170\u0006\u00020eQ\u0011\u0001g\r\t\u0004S\u0001\t\u0004CA\u000f3\t\u0015yRA1\u0001!\u0011\u00151R\u0001q\u00011\u0003\u001d\u0001(o\u001c3vGR,\"AN\u001d\u0015\u0007]Zd\tE\u0002*\u0001a\u0002\"!H\u001d\u0005\u000bi2!\u0019\u0001\u0011\u0003\u0003ACQ\u0001\u0010\u0004A\u0004u\n!\"\u001e8eKJd\u00170\u001b8h!\rq\u0014iQ\u0007\u0002\u007f)\t\u0001)A\u0005tQ\u0006\u0004X\r\\3tg&\u0011!i\u0010\u0002\u0007\'R\u0014\u0018n\u0019;\u0011\u0007%\"\u0005(\u0003\u0002F\u0013\t\t\u0002K]8ek\u000e$XI\\2pI\u0016T5o\u001c8\t\u000b\u001d3\u00019\u0001%\u0002\u0011\r|G-Z2G_J\u00042!K%9\u0013\tQ\u0015BA\nKg>t\u0007K]8ek\u000e$8i\u001c3fG\u001a{\'/A\u0002tk6,\"!\u0014)\u0015\u00079\u0013v\u000bE\u0002*\u0001=\u0003\"!\b)\u0005\u000bE;!\u0019\u0001\u0011\u0003\u0003MCQ\u0001P\u0004A\u0004M\u00032AP!U!\rISkT\u0005\u0003-&\u0011QbU;n\u000b:\u001cw\u000eZ3Kg>t\u0007\"B$\b\u0001\bA\u0006cA\u0015Z\u001f&\u0011!,\u0003\u0002\u0010\u0015N|gnU;n\u0007>$Wm\u0019$pe\u0002"
    )
  ScalaInlineInfo: length = 0x9 (unknown attribute)
   01 00 00 01 00 1F 00 22 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
