Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/util/control/Exception$.class
  Last modified May 29, 2022; size 15056 bytes
  SHA-256 checksum 4f89f237a6849fe3222db6493d0333728979368e2c09d86429af0314e28a570f
  Compiled from "Exception.scala"
public final class scala.util.control.Exception$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/util/control/Exception$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 50, attributes: 5
Constant pool:
    #1 = Utf8               scala/util/control/Exception$
    #2 = Class              #1            // scala/util/control/Exception$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Exception.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/util/control/Exception$$anon$1
   #12 = Class              #11           // scala/util/control/Exception$$anon$1
   #13 = Utf8               scala/util/control/Exception$$anonfun$pfFromExceptions$1
   #14 = Class              #13           // scala/util/control/Exception$$anonfun$pfFromExceptions$1
   #15 = Utf8               scala/util/control/Exception$By
   #16 = Class              #15           // scala/util/control/Exception$By
   #17 = Utf8               scala/util/control/Exception
   #18 = Class              #17           // scala/util/control/Exception
   #19 = Utf8               By
   #20 = Utf8               scala/util/control/Exception$Catch
   #21 = Class              #20           // scala/util/control/Exception$Catch
   #22 = Utf8               Catch
   #23 = Utf8               scala/util/control/Exception$Catch$
   #24 = Class              #23           // scala/util/control/Exception$Catch$
   #25 = Utf8               Catch$
   #26 = Utf8               scala/util/control/Exception$Described
   #27 = Class              #26           // scala/util/control/Exception$Described
   #28 = Utf8               Described
   #29 = Utf8               MODULE$
   #30 = Utf8               Lscala/util/control/Exception$;
   #31 = Utf8               nothingCatcher
   #32 = Utf8               Lscala/PartialFunction;
   #33 = Utf8               Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;
   #34 = Utf8               noCatch
   #35 = Utf8               Lscala/util/control/Exception$Catch;
   #36 = Utf8               Lscala/util/control/Exception$Catch<Lscala/runtime/Nothing$;>;
   #37 = Utf8               <clinit>
   #38 = Utf8               ()V
   #39 = Utf8               <init>
   #40 = NameAndType        #39:#38       // "<init>":()V
   #41 = Methodref          #2.#40        // scala/util/control/Exception$."<init>":()V
   #42 = NameAndType        #29:#30       // MODULE$:Lscala/util/control/Exception$;
   #43 = Fieldref           #2.#42        // scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   #44 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #45 = MethodType         #44           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #46 = Utf8               $anonfun$nothingCatcher$1$adapted
   #47 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;
   #48 = NameAndType        #46:#47       // $anonfun$nothingCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
   #49 = Methodref          #2.#48        // scala/util/control/Exception$.$anonfun$nothingCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
   #50 = MethodHandle       6:#49         // REF_invokeStatic scala/util/control/Exception$.$anonfun$nothingCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
   #51 = MethodType         #47           //  (Ljava/lang/Throwable;)Ljava/lang/Object;
   #52 = Integer            5
   #53 = Integer            1
   #54 = Utf8               java/lang/invoke/LambdaMetafactory
   #55 = Class              #54           // java/lang/invoke/LambdaMetafactory
   #56 = Utf8               altMetafactory
   #57 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #58 = NameAndType        #56:#57       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #59 = Methodref          #55.#58       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #60 = MethodHandle       6:#59         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #61 = Utf8               apply
   #62 = Utf8               ()Lscala/Function1;
   #63 = NameAndType        #61:#62       // apply:()Lscala/Function1;
   #64 = InvokeDynamic      #0:#63        // #0:apply:()Lscala/Function1;
   #65 = Utf8               $anonfun$nothingCatcher$2
   #66 = Utf8               (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
   #67 = NameAndType        #65:#66       // $anonfun$nothingCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
   #68 = Methodref          #2.#67        // scala/util/control/Exception$.$anonfun$nothingCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
   #69 = MethodHandle       6:#68         // REF_invokeStatic scala/util/control/Exception$.$anonfun$nothingCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
   #70 = MethodType         #66           //  (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
   #71 = InvokeDynamic      #1:#63        // #1:apply:()Lscala/Function1;
   #72 = Utf8               scala/reflect/ClassTag$
   #73 = Class              #72           // scala/reflect/ClassTag$
   #74 = Utf8               Lscala/reflect/ClassTag$;
   #75 = NameAndType        #29:#74       // MODULE$:Lscala/reflect/ClassTag$;
   #76 = Fieldref           #73.#75       // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
   #77 = Utf8               java/lang/Throwable
   #78 = Class              #77           // java/lang/Throwable
   #79 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #80 = NameAndType        #61:#79       // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #81 = Methodref          #73.#80       // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #82 = Utf8               (Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
   #83 = NameAndType        #39:#82       // "<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
   #84 = Methodref          #12.#83       // scala/util/control/Exception$$anon$1."<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
   #85 = NameAndType        #31:#32       // nothingCatcher:Lscala/PartialFunction;
   #86 = Fieldref           #2.#85        // scala/util/control/Exception$.nothingCatcher:Lscala/PartialFunction;
   #87 = Utf8               ()Lscala/PartialFunction;
   #88 = NameAndType        #31:#87       // nothingCatcher:()Lscala/PartialFunction;
   #89 = Methodref          #2.#88        // scala/util/control/Exception$.nothingCatcher:()Lscala/PartialFunction;
   #90 = Utf8               Lscala/util/control/Exception$Catch$;
   #91 = NameAndType        #29:#90       // MODULE$:Lscala/util/control/Exception$Catch$;
   #92 = Fieldref           #24.#91       // scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
   #93 = Utf8               scala/None$
   #94 = Class              #93           // scala/None$
   #95 = Utf8               Lscala/None$;
   #96 = NameAndType        #29:#95       // MODULE$:Lscala/None$;
   #97 = Fieldref           #94.#96       // scala/None$.MODULE$:Lscala/None$;
   #98 = Utf8               $lessinit$greater$default$3
   #99 = NameAndType        #98:#62       // $lessinit$greater$default$3:()Lscala/Function1;
  #100 = Methodref          #24.#99       // scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
  #101 = Utf8               (Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
  #102 = NameAndType        #39:#101      // "<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
  #103 = Methodref          #21.#102      // scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
  #104 = Utf8               <nothing>
  #105 = String             #104          // <nothing>
  #106 = Utf8               withDesc
  #107 = Utf8               (Ljava/lang/String;)Lscala/util/control/Exception$Described;
  #108 = NameAndType        #106:#107     // withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
  #109 = Methodref          #21.#108      // scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
  #110 = NameAndType        #34:#35       // noCatch:Lscala/util/control/Exception$Catch;
  #111 = Fieldref           #2.#110       // scala/util/control/Exception$.noCatch:Lscala/util/control/Exception$Catch;
  #112 = Utf8               mkThrowableCatcher_isDef
  #113 = Utf8               Lscala/Function1;
  #114 = Utf8               mkThrowableCatcher_f
  #115 = Utf8               mkThrowableCatcher_mkCatcher_evidence$1
  #116 = Utf8               Lscala/reflect/ClassTag;
  #117 = Utf8               mkCatcher
  #118 = Utf8               (Lscala/Function1;Lscala/Function1;Lscala/reflect/ClassTag;)Lscala/PartialFunction;
  #119 = Utf8               <Ex:Ljava/lang/Throwable;T:Ljava/lang/Object;>(Lscala/Function1<TEx;Ljava/lang/Object;>;Lscala/Function1<TEx;TT;>;Lscala/reflect/ClassTag<TEx;>;)Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
  #120 = Utf8               isDef
  #121 = Utf8               f
  #122 = Utf8               evidence$1
  #123 = Utf8               this
  #124 = Utf8               mkThrowableCatcher
  #125 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/PartialFunction;
  #126 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;Lscala/Function1<Ljava/lang/Throwable;TT;>;)Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
  #127 = Utf8               mkCatcher_evidence$1
  #128 = Utf8               throwableSubtypeToCatcher
  #129 = Utf8               (Lscala/PartialFunction;Lscala/reflect/ClassTag;)Lscala/PartialFunction;
  #130 = Utf8               <Ex:Ljava/lang/Throwable;T:Ljava/lang/Object;>(Lscala/PartialFunction<TEx;TT;>;Lscala/reflect/ClassTag<TEx;>;)Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
  #131 = Utf8               pf
  #132 = Utf8               evidence$2
  #133 = Utf8               $anonfun$throwableSubtypeToCatcher$1$adapted
  #134 = Utf8               (Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
  #135 = NameAndType        #133:#134     // $anonfun$throwableSubtypeToCatcher$1$adapted:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
  #136 = Methodref          #2.#135       // scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$1$adapted:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
  #137 = MethodHandle       6:#136        // REF_invokeStatic scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$1$adapted:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
  #138 = Utf8               (Lscala/PartialFunction;)Lscala/Function1;
  #139 = NameAndType        #61:#138      // apply:(Lscala/PartialFunction;)Lscala/Function1;
  #140 = InvokeDynamic      #2:#139       // #2:apply:(Lscala/PartialFunction;)Lscala/Function1;
  #141 = Utf8               $anonfun$throwableSubtypeToCatcher$2
  #142 = NameAndType        #141:#134     // $anonfun$throwableSubtypeToCatcher$2:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
  #143 = Methodref          #2.#142       // scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$2:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
  #144 = MethodHandle       6:#143        // REF_invokeStatic scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$2:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
  #145 = InvokeDynamic      #3:#139       // #3:apply:(Lscala/PartialFunction;)Lscala/Function1;
  #146 = Utf8               mkCatcher_isDef
  #147 = Utf8               mkCatcher_f
  #148 = Utf8               shouldRethrow
  #149 = Utf8               (Ljava/lang/Throwable;)Z
  #150 = Utf8               x
  #151 = Utf8               scala/util/control/ControlThrowable
  #152 = Class              #151          // scala/util/control/ControlThrowable
  #153 = Utf8               java/lang/InterruptedException
  #154 = Class              #153          // java/lang/InterruptedException
  #155 = Utf8               Ljava/lang/Throwable;
  #156 = Utf8               ()Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;
  #157 = Utf8               nonFatalCatcher
  #158 = Utf8               <T:Ljava/lang/Object;>()Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
  #159 = Utf8               $anonfun$nonFatalCatcher$1$adapted
  #160 = NameAndType        #159:#47      // $anonfun$nonFatalCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #161 = Methodref          #2.#160       // scala/util/control/Exception$.$anonfun$nonFatalCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #162 = MethodHandle       6:#161        // REF_invokeStatic scala/util/control/Exception$.$anonfun$nonFatalCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #163 = InvokeDynamic      #4:#63        // #4:apply:()Lscala/Function1;
  #164 = Utf8               $anonfun$nonFatalCatcher$2
  #165 = NameAndType        #164:#66      // $anonfun$nonFatalCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #166 = Methodref          #2.#165       // scala/util/control/Exception$.$anonfun$nonFatalCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #167 = MethodHandle       6:#166        // REF_invokeStatic scala/util/control/Exception$.$anonfun$nonFatalCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #168 = InvokeDynamic      #5:#63        // #5:apply:()Lscala/Function1;
  #169 = Utf8               allCatcher
  #170 = Utf8               $anonfun$allCatcher$1$adapted
  #171 = NameAndType        #170:#47      // $anonfun$allCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #172 = Methodref          #2.#171       // scala/util/control/Exception$.$anonfun$allCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #173 = MethodHandle       6:#172        // REF_invokeStatic scala/util/control/Exception$.$anonfun$allCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #174 = InvokeDynamic      #6:#63        // #6:apply:()Lscala/Function1;
  #175 = Utf8               $anonfun$allCatcher$2
  #176 = NameAndType        #175:#66      // $anonfun$allCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #177 = Methodref          #2.#176       // scala/util/control/Exception$.$anonfun$allCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #178 = MethodHandle       6:#177        // REF_invokeStatic scala/util/control/Exception$.$anonfun$allCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #179 = InvokeDynamic      #7:#63        // #7:apply:()Lscala/Function1;
  #180 = Utf8               ()Lscala/util/control/Exception$Catch;
  #181 = Utf8               ()Lscala/util/control/Exception$Catch<Lscala/runtime/Nothing$;>;
  #182 = Utf8               allCatch
  #183 = Utf8               <T:Ljava/lang/Object;>()Lscala/util/control/Exception$Catch<TT;>;
  #184 = NameAndType        #169:#87      // allCatcher:()Lscala/PartialFunction;
  #185 = Methodref          #2.#184       // scala/util/control/Exception$.allCatcher:()Lscala/PartialFunction;
  #186 = Utf8               <everything>
  #187 = String             #186          // <everything>
  #188 = Utf8               nonFatalCatch
  #189 = NameAndType        #157:#87      // nonFatalCatcher:()Lscala/PartialFunction;
  #190 = Methodref          #2.#189       // scala/util/control/Exception$.nonFatalCatcher:()Lscala/PartialFunction;
  #191 = Utf8               <non-fatal>
  #192 = String             #191          // <non-fatal>
  #193 = Utf8               catching
  #194 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
  #195 = Utf8               <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<TT;>;
  #196 = Utf8               exceptions
  #197 = Utf8               (Lscala/collection/immutable/Seq;)V
  #198 = NameAndType        #39:#197      // "<init>":(Lscala/collection/immutable/Seq;)V
  #199 = Methodref          #14.#198      // scala/util/control/Exception$$anonfun$pfFromExceptions$1."<init>":(Lscala/collection/immutable/Seq;)V
  #200 = Utf8               $anonfun$catching$1
  #201 = Utf8               (Ljava/lang/Class;)Ljava/lang/String;
  #202 = NameAndType        #200:#201     // $anonfun$catching$1:(Ljava/lang/Class;)Ljava/lang/String;
  #203 = Methodref          #2.#202       // scala/util/control/Exception$.$anonfun$catching$1:(Ljava/lang/Class;)Ljava/lang/String;
  #204 = MethodHandle       6:#203        // REF_invokeStatic scala/util/control/Exception$.$anonfun$catching$1:(Ljava/lang/Class;)Ljava/lang/String;
  #205 = MethodType         #201          //  (Ljava/lang/Class;)Ljava/lang/String;
  #206 = InvokeDynamic      #8:#63        // #8:apply:()Lscala/Function1;
  #207 = Utf8               scala/collection/immutable/Seq
  #208 = Class              #207          // scala/collection/immutable/Seq
  #209 = Utf8               map
  #210 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #211 = NameAndType        #209:#210     // map:(Lscala/Function1;)Ljava/lang/Object;
  #212 = InterfaceMethodref #208.#211     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #213 = Utf8               scala/collection/IterableOnceOps
  #214 = Class              #213          // scala/collection/IterableOnceOps
  #215 = Utf8               ,
  #216 = String             #215          // ,
  #217 = Utf8
  #218 = String             #217          //
  #219 = Utf8               mkString
  #220 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #221 = NameAndType        #219:#220     // mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #222 = InterfaceMethodref #214.#221     // scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #223 = Utf8               Lscala/collection/immutable/Seq;
  #224 = Utf8               mkString_sep
  #225 = Utf8               Ljava/lang/String;
  #226 = Utf8               java/lang/String
  #227 = Class              #226          // java/lang/String
  #228 = Utf8               (Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
  #229 = Utf8               <T:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;)Lscala/util/control/Exception$Catch<TT;>;
  #230 = Utf8               c
  #231 = Utf8               catchingPromiscuously
  #232 = NameAndType        #231:#228     // catchingPromiscuously:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
  #233 = Methodref          #2.#232       // scala/util/control/Exception$.catchingPromiscuously:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
  #234 = Utf8               $anonfun$catchingPromiscuously$1$adapted
  #235 = NameAndType        #234:#47      // $anonfun$catchingPromiscuously$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #236 = Methodref          #2.#235       // scala/util/control/Exception$.$anonfun$catchingPromiscuously$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #237 = MethodHandle       6:#236        // REF_invokeStatic scala/util/control/Exception$.$anonfun$catchingPromiscuously$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #238 = InvokeDynamic      #9:#63        // #9:apply:()Lscala/Function1;
  #239 = Utf8               ignoring
  #240 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<Lscala/runtime/BoxedUnit;>;
  #241 = NameAndType        #193:#194     // catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
  #242 = Methodref          #2.#241       // scala/util/control/Exception$.catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
  #243 = Utf8               $anonfun$ignoring$1$adapted
  #244 = NameAndType        #243:#47      // $anonfun$ignoring$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #245 = Methodref          #2.#244       // scala/util/control/Exception$.$anonfun$ignoring$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #246 = MethodHandle       6:#245        // REF_invokeStatic scala/util/control/Exception$.$anonfun$ignoring$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  #247 = InvokeDynamic      #10:#63       // #10:apply:()Lscala/Function1;
  #248 = Utf8               withApply
  #249 = Utf8               (Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #250 = NameAndType        #248:#249     // withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #251 = Methodref          #21.#250      // scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #252 = Utf8               failing
  #253 = Utf8               <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<Lscala/Option<TT;>;>;
  #254 = Utf8               $anonfun$failing$1
  #255 = Utf8               (Ljava/lang/Throwable;)Lscala/None$;
  #256 = NameAndType        #254:#255     // $anonfun$failing$1:(Ljava/lang/Throwable;)Lscala/None$;
  #257 = Methodref          #2.#256       // scala/util/control/Exception$.$anonfun$failing$1:(Ljava/lang/Throwable;)Lscala/None$;
  #258 = MethodHandle       6:#257        // REF_invokeStatic scala/util/control/Exception$.$anonfun$failing$1:(Ljava/lang/Throwable;)Lscala/None$;
  #259 = MethodType         #255          //  (Ljava/lang/Throwable;)Lscala/None$;
  #260 = InvokeDynamic      #11:#63       // #11:apply:()Lscala/Function1;
  #261 = Utf8               failAsValue
  #262 = Utf8               (Lscala/collection/immutable/Seq;Lscala/Function0;)Lscala/util/control/Exception$Catch;
  #263 = Utf8               <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;Lscala/Function0<TT;>;)Lscala/util/control/Exception$Catch<TT;>;
  #264 = Utf8               value
  #265 = Utf8               $anonfun$failAsValue$1
  #266 = Utf8               (Lscala/Function0;Ljava/lang/Throwable;)Ljava/lang/Object;
  #267 = NameAndType        #265:#266     // $anonfun$failAsValue$1:(Lscala/Function0;Ljava/lang/Throwable;)Ljava/lang/Object;
  #268 = Methodref          #2.#267       // scala/util/control/Exception$.$anonfun$failAsValue$1:(Lscala/Function0;Ljava/lang/Throwable;)Ljava/lang/Object;
  #269 = MethodHandle       6:#268        // REF_invokeStatic scala/util/control/Exception$.$anonfun$failAsValue$1:(Lscala/Function0;Ljava/lang/Throwable;)Ljava/lang/Object;
  #270 = Utf8               (Lscala/Function0;)Lscala/Function1;
  #271 = NameAndType        #61:#270      // apply:(Lscala/Function0;)Lscala/Function1;
  #272 = InvokeDynamic      #12:#271      // #12:apply:(Lscala/Function0;)Lscala/Function1;
  #273 = Utf8               Lscala/Function0;
  #274 = Utf8               handling
  #275 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$By;
  #276 = Utf8               <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$By<Lscala/Function1<Ljava/lang/Throwable;TT;>;Lscala/util/control/Exception$Catch<TT;>;>;
  #277 = Utf8               $anonfun$handling$1
  #278 = Utf8               (Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #279 = NameAndType        #277:#278     // $anonfun$handling$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #280 = Methodref          #2.#279       // scala/util/control/Exception$.$anonfun$handling$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #281 = MethodHandle       6:#280        // REF_invokeStatic scala/util/control/Exception$.$anonfun$handling$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #282 = MethodType         #249          //  (Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #283 = Utf8               (Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #284 = NameAndType        #61:#283      // apply:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #285 = InvokeDynamic      #13:#284      // #13:apply:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #286 = Utf8               (Lscala/Function1;)V
  #287 = NameAndType        #39:#286      // "<init>":(Lscala/Function1;)V
  #288 = Methodref          #16.#287      // scala/util/control/Exception$By."<init>":(Lscala/Function1;)V
  #289 = Utf8               ultimately
  #290 = Utf8               (Lscala/Function0;)Lscala/util/control/Exception$Catch;
  #291 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lscala/util/control/Exception$Catch<TT;>;
  #292 = Utf8               body
  #293 = NameAndType        #34:#180      // noCatch:()Lscala/util/control/Exception$Catch;
  #294 = Methodref          #2.#293       // scala/util/control/Exception$.noCatch:()Lscala/util/control/Exception$Catch;
  #295 = Utf8               andFinally
  #296 = NameAndType        #295:#290     // andFinally:(Lscala/Function0;)Lscala/util/control/Exception$Catch;
  #297 = Methodref          #21.#296      // scala/util/control/Exception$Catch.andFinally:(Lscala/Function0;)Lscala/util/control/Exception$Catch;
  #298 = Utf8               unwrapping
  #299 = Utf8               $anonfun$unwrapping$1
  #300 = Utf8               (Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #301 = NameAndType        #299:#300     // $anonfun$unwrapping$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #302 = Methodref          #2.#301       // scala/util/control/Exception$.$anonfun$unwrapping$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #303 = MethodHandle       6:#302        // REF_invokeStatic scala/util/control/Exception$.$anonfun$unwrapping$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #304 = InvokeDynamic      #14:#284      // #14:apply:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #305 = Utf8               scala$util$control$Exception$$wouldMatch
  #306 = Utf8               (Ljava/lang/Throwable;Lscala/collection/Seq;)Z
  #307 = Utf8               (Ljava/lang/Throwable;Lscala/collection/Seq<Ljava/lang/Class<*>;>;)Z
  #308 = Utf8               classes
  #309 = Utf8               $anonfun$wouldMatch$1$adapted
  #310 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Object;
  #311 = NameAndType        #309:#310     // $anonfun$wouldMatch$1$adapted:(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Object;
  #312 = Methodref          #2.#311       // scala/util/control/Exception$.$anonfun$wouldMatch$1$adapted:(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Object;
  #313 = MethodHandle       6:#312        // REF_invokeStatic scala/util/control/Exception$.$anonfun$wouldMatch$1$adapted:(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Object;
  #314 = Utf8               (Ljava/lang/Class;)Ljava/lang/Object;
  #315 = MethodType         #314          //  (Ljava/lang/Class;)Ljava/lang/Object;
  #316 = Utf8               (Ljava/lang/Throwable;)Lscala/Function1;
  #317 = NameAndType        #61:#316      // apply:(Ljava/lang/Throwable;)Lscala/Function1;
  #318 = InvokeDynamic      #15:#317      // #15:apply:(Ljava/lang/Throwable;)Lscala/Function1;
  #319 = Utf8               scala/collection/Seq
  #320 = Class              #319          // scala/collection/Seq
  #321 = Utf8               exists
  #322 = Utf8               (Lscala/Function1;)Z
  #323 = NameAndType        #321:#322     // exists:(Lscala/Function1;)Z
  #324 = InterfaceMethodref #320.#323     // scala/collection/Seq.exists:(Lscala/Function1;)Z
  #325 = Utf8               Lscala/collection/Seq;
  #326 = Utf8               pfFromExceptions
  #327 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/PartialFunction;
  #328 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;
  #329 = Utf8               $anonfun$throwableSubtypeToCatcher$1
  #330 = Utf8               (Lscala/PartialFunction;Ljava/lang/Throwable;)Z
  #331 = Utf8               pf$1
  #332 = Utf8               scala/PartialFunction
  #333 = Class              #332          // scala/PartialFunction
  #334 = Utf8               isDefinedAt
  #335 = Utf8               (Ljava/lang/Object;)Z
  #336 = NameAndType        #334:#335     // isDefinedAt:(Ljava/lang/Object;)Z
  #337 = InterfaceMethodref #333.#336     // scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
  #338 = Utf8               v1
  #339 = NameAndType        #61:#44       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #340 = InterfaceMethodref #333.#339     // scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #341 = Utf8               $anonfun$nothingCatcher$1
  #342 = Utf8               x$5
  #343 = Utf8               x$6
  #344 = Utf8               $anonfun$nonFatalCatcher$1
  #345 = Utf8               x0$1
  #346 = Utf8               scala/util/control/NonFatal$
  #347 = Class              #346          // scala/util/control/NonFatal$
  #348 = Utf8               Lscala/util/control/NonFatal$;
  #349 = NameAndType        #29:#348      // MODULE$:Lscala/util/control/NonFatal$;
  #350 = Fieldref           #347.#349     // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
  #351 = Utf8               unapply
  #352 = Utf8               (Ljava/lang/Throwable;)Lscala/Option;
  #353 = NameAndType        #351:#352     // unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #354 = Methodref          #347.#353     // scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #355 = Utf8               scala/Option
  #356 = Class              #355          // scala/Option
  #357 = Utf8               isEmpty
  #358 = Utf8               ()Z
  #359 = NameAndType        #357:#358     // isEmpty:()Z
  #360 = Methodref          #356.#359     // scala/Option.isEmpty:()Z
  #361 = Utf8               x$7
  #362 = Utf8               $anonfun$allCatcher$1
  #363 = Utf8               x$8
  #364 = Utf8               x$9
  #365 = Utf8               x$10
  #366 = Utf8               java/lang/Class
  #367 = Class              #366          // java/lang/Class
  #368 = Utf8               getName
  #369 = Utf8               ()Ljava/lang/String;
  #370 = NameAndType        #368:#369     // getName:()Ljava/lang/String;
  #371 = Methodref          #367.#370     // java/lang/Class.getName:()Ljava/lang/String;
  #372 = Utf8               Ljava/lang/Class;
  #373 = Utf8               $anonfun$catchingPromiscuously$1
  #374 = Utf8               x$11
  #375 = Utf8               $anonfun$ignoring$1
  #376 = Utf8               (Ljava/lang/Throwable;)V
  #377 = Utf8               x$12
  #378 = Utf8               x$13
  #379 = Utf8               value$1
  #380 = Utf8               x$14
  #381 = Utf8               scala/Function0
  #382 = Class              #381          // scala/Function0
  #383 = Utf8               ()Ljava/lang/Object;
  #384 = NameAndType        #61:#383      // apply:()Ljava/lang/Object;
  #385 = InterfaceMethodref #382.#384     // scala/Function0.apply:()Ljava/lang/Object;
  #386 = Utf8               fun$1
  #387 = Utf8               (Lscala/Function1;Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
  #388 = Utf8               exceptions$1
  #389 = Utf8               $this
  #390 = NameAndType        #386:#387     // fun$1:(Lscala/Function1;Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
  #391 = Methodref          #2.#390       // scala/util/control/Exception$.fun$1:(Lscala/Function1;Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
  #392 = Utf8               unwrap$1
  #393 = Utf8               (Ljava/lang/Throwable;Lscala/collection/immutable/Seq;)Ljava/lang/Throwable;
  #394 = Utf8               exceptions$2
  #395 = NameAndType        #305:#306     // scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Seq;)Z
  #396 = Methodref          #2.#395       // scala/util/control/Exception$.scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Seq;)Z
  #397 = Utf8               getCause
  #398 = Utf8               ()Ljava/lang/Throwable;
  #399 = NameAndType        #397:#398     // getCause:()Ljava/lang/Throwable;
  #400 = Methodref          #78.#399      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;
  #401 = NameAndType        #392:#393     // unwrap$1:(Ljava/lang/Throwable;Lscala/collection/immutable/Seq;)Ljava/lang/Throwable;
  #402 = Methodref          #2.#401       // scala/util/control/Exception$.unwrap$1:(Ljava/lang/Throwable;Lscala/collection/immutable/Seq;)Ljava/lang/Throwable;
  #403 = Utf8               $anonfun$wouldMatch$1
  #404 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z
  #405 = Utf8               x$16
  #406 = Utf8               x$15
  #407 = Utf8               getClass
  #408 = Utf8               ()Ljava/lang/Class;
  #409 = NameAndType        #407:#408     // getClass:()Ljava/lang/Class;
  #410 = Methodref          #78.#409      // java/lang/Throwable.getClass:()Ljava/lang/Class;
  #411 = Utf8               isAssignableFrom
  #412 = Utf8               (Ljava/lang/Class;)Z
  #413 = NameAndType        #411:#412     // isAssignableFrom:(Ljava/lang/Class;)Z
  #414 = Methodref          #367.#413     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
  #415 = Methodref          #4.#40        // java/lang/Object."<init>":()V
  #416 = NameAndType        #329:#330     // $anonfun$throwableSubtypeToCatcher$1:(Lscala/PartialFunction;Ljava/lang/Throwable;)Z
  #417 = Methodref          #2.#416       // scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$1:(Lscala/PartialFunction;Ljava/lang/Throwable;)Z
  #418 = Utf8               scala/runtime/BoxesRunTime
  #419 = Class              #418          // scala/runtime/BoxesRunTime
  #420 = Utf8               boxToBoolean
  #421 = Utf8               (Z)Ljava/lang/Boolean;
  #422 = NameAndType        #420:#421     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #423 = Methodref          #419.#422     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #424 = NameAndType        #344:#149     // $anonfun$nonFatalCatcher$1:(Ljava/lang/Throwable;)Z
  #425 = Methodref          #2.#424       // scala/util/control/Exception$.$anonfun$nonFatalCatcher$1:(Ljava/lang/Throwable;)Z
  #426 = NameAndType        #362:#149     // $anonfun$allCatcher$1:(Ljava/lang/Throwable;)Z
  #427 = Methodref          #2.#426       // scala/util/control/Exception$.$anonfun$allCatcher$1:(Ljava/lang/Throwable;)Z
  #428 = NameAndType        #373:#149     // $anonfun$catchingPromiscuously$1:(Ljava/lang/Throwable;)Z
  #429 = Methodref          #2.#428       // scala/util/control/Exception$.$anonfun$catchingPromiscuously$1:(Ljava/lang/Throwable;)Z
  #430 = NameAndType        #375:#376     // $anonfun$ignoring$1:(Ljava/lang/Throwable;)V
  #431 = Methodref          #2.#430       // scala/util/control/Exception$.$anonfun$ignoring$1:(Ljava/lang/Throwable;)V
  #432 = Utf8               scala/runtime/BoxedUnit
  #433 = Class              #432          // scala/runtime/BoxedUnit
  #434 = Utf8               UNIT
  #435 = Utf8               Lscala/runtime/BoxedUnit;
  #436 = NameAndType        #434:#435     // UNIT:Lscala/runtime/BoxedUnit;
  #437 = Fieldref           #433.#436     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #438 = NameAndType        #403:#404     // $anonfun$wouldMatch$1:(Ljava/lang/Throwable;Ljava/lang/Class;)Z
  #439 = Methodref          #2.#438       // scala/util/control/Exception$.$anonfun$wouldMatch$1:(Ljava/lang/Throwable;Ljava/lang/Class;)Z
  #440 = NameAndType        #341:#149     // $anonfun$nothingCatcher$1:(Ljava/lang/Throwable;)Z
  #441 = Methodref          #2.#440       // scala/util/control/Exception$.$anonfun$nothingCatcher$1:(Ljava/lang/Throwable;)Z
  #442 = Utf8               $deserializeLambda$
  #443 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #444 = Utf8               scala/runtime/LambdaDeserialize
  #445 = Class              #444          // scala/runtime/LambdaDeserialize
  #446 = Utf8               bootstrap
  #447 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #448 = NameAndType        #446:#447     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #449 = Methodref          #445.#448     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #450 = MethodHandle       6:#449        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #451 = Utf8               lambdaDeserialize
  #452 = NameAndType        #451:#443     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #453 = InvokeDynamic      #16:#452      // #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #454 = Utf8               Signature
  #455 = Utf8               Code
  #456 = Utf8               LineNumberTable
  #457 = Utf8               LocalVariableTable
  #458 = Utf8               MethodParameters
  #459 = Utf8               StackMapTable
  #460 = Utf8               InnerClasses
  #461 = Utf8               SourceFile
  #462 = Utf8               BootstrapMethods
  #463 = Utf8               ScalaInlineInfo
  #464 = Utf8               Scala
{
  public static final scala.util.control.Exception$ MODULE$;
    descriptor: Lscala/util/control/Exception$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.PartialFunction<java.lang.Throwable, scala.runtime.Nothing$> nothingCatcher;
    descriptor: Lscala/PartialFunction;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #33                          // Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;

  private static final scala.util.control.Exception$Catch<scala.runtime.Nothing$> noCatch;
    descriptor: Lscala/util/control/Exception$Catch;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #36                          // Lscala/util/control/Exception$Catch<Lscala/runtime/Nothing$;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=3, args_size=0
         0: new           #2                  // class scala/util/control/Exception$
         3: dup
         4: invokespecial #41                 // Method "<init>":()V
         7: putstatic     #43                 // Field MODULE$:Lscala/util/control/Exception$;
        10: getstatic     #43                 // Field MODULE$:Lscala/util/control/Exception$;
        13: pop
        14: invokedynamic #64,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        19: invokedynamic #71,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
        24: astore_1
        25: astore_0
        26: getstatic     #76                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        29: ldc           #78                 // class java/lang/Throwable
        31: invokevirtual #81                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        34: astore_2
        35: new           #12                 // class scala/util/control/Exception$$anon$1
        38: dup
        39: aload_2
        40: aload_0
        41: aload_1
        42: invokespecial #84                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
        45: aconst_null
        46: astore_2
        47: aconst_null
        48: astore_0
        49: aconst_null
        50: astore_1
        51: putstatic     #86                 // Field nothingCatcher:Lscala/PartialFunction;
        54: new           #21                 // class scala/util/control/Exception$Catch
        57: dup
        58: getstatic     #43                 // Field MODULE$:Lscala/util/control/Exception$;
        61: invokevirtual #89                 // Method nothingCatcher:()Lscala/PartialFunction;
        64: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        67: pop
        68: getstatic     #97                 // Field scala/None$.MODULE$:Lscala/None$;
        71: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        74: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
        77: invokespecial #103                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        80: ldc           #105                // String <nothing>
        82: invokevirtual #109                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
        85: checkcast     #21                 // class scala/util/control/Exception$Catch
        88: putstatic     #111                // Field noCatch:Lscala/util/control/Exception$Catch;
        91: return
      LineNumberTable:
        line 153: 0
        line 274: 10
        line 165: 26
        line 156: 35
        line 165: 45
        line 274: 47
        line 281: 54
        line 215: 68
        line 281: 71
        line 153: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      21     0 mkThrowableCatcher_isDef   Lscala/Function1;
           26      21     1 mkThrowableCatcher_f   Lscala/Function1;
           35      10     2 mkThrowableCatcher_mkCatcher_evidence$1   Lscala/reflect/ClassTag;

  public <Ex extends java.lang.Throwable, T extends java.lang.Object> scala.PartialFunction<java.lang.Throwable, T> mkCatcher(scala.Function1<Ex, java.lang.Object>, scala.Function1<Ex, T>, scala.reflect.ClassTag<Ex>);
    descriptor: (Lscala/Function1;Lscala/Function1;Lscala/reflect/ClassTag;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #12                 // class scala/util/control/Exception$$anon$1
         3: dup
         4: aload_3
         5: aload_1
         6: aload_2
         7: invokespecial #84                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
        10: areturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/util/control/Exception$;
            0      11     1 isDef   Lscala/Function1;
            0      11     2     f   Lscala/Function1;
            0      11     3 evidence$1   Lscala/reflect/ClassTag;
    Signature: #119                         // <Ex:Ljava/lang/Throwable;T:Ljava/lang/Object;>(Lscala/Function1<TEx;Ljava/lang/Object;>;Lscala/Function1<TEx;TT;>;Lscala/reflect/ClassTag<TEx;>;)Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
    MethodParameters:
      Name                           Flags
      isDef                          final
      f                              final
      evidence$1                     final

  public <T extends java.lang.Object> scala.PartialFunction<java.lang.Throwable, T> mkThrowableCatcher(scala.Function1<java.lang.Throwable, java.lang.Object>, scala.Function1<java.lang.Throwable, T>);
    descriptor: (Lscala/Function1;Lscala/Function1;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: getstatic     #76                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
         3: ldc           #78                 // class java/lang/Throwable
         5: invokevirtual #81                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
         8: astore_3
         9: new           #12                 // class scala/util/control/Exception$$anon$1
        12: dup
        13: aload_3
        14: aload_1
        15: aload_2
        16: invokespecial #84                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
        19: areturn
      LineNumberTable:
        line 165: 0
        line 156: 9
        line 165: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/util/control/Exception$;
            0      20     1 isDef   Lscala/Function1;
            0      20     2     f   Lscala/Function1;
            9      10     3 mkCatcher_evidence$1   Lscala/reflect/ClassTag;
    Signature: #126                         // <T:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;Lscala/Function1<Ljava/lang/Throwable;TT;>;)Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
    MethodParameters:
      Name                           Flags
      isDef                          final
      f                              final

  public <Ex extends java.lang.Throwable, T extends java.lang.Object> scala.PartialFunction<java.lang.Throwable, T> throwableSubtypeToCatcher(scala.PartialFunction<Ex, T>, scala.reflect.ClassTag<Ex>);
    descriptor: (Lscala/PartialFunction;Lscala/reflect/ClassTag;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=3
         0: aload_1
         1: invokedynamic #140,  0            // InvokeDynamic #2:apply:(Lscala/PartialFunction;)Lscala/Function1;
         6: aload_1
         7: invokedynamic #145,  0            // InvokeDynamic #3:apply:(Lscala/PartialFunction;)Lscala/Function1;
        12: astore        4
        14: astore_3
        15: new           #12                 // class scala/util/control/Exception$$anon$1
        18: dup
        19: aload_2
        20: aload_3
        21: aload         4
        23: invokespecial #84                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
        26: areturn
      LineNumberTable:
        line 168: 0
        line 156: 15
        line 168: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/util/control/Exception$;
            0      27     1    pf   Lscala/PartialFunction;
            0      27     2 evidence$2   Lscala/reflect/ClassTag;
           15      11     3 mkCatcher_isDef   Lscala/Function1;
           15      11     4 mkCatcher_f   Lscala/Function1;
    Signature: #130                         // <Ex:Ljava/lang/Throwable;T:Ljava/lang/Object;>(Lscala/PartialFunction<TEx;TT;>;Lscala/reflect/ClassTag<TEx;>;)Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
    MethodParameters:
      Name                           Flags
      pf                             final
      evidence$2                     final

  public boolean shouldRethrow(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: aload_1
         1: instanceof    #152                // class scala/util/control/ControlThrowable
         4: ifeq          12
         7: iconst_1
         8: istore_2
         9: goto          26
        12: aload_1
        13: instanceof    #154                // class java/lang/InterruptedException
        16: ifeq          24
        19: iconst_1
        20: istore_2
        21: goto          26
        24: iconst_0
        25: istore_2
        26: iload_2
        27: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 12 /* same */
        frame_type = 11 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 175: 0
        line 176: 12
        line 178: 24
        line 174: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/util/control/Exception$;
            0      28     1     x   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x                              final

  public final scala.PartialFunction<java.lang.Throwable, scala.runtime.Nothing$> nothingCatcher();
    descriptor: ()Lscala/PartialFunction;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #86                 // Field nothingCatcher:Lscala/PartialFunction;
         3: areturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/util/control/Exception$;
    Signature: #156                         // ()Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;

  public final <T extends java.lang.Object> scala.PartialFunction<java.lang.Throwable, T> nonFatalCatcher();
    descriptor: ()Lscala/PartialFunction;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=4, args_size=1
         0: invokedynamic #163,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
         5: invokedynamic #168,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        10: astore_2
        11: astore_1
        12: getstatic     #76                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        15: ldc           #78                 // class java/lang/Throwable
        17: invokevirtual #81                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        20: astore_3
        21: new           #12                 // class scala/util/control/Exception$$anon$1
        24: dup
        25: aload_3
        26: aload_1
        27: aload_2
        28: invokespecial #84                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
        31: areturn
      LineNumberTable:
        line 275: 0
        line 165: 12
        line 156: 21
        line 275: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/util/control/Exception$;
           12      19     1 mkThrowableCatcher_isDef   Lscala/Function1;
           12      19     2 mkThrowableCatcher_f   Lscala/Function1;
           21      10     3 mkThrowableCatcher_mkCatcher_evidence$1   Lscala/reflect/ClassTag;
    Signature: #158                         // <T:Ljava/lang/Object;>()Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;

  public final <T extends java.lang.Object> scala.PartialFunction<java.lang.Throwable, T> allCatcher();
    descriptor: ()Lscala/PartialFunction;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=4, args_size=1
         0: invokedynamic #174,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
         5: invokedynamic #179,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        10: astore_2
        11: astore_1
        12: getstatic     #76                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        15: ldc           #78                 // class java/lang/Throwable
        17: invokevirtual #81                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        20: astore_3
        21: new           #12                 // class scala/util/control/Exception$$anon$1
        24: dup
        25: aload_3
        26: aload_1
        27: aload_2
        28: invokespecial #84                 // Method scala/util/control/Exception$$anon$1."<init>":(Lscala/reflect/ClassTag;Lscala/Function1;Lscala/Function1;)V
        31: areturn
      LineNumberTable:
        line 276: 0
        line 165: 12
        line 156: 21
        line 276: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/util/control/Exception$;
           12      19     1 mkThrowableCatcher_isDef   Lscala/Function1;
           12      19     2 mkThrowableCatcher_f   Lscala/Function1;
           21      10     3 mkThrowableCatcher_mkCatcher_evidence$1   Lscala/reflect/ClassTag;
    Signature: #158                         // <T:Ljava/lang/Object;>()Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;

  public final scala.util.control.Exception$Catch<scala.runtime.Nothing$> noCatch();
    descriptor: ()Lscala/util/control/Exception$Catch;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #111                // Field noCatch:Lscala/util/control/Exception$Catch;
         3: areturn
      LineNumberTable:
        line 281: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/util/control/Exception$;
    Signature: #181                         // ()Lscala/util/control/Exception$Catch<Lscala/runtime/Nothing$;>;

  public final <T extends java.lang.Object> scala.util.control.Exception$Catch<T> allCatch();
    descriptor: ()Lscala/util/control/Exception$Catch;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=1, args_size=1
         0: new           #21                 // class scala/util/control/Exception$Catch
         3: dup
         4: aload_0
         5: invokevirtual #185                // Method allCatcher:()Lscala/PartialFunction;
         8: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        11: pop
        12: getstatic     #97                 // Field scala/None$.MODULE$:Lscala/None$;
        15: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        18: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
        21: invokespecial #103                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        24: ldc           #187                // String <everything>
        26: invokevirtual #109                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
        29: checkcast     #21                 // class scala/util/control/Exception$Catch
        32: areturn
      LineNumberTable:
        line 286: 0
        line 215: 12
        line 286: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/util/control/Exception$;
    Signature: #183                         // <T:Ljava/lang/Object;>()Lscala/util/control/Exception$Catch<TT;>;

  public final <T extends java.lang.Object> scala.util.control.Exception$Catch<T> nonFatalCatch();
    descriptor: ()Lscala/util/control/Exception$Catch;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=1, args_size=1
         0: new           #21                 // class scala/util/control/Exception$Catch
         3: dup
         4: aload_0
         5: invokevirtual #190                // Method nonFatalCatcher:()Lscala/PartialFunction;
         8: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        11: pop
        12: getstatic     #97                 // Field scala/None$.MODULE$:Lscala/None$;
        15: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        18: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
        21: invokespecial #103                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        24: ldc           #192                // String <non-fatal>
        26: invokevirtual #109                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
        29: checkcast     #21                 // class scala/util/control/Exception$Catch
        32: areturn
      LineNumberTable:
        line 291: 0
        line 215: 12
        line 291: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/util/control/Exception$;
    Signature: #183                         // <T:Ljava/lang/Object;>()Lscala/util/control/Exception$Catch<TT;>;

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<T> catching(scala.collection.immutable.Seq<java.lang.Class<?>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: new           #21                 // class scala/util/control/Exception$Catch
         3: dup
         4: new           #14                 // class scala/util/control/Exception$$anonfun$pfFromExceptions$1
         7: dup
         8: aload_1
         9: invokespecial #199                // Method scala/util/control/Exception$$anonfun$pfFromExceptions$1."<init>":(Lscala/collection/immutable/Seq;)V
        12: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        15: pop
        16: getstatic     #97                 // Field scala/None$.MODULE$:Lscala/None$;
        19: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        22: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
        25: invokespecial #103                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        28: aload_1
        29: invokedynamic #206,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
        34: invokeinterface #212,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        39: checkcast     #214                // class scala/collection/IterableOnceOps
        42: ldc           #216                // String ,
        44: astore_2
        45: dup
        46: ifnonnull     51
        49: aconst_null
        50: athrow
        51: ldc           #218                // String
        53: aload_2
        54: ldc           #218                // String
        56: invokeinterface #222,  4          // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        61: aconst_null
        62: astore_2
        63: invokevirtual #109                // Method scala/util/control/Exception$Catch.withDesc:(Ljava/lang/String;)Lscala/util/control/Exception$Described;
        66: checkcast     #21                 // class scala/util/control/Exception$Catch
        69: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class scala/util/control/Exception$, class scala/collection/immutable/Seq, class java/lang/String ]
          stack = [ class scala/util/control/Exception$Catch, class scala/collection/IterableOnceOps ]
      LineNumberTable:
        line 304: 0
        line 373: 4
        line 304: 12
        line 215: 16
        line 304: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      70     0  this   Lscala/util/control/Exception$;
            0      70     1 exceptions   Lscala/collection/immutable/Seq;
           51      10     2 mkString_sep   Ljava/lang/String;
    Signature: #195                         // <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<T> catching(scala.PartialFunction<java.lang.Throwable, T>);
    descriptor: (Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #21                 // class scala/util/control/Exception$Catch
         3: dup
         4: aload_1
         5: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
         8: pop
         9: getstatic     #97                 // Field scala/None$.MODULE$:Lscala/None$;
        12: getstatic     #92                 // Field scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
        15: invokevirtual #100                // Method scala/util/control/Exception$Catch$.$lessinit$greater$default$3:()Lscala/Function1;
        18: invokespecial #103                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        21: areturn
      LineNumberTable:
        line 306: 0
        line 215: 9
        line 306: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/util/control/Exception$;
            0      22     1     c   Lscala/PartialFunction;
    Signature: #229                         // <T:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      c                              final

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<T> catchingPromiscuously(scala.collection.immutable.Seq<java.lang.Class<?>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #14                 // class scala/util/control/Exception$$anonfun$pfFromExceptions$1
         4: dup
         5: aload_1
         6: invokespecial #199                // Method scala/util/control/Exception$$anonfun$pfFromExceptions$1."<init>":(Lscala/collection/immutable/Seq;)V
         9: invokevirtual #233                // Method catchingPromiscuously:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
        12: areturn
      LineNumberTable:
        line 313: 0
        line 373: 1
        line 313: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/util/control/Exception$;
            0      13     1 exceptions   Lscala/collection/immutable/Seq;
    Signature: #195                         // <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<T> catchingPromiscuously(scala.PartialFunction<java.lang.Throwable, T>);
    descriptor: (Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #21                 // class scala/util/control/Exception$Catch
         3: dup
         4: aload_1
         5: getstatic     #97                 // Field scala/None$.MODULE$:Lscala/None$;
         8: invokedynamic #238,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
        13: invokespecial #103                // Method scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        16: areturn
      LineNumberTable:
        line 314: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/util/control/Exception$;
            0      17     1     c   Lscala/PartialFunction;
    Signature: #229                         // <T:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      c                              final

  public scala.util.control.Exception$Catch<scala.runtime.BoxedUnit> ignoring(scala.collection.immutable.Seq<java.lang.Class<?>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #242                // Method catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
         5: invokedynamic #247,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
        10: invokevirtual #251                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
        13: areturn
      LineNumberTable:
        line 320: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/util/control/Exception$;
            0      14     1 exceptions   Lscala/collection/immutable/Seq;
    Signature: #240                         // (Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<Lscala/runtime/BoxedUnit;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<scala.Option<T>> failing(scala.collection.immutable.Seq<java.lang.Class<?>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #242                // Method catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
         5: invokedynamic #260,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
        10: invokevirtual #251                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
        13: areturn
      LineNumberTable:
        line 326: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/util/control/Exception$;
            0      14     1 exceptions   Lscala/collection/immutable/Seq;
    Signature: #253                         // <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<Lscala/Option<TT;>;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<T> failAsValue(scala.collection.immutable.Seq<java.lang.Class<?>>, scala.Function0<T>);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/Function0;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #242                // Method catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
         5: aload_2
         6: invokedynamic #272,  0            // InvokeDynamic #12:apply:(Lscala/Function0;)Lscala/Function1;
        11: invokevirtual #251                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
        14: areturn
      LineNumberTable:
        line 332: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/util/control/Exception$;
            0      15     1 exceptions   Lscala/collection/immutable/Seq;
            0      15     2 value   Lscala/Function0;
    Signature: #263                         // <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;Lscala/Function0<TT;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final
      value                          final

  public <T extends java.lang.Object> scala.util.control.Exception$By<scala.Function1<java.lang.Throwable, T>, scala.util.control.Exception$Catch<T>> handling(scala.collection.immutable.Seq<java.lang.Class<?>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$By;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #16                 // class scala/util/control/Exception$By
         3: dup
         4: aload_0
         5: aload_1
         6: invokedynamic #285,  0            // InvokeDynamic #13:apply:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;)Lscala/Function1;
        11: invokespecial #288                // Method scala/util/control/Exception$By."<init>":(Lscala/Function1;)V
        14: areturn
      LineNumberTable:
        line 348: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/util/control/Exception$;
            0      15     1 exceptions   Lscala/collection/immutable/Seq;
    Signature: #276                         // <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$By<Lscala/Function1<Ljava/lang/Throwable;TT;>;Lscala/util/control/Exception$Catch<TT;>;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<T> ultimately(scala.Function0<scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function0;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #294                // Method noCatch:()Lscala/util/control/Exception$Catch;
         4: aload_1
         5: invokevirtual #297                // Method scala/util/control/Exception$Catch.andFinally:(Lscala/Function0;)Lscala/util/control/Exception$Catch;
         8: areturn
      LineNumberTable:
        line 354: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/control/Exception$;
            0       9     1  body   Lscala/Function0;
    Signature: #291                         // <T:Ljava/lang/Object;>(Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      body                           final

  public <T extends java.lang.Object> scala.util.control.Exception$Catch<T> unwrapping(scala.collection.immutable.Seq<java.lang.Class<?>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #242                // Method catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
         5: aload_0
         6: aload_1
         7: invokedynamic #304,  0            // InvokeDynamic #14:apply:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;)Lscala/Function1;
        12: invokevirtual #251                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
        15: areturn
      LineNumberTable:
        line 365: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/util/control/Exception$;
            0      16     1 exceptions   Lscala/collection/immutable/Seq;
    Signature: #195                         // <T:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final

  public boolean scala$util$control$Exception$$wouldMatch(java.lang.Throwable, scala.collection.Seq<java.lang.Class<?>>);
    descriptor: (Ljava/lang/Throwable;Lscala/collection/Seq;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: aload_1
         2: invokedynamic #318,  0            // InvokeDynamic #15:apply:(Ljava/lang/Throwable;)Lscala/Function1;
         7: invokeinterface #324,  2          // InterfaceMethod scala/collection/Seq.exists:(Lscala/Function1;)Z
        12: ireturn
      LineNumberTable:
        line 370: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/util/control/Exception$;
            0      13     1     x   Ljava/lang/Throwable;
            0      13     2 classes   Lscala/collection/Seq;
    Signature: #307                         // (Ljava/lang/Throwable;Lscala/collection/Seq<Ljava/lang/Class<*>;>;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      classes                        final

  private scala.PartialFunction<java.lang.Throwable, scala.runtime.Nothing$> pfFromExceptions(scala.collection.immutable.Seq<java.lang.Class<?>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/PartialFunction;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: new           #14                 // class scala/util/control/Exception$$anonfun$pfFromExceptions$1
         3: dup
         4: aload_1
         5: invokespecial #199                // Method scala/util/control/Exception$$anonfun$pfFromExceptions$1."<init>":(Lscala/collection/immutable/Seq;)V
         8: areturn
      LineNumberTable:
        line 373: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/control/Exception$;
            0       9     1 exceptions   Lscala/collection/immutable/Seq;
    Signature: #328                         // (Lscala/collection/immutable/Seq<Ljava/lang/Class<*>;>;)Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/runtime/Nothing$;>;
    MethodParameters:
      Name                           Flags
      exceptions                     final

  public static final boolean $anonfun$throwableSubtypeToCatcher$1(scala.PartialFunction, java.lang.Throwable);
    descriptor: (Lscala/PartialFunction;Ljava/lang/Throwable;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #337,  2          // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
         7: ireturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  pf$1   Lscala/PartialFunction;
            0       8     1     x   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      pf$1                           final
      x                              final

  public static final java.lang.Object $anonfun$throwableSubtypeToCatcher$2(scala.PartialFunction, java.lang.Throwable);
    descriptor: (Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #340,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  pf$1   Lscala/PartialFunction;
            0       8     1    v1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      pf$1                           final
      v1                             final

  public static final boolean $anonfun$nothingCatcher$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   x$5   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final scala.runtime.Nothing$ $anonfun$nothingCatcher$2(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: athrow
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   x$6   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final boolean $anonfun$nonFatalCatcher$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ifnull        22
         4: getstatic     #350                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
         7: aload_0
         8: invokevirtual #354                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
        11: invokevirtual #360                // Method scala/Option.isEmpty:()Z
        14: ifne          22
        17: iconst_1
        18: istore_1
        19: goto          24
        22: iconst_0
        23: istore_1
        24: iload_1
        25: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 275: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  x0$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final scala.runtime.Nothing$ $anonfun$nonFatalCatcher$2(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: athrow
      LineNumberTable:
        line 275: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   x$7   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final boolean $anonfun$allCatcher$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 276: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   x$8   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static final scala.runtime.Nothing$ $anonfun$allCatcher$2(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: athrow
      LineNumberTable:
        line 276: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   x$9   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$9                            final

  public static final java.lang.String $anonfun$catching$1(java.lang.Class);
    descriptor: (Ljava/lang/Class;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #371                // Method java/lang/Class.getName:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$10   Ljava/lang/Class;
    MethodParameters:
      Name                           Flags
      x$10                           final

  public static final boolean $anonfun$catchingPromiscuously$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 314: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  x$11   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final void $anonfun$ignoring$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 320: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  x$12   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static final scala.None$ $anonfun$failing$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #97                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 326: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  x$13   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$13                           final

  public static final java.lang.Object $anonfun$failAsValue$1(scala.Function0, java.lang.Throwable);
    descriptor: (Lscala/Function0;Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #385,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 332: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 value$1   Lscala/Function0;
            0       7     1  x$14   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      value$1                        final
      x$14                           final

  private final scala.util.control.Exception$Catch fun$1(scala.Function1, scala.collection.immutable.Seq);
    descriptor: (Lscala/Function1;Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #242                // Method catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
         5: aload_1
         6: invokevirtual #251                // Method scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
         9: areturn
      LineNumberTable:
        line 347: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/control/Exception$;
            0      10     1     f   Lscala/Function1;
            0      10     2 exceptions$1   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      f                              final
      exceptions$1                   final

  public static final scala.util.control.Exception$Catch $anonfun$handling$1(scala.util.control.Exception$, scala.collection.immutable.Seq, scala.Function1);
    descriptor: (Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/util/control/Exception$Catch;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokespecial #391                // Method fun$1:(Lscala/Function1;Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
         6: areturn
      LineNumberTable:
        line 348: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/util/control/Exception$;
            0       7     1 exceptions$1   Lscala/collection/immutable/Seq;
            0       7     2     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      exceptions$1                   final
      f                              final

  private final java.lang.Throwable unwrap$1(java.lang.Throwable, scala.collection.immutable.Seq);
    descriptor: (Ljava/lang/Throwable;Lscala/collection/immutable/Seq;)Ljava/lang/Throwable;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #396                // Method scala$util$control$Exception$$wouldMatch:(Ljava/lang/Throwable;Lscala/collection/Seq;)Z
         6: ifeq          24
         9: aload_1
        10: invokevirtual #400                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
        13: ifnull        24
        16: aload_1
        17: invokevirtual #400                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
        20: astore_1
        21: goto          0
        24: aload_1
        25: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 23 /* same */
      LineNumberTable:
        line 362: 0
        line 363: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/util/control/Exception$;
            0      26     1     x   Ljava/lang/Throwable;
            0      26     2 exceptions$2   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      x                              final
      exceptions$2                   final

  public static final scala.runtime.Nothing$ $anonfun$unwrapping$1(scala.util.control.Exception$, scala.collection.immutable.Seq, java.lang.Throwable);
    descriptor: (Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokespecial #402                // Method unwrap$1:(Ljava/lang/Throwable;Lscala/collection/immutable/Seq;)Ljava/lang/Throwable;
         6: athrow
      LineNumberTable:
        line 365: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/util/control/Exception$;
            0       7     1 exceptions$2   Lscala/collection/immutable/Seq;
            0       7     2     x   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      exceptions$2                   final
      x                              final

  public static final boolean $anonfun$wouldMatch$1(java.lang.Throwable, java.lang.Class);
    descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #410                // Method java/lang/Throwable.getClass:()Ljava/lang/Class;
         5: invokevirtual #414                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
         8: ireturn
      LineNumberTable:
        line 370: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$16   Ljava/lang/Throwable;
            0       9     1  x$15   Ljava/lang/Class;
    MethodParameters:
      Name                           Flags
      x$16                           final
      x$15                           final

  private scala.util.control.Exception$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #415                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$;

  public static final java.lang.Object $anonfun$throwableSubtypeToCatcher$1$adapted(scala.PartialFunction, java.lang.Throwable);
    descriptor: (Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #417                // Method $anonfun$throwableSubtypeToCatcher$1:(Lscala/PartialFunction;Ljava/lang/Throwable;)Z
         5: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  pf$1   Lscala/PartialFunction;
            0       9     1     x   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      pf$1                           final
      x                              final

  public static final java.lang.Object $anonfun$nonFatalCatcher$1$adapted(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #425                // Method $anonfun$nonFatalCatcher$1:(Ljava/lang/Throwable;)Z
         4: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 275: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final java.lang.Object $anonfun$allCatcher$1$adapted(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #427                // Method $anonfun$allCatcher$1:(Ljava/lang/Throwable;)Z
         4: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 276: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$8   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static final java.lang.Object $anonfun$catchingPromiscuously$1$adapted(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #429                // Method $anonfun$catchingPromiscuously$1:(Ljava/lang/Throwable;)Z
         4: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 314: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$11   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final java.lang.Object $anonfun$ignoring$1$adapted(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #431                // Method $anonfun$ignoring$1:(Ljava/lang/Throwable;)V
         4: getstatic     #437                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 320: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$12   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static final java.lang.Object $anonfun$wouldMatch$1$adapted(java.lang.Throwable, java.lang.Class);
    descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #439                // Method $anonfun$wouldMatch$1:(Ljava/lang/Throwable;Ljava/lang/Class;)Z
         5: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 370: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$16   Ljava/lang/Throwable;
            0       9     1  x$15   Ljava/lang/Class;
    MethodParameters:
      Name                           Flags
      x$16                           final
      x$15                           final

  public static final java.lang.Object $anonfun$nothingCatcher$1$adapted(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #441                // Method $anonfun$nothingCatcher$1:(Ljava/lang/Throwable;)Z
         4: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$5                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #453,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #12;                       // class scala/util/control/Exception$$anon$1
  public final #14;                       // class scala/util/control/Exception$$anonfun$pfFromExceptions$1
  public static #19= #16 of #18;          // By=class scala/util/control/Exception$By of class scala/util/control/Exception
  public static #22= #21 of #18;          // Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
  public static #25= #24 of #18;          // Catch$=class scala/util/control/Exception$Catch$ of class scala/util/control/Exception
  public static #28= #27 of #18;          // Described=class scala/util/control/Exception$Described of class scala/util/control/Exception
SourceFile: "Exception.scala"
BootstrapMethods:
  0: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #50 REF_invokeStatic scala/util/control/Exception$.$anonfun$nothingCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  1: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #69 REF_invokeStatic scala/util/control/Exception$.$anonfun$nothingCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #52 5
      #53 1
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  2: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #137 REF_invokeStatic scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$1$adapted:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  3: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #144 REF_invokeStatic scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$2:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  4: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #162 REF_invokeStatic scala/util/control/Exception$.$anonfun$nonFatalCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  5: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #167 REF_invokeStatic scala/util/control/Exception$.$anonfun$nonFatalCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #52 5
      #53 1
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  6: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #173 REF_invokeStatic scala/util/control/Exception$.$anonfun$allCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  7: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #178 REF_invokeStatic scala/util/control/Exception$.$anonfun$allCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #52 5
      #53 1
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  8: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #204 REF_invokeStatic scala/util/control/Exception$.$anonfun$catching$1:(Ljava/lang/Class;)Ljava/lang/String;
      #205 (Ljava/lang/Class;)Ljava/lang/String;
      #52 5
      #53 1
      #205 (Ljava/lang/Class;)Ljava/lang/String;
  9: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #237 REF_invokeStatic scala/util/control/Exception$.$anonfun$catchingPromiscuously$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  10: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #246 REF_invokeStatic scala/util/control/Exception$.$anonfun$ignoring$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  11: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #258 REF_invokeStatic scala/util/control/Exception$.$anonfun$failing$1:(Ljava/lang/Throwable;)Lscala/None$;
      #259 (Ljava/lang/Throwable;)Lscala/None$;
      #52 5
      #53 1
      #259 (Ljava/lang/Throwable;)Lscala/None$;
  12: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #269 REF_invokeStatic scala/util/control/Exception$.$anonfun$failAsValue$1:(Lscala/Function0;Ljava/lang/Throwable;)Ljava/lang/Object;
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #52 5
      #53 1
      #51 (Ljava/lang/Throwable;)Ljava/lang/Object;
  13: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #281 REF_invokeStatic scala/util/control/Exception$.$anonfun$handling$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/util/control/Exception$Catch;
      #282 (Lscala/Function1;)Lscala/util/control/Exception$Catch;
      #52 5
      #53 1
      #282 (Lscala/Function1;)Lscala/util/control/Exception$Catch;
  14: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #303 REF_invokeStatic scala/util/control/Exception$.$anonfun$unwrapping$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #52 5
      #53 1
      #70 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  15: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #313 REF_invokeStatic scala/util/control/Exception$.$anonfun$wouldMatch$1$adapted:(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Object;
      #315 (Ljava/lang/Class;)Ljava/lang/Object;
      #52 5
      #53 1
      #315 (Ljava/lang/Class;)Ljava/lang/Object;
  16: #450 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 REF_invokeStatic scala/util/control/Exception$.$anonfun$allCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #178 REF_invokeStatic scala/util/control/Exception$.$anonfun$allCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #204 REF_invokeStatic scala/util/control/Exception$.$anonfun$catching$1:(Ljava/lang/Class;)Ljava/lang/String;
      #237 REF_invokeStatic scala/util/control/Exception$.$anonfun$catchingPromiscuously$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #269 REF_invokeStatic scala/util/control/Exception$.$anonfun$failAsValue$1:(Lscala/Function0;Ljava/lang/Throwable;)Ljava/lang/Object;
      #258 REF_invokeStatic scala/util/control/Exception$.$anonfun$failing$1:(Ljava/lang/Throwable;)Lscala/None$;
      #281 REF_invokeStatic scala/util/control/Exception$.$anonfun$handling$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/util/control/Exception$Catch;
      #246 REF_invokeStatic scala/util/control/Exception$.$anonfun$ignoring$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #162 REF_invokeStatic scala/util/control/Exception$.$anonfun$nonFatalCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #167 REF_invokeStatic scala/util/control/Exception$.$anonfun$nonFatalCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #50 REF_invokeStatic scala/util/control/Exception$.$anonfun$nothingCatcher$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #69 REF_invokeStatic scala/util/control/Exception$.$anonfun$nothingCatcher$2:(Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #137 REF_invokeStatic scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$1$adapted:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
      #144 REF_invokeStatic scala/util/control/Exception$.$anonfun$throwableSubtypeToCatcher$2:(Lscala/PartialFunction;Ljava/lang/Throwable;)Ljava/lang/Object;
      #303 REF_invokeStatic scala/util/control/Exception$.$anonfun$unwrapping$1:(Lscala/util/control/Exception$;Lscala/collection/immutable/Seq;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #313 REF_invokeStatic scala/util/control/Exception$.$anonfun$wouldMatch$1$adapted:(Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xF4 (unknown attribute)
   01 01 00 30 01 6A 00 95 01 00 AA 00 2F 01 00 AF
   00 42 01 00 C8 00 C9 01 01 75 00 95 01 00 EA 00
   2F 01 01 09 01 0A 01 00 FE 00 FF 01 01 15 01 16
   01 01 77 01 78 01 00 F3 00 2F 01 01 58 00 95 01
   00 9F 00 2F 01 00 A4 00 42 01 01 55 00 95 01 00
   2E 00 2F 01 00 41 00 42 01 01 49 01 4A 01 00 85
   00 86 01 00 8D 00 86 01 01 2B 01 2C 01 01 93 01
   94 01 01 35 01 36 01 00 27 00 26 01 00 B6 00 B4
   01 00 A9 00 57 01 00 C1 00 E4 01 00 C1 00 C2 01
   00 E7 00 E4 01 00 E7 00 C2 01 01 05 01 06 01 00
   FC 00 C2 01 01 82 01 83 01 01 12 01 13 01 00 EF
   00 C2 01 00 75 00 76 01 00 7C 00 7D 01 00 22 00
   B4 01 00 BC 00 B4 01 00 9D 00 57 01 00 1F 00 57
   01 01 46 01 47 01 01 31 01 32 01 00 94 00 95 01
   00 80 00 81 01 01 21 01 22 01 01 88 01 89 01 01
   2A 00 C2 01
  Scala: length = 0x0 (unknown attribute)

