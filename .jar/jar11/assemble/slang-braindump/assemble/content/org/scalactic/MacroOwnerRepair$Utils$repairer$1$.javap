Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/MacroOwnerRepair$Utils$repairer$1$.class
  Last modified May 29, 2022; size 2923 bytes
  SHA-256 checksum 8ed37043d4273c6ec09f6b48998b65f73cf544903b0be3fafeb5e42be8eac9db
  Compiled from "MacroOwnerRepair.scala"
public class org.scalactic.MacroOwnerRepair$Utils$repairer$1$ extends scala.reflect.api.Trees$Transformer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalactic/MacroOwnerRepair$Utils$repairer$1$
  super_class: #4                         // scala/reflect/api/Trees$Transformer
  interfaces: 0, fields: 2, methods: 3, attributes: 5
Constant pool:
    #1 = Utf8               org/scalactic/MacroOwnerRepair$Utils$repairer$1$
    #2 = Class              #1            // org/scalactic/MacroOwnerRepair$Utils$repairer$1$
    #3 = Utf8               scala/reflect/api/Trees$Transformer
    #4 = Class              #3            // scala/reflect/api/Trees$Transformer
    #5 = Utf8               MacroOwnerRepair.scala
    #6 = Utf8               org/scalactic/MacroOwnerRepair$Utils
    #7 = Class              #6            // org/scalactic/MacroOwnerRepair$Utils
    #8 = Utf8               repairOwners
    #9 = Utf8               (Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Symbols$Symbol;)Lscala/reflect/internal/Trees$Tree;
   #10 = NameAndType        #8:#9         // repairOwners:(Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Symbols$Symbol;)Lscala/reflect/internal/Trees$Tree;
   #11 = Utf8               org/scalactic/MacroOwnerRepair
   #12 = Class              #11           // org/scalactic/MacroOwnerRepair
   #13 = Utf8               Utils
   #14 = Utf8               org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser
   #15 = Class              #14           // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser
   #16 = Utf8               ChangeOwnerAndModuleClassTraverser
   #17 = Utf8               repairer$1$
   #18 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #19 = Class              #18           // scala/reflect/api/Symbols$SymbolApi
   #20 = Utf8               scala/reflect/api/Symbols
   #21 = Class              #20           // scala/reflect/api/Symbols
   #22 = Utf8               SymbolApi
   #23 = Utf8               scala/reflect/api/Trees
   #24 = Class              #23           // scala/reflect/api/Trees
   #25 = Utf8               Transformer
   #26 = Utf8               scala/reflect/api/Trees$TreeApi
   #27 = Class              #26           // scala/reflect/api/Trees$TreeApi
   #28 = Utf8               TreeApi
   #29 = Utf8               scala/reflect/internal/Symbols$Symbol
   #30 = Class              #29           // scala/reflect/internal/Symbols$Symbol
   #31 = Utf8               scala/reflect/internal/Symbols
   #32 = Class              #31           // scala/reflect/internal/Symbols
   #33 = Utf8               Symbol
   #34 = Utf8               scala/reflect/internal/Trees$DefTree
   #35 = Class              #34           // scala/reflect/internal/Trees$DefTree
   #36 = Utf8               scala/reflect/internal/Trees
   #37 = Class              #36           // scala/reflect/internal/Trees
   #38 = Utf8               DefTree
   #39 = Utf8               scala/reflect/internal/Trees$Function
   #40 = Class              #39           // scala/reflect/internal/Trees$Function
   #41 = Utf8               Function
   #42 = Utf8               scala/reflect/internal/Trees$Import
   #43 = Class              #42           // scala/reflect/internal/Trees$Import
   #44 = Utf8               Import
   #45 = Utf8               scala/reflect/internal/Trees$Tree
   #46 = Class              #45           // scala/reflect/internal/Trees$Tree
   #47 = Utf8               Tree
   #48 = Utf8               $outer
   #49 = Utf8               Lorg/scalactic/MacroOwnerRepair$Utils;
   #50 = Utf8               macroCallSiteOwner$1
   #51 = Utf8               Lscala/reflect/internal/Symbols$Symbol;
   #52 = Utf8               transform
   #53 = Utf8               (Lscala/reflect/internal/Trees$Tree;)Lscala/reflect/internal/Trees$Tree;
   #54 = Utf8               t
   #55 = Utf8               symbol
   #56 = Utf8               ()Lscala/reflect/internal/Symbols$Symbol;
   #57 = NameAndType        #55:#56       // symbol:()Lscala/reflect/internal/Symbols$Symbol;
   #58 = Methodref          #46.#57       // scala/reflect/internal/Trees$Tree.symbol:()Lscala/reflect/internal/Symbols$Symbol;
   #59 = Utf8               owner
   #60 = NameAndType        #59:#56       // owner:()Lscala/reflect/internal/Symbols$Symbol;
   #61 = Methodref          #30.#60       // scala/reflect/internal/Symbols$Symbol.owner:()Lscala/reflect/internal/Symbols$Symbol;
   #62 = NameAndType        #50:#51       // macroCallSiteOwner$1:Lscala/reflect/internal/Symbols$Symbol;
   #63 = Fieldref           #2.#62        // org/scalactic/MacroOwnerRepair$Utils$repairer$1$.macroCallSiteOwner$1:Lscala/reflect/internal/Symbols$Symbol;
   #64 = Utf8               java/lang/Object
   #65 = Class              #64           // java/lang/Object
   #66 = Utf8               equals
   #67 = Utf8               (Ljava/lang/Object;)Z
   #68 = NameAndType        #66:#67       // equals:(Ljava/lang/Object;)Z
   #69 = Methodref          #65.#68       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #70 = Utf8               currentOwner
   #71 = Utf8               ()Lscala/reflect/api/Symbols$SymbolApi;
   #72 = NameAndType        #70:#71       // currentOwner:()Lscala/reflect/api/Symbols$SymbolApi;
   #73 = Methodref          #2.#72        // org/scalactic/MacroOwnerRepair$Utils$repairer$1$.currentOwner:()Lscala/reflect/api/Symbols$SymbolApi;
   #74 = NameAndType        #48:#49       // $outer:Lorg/scalactic/MacroOwnerRepair$Utils;
   #75 = Fieldref           #2.#74        // org/scalactic/MacroOwnerRepair$Utils$repairer$1$.$outer:Lorg/scalactic/MacroOwnerRepair$Utils;
   #76 = Utf8               <init>
   #77 = Utf8               (Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
   #78 = NameAndType        #76:#77       // "<init>":(Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
   #79 = Methodref          #15.#78       // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser."<init>":(Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
   #80 = Utf8               apply
   #81 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #82 = NameAndType        #80:#81       // apply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #83 = Methodref          #15.#82       // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.apply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #84 = NameAndType        #52:#81       // transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #85 = Methodref          #4.#84        // scala/reflect/api/Trees$Transformer.transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #86 = Utf8               this
   #87 = Utf8               Lorg/scalactic/MacroOwnerRepair$Utils$repairer$1$;
   #88 = Utf8               Lscala/reflect/internal/Trees$Tree;
   #89 = Utf8               tree
   #90 = NameAndType        #52:#53       // transform:(Lscala/reflect/internal/Trees$Tree;)Lscala/reflect/internal/Trees$Tree;
   #91 = Methodref          #2.#90        // org/scalactic/MacroOwnerRepair$Utils$repairer$1$.transform:(Lscala/reflect/internal/Trees$Tree;)Lscala/reflect/internal/Trees$Tree;
   #92 = Utf8               Lscala/reflect/api/Trees$TreeApi;
   #93 = Utf8               (Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;)V
   #94 = Utf8               u
   #95 = Utf8               ()Lscala/reflect/internal/SymbolTable;
   #96 = NameAndType        #94:#95       // u:()Lscala/reflect/internal/SymbolTable;
   #97 = Methodref          #7.#96        // org/scalactic/MacroOwnerRepair$Utils.u:()Lscala/reflect/internal/SymbolTable;
   #98 = Utf8               (Lscala/reflect/api/Universe;)V
   #99 = NameAndType        #76:#98       // "<init>":(Lscala/reflect/api/Universe;)V
  #100 = Methodref          #4.#99        // scala/reflect/api/Trees$Transformer."<init>":(Lscala/reflect/api/Universe;)V
  #101 = Utf8               Code
  #102 = Utf8               StackMapTable
  #103 = Utf8               LineNumberTable
  #104 = Utf8               LocalVariableTable
  #105 = Utf8               MethodParameters
  #106 = Utf8               InnerClasses
  #107 = Utf8               EnclosingMethod
  #108 = Utf8               SourceFile
  #109 = Utf8               ScalaInlineInfo
  #110 = Utf8               Scala
{
  private final org.scalactic.MacroOwnerRepair$Utils $outer;
    descriptor: Lorg/scalactic/MacroOwnerRepair$Utils;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.reflect.internal.Symbols$Symbol macroCallSiteOwner$1;
    descriptor: Lscala/reflect/internal/Symbols$Symbol;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.reflect.internal.Trees$Tree transform(scala.reflect.internal.Trees$Tree);
    descriptor: (Lscala/reflect/internal/Trees$Tree;)Lscala/reflect/internal/Trees$Tree;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #35                 // class scala/reflect/internal/Trees$DefTree
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          56
        16: goto          19
        19: aload         4
        21: instanceof    #40                 // class scala/reflect/internal/Trees$Function
        24: ifeq          32
        27: iconst_1
        28: istore_3
        29: goto          56
        32: goto          35
        35: aload         4
        37: instanceof    #43                 // class scala/reflect/internal/Trees$Import
        40: ifeq          48
        43: iconst_1
        44: istore_3
        45: goto          56
        48: goto          51
        51: iconst_0
        52: istore_3
        53: goto          56
        56: iload_3
        57: ifeq          158
        60: aload_1
        61: invokevirtual #58                 // Method scala/reflect/internal/Trees$Tree.symbol:()Lscala/reflect/internal/Symbols$Symbol;
        64: invokevirtual #61                 // Method scala/reflect/internal/Symbols$Symbol.owner:()Lscala/reflect/internal/Symbols$Symbol;
        67: aload_0
        68: getfield      #63                 // Field macroCallSiteOwner$1:Lscala/reflect/internal/Symbols$Symbol;
        71: astore        5
        73: dup
        74: ifnonnull     86
        77: pop
        78: aload         5
        80: ifnull        94
        83: goto          158
        86: aload         5
        88: invokevirtual #69                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        91: ifeq          158
        94: aload_0
        95: getfield      #63                 // Field macroCallSiteOwner$1:Lscala/reflect/internal/Symbols$Symbol;
        98: aload_0
        99: invokevirtual #73                 // Method currentOwner:()Lscala/reflect/api/Symbols$SymbolApi;
       102: astore        6
       104: dup
       105: ifnonnull     117
       108: pop
       109: aload         6
       111: ifnull        158
       114: goto          125
       117: aload         6
       119: invokevirtual #69                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       122: ifne          158
       125: new           #15                 // class org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser
       128: dup
       129: aload_0
       130: getfield      #75                 // Field $outer:Lorg/scalactic/MacroOwnerRepair$Utils;
       133: aload_0
       134: getfield      #63                 // Field macroCallSiteOwner$1:Lscala/reflect/internal/Symbols$Symbol;
       137: aload_0
       138: invokevirtual #73                 // Method currentOwner:()Lscala/reflect/api/Symbols$SymbolApi;
       141: checkcast     #30                 // class scala/reflect/internal/Symbols$Symbol
       144: invokespecial #79                 // Method org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser."<init>":(Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
       147: aload_1
       148: invokevirtual #83                 // Method org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.apply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
       151: checkcast     #46                 // class scala/reflect/internal/Trees$Tree
       154: astore_2
       155: goto          173
       158: goto          161
       161: aload_0
       162: aload_1
       163: invokespecial #85                 // Method scala/reflect/api/Trees$Transformer.transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
       166: checkcast     #46                 // class scala/reflect/internal/Trees$Tree
       169: astore_2
       170: goto          173
       173: aload_2
       174: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 254 /* append */
          offset_delta = 16
          locals = [ top, top, class scala/reflect/internal/Trees$Tree ]
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalactic/MacroOwnerRepair$Utils$repairer$1$, class scala/reflect/internal/Trees$Tree, top, int, class scala/reflect/internal/Trees$Tree ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/scalactic/MacroOwnerRepair$Utils$repairer$1$, class scala/reflect/internal/Trees$Tree, top, int, class scala/reflect/internal/Trees$Tree, class scala/reflect/internal/Symbols$Symbol ]
          stack = [ class scala/reflect/internal/Symbols$Symbol ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class org/scalactic/MacroOwnerRepair$Utils$repairer$1$, class scala/reflect/internal/Trees$Tree, top, int, class scala/reflect/internal/Trees$Tree, class scala/reflect/internal/Symbols$Symbol, class scala/reflect/api/Symbols$SymbolApi ]
          stack = [ class scala/reflect/internal/Symbols$Symbol ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 32
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class org/scalactic/MacroOwnerRepair$Utils$repairer$1$, class scala/reflect/internal/Trees$Tree, class scala/reflect/internal/Trees$Tree, int, class scala/reflect/internal/Trees$Tree ]
          stack = []
      LineNumberTable:
        line 68: 0
        line 69: 3
        line 70: 125
        line 69: 158
        line 72: 161
        line 68: 173
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     175     0  this   Lorg/scalactic/MacroOwnerRepair$Utils$repairer$1$;
            0     175     1     t   Lscala/reflect/internal/Trees$Tree;
    MethodParameters:
      Name                           Flags
      t                              final

  public scala.reflect.api.Trees$TreeApi transform(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #46                 // class scala/reflect/internal/Trees$Tree
         5: invokevirtual #91                 // Method transform:(Lscala/reflect/internal/Trees$Tree;)Lscala/reflect/internal/Trees$Tree;
         8: areturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalactic/MacroOwnerRepair$Utils$repairer$1$;
            0       9     1  tree   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      tree                           final

  public org.scalactic.MacroOwnerRepair$Utils$repairer$1$(org.scalactic.MacroOwnerRepair$Utils, scala.reflect.internal.Symbols$Symbol);
    descriptor: (Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #75                 // Field $outer:Lorg/scalactic/MacroOwnerRepair$Utils;
        11: aload_0
        12: aload_2
        13: putfield      #63                 // Field macroCallSiteOwner$1:Lscala/reflect/internal/Symbols$Symbol;
        16: aload_0
        17: aload_1
        18: invokevirtual #97                 // Method org/scalactic/MacroOwnerRepair$Utils.u:()Lscala/reflect/internal/SymbolTable;
        21: invokespecial #100                // Method scala/reflect/api/Trees$Transformer."<init>":(Lscala/reflect/api/Universe;)V
        24: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 66: 0
        line 65: 11
        line 66: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/scalactic/MacroOwnerRepair$Utils$repairer$1$;
            0      25     1 $outer   Lorg/scalactic/MacroOwnerRepair$Utils;
            0      25     2 macroCallSiteOwner$1   Lscala/reflect/internal/Symbols$Symbol;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      macroCallSiteOwner$1           final
}
InnerClasses:
  private #13= #7 of #12;                 // Utils=class org/scalactic/MacroOwnerRepair$Utils of class org/scalactic/MacroOwnerRepair
  public #16= #15 of #7;                  // ChangeOwnerAndModuleClassTraverser=class org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser of class org/scalactic/MacroOwnerRepair$Utils
  public #17= #2;                         // repairer$1$=class org/scalactic/MacroOwnerRepair$Utils$repairer$1$
  public #22= #19 of #21;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public abstract #25= #4 of #24;         // Transformer=class scala/reflect/api/Trees$Transformer of class scala/reflect/api/Trees
  public #28= #27 of #24;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public abstract #33= #30 of #32;        // Symbol=class scala/reflect/internal/Symbols$Symbol of class scala/reflect/internal/Symbols
  public abstract #38= #35 of #37;        // DefTree=class scala/reflect/internal/Trees$DefTree of class scala/reflect/internal/Trees
  public #41= #40 of #37;                 // Function=class scala/reflect/internal/Trees$Function of class scala/reflect/internal/Trees
  public #44= #43 of #37;                 // Import=class scala/reflect/internal/Trees$Import of class scala/reflect/internal/Trees
  public abstract #47= #46 of #37;        // Tree=class scala/reflect/internal/Trees$Tree of class scala/reflect/internal/Trees
EnclosingMethod: #7.#10                 // org.scalactic.MacroOwnerRepair$Utils.repairOwners
SourceFile: "MacroOwnerRepair.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 4C 00 5D 01 00 34 00 51 01 00 34
   00 35 01
  Scala: length = 0x0 (unknown attribute)

