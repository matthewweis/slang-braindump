Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/diagrams/DiagramsMacro.class
  Last modified May 29, 2022; size 3724 bytes
  SHA-256 checksum 9e4801b81371c9ae6675e9fb9da7598da12b5aae2ba309629edbb5b0e33d035f
  Compiled from "DiagramsMacro.scala"
public final class org.scalatest.diagrams.DiagramsMacro
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/diagrams/DiagramsMacro
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               org/scalatest/diagrams/DiagramsMacro
   #2 = Class              #1             // org/scalatest/diagrams/DiagramsMacro
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               DiagramsMacro.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005\u0005%vAB\u0006\r\u0011\u0003q!C\u0002\u0004\u0015\u0019!\u0005a\"\u0006\u0005\u00069\u0005!\tA\b\u0005\u0007?\u0005\u0001K\u0011\u0002\u0011\t\u000b}\nA\u0011\u0002!\t\r\u001d\u000b\u0001\u0015\"\u0003I\u0011\u0015I\u0016\u0001\"\u0003[\u0011\u001d\tI\"\u0001C\u0001\u00037Aq!a\u000f\u0002\t\u0003\ti\u0004C\u0004\u0002b\u0005!\t!a\u0019\t\u000f\u0005\r\u0015\u0001\"\u0001\u0002\u0006\u0006iA)[1he\u0006l7/T1de>T!!\u0004\b\u0002\u0011\u0011L\u0017m\u001a:b[NT!a\u0004\t\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\t\u0002\u0007=\u0014x\r\u0005\u0002\u0014\u00035\tABA\u0007ES\u0006<\'/Y7t\u001b\u0006\u001c\'o\\\n\u0003\u0003Y\u0001\"a\u0006\u000e\u000e\u0003aQ\u0011!G\u0001\u0006g\u000e\fG.Y\u0005\u00037a\u0011a!\u00118z%\u00164\u0017A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003I\tAbZ3u\r&\u00148\u000f\u001e\'j]\u0016$\"!\t\u0016\u0015\u0005\t*\u0003CA\f$\u0013\t!\u0003DA\u0002J]RDQAJ\u0002A\u0002\u001d\nA!\u001a=qeB\u0011\u0001f\u000f\b\u0003S)b\u0001\u0001C\u0003,\u0007\u0001\u0007A&A\u0004d_:$X\r\u001f;\u0011\u00055BdB\u0001\u00186\u001d\ty#G\u0004\u0002\u0018a%\u0011\u0011\u0007G\u0001\be\u00164G.Z2u\u0013\t\u0019D\'\u0001\u0004nC\u000e\u0014xn\u001d\u0006\u0003caI!AN\u001c\u0002\u000fA\f7m[1hK*\u00111\u0007N\u0005\u0003si\u0012qaQ8oi\u0016DHO\u0003\u00027o%\u0011A(\u0010\u0002\u0005)J,W-\u0003\u0002?o\t9\u0011\t\\5bg\u0016\u001c\u0018aC4fi2\u000b7\u000f\u001e\'j]\u0016$\"!\u0011$\u0015\u0005\t\u0012\u0005\"B\"\u0005\u0001\u0004!\u0015\u0001\u0002;sK\u0016\u0004\"!R\u001e\u000f\u0005%2\u0005\"B\u0016\u0005\u0001\u0004a\u0013!D4fiN{WO]2f)\u0016DH\u000f\u0006\u0002J1R\u0011!*\u0016\t\u0003\u0017Js!\u0001\u0014)\u0011\u00055CR\"\u0001(\u000b\u0005=k\u0012A\u0002\u001fs_>$h(\u0003\u0002R1\u00051\u0001K]3eK\u001aL!a\u0015+\u0003\rM#(/\u001b8h\u0015\t\t\u0006\u0004C\u0003D\u000b\u0001\u0007a\u000b\u0005\u0002Xw9\u0011\u0011\u0006\u0017\u0005\u0006W\u0015\u0001\r\u0001L\u0001\n[\u0006\u001c\'o\\%na2$\"a\u00170\u0015\u000fqC\'\u000e\u001d<\u0002\u0004A\u0019QlX1\u000f\u0005%r\u0006\"B\u0016\u0007\u0001\u0004a\u0013B\u00011>\u0005\u0011)\u0005\u0010\u001d:\u0011\u0005\t,gBA2e\u001b\u0005q\u0011B\u0001\u001c\u000f\u0013\t1wMA\u0005BgN,\'\u000f^5p]*\u0011aG\u0004\u0005\u0006S\u001a\u0001\rAS\u0001\u000b[\u0016$\bn\u001c3OC6,\u0007\"B6\u0007\u0001\u0004a\u0017!C2p]\u0012LG/[8o!\riv,\u001c\t\u0003/9L!a\u001c\r\u0003\u000f\t{w\u000e\\3b]\")\u0011O\u0002a\u0001e\u0006!1\r\\;f!\rivl\u001d\t\u0003/QL!!\u001e\r\u0003\u0007\u0005s\u0017\u0010C\u0003x\r\u0001\u0007\u00010\u0001\u0006qe\u0016$H/\u001b4jKJ\u0004$!_>\u0011\u0007u{&\u0010\u0005\u0002*w\u0012IAP^A\u0001\u0002\u0003\u0015\t! \u0002\u0004?\u0012\n\u0014C\u0001@t!\t9r0C\u0002\u0002\u0002a\u0011qAT8uQ&tw\rC\u0004\u0002\u0006\u0019\u0001\r!a\u0002\u0002\u0007A|7\u000f\u0005\u0003^?\u0006%\u0001\u0003BA\u0006\u0003+i!!!\u0004\u000b\t\u0005=\u0011\u0011C\u0001\u0007g>,(oY3\u000b\u0007\u0005M\u0001#A\u0005tG\u0006d\u0017m\u0019;jG&!\u0011qCA\u0007\u0005!\u0001vn]5uS>t\u0017AB1tg\u0016\u0014H\u000f\u0006\u0003\u0002\u001e\u0005\u0015B\u0003BA\u0010\u0003o!b!!\t\u0002(\u0005M\u0002\u0003BA\u0012?\u0006t1!KA\u0013\u0011\u0015Ys\u00011\u0001-\u0011\u00199x\u00011\u0001\u0002*A\"\u00111FA\u0018!\u0015\t\u0019cXA\u0017!\rI\u0013q\u0006\u0003\f\u0003c\t9#!A\u0001\u0002\u000b\u0005QPA\u0002`IIBq!!\u0002\b\u0001\u0004\t)\u0004E\u0003\u0002$}\u000bI\u0001\u0003\u0004l\u000f\u0001\u0007\u0011\u0011\b\t\u0005\u0003GyV.\u0001\bbgN,\'\u000f^,ji\"\u001cE.^3\u0015\t\u0005}\u0012q\t\u000b\u0007\u0003\u0003\nI&!\u0018\u0015\r\u0005\r\u0013\u0011JA+!\u0011\t)eX1\u000f\u0007%\n9\u0005C\u0003,\u0011\u0001\u0007A\u0006\u0003\u0004x\u0011\u0001\u0007\u00111\n\u0019\u0005\u0003\u001b\n\t\u0006E\u0003\u0002F}\u000by\u0005E\u0002*\u0003#\"1\"a\u0015\u0002J\u0005\u0005\t\u0011!B\u0001{\n\u0019q\fJ\u001a\t\u000f\u0005\u0015\u0001\u00021\u0001\u0002XA)\u0011QI0\u0002\n!11\u000e\u0003a\u0001\u00037\u0002B!!\u0012`[\"1\u0011\u000f\u0003a\u0001\u0003?\u0002B!!\u0012`g\u00061\u0011m]:v[\u0016$B!!\u001a\u0002nQ!\u0011qMA@)\u0019\tI\'a\u001c\u0002|A!\u00111N0b\u001d\rI\u0013Q\u000e\u0005\u0006W%\u0001\r\u0001\f\u0005\u0007o&\u0001\r!!\u001d1\t\u0005M\u0014q\u000f\t\u0006\u0003Wz\u0016Q\u000f\t\u0004S\u0005]DaCA=\u0003_\n\t\u0011!A\u0003\u0002u\u00141a\u0018\u00135\u0011\u001d\t)!\u0003a\u0001\u0003{\u0002R!a\u001b`\u0003\u0013Aaa[\u0005A\u0002\u0005\u0005\u0005\u0003BA6?6\fa\"Y:tk6,w+\u001b;i\u00072,X\r\u0006\u0003\u0002\b\u0006=ECBAE\u0003C\u000b)\u000b\u0006\u0004\u0002\f\u0006E\u0015Q\u0014\t\u0005\u0003\u001b{\u0016MD\u0002*\u0003\u001fCQa\u000b\u0006A\u00021Baa\u001e\u0006A\u0002\u0005M\u0005\u0007BAK\u00033\u0003R!!$`\u0003/\u00032!KAM\t-\tY*!%\u0002\u0002\u0003\u0005)\u0011A?\u0003\u0007}#S\u0007C\u0004\u0002\u0006)\u0001\r!a(\u0011\u000b\u00055u,!\u0003\t\r-T\u0001\u0019AAR!\u0011\tiiX7\t\rET\u0001\u0019AAT!\u0011\tiiX:
   #9 = Utf8               scala/reflect/api/Exprs$Expr
  #10 = Class              #9             // scala/reflect/api/Exprs$Expr
  #11 = Utf8               scala/reflect/api/Exprs
  #12 = Class              #11            // scala/reflect/api/Exprs
  #13 = Utf8               Expr
  #14 = Utf8               assumeWithClue
  #15 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #16 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<*>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
  #17 = Utf8               context
  #18 = Utf8               condition
  #19 = Utf8               clue
  #20 = Utf8               prettifier
  #21 = Utf8               pos
  #22 = Utf8               org/scalatest/diagrams/DiagramsMacro$
  #23 = Class              #22            // org/scalatest/diagrams/DiagramsMacro$
  #24 = Utf8               MODULE$
  #25 = Utf8               Lorg/scalatest/diagrams/DiagramsMacro$;
  #26 = NameAndType        #24:#25        // MODULE$:Lorg/scalatest/diagrams/DiagramsMacro$;
  #27 = Fieldref           #23.#26        // org/scalatest/diagrams/DiagramsMacro$.MODULE$:Lorg/scalatest/diagrams/DiagramsMacro$;
  #28 = NameAndType        #14:#15        // assumeWithClue:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #29 = Methodref          #23.#28        // org/scalatest/diagrams/DiagramsMacro$.assumeWithClue:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #30 = Utf8               Lscala/reflect/macros/whitebox/Context;
  #31 = Utf8               Lscala/reflect/api/Exprs$Expr;
  #32 = Utf8               assume
  #33 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #34 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<*>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
  #35 = NameAndType        #32:#33        // assume:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #36 = Methodref          #23.#35        // org/scalatest/diagrams/DiagramsMacro$.assume:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #37 = Utf8               assertWithClue
  #38 = NameAndType        #37:#15        // assertWithClue:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #39 = Methodref          #23.#38        // org/scalatest/diagrams/DiagramsMacro$.assertWithClue:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #40 = Utf8               assert
  #41 = NameAndType        #40:#33        // assert:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #42 = Methodref          #23.#41        // org/scalatest/diagrams/DiagramsMacro$.assert:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #43 = Utf8               Code
  #44 = Utf8               LocalVariableTable
  #45 = Utf8               Signature
  #46 = Utf8               MethodParameters
  #47 = Utf8               InnerClasses
  #48 = Utf8               SourceFile
  #49 = Utf8               RuntimeVisibleAnnotations
  #50 = Utf8               ScalaSig
{
  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assumeWithClue(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, scala.reflect.api.Exprs$Expr<java.lang.Object>, scala.reflect.api.Exprs$Expr<?>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #27                 // Field org/scalatest/diagrams/DiagramsMacro$.MODULE$:Lorg/scalatest/diagrams/DiagramsMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokevirtual #29                 // Method org/scalatest/diagrams/DiagramsMacro$.assumeWithClue:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        12: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 context   Lscala/reflect/macros/whitebox/Context;
            0      13     1 condition   Lscala/reflect/api/Exprs$Expr;
            0      13     2  clue   Lscala/reflect/api/Exprs$Expr;
            0      13     3 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      13     4   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #16                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<*>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      condition                      final
      clue                           final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assume(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, scala.reflect.api.Exprs$Expr<?>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #27                 // Field org/scalatest/diagrams/DiagramsMacro$.MODULE$:Lorg/scalatest/diagrams/DiagramsMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #36                 // Method org/scalatest/diagrams/DiagramsMacro$.assume:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 context   Lscala/reflect/macros/whitebox/Context;
            0      11     1 condition   Lscala/reflect/api/Exprs$Expr;
            0      11     2 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      11     3   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #34                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<*>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      condition                      final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertWithClue(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, scala.reflect.api.Exprs$Expr<java.lang.Object>, scala.reflect.api.Exprs$Expr<?>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #27                 // Field org/scalatest/diagrams/DiagramsMacro$.MODULE$:Lorg/scalatest/diagrams/DiagramsMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokevirtual #39                 // Method org/scalatest/diagrams/DiagramsMacro$.assertWithClue:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        12: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 context   Lscala/reflect/macros/whitebox/Context;
            0      13     1 condition   Lscala/reflect/api/Exprs$Expr;
            0      13     2  clue   Lscala/reflect/api/Exprs$Expr;
            0      13     3 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      13     4   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #16                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<*>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      condition                      final
      clue                           final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assert(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, scala.reflect.api.Exprs$Expr<?>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #27                 // Field org/scalatest/diagrams/DiagramsMacro$.MODULE$:Lorg/scalatest/diagrams/DiagramsMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #42                 // Method org/scalatest/diagrams/DiagramsMacro$.assert:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 context   Lscala/reflect/macros/whitebox/Context;
            0      11     1 condition   Lscala/reflect/api/Exprs$Expr;
            0      11     2 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      11     3   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #34                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Lscala/reflect/api/Exprs$Expr<*>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      condition                      final
      prettifier                     final
      pos                            final
}
InnerClasses:
  public #13= #10 of #12;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
SourceFile: "DiagramsMacro.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005%vAB\u0006\r\u0011\u0003q!C\u0002\u0004\u0015\u0019!\u0005a\"\u0006\u0005\u00069\u0005!\tA\b\u0005\u0007?\u0005\u0001K\u0011\u0002\u0011\t\u000b}\nA\u0011\u0002!\t\r\u001d\u000b\u0001\u0015\"\u0003I\u0011\u0015I\u0016\u0001\"\u0003[\u0011\u001d\tI\"\u0001C\u0001\u00037Aq!a\u000f\u0002\t\u0003\ti\u0004C\u0004\u0002b\u0005!\t!a\u0019\t\u000f\u0005\r\u0015\u0001\"\u0001\u0002\u0006\u0006iA)[1he\u0006l7/T1de>T!!\u0004\b\u0002\u0011\u0011L\u0017m\u001a:b[NT!a\u0004\t\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\t\u0002\u0007=\u0014x\r\u0005\u0002\u0014\u00035\tABA\u0007ES\u0006<\'/Y7t\u001b\u0006\u001c\'o\\\n\u0003\u0003Y\u0001\"a\u0006\u000e\u000e\u0003aQ\u0011!G\u0001\u0006g\u000e\fG.Y\u0005\u00037a\u0011a!\u00118z%\u00164\u0017A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003I\tAbZ3u\r&\u00148\u000f\u001e\'j]\u0016$\"!\t\u0016\u0015\u0005\t*\u0003CA\f$\u0013\t!\u0003DA\u0002J]RDQAJ\u0002A\u0002\u001d\nA!\u001a=qeB\u0011\u0001f\u000f\b\u0003S)b\u0001\u0001C\u0003,\u0007\u0001\u0007A&A\u0004d_:$X\r\u001f;\u0011\u00055BdB\u0001\u00186\u001d\ty#G\u0004\u0002\u0018a%\u0011\u0011\u0007G\u0001\be\u00164G.Z2u\u0013\t\u0019D\'\u0001\u0004nC\u000e\u0014xn\u001d\u0006\u0003caI!AN\u001c\u0002\u000fA\f7m[1hK*\u00111\u0007N\u0005\u0003si\u0012qaQ8oi\u0016DHO\u0003\u00027o%\u0011A(\u0010\u0002\u0005)J,W-\u0003\u0002?o\t9\u0011\t\\5bg\u0016\u001c\u0018aC4fi2\u000b7\u000f\u001e\'j]\u0016$\"!\u0011$\u0015\u0005\t\u0012\u0005\"B\"\u0005\u0001\u0004!\u0015\u0001\u0002;sK\u0016\u0004\"!R\u001e\u000f\u0005%2\u0005\"B\u0016\u0005\u0001\u0004a\u0013!D4fiN{WO]2f)\u0016DH\u000f\u0006\u0002J1R\u0011!*\u0016\t\u0003\u0017Js!\u0001\u0014)\u0011\u00055CR\"\u0001(\u000b\u0005=k\u0012A\u0002\u001fs_>$h(\u0003\u0002R1\u00051\u0001K]3eK\u001aL!a\u0015+\u0003\rM#(/\u001b8h\u0015\t\t\u0006\u0004C\u0003D\u000b\u0001\u0007a\u000b\u0005\u0002Xw9\u0011\u0011\u0006\u0017\u0005\u0006W\u0015\u0001\r\u0001L\u0001\n[\u0006\u001c\'o\\%na2$\"a\u00170\u0015\u000fqC\'\u000e\u001d<\u0002\u0004A\u0019QlX1\u000f\u0005%r\u0006\"B\u0016\u0007\u0001\u0004a\u0013B\u00011>\u0005\u0011)\u0005\u0010\u001d:\u0011\u0005\t,gBA2e\u001b\u0005q\u0011B\u0001\u001c\u000f\u0013\t1wMA\u0005BgN,\'\u000f^5p]*\u0011aG\u0004\u0005\u0006S\u001a\u0001\rAS\u0001\u000b[\u0016$\bn\u001c3OC6,\u0007\"B6\u0007\u0001\u0004a\u0017!C2p]\u0012LG/[8o!\riv,\u001c\t\u0003/9L!a\u001c\r\u0003\u000f\t{w\u000e\\3b]\")\u0011O\u0002a\u0001e\u0006!1\r\\;f!\rivl\u001d\t\u0003/QL!!\u001e\r\u0003\u0007\u0005s\u0017\u0010C\u0003x\r\u0001\u0007\u00010\u0001\u0006qe\u0016$H/\u001b4jKJ\u0004$!_>\u0011\u0007u{&\u0010\u0005\u0002*w\u0012IAP^A\u0001\u0002\u0003\u0015\t! \u0002\u0004?\u0012\n\u0014C\u0001@t!\t9r0C\u0002\u0002\u0002a\u0011qAT8uQ&tw\rC\u0004\u0002\u0006\u0019\u0001\r!a\u0002\u0002\u0007A|7\u000f\u0005\u0003^?\u0006%\u0001\u0003BA\u0006\u0003+i!!!\u0004\u000b\t\u0005=\u0011\u0011C\u0001\u0007g>,(oY3\u000b\u0007\u0005M\u0001#A\u0005tG\u0006d\u0017m\u0019;jG&!\u0011qCA\u0007\u0005!\u0001vn]5uS>t\u0017AB1tg\u0016\u0014H\u000f\u0006\u0003\u0002\u001e\u0005\u0015B\u0003BA\u0010\u0003o!b!!\t\u0002(\u0005M\u0002\u0003BA\u0012?\u0006t1!KA\u0013\u0011\u0015Ys\u00011\u0001-\u0011\u00199x\u00011\u0001\u0002*A\"\u00111FA\u0018!\u0015\t\u0019cXA\u0017!\rI\u0013q\u0006\u0003\f\u0003c\t9#!A\u0001\u0002\u000b\u0005QPA\u0002`IIBq!!\u0002\b\u0001\u0004\t)\u0004E\u0003\u0002$}\u000bI\u0001\u0003\u0004l\u000f\u0001\u0007\u0011\u0011\b\t\u0005\u0003GyV.\u0001\bbgN,\'\u000f^,ji\"\u001cE.^3\u0015\t\u0005}\u0012q\t\u000b\u0007\u0003\u0003\nI&!\u0018\u0015\r\u0005\r\u0013\u0011JA+!\u0011\t)eX1\u000f\u0007%\n9\u0005C\u0003,\u0011\u0001\u0007A\u0006\u0003\u0004x\u0011\u0001\u0007\u00111\n\u0019\u0005\u0003\u001b\n\t\u0006E\u0003\u0002F}\u000by\u0005E\u0002*\u0003#\"1\"a\u0015\u0002J\u0005\u0005\t\u0011!B\u0001{\n\u0019q\fJ\u001a\t\u000f\u0005\u0015\u0001\u00021\u0001\u0002XA)\u0011QI0\u0002\n!11\u000e\u0003a\u0001\u00037\u0002B!!\u0012`[\"1\u0011\u000f\u0003a\u0001\u0003?\u0002B!!\u0012`g\u00061\u0011m]:v[\u0016$B!!\u001a\u0002nQ!\u0011qMA@)\u0019\tI\'a\u001c\u0002|A!\u00111N0b\u001d\rI\u0013Q\u000e\u0005\u0006W%\u0001\r\u0001\f\u0005\u0007o&\u0001\r!!\u001d1\t\u0005M\u0014q\u000f\t\u0006\u0003Wz\u0016Q\u000f\t\u0004S\u0005]DaCA=\u0003_\n\t\u0011!A\u0003\u0002u\u00141a\u0018\u00135\u0011\u001d\t)!\u0003a\u0001\u0003{\u0002R!a\u001b`\u0003\u0013Aaa[\u0005A\u0002\u0005\u0005\u0005\u0003BA6?6\fa\"Y:tk6,w+\u001b;i\u00072,X\r\u0006\u0003\u0002\b\u0006=ECBAE\u0003C\u000b)\u000b\u0006\u0004\u0002\f\u0006E\u0015Q\u0014\t\u0005\u0003\u001b{\u0016MD\u0002*\u0003\u001fCQa\u000b\u0006A\u00021Baa\u001e\u0006A\u0002\u0005M\u0005\u0007BAK\u00033\u0003R!!$`\u0003/\u00032!KAM\t-\tY*!%\u0002\u0002\u0003\u0005)\u0011A?\u0003\u0007}#S\u0007C\u0004\u0002\u0006)\u0001\r!a(\u0011\u000b\u00055u,!\u0003\t\r-T\u0001\u0019AAR!\u0011\tiiX7\t\rET\u0001\u0019AAT!\u0011\tiiX:"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
