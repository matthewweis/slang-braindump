Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/bitcodec/Spec$DoublesImpl.class
  Last modified May 29, 2022; size 10637 bytes
  SHA-256 checksum 51e84de1fa6bd6332d1a3528f4242b2f938d6febf6c8e3995dc2d5fe866a7f67
  Compiled from "Spec.scala"
public final class org.sireum.bitcodec.Spec$DoublesImpl implements org.sireum.bitcodec.Spec$Base
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/bitcodec/Spec$DoublesImpl
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 10, methods: 37, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/bitcodec/Spec$DoublesImpl
    #2 = Class              #1            // org/sireum/bitcodec/Spec$DoublesImpl
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/bitcodec/Spec$Base
    #6 = Class              #5            // org/sireum/bitcodec/Spec$Base
    #7 = Utf8               Spec.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/bitcodec/Spec
   #14 = Class              #13           // org/sireum/bitcodec/Spec
   #15 = Utf8               Base
   #16 = Utf8               DoublesImpl
   #17 = Utf8               hashCode
   #18 = Utf8               I
   #19 = Utf8               $content
   #20 = Utf8               Lscala/collection/immutable/Seq;
   #21 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #22 = Utf8               _name
   #23 = Utf8               Ljava/lang/String;
   #24 = Utf8               _size
   #25 = Utf8               Lorg/sireum/Z;
   #26 = Utf8               _bminOpt
   #27 = Utf8               Z
   #28 = Utf8               _minOpt
   #29 = Utf8               D
   #30 = Utf8               _bmaxOpt
   #31 = Utf8               _maxOpt
   #32 = Utf8               maxSizeOpt
   #33 = Utf8               Lscala/Function1;
   #34 = Utf8               Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;
   #35 = Utf8               bitmap$0
   #36 = Utf8               B
   #37 = Utf8               toJSON
   #38 = Utf8               (Z)Ljava/lang/String;
   #39 = Utf8               isCompact
   #40 = Utf8               toJSON$
   #41 = Utf8               (Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #42 = NameAndType        #40:#41       // toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #43 = InterfaceMethodref #14.#42       // org/sireum/bitcodec/Spec.toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #44 = Utf8               this
   #45 = Utf8               Lorg/sireum/bitcodec/Spec$DoublesImpl;
   #46 = Utf8               hash
   #47 = Utf8               ()Lorg/sireum/Z;
   #48 = Utf8               org/sireum/DatatypeSig
   #49 = Class              #48           // org/sireum/DatatypeSig
   #50 = Utf8               hash$
   #51 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #52 = NameAndType        #50:#51       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #53 = InterfaceMethodref #49.#52       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #54 = Utf8               $cannotMixImmutableAndMutable
   #55 = Utf8               ()Lscala/runtime/Nothing$;
   #56 = Utf8               org/sireum/Immutable
   #57 = Class              #56           // org/sireum/Immutable
   #58 = Utf8               $cannotMixImmutableAndMutable$
   #59 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #60 = NameAndType        #58:#59       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #61 = InterfaceMethodref #57.#60       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #62 = Utf8               $hasEquals
   #63 = Utf8               ()Z
   #64 = Utf8               $hasEquals$
   #65 = Utf8               (Lorg/sireum/Immutable;)Z
   #66 = NameAndType        #64:#65       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #67 = InterfaceMethodref #57.#66       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #68 = Utf8               $hasString
   #69 = Utf8               $hasString$
   #70 = NameAndType        #69:#65       // $hasString$:(Lorg/sireum/Immutable;)Z
   #71 = InterfaceMethodref #57.#70       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #72 = Utf8               $clone
   #73 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #74 = Utf8               org/sireum/$internal/ImmutableMarker
   #75 = Class              #74           // org/sireum/$internal/ImmutableMarker
   #76 = Utf8               $clone$
   #77 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #78 = NameAndType        #76:#77       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #79 = InterfaceMethodref #75.#78       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #80 = Utf8               maxSizeOpt$lzycompute
   #81 = Utf8               ()Lscala/Function1;
   #82 = Utf8               ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;
   #83 = NameAndType        #35:#36       // bitmap$0:B
   #84 = Fieldref           #2.#83        // org/sireum/bitcodec/Spec$DoublesImpl.bitmap$0:B
   #85 = Utf8               maxSizeOpt$
   #86 = Utf8               (Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #87 = NameAndType        #85:#86       // maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #88 = InterfaceMethodref #14.#87       // org/sireum/bitcodec/Spec.maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #89 = NameAndType        #32:#33       // maxSizeOpt:Lscala/Function1;
   #90 = Fieldref           #2.#89        // org/sireum/bitcodec/Spec$DoublesImpl.maxSizeOpt:Lscala/Function1;
   #91 = Utf8               java/lang/Throwable
   #92 = Class              #91           // java/lang/Throwable
   #93 = NameAndType        #80:#81       // maxSizeOpt$lzycompute:()Lscala/Function1;
   #94 = Methodref          #2.#93        // org/sireum/bitcodec/Spec$DoublesImpl.maxSizeOpt$lzycompute:()Lscala/Function1;
   #95 = Utf8               scala/Function1
   #96 = Class              #95           // scala/Function1
   #97 = Utf8               name
   #98 = Utf8               ()Ljava/lang/String;
   #99 = NameAndType        #22:#23       // _name:Ljava/lang/String;
  #100 = Fieldref           #2.#99        // org/sireum/bitcodec/Spec$DoublesImpl._name:Ljava/lang/String;
  #101 = Utf8               getName
  #102 = Utf8               size
  #103 = NameAndType        #24:#25       // _size:Lorg/sireum/Z;
  #104 = Fieldref           #2.#103       // org/sireum/bitcodec/Spec$DoublesImpl._size:Lorg/sireum/Z;
  #105 = Utf8               getSize
  #106 = Utf8               minOpt
  #107 = Utf8               ()Lorg/sireum/Option;
  #108 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/F64;>;
  #109 = NameAndType        #26:#27       // _bminOpt:Z
  #110 = Fieldref           #2.#109       // org/sireum/bitcodec/Spec$DoublesImpl._bminOpt:Z
  #111 = Utf8               org/sireum/None$
  #112 = Class              #111          // org/sireum/None$
  #113 = Utf8               MODULE$
  #114 = Utf8               Lorg/sireum/None$;
  #115 = NameAndType        #113:#114     // MODULE$:Lorg/sireum/None$;
  #116 = Fieldref           #112.#115     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #117 = Utf8               apply
  #118 = Utf8               ()Lorg/sireum/None;
  #119 = NameAndType        #117:#118     // apply:()Lorg/sireum/None;
  #120 = Methodref          #112.#119     // org/sireum/None$.apply:()Lorg/sireum/None;
  #121 = Utf8               org/sireum/Some$
  #122 = Class              #121          // org/sireum/Some$
  #123 = Utf8               Lorg/sireum/Some$;
  #124 = NameAndType        #113:#123     // MODULE$:Lorg/sireum/Some$;
  #125 = Fieldref           #122.#124     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #126 = Utf8               org/sireum/F64
  #127 = Class              #126          // org/sireum/F64
  #128 = NameAndType        #28:#29       // _minOpt:D
  #129 = Fieldref           #2.#128       // org/sireum/bitcodec/Spec$DoublesImpl._minOpt:D
  #130 = Utf8               <init>
  #131 = Utf8               (D)V
  #132 = NameAndType        #130:#131     // "<init>":(D)V
  #133 = Methodref          #127.#132     // org/sireum/F64."<init>":(D)V
  #134 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #135 = NameAndType        #117:#134     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #136 = Methodref          #122.#135     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #137 = Utf8               getMinOpt
  #138 = NameAndType        #106:#107     // minOpt:()Lorg/sireum/Option;
  #139 = Methodref          #2.#138       // org/sireum/bitcodec/Spec$DoublesImpl.minOpt:()Lorg/sireum/Option;
  #140 = Utf8               maxOpt
  #141 = NameAndType        #30:#27       // _bmaxOpt:Z
  #142 = Fieldref           #2.#141       // org/sireum/bitcodec/Spec$DoublesImpl._bmaxOpt:Z
  #143 = NameAndType        #31:#29       // _maxOpt:D
  #144 = Fieldref           #2.#143       // org/sireum/bitcodec/Spec$DoublesImpl._maxOpt:D
  #145 = Utf8               getMaxOpt
  #146 = NameAndType        #140:#107     // maxOpt:()Lorg/sireum/Option;
  #147 = Methodref          #2.#146       // org/sireum/bitcodec/Spec$DoublesImpl.maxOpt:()Lorg/sireum/Option;
  #148 = Utf8               toString
  #149 = NameAndType        #68:#63       // $hasString:()Z
  #150 = Methodref          #2.#149       // org/sireum/bitcodec/Spec$DoublesImpl.$hasString:()Z
  #151 = Utf8               string$
  #152 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #153 = NameAndType        #151:#152     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #154 = InterfaceMethodref #49.#153      // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #155 = Utf8               java/lang/StringBuilder
  #156 = Class              #155          // java/lang/StringBuilder
  #157 = Utf8               ()V
  #158 = NameAndType        #130:#157     // "<init>":()V
  #159 = Methodref          #156.#158     // java/lang/StringBuilder."<init>":()V
  #160 = String             #16           // DoublesImpl
  #161 = Utf8               append
  #162 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #163 = NameAndType        #161:#162     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #164 = Methodref          #156.#163     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #165 = Utf8               (C)Ljava/lang/StringBuilder;
  #166 = NameAndType        #161:#165     // append:(C)Ljava/lang/StringBuilder;
  #167 = Methodref          #156.#166     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #168 = Utf8               org/sireum/String$
  #169 = Class              #168          // org/sireum/String$
  #170 = Utf8               Lorg/sireum/String$;
  #171 = NameAndType        #113:#170     // MODULE$:Lorg/sireum/String$;
  #172 = Fieldref           #169.#171     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #173 = Utf8               org/sireum/String
  #174 = Class              #173          // org/sireum/String
  #175 = NameAndType        #97:#98       // name:()Ljava/lang/String;
  #176 = Methodref          #2.#175       // org/sireum/bitcodec/Spec$DoublesImpl.name:()Ljava/lang/String;
  #177 = Utf8               (Ljava/lang/String;)V
  #178 = NameAndType        #130:#177     // "<init>":(Ljava/lang/String;)V
  #179 = Methodref          #174.#178     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #180 = Utf8               escape
  #181 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #182 = NameAndType        #180:#181     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #183 = Methodref          #169.#182     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #184 = Utf8               ,
  #185 = String             #184          // ,
  #186 = NameAndType        #102:#47      // size:()Lorg/sireum/Z;
  #187 = Methodref          #2.#186       // org/sireum/bitcodec/Spec$DoublesImpl.size:()Lorg/sireum/Z;
  #188 = NameAndType        #148:#98      // toString:()Ljava/lang/String;
  #189 = Methodref          #156.#188     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #190 = Utf8               sb
  #191 = Utf8               Ljava/lang/StringBuilder;
  #192 = Utf8               java/lang/String
  #193 = Class              #192          // java/lang/String
  #194 = Utf8               string
  #195 = Methodref          #2.#188       // org/sireum/bitcodec/Spec$DoublesImpl.toString:()Ljava/lang/String;
  #196 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #197 = NameAndType        #117:#196     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #198 = Methodref          #169.#197     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #199 = Utf8               hashCode$lzycompute
  #200 = Utf8               ()I
  #201 = NameAndType        #62:#63       // $hasEquals:()Z
  #202 = Methodref          #2.#201       // org/sireum/bitcodec/Spec$DoublesImpl.$hasEquals:()Z
  #203 = NameAndType        #17:#200      // hashCode:()I
  #204 = Methodref          #4.#203       // java/lang/Object.hashCode:()I
  #205 = Utf8               scala/package$
  #206 = Class              #205          // scala/package$
  #207 = Utf8               Lscala/package$;
  #208 = NameAndType        #113:#207     // MODULE$:Lscala/package$;
  #209 = Fieldref           #206.#208     // scala/package$.MODULE$:Lscala/package$;
  #210 = Utf8               Seq
  #211 = Utf8               ()Lscala/collection/immutable/Seq$;
  #212 = NameAndType        #210:#211     // Seq:()Lscala/collection/immutable/Seq$;
  #213 = Methodref          #206.#212     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #214 = Utf8               scala/runtime/ScalaRunTime$
  #215 = Class              #214          // scala/runtime/ScalaRunTime$
  #216 = Utf8               Lscala/runtime/ScalaRunTime$;
  #217 = NameAndType        #113:#216     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #218 = Fieldref           #215.#217     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #219 = Utf8               getClass
  #220 = Utf8               ()Ljava/lang/Class;
  #221 = NameAndType        #219:#220     // getClass:()Ljava/lang/Class;
  #222 = Methodref          #2.#221       // org/sireum/bitcodec/Spec$DoublesImpl.getClass:()Ljava/lang/Class;
  #223 = Utf8               java/lang/Class
  #224 = Class              #223          // java/lang/Class
  #225 = NameAndType        #101:#98      // getName:()Ljava/lang/String;
  #226 = Methodref          #224.#225     // java/lang/Class.getName:()Ljava/lang/String;
  #227 = Utf8               genericWrapArray
  #228 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #229 = NameAndType        #227:#228     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #230 = Methodref          #215.#229     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #231 = Utf8               scala/collection/immutable/Seq$
  #232 = Class              #231          // scala/collection/immutable/Seq$
  #233 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #234 = NameAndType        #117:#233     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #235 = Methodref          #232.#234     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #236 = Utf8               scala/collection/Seq
  #237 = Class              #236          // scala/collection/Seq
  #238 = InterfaceMethodref #237.#203     // scala/collection/Seq.hashCode:()I
  #239 = NameAndType        #17:#18       // hashCode:I
  #240 = Fieldref           #2.#239       // org/sireum/bitcodec/Spec$DoublesImpl.hashCode:I
  #241 = NameAndType        #199:#200     // hashCode$lzycompute:()I
  #242 = Methodref          #2.#241       // org/sireum/bitcodec/Spec$DoublesImpl.hashCode$lzycompute:()I
  #243 = Utf8               equals
  #244 = Utf8               (Ljava/lang/Object;)Z
  #245 = Utf8               o
  #246 = NameAndType        #243:#244     // equals:(Ljava/lang/Object;)Z
  #247 = Methodref          #4.#246       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #248 = Methodref          #2.#203       // org/sireum/bitcodec/Spec$DoublesImpl.hashCode:()I
  #249 = Utf8               Ljava/lang/Object;
  #250 = Utf8               org/sireum/Z
  #251 = Class              #250          // org/sireum/Z
  #252 = Utf8               org/sireum/Option
  #253 = Class              #252          // org/sireum/Option
  #254 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$DoublesImpl;
  #255 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/F64;>;Lorg/sireum/Option<Lorg/sireum/F64;>;)Lorg/sireum/bitcodec/Spec$DoublesImpl;
  #256 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
  #257 = NameAndType        #130:#256     // "<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
  #258 = Methodref          #2.#257       // org/sireum/bitcodec/Spec$DoublesImpl."<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
  #259 = Utf8               Lorg/sireum/Option;
  #260 = Utf8               apply$default$1
  #261 = Utf8               apply$default$2
  #262 = Utf8               apply$default$3
  #263 = Utf8               apply$default$4
  #264 = Utf8               $content$lzycompute
  #265 = Utf8               ()Lscala/collection/immutable/Seq;
  #266 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #267 = Utf8               scala/Tuple2
  #268 = Class              #267          // scala/Tuple2
  #269 = Utf8               type
  #270 = String             #269          // type
  #271 = Utf8               List
  #272 = Utf8               ()Lscala/collection/immutable/List$;
  #273 = NameAndType        #271:#272     // List:()Lscala/collection/immutable/List$;
  #274 = Methodref          #206.#273     // scala/package$.List:()Lscala/collection/immutable/List$;
  #275 = Utf8               org
  #276 = String             #275          // org
  #277 = Utf8               sireum
  #278 = String             #277          // sireum
  #279 = Utf8               bitcodec
  #280 = String             #279          // bitcodec
  #281 = Utf8               [Ljava/lang/Object;
  #282 = Class              #281          // "[Ljava/lang/Object;"
  #283 = Utf8               wrapRefArray
  #284 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #285 = NameAndType        #283:#284     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #286 = Methodref          #215.#285     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #287 = Utf8               scala/collection/immutable/List$
  #288 = Class              #287          // scala/collection/immutable/List$
  #289 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #290 = NameAndType        #117:#289     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #291 = Methodref          #288.#290     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #292 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #293 = NameAndType        #130:#292     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #294 = Methodref          #268.#293     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #295 = String             #97           // name
  #296 = String             #102          // size
  #297 = String             #106          // minOpt
  #298 = String             #140          // maxOpt
  #299 = Utf8               scala/collection/immutable/Seq
  #300 = Class              #299          // scala/collection/immutable/Seq
  #301 = NameAndType        #19:#20       // $content:Lscala/collection/immutable/Seq;
  #302 = Fieldref           #2.#301       // org/sireum/bitcodec/Spec$DoublesImpl.$content:Lscala/collection/immutable/Seq;
  #303 = NameAndType        #264:#265     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #304 = Methodref          #2.#303       // org/sireum/bitcodec/Spec$DoublesImpl.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #305 = Utf8               computeMaxSizeOpt
  #306 = Utf8               (Lscala/Function1;)Lorg/sireum/Option;
  #307 = Utf8               (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;)Lorg/sireum/Option<Lorg/sireum/Z;>;
  #308 = Utf8               enumMaxSize
  #309 = Utf8               org/sireum/Z$
  #310 = Class              #309          // org/sireum/Z$
  #311 = Utf8               Lorg/sireum/Z$;
  #312 = NameAndType        #113:#311     // MODULE$:Lorg/sireum/Z$;
  #313 = Fieldref           #310.#312     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #314 = Utf8               (I)Lorg/sireum/Z;
  #315 = NameAndType        #117:#314     // apply:(I)Lorg/sireum/Z;
  #316 = Methodref          #310.#315     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #317 = Utf8               $times
  #318 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #319 = NameAndType        #317:#318     // $times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #320 = InterfaceMethodref #251.#319     // org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #321 = Utf8               isScalar
  #322 = Utf8               org/sireum/B$
  #323 = Class              #322          // org/sireum/B$
  #324 = Utf8               Lorg/sireum/B$;
  #325 = NameAndType        #113:#324     // MODULE$:Lorg/sireum/B$;
  #326 = Fieldref           #323.#325     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #327 = Utf8               (Z)Z
  #328 = NameAndType        #117:#327     // apply:(Z)Z
  #329 = Methodref          #323.#328     // org/sireum/B$.apply:(Z)Z
  #330 = Utf8               ()Ljava/lang/Object;
  #331 = NameAndType        #72:#73       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #332 = Methodref          #2.#331       // org/sireum/bitcodec/Spec$DoublesImpl.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #333 = Utf8               $anonfun$_minOpt$6
  #334 = Utf8               ()D
  #335 = Utf8               scala/runtime/BoxesRunTime
  #336 = Class              #335          // scala/runtime/BoxesRunTime
  #337 = Utf8               unboxToDouble
  #338 = Utf8               (Ljava/lang/Object;)D
  #339 = NameAndType        #337:#338     // unboxToDouble:(Ljava/lang/Object;)D
  #340 = Methodref          #336.#339     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #341 = Utf8               $anonfun$_maxOpt$6
  #342 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/F64;>;Lorg/sireum/Option<Lorg/sireum/F64;>;)V
  #343 = Utf8               __name
  #344 = Utf8               __size
  #345 = Utf8               __minOpt
  #346 = Utf8               __maxOpt
  #347 = Methodref          #4.#158       // java/lang/Object."<init>":()V
  #348 = Utf8               $init$
  #349 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #350 = NameAndType        #348:#349     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #351 = InterfaceMethodref #75.#350      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #352 = Utf8               (Lorg/sireum/Immutable;)V
  #353 = NameAndType        #348:#352     // $init$:(Lorg/sireum/Immutable;)V
  #354 = InterfaceMethodref #57.#353      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #355 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #356 = NameAndType        #348:#355     // $init$:(Lorg/sireum/DatatypeSig;)V
  #357 = InterfaceMethodref #49.#356      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #358 = Utf8               (Lorg/sireum/bitcodec/Spec;)V
  #359 = NameAndType        #348:#358     // $init$:(Lorg/sireum/bitcodec/Spec;)V
  #360 = InterfaceMethodref #14.#359      // org/sireum/bitcodec/Spec.$init$:(Lorg/sireum/bitcodec/Spec;)V
  #361 = Utf8               isEmpty
  #362 = NameAndType        #361:#63      // isEmpty:()Z
  #363 = InterfaceMethodref #253.#362     // org/sireum/Option.isEmpty:()Z
  #364 = MethodType         #330          //  ()Ljava/lang/Object;
  #365 = Utf8               $anonfun$_minOpt$6$adapted
  #366 = NameAndType        #365:#330     // $anonfun$_minOpt$6$adapted:()Ljava/lang/Object;
  #367 = Methodref          #2.#366       // org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_minOpt$6$adapted:()Ljava/lang/Object;
  #368 = MethodHandle       6:#367        // REF_invokeStatic org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_minOpt$6$adapted:()Ljava/lang/Object;
  #369 = Integer            1
  #370 = Utf8               java/lang/invoke/LambdaMetafactory
  #371 = Class              #370          // java/lang/invoke/LambdaMetafactory
  #372 = Utf8               altMetafactory
  #373 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #374 = NameAndType        #372:#373     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #375 = Methodref          #371.#374     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #376 = MethodHandle       6:#375        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #377 = Utf8               ()Lscala/Function0;
  #378 = NameAndType        #117:#377     // apply:()Lscala/Function0;
  #379 = InvokeDynamic      #0:#378       // #0:apply:()Lscala/Function0;
  #380 = Utf8               getOrElse
  #381 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #382 = NameAndType        #380:#381     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #383 = InterfaceMethodref #253.#382     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #384 = Utf8               value
  #385 = NameAndType        #384:#334     // value:()D
  #386 = Methodref          #127.#385     // org/sireum/F64.value:()D
  #387 = Utf8               $anonfun$_maxOpt$6$adapted
  #388 = NameAndType        #387:#330     // $anonfun$_maxOpt$6$adapted:()Ljava/lang/Object;
  #389 = Methodref          #2.#388       // org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_maxOpt$6$adapted:()Ljava/lang/Object;
  #390 = MethodHandle       6:#389        // REF_invokeStatic org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_maxOpt$6$adapted:()Ljava/lang/Object;
  #391 = InvokeDynamic      #1:#378       // #1:apply:()Lscala/Function0;
  #392 = NameAndType        #333:#334     // $anonfun$_minOpt$6:()D
  #393 = Methodref          #2.#392       // org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_minOpt$6:()D
  #394 = NameAndType        #341:#334     // $anonfun$_maxOpt$6:()D
  #395 = Methodref          #2.#394       // org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_maxOpt$6:()D
  #396 = Utf8               $deserializeLambda$
  #397 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #398 = Utf8               scala/runtime/LambdaDeserialize
  #399 = Class              #398          // scala/runtime/LambdaDeserialize
  #400 = Utf8               bootstrap
  #401 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #402 = NameAndType        #400:#401     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #403 = Methodref          #399.#402     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #404 = MethodHandle       6:#403        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #405 = Utf8               lambdaDeserialize
  #406 = NameAndType        #405:#397     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #407 = InvokeDynamic      #2:#406       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #408 = Utf8               Signature
  #409 = Utf8               Code
  #410 = Utf8               LineNumberTable
  #411 = Utf8               LocalVariableTable
  #412 = Utf8               MethodParameters
  #413 = Utf8               StackMapTable
  #414 = Utf8               InnerClasses
  #415 = Utf8               SourceFile
  #416 = Utf8               BootstrapMethods
  #417 = Utf8               ScalaInlineInfo
  #418 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #21                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final java.lang.String _name;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _size;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bminOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final double _minOpt;
    descriptor: D
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bmaxOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final double _maxOpt;
    descriptor: D
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt;
    descriptor: Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Signature: #34                          // Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public java.lang.String toJSON(boolean);
    descriptor: (Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #43                 // InterfaceMethod org/sireum/bitcodec/Spec.toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
            0       6     1 isCompact   Z
    MethodParameters:
      Name                           Flags
      isCompact                      final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  private scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt$lzycompute();
    descriptor: ()Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #84                 // Field bitmap$0:B
         8: iconst_4
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     34
        15: aload_0
        16: aload_0
        17: invokestatic  #88                 // InterfaceMethod org/sireum/bitcodec/Spec.maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
        20: putfield      #90                 // Field maxSizeOpt:Lscala/Function1;
        23: aload_0
        24: aload_0
        25: getfield      #84                 // Field bitmap$0:B
        28: iconst_4
        29: ior
        30: i2b
        31: putfield      #84                 // Field bitmap$0:B
        34: aload_1
        35: monitorexit
        36: goto          42
        39: aload_1
        40: monitorexit
        41: athrow
        42: aload_0
        43: getfield      #90                 // Field maxSizeOpt:Lscala/Function1;
        46: areturn
      Exception table:
         from    to  target type
             4    34    39   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #82                          // ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  public scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field bitmap$0:B
         4: iconst_4
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #94                 // Method maxSizeOpt$lzycompute:()Lscala/Function1;
        15: goto          22
        18: aload_0
        19: getfield      #90                 // Field maxSizeOpt:Lscala/Function1;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Function1 ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #82                          // ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #100                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #100                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _size:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public org.sireum.Z getSize();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _size:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public org.sireum.Option<org.sireum.F64> minOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getfield      #110                // Field _bminOpt:Z
         4: ifeq          16
         7: getstatic     #116                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #120                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #125                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #127                // class org/sireum/F64
        22: dup
        23: aload_0
        24: getfield      #129                // Field _minOpt:D
        27: invokespecial #133                // Method org/sireum/F64."<init>":(D)V
        30: invokevirtual #136                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #108                         // ()Lorg/sireum/Option<Lorg/sireum/F64;>;

  public org.sireum.Option<org.sireum.F64> getMinOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #139                // Method minOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #108                         // ()Lorg/sireum/Option<Lorg/sireum/F64;>;

  public org.sireum.Option<org.sireum.F64> maxOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getfield      #142                // Field _bmaxOpt:Z
         4: ifeq          16
         7: getstatic     #116                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #120                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #125                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #127                // class org/sireum/F64
        22: dup
        23: aload_0
        24: getfield      #144                // Field _maxOpt:D
        27: invokespecial #133                // Method org/sireum/F64."<init>":(D)V
        30: invokevirtual #136                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #108                         // ()Lorg/sireum/Option<Lorg/sireum/F64;>;

  public org.sireum.Option<org.sireum.F64> getMaxOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #147                // Method maxOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #108                         // ()Lorg/sireum/Option<Lorg/sireum/F64;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #150                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #154                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          135
        14: new           #156                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #159                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #160                // String DoublesImpl
        25: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #167                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #172                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #174                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #176                // Method name:()Ljava/lang/String;
        48: invokespecial #179                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #183                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: ldc           #185                // String ,
        61: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: getstatic     #172                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        69: aload_0
        70: invokevirtual #187                // Method size:()Lorg/sireum/Z;
        73: invokevirtual #183                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: ldc           #185                // String ,
        83: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: getstatic     #172                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        91: aload_0
        92: invokevirtual #139                // Method minOpt:()Lorg/sireum/Option;
        95: invokevirtual #183                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        98: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: ldc           #185                // String ,
       105: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: getstatic     #172                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       113: aload_0
       114: invokevirtual #147                // Method maxOpt:()Lorg/sireum/Option;
       117: invokevirtual #183                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       120: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       123: pop
       124: aload_1
       125: bipush        41
       127: invokevirtual #167                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       135: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 120
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     113     1    sb   Ljava/lang/StringBuilder;
            0     136     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #150                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #154                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #172                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #195                // Method toString:()Ljava/lang/String;
        21: invokevirtual #198                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #84                 // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     116
        15: aload_0
        16: aload_0
        17: invokevirtual #202                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #204                // Method java/lang/Object.hashCode:()I
        27: goto          102
        30: getstatic     #209                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #213                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #218                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_5
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #222                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #226                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: new           #174                // class org/sireum/String
        58: dup
        59: aload_0
        60: invokevirtual #176                // Method name:()Ljava/lang/String;
        63: invokespecial #179                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        66: aastore
        67: dup
        68: iconst_2
        69: aload_0
        70: invokevirtual #187                // Method size:()Lorg/sireum/Z;
        73: aastore
        74: dup
        75: iconst_3
        76: aload_0
        77: invokevirtual #139                // Method minOpt:()Lorg/sireum/Option;
        80: aastore
        81: dup
        82: iconst_4
        83: aload_0
        84: invokevirtual #147                // Method maxOpt:()Lorg/sireum/Option;
        87: aastore
        88: invokevirtual #230                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        91: invokevirtual #235                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        94: checkcast     #237                // class scala/collection/Seq
        97: invokeinterface #238,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       102: putfield      #240                // Field hashCode:I
       105: aload_0
       106: aload_0
       107: getfield      #84                 // Field bitmap$0:B
       110: iconst_1
       111: ior
       112: i2b
       113: putfield      #84                 // Field bitmap$0:B
       116: aload_1
       117: monitorexit
       118: goto          124
       121: aload_1
       122: monitorexit
       123: athrow
       124: aload_0
       125: getfield      #240                // Field hashCode:I
       128: ireturn
      Exception table:
         from    to  target type
             4   116   121   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class org/sireum/bitcodec/Spec$DoublesImpl ]
          stack = [ class org/sireum/bitcodec/Spec$DoublesImpl ]
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class org/sireum/bitcodec/Spec$DoublesImpl ]
          stack = [ class org/sireum/bitcodec/Spec$DoublesImpl, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     129     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #242                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #240                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: aload_0
         1: invokevirtual #202                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          201
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          201
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/bitcodec/Spec$DoublesImpl
        30: ifeq          192
        33: aload_3
        34: checkcast     #2                  // class org/sireum/bitcodec/Spec$DoublesImpl
        37: astore        4
        39: aload_0
        40: invokevirtual #248                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #248                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          188
        55: aload_0
        56: invokevirtual #176                // Method name:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #176                // Method name:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          187
        79: aload         5
        81: invokevirtual #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          187
        87: aload_0
        88: invokevirtual #187                // Method size:()Lorg/sireum/Z;
        91: aload         4
        93: invokevirtual #187                // Method size:()Lorg/sireum/Z;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          187
       111: aload         6
       113: invokevirtual #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          187
       119: aload_0
       120: invokevirtual #139                // Method minOpt:()Lorg/sireum/Option;
       123: aload         4
       125: invokevirtual #139                // Method minOpt:()Lorg/sireum/Option;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          187
       143: aload         7
       145: invokevirtual #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          187
       151: aload_0
       152: invokevirtual #147                // Method maxOpt:()Lorg/sireum/Option;
       155: aload         4
       157: invokevirtual #147                // Method maxOpt:()Lorg/sireum/Option;
       160: astore        8
       162: dup
       163: ifnonnull     175
       166: pop
       167: aload         8
       169: ifnull        183
       172: goto          187
       175: aload         8
       177: invokevirtual #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       180: ifeq          187
       183: iconst_1
       184: goto          188
       187: iconst_0
       188: istore_2
       189: goto          200
       192: goto          195
       195: iconst_0
       196: istore_2
       197: goto          200
       200: iload_2
       201: ireturn
      StackMapTable: number_of_entries = 17
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/bitcodec/Spec$DoublesImpl ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/String, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/String, class org/sireum/Z, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/String, class org/sireum/Z, class org/sireum/Option, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$DoublesImpl ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     202     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
            0     202     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.bitcodec.Spec$DoublesImpl apply(java.lang.String, org.sireum.Z, org.sireum.Option<org.sireum.F64>, org.sireum.Option<org.sireum.F64>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$DoublesImpl;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #2                  // class org/sireum/bitcodec/Spec$DoublesImpl
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #258                // Method "<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
        12: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
            0      13     1  name   Ljava/lang/String;
            0      13     2  size   Lorg/sireum/Z;
            0      13     3 minOpt   Lorg/sireum/Option;
            0      13     4 maxOpt   Lorg/sireum/Option;
    Signature: #255                         // (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/F64;>;Lorg/sireum/Option<Lorg/sireum/F64;>;)Lorg/sireum/bitcodec/Spec$DoublesImpl;
    MethodParameters:
      Name                           Flags
      name                           final
      size                           final
      minOpt                         final
      maxOpt                         final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #176                // Method name:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #187                // Method size:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public org.sireum.Option<org.sireum.F64> apply$default$3();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #139                // Method minOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #108                         // ()Lorg/sireum/Option<Lorg/sireum/F64;>;

  public org.sireum.Option<org.sireum.F64> apply$default$4();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #147                // Method maxOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #108                         // ()Lorg/sireum/Option<Lorg/sireum/F64;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #84                 // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     188
        15: aload_0
        16: getstatic     #209                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #213                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #218                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_5
        26: anewarray     #268                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #268                // class scala/Tuple2
        34: dup
        35: ldc_w         #270                // String type
        38: getstatic     #209                // Field scala/package$.MODULE$:Lscala/package$;
        41: invokevirtual #274                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        44: getstatic     #218                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        47: iconst_4
        48: anewarray     #193                // class java/lang/String
        51: dup
        52: iconst_0
        53: ldc_w         #276                // String org
        56: aastore
        57: dup
        58: iconst_1
        59: ldc_w         #278                // String sireum
        62: aastore
        63: dup
        64: iconst_2
        65: ldc_w         #280                // String bitcodec
        68: aastore
        69: dup
        70: iconst_3
        71: ldc           #160                // String DoublesImpl
        73: aastore
        74: checkcast     #282                // class "[Ljava/lang/Object;"
        77: invokevirtual #286                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        80: invokevirtual #291                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        83: invokespecial #294                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        86: aastore
        87: dup
        88: iconst_1
        89: new           #268                // class scala/Tuple2
        92: dup
        93: ldc_w         #295                // String name
        96: new           #174                // class org/sireum/String
        99: dup
       100: aload_0
       101: invokevirtual #176                // Method name:()Ljava/lang/String;
       104: invokespecial #179                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       107: invokespecial #294                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       110: aastore
       111: dup
       112: iconst_2
       113: new           #268                // class scala/Tuple2
       116: dup
       117: ldc_w         #296                // String size
       120: aload_0
       121: invokevirtual #187                // Method size:()Lorg/sireum/Z;
       124: invokespecial #294                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       127: aastore
       128: dup
       129: iconst_3
       130: new           #268                // class scala/Tuple2
       133: dup
       134: ldc_w         #297                // String minOpt
       137: aload_0
       138: invokevirtual #139                // Method minOpt:()Lorg/sireum/Option;
       141: invokespecial #294                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       144: aastore
       145: dup
       146: iconst_4
       147: new           #268                // class scala/Tuple2
       150: dup
       151: ldc_w         #298                // String maxOpt
       154: aload_0
       155: invokevirtual #147                // Method maxOpt:()Lorg/sireum/Option;
       158: invokespecial #294                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       161: aastore
       162: checkcast     #282                // class "[Ljava/lang/Object;"
       165: invokevirtual #286                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       168: invokevirtual #235                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       171: checkcast     #300                // class scala/collection/immutable/Seq
       174: putfield      #302                // Field $content:Lscala/collection/immutable/Seq;
       177: aload_0
       178: aload_0
       179: getfield      #84                 // Field bitmap$0:B
       182: iconst_2
       183: ior
       184: i2b
       185: putfield      #84                 // Field bitmap$0:B
       188: aload_1
       189: monitorexit
       190: goto          196
       193: aload_1
       194: monitorexit
       195: athrow
       196: aload_0
       197: getfield      #302                // Field $content:Lscala/collection/immutable/Seq;
       200: areturn
      Exception table:
         from    to  target type
             4   188   193   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 188
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     201     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #266                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #304                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #302                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
    Signature: #266                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.Option<org.sireum.Z> computeMaxSizeOpt(scala.Function1<org.sireum.String, org.sireum.Z>);
    descriptor: (Lscala/Function1;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #125                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         3: aload_0
         4: invokevirtual #187                // Method size:()Lorg/sireum/Z;
         7: getstatic     #313                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: bipush        64
        12: invokevirtual #316                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        15: invokeinterface #320,  2          // InterfaceMethod org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
        20: invokevirtual #136                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        23: areturn
      LineNumberTable:
        line 317: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
            0      24     1 enumMaxSize   Lscala/Function1;
    Signature: #307                         // (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;)Lorg/sireum/Option<Lorg/sireum/Z;>;
    MethodParameters:
      Name                           Flags
      enumMaxSize                    final

  public boolean isScalar();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #326                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #187                // Method size:()Lorg/sireum/Z;
         7: getstatic     #313                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: iconst_1
        11: invokevirtual #316                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: astore_1
        15: dup
        16: ifnonnull     27
        19: pop
        20: aload_1
        21: ifnull        34
        24: goto          38
        27: aload_1
        28: invokevirtual #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: invokevirtual #329                // Method org/sireum/B$.apply:(Z)Z
        42: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$DoublesImpl, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 319: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #332                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;

  public static final double $anonfun$_minOpt$6();
    descriptor: ()D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: aconst_null
         1: invokestatic  #340                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         4: dreturn
      LineNumberTable:
        line 315: 0

  public static final double $anonfun$_maxOpt$6();
    descriptor: ()D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: aconst_null
         1: invokestatic  #340                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         4: dreturn
      LineNumberTable:
        line 315: 0

  public org.sireum.bitcodec.Spec$DoublesImpl(java.lang.String, org.sireum.Z, org.sireum.Option<org.sireum.F64>, org.sireum.Option<org.sireum.F64>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=5
         0: aload_0
         1: invokespecial #347                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #351                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #354                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #357                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: invokestatic  #360                // InterfaceMethod org/sireum/bitcodec/Spec.$init$:(Lorg/sireum/bitcodec/Spec;)V
        20: aload_0
        21: aload_1
        22: putfield      #100                // Field _name:Ljava/lang/String;
        25: aload_0
        26: aload_2
        27: putfield      #104                // Field _size:Lorg/sireum/Z;
        30: aload_0
        31: aload_3
        32: invokeinterface #363,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        37: putfield      #110                // Field _bminOpt:Z
        40: aload_0
        41: aload_3
        42: invokedynamic #379,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        47: invokeinterface #383,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        52: checkcast     #127                // class org/sireum/F64
        55: invokevirtual #386                // Method org/sireum/F64.value:()D
        58: putfield      #129                // Field _minOpt:D
        61: aload_0
        62: aload         4
        64: invokeinterface #363,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        69: putfield      #142                // Field _bmaxOpt:Z
        72: aload_0
        73: aload         4
        75: invokedynamic #391,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        80: invokeinterface #383,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        85: checkcast     #127                // class org/sireum/F64
        88: invokevirtual #386                // Method org/sireum/F64.value:()D
        91: putfield      #144                // Field _maxOpt:D
        94: return
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      95     0  this   Lorg/sireum/bitcodec/Spec$DoublesImpl;
            0      95     1 __name   Ljava/lang/String;
            0      95     2 __size   Lorg/sireum/Z;
            0      95     3 __minOpt   Lorg/sireum/Option;
            0      95     4 __maxOpt   Lorg/sireum/Option;
    Signature: #342                         // (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/F64;>;Lorg/sireum/Option<Lorg/sireum/F64;>;)V
    MethodParameters:
      Name                           Flags
      __name                         final
      __size                         final
      __minOpt                       final
      __maxOpt                       final

  public static final java.lang.Object $anonfun$_minOpt$6$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #127                // class org/sireum/F64
         3: dup
         4: invokestatic  #393                // Method $anonfun$_minOpt$6:()D
         7: invokespecial #133                // Method org/sireum/F64."<init>":(D)V
        10: areturn
      LineNumberTable:
        line 315: 0

  public static final java.lang.Object $anonfun$_maxOpt$6$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #127                // class org/sireum/F64
         3: dup
         4: invokestatic  #395                // Method $anonfun$_maxOpt$6:()D
         7: invokespecial #133                // Method org/sireum/F64."<init>":(D)V
        10: areturn
      LineNumberTable:
        line 315: 0

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #407,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #6 of #14;           // Base=class org/sireum/bitcodec/Spec$Base of class org/sireum/bitcodec/Spec
  public static final #16= #2 of #14;     // DoublesImpl=class org/sireum/bitcodec/Spec$DoublesImpl of class org/sireum/bitcodec/Spec
SourceFile: "Spec.scala"
BootstrapMethods:
  0: #376 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #364 ()Ljava/lang/Object;
      #368 REF_invokeStatic org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_minOpt$6$adapted:()Ljava/lang/Object;
      #364 ()Ljava/lang/Object;
      #369 1
  1: #376 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #364 ()Ljava/lang/Object;
      #390 REF_invokeStatic org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_maxOpt$6$adapted:()Ljava/lang/Object;
      #364 ()Ljava/lang/Object;
      #369 1
  2: #404 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #390 REF_invokeStatic org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_maxOpt$6$adapted:()Ljava/lang/Object;
      #368 REF_invokeStatic org/sireum/bitcodec/Spec$DoublesImpl.$anonfun$_minOpt$6$adapted:()Ljava/lang/Object;
  ScalaInlineInfo: length = 0xB8 (unknown attribute)
   01 01 00 24 01 55 01 4E 01 01 83 01 4A 01 01 4D
   01 4E 01 01 6D 01 4A 01 00 36 00 37 01 00 48 01
   4A 01 00 48 00 49 01 00 13 01 09 01 01 08 01 09
   01 00 3E 00 3F 01 00 44 00 3F 01 00 82 01 00 01
   00 75 00 FE 01 01 04 00 62 01 01 05 00 2F 01 01
   06 00 6B 01 01 07 00 6B 01 01 31 01 32 01 00 F3
   00 F4 01 00 91 00 6B 01 00 89 00 6B 01 00 65 00
   62 01 00 69 00 2F 01 00 2E 00 2F 01 00 11 00 C8
   01 00 C7 00 C8 01 01 41 00 3F 01 00 8C 00 6B 01
   00 20 00 51 01 00 50 00 51 01 00 6A 00 6B 01 00
   61 00 62 01 00 66 00 2F 01 00 C2 00 62 01 00 25
   00 26 01 00 94 00 62 01
  Scala: length = 0x0 (unknown attribute)

