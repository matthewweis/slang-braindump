Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Z$BV$Int.class
  Last modified May 29, 2022; size 12260 bytes
  SHA-256 checksum 9a80b55f4e1a0960ef502a995db45e48bf86ab5605e2076f0b0d79da085d6300
  Compiled from "Z.scala"
public interface org.sireum.Z$BV$Int<T extends org.sireum.Z$BV$Int<T>> extends org.sireum.ZLike<T>, org.sireum.$internal.HasBoxer
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/sireum/Z$BV$Int
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 0, methods: 66, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/Z$BV$Int
    #2 = Class              #1            // org/sireum/Z$BV$Int
    #3 = Utf8               <T::Lorg/sireum/Z$BV$Int<TT;>;>Ljava/lang/Object;Lorg/sireum/ZLike<TT;>;Lorg/sireum/$internal/HasBoxer;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/ZLike
    #7 = Class              #6            // org/sireum/ZLike
    #8 = Utf8               org/sireum/$internal/HasBoxer
    #9 = Class              #8            // org/sireum/$internal/HasBoxer
   #10 = Utf8               Z.scala
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               org/sireum/Z$BV$
   #17 = Class              #16           // org/sireum/Z$BV$
   #18 = Utf8               org/sireum/Z
   #19 = Class              #18           // org/sireum/Z
   #20 = Utf8               BV$
   #21 = Utf8               Int
   #22 = Utf8               org/sireum/Z$MP$
   #23 = Class              #22           // org/sireum/Z$MP$
   #24 = Utf8               MP$
   #25 = Utf8               org/sireum/Z$MP$BigInt
   #26 = Class              #25           // org/sireum/Z$MP$BigInt
   #27 = Utf8               BigInt
   #28 = Utf8               org/sireum/Z$MP$Long
   #29 = Class              #28           // org/sireum/Z$MP$Long
   #30 = Utf8               Long
   #31 = Utf8               org/sireum/Z$U$
   #32 = Class              #31           // org/sireum/Z$U$
   #33 = Utf8               U$
   #34 = Utf8               org/sireum/Z$U$_32$
   #35 = Class              #34           // org/sireum/Z$U$_32$
   #36 = Utf8               _32$
   #37 = Utf8               isBitVector$
   #38 = Utf8               (Lorg/sireum/Z$BV$Int;)Z
   #39 = Utf8               $this
   #40 = Utf8               isBitVector
   #41 = Utf8               ()Z
   #42 = NameAndType        #40:#41       // isBitVector:()Z
   #43 = InterfaceMethodref #2.#42        // org/sireum/Z$BV$Int.isBitVector:()Z
   #44 = Utf8               Lorg/sireum/Z$BV$Int;
   #45 = Utf8               this
   #46 = Utf8               hasMin$
   #47 = Utf8               hasMin
   #48 = NameAndType        #47:#41       // hasMin:()Z
   #49 = InterfaceMethodref #2.#48        // org/sireum/Z$BV$Int.hasMin:()Z
   #50 = Utf8               hasMax$
   #51 = Utf8               hasMax
   #52 = NameAndType        #51:#41       // hasMax:()Z
   #53 = InterfaceMethodref #2.#52        // org/sireum/Z$BV$Int.hasMax:()Z
   #54 = Utf8               value
   #55 = Utf8               ()I
   #56 = Utf8               make
   #57 = Utf8               (I)Lorg/sireum/Z$BV$Int;
   #58 = Utf8               (I)TT;
   #59 = Utf8               Min
   #60 = Utf8               ()Lorg/sireum/Z$BV$Int;
   #61 = Utf8               ()TT;
   #62 = Utf8               Max
   #63 = Utf8               Index
   #64 = Utf8               isZeroIndex
   #65 = Utf8               isWrapped
   #66 = Utf8               toU32
   #67 = Utf8               MODULE$
   #68 = Utf8               Lorg/sireum/Z$U$_32$;
   #69 = NameAndType        #67:#68       // MODULE$:Lorg/sireum/Z$U$_32$;
   #70 = Fieldref           #35.#69       // org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
   #71 = NameAndType        #54:#55       // value:()I
   #72 = InterfaceMethodref #2.#71        // org/sireum/Z$BV$Int.value:()I
   #73 = Utf8               apply
   #74 = Utf8               (I)I
   #75 = NameAndType        #73:#74       // apply:(I)I
   #76 = Methodref          #35.#75       // org/sireum/Z$U$_32$.apply:(I)I
   #77 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
   #78 = Utf8               (Lorg/sireum/Z;)TT;
   #79 = Utf8               scala/Predef$
   #80 = Class              #79           // scala/Predef$
   #81 = Utf8               Lscala/Predef$;
   #82 = NameAndType        #67:#81       // MODULE$:Lscala/Predef$;
   #83 = Fieldref           #80.#82       // scala/Predef$.MODULE$:Lscala/Predef$;
   #84 = Utf8               org/sireum/B$
   #85 = Class              #84           // org/sireum/B$
   #86 = Utf8               Lorg/sireum/B$;
   #87 = NameAndType        #67:#86       // MODULE$:Lorg/sireum/B$;
   #88 = Fieldref           #85.#87       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #89 = NameAndType        #59:#60       // Min:()Lorg/sireum/Z$BV$Int;
   #90 = InterfaceMethodref #2.#89        // org/sireum/Z$BV$Int.Min:()Lorg/sireum/Z$BV$Int;
   #91 = Utf8               toMP
   #92 = Utf8               ()Lorg/sireum/Z;
   #93 = NameAndType        #91:#92       // toMP:()Lorg/sireum/Z;
   #94 = InterfaceMethodref #2.#93        // org/sireum/Z$BV$Int.toMP:()Lorg/sireum/Z;
   #95 = Utf8               $less$eq
   #96 = Utf8               (Lorg/sireum/Z;)Z
   #97 = NameAndType        #95:#96       // $less$eq:(Lorg/sireum/Z;)Z
   #98 = InterfaceMethodref #19.#97       // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
   #99 = Utf8               $4B
  #100 = Utf8               (Z)Z
  #101 = NameAndType        #99:#100      // $4B:(Z)Z
  #102 = Methodref          #85.#101      // org/sireum/B$.$4B:(Z)Z
  #103 = Utf8               ()Ljava/lang/Object;
  #104 = MethodType         #103          //  ()Ljava/lang/Object;
  #105 = Utf8               $anonfun$make$5
  #106 = Utf8               (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  #107 = NameAndType        #105:#106     // $anonfun$make$5:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  #108 = InterfaceMethodref #2.#107       // org/sireum/Z$BV$Int.$anonfun$make$5:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  #109 = MethodHandle       6:#108        // REF_invokeStatic org/sireum/Z$BV$Int.$anonfun$make$5:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  #110 = Utf8               ()Ljava/lang/String;
  #111 = MethodType         #110          //  ()Ljava/lang/String;
  #112 = Integer            5
  #113 = Integer            1
  #114 = Utf8               java/lang/invoke/LambdaMetafactory
  #115 = Class              #114          // java/lang/invoke/LambdaMetafactory
  #116 = Utf8               altMetafactory
  #117 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #118 = NameAndType        #116:#117     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #119 = Methodref          #115.#118     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #120 = MethodHandle       6:#119        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #121 = Utf8               (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Lscala/Function0;
  #122 = NameAndType        #73:#121      // apply:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Lscala/Function0;
  #123 = InvokeDynamic      #0:#122       // #0:apply:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Lscala/Function0;
  #124 = Utf8               assert
  #125 = Utf8               (ZLscala/Function0;)V
  #126 = NameAndType        #124:#125     // assert:(ZLscala/Function0;)V
  #127 = Methodref          #80.#126      // scala/Predef$.assert:(ZLscala/Function0;)V
  #128 = NameAndType        #62:#60       // Max:()Lorg/sireum/Z$BV$Int;
  #129 = InterfaceMethodref #2.#128       // org/sireum/Z$BV$Int.Max:()Lorg/sireum/Z$BV$Int;
  #130 = Utf8               $anonfun$make$6
  #131 = NameAndType        #130:#106     // $anonfun$make$6:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  #132 = InterfaceMethodref #2.#131       // org/sireum/Z$BV$Int.$anonfun$make$6:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  #133 = MethodHandle       6:#132        // REF_invokeStatic org/sireum/Z$BV$Int.$anonfun$make$6:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  #134 = InvokeDynamic      #1:#122       // #1:apply:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Lscala/Function0;
  #135 = Utf8               ()J
  #136 = NameAndType        #54:#135      // value:()J
  #137 = Methodref          #29.#136      // org/sireum/Z$MP$Long.value:()J
  #138 = Utf8               ()Lscala/math/BigInt;
  #139 = NameAndType        #54:#138      // value:()Lscala/math/BigInt;
  #140 = Methodref          #26.#139      // org/sireum/Z$MP$BigInt.value:()Lscala/math/BigInt;
  #141 = Utf8               scala/math/BigInt
  #142 = Class              #141          // scala/math/BigInt
  #143 = Utf8               toInt
  #144 = NameAndType        #143:#55      // toInt:()I
  #145 = Methodref          #142.#144     // scala/math/BigInt.toInt:()I
  #146 = Utf8               scala/MatchError
  #147 = Class              #146          // scala/MatchError
  #148 = Utf8               <init>
  #149 = Utf8               (Ljava/lang/Object;)V
  #150 = NameAndType        #148:#149     // "<init>":(Ljava/lang/Object;)V
  #151 = Methodref          #147.#150     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #152 = NameAndType        #56:#57       // make:(I)Lorg/sireum/Z$BV$Int;
  #153 = InterfaceMethodref #2.#152       // org/sireum/Z$BV$Int.make:(I)Lorg/sireum/Z$BV$Int;
  #154 = Utf8               n
  #155 = Utf8               J
  #156 = Utf8               Lscala/math/BigInt;
  #157 = Utf8               Lorg/sireum/Z;
  #158 = Utf8               umake
  #159 = Utf8               I
  #160 = Utf8               unary_$minus$
  #161 = Utf8               (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #162 = Utf8               unary_$minus
  #163 = NameAndType        #162:#60      // unary_$minus:()Lorg/sireum/Z$BV$Int;
  #164 = InterfaceMethodref #2.#163       // org/sireum/Z$BV$Int.unary_$minus:()Lorg/sireum/Z$BV$Int;
  #165 = NameAndType        #65:#41       // isWrapped:()Z
  #166 = InterfaceMethodref #2.#165       // org/sireum/Z$BV$Int.isWrapped:()Z
  #167 = NameAndType        #162:#92      // unary_$minus:()Lorg/sireum/Z;
  #168 = InterfaceMethodref #19.#167      // org/sireum/Z.unary_$minus:()Lorg/sireum/Z;
  #169 = NameAndType        #56:#77       // make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
  #170 = InterfaceMethodref #2.#169       // org/sireum/Z$BV$Int.make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
  #171 = Utf8               isSigned
  #172 = NameAndType        #171:#41      // isSigned:()Z
  #173 = InterfaceMethodref #2.#172       // org/sireum/Z$BV$Int.isSigned:()Z
  #174 = NameAndType        #66:#55       // toU32:()I
  #175 = InterfaceMethodref #2.#174       // org/sireum/Z$BV$Int.toU32:()I
  #176 = Utf8               unary_$minus$extension
  #177 = NameAndType        #176:#74      // unary_$minus$extension:(I)I
  #178 = Methodref          #35.#177      // org/sireum/Z$U$_32$.unary_$minus$extension:(I)I
  #179 = NameAndType        #158:#57      // umake:(I)Lorg/sireum/Z$BV$Int;
  #180 = InterfaceMethodref #2.#179       // org/sireum/Z$BV$Int.umake:(I)Lorg/sireum/Z$BV$Int;
  #181 = Utf8               $plus$
  #182 = Utf8               (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #183 = Utf8               other
  #184 = Utf8               $plus
  #185 = NameAndType        #184:#161     // $plus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #186 = InterfaceMethodref #2.#185       // org/sireum/Z$BV$Int.$plus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #187 = Utf8               (TT;)TT;
  #188 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #189 = NameAndType        #184:#188     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #190 = InterfaceMethodref #19.#189      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #191 = Utf8               $plus$extension
  #192 = Utf8               (II)I
  #193 = NameAndType        #191:#192     // $plus$extension:(II)I
  #194 = Methodref          #35.#193      // org/sireum/Z$U$_32$.$plus$extension:(II)I
  #195 = Utf8               $minus$
  #196 = Utf8               $minus
  #197 = NameAndType        #196:#161     // $minus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #198 = InterfaceMethodref #2.#197       // org/sireum/Z$BV$Int.$minus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #199 = NameAndType        #196:#188     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #200 = InterfaceMethodref #19.#199      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #201 = Utf8               $minus$extension
  #202 = NameAndType        #201:#192     // $minus$extension:(II)I
  #203 = Methodref          #35.#202      // org/sireum/Z$U$_32$.$minus$extension:(II)I
  #204 = Utf8               $times$
  #205 = Utf8               $times
  #206 = NameAndType        #205:#161     // $times:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #207 = InterfaceMethodref #2.#206       // org/sireum/Z$BV$Int.$times:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #208 = NameAndType        #205:#188     // $times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #209 = InterfaceMethodref #19.#208      // org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #210 = Utf8               $times$extension
  #211 = NameAndType        #210:#192     // $times$extension:(II)I
  #212 = Methodref          #35.#211      // org/sireum/Z$U$_32$.$times$extension:(II)I
  #213 = Utf8               $div$
  #214 = Utf8               $div
  #215 = NameAndType        #214:#161     // $div:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #216 = InterfaceMethodref #2.#215       // org/sireum/Z$BV$Int.$div:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #217 = NameAndType        #214:#188     // $div:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #218 = InterfaceMethodref #19.#217      // org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #219 = Utf8               $div$extension
  #220 = NameAndType        #219:#192     // $div$extension:(II)I
  #221 = Methodref          #35.#220      // org/sireum/Z$U$_32$.$div$extension:(II)I
  #222 = Utf8               $percent$
  #223 = Utf8               $percent
  #224 = NameAndType        #223:#161     // $percent:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #225 = InterfaceMethodref #2.#224       // org/sireum/Z$BV$Int.$percent:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #226 = NameAndType        #223:#188     // $percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #227 = InterfaceMethodref #19.#226      // org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #228 = Utf8               $percent$extension
  #229 = NameAndType        #228:#192     // $percent$extension:(II)I
  #230 = Methodref          #35.#229      // org/sireum/Z$U$_32$.$percent$extension:(II)I
  #231 = Utf8               $greater$
  #232 = Utf8               (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Z
  #233 = Utf8               $greater
  #234 = NameAndType        #233:#38      // $greater:(Lorg/sireum/Z$BV$Int;)Z
  #235 = InterfaceMethodref #2.#234       // org/sireum/Z$BV$Int.$greater:(Lorg/sireum/Z$BV$Int;)Z
  #236 = Utf8               (TT;)Z
  #237 = NameAndType        #73:#100      // apply:(Z)Z
  #238 = Methodref          #85.#237      // org/sireum/B$.apply:(Z)Z
  #239 = Utf8               $greater$extension
  #240 = Utf8               (II)Z
  #241 = NameAndType        #239:#240     // $greater$extension:(II)Z
  #242 = Methodref          #35.#241      // org/sireum/Z$U$_32$.$greater$extension:(II)Z
  #243 = Utf8               $greater$eq$
  #244 = Utf8               $greater$eq
  #245 = NameAndType        #244:#38      // $greater$eq:(Lorg/sireum/Z$BV$Int;)Z
  #246 = InterfaceMethodref #2.#245       // org/sireum/Z$BV$Int.$greater$eq:(Lorg/sireum/Z$BV$Int;)Z
  #247 = Utf8               $greater$eq$extension
  #248 = NameAndType        #247:#240     // $greater$eq$extension:(II)Z
  #249 = Methodref          #35.#248      // org/sireum/Z$U$_32$.$greater$eq$extension:(II)Z
  #250 = Utf8               $less$
  #251 = Utf8               $less
  #252 = NameAndType        #251:#38      // $less:(Lorg/sireum/Z$BV$Int;)Z
  #253 = InterfaceMethodref #2.#252       // org/sireum/Z$BV$Int.$less:(Lorg/sireum/Z$BV$Int;)Z
  #254 = Utf8               $less$extension
  #255 = NameAndType        #254:#240     // $less$extension:(II)Z
  #256 = Methodref          #35.#255      // org/sireum/Z$U$_32$.$less$extension:(II)Z
  #257 = Utf8               $less$eq$
  #258 = NameAndType        #95:#38       // $less$eq:(Lorg/sireum/Z$BV$Int;)Z
  #259 = InterfaceMethodref #2.#258       // org/sireum/Z$BV$Int.$less$eq:(Lorg/sireum/Z$BV$Int;)Z
  #260 = Utf8               $less$eq$extension
  #261 = NameAndType        #260:#240     // $less$eq$extension:(II)Z
  #262 = Methodref          #35.#261      // org/sireum/Z$U$_32$.$less$eq$extension:(II)Z
  #263 = Utf8               $greater$greater$
  #264 = Utf8               $greater$greater
  #265 = NameAndType        #264:#161     // $greater$greater:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #266 = InterfaceMethodref #2.#265       // org/sireum/Z$BV$Int.$greater$greater:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #267 = Utf8               $greater$greater$greater
  #268 = NameAndType        #267:#161     // $greater$greater$greater:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #269 = InterfaceMethodref #2.#268       // org/sireum/Z$BV$Int.$greater$greater$greater:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #270 = Utf8               $greater$greater$greater$
  #271 = Utf8               $greater$greater$greater$extension
  #272 = NameAndType        #271:#192     // $greater$greater$greater$extension:(II)I
  #273 = Methodref          #35.#272      // org/sireum/Z$U$_32$.$greater$greater$greater$extension:(II)I
  #274 = Utf8               $less$less$
  #275 = Utf8               $less$less
  #276 = NameAndType        #275:#161     // $less$less:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #277 = InterfaceMethodref #2.#276       // org/sireum/Z$BV$Int.$less$less:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #278 = Utf8               $less$less$extension
  #279 = NameAndType        #278:#192     // $less$less$extension:(II)I
  #280 = Methodref          #35.#279      // org/sireum/Z$U$_32$.$less$less$extension:(II)I
  #281 = Utf8               $amp$
  #282 = Utf8               $amp
  #283 = NameAndType        #282:#161     // $amp:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #284 = InterfaceMethodref #2.#283       // org/sireum/Z$BV$Int.$amp:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #285 = Utf8               $amp$extension
  #286 = NameAndType        #285:#192     // $amp$extension:(II)I
  #287 = Methodref          #35.#286      // org/sireum/Z$U$_32$.$amp$extension:(II)I
  #288 = Utf8               $bar$
  #289 = Utf8               $bar
  #290 = NameAndType        #289:#161     // $bar:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #291 = InterfaceMethodref #2.#290       // org/sireum/Z$BV$Int.$bar:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #292 = Utf8               $bar$extension
  #293 = NameAndType        #292:#192     // $bar$extension:(II)I
  #294 = Methodref          #35.#293      // org/sireum/Z$U$_32$.$bar$extension:(II)I
  #295 = Utf8               $bar$up$
  #296 = Utf8               $bar$up
  #297 = NameAndType        #296:#161     // $bar$up:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #298 = InterfaceMethodref #2.#297       // org/sireum/Z$BV$Int.$bar$up:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #299 = Utf8               $up$extension
  #300 = NameAndType        #299:#192     // $up$extension:(II)I
  #301 = Methodref          #35.#300      // org/sireum/Z$U$_32$.$up$extension:(II)I
  #302 = Utf8               unary_$tilde$
  #303 = Utf8               unary_$tilde
  #304 = NameAndType        #303:#60      // unary_$tilde:()Lorg/sireum/Z$BV$Int;
  #305 = InterfaceMethodref #2.#304       // org/sireum/Z$BV$Int.unary_$tilde:()Lorg/sireum/Z$BV$Int;
  #306 = Utf8               unary_$tilde$extension
  #307 = NameAndType        #306:#74      // unary_$tilde$extension:(I)I
  #308 = Methodref          #35.#307      // org/sireum/Z$U$_32$.unary_$tilde$extension:(I)I
  #309 = Utf8               increase$
  #310 = Utf8               increase
  #311 = NameAndType        #310:#60      // increase:()Lorg/sireum/Z$BV$Int;
  #312 = InterfaceMethodref #2.#311       // org/sireum/Z$BV$Int.increase:()Lorg/sireum/Z$BV$Int;
  #313 = Utf8               decrease$
  #314 = Utf8               decrease
  #315 = NameAndType        #314:#60      // decrease:()Lorg/sireum/Z$BV$Int;
  #316 = InterfaceMethodref #2.#315       // org/sireum/Z$BV$Int.decrease:()Lorg/sireum/Z$BV$Int;
  #317 = Utf8               toString$
  #318 = Utf8               (Lorg/sireum/Z$BV$Int;)Ljava/lang/String;
  #319 = Utf8               toString
  #320 = NameAndType        #319:#110     // toString:()Ljava/lang/String;
  #321 = InterfaceMethodref #2.#320       // org/sireum/Z$BV$Int.toString:()Ljava/lang/String;
  #322 = Utf8               java/lang/Integer
  #323 = Class              #322          // java/lang/Integer
  #324 = Utf8               (I)Ljava/lang/String;
  #325 = NameAndType        #319:#324     // toString:(I)Ljava/lang/String;
  #326 = Methodref          #323.#325     // java/lang/Integer.toString:(I)Ljava/lang/String;
  #327 = Utf8               toString$extension
  #328 = NameAndType        #327:#324     // toString$extension:(I)Ljava/lang/String;
  #329 = Methodref          #35.#328      // org/sireum/Z$U$_32$.toString$extension:(I)Ljava/lang/String;
  #330 = Utf8               java/lang/String
  #331 = Class              #330          // java/lang/String
  #332 = Utf8               toBigInt$
  #333 = Utf8               (Lorg/sireum/Z$BV$Int;)Lscala/math/BigInt;
  #334 = Utf8               toBigInt
  #335 = NameAndType        #334:#138     // toBigInt:()Lscala/math/BigInt;
  #336 = InterfaceMethodref #2.#335       // org/sireum/Z$BV$Int.toBigInt:()Lscala/math/BigInt;
  #337 = Utf8               scala/package$
  #338 = Class              #337          // scala/package$
  #339 = Utf8               Lscala/package$;
  #340 = NameAndType        #67:#339      // MODULE$:Lscala/package$;
  #341 = Fieldref           #338.#340     // scala/package$.MODULE$:Lscala/package$;
  #342 = Utf8               ()Lscala/math/BigInt$;
  #343 = NameAndType        #27:#342      // BigInt:()Lscala/math/BigInt$;
  #344 = Methodref          #338.#343     // scala/package$.BigInt:()Lscala/math/BigInt$;
  #345 = Utf8               scala/math/BigInt$
  #346 = Class              #345          // scala/math/BigInt$
  #347 = Utf8               (I)Lscala/math/BigInt;
  #348 = NameAndType        #73:#347      // apply:(I)Lscala/math/BigInt;
  #349 = Methodref          #346.#348     // scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
  #350 = Utf8               org/sireum/Z$
  #351 = Class              #350          // org/sireum/Z$
  #352 = Utf8               Lorg/sireum/Z$;
  #353 = NameAndType        #67:#352      // MODULE$:Lorg/sireum/Z$;
  #354 = Fieldref           #351.#353     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #355 = Utf8               toLong$extension
  #356 = Utf8               (I)J
  #357 = NameAndType        #355:#356     // toLong$extension:(I)J
  #358 = Methodref          #35.#357      // org/sireum/Z$U$_32$.toLong$extension:(I)J
  #359 = Utf8               (J)Lorg/sireum/Z;
  #360 = NameAndType        #73:#359      // apply:(J)Lorg/sireum/Z;
  #361 = Methodref          #351.#360     // org/sireum/Z$.apply:(J)Lorg/sireum/Z;
  #362 = InterfaceMethodref #19.#335      // org/sireum/Z.toBigInt:()Lscala/math/BigInt;
  #363 = Utf8               toMP$
  #364 = Utf8               (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z;
  #365 = Utf8               Lorg/sireum/Z$MP$;
  #366 = NameAndType        #67:#365      // MODULE$:Lorg/sireum/Z$MP$;
  #367 = Fieldref           #23.#366      // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
  #368 = Utf8               (I)Lorg/sireum/Z;
  #369 = NameAndType        #73:#368      // apply:(I)Lorg/sireum/Z;
  #370 = Methodref          #23.#369      // org/sireum/Z$MP$.apply:(I)Lorg/sireum/Z;
  #371 = Methodref          #23.#360      // org/sireum/Z$MP$.apply:(J)Lorg/sireum/Z;
  #372 = Utf8               toIndex$
  #373 = Utf8               toIndex
  #374 = NameAndType        #373:#92      // toIndex:()Lorg/sireum/Z;
  #375 = InterfaceMethodref #2.#374       // org/sireum/Z$BV$Int.toIndex:()Lorg/sireum/Z;
  #376 = NameAndType        #64:#41       // isZeroIndex:()Z
  #377 = InterfaceMethodref #2.#376       // org/sireum/Z$BV$Int.isZeroIndex:()Z
  #378 = NameAndType        #63:#60       // Index:()Lorg/sireum/Z$BV$Int;
  #379 = InterfaceMethodref #2.#378       // org/sireum/Z$BV$Int.Index:()Lorg/sireum/Z$BV$Int;
  #380 = Utf8               value$3
  #381 = Utf8               java/lang/StringBuilder
  #382 = Class              #381          // java/lang/StringBuilder
  #383 = Integer            32
  #384 = Utf8               (I)V
  #385 = NameAndType        #148:#384     // "<init>":(I)V
  #386 = Methodref          #382.#385     // java/lang/StringBuilder."<init>":(I)V
  #387 = Utf8               append
  #388 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #389 = NameAndType        #387:#388     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #390 = Methodref          #382.#389     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #391 = Utf8                should not be less than
  #392 = String             #391          //  should not be less than
  #393 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #394 = NameAndType        #387:#393     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #395 = Methodref          #382.#394     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #396 = Utf8               Name
  #397 = NameAndType        #396:#110     // Name:()Ljava/lang/String;
  #398 = InterfaceMethodref #2.#397       // org/sireum/Z$BV$Int.Name:()Ljava/lang/String;
  #399 = Utf8               .Min (
  #400 = String             #399          // .Min (
  #401 = Utf8               )
  #402 = String             #401          // )
  #403 = Methodref          #382.#320     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #404 = Integer            35
  #405 = Utf8                should not be greater than
  #406 = String             #405          //  should not be greater than
  #407 = Utf8               .Max (
  #408 = String             #407          // .Max (
  #409 = Utf8               $init$
  #410 = Utf8               (Lorg/sireum/Z$BV$Int;)V
  #411 = Utf8               $deserializeLambda$
  #412 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #413 = Utf8               scala/runtime/LambdaDeserialize
  #414 = Class              #413          // scala/runtime/LambdaDeserialize
  #415 = Utf8               bootstrap
  #416 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #417 = NameAndType        #415:#416     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #418 = Methodref          #414.#417     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #419 = MethodHandle       6:#418        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #420 = Utf8               lambdaDeserialize
  #421 = NameAndType        #420:#412     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #422 = InvokeDynamic      #2:#421       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #423 = Utf8               Code
  #424 = Utf8               LineNumberTable
  #425 = Utf8               LocalVariableTable
  #426 = Utf8               MethodParameters
  #427 = Utf8               Signature
  #428 = Utf8               StackMapTable
  #429 = Utf8               InnerClasses
  #430 = Utf8               SourceFile
  #431 = Utf8               BootstrapMethods
  #432 = Utf8               ScalaInlineInfo
  #433 = Utf8               Scala
{
  public static boolean isBitVector$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #43                 // InterfaceMethod isBitVector:()Z
         4: ireturn
      LineNumberTable:
        line 765: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean isBitVector();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 765: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/Z$BV$Int;

  public static boolean hasMin$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #49                 // InterfaceMethod hasMin:()Z
         4: ireturn
      LineNumberTable:
        line 767: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean hasMin();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 767: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/Z$BV$Int;

  public static boolean hasMax$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #53                 // InterfaceMethod hasMax:()Z
         4: ireturn
      LineNumberTable:
        line 769: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean hasMax();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 769: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/Z$BV$Int;

  public abstract int value();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract T make(int);
    descriptor: (I)Lorg/sireum/Z$BV$Int;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #58                          // (I)TT;
    MethodParameters:
      Name                           Flags
      value                          final

  public abstract T Min();
    descriptor: ()Lorg/sireum/Z$BV$Int;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #61                          // ()TT;

  public abstract T Max();
    descriptor: ()Lorg/sireum/Z$BV$Int;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #61                          // ()TT;

  public abstract T Index();
    descriptor: ()Lorg/sireum/Z$BV$Int;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #61                          // ()TT;

  public abstract boolean isZeroIndex();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isWrapped();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  private int toU32();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
         3: aload_0
         4: invokeinterface #72,  1           // InterfaceMethod value:()I
         9: invokevirtual #76                 // Method org/sireum/Z$U$_32$.apply:(I)I
        12: ireturn
      LineNumberTable:
        line 785: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/Z$BV$Int;

  private T make(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=9, args_size=2
         0: getstatic     #83                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_0
         7: invokeinterface #90,  1           // InterfaceMethod Min:()Lorg/sireum/Z$BV$Int;
        12: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        17: aload_1
        18: invokeinterface #98,  2           // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        23: invokevirtual #102                // Method org/sireum/B$.$4B:(Z)Z
        26: aload_0
        27: aload_1
        28: invokedynamic #123,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Lscala/Function0;
        33: invokevirtual #127                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        36: getstatic     #83                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        39: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        42: aload_1
        43: aload_0
        44: invokeinterface #129,  1          // InterfaceMethod Max:()Lorg/sireum/Z$BV$Int;
        49: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        54: invokeinterface #98,  2           // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        59: invokevirtual #102                // Method org/sireum/B$.$4B:(Z)Z
        62: aload_0
        63: aload_1
        64: invokedynamic #134,  0            // InvokeDynamic #1:apply:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Lscala/Function0;
        69: invokevirtual #127                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        72: aload_0
        73: aload_1
        74: astore_3
        75: aload_3
        76: instanceof    #29                 // class org/sireum/Z$MP$Long
        79: ifeq          102
        82: aload_3
        83: checkcast     #29                 // class org/sireum/Z$MP$Long
        86: astore        4
        88: aload         4
        90: invokevirtual #137                // Method org/sireum/Z$MP$Long.value:()J
        93: lstore        5
        95: lload         5
        97: l2i
        98: istore_2
        99: goto          146
       102: goto          105
       105: aload_3
       106: instanceof    #26                 // class org/sireum/Z$MP$BigInt
       109: ifeq          134
       112: aload_3
       113: checkcast     #26                 // class org/sireum/Z$MP$BigInt
       116: astore        7
       118: aload         7
       120: invokevirtual #140                // Method org/sireum/Z$MP$BigInt.value:()Lscala/math/BigInt;
       123: astore        8
       125: aload         8
       127: invokevirtual #145                // Method scala/math/BigInt.toInt:()I
       130: istore_2
       131: goto          146
       134: goto          137
       137: new           #147                // class scala/MatchError
       140: dup
       141: aload_3
       142: invokespecial #151                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       145: athrow
       146: iload_2
       147: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
       152: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 102
          locals = [ class org/sireum/Z$BV$Int, class org/sireum/Z, top, class org/sireum/Z ]
          stack = [ class org/sireum/Z$BV$Int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
        frame_type = 92 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class org/sireum/Z$BV$Int, class org/sireum/Z, int, class org/sireum/Z ]
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 788: 0
        line 789: 36
        line 790: 72
        line 791: 75
        line 792: 105
        line 790: 137
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           95       7     5     n   J
          125       9     8     n   Lscala/math/BigInt;
            0     153     0  this   Lorg/sireum/Z$BV$Int;
            0     153     1 value   Lorg/sireum/Z;
    Signature: #78                          // (Lorg/sireum/Z;)TT;
    MethodParameters:
      Name                           Flags
      value                          final

  private T umake(int);
    descriptor: (I)Lorg/sireum/Z$BV$Int;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
         7: areturn
      LineNumberTable:
        line 796: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Z$BV$Int;
            0       8     1 value   I
    Signature: #58                          // (I)TT;
    MethodParameters:
      Name                           Flags
      value                          final

  public static org.sireum.Z$BV$Int unary_$minus$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #164                // InterfaceMethod unary_$minus:()Lorg/sireum/Z$BV$Int;
         4: areturn
      LineNumberTable:
        line 798: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default T unary_$minus();
    descriptor: ()Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #166,  1          // InterfaceMethod isWrapped:()Z
         6: ifne          27
         9: aload_0
        10: aload_0
        11: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        16: invokeinterface #168,  1          // InterfaceMethod org/sireum/Z.unary_$minus:()Lorg/sireum/Z;
        21: invokespecial #170                // InterfaceMethod make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
        24: goto          66
        27: aload_0
        28: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
        33: ifeq          52
        36: aload_0
        37: aload_0
        38: invokeinterface #72,  1           // InterfaceMethod value:()I
        43: ineg
        44: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        49: goto          66
        52: aload_0
        53: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        56: aload_0
        57: invokespecial #175                // InterfaceMethod toU32:()I
        60: invokevirtual #178                // Method org/sireum/Z$U$_32$.unary_$minus$extension:(I)I
        63: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        66: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 27 /* same */
        frame_type = 24 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 799: 0
        line 800: 27
        line 801: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      67     0  this   Lorg/sireum/Z$BV$Int;
    Signature: #61                          // ()TT;

  public static org.sireum.Z$BV$Int $plus$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #186                // InterfaceMethod $plus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 803: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $plus(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #166,  1          // InterfaceMethod isWrapped:()Z
         6: ifne          33
         9: aload_0
        10: aload_0
        11: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        16: aload_1
        17: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        22: invokeinterface #190,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: invokespecial #170                // InterfaceMethod make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
        30: goto          82
        33: aload_0
        34: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
        39: ifeq          64
        42: aload_0
        43: aload_0
        44: invokeinterface #72,  1           // InterfaceMethod value:()I
        49: aload_1
        50: invokeinterface #72,  1           // InterfaceMethod value:()I
        55: iadd
        56: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        61: goto          82
        64: aload_0
        65: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        68: aload_0
        69: invokespecial #175                // InterfaceMethod toU32:()I
        72: aload_1
        73: invokespecial #175                // InterfaceMethod toU32:()I
        76: invokevirtual #194                // Method org/sireum/Z$U$_32$.$plus$extension:(II)I
        79: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        82: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 33 /* same */
        frame_type = 30 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 804: 0
        line 805: 33
        line 806: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lorg/sireum/Z$BV$Int;
            0      83     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $minus$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #198                // InterfaceMethod $minus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 809: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $minus(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #166,  1          // InterfaceMethod isWrapped:()Z
         6: ifne          33
         9: aload_0
        10: aload_0
        11: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        16: aload_1
        17: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        22: invokeinterface #200,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: invokespecial #170                // InterfaceMethod make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
        30: goto          82
        33: aload_0
        34: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
        39: ifeq          64
        42: aload_0
        43: aload_0
        44: invokeinterface #72,  1           // InterfaceMethod value:()I
        49: aload_1
        50: invokeinterface #72,  1           // InterfaceMethod value:()I
        55: isub
        56: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        61: goto          82
        64: aload_0
        65: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        68: aload_0
        69: invokespecial #175                // InterfaceMethod toU32:()I
        72: aload_1
        73: invokespecial #175                // InterfaceMethod toU32:()I
        76: invokevirtual #203                // Method org/sireum/Z$U$_32$.$minus$extension:(II)I
        79: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        82: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 33 /* same */
        frame_type = 30 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 810: 0
        line 811: 33
        line 812: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lorg/sireum/Z$BV$Int;
            0      83     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $times$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #207                // InterfaceMethod $times:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 815: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $times(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #166,  1          // InterfaceMethod isWrapped:()Z
         6: ifne          33
         9: aload_0
        10: aload_0
        11: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        16: aload_1
        17: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        22: invokeinterface #209,  2          // InterfaceMethod org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: invokespecial #170                // InterfaceMethod make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
        30: goto          82
        33: aload_0
        34: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
        39: ifeq          64
        42: aload_0
        43: aload_0
        44: invokeinterface #72,  1           // InterfaceMethod value:()I
        49: aload_1
        50: invokeinterface #72,  1           // InterfaceMethod value:()I
        55: imul
        56: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        61: goto          82
        64: aload_0
        65: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        68: aload_0
        69: invokespecial #175                // InterfaceMethod toU32:()I
        72: aload_1
        73: invokespecial #175                // InterfaceMethod toU32:()I
        76: invokevirtual #212                // Method org/sireum/Z$U$_32$.$times$extension:(II)I
        79: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        82: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 33 /* same */
        frame_type = 30 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 816: 0
        line 817: 33
        line 818: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lorg/sireum/Z$BV$Int;
            0      83     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $div$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #216                // InterfaceMethod $div:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 821: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $div(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #166,  1          // InterfaceMethod isWrapped:()Z
         6: ifne          33
         9: aload_0
        10: aload_0
        11: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        16: aload_1
        17: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        22: invokeinterface #218,  2          // InterfaceMethod org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: invokespecial #170                // InterfaceMethod make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
        30: goto          82
        33: aload_0
        34: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
        39: ifeq          64
        42: aload_0
        43: aload_0
        44: invokeinterface #72,  1           // InterfaceMethod value:()I
        49: aload_1
        50: invokeinterface #72,  1           // InterfaceMethod value:()I
        55: idiv
        56: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        61: goto          82
        64: aload_0
        65: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        68: aload_0
        69: invokespecial #175                // InterfaceMethod toU32:()I
        72: aload_1
        73: invokespecial #175                // InterfaceMethod toU32:()I
        76: invokevirtual #221                // Method org/sireum/Z$U$_32$.$div$extension:(II)I
        79: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        82: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 33 /* same */
        frame_type = 30 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 822: 0
        line 823: 33
        line 824: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lorg/sireum/Z$BV$Int;
            0      83     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $percent$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #225                // InterfaceMethod $percent:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 827: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $percent(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #166,  1          // InterfaceMethod isWrapped:()Z
         6: ifne          33
         9: aload_0
        10: aload_0
        11: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        16: aload_1
        17: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        22: invokeinterface #227,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: invokespecial #170                // InterfaceMethod make:(Lorg/sireum/Z;)Lorg/sireum/Z$BV$Int;
        30: goto          82
        33: aload_0
        34: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
        39: ifeq          64
        42: aload_0
        43: aload_0
        44: invokeinterface #72,  1           // InterfaceMethod value:()I
        49: aload_1
        50: invokeinterface #72,  1           // InterfaceMethod value:()I
        55: irem
        56: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        61: goto          82
        64: aload_0
        65: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        68: aload_0
        69: invokespecial #175                // InterfaceMethod toU32:()I
        72: aload_1
        73: invokespecial #175                // InterfaceMethod toU32:()I
        76: invokevirtual #230                // Method org/sireum/Z$U$_32$.$percent$extension:(II)I
        79: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        82: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 33 /* same */
        frame_type = 30 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 828: 0
        line 829: 33
        line 830: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lorg/sireum/Z$BV$Int;
            0      83     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static boolean $greater$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #235                // InterfaceMethod $greater:(Lorg/sireum/Z$BV$Int;)Z
         5: ireturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default boolean $greater(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          38
         9: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        12: aload_0
        13: invokeinterface #72,  1           // InterfaceMethod value:()I
        18: aload_1
        19: invokeinterface #72,  1           // InterfaceMethod value:()I
        24: if_icmple     31
        27: iconst_1
        28: goto          32
        31: iconst_0
        32: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        35: goto          58
        38: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        41: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        44: aload_0
        45: invokespecial #175                // InterfaceMethod toU32:()I
        48: aload_1
        49: invokespecial #175                // InterfaceMethod toU32:()I
        52: invokevirtual #242                // Method org/sireum/Z$U$_32$.$greater$extension:(II)Z
        55: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        58: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 95 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Z$BV$Int, class org/sireum/Z$BV$Int ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 5 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 834: 0
        line 835: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lorg/sireum/Z$BV$Int;
            0      59     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #236                         // (TT;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public static boolean $greater$eq$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #246                // InterfaceMethod $greater$eq:(Lorg/sireum/Z$BV$Int;)Z
         5: ireturn
      LineNumberTable:
        line 838: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default boolean $greater$eq(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          38
         9: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        12: aload_0
        13: invokeinterface #72,  1           // InterfaceMethod value:()I
        18: aload_1
        19: invokeinterface #72,  1           // InterfaceMethod value:()I
        24: if_icmplt     31
        27: iconst_1
        28: goto          32
        31: iconst_0
        32: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        35: goto          58
        38: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        41: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        44: aload_0
        45: invokespecial #175                // InterfaceMethod toU32:()I
        48: aload_1
        49: invokespecial #175                // InterfaceMethod toU32:()I
        52: invokevirtual #249                // Method org/sireum/Z$U$_32$.$greater$eq$extension:(II)Z
        55: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        58: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 95 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Z$BV$Int, class org/sireum/Z$BV$Int ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 5 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 839: 0
        line 840: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lorg/sireum/Z$BV$Int;
            0      59     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #236                         // (TT;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public static boolean $less$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #253                // InterfaceMethod $less:(Lorg/sireum/Z$BV$Int;)Z
         5: ireturn
      LineNumberTable:
        line 843: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default boolean $less(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          38
         9: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        12: aload_0
        13: invokeinterface #72,  1           // InterfaceMethod value:()I
        18: aload_1
        19: invokeinterface #72,  1           // InterfaceMethod value:()I
        24: if_icmpge     31
        27: iconst_1
        28: goto          32
        31: iconst_0
        32: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        35: goto          58
        38: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        41: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        44: aload_0
        45: invokespecial #175                // InterfaceMethod toU32:()I
        48: aload_1
        49: invokespecial #175                // InterfaceMethod toU32:()I
        52: invokevirtual #256                // Method org/sireum/Z$U$_32$.$less$extension:(II)Z
        55: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        58: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 95 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Z$BV$Int, class org/sireum/Z$BV$Int ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 5 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 844: 0
        line 845: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lorg/sireum/Z$BV$Int;
            0      59     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #236                         // (TT;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public static boolean $less$eq$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #259                // InterfaceMethod $less$eq:(Lorg/sireum/Z$BV$Int;)Z
         5: ireturn
      LineNumberTable:
        line 848: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default boolean $less$eq(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          38
         9: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        12: aload_0
        13: invokeinterface #72,  1           // InterfaceMethod value:()I
        18: aload_1
        19: invokeinterface #72,  1           // InterfaceMethod value:()I
        24: if_icmpgt     31
        27: iconst_1
        28: goto          32
        31: iconst_0
        32: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        35: goto          58
        38: getstatic     #88                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        41: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        44: aload_0
        45: invokespecial #175                // InterfaceMethod toU32:()I
        48: aload_1
        49: invokespecial #175                // InterfaceMethod toU32:()I
        52: invokevirtual #262                // Method org/sireum/Z$U$_32$.$less$eq$extension:(II)Z
        55: invokevirtual #238                // Method org/sireum/B$.apply:(Z)Z
        58: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 95 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Z$BV$Int, class org/sireum/Z$BV$Int ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 5 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 849: 0
        line 850: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lorg/sireum/Z$BV$Int;
            0      59     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #236                         // (TT;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $greater$greater$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #266                // InterfaceMethod $greater$greater:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 853: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $greater$greater(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          31
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: aload_1
        17: invokeinterface #72,  1           // InterfaceMethod value:()I
        22: ishr
        23: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        28: goto          38
        31: aload_0
        32: aload_1
        33: invokeinterface #269,  2          // InterfaceMethod $greater$greater$greater:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
        38: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 854: 0
        line 855: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/sireum/Z$BV$Int;
            0      39     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $greater$greater$greater$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #269                // InterfaceMethod $greater$greater$greater:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 858: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $greater$greater$greater(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          31
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: aload_1
        17: invokeinterface #72,  1           // InterfaceMethod value:()I
        22: iushr
        23: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        28: goto          51
        31: aload_0
        32: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        35: aload_0
        36: invokespecial #175                // InterfaceMethod toU32:()I
        39: aload_1
        40: invokeinterface #72,  1           // InterfaceMethod value:()I
        45: invokevirtual #273                // Method org/sireum/Z$U$_32$.$greater$greater$greater$extension:(II)I
        48: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        51: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 859: 0
        line 860: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lorg/sireum/Z$BV$Int;
            0      52     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $less$less$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #277                // InterfaceMethod $less$less:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 863: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $less$less(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          31
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: aload_1
        17: invokeinterface #72,  1           // InterfaceMethod value:()I
        22: ishl
        23: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        28: goto          51
        31: aload_0
        32: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        35: aload_0
        36: invokespecial #175                // InterfaceMethod toU32:()I
        39: aload_1
        40: invokeinterface #72,  1           // InterfaceMethod value:()I
        45: invokevirtual #280                // Method org/sireum/Z$U$_32$.$less$less$extension:(II)I
        48: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        51: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 864: 0
        line 865: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lorg/sireum/Z$BV$Int;
            0      52     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $amp$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #284                // InterfaceMethod $amp:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 868: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $amp(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          31
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: aload_1
        17: invokeinterface #72,  1           // InterfaceMethod value:()I
        22: iand
        23: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        28: goto          49
        31: aload_0
        32: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        35: aload_0
        36: invokespecial #175                // InterfaceMethod toU32:()I
        39: aload_1
        40: invokespecial #175                // InterfaceMethod toU32:()I
        43: invokevirtual #287                // Method org/sireum/Z$U$_32$.$amp$extension:(II)I
        46: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        49: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 869: 0
        line 870: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/Z$BV$Int;
            0      50     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $bar$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #291                // InterfaceMethod $bar:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 873: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $bar(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          31
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: aload_1
        17: invokeinterface #72,  1           // InterfaceMethod value:()I
        22: ior
        23: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        28: goto          49
        31: aload_0
        32: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        35: aload_0
        36: invokespecial #175                // InterfaceMethod toU32:()I
        39: aload_1
        40: invokespecial #175                // InterfaceMethod toU32:()I
        43: invokevirtual #294                // Method org/sireum/Z$U$_32$.$bar$extension:(II)I
        46: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        49: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 874: 0
        line 875: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/Z$BV$Int;
            0      50     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int $bar$up$(org.sireum.Z$BV$Int, org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #298                // InterfaceMethod $bar$up:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
         5: areturn
      LineNumberTable:
        line 878: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/sireum/Z$BV$Int;
            0       6     1 other   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default T $bar$up(T);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          31
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: aload_1
        17: invokeinterface #72,  1           // InterfaceMethod value:()I
        22: ixor
        23: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        28: goto          49
        31: aload_0
        32: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        35: aload_0
        36: invokespecial #175                // InterfaceMethod toU32:()I
        39: aload_1
        40: invokespecial #175                // InterfaceMethod toU32:()I
        43: invokevirtual #301                // Method org/sireum/Z$U$_32$.$up$extension:(II)I
        46: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        49: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 879: 0
        line 880: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/Z$BV$Int;
            0      50     1 other   Lorg/sireum/Z$BV$Int;
    Signature: #187                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.sireum.Z$BV$Int unary_$tilde$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #305                // InterfaceMethod unary_$tilde:()Lorg/sireum/Z$BV$Int;
         4: areturn
      LineNumberTable:
        line 883: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default T unary_$tilde();
    descriptor: ()Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          26
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: iconst_m1
        17: ixor
        18: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        23: goto          40
        26: aload_0
        27: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        30: aload_0
        31: invokespecial #175                // InterfaceMethod toU32:()I
        34: invokevirtual #308                // Method org/sireum/Z$U$_32$.unary_$tilde$extension:(I)I
        37: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        40: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 26 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 884: 0
        line 885: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/Z$BV$Int;
    Signature: #61                          // ()TT;

  public static org.sireum.Z$BV$Int increase$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #312                // InterfaceMethod increase:()Lorg/sireum/Z$BV$Int;
         4: areturn
      LineNumberTable:
        line 887: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default T increase();
    descriptor: ()Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          26
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: iconst_1
        17: iadd
        18: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        23: goto          47
        26: aload_0
        27: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        30: aload_0
        31: invokespecial #175                // InterfaceMethod toU32:()I
        34: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        37: iconst_1
        38: invokevirtual #76                 // Method org/sireum/Z$U$_32$.apply:(I)I
        41: invokevirtual #194                // Method org/sireum/Z$U$_32$.$plus$extension:(II)I
        44: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        47: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 26 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 888: 0
        line 889: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/sireum/Z$BV$Int;
    Signature: #61                          // ()TT;

  public static org.sireum.Z$BV$Int decrease$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #316                // InterfaceMethod decrease:()Lorg/sireum/Z$BV$Int;
         4: areturn
      LineNumberTable:
        line 891: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default T decrease();
    descriptor: ()Lorg/sireum/Z$BV$Int;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          26
         9: aload_0
        10: aload_0
        11: invokeinterface #72,  1           // InterfaceMethod value:()I
        16: iconst_1
        17: isub
        18: invokeinterface #153,  2          // InterfaceMethod make:(I)Lorg/sireum/Z$BV$Int;
        23: goto          47
        26: aload_0
        27: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        30: aload_0
        31: invokespecial #175                // InterfaceMethod toU32:()I
        34: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        37: iconst_1
        38: invokevirtual #76                 // Method org/sireum/Z$U$_32$.apply:(I)I
        41: invokevirtual #203                // Method org/sireum/Z$U$_32$.$minus$extension:(II)I
        44: invokespecial #180                // InterfaceMethod umake:(I)Lorg/sireum/Z$BV$Int;
        47: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 26 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z$BV$Int ]
      LineNumberTable:
        line 892: 0
        line 893: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/sireum/Z$BV$Int;
    Signature: #61                          // ()TT;

  public static java.lang.String toString$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #321                // InterfaceMethod toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 895: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          21
         9: aload_0
        10: invokeinterface #72,  1           // InterfaceMethod value:()I
        15: invokestatic  #326                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
        18: goto          31
        21: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        24: aload_0
        25: invokespecial #175                // InterfaceMethod toU32:()I
        28: invokevirtual #329                // Method org/sireum/Z$U$_32$.toString$extension:(I)Ljava/lang/String;
        31: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 896: 0
        line 897: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/sireum/Z$BV$Int;

  public static scala.math.BigInt toBigInt$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #336                // InterfaceMethod toBigInt:()Lscala/math/BigInt;
         4: areturn
      LineNumberTable:
        line 899: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.math.BigInt toBigInt();
    descriptor: ()Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          27
         9: getstatic     #341                // Field scala/package$.MODULE$:Lscala/package$;
        12: invokevirtual #344                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
        15: aload_0
        16: invokeinterface #72,  1           // InterfaceMethod value:()I
        21: invokevirtual #349                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
        24: goto          48
        27: getstatic     #354                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        30: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        33: aload_0
        34: invokespecial #175                // InterfaceMethod toU32:()I
        37: invokevirtual #358                // Method org/sireum/Z$U$_32$.toLong$extension:(I)J
        40: invokevirtual #361                // Method org/sireum/Z$.apply:(J)Lorg/sireum/Z;
        43: invokeinterface #362,  1          // InterfaceMethod org/sireum/Z.toBigInt:()Lscala/math/BigInt;
        48: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 27 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigInt ]
      LineNumberTable:
        line 900: 0
        line 901: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/sireum/Z$BV$Int;

  public static org.sireum.Z toMP$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #94                 // InterfaceMethod toMP:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 903: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default org.sireum.Z toMP();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod isSigned:()Z
         6: ifeq          24
         9: getstatic     #367                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        12: aload_0
        13: invokeinterface #72,  1           // InterfaceMethod value:()I
        18: invokevirtual #370                // Method org/sireum/Z$MP$.apply:(I)Lorg/sireum/Z;
        21: goto          40
        24: getstatic     #367                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        27: getstatic     #70                 // Field org/sireum/Z$U$_32$.MODULE$:Lorg/sireum/Z$U$_32$;
        30: aload_0
        31: invokespecial #175                // InterfaceMethod toU32:()I
        34: invokevirtual #358                // Method org/sireum/Z$U$_32$.toLong$extension:(I)J
        37: invokevirtual #371                // Method org/sireum/Z$MP$.apply:(J)Lorg/sireum/Z;
        40: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 904: 0
        line 905: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/Z$BV$Int;

  public static org.sireum.Z toIndex$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #375                // InterfaceMethod toIndex:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 907: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default org.sireum.Z toIndex();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #377,  1          // InterfaceMethod isZeroIndex:()Z
         6: ifeq          18
         9: aload_0
        10: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        15: goto          40
        18: aload_0
        19: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        24: aload_0
        25: invokeinterface #379,  1          // InterfaceMethod Index:()Lorg/sireum/Z$BV$Int;
        30: invokeinterface #94,  1           // InterfaceMethod toMP:()Lorg/sireum/Z;
        35: invokeinterface #200,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        40: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 908: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/Z$BV$Int;

  public static java.lang.String $anonfun$make$5(org.sireum.Z$BV$Int, org.sireum.Z);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #382                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #383                // int 32
         7: invokespecial #386                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_1
        11: invokevirtual #390                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        14: ldc_w         #392                // String  should not be less than
        17: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: aload_0
        21: invokeinterface #398,  1          // InterfaceMethod Name:()Ljava/lang/String;
        26: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: ldc_w         #400                // String .Min (
        32: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: aload_0
        36: invokeinterface #90,  1           // InterfaceMethod Min:()Lorg/sireum/Z$BV$Int;
        41: invokevirtual #390                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        44: ldc_w         #402                // String )
        47: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: invokevirtual #403                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        53: areturn
      LineNumberTable:
        line 788: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 $this   Lorg/sireum/Z$BV$Int;
            0      54     1 value$3   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      value$3                        final

  public static java.lang.String $anonfun$make$6(org.sireum.Z$BV$Int, org.sireum.Z);
    descriptor: (Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #382                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #404                // int 35
         7: invokespecial #386                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_1
        11: invokevirtual #390                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        14: ldc_w         #406                // String  should not be greater than
        17: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: aload_0
        21: invokeinterface #398,  1          // InterfaceMethod Name:()Ljava/lang/String;
        26: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: ldc_w         #408                // String .Max (
        32: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: aload_0
        36: invokeinterface #129,  1          // InterfaceMethod Max:()Lorg/sireum/Z$BV$Int;
        41: invokevirtual #390                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        44: ldc_w         #402                // String )
        47: invokevirtual #395                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: invokevirtual #403                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        53: areturn
      LineNumberTable:
        line 789: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 $this   Lorg/sireum/Z$BV$Int;
            0      54     1 value$3   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      value$3                        final

  public static void $init$(org.sireum.Z$BV$Int);
    descriptor: (Lorg/sireum/Z$BV$Int;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 762: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lorg/sireum/Z$BV$Int;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #422,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // BV$=class org/sireum/Z$BV$ of class org/sireum/Z
  public static #21= #2 of #17;           // Int=class org/sireum/Z$BV$Int of class org/sireum/Z$BV$
  public static #24= #23 of #19;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
  public static final #27= #26 of #23;    // BigInt=class org/sireum/Z$MP$BigInt of class org/sireum/Z$MP$
  public static final #30= #29 of #23;    // Long=class org/sireum/Z$MP$Long of class org/sireum/Z$MP$
  public static #33= #32 of #19;          // U$=class org/sireum/Z$U$ of class org/sireum/Z
  public static #36= #35 of #32;          // _32$=class org/sireum/Z$U$_32$ of class org/sireum/Z$U$
Signature: #3                           // <T::Lorg/sireum/Z$BV$Int<TT;>;>Ljava/lang/Object;Lorg/sireum/ZLike<TT;>;Lorg/sireum/$internal/HasBoxer;
SourceFile: "Z.scala"
BootstrapMethods:
  0: #120 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #104 ()Ljava/lang/Object;
      #109 REF_invokeStatic org/sireum/Z$BV$Int.$anonfun$make$5:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
      #111 ()Ljava/lang/String;
      #112 5
      #113 1
      #111 ()Ljava/lang/String;
  1: #120 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #104 ()Ljava/lang/Object;
      #133 REF_invokeStatic org/sireum/Z$BV$Int.$anonfun$make$6:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
      #111 ()Ljava/lang/String;
      #112 5
      #113 1
      #111 ()Ljava/lang/String;
  2: #419 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 REF_invokeStatic org/sireum/Z$BV$Int.$anonfun$make$5:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
      #133 REF_invokeStatic org/sireum/Z$BV$Int.$anonfun$make$6:(Lorg/sireum/Z$BV$Int;Lorg/sireum/Z;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x149 (unknown attribute)
   01 00 00 41 01 1A 00 A1 01 01 19 00 B6 01 00 69
   00 6A 01 00 82 00 6A 01 01 21 00 A1 01 01 20 00
   B6 01 01 28 00 A1 01 01 27 00 B6 01 00 D6 00 A1
   01 00 D5 00 B6 01 00 E9 00 26 01 00 E7 00 E8 01
   00 F4 00 26 01 00 F3 00 E8 01 01 08 00 A1 01 01
   07 00 B6 01 01 0B 00 A1 01 01 0E 00 B6 01 01 99
   01 9A 01 00 FB 00 26 01 00 FA 00 E8 01 00 5F 00
   26 01 01 01 00 E8 01 01 13 00 A1 01 01 12 00 B6
   01 00 C4 00 A1 01 00 C3 00 B6 01 00 DF 00 A1 01
   00 DE 00 B6 01 00 B8 00 A1 01 00 B5 00 B6 01 00
   CD 00 A1 01 00 CC 00 B6 01 00 3F 00 3C 00 00 3E
   00 3C 00 00 3B 00 3C 00 01 3A 00 3C 01 01 39 00
   A1 01 00 33 00 29 01 00 32 00 26 01 00 2F 00 29
   01 00 2E 00 26 01 01 36 00 3C 01 01 35 00 A1 01
   00 28 00 29 01 00 25 00 26 01 00 41 00 29 00 00
   40 00 29 00 00 38 00 39 00 00 38 00 4D 05 01 4E
   00 8A 01 01 4C 01 4D 01 01 75 00 5C 01 01 74 01
   6C 01 00 5B 00 5C 01 01 6B 01 6C 01 01 3F 00 6E
   01 01 3D 01 3E 01 00 42 00 37 05 00 9E 00 39 05
   00 A2 00 3C 01 00 A0 00 A1 01 01 2F 00 3C 01 01
   2E 00 A1 01 00 36 00 37 00
  Scala: length = 0x0 (unknown attribute)

