Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/project/JSON$.class
  Last modified May 29, 2022; size 8701 bytes
  SHA-256 checksum db0e7063ff1bad5ed1a36c028fc24e2082033df2ddc03c2d00e2a03d3fdb21ba
  Compiled from "JSON.scala"
public final class org.sireum.project.JSON$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/project/JSON$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 24, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/project/JSON$
    #2 = Class              #1            // org/sireum/project/JSON$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JSON.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/Either$Left
   #12 = Class              #11           // org/sireum/Either$Left
   #13 = Utf8               org/sireum/Either
   #14 = Class              #13           // org/sireum/Either
   #15 = Utf8               Left
   #16 = Utf8               org/sireum/Either$Left$
   #17 = Class              #16           // org/sireum/Either$Left$
   #18 = Utf8               Left$
   #19 = Utf8               org/sireum/Either$Right
   #20 = Class              #19           // org/sireum/Either$Right
   #21 = Utf8               Right
   #22 = Utf8               org/sireum/Either$Right$
   #23 = Class              #22           // org/sireum/Either$Right$
   #24 = Utf8               Right$
   #25 = Utf8               org/sireum/Json$ErrorMsg
   #26 = Class              #25           // org/sireum/Json$ErrorMsg
   #27 = Utf8               org/sireum/Json
   #28 = Class              #27           // org/sireum/Json
   #29 = Utf8               ErrorMsg
   #30 = Utf8               org/sireum/project/JSON$Parser
   #31 = Class              #30           // org/sireum/project/JSON$Parser
   #32 = Utf8               org/sireum/project/JSON
   #33 = Class              #32           // org/sireum/project/JSON
   #34 = Utf8               Parser
   #35 = Utf8               org/sireum/project/JSON$Parser$
   #36 = Class              #35           // org/sireum/project/JSON$Parser$
   #37 = Utf8               Parser$
   #38 = Utf8               org/sireum/project/JSON$Printer$
   #39 = Class              #38           // org/sireum/project/JSON$Printer$
   #40 = Utf8               Printer$
   #41 = Utf8               org/sireum/project/PublishInfo$Developer
   #42 = Class              #41           // org/sireum/project/PublishInfo$Developer
   #43 = Utf8               org/sireum/project/PublishInfo
   #44 = Class              #43           // org/sireum/project/PublishInfo
   #45 = Utf8               Developer
   #46 = Utf8               org/sireum/project/PublishInfo$License
   #47 = Class              #46           // org/sireum/project/PublishInfo$License
   #48 = Utf8               License
   #49 = Utf8               MODULE$
   #50 = Utf8               Lorg/sireum/project/JSON$;
   #51 = Utf8               <clinit>
   #52 = Utf8               ()V
   #53 = Utf8               <init>
   #54 = NameAndType        #53:#52       // "<init>":()V
   #55 = Methodref          #2.#54        // org/sireum/project/JSON$."<init>":()V
   #56 = NameAndType        #49:#50       // MODULE$:Lorg/sireum/project/JSON$;
   #57 = Fieldref           #2.#56        // org/sireum/project/JSON$.MODULE$:Lorg/sireum/project/JSON$;
   #58 = Utf8               to
   #59 = Utf8               (Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
   #60 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;Lscala/Function1<Lorg/sireum/project/JSON$Parser;TT;>;)Lorg/sireum/Either<TT;Lorg/sireum/Json$ErrorMsg;>;
   #61 = Utf8               s
   #62 = Utf8               f
   #63 = Utf8               org/sireum/helper$
   #64 = Class              #63           // org/sireum/helper$
   #65 = Utf8               Lorg/sireum/helper$;
   #66 = NameAndType        #49:#65       // MODULE$:Lorg/sireum/helper$;
   #67 = Fieldref           #64.#66       // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
   #68 = Utf8               Lorg/sireum/project/JSON$Parser$;
   #69 = NameAndType        #49:#68       // MODULE$:Lorg/sireum/project/JSON$Parser$;
   #70 = Fieldref           #36.#69       // org/sireum/project/JSON$Parser$.MODULE$:Lorg/sireum/project/JSON$Parser$;
   #71 = Utf8               apply
   #72 = Utf8               (Ljava/lang/String;)Lorg/sireum/project/JSON$Parser;
   #73 = NameAndType        #71:#72       // apply:(Ljava/lang/String;)Lorg/sireum/project/JSON$Parser;
   #74 = Methodref          #36.#73       // org/sireum/project/JSON$Parser$.apply:(Ljava/lang/String;)Lorg/sireum/project/JSON$Parser;
   #75 = Utf8               assignMut
   #76 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #77 = NameAndType        #75:#76       // assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #78 = Methodref          #64.#77       // org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #79 = Utf8               scala/Function1
   #80 = Class              #79           // scala/Function1
   #81 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #82 = NameAndType        #71:#81       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #83 = InterfaceMethodref #80.#82       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #84 = Utf8               eof
   #85 = Utf8               ()Z
   #86 = NameAndType        #84:#85       // eof:()Z
   #87 = Methodref          #31.#86       // org/sireum/project/JSON$Parser.eof:()Z
   #88 = Utf8               errorOpt
   #89 = Utf8               ()Lorg/sireum/Option;
   #90 = NameAndType        #88:#89       // errorOpt:()Lorg/sireum/Option;
   #91 = Methodref          #31.#90       // org/sireum/project/JSON$Parser.errorOpt:()Lorg/sireum/Option;
   #92 = Utf8               org/sireum/Some
   #93 = Class              #92           // org/sireum/Some
   #94 = Utf8               org/sireum/Some$
   #95 = Class              #94           // org/sireum/Some$
   #96 = Utf8               Lorg/sireum/Some$;
   #97 = NameAndType        #49:#96       // MODULE$:Lorg/sireum/Some$;
   #98 = Fieldref           #95.#97       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #99 = Utf8               unapply
  #100 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #101 = NameAndType        #99:#100      // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #102 = Methodref          #95.#101      // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #103 = Utf8               scala/Some
  #104 = Class              #103          // scala/Some
  #105 = Utf8               isEmpty
  #106 = NameAndType        #105:#85      // isEmpty:()Z
  #107 = Methodref          #104.#106     // scala/Some.isEmpty:()Z
  #108 = Utf8               get
  #109 = Utf8               ()Ljava/lang/Object;
  #110 = NameAndType        #108:#109     // get:()Ljava/lang/Object;
  #111 = Methodref          #104.#110     // scala/Some.get:()Ljava/lang/Object;
  #112 = Utf8               Lorg/sireum/Either$Right$;
  #113 = NameAndType        #49:#112      // MODULE$:Lorg/sireum/Either$Right$;
  #114 = Fieldref           #23.#113      // org/sireum/Either$Right$.MODULE$:Lorg/sireum/Either$Right$;
  #115 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Either$Right;
  #116 = NameAndType        #71:#115      // apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
  #117 = Methodref          #23.#116      // org/sireum/Either$Right$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
  #118 = Utf8               Lorg/sireum/Either$Left$;
  #119 = NameAndType        #49:#118      // MODULE$:Lorg/sireum/Either$Left$;
  #120 = Fieldref           #17.#119      // org/sireum/Either$Left$.MODULE$:Lorg/sireum/Either$Left$;
  #121 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #122 = NameAndType        #71:#121      // apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #123 = Methodref          #17.#122      // org/sireum/Either$Left$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #124 = Utf8               e
  #125 = Utf8               Lorg/sireum/Json$ErrorMsg;
  #126 = Utf8               parser
  #127 = Utf8               Lorg/sireum/project/JSON$Parser;
  #128 = Utf8               r
  #129 = Utf8               Ljava/lang/Object;
  #130 = Utf8               this
  #131 = Utf8               Ljava/lang/String;
  #132 = Utf8               Lscala/Function1;
  #133 = Utf8               java/lang/String
  #134 = Class              #133          // java/lang/String
  #135 = Utf8               org/sireum/Option
  #136 = Class              #135          // org/sireum/Option
  #137 = Utf8               fromProject
  #138 = Utf8               (Lorg/sireum/project/Project;Z)Ljava/lang/String;
  #139 = Utf8               o
  #140 = Utf8               isCompact
  #141 = Utf8               Lorg/sireum/project/JSON$Printer$;
  #142 = NameAndType        #49:#141      // MODULE$:Lorg/sireum/project/JSON$Printer$;
  #143 = Fieldref           #39.#142      // org/sireum/project/JSON$Printer$.MODULE$:Lorg/sireum/project/JSON$Printer$;
  #144 = Utf8               printProject
  #145 = Utf8               (Lorg/sireum/project/Project;)Lorg/sireum/ST;
  #146 = NameAndType        #144:#145     // printProject:(Lorg/sireum/project/Project;)Lorg/sireum/ST;
  #147 = Methodref          #39.#146      // org/sireum/project/JSON$Printer$.printProject:(Lorg/sireum/project/Project;)Lorg/sireum/ST;
  #148 = Utf8               org/sireum/B$
  #149 = Class              #148          // org/sireum/B$
  #150 = Utf8               Lorg/sireum/B$;
  #151 = NameAndType        #49:#150      // MODULE$:Lorg/sireum/B$;
  #152 = Fieldref           #149.#151     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #153 = Utf8               $4B
  #154 = Utf8               (Z)Z
  #155 = NameAndType        #153:#154     // $4B:(Z)Z
  #156 = Methodref          #149.#155     // org/sireum/B$.$4B:(Z)Z
  #157 = Utf8               org/sireum/ST
  #158 = Class              #157          // org/sireum/ST
  #159 = Utf8               renderCompact
  #160 = Utf8               ()Ljava/lang/String;
  #161 = NameAndType        #159:#160     // renderCompact:()Ljava/lang/String;
  #162 = Methodref          #158.#161     // org/sireum/ST.renderCompact:()Ljava/lang/String;
  #163 = Utf8               render
  #164 = NameAndType        #163:#160     // render:()Ljava/lang/String;
  #165 = Methodref          #158.#164     // org/sireum/ST.render:()Ljava/lang/String;
  #166 = Utf8               st
  #167 = Utf8               Lorg/sireum/ST;
  #168 = Utf8               Lorg/sireum/project/Project;
  #169 = Utf8               Z
  #170 = Utf8               toProject
  #171 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either;
  #172 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/Project;Lorg/sireum/Json$ErrorMsg;>;
  #173 = MethodType         #81           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #174 = Utf8               $anonfun$toProject$1
  #175 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  #176 = NameAndType        #174:#175     // $anonfun$toProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  #177 = Methodref          #2.#176       // org/sireum/project/JSON$.$anonfun$toProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  #178 = MethodHandle       6:#177        // REF_invokeStatic org/sireum/project/JSON$.$anonfun$toProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  #179 = MethodType         #175          //  (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  #180 = Integer            5
  #181 = Integer            1
  #182 = Utf8               java/lang/invoke/LambdaMetafactory
  #183 = Class              #182          // java/lang/invoke/LambdaMetafactory
  #184 = Utf8               altMetafactory
  #185 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #186 = NameAndType        #184:#185     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #187 = Methodref          #183.#186     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #188 = MethodHandle       6:#187        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #189 = Utf8               ()Lscala/Function1;
  #190 = NameAndType        #71:#189      // apply:()Lscala/Function1;
  #191 = InvokeDynamic      #0:#190       // #0:apply:()Lscala/Function1;
  #192 = NameAndType        #58:#59       // to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
  #193 = Methodref          #2.#192       // org/sireum/project/JSON$.to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
  #194 = Utf8               Lorg/sireum/Either;
  #195 = Utf8               fromModule
  #196 = Utf8               (Lorg/sireum/project/Module;Z)Ljava/lang/String;
  #197 = Utf8               printModule
  #198 = Utf8               (Lorg/sireum/project/Module;)Lorg/sireum/ST;
  #199 = NameAndType        #197:#198     // printModule:(Lorg/sireum/project/Module;)Lorg/sireum/ST;
  #200 = Methodref          #39.#199      // org/sireum/project/JSON$Printer$.printModule:(Lorg/sireum/project/Module;)Lorg/sireum/ST;
  #201 = Utf8               Lorg/sireum/project/Module;
  #202 = Utf8               toModule
  #203 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/Module;Lorg/sireum/Json$ErrorMsg;>;
  #204 = Utf8               $anonfun$toModule$1
  #205 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #206 = NameAndType        #204:#205     // $anonfun$toModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #207 = Methodref          #2.#206       // org/sireum/project/JSON$.$anonfun$toModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #208 = MethodHandle       6:#207        // REF_invokeStatic org/sireum/project/JSON$.$anonfun$toModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #209 = MethodType         #205          //  (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #210 = InvokeDynamic      #1:#190       // #1:apply:()Lscala/Function1;
  #211 = Utf8               fromPublishInfo
  #212 = Utf8               (Lorg/sireum/project/PublishInfo;Z)Ljava/lang/String;
  #213 = Utf8               printPublishInfo
  #214 = Utf8               (Lorg/sireum/project/PublishInfo;)Lorg/sireum/ST;
  #215 = NameAndType        #213:#214     // printPublishInfo:(Lorg/sireum/project/PublishInfo;)Lorg/sireum/ST;
  #216 = Methodref          #39.#215      // org/sireum/project/JSON$Printer$.printPublishInfo:(Lorg/sireum/project/PublishInfo;)Lorg/sireum/ST;
  #217 = Utf8               Lorg/sireum/project/PublishInfo;
  #218 = Utf8               toPublishInfo
  #219 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/PublishInfo;Lorg/sireum/Json$ErrorMsg;>;
  #220 = Utf8               $anonfun$toPublishInfo$1
  #221 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #222 = NameAndType        #220:#221     // $anonfun$toPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #223 = Methodref          #2.#222       // org/sireum/project/JSON$.$anonfun$toPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #224 = MethodHandle       6:#223        // REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #225 = MethodType         #221          //  (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #226 = InvokeDynamic      #2:#190       // #2:apply:()Lscala/Function1;
  #227 = Utf8               fromPublishInfoLicense
  #228 = Utf8               (Lorg/sireum/project/PublishInfo$License;Z)Ljava/lang/String;
  #229 = Utf8               printPublishInfoLicense
  #230 = Utf8               (Lorg/sireum/project/PublishInfo$License;)Lorg/sireum/ST;
  #231 = NameAndType        #229:#230     // printPublishInfoLicense:(Lorg/sireum/project/PublishInfo$License;)Lorg/sireum/ST;
  #232 = Methodref          #39.#231      // org/sireum/project/JSON$Printer$.printPublishInfoLicense:(Lorg/sireum/project/PublishInfo$License;)Lorg/sireum/ST;
  #233 = Utf8               Lorg/sireum/project/PublishInfo$License;
  #234 = Utf8               toPublishInfoLicense
  #235 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/PublishInfo$License;Lorg/sireum/Json$ErrorMsg;>;
  #236 = Utf8               $anonfun$toPublishInfoLicense$1
  #237 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #238 = NameAndType        #236:#237     // $anonfun$toPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #239 = Methodref          #2.#238       // org/sireum/project/JSON$.$anonfun$toPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #240 = MethodHandle       6:#239        // REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #241 = MethodType         #237          //  (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #242 = InvokeDynamic      #3:#190       // #3:apply:()Lscala/Function1;
  #243 = Utf8               fromPublishInfoDeveloper
  #244 = Utf8               (Lorg/sireum/project/PublishInfo$Developer;Z)Ljava/lang/String;
  #245 = Utf8               printPublishInfoDeveloper
  #246 = Utf8               (Lorg/sireum/project/PublishInfo$Developer;)Lorg/sireum/ST;
  #247 = NameAndType        #245:#246     // printPublishInfoDeveloper:(Lorg/sireum/project/PublishInfo$Developer;)Lorg/sireum/ST;
  #248 = Methodref          #39.#247      // org/sireum/project/JSON$Printer$.printPublishInfoDeveloper:(Lorg/sireum/project/PublishInfo$Developer;)Lorg/sireum/ST;
  #249 = Utf8               Lorg/sireum/project/PublishInfo$Developer;
  #250 = Utf8               toPublishInfoDeveloper
  #251 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/PublishInfo$Developer;Lorg/sireum/Json$ErrorMsg;>;
  #252 = Utf8               $anonfun$toPublishInfoDeveloper$1
  #253 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #254 = NameAndType        #252:#253     // $anonfun$toPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #255 = Methodref          #2.#254       // org/sireum/project/JSON$.$anonfun$toPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #256 = MethodHandle       6:#255        // REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #257 = MethodType         #253          //  (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #258 = InvokeDynamic      #4:#190       // #4:apply:()Lscala/Function1;
  #259 = Utf8               fProject$1
  #260 = Utf8               parseProject
  #261 = Utf8               ()Lorg/sireum/project/Project;
  #262 = NameAndType        #260:#261     // parseProject:()Lorg/sireum/project/Project;
  #263 = Methodref          #31.#262      // org/sireum/project/JSON$Parser.parseProject:()Lorg/sireum/project/Project;
  #264 = NameAndType        #259:#175     // fProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  #265 = Methodref          #2.#264       // org/sireum/project/JSON$.fProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  #266 = Utf8               fModule$1
  #267 = Utf8               parseModule
  #268 = Utf8               ()Lorg/sireum/project/Module;
  #269 = NameAndType        #267:#268     // parseModule:()Lorg/sireum/project/Module;
  #270 = Methodref          #31.#269      // org/sireum/project/JSON$Parser.parseModule:()Lorg/sireum/project/Module;
  #271 = NameAndType        #266:#205     // fModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #272 = Methodref          #2.#271       // org/sireum/project/JSON$.fModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #273 = Utf8               fPublishInfo$1
  #274 = Utf8               parsePublishInfo
  #275 = Utf8               ()Lorg/sireum/project/PublishInfo;
  #276 = NameAndType        #274:#275     // parsePublishInfo:()Lorg/sireum/project/PublishInfo;
  #277 = Methodref          #31.#276      // org/sireum/project/JSON$Parser.parsePublishInfo:()Lorg/sireum/project/PublishInfo;
  #278 = NameAndType        #273:#221     // fPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #279 = Methodref          #2.#278       // org/sireum/project/JSON$.fPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #280 = Utf8               fPublishInfoLicense$1
  #281 = Utf8               parsePublishInfoLicense
  #282 = Utf8               ()Lorg/sireum/project/PublishInfo$License;
  #283 = NameAndType        #281:#282     // parsePublishInfoLicense:()Lorg/sireum/project/PublishInfo$License;
  #284 = Methodref          #31.#283      // org/sireum/project/JSON$Parser.parsePublishInfoLicense:()Lorg/sireum/project/PublishInfo$License;
  #285 = NameAndType        #280:#237     // fPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #286 = Methodref          #2.#285       // org/sireum/project/JSON$.fPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #287 = Utf8               fPublishInfoDeveloper$1
  #288 = Utf8               parsePublishInfoDeveloper
  #289 = Utf8               ()Lorg/sireum/project/PublishInfo$Developer;
  #290 = NameAndType        #288:#289     // parsePublishInfoDeveloper:()Lorg/sireum/project/PublishInfo$Developer;
  #291 = Methodref          #31.#290      // org/sireum/project/JSON$Parser.parsePublishInfoDeveloper:()Lorg/sireum/project/PublishInfo$Developer;
  #292 = NameAndType        #287:#253     // fPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #293 = Methodref          #2.#292       // org/sireum/project/JSON$.fPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #294 = Methodref          #4.#54        // java/lang/Object."<init>":()V
  #295 = Utf8               $deserializeLambda$
  #296 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #297 = Utf8               scala/runtime/LambdaDeserialize
  #298 = Class              #297          // scala/runtime/LambdaDeserialize
  #299 = Utf8               bootstrap
  #300 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #301 = NameAndType        #299:#300     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #302 = Methodref          #298.#301     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #303 = MethodHandle       6:#302        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #304 = Utf8               lambdaDeserialize
  #305 = NameAndType        #304:#296     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #306 = InvokeDynamic      #5:#305       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #307 = Utf8               Code
  #308 = Utf8               LineNumberTable
  #309 = Utf8               StackMapTable
  #310 = Utf8               LocalVariableTable
  #311 = Utf8               Signature
  #312 = Utf8               MethodParameters
  #313 = Utf8               InnerClasses
  #314 = Utf8               SourceFile
  #315 = Utf8               BootstrapMethods
  #316 = Utf8               ScalaInlineInfo
  #317 = Utf8               Scala
{
  public static final org.sireum.project.JSON$ MODULE$;
    descriptor: Lorg/sireum/project/JSON$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/project/JSON$
         3: dup
         4: invokespecial #55                 // Method "<init>":()V
         7: putstatic     #57                 // Field MODULE$:Lorg/sireum/project/JSON$;
        10: return
      LineNumberTable:
        line 36: 0

  public <T extends java.lang.Object> org.sireum.Either<T, org.sireum.Json$ErrorMsg> to(java.lang.String, scala.Function1<org.sireum.project.JSON$Parser, T>);
    descriptor: (Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=3
         0: getstatic     #67                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #70                 // Field org/sireum/project/JSON$Parser$.MODULE$:Lorg/sireum/project/JSON$Parser$;
         6: aload_1
         7: invokevirtual #74                 // Method org/sireum/project/JSON$Parser$.apply:(Ljava/lang/String;)Lorg/sireum/project/JSON$Parser;
        10: invokevirtual #78                 // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        13: checkcast     #31                 // class org/sireum/project/JSON$Parser
        16: astore        4
        18: aload_2
        19: aload         4
        21: invokeinterface #83,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        26: astore        5
        28: aload         4
        30: invokevirtual #87                 // Method org/sireum/project/JSON$Parser.eof:()Z
        33: pop
        34: aload         4
        36: invokevirtual #91                 // Method org/sireum/project/JSON$Parser.errorOpt:()Lorg/sireum/Option;
        39: astore        6
        41: aload         6
        43: instanceof    #93                 // class org/sireum/Some
        46: ifeq          96
        49: aload         6
        51: checkcast     #93                 // class org/sireum/Some
        54: astore        7
        56: getstatic     #98                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        59: aload         7
        61: invokevirtual #102                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        64: astore        8
        66: aload         8
        68: invokevirtual #107                // Method scala/Some.isEmpty:()Z
        71: ifne          93
        74: aload         8
        76: invokevirtual #111                // Method scala/Some.get:()Ljava/lang/Object;
        79: checkcast     #26                 // class org/sireum/Json$ErrorMsg
        82: astore        9
        84: getstatic     #114                // Field org/sireum/Either$Right$.MODULE$:Lorg/sireum/Either$Right$;
        87: aload         9
        89: invokevirtual #117                // Method org/sireum/Either$Right$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
        92: areturn
        93: goto          99
        96: goto          99
        99: getstatic     #120                // Field org/sireum/Either$Left$.MODULE$:Lorg/sireum/Either$Left$;
       102: aload         5
       104: invokevirtual #123                // Method org/sireum/Either$Left$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
       107: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 93
          locals = [ class org/sireum/project/JSON$, class java/lang/String, class scala/Function1, top, class org/sireum/project/JSON$Parser, class java/lang/Object, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 271: 0
        line 272: 18
        line 273: 28
        line 274: 34
        line 275: 41
        line 274: 74
        line 275: 84
        line 276: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           84       9     9     e   Lorg/sireum/Json$ErrorMsg;
           18      90     4 parser   Lorg/sireum/project/JSON$Parser;
           28      80     5     r   Ljava/lang/Object;
            0     108     0  this   Lorg/sireum/project/JSON$;
            0     108     1     s   Ljava/lang/String;
            0     108     2     f   Lscala/Function1;
    Signature: #60                          // <T:Ljava/lang/Object;>(Ljava/lang/String;Lscala/Function1<Lorg/sireum/project/JSON$Parser;TT;>;)Lorg/sireum/Either<TT;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final
      f                              final

  public java.lang.String fromProject(org.sireum.project.Project, boolean);
    descriptor: (Lorg/sireum/project/Project;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: getstatic     #143                // Field org/sireum/project/JSON$Printer$.MODULE$:Lorg/sireum/project/JSON$Printer$;
         3: aload_1
         4: invokevirtual #147                // Method org/sireum/project/JSON$Printer$.printProject:(Lorg/sireum/project/Project;)Lorg/sireum/ST;
         7: astore_3
         8: getstatic     #152                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_2
        12: invokevirtual #156                // Method org/sireum/B$.$4B:(Z)Z
        15: ifeq          23
        18: aload_3
        19: invokevirtual #162                // Method org/sireum/ST.renderCompact:()Ljava/lang/String;
        22: areturn
        23: aload_3
        24: invokevirtual #165                // Method org/sireum/ST.render:()Ljava/lang/String;
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class org/sireum/ST ]
      LineNumberTable:
        line 281: 0
        line 282: 8
        line 283: 18
        line 285: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      20     3    st   Lorg/sireum/ST;
            0      28     0  this   Lorg/sireum/project/JSON$;
            0      28     1     o   Lorg/sireum/project/Project;
            0      28     2 isCompact   Z
    MethodParameters:
      Name                           Flags
      o                              final
      isCompact                      final

  public org.sireum.Either<org.sireum.project.Project, org.sireum.Json$ErrorMsg> toProject(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #191,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
         7: invokevirtual #193                // Method to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
        10: astore_2
        11: aload_2
        12: areturn
      LineNumberTable:
        line 294: 0
        line 295: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     2     r   Lorg/sireum/Either;
            0      13     0  this   Lorg/sireum/project/JSON$;
            0      13     1     s   Ljava/lang/String;
    Signature: #172                         // (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/Project;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String fromModule(org.sireum.project.Module, boolean);
    descriptor: (Lorg/sireum/project/Module;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: getstatic     #143                // Field org/sireum/project/JSON$Printer$.MODULE$:Lorg/sireum/project/JSON$Printer$;
         3: aload_1
         4: invokevirtual #200                // Method org/sireum/project/JSON$Printer$.printModule:(Lorg/sireum/project/Module;)Lorg/sireum/ST;
         7: astore_3
         8: getstatic     #152                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_2
        12: invokevirtual #156                // Method org/sireum/B$.$4B:(Z)Z
        15: ifeq          23
        18: aload_3
        19: invokevirtual #162                // Method org/sireum/ST.renderCompact:()Ljava/lang/String;
        22: areturn
        23: aload_3
        24: invokevirtual #165                // Method org/sireum/ST.render:()Ljava/lang/String;
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class org/sireum/ST ]
      LineNumberTable:
        line 299: 0
        line 300: 8
        line 301: 18
        line 303: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      20     3    st   Lorg/sireum/ST;
            0      28     0  this   Lorg/sireum/project/JSON$;
            0      28     1     o   Lorg/sireum/project/Module;
            0      28     2 isCompact   Z
    MethodParameters:
      Name                           Flags
      o                              final
      isCompact                      final

  public org.sireum.Either<org.sireum.project.Module, org.sireum.Json$ErrorMsg> toModule(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #210,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
         7: invokevirtual #193                // Method to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
        10: astore_2
        11: aload_2
        12: areturn
      LineNumberTable:
        line 312: 0
        line 313: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     2     r   Lorg/sireum/Either;
            0      13     0  this   Lorg/sireum/project/JSON$;
            0      13     1     s   Ljava/lang/String;
    Signature: #203                         // (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/Module;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String fromPublishInfo(org.sireum.project.PublishInfo, boolean);
    descriptor: (Lorg/sireum/project/PublishInfo;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: getstatic     #143                // Field org/sireum/project/JSON$Printer$.MODULE$:Lorg/sireum/project/JSON$Printer$;
         3: aload_1
         4: invokevirtual #216                // Method org/sireum/project/JSON$Printer$.printPublishInfo:(Lorg/sireum/project/PublishInfo;)Lorg/sireum/ST;
         7: astore_3
         8: getstatic     #152                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_2
        12: invokevirtual #156                // Method org/sireum/B$.$4B:(Z)Z
        15: ifeq          23
        18: aload_3
        19: invokevirtual #162                // Method org/sireum/ST.renderCompact:()Ljava/lang/String;
        22: areturn
        23: aload_3
        24: invokevirtual #165                // Method org/sireum/ST.render:()Ljava/lang/String;
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class org/sireum/ST ]
      LineNumberTable:
        line 317: 0
        line 318: 8
        line 319: 18
        line 321: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      20     3    st   Lorg/sireum/ST;
            0      28     0  this   Lorg/sireum/project/JSON$;
            0      28     1     o   Lorg/sireum/project/PublishInfo;
            0      28     2 isCompact   Z
    MethodParameters:
      Name                           Flags
      o                              final
      isCompact                      final

  public org.sireum.Either<org.sireum.project.PublishInfo, org.sireum.Json$ErrorMsg> toPublishInfo(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #226,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
         7: invokevirtual #193                // Method to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
        10: astore_2
        11: aload_2
        12: areturn
      LineNumberTable:
        line 330: 0
        line 331: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     2     r   Lorg/sireum/Either;
            0      13     0  this   Lorg/sireum/project/JSON$;
            0      13     1     s   Ljava/lang/String;
    Signature: #219                         // (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/PublishInfo;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String fromPublishInfoLicense(org.sireum.project.PublishInfo$License, boolean);
    descriptor: (Lorg/sireum/project/PublishInfo$License;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: getstatic     #143                // Field org/sireum/project/JSON$Printer$.MODULE$:Lorg/sireum/project/JSON$Printer$;
         3: aload_1
         4: invokevirtual #232                // Method org/sireum/project/JSON$Printer$.printPublishInfoLicense:(Lorg/sireum/project/PublishInfo$License;)Lorg/sireum/ST;
         7: astore_3
         8: getstatic     #152                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_2
        12: invokevirtual #156                // Method org/sireum/B$.$4B:(Z)Z
        15: ifeq          23
        18: aload_3
        19: invokevirtual #162                // Method org/sireum/ST.renderCompact:()Ljava/lang/String;
        22: areturn
        23: aload_3
        24: invokevirtual #165                // Method org/sireum/ST.render:()Ljava/lang/String;
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class org/sireum/ST ]
      LineNumberTable:
        line 335: 0
        line 336: 8
        line 337: 18
        line 339: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      20     3    st   Lorg/sireum/ST;
            0      28     0  this   Lorg/sireum/project/JSON$;
            0      28     1     o   Lorg/sireum/project/PublishInfo$License;
            0      28     2 isCompact   Z
    MethodParameters:
      Name                           Flags
      o                              final
      isCompact                      final

  public org.sireum.Either<org.sireum.project.PublishInfo$License, org.sireum.Json$ErrorMsg> toPublishInfoLicense(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #242,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
         7: invokevirtual #193                // Method to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
        10: astore_2
        11: aload_2
        12: areturn
      LineNumberTable:
        line 348: 0
        line 349: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     2     r   Lorg/sireum/Either;
            0      13     0  this   Lorg/sireum/project/JSON$;
            0      13     1     s   Ljava/lang/String;
    Signature: #235                         // (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/PublishInfo$License;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String fromPublishInfoDeveloper(org.sireum.project.PublishInfo$Developer, boolean);
    descriptor: (Lorg/sireum/project/PublishInfo$Developer;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: getstatic     #143                // Field org/sireum/project/JSON$Printer$.MODULE$:Lorg/sireum/project/JSON$Printer$;
         3: aload_1
         4: invokevirtual #248                // Method org/sireum/project/JSON$Printer$.printPublishInfoDeveloper:(Lorg/sireum/project/PublishInfo$Developer;)Lorg/sireum/ST;
         7: astore_3
         8: getstatic     #152                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_2
        12: invokevirtual #156                // Method org/sireum/B$.$4B:(Z)Z
        15: ifeq          23
        18: aload_3
        19: invokevirtual #162                // Method org/sireum/ST.renderCompact:()Ljava/lang/String;
        22: areturn
        23: aload_3
        24: invokevirtual #165                // Method org/sireum/ST.render:()Ljava/lang/String;
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class org/sireum/ST ]
      LineNumberTable:
        line 353: 0
        line 354: 8
        line 355: 18
        line 357: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      20     3    st   Lorg/sireum/ST;
            0      28     0  this   Lorg/sireum/project/JSON$;
            0      28     1     o   Lorg/sireum/project/PublishInfo$Developer;
            0      28     2 isCompact   Z
    MethodParameters:
      Name                           Flags
      o                              final
      isCompact                      final

  public org.sireum.Either<org.sireum.project.PublishInfo$Developer, org.sireum.Json$ErrorMsg> toPublishInfoDeveloper(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #258,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
         7: invokevirtual #193                // Method to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
        10: astore_2
        11: aload_2
        12: areturn
      LineNumberTable:
        line 366: 0
        line 367: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     2     r   Lorg/sireum/Either;
            0      13     0  this   Lorg/sireum/project/JSON$;
            0      13     1     s   Ljava/lang/String;
    Signature: #251                         // (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/project/PublishInfo$Developer;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final

  private static final org.sireum.project.Project fProject$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #263                // Method org/sireum/project/JSON$Parser.parseProject:()Lorg/sireum/project/Project;
         4: astore_1
         5: aload_1
         6: areturn
      LineNumberTable:
        line 291: 0
        line 292: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       2     1     r   Lorg/sireum/project/Project;
            0       7     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  public static final org.sireum.project.Project $anonfun$toProject$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #265                // Method fProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
         4: areturn
      LineNumberTable:
        line 294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  private static final org.sireum.project.Module fModule$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #270                // Method org/sireum/project/JSON$Parser.parseModule:()Lorg/sireum/project/Module;
         4: astore_1
         5: aload_1
         6: areturn
      LineNumberTable:
        line 309: 0
        line 310: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       2     1     r   Lorg/sireum/project/Module;
            0       7     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  public static final org.sireum.project.Module $anonfun$toModule$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #272                // Method fModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
         4: areturn
      LineNumberTable:
        line 312: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  private static final org.sireum.project.PublishInfo fPublishInfo$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #277                // Method org/sireum/project/JSON$Parser.parsePublishInfo:()Lorg/sireum/project/PublishInfo;
         4: astore_1
         5: aload_1
         6: areturn
      LineNumberTable:
        line 327: 0
        line 328: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       2     1     r   Lorg/sireum/project/PublishInfo;
            0       7     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  public static final org.sireum.project.PublishInfo $anonfun$toPublishInfo$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #279                // Method fPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
         4: areturn
      LineNumberTable:
        line 330: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  private static final org.sireum.project.PublishInfo$License fPublishInfoLicense$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #284                // Method org/sireum/project/JSON$Parser.parsePublishInfoLicense:()Lorg/sireum/project/PublishInfo$License;
         4: astore_1
         5: aload_1
         6: areturn
      LineNumberTable:
        line 345: 0
        line 346: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       2     1     r   Lorg/sireum/project/PublishInfo$License;
            0       7     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  public static final org.sireum.project.PublishInfo$License $anonfun$toPublishInfoLicense$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #286                // Method fPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
         4: areturn
      LineNumberTable:
        line 348: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  private static final org.sireum.project.PublishInfo$Developer fPublishInfoDeveloper$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #291                // Method org/sireum/project/JSON$Parser.parsePublishInfoDeveloper:()Lorg/sireum/project/PublishInfo$Developer;
         4: astore_1
         5: aload_1
         6: areturn
      LineNumberTable:
        line 363: 0
        line 364: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       2     1     r   Lorg/sireum/project/PublishInfo$Developer;
            0       7     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  public static final org.sireum.project.PublishInfo$Developer $anonfun$toPublishInfoDeveloper$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #293                // Method fPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
         4: areturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 parser   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  private org.sireum.project.JSON$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #294                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #306,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #15= #12 of #14;    // Left=class org/sireum/Either$Left of class org/sireum/Either
  public static #18= #17 of #14;          // Left$=class org/sireum/Either$Left$ of class org/sireum/Either
  public static final #21= #20 of #14;    // Right=class org/sireum/Either$Right of class org/sireum/Either
  public static #24= #23 of #14;          // Right$=class org/sireum/Either$Right$ of class org/sireum/Either
  public static final #29= #26 of #28;    // ErrorMsg=class org/sireum/Json$ErrorMsg of class org/sireum/Json
  public static final #34= #31 of #33;    // Parser=class org/sireum/project/JSON$Parser of class org/sireum/project/JSON
  public static #37= #36 of #33;          // Parser$=class org/sireum/project/JSON$Parser$ of class org/sireum/project/JSON
  public static #40= #39 of #33;          // Printer$=class org/sireum/project/JSON$Printer$ of class org/sireum/project/JSON
  public static final #45= #42 of #44;    // Developer=class org/sireum/project/PublishInfo$Developer of class org/sireum/project/PublishInfo
  public static final #48= #47 of #44;    // License=class org/sireum/project/PublishInfo$License of class org/sireum/project/PublishInfo
SourceFile: "JSON.scala"
BootstrapMethods:
  0: #188 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 (Ljava/lang/Object;)Ljava/lang/Object;
      #178 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
      #179 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
      #180 5
      #181 1
      #179 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
  1: #188 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 (Ljava/lang/Object;)Ljava/lang/Object;
      #208 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
      #209 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
      #180 5
      #181 1
      #209 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  2: #188 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 (Ljava/lang/Object;)Ljava/lang/Object;
      #224 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
      #225 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
      #180 5
      #181 1
      #225 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  3: #188 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 (Ljava/lang/Object;)Ljava/lang/Object;
      #240 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
      #241 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
      #180 5
      #181 1
      #241 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  4: #188 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 (Ljava/lang/Object;)Ljava/lang/Object;
      #256 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
      #257 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
      #180 5
      #181 1
      #257 (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  5: #303 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #208 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toModule$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
      #178 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toProject$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Project;
      #224 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfo$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
      #256 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfoDeveloper$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
      #240 REF_invokeStatic org/sireum/project/JSON$.$anonfun$toPublishInfoLicense$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  ScalaInlineInfo: length = 0x72 (unknown attribute)
   01 01 00 16 00 CC 00 CD 01 00 AE 00 AF 01 00 DC
   00 DD 01 00 FC 00 FD 01 00 EC 00 ED 01 00 35 00
   34 01 01 0A 00 CD 01 01 03 00 AF 01 01 11 00 DD
   01 01 1F 00 FD 01 01 18 00 ED 01 00 C3 00 C4 01
   00 89 00 8A 01 00 D3 00 D4 01 00 F3 00 F4 01 00
   E3 00 E4 01 00 3A 00 3B 01 00 CA 00 AB 01 00 AA
   00 AB 01 00 DA 00 AB 01 00 FA 00 AB 01 00 EA 00
   AB 01
  Scala: length = 0x0 (unknown attribute)

