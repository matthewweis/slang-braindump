Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/XmlStreamWriter.class
  Last modified May 29, 2022; size 3638 bytes
  SHA-256 checksum 7c09e0d0101b8d5782d61e05f185930df4f27cdda0a14add126ba12b4faef5a2
  Compiled from "XmlStreamWriter.java"
public class org.apache.commons.io.output.XmlStreamWriter extends java.io.Writer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #5                          // org/apache/commons/io/output/XmlStreamWriter
  super_class: #42                        // java/io/Writer
  interfaces: 0, fields: 7, methods: 11, attributes: 1
Constant pool:
    #1 = Class              #101          // org/apache/commons/io/IOUtils
    #2 = Methodref          #5.#102       // org/apache/commons/io/output/XmlStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
    #3 = Methodref          #42.#103      // java/io/Writer."<init>":()V
    #4 = Class              #104          // java/io/StringWriter
    #5 = Class              #105          // org/apache/commons/io/output/XmlStreamWriter
    #6 = Methodref          #4.#106       // java/io/StringWriter."<init>":(I)V
    #7 = Fieldref           #5.#107       // org/apache/commons/io/output/XmlStreamWriter.xmlPrologWriter:Ljava/io/StringWriter;
    #8 = Fieldref           #5.#108       // org/apache/commons/io/output/XmlStreamWriter.out:Ljava/io/OutputStream;
    #9 = String             #109          // UTF-8
   #10 = Fieldref           #5.#110       // org/apache/commons/io/output/XmlStreamWriter.defaultEncoding:Ljava/lang/String;
   #11 = Methodref          #5.#111       // org/apache/commons/io/output/XmlStreamWriter."<init>":(Ljava/io/File;Ljava/lang/String;)V
   #12 = Class              #112          // java/io/FileOutputStream
   #13 = Methodref          #12.#113      // java/io/FileOutputStream."<init>":(Ljava/io/File;)V
   #14 = Fieldref           #5.#114       // org/apache/commons/io/output/XmlStreamWriter.encoding:Ljava/lang/String;
   #15 = Fieldref           #5.#115       // org/apache/commons/io/output/XmlStreamWriter.writer:Ljava/io/Writer;
   #16 = Class              #116          // java/io/OutputStreamWriter
   #17 = Methodref          #16.#102      // java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
   #18 = Methodref          #4.#117       // java/io/StringWriter.toString:()Ljava/lang/String;
   #19 = Methodref          #42.#118      // java/io/Writer.write:(Ljava/lang/String;)V
   #20 = Methodref          #42.#119      // java/io/Writer.close:()V
   #21 = Methodref          #42.#120      // java/io/Writer.flush:()V
   #22 = Methodref          #4.#121       // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;
   #23 = Methodref          #122.#123     // java/lang/StringBuffer.length:()I
   #24 = Methodref          #4.#124       // java/io/StringWriter.write:([CII)V
   #25 = Methodref          #122.#125     // java/lang/StringBuffer.substring:(II)Ljava/lang/String;
   #26 = String             #126          // <?xml
   #27 = Methodref          #127.#128     // java/lang/String.equals:(Ljava/lang/Object;)Z
   #28 = String             #129          // ?>
   #29 = Methodref          #122.#130     // java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I
   #30 = Fieldref           #5.#131       // org/apache/commons/io/output/XmlStreamWriter.ENCODING_PATTERN:Ljava/util/regex/Pattern;
   #31 = Methodref          #132.#133     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #32 = Methodref          #134.#135     // java/util/regex/Matcher.find:()Z
   #33 = Methodref          #134.#136     // java/util/regex/Matcher.group:(I)Ljava/lang/String;
   #34 = Fieldref           #137.#138     // java/util/Locale.ROOT:Ljava/util/Locale;
   #35 = Methodref          #127.#139     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
   #36 = Methodref          #127.#123     // java/lang/String.length:()I
   #37 = Methodref          #127.#125     // java/lang/String.substring:(II)Ljava/lang/String;
   #38 = Methodref          #122.#117     // java/lang/StringBuffer.toString:()Ljava/lang/String;
   #39 = Methodref          #42.#124      // java/io/Writer.write:([CII)V
   #40 = Methodref          #5.#140       // org/apache/commons/io/output/XmlStreamWriter.detectEncoding:([CII)V
   #41 = Fieldref           #141.#131     // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;
   #42 = Class              #142          // java/io/Writer
   #43 = Utf8               BUFFER_SIZE
   #44 = Utf8               I
   #45 = Utf8               ConstantValue
   #46 = Integer            8192
   #47 = Utf8               out
   #48 = Utf8               Ljava/io/OutputStream;
   #49 = Utf8               defaultEncoding
   #50 = Utf8               Ljava/lang/String;
   #51 = Utf8               xmlPrologWriter
   #52 = Utf8               Ljava/io/StringWriter;
   #53 = Utf8               writer
   #54 = Utf8               Ljava/io/Writer;
   #55 = Utf8               encoding
   #56 = Utf8               ENCODING_PATTERN
   #57 = Utf8               Ljava/util/regex/Pattern;
   #58 = Utf8               <init>
   #59 = Utf8               (Ljava/io/OutputStream;)V
   #60 = Utf8               Code
   #61 = Utf8               LineNumberTable
   #62 = Utf8               LocalVariableTable
   #63 = Utf8               this
   #64 = Utf8               Lorg/apache/commons/io/output/XmlStreamWriter;
   #65 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V
   #66 = Utf8               StackMapTable
   #67 = Class              #105          // org/apache/commons/io/output/XmlStreamWriter
   #68 = Class              #143          // java/io/OutputStream
   #69 = Class              #144          // java/lang/String
   #70 = Utf8               (Ljava/io/File;)V
   #71 = Utf8               file
   #72 = Utf8               Ljava/io/File;
   #73 = Utf8               Exceptions
   #74 = Class              #145          // java/io/FileNotFoundException
   #75 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
   #76 = Utf8               getEncoding
   #77 = Utf8               ()Ljava/lang/String;
   #78 = Utf8               getDefaultEncoding
   #79 = Utf8               close
   #80 = Utf8               ()V
   #81 = Class              #146          // java/io/IOException
   #82 = Utf8               flush
   #83 = Utf8               detectEncoding
   #84 = Utf8               ([CII)V
   #85 = Utf8               m
   #86 = Utf8               Ljava/util/regex/Matcher;
   #87 = Utf8               xmlPrologEnd
   #88 = Utf8               cbuf
   #89 = Utf8               [C
   #90 = Utf8               off
   #91 = Utf8               len
   #92 = Utf8               size
   #93 = Utf8               xmlProlog
   #94 = Utf8               Ljava/lang/StringBuffer;
   #95 = Class              #147          // java/lang/StringBuffer
   #96 = Class              #148          // java/util/regex/Matcher
   #97 = Utf8               write
   #98 = Utf8               <clinit>
   #99 = Utf8               SourceFile
  #100 = Utf8               XmlStreamWriter.java
  #101 = Utf8               org/apache/commons/io/IOUtils
  #102 = NameAndType        #58:#65       // "<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
  #103 = NameAndType        #58:#80       // "<init>":()V
  #104 = Utf8               java/io/StringWriter
  #105 = Utf8               org/apache/commons/io/output/XmlStreamWriter
  #106 = NameAndType        #58:#149      // "<init>":(I)V
  #107 = NameAndType        #51:#52       // xmlPrologWriter:Ljava/io/StringWriter;
  #108 = NameAndType        #47:#48       // out:Ljava/io/OutputStream;
  #109 = Utf8               UTF-8
  #110 = NameAndType        #49:#50       // defaultEncoding:Ljava/lang/String;
  #111 = NameAndType        #58:#75       // "<init>":(Ljava/io/File;Ljava/lang/String;)V
  #112 = Utf8               java/io/FileOutputStream
  #113 = NameAndType        #58:#70       // "<init>":(Ljava/io/File;)V
  #114 = NameAndType        #55:#50       // encoding:Ljava/lang/String;
  #115 = NameAndType        #53:#54       // writer:Ljava/io/Writer;
  #116 = Utf8               java/io/OutputStreamWriter
  #117 = NameAndType        #150:#77      // toString:()Ljava/lang/String;
  #118 = NameAndType        #97:#151      // write:(Ljava/lang/String;)V
  #119 = NameAndType        #79:#80       // close:()V
  #120 = NameAndType        #82:#80       // flush:()V
  #121 = NameAndType        #152:#153     // getBuffer:()Ljava/lang/StringBuffer;
  #122 = Class              #147          // java/lang/StringBuffer
  #123 = NameAndType        #154:#155     // length:()I
  #124 = NameAndType        #97:#84       // write:([CII)V
  #125 = NameAndType        #156:#157     // substring:(II)Ljava/lang/String;
  #126 = Utf8               <?xml
  #127 = Class              #144          // java/lang/String
  #128 = NameAndType        #158:#159     // equals:(Ljava/lang/Object;)Z
  #129 = Utf8               ?>
  #130 = NameAndType        #160:#161     // indexOf:(Ljava/lang/String;)I
  #131 = NameAndType        #56:#57       // ENCODING_PATTERN:Ljava/util/regex/Pattern;
  #132 = Class              #162          // java/util/regex/Pattern
  #133 = NameAndType        #163:#164     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
  #134 = Class              #148          // java/util/regex/Matcher
  #135 = NameAndType        #165:#166     // find:()Z
  #136 = NameAndType        #167:#168     // group:(I)Ljava/lang/String;
  #137 = Class              #169          // java/util/Locale
  #138 = NameAndType        #170:#171     // ROOT:Ljava/util/Locale;
  #139 = NameAndType        #172:#173     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
  #140 = NameAndType        #83:#84       // detectEncoding:([CII)V
  #141 = Class              #174          // org/apache/commons/io/input/XmlStreamReader
  #142 = Utf8               java/io/Writer
  #143 = Utf8               java/io/OutputStream
  #144 = Utf8               java/lang/String
  #145 = Utf8               java/io/FileNotFoundException
  #146 = Utf8               java/io/IOException
  #147 = Utf8               java/lang/StringBuffer
  #148 = Utf8               java/util/regex/Matcher
  #149 = Utf8               (I)V
  #150 = Utf8               toString
  #151 = Utf8               (Ljava/lang/String;)V
  #152 = Utf8               getBuffer
  #153 = Utf8               ()Ljava/lang/StringBuffer;
  #154 = Utf8               length
  #155 = Utf8               ()I
  #156 = Utf8               substring
  #157 = Utf8               (II)Ljava/lang/String;
  #158 = Utf8               equals
  #159 = Utf8               (Ljava/lang/Object;)Z
  #160 = Utf8               indexOf
  #161 = Utf8               (Ljava/lang/String;)I
  #162 = Utf8               java/util/regex/Pattern
  #163 = Utf8               matcher
  #164 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
  #165 = Utf8               find
  #166 = Utf8               ()Z
  #167 = Utf8               group
  #168 = Utf8               (I)Ljava/lang/String;
  #169 = Utf8               java/util/Locale
  #170 = Utf8               ROOT
  #171 = Utf8               Ljava/util/Locale;
  #172 = Utf8               toUpperCase
  #173 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #174 = Utf8               org/apache/commons/io/input/XmlStreamReader
{
  private static final int BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 8192

  private final java.io.OutputStream out;
    descriptor: Ljava/io/OutputStream;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String defaultEncoding;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.io.StringWriter xmlPrologWriter;
    descriptor: Ljava/io/StringWriter;
    flags: (0x0002) ACC_PRIVATE

  private java.io.Writer writer;
    descriptor: Ljava/io/Writer;
    flags: (0x0002) ACC_PRIVATE

  private java.lang.String encoding;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  static final java.util.regex.Pattern ENCODING_PATTERN;
    descriptor: Ljava/util/regex/Pattern;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  public org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream);
    descriptor: (Ljava/io/OutputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: aconst_null
         3: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
         6: return
      LineNumberTable:
        line 61: 0
        line 62: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
            0       7     1   out   Ljava/io/OutputStream;

  public org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream, java.lang.String);
    descriptor: (Ljava/io/OutputStream;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: invokespecial #3                  // Method java/io/Writer."<init>":()V
         4: aload_0
         5: new           #4                  // class java/io/StringWriter
         8: dup
         9: sipush        8192
        12: invokespecial #6                  // Method java/io/StringWriter."<init>":(I)V
        15: putfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;
        18: aload_0
        19: aload_1
        20: putfield      #8                  // Field out:Ljava/io/OutputStream;
        23: aload_0
        24: aload_2
        25: ifnull        32
        28: aload_2
        29: goto          34
        32: ldc           #9                  // String UTF-8
        34: putfield      #10                 // Field defaultEncoding:Ljava/lang/String;
        37: return
      LineNumberTable:
        line 71: 0
        line 48: 4
        line 72: 18
        line 73: 23
        line 74: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
            0      38     1   out   Ljava/io/OutputStream;
            0      38     2 defaultEncoding   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [ class org/apache/commons/io/output/XmlStreamWriter, class java/io/OutputStream, class java/lang/String ]
          stack = [ class org/apache/commons/io/output/XmlStreamWriter ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/apache/commons/io/output/XmlStreamWriter, class java/io/OutputStream, class java/lang/String ]
          stack = [ class org/apache/commons/io/output/XmlStreamWriter, class java/lang/String ]

  public org.apache.commons.io.output.XmlStreamWriter(java.io.File) throws java.io.FileNotFoundException;
    descriptor: (Ljava/io/File;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: aconst_null
         3: invokespecial #11                 // Method "<init>":(Ljava/io/File;Ljava/lang/String;)V
         6: return
      LineNumberTable:
        line 85: 0
        line 86: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
            0       7     1  file   Ljava/io/File;
    Exceptions:
      throws java.io.FileNotFoundException

  public org.apache.commons.io.output.XmlStreamWriter(java.io.File, java.lang.String) throws java.io.FileNotFoundException;
    descriptor: (Ljava/io/File;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: new           #12                 // class java/io/FileOutputStream
         4: dup
         5: aload_1
         6: invokespecial #13                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
         9: aload_2
        10: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
        13: return
      LineNumberTable:
        line 99: 0
        line 100: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
            0      14     1  file   Ljava/io/File;
            0      14     2 defaultEncoding   Ljava/lang/String;
    Exceptions:
      throws java.io.FileNotFoundException

  public java.lang.String getEncoding();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #14                 // Field encoding:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;

  public java.lang.String getDefaultEncoding();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getfield      #15                 // Field writer:Ljava/io/Writer;
         4: ifnonnull     48
         7: aload_0
         8: aload_0
         9: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;
        12: putfield      #14                 // Field encoding:Ljava/lang/String;
        15: aload_0
        16: new           #16                 // class java/io/OutputStreamWriter
        19: dup
        20: aload_0
        21: getfield      #8                  // Field out:Ljava/io/OutputStream;
        24: aload_0
        25: getfield      #14                 // Field encoding:Ljava/lang/String;
        28: invokespecial #17                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
        31: putfield      #15                 // Field writer:Ljava/io/Writer;
        34: aload_0
        35: getfield      #15                 // Field writer:Ljava/io/Writer;
        38: aload_0
        39: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;
        42: invokevirtual #18                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
        45: invokevirtual #19                 // Method java/io/Writer.write:(Ljava/lang/String;)V
        48: aload_0
        49: getfield      #15                 // Field writer:Ljava/io/Writer;
        52: invokevirtual #20                 // Method java/io/Writer.close:()V
        55: return
      LineNumberTable:
        line 127: 0
        line 128: 7
        line 129: 15
        line 130: 34
        line 132: 48
        line 133: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
      StackMapTable: number_of_entries = 1
        frame_type = 48 /* same */
    Exceptions:
      throws java.io.IOException

  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #15                 // Field writer:Ljava/io/Writer;
         4: ifnull        14
         7: aload_0
         8: getfield      #15                 // Field writer:Ljava/io/Writer;
        11: invokevirtual #21                 // Method java/io/Writer.flush:()V
        14: return
      LineNumberTable:
        line 142: 0
        line 143: 7
        line 145: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
    Exceptions:
      throws java.io.IOException

  private void detectEncoding(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=8, args_size=4
         0: iload_3
         1: istore        4
         3: aload_0
         4: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;
         7: invokevirtual #22                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;
        10: astore        5
        12: aload         5
        14: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I
        17: iload_3
        18: iadd
        19: sipush        8192
        22: if_icmple     36
        25: sipush        8192
        28: aload         5
        30: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I
        33: isub
        34: istore        4
        36: aload_0
        37: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;
        40: aload_1
        41: iload_2
        42: iload         4
        44: invokevirtual #24                 // Method java/io/StringWriter.write:([CII)V
        47: aload         5
        49: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I
        52: iconst_5
        53: if_icmplt     255
        56: aload         5
        58: iconst_0
        59: iconst_5
        60: invokevirtual #25                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;
        63: ldc           #26                 // String <?xml
        65: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        68: ifeq          182
        71: aload         5
        73: ldc           #28                 // String ?>
        75: invokevirtual #29                 // Method java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I
        78: istore        6
        80: iload         6
        82: ifle          160
        85: getstatic     #30                 // Field ENCODING_PATTERN:Ljava/util/regex/Pattern;
        88: aload         5
        90: iconst_0
        91: iload         6
        93: invokevirtual #25                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;
        96: invokevirtual #31                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
        99: astore        7
       101: aload         7
       103: invokevirtual #32                 // Method java/util/regex/Matcher.find:()Z
       106: ifeq          149
       109: aload_0
       110: aload         7
       112: iconst_1
       113: invokevirtual #33                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       116: getstatic     #34                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
       119: invokevirtual #35                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
       122: putfield      #14                 // Field encoding:Ljava/lang/String;
       125: aload_0
       126: aload_0
       127: getfield      #14                 // Field encoding:Ljava/lang/String;
       130: iconst_1
       131: aload_0
       132: getfield      #14                 // Field encoding:Ljava/lang/String;
       135: invokevirtual #36                 // Method java/lang/String.length:()I
       138: iconst_1
       139: isub
       140: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       143: putfield      #14                 // Field encoding:Ljava/lang/String;
       146: goto          157
       149: aload_0
       150: aload_0
       151: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;
       154: putfield      #14                 // Field encoding:Ljava/lang/String;
       157: goto          179
       160: aload         5
       162: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I
       165: sipush        8192
       168: if_icmplt     179
       171: aload_0
       172: aload_0
       173: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;
       176: putfield      #14                 // Field encoding:Ljava/lang/String;
       179: goto          190
       182: aload_0
       183: aload_0
       184: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;
       187: putfield      #14                 // Field encoding:Ljava/lang/String;
       190: aload_0
       191: getfield      #14                 // Field encoding:Ljava/lang/String;
       194: ifnull        255
       197: aload_0
       198: aconst_null
       199: putfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;
       202: aload_0
       203: new           #16                 // class java/io/OutputStreamWriter
       206: dup
       207: aload_0
       208: getfield      #8                  // Field out:Ljava/io/OutputStream;
       211: aload_0
       212: getfield      #14                 // Field encoding:Ljava/lang/String;
       215: invokespecial #17                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
       218: putfield      #15                 // Field writer:Ljava/io/Writer;
       221: aload_0
       222: getfield      #15                 // Field writer:Ljava/io/Writer;
       225: aload         5
       227: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
       230: invokevirtual #19                 // Method java/io/Writer.write:(Ljava/lang/String;)V
       233: iload_3
       234: iload         4
       236: if_icmple     255
       239: aload_0
       240: getfield      #15                 // Field writer:Ljava/io/Writer;
       243: aload_1
       244: iload_2
       245: iload         4
       247: iadd
       248: iload_3
       249: iload         4
       251: isub
       252: invokevirtual #39                 // Method java/io/Writer.write:([CII)V
       255: return
      LineNumberTable:
        line 157: 0
        line 158: 3
        line 159: 12
        line 160: 25
        line 162: 36
        line 165: 47
        line 166: 56
        line 168: 71
        line 169: 80
        line 171: 85
        line 173: 101
        line 174: 109
        line 175: 125
        line 179: 149
        line 181: 157
        line 182: 160
        line 185: 171
        line 188: 179
        line 190: 182
        line 192: 190
        line 194: 197
        line 195: 202
        line 196: 221
        line 197: 233
        line 198: 239
        line 202: 255
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          101      56     7     m   Ljava/util/regex/Matcher;
           80      99     6 xmlPrologEnd   I
            0     256     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
            0     256     1  cbuf   [C
            0     256     2   off   I
            0     256     3   len   I
            3     253     4  size   I
           12     244     5 xmlProlog   Ljava/lang/StringBuffer;
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ int, class java/lang/StringBuffer ]
        frame_type = 253 /* append */
          offset_delta = 112
          locals = [ int, class java/util/regex/Matcher ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 2 /* same */
        frame_type = 250 /* chop */
          offset_delta = 18
        frame_type = 2 /* same */
        frame_type = 7 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 64
    Exceptions:
      throws java.io.IOException

  public void write(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;
         4: ifnull        17
         7: aload_0
         8: aload_1
         9: iload_2
        10: iload_3
        11: invokespecial #40                 // Method detectEncoding:([CII)V
        14: goto          27
        17: aload_0
        18: getfield      #15                 // Field writer:Ljava/io/Writer;
        21: aload_1
        22: iload_2
        23: iload_3
        24: invokevirtual #39                 // Method java/io/Writer.write:([CII)V
        27: return
      LineNumberTable:
        line 214: 0
        line 215: 7
        line 217: 17
        line 219: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;
            0      28     1  cbuf   [C
            0      28     2   off   I
            0      28     3   len   I
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 9 /* same */
    Exceptions:
      throws java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #41                 // Field org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;
         3: putstatic     #30                 // Field ENCODING_PATTERN:Ljava/util/regex/Pattern;
         6: return
      LineNumberTable:
        line 221: 0
}
SourceFile: "XmlStreamWriter.java"
