Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$CopyToArray.class
  Last modified May 29, 2022; size 10233 bytes
  SHA-256 checksum e7b8f31237897f261bdec6f9afa73a8523c86e5f083d8557dbc83f9f67045786
  Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$CopyToArray<U extends java.lang.Object, This extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.runtime.BoxedUnit, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.CopyToArray<U, This>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParIterableLike$CopyToArray
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 34, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$CopyToArray
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$CopyToArray
    #3 = Utf8               <U:Ljava/lang/Object;This:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/runtime/BoxedUnit;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CopyToArray<TU;TThis;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$Accessor
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike
   #16 = Utf8               Accessor
   #17 = Utf8               CopyToArray
   #18 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #19 = Class              #18           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #20 = Utf8               StrictSplitterCheckTask
   #21 = Utf8               from
   #22 = Utf8               I
   #23 = Utf8               len
   #24 = Utf8               array
   #25 = Utf8               Ljava/lang/Object;
   #26 = Utf8               pit
   #27 = Utf8               Lscala/collection/parallel/IterableSplitter;
   #28 = Utf8               Lscala/collection/parallel/IterableSplitter<TT;>;
   #29 = Utf8               result
   #30 = Utf8               Lscala/runtime/BoxedUnit;
   #31 = Utf8               throwable
   #32 = Utf8               Ljava/lang/Throwable;
   #33 = Utf8               $outer
   #34 = Utf8               Lscala/collection/parallel/ParIterableLike;
   #35 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #36 = Utf8               ()Ljava/lang/String;
   #37 = Utf8               toString
   #38 = NameAndType        #37:#36       // toString:()Ljava/lang/String;
   #39 = Methodref          #5.#38        // java/lang/Object.toString:()Ljava/lang/String;
   #40 = Utf8               this
   #41 = Utf8               Lscala/collection/parallel/ParIterableLike$CopyToArray;
   #42 = Utf8               shouldSplitFurther
   #43 = Utf8               ()Z
   #44 = Utf8               shouldSplitFurther$
   #45 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #46 = NameAndType        #44:#45       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #47 = InterfaceMethodref #7.#46        // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #48 = Utf8               signalAbort
   #49 = Utf8               ()V
   #50 = Utf8               signalAbort$
   #51 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #52 = NameAndType        #50:#51       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #53 = InterfaceMethodref #7.#52        // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #54 = Utf8               toString$
   #55 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #56 = NameAndType        #54:#55       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #57 = InterfaceMethodref #7.#56        // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #58 = Utf8               repr
   #59 = Utf8               ()Ljava/lang/Object;
   #60 = Utf8               scala/collection/parallel/Task
   #61 = Class              #60           // scala/collection/parallel/Task
   #62 = Utf8               repr$
   #63 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #64 = NameAndType        #62:#63       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #65 = InterfaceMethodref #61.#64       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #66 = Utf8               merge
   #67 = Utf8               (Ljava/lang/Object;)V
   #68 = Utf8               that
   #69 = Utf8               merge$
   #70 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #71 = NameAndType        #69:#70       // merge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #72 = InterfaceMethodref #61.#71       // scala/collection/parallel/Task.merge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #73 = Utf8               forwardThrowable
   #74 = Utf8               forwardThrowable$
   #75 = Utf8               (Lscala/collection/parallel/Task;)V
   #76 = NameAndType        #74:#75       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #77 = InterfaceMethodref #61.#76       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #78 = Utf8               tryLeaf
   #79 = Utf8               (Lscala/Option;)V
   #80 = Utf8               (Lscala/Option<Lscala/runtime/BoxedUnit;>;)V
   #81 = Utf8               lastres
   #82 = Utf8               tryLeaf$
   #83 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #84 = NameAndType        #82:#83       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #85 = InterfaceMethodref #61.#84       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #86 = Utf8               Lscala/Option;
   #87 = Utf8               tryMerge
   #88 = Utf8               t
   #89 = Utf8               tryMerge$
   #90 = NameAndType        #89:#70       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #91 = InterfaceMethodref #61.#90       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #92 = Utf8               mergeThrowables
   #93 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #94 = Utf8               mergeThrowables$
   #95 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #96 = NameAndType        #94:#95       // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #97 = InterfaceMethodref #61.#96       // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #98 = Utf8               Lscala/collection/parallel/Task;
   #99 = Utf8               ()Ljava/lang/Throwable;
  #100 = NameAndType        #31:#32       // throwable:Ljava/lang/Throwable;
  #101 = Fieldref           #2.#100       // scala/collection/parallel/ParIterableLike$CopyToArray.throwable:Ljava/lang/Throwable;
  #102 = Utf8               throwable_$eq
  #103 = Utf8               (Ljava/lang/Throwable;)V
  #104 = Utf8               x$1
  #105 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #106 = Utf8               ()Lscala/collection/parallel/IterableSplitter<TT;>;
  #107 = NameAndType        #26:#27       // pit:Lscala/collection/parallel/IterableSplitter;
  #108 = Fieldref           #2.#107       // scala/collection/parallel/ParIterableLike$CopyToArray.pit:Lscala/collection/parallel/IterableSplitter;
  #109 = NameAndType        #29:#30       // result:Lscala/runtime/BoxedUnit;
  #110 = Fieldref           #2.#109       // scala/collection/parallel/ParIterableLike$CopyToArray.result:Lscala/runtime/BoxedUnit;
  #111 = Utf8               result_$eq
  #112 = Utf8               (Lscala/runtime/BoxedUnit;)V
  #113 = Utf8               leaf
  #114 = Utf8               prev
  #115 = NameAndType        #26:#105      // pit:()Lscala/collection/parallel/IterableSplitter;
  #116 = Methodref          #2.#115       // scala/collection/parallel/ParIterableLike$CopyToArray.pit:()Lscala/collection/parallel/IterableSplitter;
  #117 = NameAndType        #24:#25       // array:Ljava/lang/Object;
  #118 = Fieldref           #2.#117       // scala/collection/parallel/ParIterableLike$CopyToArray.array:Ljava/lang/Object;
  #119 = NameAndType        #21:#22       // from:I
  #120 = Fieldref           #2.#119       // scala/collection/parallel/ParIterableLike$CopyToArray.from:I
  #121 = NameAndType        #23:#22       // len:I
  #122 = Fieldref           #2.#121       // scala/collection/parallel/ParIterableLike$CopyToArray.len:I
  #123 = Utf8               scala/collection/parallel/IterableSplitter
  #124 = Class              #123          // scala/collection/parallel/IterableSplitter
  #125 = Utf8               copyToArray
  #126 = Utf8               (Ljava/lang/Object;II)I
  #127 = NameAndType        #125:#126     // copyToArray:(Ljava/lang/Object;II)I
  #128 = InterfaceMethodref #124.#127     // scala/collection/parallel/IterableSplitter.copyToArray:(Ljava/lang/Object;II)I
  #129 = Utf8               newSubtask
  #130 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #131 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #132 = Utf8               p
  #133 = Utf8               java/lang/UnsupportedOperationException
  #134 = Class              #133          // java/lang/UnsupportedOperationException
  #135 = Utf8               <init>
  #136 = NameAndType        #135:#49      // "<init>":()V
  #137 = Methodref          #134.#136     // java/lang/UnsupportedOperationException."<init>":()V
  #138 = Utf8               split
  #139 = Utf8               ()Lscala/collection/immutable/Seq;
  #140 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/runtime/BoxedUnit;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CopyToArray<TU;TThis;>;>;>;
  #141 = Utf8               splitWithSignalling
  #142 = NameAndType        #141:#139     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #143 = InterfaceMethodref #124.#142     // scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #144 = Utf8               scala/runtime/BoxesRunTime
  #145 = Class              #144          // scala/runtime/BoxesRunTime
  #146 = Utf8               boxToInteger
  #147 = Utf8               (I)Ljava/lang/Integer;
  #148 = NameAndType        #146:#147     // boxToInteger:(I)Ljava/lang/Integer;
  #149 = Methodref          #145.#148     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #150 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #151 = MethodType         #150          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #152 = Utf8               $anonfun$split$27$adapted
  #153 = Utf8               (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #154 = NameAndType        #152:#153     // $anonfun$split$27$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #155 = Methodref          #2.#154       // scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$27$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #156 = MethodHandle       6:#155        // REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$27$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #157 = MethodType         #153          //  (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #158 = Integer            5
  #159 = Integer            1
  #160 = Utf8               java/lang/invoke/LambdaMetafactory
  #161 = Class              #160          // java/lang/invoke/LambdaMetafactory
  #162 = Utf8               altMetafactory
  #163 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #164 = NameAndType        #162:#163     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #165 = Methodref          #161.#164     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #166 = MethodHandle       6:#165        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = Utf8               apply
  #168 = Utf8               ()Lscala/Function2;
  #169 = NameAndType        #167:#168     // apply:()Lscala/Function2;
  #170 = InvokeDynamic      #0:#169       // #0:apply:()Lscala/Function2;
  #171 = Utf8               scala/collection/immutable/Seq
  #172 = Class              #171          // scala/collection/immutable/Seq
  #173 = Utf8               scanLeft
  #174 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #175 = NameAndType        #173:#174     // scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #176 = InterfaceMethodref #172.#175     // scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #177 = Utf8               scala/collection/IterableOnce
  #178 = Class              #177          // scala/collection/IterableOnce
  #179 = Utf8               zip
  #180 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #181 = NameAndType        #179:#180     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #182 = InterfaceMethodref #172.#181     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #183 = Utf8               scala/collection/IterableOps
  #184 = Class              #183          // scala/collection/IterableOps
  #185 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #186 = MethodType         #185          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #187 = Utf8               $anonfun$split$28$adapted
  #188 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #189 = NameAndType        #187:#188     // $anonfun$split$28$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #190 = Methodref          #2.#189       // scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$28$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #191 = MethodHandle       6:#190        // REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$28$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #192 = MethodType         #188          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #193 = Utf8               ()Lscala/Function1;
  #194 = NameAndType        #167:#193     // apply:()Lscala/Function1;
  #195 = InvokeDynamic      #1:#194       // #1:apply:()Lscala/Function1;
  #196 = Utf8               withFilter
  #197 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #198 = NameAndType        #196:#197     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #199 = InterfaceMethodref #184.#198     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #200 = Utf8               $anonfun$split$29$adapted
  #201 = Utf8               (Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Ljava/lang/Object;
  #202 = NameAndType        #200:#201     // $anonfun$split$29$adapted:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Ljava/lang/Object;
  #203 = Methodref          #2.#202       // scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$29$adapted:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Ljava/lang/Object;
  #204 = MethodHandle       6:#203        // REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$29$adapted:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Ljava/lang/Object;
  #205 = Utf8               (Lscala/collection/parallel/ParIterableLike$CopyToArray;)Lscala/Function1;
  #206 = NameAndType        #167:#205     // apply:(Lscala/collection/parallel/ParIterableLike$CopyToArray;)Lscala/Function1;
  #207 = InvokeDynamic      #2:#206       // #2:apply:(Lscala/collection/parallel/ParIterableLike$CopyToArray;)Lscala/Function1;
  #208 = Utf8               scala/collection/WithFilter
  #209 = Class              #208          // scala/collection/WithFilter
  #210 = Methodref          #209.#198     // scala/collection/WithFilter.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #211 = Utf8               $anonfun$split$30
  #212 = Utf8               (Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #213 = NameAndType        #211:#212     // $anonfun$split$30:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #214 = Methodref          #2.#213       // scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$30:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #215 = MethodHandle       6:#214        // REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$30:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #216 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #217 = MethodType         #216          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #218 = InvokeDynamic      #3:#206       // #3:apply:(Lscala/collection/parallel/ParIterableLike$CopyToArray;)Lscala/Function1;
  #219 = Utf8               map
  #220 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #221 = NameAndType        #219:#220     // map:(Lscala/Function1;)Ljava/lang/Object;
  #222 = Methodref          #209.#221     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #223 = Utf8               pits
  #224 = Utf8               Lscala/collection/immutable/Seq;
  #225 = Utf8               requiresStrictSplitters
  #226 = Utf8               scala$collection$parallel$ParIterableLike$CopyToArray$$$outer
  #227 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #228 = NameAndType        #33:#34       // $outer:Lscala/collection/parallel/ParIterableLike;
  #229 = Fieldref           #2.#228       // scala/collection/parallel/ParIterableLike$CopyToArray.$outer:Lscala/collection/parallel/ParIterableLike;
  #230 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #231 = NameAndType        #226:#227     // scala$collection$parallel$ParIterableLike$CopyToArray$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #232 = Methodref          #2.#231       // scala/collection/parallel/ParIterableLike$CopyToArray.scala$collection$parallel$ParIterableLike$CopyToArray$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #233 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #234 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #235 = NameAndType        #129:#130     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #236 = Methodref          #2.#235       // scala/collection/parallel/ParIterableLike$CopyToArray.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #237 = Utf8               scala/runtime/BoxedUnit
  #238 = Class              #237          // scala/runtime/BoxedUnit
  #239 = NameAndType        #111:#112     // result_$eq:(Lscala/runtime/BoxedUnit;)V
  #240 = Methodref          #2.#239       // scala/collection/parallel/ParIterableLike$CopyToArray.result_$eq:(Lscala/runtime/BoxedUnit;)V
  #241 = NameAndType        #29:#49       // result:()V
  #242 = Methodref          #2.#241       // scala/collection/parallel/ParIterableLike$CopyToArray.result:()V
  #243 = Utf8               UNIT
  #244 = NameAndType        #243:#30      // UNIT:Lscala/runtime/BoxedUnit;
  #245 = Fieldref           #238.#244     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #246 = Utf8               $anonfun$split$27
  #247 = Utf8               (ILscala/collection/parallel/IterableSplitter;)I
  #248 = Utf8               x$38
  #249 = Utf8               x$39
  #250 = Utf8               remaining
  #251 = Utf8               ()I
  #252 = NameAndType        #250:#251     // remaining:()I
  #253 = InterfaceMethodref #124.#252     // scala/collection/parallel/IterableSplitter.remaining:()I
  #254 = Utf8               $anonfun$split$28
  #255 = Utf8               (Lscala/Tuple2;)Z
  #256 = Utf8               check$ifrefutable$7
  #257 = Utf8               Lscala/Tuple2;
  #258 = Utf8               scala/Tuple2
  #259 = Class              #258          // scala/Tuple2
  #260 = Utf8               $anonfun$split$29
  #261 = Utf8               (Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Z
  #262 = Utf8               $this
  #263 = Utf8               x$40
  #264 = Utf8               _2$mcI$sp
  #265 = NameAndType        #264:#251     // _2$mcI$sp:()I
  #266 = Methodref          #259.#265     // scala/Tuple2._2$mcI$sp:()I
  #267 = Utf8               scala/MatchError
  #268 = Class              #267          // scala/MatchError
  #269 = NameAndType        #135:#67      // "<init>":(Ljava/lang/Object;)V
  #270 = Methodref          #268.#269     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #271 = Utf8               untilp
  #272 = Utf8               x$41
  #273 = Utf8               _1
  #274 = NameAndType        #273:#59      // _1:()Ljava/lang/Object;
  #275 = Methodref          #259.#274     // scala/Tuple2._1:()Ljava/lang/Object;
  #276 = Utf8               scala/runtime/RichInt$
  #277 = Class              #276          // scala/runtime/RichInt$
  #278 = Utf8               MODULE$
  #279 = Utf8               Lscala/runtime/RichInt$;
  #280 = NameAndType        #278:#279     // MODULE$:Lscala/runtime/RichInt$;
  #281 = Fieldref           #277.#280     // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #282 = Utf8               scala/Predef$
  #283 = Class              #282          // scala/Predef$
  #284 = Utf8               Lscala/Predef$;
  #285 = NameAndType        #278:#284     // MODULE$:Lscala/Predef$;
  #286 = Fieldref           #283.#285     // scala/Predef$.MODULE$:Lscala/Predef$;
  #287 = Utf8               intWrapper
  #288 = Utf8               (I)I
  #289 = NameAndType        #287:#288     // intWrapper:(I)I
  #290 = Methodref          #283.#289     // scala/Predef$.intWrapper:(I)I
  #291 = Utf8               min$extension
  #292 = Utf8               (II)I
  #293 = NameAndType        #291:#292     // min$extension:(II)I
  #294 = Methodref          #277.#293     // scala/runtime/RichInt$.min$extension:(II)I
  #295 = Utf8               (Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter;)V
  #296 = NameAndType        #135:#295     // "<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter;)V
  #297 = Methodref          #2.#296       // scala/collection/parallel/ParIterableLike$CopyToArray."<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter;)V
  #298 = Utf8               plen
  #299 = Utf8               (IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter<TT;>;)V
  #300 = Methodref          #5.#136       // java/lang/Object."<init>":()V
  #301 = Utf8               $init$
  #302 = NameAndType        #301:#75      // $init$:(Lscala/collection/parallel/Task;)V
  #303 = InterfaceMethodref #61.#302      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #304 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #305 = NameAndType        #301:#304     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #306 = InterfaceMethodref #19.#305      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #307 = NameAndType        #301:#51      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #308 = InterfaceMethodref #7.#307       // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #309 = Utf8               unboxToInt
  #310 = Utf8               (Ljava/lang/Object;)I
  #311 = NameAndType        #309:#310     // unboxToInt:(Ljava/lang/Object;)I
  #312 = Methodref          #145.#311     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #313 = NameAndType        #246:#247     // $anonfun$split$27:(ILscala/collection/parallel/IterableSplitter;)I
  #314 = Methodref          #2.#313       // scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$27:(ILscala/collection/parallel/IterableSplitter;)I
  #315 = NameAndType        #254:#255     // $anonfun$split$28:(Lscala/Tuple2;)Z
  #316 = Methodref          #2.#315       // scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$28:(Lscala/Tuple2;)Z
  #317 = Utf8               boxToBoolean
  #318 = Utf8               (Z)Ljava/lang/Boolean;
  #319 = NameAndType        #317:#318     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #320 = Methodref          #145.#319     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #321 = NameAndType        #260:#261     // $anonfun$split$29:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Z
  #322 = Methodref          #2.#321       // scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$29:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Z
  #323 = Utf8               $deserializeLambda$
  #324 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #325 = Utf8               scala/runtime/LambdaDeserialize
  #326 = Class              #325          // scala/runtime/LambdaDeserialize
  #327 = Utf8               bootstrap
  #328 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #329 = NameAndType        #327:#328     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #330 = Methodref          #326.#329     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #331 = MethodHandle       6:#330        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #332 = Utf8               lambdaDeserialize
  #333 = NameAndType        #332:#324     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #334 = InvokeDynamic      #4:#333       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #335 = Utf8               Signature
  #336 = Utf8               Code
  #337 = Utf8               LineNumberTable
  #338 = Utf8               LocalVariableTable
  #339 = Utf8               MethodParameters
  #340 = Utf8               StackMapTable
  #341 = Utf8               InnerClasses
  #342 = Utf8               SourceFile
  #343 = Utf8               BootstrapMethods
  #344 = Utf8               ScalaInlineInfo
  #345 = Utf8               Scala
{
  private final int from;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int len;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Object array;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #25                          // Ljava/lang/Object;

  private final scala.collection.parallel.IterableSplitter<T> pit;
    descriptor: Lscala/collection/parallel/IterableSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/collection/parallel/IterableSplitter<TT;>;

  private volatile scala.runtime.BoxedUnit result;
    descriptor: Lscala/runtime/BoxedUnit;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParIterableLike $outer;
    descriptor: Lscala/collection/parallel/ParIterableLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #39                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #47                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #57                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #65                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #72                 // InterfaceMethod scala/collection/parallel/Task.merge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #77                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public void tryLeaf(scala.Option<scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #85                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       6     1 lastres   Lscala/Option;
    Signature: #80                          // (Lscala/Option<Lscala/runtime/BoxedUnit;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #91                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #97                 // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #93                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #101                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #101                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.IterableSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field pit:Lscala/collection/parallel/IterableSplitter;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
    Signature: #106                         // ()Lscala/collection/parallel/IterableSplitter<TT;>;

  public void result();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #110                // Field result:Lscala/runtime/BoxedUnit;
         4: pop
         5: return
      LineNumberTable:
        line 1289: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public void result_$eq(scala.runtime.BoxedUnit);
    descriptor: (Lscala/runtime/BoxedUnit;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #110                // Field result:Lscala/runtime/BoxedUnit;
         5: return
      LineNumberTable:
        line 1289: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       6     1   x$1   Lscala/runtime/BoxedUnit;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #116                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: aload_0
         5: getfield      #118                // Field array:Ljava/lang/Object;
         8: aload_0
         9: getfield      #120                // Field from:I
        12: aload_0
        13: getfield      #122                // Field len:I
        16: invokeinterface #128,  4          // InterfaceMethod scala/collection/parallel/IterableSplitter.copyToArray:(Ljava/lang/Object;II)I
        21: pop
        22: return
      LineNumberTable:
        line 1290: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0      23     1  prev   Lscala/Option;
    Signature: #80                          // (Lscala/Option<Lscala/runtime/BoxedUnit;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #134                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #137                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 1291: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #131                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.runtime.BoxedUnit, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.CopyToArray<U, This>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #116                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #143,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
         9: astore_1
        10: aload_1
        11: aload_1
        12: iconst_0
        13: invokestatic  #149                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        16: invokedynamic #170,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
        21: invokeinterface #176,  3          // InterfaceMethod scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        26: checkcast     #178                // class scala/collection/IterableOnce
        29: invokeinterface #182,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        34: checkcast     #184                // class scala/collection/IterableOps
        37: invokedynamic #195,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        42: invokeinterface #199,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        47: aload_0
        48: invokedynamic #207,  0            // InvokeDynamic #2:apply:(Lscala/collection/parallel/ParIterableLike$CopyToArray;)Lscala/Function1;
        53: invokevirtual #210                // Method scala/collection/WithFilter.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        56: aload_0
        57: invokedynamic #218,  0            // InvokeDynamic #3:apply:(Lscala/collection/parallel/ParIterableLike$CopyToArray;)Lscala/Function1;
        62: invokevirtual #222                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
        65: checkcast     #172                // class scala/collection/immutable/Seq
        68: areturn
      LineNumberTable:
        line 1293: 0
        line 1294: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      58     1  pits   Lscala/collection/immutable/Seq;
            0      69     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
    Signature: #140                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/runtime/BoxedUnit;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CopyToArray<TU;TThis;>;>;>;

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 1299: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$CopyToArray$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #229                // Field $outer:Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #232                // Method scala$collection$parallel$ParIterableLike$CopyToArray$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #232                // Method scala$collection$parallel$ParIterableLike$CopyToArray$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #236                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #238                // class scala/runtime/BoxedUnit
         5: invokevirtual #240                // Method result_$eq:(Lscala/runtime/BoxedUnit;)V
         8: return
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #242                // Method result:()V
         4: getstatic     #245                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 1287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;

  public static final int $anonfun$split$27(int, scala.collection.parallel.IterableSplitter);
    descriptor: (ILscala/collection/parallel/IterableSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokeinterface #253,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         7: iadd
         8: ireturn
      LineNumberTable:
        line 1294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$38   I
            0       9     1  x$39   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$38                           final
      x$39                           final

  public static final boolean $anonfun$split$28(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 1294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$7   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$7            final

  public static final boolean $anonfun$split$29(scala.collection.parallel.ParIterableLike$CopyToArray, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        30
         6: aload_3
         7: invokevirtual #266                // Method scala/Tuple2._2$mcI$sp:()I
        10: istore        4
        12: iload         4
        14: aload_0
        15: getfield      #122                // Field len:I
        18: if_icmpge     25
        21: iconst_1
        22: goto          26
        25: iconst_0
        26: istore_2
        27: goto          42
        30: goto          33
        33: new           #268                // class scala/MatchError
        36: dup
        37: aload_3
        38: invokespecial #270                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        41: athrow
        42: iload_2
        43: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 25
          locals = [ top, class scala/Tuple2, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParIterableLike$CopyToArray, class scala/Tuple2, int, class scala/Tuple2, int ]
          stack = []
      LineNumberTable:
        line 1294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      18     4 untilp   I
            0      44     0 $this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0      44     1  x$40   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$40                           final

  public static final scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$30(scala.collection.parallel.ParIterableLike$CopyToArray, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        79
         6: aload_3
         7: invokevirtual #275                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #124                // class scala/collection/parallel/IterableSplitter
        13: astore        4
        15: aload_3
        16: invokevirtual #266                // Method scala/Tuple2._2$mcI$sp:()I
        19: istore        5
        21: getstatic     #281                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        24: getstatic     #286                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        27: aload         4
        29: invokeinterface #253,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
        34: invokevirtual #290                // Method scala/Predef$.intWrapper:(I)I
        37: aload_0
        38: getfield      #122                // Field len:I
        41: iload         5
        43: isub
        44: invokevirtual #294                // Method scala/runtime/RichInt$.min$extension:(II)I
        47: istore        6
        49: new           #2                  // class scala/collection/parallel/ParIterableLike$CopyToArray
        52: dup
        53: aload_0
        54: invokevirtual #232                // Method scala$collection$parallel$ParIterableLike$CopyToArray$$$outer:()Lscala/collection/parallel/ParIterableLike;
        57: aload_0
        58: getfield      #120                // Field from:I
        61: iload         5
        63: iadd
        64: iload         6
        66: aload_0
        67: getfield      #118                // Field array:Ljava/lang/Object;
        70: aload         4
        72: invokespecial #297                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter;)V
        75: astore_2
        76: goto          91
        79: goto          82
        82: new           #268                // class scala/MatchError
        85: dup
        86: aload_3
        87: invokespecial #270                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        90: athrow
        91: aload_2
        92: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 79
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParIterableLike$CopyToArray, class scala/Tuple2, class scala/collection/parallel/ParIterableLike$CopyToArray, class scala/Tuple2, class scala/collection/parallel/IterableSplitter, int, int ]
          stack = []
      LineNumberTable:
        line 1294: 0
        line 1295: 21
        line 1296: 49
        line 1294: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           49      26     6  plen   I
           15      64     4     p   Lscala/collection/parallel/IterableSplitter;
           21      58     5 untilp   I
            0      93     0 $this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0      93     1  x$41   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$41                           final

  public scala.collection.parallel.ParIterableLike$CopyToArray(int, int, java.lang.Object, scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: iload_2
         2: putfield      #120                // Field from:I
         5: aload_0
         6: iload_3
         7: putfield      #122                // Field len:I
        10: aload_0
        11: aload         4
        13: putfield      #118                // Field array:Ljava/lang/Object;
        16: aload_0
        17: aload         5
        19: putfield      #108                // Field pit:Lscala/collection/parallel/IterableSplitter;
        22: aload_1
        23: ifnonnull     28
        26: aconst_null
        27: athrow
        28: aload_0
        29: aload_1
        30: putfield      #229                // Field $outer:Lscala/collection/parallel/ParIterableLike;
        33: aload_0
        34: invokespecial #300                // Method java/lang/Object."<init>":()V
        37: aload_0
        38: invokestatic  #303                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        41: aload_0
        42: invokestatic  #306                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        45: aload_0
        46: invokestatic  #308                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        49: aload_0
        50: getstatic     #245                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        53: putfield      #110                // Field result:Lscala/runtime/BoxedUnit;
        56: return
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
      LineNumberTable:
        line 1287: 0
        line 1288: 33
        line 1289: 49
        line 1287: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0      57     1 $outer   Lscala/collection/parallel/ParIterableLike;
            0      57     2  from   I
            0      57     3   len   I
            0      57     4 array   Ljava/lang/Object;
            0      57     5   pit   Lscala/collection/parallel/IterableSplitter;
    Signature: #299                         // (IILjava/lang/Object;Lscala/collection/parallel/IterableSplitter<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      from                           final
      len                            final
      array                          final
      pit                            final

  public static final java.lang.Object $anonfun$split$27$adapted(java.lang.Object, scala.collection.parallel.IterableSplitter);
    descriptor: (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #312                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #314                // Method $anonfun$split$27:(ILscala/collection/parallel/IterableSplitter;)I
         8: invokestatic  #149                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 1294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  x$38   Ljava/lang/Object;
            0      12     1  x$39   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$38                           final
      x$39                           final

  public static final java.lang.Object $anonfun$split$28$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #316                // Method $anonfun$split$28:(Lscala/Tuple2;)Z
         4: invokestatic  #320                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 1294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$7   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$7            final

  public static final java.lang.Object $anonfun$split$29$adapted(scala.collection.parallel.ParIterableLike$CopyToArray, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #322                // Method $anonfun$split$29:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Z
         5: invokestatic  #320                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 1294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lscala/collection/parallel/ParIterableLike$CopyToArray;
            0       9     1  x$40   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$40                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #334,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #16= #7 of #15;                  // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #17= #2 of #15;                  // CopyToArray=class scala/collection/parallel/ParIterableLike$CopyToArray of class scala/collection/parallel/ParIterableLike
  public #20= #19 of #15;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
Signature: #3                           // <U:Ljava/lang/Object;This:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/runtime/BoxedUnit;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CopyToArray<TU;TThis;>;>;
SourceFile: "ParIterableLike.scala"
BootstrapMethods:
  0: #166 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #151 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #156 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$27$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #157 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #158 5
      #159 1
      #157 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  1: #166 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #186 (Ljava/lang/Object;)Ljava/lang/Object;
      #191 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$28$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #192 (Lscala/Tuple2;)Ljava/lang/Object;
      #158 5
      #159 1
      #192 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #166 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #186 (Ljava/lang/Object;)Ljava/lang/Object;
      #204 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$29$adapted:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Ljava/lang/Object;
      #192 (Lscala/Tuple2;)Ljava/lang/Object;
      #158 5
      #159 1
      #192 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #166 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #186 (Ljava/lang/Object;)Ljava/lang/Object;
      #215 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$30:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #217 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #158 5
      #159 1
      #217 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  4: #331 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #156 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$27$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #191 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$28$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #204 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$29$adapted:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Ljava/lang/Object;
      #215 REF_invokeStatic scala/collection/parallel/ParIterableLike$CopyToArray.$anonfun$split$30:(Lscala/collection/parallel/ParIterableLike$CopyToArray;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0xA9 (unknown attribute)
   01 00 00 21 00 F6 00 F7 01 00 98 00 99 01 00 FE
   00 FF 01 00 BB 00 BC 01 01 04 01 05 01 00 C8 00
   C9 01 00 D3 00 D4 01 00 87 01 27 00 00 49 00 31
   00 00 71 00 4F 00 00 42 00 43 00 00 5C 00 4B 00
   00 81 00 EA 00 00 81 00 82 00 00 1A 00 69 00 00
   3A 00 3B 00 00 E1 00 2B 00 00 1D 00 3B 00 00 1D
   00 31 00 00 6F 00 43 00 00 6F 00 70 00 00 E6 00
   E3 00 00 23 00 24 01 00 E2 00 E3 00 00 E9 00 E3
   00 00 2A 00 2B 00 00 30 00 31 00 00 8A 00 8B 00
   00 1F 00 63 00 00 66 00 67 00 00 25 00 24 00 00
   4E 00 4F 00 00 57 00 43 00
  Scala: length = 0x0 (unknown attribute)

