Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/derive/JsonSumObjCodec.class
  Last modified May 29, 2022; size 6479 bytes
  SHA-256 checksum 1b8422fd95debb3a5a8b4aa559bce3055227eec29a30d4671099b5b807cccf01
  Compiled from "JsonSumCodec.scala"
public class argonaut.derive.JsonSumObjCodec implements argonaut.derive.JsonSumCodec
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // argonaut/derive/JsonSumObjCodec
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 9, attributes: 6
Constant pool:
    #1 = Utf8               argonaut/derive/JsonSumObjCodec
    #2 = Class              #1            // argonaut/derive/JsonSumObjCodec
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               argonaut/derive/JsonSumCodec
    #6 = Class              #5            // argonaut/derive/JsonSumCodec
    #7 = Utf8               JsonSumCodec.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u00114Aa\u0002\u0005\u0001\u001b!)\u0001\u0004\u0001C\u00013!)1\u0004\u0001C\u00019!)!\u0006\u0001C\u0001W!)q\u0006\u0001C\u0001a!)1\t\u0001C\u0001\t\")Q\n\u0001C\u0001\u001d\ny!j]8o\'VlwJ\u00196D_\u0012,7M\u0003\u0002\n\u0015\u00051A-\u001a:jm\u0016T\u0011aC\u0001\tCJ<wN\\1vi\u000e\u00011c\u0001\u0001\u000f)A\u0011qBE\u0007\u0002!)\t\u0011#A\u0003tG\u0006d\u0017-\u0003\u0002\u0014!\t1\u0011I\\=SK\u001a\u0004\"!\u0006\f\u000e\u0003!I!a\u0006\u0005\u0003\u0019)\u001bxN\\*v[\u000e{G-Z2\u0002\rqJg.\u001b;?)\u0005Q\u0002CA\u000b\u0001\u0003)!xNS:p]:\u000bW.\u001a\u000b\u0003;!\u0002\"AH\u0013\u000f\u0005}\u0019\u0003C\u0001\u0011\u0011\u001b\u0005\t#B\u0001\u0012\r\u0003\u0019a$o\\8u}%\u0011A\u0005E\u0001\u0007!J,G-\u001a4\n\u0005\u0019:#AB*ue&twM\u0003\u0002%!!)\u0011F\u0001a\u0001;\u0005!a.Y7f\u0003-)gnY8eK\u0016k\u0007\u000f^=\u0016\u00031\u0002\"aD\u0017\n\u00059\u0002\"a\u0002(pi\"LgnZ\u0001\fK:\u001cw\u000eZ3GS\u0016dG\r\u0006\u00022kA\u0011!gM\u0007\u0002\u0015%\u0011AG\u0003\u0002\u0005\u0015N|g\u000eC\u00037\t\u0001\u0007q\'\u0001\u0006gS\u0016dGm\u0014:PE*\u0004B\u0001O\u001f2\u0001:\u0011\u0011h\u000f\b\u0003AiJ\u0011!E\u0005\u0003yA\tq\u0001]1dW\u0006<W-\u0003\u0002?\u007f\t1Q)\u001b;iKJT!\u0001\u0010\t\u0011\t=\tU$M\u0005\u0003\u0005B\u0011a\u0001V;qY\u0016\u0014\u0014a\u00033fG>$W-R7qif$\"!\u0012%\u0011\u0007I2E&\u0003\u0002H\u0015\taA)Z2pI\u0016\u0014Vm];mi\")\u0011*\u0002a\u0001\u0015\u000611-\u001e:t_J\u0004\"AM&\n\u00051S!a\u0002%DkJ\u001cxN]\u0001\fI\u0016\u001cw\u000eZ3GS\u0016dG-\u0006\u0002P/R!\u0001+\u00180`!\r\u0011d)\u0015\t\u0005qu\u0012V\u000b\u0005\u00023\'&\u0011AK\u0003\u0002\b\u0003\u000e+(o]8s!\t1v\u000b\u0004\u0001\u0005\u000ba3!\u0019A-\u0003\u0003\u0005\u000b\"\u0001\f.\u0011\u0005=Y\u0016B\u0001/\u0011\u0005\r\te.\u001f\u0005\u0006S\u0019\u0001\r!\b\u0005\u0006\u0013\u001a\u0001\rA\u0013\u0005\u0006A\u001a\u0001\r!Y\u0001\u0007I\u0016\u001cw\u000eZ3\u0011\u0007I\u0012W+\u0003\u0002d\u0015\tQA)Z2pI\u0016T5o\u001c8
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/Predef$ArrowAssoc$
   #17 = Class              #16           // scala/Predef$ArrowAssoc$
   #18 = Utf8               scala/Predef
   #19 = Class              #18           // scala/Predef
   #20 = Utf8               ArrowAssoc$
   #21 = Utf8               toJsonName
   #22 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #23 = Utf8               name
   #24 = Utf8               this
   #25 = Utf8               Largonaut/derive/JsonSumObjCodec;
   #26 = Utf8               Ljava/lang/String;
   #27 = Utf8               encodeEmpty
   #28 = Utf8               ()Lscala/runtime/Nothing$;
   #29 = Utf8               java/lang/IllegalArgumentException
   #30 = Class              #29           // java/lang/IllegalArgumentException
   #31 = Utf8               empty
   #32 = String             #31           // empty
   #33 = Utf8               <init>
   #34 = Utf8               (Ljava/lang/String;)V
   #35 = NameAndType        #33:#34       // "<init>":(Ljava/lang/String;)V
   #36 = Methodref          #30.#35       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #37 = Utf8               encodeField
   #38 = Utf8               (Lscala/util/Either;)Largonaut/Json;
   #39 = Utf8               (Lscala/util/Either<Largonaut/Json;Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
   #40 = Utf8               fieldOrObj
   #41 = Utf8               scala/util/Left
   #42 = Class              #41           // scala/util/Left
   #43 = Utf8               value
   #44 = Utf8               ()Ljava/lang/Object;
   #45 = NameAndType        #43:#44       // value:()Ljava/lang/Object;
   #46 = Methodref          #42.#45       // scala/util/Left.value:()Ljava/lang/Object;
   #47 = Utf8               argonaut/Json
   #48 = Class              #47           // argonaut/Json
   #49 = Utf8               scala/util/Right
   #50 = Class              #49           // scala/util/Right
   #51 = Methodref          #50.#45       // scala/util/Right.value:()Ljava/lang/Object;
   #52 = Utf8               scala/Tuple2
   #53 = Class              #52           // scala/Tuple2
   #54 = Utf8               _1
   #55 = NameAndType        #54:#44       // _1:()Ljava/lang/Object;
   #56 = Methodref          #53.#55       // scala/Tuple2._1:()Ljava/lang/Object;
   #57 = Utf8               java/lang/String
   #58 = Class              #57           // java/lang/String
   #59 = Utf8               _2
   #60 = NameAndType        #59:#44       // _2:()Ljava/lang/Object;
   #61 = Methodref          #53.#60       // scala/Tuple2._2:()Ljava/lang/Object;
   #62 = Utf8               argonaut/Json$
   #63 = Class              #62           // argonaut/Json$
   #64 = Utf8               MODULE$
   #65 = Utf8               Largonaut/Json$;
   #66 = NameAndType        #64:#65       // MODULE$:Largonaut/Json$;
   #67 = Fieldref           #63.#66       // argonaut/Json$.MODULE$:Largonaut/Json$;
   #68 = Utf8               scala/runtime/ScalaRunTime$
   #69 = Class              #68           // scala/runtime/ScalaRunTime$
   #70 = Utf8               Lscala/runtime/ScalaRunTime$;
   #71 = NameAndType        #64:#70       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #72 = Fieldref           #69.#71       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #73 = Utf8               Lscala/Predef$ArrowAssoc$;
   #74 = NameAndType        #64:#73       // MODULE$:Lscala/Predef$ArrowAssoc$;
   #75 = Fieldref           #17.#74       // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
   #76 = Utf8               scala/Predef$
   #77 = Class              #76           // scala/Predef$
   #78 = Utf8               Lscala/Predef$;
   #79 = NameAndType        #64:#78       // MODULE$:Lscala/Predef$;
   #80 = Fieldref           #77.#79       // scala/Predef$.MODULE$:Lscala/Predef$;
   #81 = NameAndType        #21:#22       // toJsonName:(Ljava/lang/String;)Ljava/lang/String;
   #82 = Methodref          #2.#81        // argonaut/derive/JsonSumObjCodec.toJsonName:(Ljava/lang/String;)Ljava/lang/String;
   #83 = Utf8               ArrowAssoc
   #84 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #85 = NameAndType        #83:#84       // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
   #86 = Methodref          #77.#85       // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
   #87 = Utf8               $minus$greater$extension
   #88 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #89 = NameAndType        #87:#88       // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #90 = Methodref          #17.#89       // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #91 = Utf8               [Ljava/lang/Object;
   #92 = Class              #91           // "[Ljava/lang/Object;"
   #93 = Utf8               wrapRefArray
   #94 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #95 = NameAndType        #93:#94       // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #96 = Methodref          #69.#95       // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #97 = Utf8               obj
   #98 = Utf8               (Lscala/collection/immutable/Seq;)Largonaut/Json;
   #99 = NameAndType        #97:#98       // obj:(Lscala/collection/immutable/Seq;)Largonaut/Json;
  #100 = Methodref          #63.#99       // argonaut/Json$.obj:(Lscala/collection/immutable/Seq;)Largonaut/Json;
  #101 = Utf8               scala/MatchError
  #102 = Class              #101          // scala/MatchError
  #103 = Utf8               (Ljava/lang/Object;)V
  #104 = NameAndType        #33:#103      // "<init>":(Ljava/lang/Object;)V
  #105 = Methodref          #102.#104     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #106 = Utf8               other
  #107 = Utf8               Largonaut/Json;
  #108 = Utf8               content
  #109 = Utf8               Lscala/util/Either;
  #110 = Utf8               scala/util/Either
  #111 = Class              #110          // scala/util/Either
  #112 = Utf8               decodeEmpty
  #113 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult;
  #114 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult<Lscala/runtime/Nothing$;>;
  #115 = Utf8               cursor
  #116 = Utf8               argonaut/DecodeResult$
  #117 = Class              #116          // argonaut/DecodeResult$
  #118 = Utf8               Largonaut/DecodeResult$;
  #119 = NameAndType        #64:#118      // MODULE$:Largonaut/DecodeResult$;
  #120 = Fieldref           #117.#119     // argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
  #121 = Utf8               java/lang/StringBuilder
  #122 = Class              #121          // java/lang/StringBuilder
  #123 = Integer            22
  #124 = Utf8               (I)V
  #125 = NameAndType        #33:#124      // "<init>":(I)V
  #126 = Methodref          #122.#125     // java/lang/StringBuilder."<init>":(I)V
  #127 = Utf8               unrecognized type(s):
  #128 = String             #127          // unrecognized type(s):
  #129 = Utf8               append
  #130 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #131 = NameAndType        #129:#130     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #132 = Methodref          #122.#131     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #133 = Utf8               argonaut/HCursor
  #134 = Class              #133          // argonaut/HCursor
  #135 = Utf8               fields
  #136 = Utf8               ()Lscala/Option;
  #137 = NameAndType        #135:#136     // fields:()Lscala/Option;
  #138 = Methodref          #134.#137     // argonaut/HCursor.fields:()Lscala/Option;
  #139 = MethodType         #44           //  ()Ljava/lang/Object;
  #140 = Utf8               $anonfun$decodeEmpty$1
  #141 = Utf8               ()Lscala/collection/immutable/Nil$;
  #142 = NameAndType        #140:#141     // $anonfun$decodeEmpty$1:()Lscala/collection/immutable/Nil$;
  #143 = Methodref          #2.#142       // argonaut/derive/JsonSumObjCodec.$anonfun$decodeEmpty$1:()Lscala/collection/immutable/Nil$;
  #144 = MethodHandle       6:#143        // REF_invokeStatic argonaut/derive/JsonSumObjCodec.$anonfun$decodeEmpty$1:()Lscala/collection/immutable/Nil$;
  #145 = MethodType         #141          //  ()Lscala/collection/immutable/Nil$;
  #146 = Integer            5
  #147 = Integer            1
  #148 = Utf8               java/lang/invoke/LambdaMetafactory
  #149 = Class              #148          // java/lang/invoke/LambdaMetafactory
  #150 = Utf8               altMetafactory
  #151 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #152 = NameAndType        #150:#151     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #153 = Methodref          #149.#152     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #154 = MethodHandle       6:#153        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #155 = Utf8               apply
  #156 = Utf8               ()Lscala/Function0;
  #157 = NameAndType        #155:#156     // apply:()Lscala/Function0;
  #158 = InvokeDynamic      #0:#157       // #0:apply:()Lscala/Function0;
  #159 = Utf8               scala/Option
  #160 = Class              #159          // scala/Option
  #161 = Utf8               getOrElse
  #162 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #163 = NameAndType        #161:#162     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #164 = Methodref          #160.#163     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #165 = Utf8               scala/collection/IterableOnceOps
  #166 = Class              #165          // scala/collection/IterableOnceOps
  #167 = Utf8               ,
  #168 = String             #167          // ,
  #169 = Utf8               mkString
  #170 = NameAndType        #169:#22      // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #171 = InterfaceMethodref #166.#170     // scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #172 = Utf8               toString
  #173 = Utf8               ()Ljava/lang/String;
  #174 = NameAndType        #172:#173     // toString:()Ljava/lang/String;
  #175 = Methodref          #122.#174     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #176 = Utf8               history
  #177 = Utf8               ()Largonaut/CursorHistory;
  #178 = NameAndType        #176:#177     // history:()Largonaut/CursorHistory;
  #179 = Methodref          #134.#178     // argonaut/HCursor.history:()Largonaut/CursorHistory;
  #180 = Utf8               fail
  #181 = Utf8               (Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
  #182 = NameAndType        #180:#181     // fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
  #183 = Methodref          #117.#182     // argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
  #184 = Utf8               Largonaut/HCursor;
  #185 = Utf8               decodeField
  #186 = Utf8               (Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #187 = Utf8               <A:Ljava/lang/Object;>(Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<Lscala/util/Either<Largonaut/ACursor;TA;>;>;
  #188 = Utf8               decode
  #189 = Utf8               $minus$minus$bslash
  #190 = Utf8               (Ljava/lang/String;)Largonaut/ACursor;
  #191 = NameAndType        #189:#190     // $minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #192 = Methodref          #134.#191     // argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #193 = Utf8               argonaut/ACursor
  #194 = Class              #193          // argonaut/ACursor
  #195 = Utf8               either
  #196 = Utf8               ()Lscala/util/Either;
  #197 = NameAndType        #195:#196     // either:()Lscala/util/Either;
  #198 = Methodref          #194.#197     // argonaut/ACursor.either:()Lscala/util/Either;
  #199 = Utf8               scala/package$
  #200 = Class              #199          // scala/package$
  #201 = Utf8               Lscala/package$;
  #202 = NameAndType        #64:#201      // MODULE$:Lscala/package$;
  #203 = Fieldref           #200.#202     // scala/package$.MODULE$:Lscala/package$;
  #204 = Utf8               Left
  #205 = Utf8               ()Lscala/util/Left$;
  #206 = NameAndType        #204:#205     // Left:()Lscala/util/Left$;
  #207 = Methodref          #200.#206     // scala/package$.Left:()Lscala/util/Left$;
  #208 = Utf8               argonaut/ACursor$
  #209 = Class              #208          // argonaut/ACursor$
  #210 = Utf8               Largonaut/ACursor$;
  #211 = NameAndType        #64:#210      // MODULE$:Largonaut/ACursor$;
  #212 = Fieldref           #209.#211     // argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
  #213 = Utf8               ok
  #214 = Utf8               (Largonaut/HCursor;)Largonaut/ACursor;
  #215 = NameAndType        #213:#214     // ok:(Largonaut/HCursor;)Largonaut/ACursor;
  #216 = Methodref          #209.#215     // argonaut/ACursor$.ok:(Largonaut/HCursor;)Largonaut/ACursor;
  #217 = Utf8               scala/util/Left$
  #218 = Class              #217          // scala/util/Left$
  #219 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #220 = NameAndType        #155:#219     // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #221 = Methodref          #218.#220     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #222 = Utf8               (Ljava/lang/Object;)Largonaut/DecodeResult;
  #223 = NameAndType        #213:#222     // ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
  #224 = Methodref          #117.#223     // argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
  #225 = Utf8               argonaut/DecodeJson
  #226 = Class              #225          // argonaut/DecodeJson
  #227 = NameAndType        #188:#113     // decode:(Largonaut/HCursor;)Largonaut/DecodeResult;
  #228 = InterfaceMethodref #226.#227     // argonaut/DecodeJson.decode:(Largonaut/HCursor;)Largonaut/DecodeResult;
  #229 = MethodType         #84           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #230 = Utf8               $anonfun$decodeField$1
  #231 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #232 = NameAndType        #230:#231     // $anonfun$decodeField$1:(Ljava/lang/Object;)Lscala/util/Right;
  #233 = Methodref          #2.#232       // argonaut/derive/JsonSumObjCodec.$anonfun$decodeField$1:(Ljava/lang/Object;)Lscala/util/Right;
  #234 = MethodHandle       6:#233        // REF_invokeStatic argonaut/derive/JsonSumObjCodec.$anonfun$decodeField$1:(Ljava/lang/Object;)Lscala/util/Right;
  #235 = MethodType         #231          //  (Ljava/lang/Object;)Lscala/util/Right;
  #236 = Utf8               ()Lscala/Function1;
  #237 = NameAndType        #155:#236     // apply:()Lscala/Function1;
  #238 = InvokeDynamic      #1:#237       // #1:apply:()Lscala/Function1;
  #239 = Utf8               argonaut/DecodeResult
  #240 = Class              #239          // argonaut/DecodeResult
  #241 = Utf8               map
  #242 = Utf8               (Lscala/Function1;)Largonaut/DecodeResult;
  #243 = NameAndType        #241:#242     // map:(Lscala/Function1;)Largonaut/DecodeResult;
  #244 = Methodref          #240.#243     // argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
  #245 = Utf8               Largonaut/DecodeJson;
  #246 = Utf8               scala/collection/immutable/Nil$
  #247 = Class              #246          // scala/collection/immutable/Nil$
  #248 = Utf8               Lscala/collection/immutable/Nil$;
  #249 = NameAndType        #64:#248      // MODULE$:Lscala/collection/immutable/Nil$;
  #250 = Fieldref           #247.#249     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #251 = Utf8               x$1
  #252 = Utf8               Right
  #253 = Utf8               ()Lscala/util/Right$;
  #254 = NameAndType        #252:#253     // Right:()Lscala/util/Right$;
  #255 = Methodref          #200.#254     // scala/package$.Right:()Lscala/util/Right$;
  #256 = Utf8               scala/util/Right$
  #257 = Class              #256          // scala/util/Right$
  #258 = NameAndType        #155:#231     // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #259 = Methodref          #257.#258     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #260 = Utf8               Ljava/lang/Object;
  #261 = Utf8               ()V
  #262 = NameAndType        #33:#261      // "<init>":()V
  #263 = Methodref          #4.#262       // java/lang/Object."<init>":()V
  #264 = Utf8               $deserializeLambda$
  #265 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #266 = Utf8               scala/runtime/LambdaDeserialize
  #267 = Class              #266          // scala/runtime/LambdaDeserialize
  #268 = Utf8               bootstrap
  #269 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #270 = NameAndType        #268:#269     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #271 = Methodref          #267.#270     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #272 = MethodHandle       6:#271        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #273 = Utf8               lambdaDeserialize
  #274 = NameAndType        #273:#265     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #275 = InvokeDynamic      #2:#274       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #276 = Utf8               Code
  #277 = Utf8               LineNumberTable
  #278 = Utf8               LocalVariableTable
  #279 = Utf8               MethodParameters
  #280 = Utf8               StackMapTable
  #281 = Utf8               Signature
  #282 = Utf8               InnerClasses
  #283 = Utf8               SourceFile
  #284 = Utf8               RuntimeVisibleAnnotations
  #285 = Utf8               BootstrapMethods
  #286 = Utf8               ScalaInlineInfo
  #287 = Utf8               ScalaSig
{
  public java.lang.String toJsonName(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Largonaut/derive/JsonSumObjCodec;
            0       2     1  name   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name                           final

  public scala.runtime.Nothing$ encodeEmpty();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #30                 // class java/lang/IllegalArgumentException
         3: dup
         4: ldc           #32                 // String empty
         6: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/derive/JsonSumObjCodec;

  public argonaut.Json encodeField(scala.util.Either<argonaut.Json, scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/util/Either;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=10, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #42                 // class scala/util/Left
         6: ifeq          31
         9: aload_3
        10: checkcast     #42                 // class scala/util/Left
        13: astore        4
        15: aload         4
        17: invokevirtual #46                 // Method scala/util/Left.value:()Ljava/lang/Object;
        20: checkcast     #48                 // class argonaut/Json
        23: astore        5
        25: aload         5
        27: astore_2
        28: goto          143
        31: goto          34
        34: aload_3
        35: instanceof    #50                 // class scala/util/Right
        38: ifeq          131
        41: aload_3
        42: checkcast     #50                 // class scala/util/Right
        45: astore        6
        47: aload         6
        49: invokevirtual #51                 // Method scala/util/Right.value:()Ljava/lang/Object;
        52: checkcast     #53                 // class scala/Tuple2
        55: astore        7
        57: aload         7
        59: ifnull        128
        62: aload         7
        64: invokevirtual #56                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        67: checkcast     #58                 // class java/lang/String
        70: astore        8
        72: aload         7
        74: invokevirtual #61                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        77: checkcast     #48                 // class argonaut/Json
        80: astore        9
        82: getstatic     #67                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        85: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        88: iconst_1
        89: anewarray     #53                 // class scala/Tuple2
        92: dup
        93: iconst_0
        94: getstatic     #75                 // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        97: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       100: aload_0
       101: aload         8
       103: invokevirtual #82                 // Method toJsonName:(Ljava/lang/String;)Ljava/lang/String;
       106: invokevirtual #86                 // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       109: aload         9
       111: invokevirtual #90                 // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       114: aastore
       115: checkcast     #92                 // class "[Ljava/lang/Object;"
       118: invokevirtual #96                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       121: invokevirtual #100                // Method argonaut/Json$.obj:(Lscala/collection/immutable/Seq;)Largonaut/Json;
       124: astore_2
       125: goto          143
       128: goto          134
       131: goto          134
       134: new           #102                // class scala/MatchError
       137: dup
       138: aload_3
       139: invokespecial #105                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       142: athrow
       143: aload_2
       144: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 93
          locals = [ class argonaut/derive/JsonSumObjCodec, class scala/util/Either, top, class scala/util/Either, top, top, class scala/util/Right, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/derive/JsonSumObjCodec, class scala/util/Either, top, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/derive/JsonSumObjCodec, class scala/util/Either, class argonaut/Json, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 38: 0
        line 39: 2
        line 40: 34
        line 41: 82
        line 40: 128
        line 38: 134
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23       8     5 other   Largonaut/Json;
           70      58     8  name   Ljava/lang/String;
           80      48     9 content   Largonaut/Json;
            0     145     0  this   Largonaut/derive/JsonSumObjCodec;
            0     145     1 fieldOrObj   Lscala/util/Either;
    Signature: #39                          // (Lscala/util/Either<Largonaut/Json;Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      fieldOrObj                     final

  public argonaut.DecodeResult<scala.runtime.Nothing$> decodeEmpty(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #120                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
         3: new           #122                // class java/lang/StringBuilder
         6: dup
         7: ldc           #123                // int 22
         9: invokespecial #126                // Method java/lang/StringBuilder."<init>":(I)V
        12: ldc           #128                // String unrecognized type(s):
        14: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: aload_1
        18: invokevirtual #138                // Method argonaut/HCursor.fields:()Lscala/Option;
        21: invokedynamic #158,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        26: invokevirtual #164                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        29: checkcast     #166                // class scala/collection/IterableOnceOps
        32: ldc           #168                // String ,
        34: invokeinterface #171,  2          // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
        39: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: invokevirtual #175                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        45: aload_1
        46: invokevirtual #179                // Method argonaut/HCursor.history:()Largonaut/CursorHistory;
        49: invokevirtual #183                // Method argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
        52: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Largonaut/derive/JsonSumObjCodec;
            0      53     1 cursor   Largonaut/HCursor;
    Signature: #114                         // (Largonaut/HCursor;)Largonaut/DecodeResult<Lscala/runtime/Nothing$;>;
    MethodParameters:
      Name                           Flags
      cursor                         final

  public <A extends java.lang.Object> argonaut.DecodeResult<scala.util.Either<argonaut.ACursor, A>> decodeField(java.lang.String, argonaut.HCursor, argonaut.DecodeJson<A>);
    descriptor: (Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=8, args_size=4
         0: aload_2
         1: aload_0
         2: aload_1
         3: invokevirtual #82                 // Method toJsonName:(Ljava/lang/String;)Ljava/lang/String;
         6: invokevirtual #192                // Method argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
         9: invokevirtual #198                // Method argonaut/ACursor.either:()Lscala/util/Either;
        12: astore        5
        14: aload         5
        16: instanceof    #42                 // class scala/util/Left
        19: ifeq          49
        22: getstatic     #120                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        25: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
        28: invokevirtual #207                // Method scala/package$.Left:()Lscala/util/Left$;
        31: getstatic     #212                // Field argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
        34: aload_2
        35: invokevirtual #216                // Method argonaut/ACursor$.ok:(Largonaut/HCursor;)Largonaut/ACursor;
        38: invokevirtual #221                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        41: invokevirtual #224                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
        44: astore        4
        46: goto          111
        49: goto          52
        52: aload         5
        54: instanceof    #50                 // class scala/util/Right
        57: ifeq          98
        60: aload         5
        62: checkcast     #50                 // class scala/util/Right
        65: astore        6
        67: aload         6
        69: invokevirtual #51                 // Method scala/util/Right.value:()Ljava/lang/Object;
        72: checkcast     #134                // class argonaut/HCursor
        75: astore        7
        77: aload_3
        78: aload         7
        80: invokeinterface #228,  2          // InterfaceMethod argonaut/DecodeJson.decode:(Largonaut/HCursor;)Largonaut/DecodeResult;
        85: invokedynamic #238,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        90: invokevirtual #244                // Method argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
        93: astore        4
        95: goto          111
        98: goto          101
       101: new           #102                // class scala/MatchError
       104: dup
       105: aload         5
       107: invokespecial #105                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       110: athrow
       111: aload         4
       113: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 49
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 45 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/derive/JsonSumObjCodec, class java/lang/String, class argonaut/HCursor, class argonaut/DecodeJson, class argonaut/DecodeResult, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 47: 0
        line 48: 14
        line 49: 22
        line 48: 49
        line 50: 52
        line 51: 77
        line 50: 98
        line 47: 101
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           75      23     7 content   Largonaut/HCursor;
            0     114     0  this   Largonaut/derive/JsonSumObjCodec;
            0     114     1  name   Ljava/lang/String;
            0     114     2 cursor   Largonaut/HCursor;
            0     114     3 decode   Largonaut/DecodeJson;
    Signature: #187                         // <A:Ljava/lang/Object;>(Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<Lscala/util/Either<Largonaut/ACursor;TA;>;>;
    MethodParameters:
      Name                           Flags
      name                           final
      cursor                         final
      decode                         final

  public static final scala.collection.immutable.Nil$ $anonfun$decodeEmpty$1();
    descriptor: ()Lscala/collection/immutable/Nil$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #250                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         3: areturn
      LineNumberTable:
        line 45: 0

  public static final scala.util.Right $anonfun$decodeField$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/util/Right;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #203                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #255                // Method scala/package$.Right:()Lscala/util/Right$;
         6: aload_0
         7: invokevirtual #259                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        10: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public argonaut.derive.JsonSumObjCodec();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #263                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/derive/JsonSumObjCodec;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #275,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // ArrowAssoc$=class scala/Predef$ArrowAssoc$ of class scala/Predef
SourceFile: "JsonSumCodec.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00114Aa\u0002\u0005\u0001\u001b!)\u0001\u0004\u0001C\u00013!)1\u0004\u0001C\u00019!)!\u0006\u0001C\u0001W!)q\u0006\u0001C\u0001a!)1\t\u0001C\u0001\t\")Q\n\u0001C\u0001\u001d\ny!j]8o\'VlwJ\u00196D_\u0012,7M\u0003\u0002\n\u0015\u00051A-\u001a:jm\u0016T\u0011aC\u0001\tCJ<wN\\1vi\u000e\u00011c\u0001\u0001\u000f)A\u0011qBE\u0007\u0002!)\t\u0011#A\u0003tG\u0006d\u0017-\u0003\u0002\u0014!\t1\u0011I\\=SK\u001a\u0004\"!\u0006\f\u000e\u0003!I!a\u0006\u0005\u0003\u0019)\u001bxN\\*v[\u000e{G-Z2\u0002\rqJg.\u001b;?)\u0005Q\u0002CA\u000b\u0001\u0003)!xNS:p]:\u000bW.\u001a\u000b\u0003;!\u0002\"AH\u0013\u000f\u0005}\u0019\u0003C\u0001\u0011\u0011\u001b\u0005\t#B\u0001\u0012\r\u0003\u0019a$o\\8u}%\u0011A\u0005E\u0001\u0007!J,G-\u001a4\n\u0005\u0019:#AB*ue&twM\u0003\u0002%!!)\u0011F\u0001a\u0001;\u0005!a.Y7f\u0003-)gnY8eK\u0016k\u0007\u000f^=\u0016\u00031\u0002\"aD\u0017\n\u00059\u0002\"a\u0002(pi\"LgnZ\u0001\fK:\u001cw\u000eZ3GS\u0016dG\r\u0006\u00022kA\u0011!gM\u0007\u0002\u0015%\u0011AG\u0003\u0002\u0005\u0015N|g\u000eC\u00037\t\u0001\u0007q\'\u0001\u0006gS\u0016dGm\u0014:PE*\u0004B\u0001O\u001f2\u0001:\u0011\u0011h\u000f\b\u0003AiJ\u0011!E\u0005\u0003yA\tq\u0001]1dW\u0006<W-\u0003\u0002?\u007f\t1Q)\u001b;iKJT!\u0001\u0010\t\u0011\t=\tU$M\u0005\u0003\u0005B\u0011a\u0001V;qY\u0016\u0014\u0014a\u00033fG>$W-R7qif$\"!\u0012%\u0011\u0007I2E&\u0003\u0002H\u0015\taA)Z2pI\u0016\u0014Vm];mi\")\u0011*\u0002a\u0001\u0015\u000611-\u001e:t_J\u0004\"AM&\n\u00051S!a\u0002%DkJ\u001cxN]\u0001\fI\u0016\u001cw\u000eZ3GS\u0016dG-\u0006\u0002P/R!\u0001+\u00180`!\r\u0011d)\u0015\t\u0005qu\u0012V\u000b\u0005\u00023\'&\u0011AK\u0003\u0002\b\u0003\u000e+(o]8s!\t1v\u000b\u0004\u0001\u0005\u000ba3!\u0019A-\u0003\u0003\u0005\u000b\"\u0001\f.\u0011\u0005=Y\u0016B\u0001/\u0011\u0005\r\te.\u001f\u0005\u0006S\u0019\u0001\r!\b\u0005\u0006\u0013\u001a\u0001\rA\u0013\u0005\u0006A\u001a\u0001\r!Y\u0001\u0007I\u0016\u001cw\u000eZ3\u0011\u0007I\u0012W+\u0003\u0002d\u0015\tQA)Z2pI\u0016T5o\u001c8"
    )
BootstrapMethods:
  0: #154 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #139 ()Ljava/lang/Object;
      #144 REF_invokeStatic argonaut/derive/JsonSumObjCodec.$anonfun$decodeEmpty$1:()Lscala/collection/immutable/Nil$;
      #145 ()Lscala/collection/immutable/Nil$;
      #146 5
      #147 1
      #145 ()Lscala/collection/immutable/Nil$;
  1: #154 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #229 (Ljava/lang/Object;)Ljava/lang/Object;
      #234 REF_invokeStatic argonaut/derive/JsonSumObjCodec.$anonfun$decodeField$1:(Ljava/lang/Object;)Lscala/util/Right;
      #235 (Ljava/lang/Object;)Lscala/util/Right;
      #146 5
      #147 1
      #235 (Ljava/lang/Object;)Lscala/util/Right;
  2: #272 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #144 REF_invokeStatic argonaut/derive/JsonSumObjCodec.$anonfun$decodeEmpty$1:()Lscala/collection/immutable/Nil$;
      #234 REF_invokeStatic argonaut/derive/JsonSumObjCodec.$anonfun$decodeField$1:(Ljava/lang/Object;)Lscala/util/Right;
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 8C 00 8D 01 00 E6 00 E7 01 00 21
   01 05 00 00 70 00 71 00 00 B9 00 BA 00 00 1B 00
   1C 00 00 25 00 26 00 00 15 00 16 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
