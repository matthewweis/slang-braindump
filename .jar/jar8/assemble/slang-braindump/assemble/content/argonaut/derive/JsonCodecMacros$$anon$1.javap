Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/derive/JsonCodecMacros$$anon$1.class
  Last modified May 29, 2022; size 3655 bytes
  SHA-256 checksum b2c9981161dfce6d2c6f8119050193885c09a18668894da4521ca007e67a643d
  Compiled from "JsonCodecMacros.scala"
public final class argonaut.derive.JsonCodecMacros$$anon$1
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/derive/JsonCodecMacros$$anon$1
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 2, attributes: 5
Constant pool:
    #1 = Utf8               argonaut/derive/JsonCodecMacros$$anon$1
    #2 = Class              #1            // argonaut/derive/JsonCodecMacros$$anon$1
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonCodecMacros.scala
    #6 = Utf8               argonaut/derive/JsonCodecMacros
    #7 = Class              #6            // argonaut/derive/JsonCodecMacros
    #8 = Utf8               jsonCodecAnnotationMacro
    #9 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/reflect/api/Trees$TreeApi;
   #10 = NameAndType        #8:#9         // jsonCodecAnnotationMacro:(Lscala/collection/immutable/Seq;)Lscala/reflect/api/Trees$TreeApi;
   #11 = Utf8               scala/reflect/api/Internals$InternalApi
   #12 = Class              #11           // scala/reflect/api/Internals$InternalApi
   #13 = Utf8               scala/reflect/api/Internals
   #14 = Class              #13           // scala/reflect/api/Internals
   #15 = Utf8               InternalApi
   #16 = Utf8               scala/reflect/api/Internals$ReificationSupportApi
   #17 = Class              #16           // scala/reflect/api/Internals$ReificationSupportApi
   #18 = Utf8               ReificationSupportApi
   #19 = Utf8               scala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor
   #20 = Class              #19           // scala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor
   #21 = Utf8               SyntacticObjectDefExtractor
   #22 = Utf8               scala/reflect/api/Names$TermNameApi
   #23 = Class              #22           // scala/reflect/api/Names$TermNameApi
   #24 = Utf8               scala/reflect/api/Names
   #25 = Class              #24           // scala/reflect/api/Names
   #26 = Utf8               TermNameApi
   #27 = Utf8               scala/reflect/api/Trees$ModifiersApi
   #28 = Class              #27           // scala/reflect/api/Trees$ModifiersApi
   #29 = Utf8               scala/reflect/api/Trees
   #30 = Class              #29           // scala/reflect/api/Trees
   #31 = Utf8               ModifiersApi
   #32 = Utf8               scala/reflect/api/Trees$TreeApi
   #33 = Class              #32           // scala/reflect/api/Trees$TreeApi
   #34 = Utf8               TreeApi
   #35 = Utf8               scala/reflect/api/Trees$ValDefApi
   #36 = Class              #35           // scala/reflect/api/Trees$ValDefApi
   #37 = Utf8               ValDefApi
   #38 = Utf8               $outer
   #39 = Utf8               Largonaut/derive/JsonCodecMacros;
   #40 = Utf8               unapply
   #41 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #42 = Utf8               (Ljava/lang/Object;)Lscala/Option<Lscala/Tuple5<Lscala/reflect/api/Names$TermNameApi;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;Lscala/reflect/api/Trees$ValDefApi;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;>;>;
   #43 = Utf8               tree
   #44 = NameAndType        #38:#39       // $outer:Largonaut/derive/JsonCodecMacros;
   #45 = Fieldref           #2.#44        // argonaut/derive/JsonCodecMacros$$anon$1.$outer:Largonaut/derive/JsonCodecMacros;
   #46 = Utf8               c
   #47 = Utf8               ()Lscala/reflect/macros/blackbox/Context;
   #48 = NameAndType        #46:#47       // c:()Lscala/reflect/macros/blackbox/Context;
   #49 = Methodref          #7.#48        // argonaut/derive/JsonCodecMacros.c:()Lscala/reflect/macros/blackbox/Context;
   #50 = Utf8               scala/reflect/macros/blackbox/Context
   #51 = Class              #50           // scala/reflect/macros/blackbox/Context
   #52 = Utf8               universe
   #53 = Utf8               ()Lscala/reflect/macros/Universe;
   #54 = NameAndType        #52:#53       // universe:()Lscala/reflect/macros/Universe;
   #55 = InterfaceMethodref #51.#54       // scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
   #56 = Utf8               scala/reflect/macros/Universe
   #57 = Class              #56           // scala/reflect/macros/Universe
   #58 = Utf8               TreeTag
   #59 = Utf8               ()Lscala/reflect/ClassTag;
   #60 = NameAndType        #58:#59       // TreeTag:()Lscala/reflect/ClassTag;
   #61 = Methodref          #57.#60       // scala/reflect/macros/Universe.TreeTag:()Lscala/reflect/ClassTag;
   #62 = Utf8               scala/reflect/ClassTag
   #63 = Class              #62           // scala/reflect/ClassTag
   #64 = NameAndType        #40:#41       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #65 = InterfaceMethodref #63.#64       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #66 = Utf8               scala/Option
   #67 = Class              #66           // scala/Option
   #68 = Utf8               isEmpty
   #69 = Utf8               ()Z
   #70 = NameAndType        #68:#69       // isEmpty:()Z
   #71 = Methodref          #67.#70       // scala/Option.isEmpty:()Z
   #72 = Utf8               get
   #73 = Utf8               ()Ljava/lang/Object;
   #74 = NameAndType        #72:#73       // get:()Ljava/lang/Object;
   #75 = Methodref          #67.#74       // scala/Option.get:()Ljava/lang/Object;
   #76 = Utf8               internal
   #77 = Utf8               ()Lscala/reflect/api/Internals$InternalApi;
   #78 = NameAndType        #76:#77       // internal:()Lscala/reflect/api/Internals$InternalApi;
   #79 = Methodref          #57.#78       // scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
   #80 = Utf8               reificationSupport
   #81 = Utf8               ()Lscala/reflect/api/Internals$ReificationSupportApi;
   #82 = NameAndType        #80:#81       // reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
   #83 = InterfaceMethodref #12.#82       // scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
   #84 = Utf8               SyntacticObjectDef
   #85 = Utf8               ()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor;
   #86 = NameAndType        #84:#85       // SyntacticObjectDef:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor;
   #87 = InterfaceMethodref #17.#86       // scala/reflect/api/Internals$ReificationSupportApi.SyntacticObjectDef:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor;
   #88 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
   #89 = NameAndType        #40:#88       // unapply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
   #90 = InterfaceMethodref #20.#89       // scala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor.unapply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
   #91 = Utf8               scala/Tuple6
   #92 = Class              #91           // scala/Tuple6
   #93 = Utf8               _1
   #94 = NameAndType        #93:#73       // _1:()Ljava/lang/Object;
   #95 = Methodref          #92.#94       // scala/Tuple6._1:()Ljava/lang/Object;
   #96 = Utf8               _2
   #97 = NameAndType        #96:#73       // _2:()Ljava/lang/Object;
   #98 = Methodref          #92.#97       // scala/Tuple6._2:()Ljava/lang/Object;
   #99 = Utf8               _3
  #100 = NameAndType        #99:#73       // _3:()Ljava/lang/Object;
  #101 = Methodref          #92.#100      // scala/Tuple6._3:()Ljava/lang/Object;
  #102 = Utf8               scala/collection/immutable/List
  #103 = Class              #102          // scala/collection/immutable/List
  #104 = Utf8               _4
  #105 = NameAndType        #104:#73      // _4:()Ljava/lang/Object;
  #106 = Methodref          #92.#105      // scala/Tuple6._4:()Ljava/lang/Object;
  #107 = Utf8               _5
  #108 = NameAndType        #107:#73      // _5:()Ljava/lang/Object;
  #109 = Methodref          #92.#108      // scala/Tuple6._5:()Ljava/lang/Object;
  #110 = Utf8               _6
  #111 = NameAndType        #110:#73      // _6:()Ljava/lang/Object;
  #112 = Methodref          #92.#111      // scala/Tuple6._6:()Ljava/lang/Object;
  #113 = Utf8               NoMods
  #114 = Utf8               ()Lscala/reflect/api/Trees$ModifiersApi;
  #115 = NameAndType        #113:#114     // NoMods:()Lscala/reflect/api/Trees$ModifiersApi;
  #116 = Methodref          #57.#115      // scala/reflect/macros/Universe.NoMods:()Lscala/reflect/api/Trees$ModifiersApi;
  #117 = Utf8               equals
  #118 = Utf8               (Ljava/lang/Object;)Z
  #119 = NameAndType        #117:#118     // equals:(Ljava/lang/Object;)Z
  #120 = Methodref          #4.#119       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #121 = Utf8               scala/Some
  #122 = Class              #121          // scala/Some
  #123 = Utf8               scala/Tuple5
  #124 = Class              #123          // scala/Tuple5
  #125 = Utf8               <init>
  #126 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #127 = NameAndType        #125:#126     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #128 = Methodref          #124.#127     // scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #129 = Utf8               (Ljava/lang/Object;)V
  #130 = NameAndType        #125:#129     // "<init>":(Ljava/lang/Object;)V
  #131 = Methodref          #122.#130     // scala/Some."<init>":(Ljava/lang/Object;)V
  #132 = Utf8               scala/None$
  #133 = Class              #132          // scala/None$
  #134 = Utf8               MODULE$
  #135 = Utf8               Lscala/None$;
  #136 = NameAndType        #134:#135     // MODULE$:Lscala/None$;
  #137 = Fieldref           #133.#136     // scala/None$.MODULE$:Lscala/None$;
  #138 = Utf8               qq$macro$4
  #139 = Utf8               Lscala/reflect/api/Names$TermNameApi;
  #140 = Utf8               qq$macro$5
  #141 = Utf8               Lscala/collection/immutable/List;
  #142 = Utf8               qq$macro$6
  #143 = Utf8               qq$macro$7
  #144 = Utf8               Lscala/reflect/api/Trees$ValDefApi;
  #145 = Utf8               qq$macro$8
  #146 = Utf8               this
  #147 = Utf8               Largonaut/derive/JsonCodecMacros$$anon$1;
  #148 = Utf8               Ljava/lang/Object;
  #149 = Utf8               (Largonaut/derive/JsonCodecMacros;)V
  #150 = Utf8               ()V
  #151 = NameAndType        #125:#150     // "<init>":()V
  #152 = Methodref          #4.#151       // java/lang/Object."<init>":()V
  #153 = Utf8               Code
  #154 = Utf8               StackMapTable
  #155 = Utf8               LineNumberTable
  #156 = Utf8               LocalVariableTable
  #157 = Utf8               Signature
  #158 = Utf8               MethodParameters
  #159 = Utf8               InnerClasses
  #160 = Utf8               EnclosingMethod
  #161 = Utf8               SourceFile
  #162 = Utf8               ScalaInlineInfo
  #163 = Utf8               Scala
{
  private final argonaut.derive.JsonCodecMacros $outer;
    descriptor: Largonaut/derive/JsonCodecMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public scala.Option<scala.Tuple5<scala.reflect.api.Names$TermNameApi, scala.collection.immutable.List<scala.reflect.api.Trees$TreeApi>, scala.collection.immutable.List<scala.reflect.api.Trees$TreeApi>, scala.reflect.api.Trees$ValDefApi, scala.collection.immutable.List<scala.reflect.api.Trees$TreeApi>>> unapply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=14, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        270
         6: aload_0
         7: getfield      #45                 // Field $outer:Largonaut/derive/JsonCodecMacros;
        10: invokevirtual #49                 // Method argonaut/derive/JsonCodecMacros.c:()Lscala/reflect/macros/blackbox/Context;
        13: invokeinterface #55,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        18: invokevirtual #61                 // Method scala/reflect/macros/Universe.TreeTag:()Lscala/reflect/ClassTag;
        21: aload_3
        22: invokeinterface #65,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        27: astore        4
        29: aload         4
        31: invokevirtual #71                 // Method scala/Option.isEmpty:()Z
        34: ifne          267
        37: aload         4
        39: invokevirtual #75                 // Method scala/Option.get:()Ljava/lang/Object;
        42: checkcast     #33                 // class scala/reflect/api/Trees$TreeApi
        45: astore        5
        47: aload         5
        49: ifnull        264
        52: aload_0
        53: getfield      #45                 // Field $outer:Largonaut/derive/JsonCodecMacros;
        56: invokevirtual #49                 // Method argonaut/derive/JsonCodecMacros.c:()Lscala/reflect/macros/blackbox/Context;
        59: invokeinterface #55,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #79                 // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
        67: invokeinterface #83,  1           // InterfaceMethod scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
        72: invokeinterface #87,  1           // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi.SyntacticObjectDef:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor;
        77: aload         5
        79: invokeinterface #90,  2           // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor.unapply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
        84: astore        6
        86: aload         6
        88: invokevirtual #71                 // Method scala/Option.isEmpty:()Z
        91: ifne          261
        94: aload         6
        96: invokevirtual #75                 // Method scala/Option.get:()Ljava/lang/Object;
        99: checkcast     #92                 // class scala/Tuple6
       102: invokevirtual #95                 // Method scala/Tuple6._1:()Ljava/lang/Object;
       105: checkcast     #28                 // class scala/reflect/api/Trees$ModifiersApi
       108: astore        7
       110: aload         6
       112: invokevirtual #75                 // Method scala/Option.get:()Ljava/lang/Object;
       115: checkcast     #92                 // class scala/Tuple6
       118: invokevirtual #98                 // Method scala/Tuple6._2:()Ljava/lang/Object;
       121: checkcast     #23                 // class scala/reflect/api/Names$TermNameApi
       124: astore        8
       126: aload         6
       128: invokevirtual #75                 // Method scala/Option.get:()Ljava/lang/Object;
       131: checkcast     #92                 // class scala/Tuple6
       134: invokevirtual #101                // Method scala/Tuple6._3:()Ljava/lang/Object;
       137: checkcast     #103                // class scala/collection/immutable/List
       140: astore        9
       142: aload         6
       144: invokevirtual #75                 // Method scala/Option.get:()Ljava/lang/Object;
       147: checkcast     #92                 // class scala/Tuple6
       150: invokevirtual #106                // Method scala/Tuple6._4:()Ljava/lang/Object;
       153: checkcast     #103                // class scala/collection/immutable/List
       156: astore        10
       158: aload         6
       160: invokevirtual #75                 // Method scala/Option.get:()Ljava/lang/Object;
       163: checkcast     #92                 // class scala/Tuple6
       166: invokevirtual #109                // Method scala/Tuple6._5:()Ljava/lang/Object;
       169: checkcast     #36                 // class scala/reflect/api/Trees$ValDefApi
       172: astore        11
       174: aload         6
       176: invokevirtual #75                 // Method scala/Option.get:()Ljava/lang/Object;
       179: checkcast     #92                 // class scala/Tuple6
       182: invokevirtual #112                // Method scala/Tuple6._6:()Ljava/lang/Object;
       185: checkcast     #103                // class scala/collection/immutable/List
       188: astore        12
       190: aload_0
       191: getfield      #45                 // Field $outer:Largonaut/derive/JsonCodecMacros;
       194: invokevirtual #49                 // Method argonaut/derive/JsonCodecMacros.c:()Lscala/reflect/macros/blackbox/Context;
       197: invokeinterface #55,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
       202: invokevirtual #116                // Method scala/reflect/macros/Universe.NoMods:()Lscala/reflect/api/Trees$ModifiersApi;
       205: aload         7
       207: astore        13
       209: dup
       210: ifnonnull     222
       213: pop
       214: aload         13
       216: ifnull        230
       219: goto          258
       222: aload         13
       224: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       227: ifeq          258
       230: new           #122                // class scala/Some
       233: dup
       234: new           #124                // class scala/Tuple5
       237: dup
       238: aload         8
       240: aload         9
       242: aload         10
       244: aload         11
       246: aload         12
       248: invokespecial #128                // Method scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       251: invokespecial #131                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       254: astore_2
       255: goto          280
       258: goto          273
       261: goto          273
       264: goto          273
       267: goto          273
       270: goto          273
       273: getstatic     #137                // Field scala/None$.MODULE$:Lscala/None$;
       276: astore_2
       277: goto          280
       280: aload_2
       281: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 222
          locals = [ class argonaut/derive/JsonCodecMacros$$anon$1, class java/lang/Object, top, class java/lang/Object, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ModifiersApi, class scala/reflect/api/Names$TermNameApi, class scala/collection/immutable/List, class scala/collection/immutable/List, class scala/reflect/api/Trees$ValDefApi, class scala/collection/immutable/List, class scala/reflect/api/Trees$ModifiersApi ]
          stack = [ class scala/reflect/api/Trees$ModifiersApi ]
        frame_type = 7 /* same */
        frame_type = 27 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/derive/JsonCodecMacros$$anon$1, class java/lang/Object, top, class java/lang/Object, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class argonaut/derive/JsonCodecMacros$$anon$1, class java/lang/Object, class scala/Option, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          124     137     8 qq$macro$4   Lscala/reflect/api/Names$TermNameApi;
          140     121     9 qq$macro$5   Lscala/collection/immutable/List;
          156     105    10 qq$macro$6   Lscala/collection/immutable/List;
          172      89    11 qq$macro$7   Lscala/reflect/api/Trees$ValDefApi;
          188      73    12 qq$macro$8   Lscala/collection/immutable/List;
            0     282     0  this   Largonaut/derive/JsonCodecMacros$$anon$1;
            0     282     1  tree   Ljava/lang/Object;
    Signature: #42                          // (Ljava/lang/Object;)Lscala/Option<Lscala/Tuple5<Lscala/reflect/api/Names$TermNameApi;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;Lscala/reflect/api/Trees$ValDefApi;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;>;>;
    MethodParameters:
      Name                           Flags
      tree                           final

  public argonaut.derive.JsonCodecMacros$$anon$1(argonaut.derive.JsonCodecMacros);
    descriptor: (Largonaut/derive/JsonCodecMacros;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #45                 // Field $outer:Largonaut/derive/JsonCodecMacros;
        11: aload_0
        12: invokespecial #152                // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/derive/JsonCodecMacros$$anon$1;
            0      16     1 $outer   Largonaut/derive/JsonCodecMacros;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public final #2;                        // class argonaut/derive/JsonCodecMacros$$anon$1
  public #15= #12 of #14;                 // InternalApi=class scala/reflect/api/Internals$InternalApi of class scala/reflect/api/Internals
  public #18= #17 of #14;                 // ReificationSupportApi=class scala/reflect/api/Internals$ReificationSupportApi of class scala/reflect/api/Internals
  public #21= #20 of #17;                 // SyntacticObjectDefExtractor=class scala/reflect/api/Internals$ReificationSupportApi$SyntacticObjectDefExtractor of class scala/reflect/api/Internals$ReificationSupportApi
  public #26= #23 of #25;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public abstract #31= #28 of #30;        // ModifiersApi=class scala/reflect/api/Trees$ModifiersApi of class scala/reflect/api/Trees
  public #34= #33 of #30;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #37= #36 of #30;                 // ValDefApi=class scala/reflect/api/Trees$ValDefApi of class scala/reflect/api/Trees
EnclosingMethod: #7.#10                 // argonaut.derive.JsonCodecMacros.jsonCodecAnnotationMacro
SourceFile: "JsonCodecMacros.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 7D 00 95 01 00 28 00 29 01
  Scala: length = 0x0 (unknown attribute)

