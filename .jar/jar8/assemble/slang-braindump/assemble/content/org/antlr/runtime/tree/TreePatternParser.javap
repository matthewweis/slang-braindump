Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/antlr/runtime/tree/TreePatternParser.class
  Last modified May 29, 2022; size 3079 bytes
  SHA-256 checksum 761029560ad899230758f0966967d8442a1a96718ab07158e2e086866bdbed2b
  Compiled from "TreePatternParser.java"
public class org.antlr.runtime.tree.TreePatternParser
  minor version: 0
  major version: 49
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #30                         // org/antlr/runtime/tree/TreePatternParser
  super_class: #31                        // java/lang/Object
  interfaces: 0, fields: 4, methods: 4, attributes: 2
Constant pool:
    #1 = Methodref          #31.#69       // java/lang/Object."<init>":()V
    #2 = Fieldref           #30.#70       // org/antlr/runtime/tree/TreePatternParser.tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
    #3 = Fieldref           #30.#71       // org/antlr/runtime/tree/TreePatternParser.wizard:Lorg/antlr/runtime/tree/TreeWizard;
    #4 = Fieldref           #30.#72       // org/antlr/runtime/tree/TreePatternParser.adaptor:Lorg/antlr/runtime/tree/TreeAdaptor;
    #5 = Methodref          #73.#74       // org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
    #6 = Fieldref           #30.#75       // org/antlr/runtime/tree/TreePatternParser.ttype:I
    #7 = Methodref          #30.#76       // org/antlr/runtime/tree/TreePatternParser.parseTree:()Ljava/lang/Object;
    #8 = Methodref          #30.#77       // org/antlr/runtime/tree/TreePatternParser.parseNode:()Ljava/lang/Object;
    #9 = Class              #78           // java/lang/RuntimeException
   #10 = String             #79           // no BEGIN
   #11 = Methodref          #9.#80        // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #12 = InterfaceMethodref #81.#82       // org/antlr/runtime/tree/TreeAdaptor.addChild:(Ljava/lang/Object;Ljava/lang/Object;)V
   #13 = String             #83           // no END
   #14 = Fieldref           #73.#84       // org/antlr/runtime/tree/TreePatternLexer.sval:Ljava/lang/StringBuffer;
   #15 = Methodref          #85.#86       // java/lang/StringBuffer.toString:()Ljava/lang/String;
   #16 = Class              #87           // org/antlr/runtime/CommonToken
   #17 = String             #88           // .
   #18 = Methodref          #16.#89       // org/antlr/runtime/CommonToken."<init>":(ILjava/lang/String;)V
   #19 = Class              #91           // org/antlr/runtime/tree/TreeWizard$WildcardTreePattern
   #20 = Methodref          #19.#93       // org/antlr/runtime/tree/TreeWizard$WildcardTreePattern."<init>":(Lorg/antlr/runtime/Token;)V
   #21 = Fieldref           #28.#94       // org/antlr/runtime/tree/TreeWizard$TreePattern.label:Ljava/lang/String;
   #22 = String             #95           // nil
   #23 = Methodref          #96.#97       // java/lang/String.equals:(Ljava/lang/Object;)Z
   #24 = InterfaceMethodref #81.#98       // org/antlr/runtime/tree/TreeAdaptor.nil:()Ljava/lang/Object;
   #25 = Methodref          #90.#99       // org/antlr/runtime/tree/TreeWizard.getTokenType:(Ljava/lang/String;)I
   #26 = InterfaceMethodref #81.#100      // org/antlr/runtime/tree/TreeAdaptor.create:(ILjava/lang/String;)Ljava/lang/Object;
   #27 = Methodref          #31.#101      // java/lang/Object.getClass:()Ljava/lang/Class;
   #28 = Class              #102          // org/antlr/runtime/tree/TreeWizard$TreePattern
   #29 = Fieldref           #28.#103      // org/antlr/runtime/tree/TreeWizard$TreePattern.hasTextArg:Z
   #30 = Class              #104          // org/antlr/runtime/tree/TreePatternParser
   #31 = Class              #105          // java/lang/Object
   #32 = Utf8               tokenizer
   #33 = Utf8               Lorg/antlr/runtime/tree/TreePatternLexer;
   #34 = Utf8               ttype
   #35 = Utf8               I
   #36 = Utf8               wizard
   #37 = Utf8               Lorg/antlr/runtime/tree/TreeWizard;
   #38 = Utf8               adaptor
   #39 = Utf8               Lorg/antlr/runtime/tree/TreeAdaptor;
   #40 = Utf8               <init>
   #41 = Utf8               (Lorg/antlr/runtime/tree/TreePatternLexer;Lorg/antlr/runtime/tree/TreeWizard;Lorg/antlr/runtime/tree/TreeAdaptor;)V
   #42 = Utf8               Code
   #43 = Utf8               LineNumberTable
   #44 = Utf8               LocalVariableTable
   #45 = Utf8               this
   #46 = Utf8               Lorg/antlr/runtime/tree/TreePatternParser;
   #47 = Utf8               pattern
   #48 = Utf8               ()Ljava/lang/Object;
   #49 = Utf8               node
   #50 = Utf8               Ljava/lang/Object;
   #51 = Utf8               parseTree
   #52 = Utf8               subtree
   #53 = Utf8               child
   #54 = Utf8               root
   #55 = Utf8               parseNode
   #56 = Utf8               wildcardPayload
   #57 = Utf8               Lorg/antlr/runtime/Token;
   #58 = Utf8               TreePattern
   #59 = Utf8               InnerClasses
   #60 = Utf8               Lorg/antlr/runtime/tree/TreeWizard$TreePattern;
   #61 = Utf8               label
   #62 = Utf8               Ljava/lang/String;
   #63 = Utf8               tokenName
   #64 = Utf8               text
   #65 = Utf8               arg
   #66 = Utf8               treeNodeType
   #67 = Utf8               SourceFile
   #68 = Utf8               TreePatternParser.java
   #69 = NameAndType        #40:#106      // "<init>":()V
   #70 = NameAndType        #32:#33       // tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
   #71 = NameAndType        #36:#37       // wizard:Lorg/antlr/runtime/tree/TreeWizard;
   #72 = NameAndType        #38:#39       // adaptor:Lorg/antlr/runtime/tree/TreeAdaptor;
   #73 = Class              #107          // org/antlr/runtime/tree/TreePatternLexer
   #74 = NameAndType        #108:#109     // nextToken:()I
   #75 = NameAndType        #34:#35       // ttype:I
   #76 = NameAndType        #51:#48       // parseTree:()Ljava/lang/Object;
   #77 = NameAndType        #55:#48       // parseNode:()Ljava/lang/Object;
   #78 = Utf8               java/lang/RuntimeException
   #79 = Utf8               no BEGIN
   #80 = NameAndType        #40:#110      // "<init>":(Ljava/lang/String;)V
   #81 = Class              #111          // org/antlr/runtime/tree/TreeAdaptor
   #82 = NameAndType        #112:#113     // addChild:(Ljava/lang/Object;Ljava/lang/Object;)V
   #83 = Utf8               no END
   #84 = NameAndType        #114:#115     // sval:Ljava/lang/StringBuffer;
   #85 = Class              #116          // java/lang/StringBuffer
   #86 = NameAndType        #117:#118     // toString:()Ljava/lang/String;
   #87 = Utf8               org/antlr/runtime/CommonToken
   #88 = Utf8               .
   #89 = NameAndType        #40:#119      // "<init>":(ILjava/lang/String;)V
   #90 = Class              #120          // org/antlr/runtime/tree/TreeWizard
   #91 = Utf8               org/antlr/runtime/tree/TreeWizard$WildcardTreePattern
   #92 = Utf8               WildcardTreePattern
   #93 = NameAndType        #40:#121      // "<init>":(Lorg/antlr/runtime/Token;)V
   #94 = NameAndType        #61:#62       // label:Ljava/lang/String;
   #95 = Utf8               nil
   #96 = Class              #122          // java/lang/String
   #97 = NameAndType        #123:#124     // equals:(Ljava/lang/Object;)Z
   #98 = NameAndType        #95:#48       // nil:()Ljava/lang/Object;
   #99 = NameAndType        #125:#126     // getTokenType:(Ljava/lang/String;)I
  #100 = NameAndType        #127:#128     // create:(ILjava/lang/String;)Ljava/lang/Object;
  #101 = NameAndType        #129:#130     // getClass:()Ljava/lang/Class;
  #102 = Utf8               org/antlr/runtime/tree/TreeWizard$TreePattern
  #103 = NameAndType        #131:#132     // hasTextArg:Z
  #104 = Utf8               org/antlr/runtime/tree/TreePatternParser
  #105 = Utf8               java/lang/Object
  #106 = Utf8               ()V
  #107 = Utf8               org/antlr/runtime/tree/TreePatternLexer
  #108 = Utf8               nextToken
  #109 = Utf8               ()I
  #110 = Utf8               (Ljava/lang/String;)V
  #111 = Utf8               org/antlr/runtime/tree/TreeAdaptor
  #112 = Utf8               addChild
  #113 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #114 = Utf8               sval
  #115 = Utf8               Ljava/lang/StringBuffer;
  #116 = Utf8               java/lang/StringBuffer
  #117 = Utf8               toString
  #118 = Utf8               ()Ljava/lang/String;
  #119 = Utf8               (ILjava/lang/String;)V
  #120 = Utf8               org/antlr/runtime/tree/TreeWizard
  #121 = Utf8               (Lorg/antlr/runtime/Token;)V
  #122 = Utf8               java/lang/String
  #123 = Utf8               equals
  #124 = Utf8               (Ljava/lang/Object;)Z
  #125 = Utf8               getTokenType
  #126 = Utf8               (Ljava/lang/String;)I
  #127 = Utf8               create
  #128 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;
  #129 = Utf8               getClass
  #130 = Utf8               ()Ljava/lang/Class;
  #131 = Utf8               hasTextArg
  #132 = Utf8               Z
{
  protected org.antlr.runtime.tree.TreePatternLexer tokenizer;
    descriptor: Lorg/antlr/runtime/tree/TreePatternLexer;
    flags: (0x0004) ACC_PROTECTED

  protected int ttype;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED

  protected org.antlr.runtime.tree.TreeWizard wizard;
    descriptor: Lorg/antlr/runtime/tree/TreeWizard;
    flags: (0x0004) ACC_PROTECTED

  protected org.antlr.runtime.tree.TreeAdaptor adaptor;
    descriptor: Lorg/antlr/runtime/tree/TreeAdaptor;
    flags: (0x0004) ACC_PROTECTED

  public org.antlr.runtime.tree.TreePatternParser(org.antlr.runtime.tree.TreePatternLexer, org.antlr.runtime.tree.TreeWizard, org.antlr.runtime.tree.TreeAdaptor);
    descriptor: (Lorg/antlr/runtime/tree/TreePatternLexer;Lorg/antlr/runtime/tree/TreeWizard;Lorg/antlr/runtime/tree/TreeAdaptor;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
         9: aload_0
        10: aload_2
        11: putfield      #3                  // Field wizard:Lorg/antlr/runtime/tree/TreeWizard;
        14: aload_0
        15: aload_3
        16: putfield      #4                  // Field adaptor:Lorg/antlr/runtime/tree/TreeAdaptor;
        19: aload_0
        20: aload_1
        21: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
        24: putfield      #6                  // Field ttype:I
        27: return
      LineNumberTable:
        line 39: 0
        line 40: 4
        line 41: 9
        line 42: 14
        line 43: 19
        line 44: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/antlr/runtime/tree/TreePatternParser;
            0      28     1 tokenizer   Lorg/antlr/runtime/tree/TreePatternLexer;
            0      28     2 wizard   Lorg/antlr/runtime/tree/TreeWizard;
            0      28     3 adaptor   Lorg/antlr/runtime/tree/TreeAdaptor;

  public java.lang.Object pattern();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getfield      #6                  // Field ttype:I
         4: iconst_1
         5: if_icmpne     13
         8: aload_0
         9: invokevirtual #7                  // Method parseTree:()Ljava/lang/Object;
        12: areturn
        13: aload_0
        14: getfield      #6                  // Field ttype:I
        17: iconst_3
        18: if_icmpne     38
        21: aload_0
        22: invokevirtual #8                  // Method parseNode:()Ljava/lang/Object;
        25: astore_1
        26: aload_0
        27: getfield      #6                  // Field ttype:I
        30: iconst_m1
        31: if_icmpne     36
        34: aload_1
        35: areturn
        36: aconst_null
        37: areturn
        38: aconst_null
        39: areturn
      LineNumberTable:
        line 47: 0
        line 48: 8
        line 50: 13
        line 51: 21
        line 52: 26
        line 53: 34
        line 55: 36
        line 57: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      12     1  node   Ljava/lang/Object;
            0      40     0  this   Lorg/antlr/runtime/tree/TreePatternParser;

  public java.lang.Object parseTree();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: getfield      #6                  // Field ttype:I
         4: iconst_1
         5: if_icmpeq     18
         8: new           #9                  // class java/lang/RuntimeException
        11: dup
        12: ldc           #10                 // String no BEGIN
        14: invokespecial #11                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        17: athrow
        18: aload_0
        19: aload_0
        20: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
        23: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
        26: putfield      #6                  // Field ttype:I
        29: aload_0
        30: invokevirtual #8                  // Method parseNode:()Ljava/lang/Object;
        33: astore_1
        34: aload_1
        35: ifnonnull     40
        38: aconst_null
        39: areturn
        40: aload_0
        41: getfield      #6                  // Field ttype:I
        44: iconst_1
        45: if_icmpeq     73
        48: aload_0
        49: getfield      #6                  // Field ttype:I
        52: iconst_3
        53: if_icmpeq     73
        56: aload_0
        57: getfield      #6                  // Field ttype:I
        60: iconst_5
        61: if_icmpeq     73
        64: aload_0
        65: getfield      #6                  // Field ttype:I
        68: bipush        7
        70: if_icmpne     125
        73: aload_0
        74: getfield      #6                  // Field ttype:I
        77: iconst_1
        78: if_icmpne     100
        81: aload_0
        82: invokevirtual #7                  // Method parseTree:()Ljava/lang/Object;
        85: astore_2
        86: aload_0
        87: getfield      #4                  // Field adaptor:Lorg/antlr/runtime/tree/TreeAdaptor;
        90: aload_1
        91: aload_2
        92: invokeinterface #12,  3           // InterfaceMethod org/antlr/runtime/tree/TreeAdaptor.addChild:(Ljava/lang/Object;Ljava/lang/Object;)V
        97: goto          40
       100: aload_0
       101: invokevirtual #8                  // Method parseNode:()Ljava/lang/Object;
       104: astore_2
       105: aload_2
       106: ifnonnull     111
       109: aconst_null
       110: areturn
       111: aload_0
       112: getfield      #4                  // Field adaptor:Lorg/antlr/runtime/tree/TreeAdaptor;
       115: aload_1
       116: aload_2
       117: invokeinterface #12,  3           // InterfaceMethod org/antlr/runtime/tree/TreeAdaptor.addChild:(Ljava/lang/Object;Ljava/lang/Object;)V
       122: goto          40
       125: aload_0
       126: getfield      #6                  // Field ttype:I
       129: iconst_2
       130: if_icmpeq     143
       133: new           #9                  // class java/lang/RuntimeException
       136: dup
       137: ldc           #13                 // String no END
       139: invokespecial #11                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       142: athrow
       143: aload_0
       144: aload_0
       145: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
       148: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
       151: putfield      #6                  // Field ttype:I
       154: aload_1
       155: areturn
      LineNumberTable:
        line 61: 0
        line 62: 8
        line 64: 18
        line 65: 29
        line 66: 34
        line 67: 38
        line 69: 40
        line 74: 73
        line 75: 81
        line 76: 86
        line 77: 97
        line 79: 100
        line 80: 105
        line 81: 109
        line 83: 111
        line 84: 122
        line 86: 125
        line 87: 133
        line 89: 143
        line 90: 154
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           86      11     2 subtree   Ljava/lang/Object;
          105      17     2 child   Ljava/lang/Object;
            0     156     0  this   Lorg/antlr/runtime/tree/TreePatternParser;
           34     122     1  root   Ljava/lang/Object;

  public java.lang.Object parseNode();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=1
         0: aconst_null
         1: astore_1
         2: aload_0
         3: getfield      #6                  // Field ttype:I
         6: iconst_5
         7: if_icmpne     75
        10: aload_0
        11: aload_0
        12: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
        15: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
        18: putfield      #6                  // Field ttype:I
        21: aload_0
        22: getfield      #6                  // Field ttype:I
        25: iconst_3
        26: if_icmpeq     31
        29: aconst_null
        30: areturn
        31: aload_0
        32: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
        35: getfield      #14                 // Field org/antlr/runtime/tree/TreePatternLexer.sval:Ljava/lang/StringBuffer;
        38: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
        41: astore_1
        42: aload_0
        43: aload_0
        44: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
        47: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
        50: putfield      #6                  // Field ttype:I
        53: aload_0
        54: getfield      #6                  // Field ttype:I
        57: bipush        6
        59: if_icmpeq     64
        62: aconst_null
        63: areturn
        64: aload_0
        65: aload_0
        66: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
        69: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
        72: putfield      #6                  // Field ttype:I
        75: aload_0
        76: getfield      #6                  // Field ttype:I
        79: bipush        7
        81: if_icmpne     126
        84: aload_0
        85: aload_0
        86: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
        89: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
        92: putfield      #6                  // Field ttype:I
        95: new           #16                 // class org/antlr/runtime/CommonToken
        98: dup
        99: iconst_0
       100: ldc           #17                 // String .
       102: invokespecial #18                 // Method org/antlr/runtime/CommonToken."<init>":(ILjava/lang/String;)V
       105: astore_2
       106: new           #19                 // class org/antlr/runtime/tree/TreeWizard$WildcardTreePattern
       109: dup
       110: aload_2
       111: invokespecial #20                 // Method org/antlr/runtime/tree/TreeWizard$WildcardTreePattern."<init>":(Lorg/antlr/runtime/Token;)V
       114: astore_3
       115: aload_1
       116: ifnull        124
       119: aload_3
       120: aload_1
       121: putfield      #21                 // Field org/antlr/runtime/tree/TreeWizard$TreePattern.label:Ljava/lang/String;
       124: aload_3
       125: areturn
       126: aload_0
       127: getfield      #6                  // Field ttype:I
       130: iconst_3
       131: if_icmpeq     136
       134: aconst_null
       135: areturn
       136: aload_0
       137: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
       140: getfield      #14                 // Field org/antlr/runtime/tree/TreePatternLexer.sval:Ljava/lang/StringBuffer;
       143: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
       146: astore_2
       147: aload_0
       148: aload_0
       149: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
       152: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
       155: putfield      #6                  // Field ttype:I
       158: aload_2
       159: ldc           #22                 // String nil
       161: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       164: ifeq          177
       167: aload_0
       168: getfield      #4                  // Field adaptor:Lorg/antlr/runtime/tree/TreeAdaptor;
       171: invokeinterface #24,  1           // InterfaceMethod org/antlr/runtime/tree/TreeAdaptor.nil:()Ljava/lang/Object;
       176: areturn
       177: aload_2
       178: astore_3
       179: aconst_null
       180: astore        4
       182: aload_0
       183: getfield      #6                  // Field ttype:I
       186: iconst_4
       187: if_icmpne     216
       190: aload_0
       191: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
       194: getfield      #14                 // Field org/antlr/runtime/tree/TreePatternLexer.sval:Ljava/lang/StringBuffer;
       197: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
       200: astore        4
       202: aload         4
       204: astore_3
       205: aload_0
       206: aload_0
       207: getfield      #2                  // Field tokenizer:Lorg/antlr/runtime/tree/TreePatternLexer;
       210: invokevirtual #5                  // Method org/antlr/runtime/tree/TreePatternLexer.nextToken:()I
       213: putfield      #6                  // Field ttype:I
       216: aload_0
       217: getfield      #3                  // Field wizard:Lorg/antlr/runtime/tree/TreeWizard;
       220: aload_2
       221: invokevirtual #25                 // Method org/antlr/runtime/tree/TreeWizard.getTokenType:(Ljava/lang/String;)I
       224: istore        5
       226: iload         5
       228: ifne          233
       231: aconst_null
       232: areturn
       233: aload_0
       234: getfield      #4                  // Field adaptor:Lorg/antlr/runtime/tree/TreeAdaptor;
       237: iload         5
       239: aload_3
       240: invokeinterface #26,  3           // InterfaceMethod org/antlr/runtime/tree/TreeAdaptor.create:(ILjava/lang/String;)Ljava/lang/Object;
       245: astore        6
       247: aload_1
       248: ifnull        271
       251: aload         6
       253: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       256: ldc_w         #28                 // class org/antlr/runtime/tree/TreeWizard$TreePattern
       259: if_acmpne     271
       262: aload         6
       264: checkcast     #28                 // class org/antlr/runtime/tree/TreeWizard$TreePattern
       267: aload_1
       268: putfield      #21                 // Field org/antlr/runtime/tree/TreeWizard$TreePattern.label:Ljava/lang/String;
       271: aload         4
       273: ifnull        296
       276: aload         6
       278: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       281: ldc_w         #28                 // class org/antlr/runtime/tree/TreeWizard$TreePattern
       284: if_acmpne     296
       287: aload         6
       289: checkcast     #28                 // class org/antlr/runtime/tree/TreeWizard$TreePattern
       292: iconst_1
       293: putfield      #29                 // Field org/antlr/runtime/tree/TreeWizard$TreePattern.hasTextArg:Z
       296: aload         6
       298: areturn
      LineNumberTable:
        line 95: 0
        line 96: 2
        line 97: 10
        line 98: 21
        line 99: 29
        line 101: 31
        line 102: 42
        line 103: 53
        line 104: 62
        line 106: 64
        line 110: 75
        line 111: 84
        line 112: 95
        line 113: 106
        line 115: 115
        line 116: 119
        line 118: 124
        line 122: 126
        line 123: 134
        line 125: 136
        line 126: 147
        line 127: 158
        line 128: 167
        line 130: 177
        line 132: 179
        line 133: 182
        line 134: 190
        line 135: 202
        line 136: 205
        line 140: 216
        line 141: 226
        line 142: 231
        line 145: 233
        line 146: 247
        line 147: 262
        line 149: 271
        line 150: 287
        line 152: 296
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          106      20     2 wildcardPayload   Lorg/antlr/runtime/Token;
          115      11     3  node   Lorg/antlr/runtime/tree/TreeWizard$TreePattern;
            0     299     0  this   Lorg/antlr/runtime/tree/TreePatternParser;
            2     297     1 label   Ljava/lang/String;
          147     152     2 tokenName   Ljava/lang/String;
          179     120     3  text   Ljava/lang/String;
          182     117     4   arg   Ljava/lang/String;
          226      73     5 treeNodeType   I
          247      52     6  node   Ljava/lang/Object;
}
SourceFile: "TreePatternParser.java"
InnerClasses:
  public static #58= #28 of #90;          // TreePattern=class org/antlr/runtime/tree/TreeWizard$TreePattern of class org/antlr/runtime/tree/TreeWizard
  public static #92= #19 of #90;          // WildcardTreePattern=class org/antlr/runtime/tree/TreeWizard$WildcardTreePattern of class org/antlr/runtime/tree/TreeWizard
