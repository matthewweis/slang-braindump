Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/proc.class
  Last modified May 29, 2022; size 21512 bytes
  SHA-256 checksum b6de6d8ed8cd0d44712a95e584f40f380be5608ea2b097468bdf41498e5f434a
  Compiled from "ProcessOps.scala"
public class os.proc implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/proc
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 59, attributes: 6
Constant pool:
    #1 = Utf8               os/proc
    #2 = Class              #1            // os/proc
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               ProcessOps.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005]h\u0001\u0002\u0014(\u0001*B\u0001\u0002\u0011\u0001\u0003\u0016\u0004%\t!\u0011\u0005\t\u0013\u0002\u0011\t\u0012)A\u0005\u0005\")!\n\u0001C\u0001\u0017\")a\n\u0001C\u0001\u001f\"Aq\u0010AI\u0001\n\u0003\t\t\u0001C\u0005\u0002\u0018\u0001\t\n\u0011\"\u0001\u0002\u001a!I\u0011Q\u0004\u0001\u0012\u0002\u0013\u0005\u0011q\u0004\u0005\n\u0003G\u0001\u0011\u0013!C\u0001\u0003KA\u0011\"!\u000b\u0001#\u0003%\t!!\n\t\u0013\u0005-\u0002!%A\u0005\u0002\u00055\u0002\"CA\u0019\u0001E\u0005I\u0011AA\u001a\u0011%\t9\u0004AI\u0001\n\u0003\ti\u0003C\u0005\u0002:\u0001\t\n\u0011\"\u0001\u0002.!9\u00111\b\u0001\u0005\u0002\u0005u\u0002\"CA*\u0001E\u0005I\u0011AA\u0001\u0011%\t)\u0006AI\u0001\n\u0003\tI\u0002C\u0005\u0002X\u0001\t\n\u0011\"\u0001\u0002 !I\u0011\u0011\f\u0001\u0012\u0002\u0013\u0005\u0011Q\u0005\u0005\n\u00037\u0002\u0011\u0013!C\u0001\u0003KA\u0011\"!\u0018\u0001#\u0003%\t!!\f\t\u0013\u0005}\u0003!%A\u0005\u0002\u00055\u0002\"CA1\u0001\u0005\u0005I\u0011IA2\u0011%\t\u0019\bAA\u0001\n\u0003\t)\bC\u0005\u0002~\u0001\t\t\u0011\"\u0001\u0002\u0000!I\u00111\u0012\u0001\u0002\u0002\u0013\u0005\u0013Q\u0012\u0005\n\u00037\u0003\u0011\u0011!C\u0001\u0003;C\u0011\"!)\u0001\u0003\u0003%\t%a)\t\u0013\u0005\u001d\u0006!!A\u0005B\u0005%\u0006\"CAV\u0001\u0005\u0005I\u0011IAW\u0011%\ty\u000bAA\u0001\n\u0003\n\tlB\u0005\u00026\u001e\n\t\u0011#\u0001\u00028\u001aAaeJA\u0001\u0012\u0003\tI\f\u0003\u0004KA\u0011\u0005\u0011\u0011\u001b\u0005\n\u0003W\u0003\u0013\u0011!C#\u0003[C\u0011\"a5!\u0003\u0003%\t)!6\t\u0013\u0005e\u0007%!A\u0005\u0002\u0006m\u0007\"CAwA\u0005\u0005I\u0011BAx\u0005\u0011\u0001(o\\2\u000b\u0003!\n!a\\:\u0004\u0001M!\u0001aK\u00195!\tas&D\u0001.\u0015\u0005q\u0013!B:dC2\f\u0017B\u0001\u0019.\u0005\u0019\te.\u001f*fMB\u0011AFM\u0005\u0003g5\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u00026{9\u0011ag\u000f\b\u0003oij\u0011\u0001\u000f\u0006\u0003s%\na\u0001\u0010:p_Rt\u0014\"\u0001\u0018\n\u0005qj\u0013a\u00029bG.\fw-Z\u0005\u0003}}\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001P\u0017\u0002\u000f\r|W.\\1oIV\t!\tE\u0002-\u0007\u0016K!\u0001R\u0017\u0003\u0015q\u0012X\r]3bi\u0016$g\b\u0005\u0002G\u000f6\tq%\u0003\u0002IO\tI1\u000b[3mY\u0006\u0014G.Z\u0001\tG>lW.\u00198eA\u00051A(\u001b8jiz\"\"\u0001T\'\u0011\u0005\u0019\u0003\u0001\"\u0002!\u0004\u0001\u0004\u0011\u0015\u0001B2bY2$\"\u0002U*YK*|\u0017O^>~!\t1\u0015+\u0003\u0002SO\ti1i\\7nC:$\'+Z:vYRDq\u0001\u0016\u0003\u0011\u0002\u0003\u0007Q+A\u0002do\u0012\u0004\"A\u0012,\n\u0005];#\u0001\u0002)bi\"Dq!\u0017\u0003\u0011\u0002\u0003\u0007!,A\u0002f]Z\u0004BaW0cE:\u0011A,\u0018\t\u0003o5J!AX\u0017\u0002\rA\u0013X\rZ3g\u0013\t\u0001\u0017MA\u0002NCBT!AX\u0017\u0011\u0005m\u001b\u0017B\u00013b\u0005\u0019\u0019FO]5oO\"9a\r\u0002I\u0001\u0002\u00049\u0017!B:uI&t\u0007C\u0001$i\u0013\tIwE\u0001\u0007Qe>\u001cWm]:J]B,H\u000fC\u0004l\tA\u0005\t\u0019\u00017\u0002\rM$Hm\\;u!\t1U.\u0003\u0002oO\ti\u0001K]8dKN\u001cx*\u001e;qkRDq\u0001\u001d\u0003\u0011\u0002\u0003\u0007A.\u0001\u0004ti\u0012,\'O\u001d\u0005\be\u0012\u0001\n\u00111\u0001t\u0003=iWM]4f\u000bJ\u0014\u0018J\u001c;p\u001fV$\bC\u0001\u0017u\u0013\t)XFA\u0004C_>dW-\u00198\t\u000f]$\u0001\u0013!a\u0001q\u00069A/[7f_V$\bC\u0001\u0017z\u0013\tQXF\u0001\u0003M_:<\u0007b\u0002?\u0005!\u0003\u0005\ra]\u0001\u0006G\",7m\u001b\u0005\b}\u0012\u0001\n\u00111\u0001t\u00031\u0001(o\u001c9bO\u0006$X-\u00128w\u00039\u0019\u0017\r\u001c7%I\u00164\u0017-\u001e7uIE*\"!a\u0001+\u0007U\u000b)a\u000b\u0002\u0002\bA!\u0011\u0011BA\n\u001b\t\tYA\u0003\u0003\u0002\u000e\u0005=\u0011!C;oG\",7m[3e\u0015\r\t\t\"L\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002BA\u000b\u0003\u0017\u0011\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019\u0017\r\u001c7%I\u00164\u0017-\u001e7uII*\"!a\u0007+\u0007i\u000b)!\u0001\bdC2dG\u0005Z3gCVdG\u000fJ\u001a\u0016\u0005\u0005\u0005\"fA4\u0002\u0006\u0005q1-\u00197mI\u0011,g-Y;mi\u0012\"TCAA\u0014U\ra\u0017QA\u0001\u000fG\u0006dG\u000e\n3fM\u0006,H\u000e\u001e\u00136\u00039\u0019\u0017\r\u001c7%I\u00164\u0017-\u001e7uIY*\"!a\f+\u0007M\f)!\u0001\bdC2dG\u0005Z3gCVdG\u000fJ\u001c\u0016\u0005\u0005U\"f\u0001=\u0002\u0006\u0005q1-\u00197mI\u0011,g-Y;mi\u0012B\u0014AD2bY2$C-\u001a4bk2$H%O\u0001\u0006gB\fwO\u001c\u000b\u0011\u0003\u007f\t)%a\u0012\u0002J\u0005-\u0013QJA(\u0003#\u00022ARA!\u0013\r\t\u0019e\n\u0002\u000b\'V\u0014\u0007K]8dKN\u001c\bb\u0002+\u000f!\u0003\u0005\r!\u0016\u0005\b3:\u0001\n\u00111\u0001[\u0011\u001d1g\u0002%AA\u0002\u001dDqa\u001b\b\u0011\u0002\u0003\u0007A\u000eC\u0004q\u001dA\u0005\t\u0019\u00017\t\u000fIt\u0001\u0013!a\u0001g\"9aP\u0004I\u0001\u0002\u0004\u0019\u0018aD:qC^tG\u0005Z3gCVdG\u000fJ\u0019\u0002\u001fM\u0004\u0018m\u001e8%I\u00164\u0017-\u001e7uII\nqb\u001d9bo:$C-\u001a4bk2$HeM\u0001\u0010gB\fwO\u001c\u0013eK\u001a\fW\u000f\u001c;%i\u0005y1\u000f]1x]\u0012\"WMZ1vYR$S\'A\bta\u0006<h\u000e\n3fM\u0006,H\u000e\u001e\u00137\u0003=\u0019\b/Y<oI\u0011,g-Y;mi\u0012:\u0014!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0002fA!\u0011qMA9\u001b\t\tIG\u0003\u0003\u0002l\u00055\u0014\u0001\u00027b]\u001eT!!a\u001c\u0002\t)\fg/Y\u0005\u0004I\u0006%\u0014\u0001\u00049s_\u0012,8\r^!sSRLXCAA<!\ra\u0013\u0011P\u0005\u0004\u0003wj#aA%oi\u0006q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BAA\u0003\u000f\u00032\u0001LAB\u0013\r\t))\f\u0002\u0004\u0003:L\b\"CAE1\u0005\u0005\t\u0019AA<\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\u0011\u0011q\u0012\t\u0007\u0003#\u000b9*!!\u000e\u0005\u0005M%bAAK[\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\t\u0005e\u00151\u0013\u0002\t\u0013R,\'/\u0019;pe\u0006A1-\u00198FcV\fG\u000eF\u0002t\u0003?C\u0011\"!#\u001b\u0003\u0003\u0005\r!!!\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\u0003K\n)\u000bC\u0005\u0002\nn\t\t\u00111\u0001\u0002x\u0005A\u0001.Y:i\u0007>$W\r\u0006\u0002\u0002x\u0005AAo\\*ue&tw\r\u0006\u0002\u0002f\u00051Q-];bYN$2a]AZ\u0011%\tIIHA\u0001\u0002\u0004\t\t)\u0001\u0003qe>\u001c\u0007C\u0001$!\'\u0015\u0001\u00131XAd!\u0019\ti,a1C\u00196\u0011\u0011q\u0018\u0006\u0004\u0003\u0003l\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003\u000b\fyLA\tBEN$(/Y2u\rVt7\r^5p]F\u0002B!!3\u0002P6\u0011\u00111\u001a\u0006\u0005\u0003\u001b\fi\'\u0001\u0002j_&\u0019a(a3\u0015\u0005\u0005]\u0016!B1qa2LHc\u0001\'\u0002X\")\u0001i\ta\u0001\u0005\u0006QQO\\1qa2L8+Z9\u0015\t\u0005u\u0017\u0011\u001e\t\u0006Y\u0005}\u00171]\u0005\u0004\u0003Cl#AB(qi&|g\u000e\u0005\u00036\u0003K,\u0015bAAt\u007f\t\u00191+Z9\t\u0011\u0005-H%!AA\u00021\u000b1\u0001\u001f\u00131\u000319(/\u001b;f%\u0016\u0004H.Y2f)\t\t\t\u0010\u0005\u0003\u0002h\u0005M\u0018\u0002BA{\u0003S\u0012aa\u00142kK\u000e$\b
   #13 = Utf8               java/lang/ProcessBuilder$Redirect
   #14 = Class              #13           // java/lang/ProcessBuilder$Redirect
   #15 = Utf8               java/lang/ProcessBuilder
   #16 = Class              #15           // java/lang/ProcessBuilder
   #17 = Utf8               Redirect
   #18 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #19 = Class              #18           // java/lang/invoke/MethodHandles$Lookup
   #20 = Utf8               java/lang/invoke/MethodHandles
   #21 = Class              #20           // java/lang/invoke/MethodHandles
   #22 = Utf8               Lookup
   #23 = Utf8               os/ProcessOutput$ReadBytes
   #24 = Class              #23           // os/ProcessOutput$ReadBytes
   #25 = Utf8               os/ProcessOutput
   #26 = Class              #25           // os/ProcessOutput
   #27 = Utf8               ReadBytes
   #28 = Utf8               os/SubProcess$InputStream
   #29 = Class              #28           // os/SubProcess$InputStream
   #30 = Utf8               os/SubProcess
   #31 = Class              #30           // os/SubProcess
   #32 = Utf8               InputStream
   #33 = Utf8               os/SubProcess$OutputStream
   #34 = Class              #33           // os/SubProcess$OutputStream
   #35 = Utf8               OutputStream
   #36 = Utf8               scala/collection/JavaConverters$AsScala
   #37 = Class              #36           // scala/collection/JavaConverters$AsScala
   #38 = Utf8               scala/collection/JavaConverters
   #39 = Class              #38           // scala/collection/JavaConverters
   #40 = Utf8               AsScala
   #41 = Utf8               command
   #42 = Utf8               Lscala/collection/immutable/Seq;
   #43 = Utf8               Lscala/collection/immutable/Seq<Los/Shellable;>;
   #44 = Utf8               unapplySeq
   #45 = Utf8               (Los/proc;)Lscala/Option;
   #46 = Utf8               (Los/proc;)Lscala/Option<Lscala/collection/immutable/Seq<Los/Shellable;>;>;
   #47 = Utf8               x$0
   #48 = Utf8               os/proc$
   #49 = Class              #48           // os/proc$
   #50 = Utf8               MODULE$
   #51 = Utf8               Los/proc$;
   #52 = NameAndType        #50:#51       // MODULE$:Los/proc$;
   #53 = Fieldref           #49.#52       // os/proc$.MODULE$:Los/proc$;
   #54 = NameAndType        #44:#45       // unapplySeq:(Los/proc;)Lscala/Option;
   #55 = Methodref          #49.#54       // os/proc$.unapplySeq:(Los/proc;)Lscala/Option;
   #56 = Utf8               apply
   #57 = Utf8               (Lscala/collection/immutable/Seq;)Los/proc;
   #58 = Utf8               (Lscala/collection/immutable/Seq<Los/Shellable;>;)Los/proc;
   #59 = NameAndType        #56:#57       // apply:(Lscala/collection/immutable/Seq;)Los/proc;
   #60 = Methodref          #49.#59       // os/proc$.apply:(Lscala/collection/immutable/Seq;)Los/proc;
   #61 = Utf8               andThen
   #62 = Utf8               (Lscala/Function1;)Lscala/Function1;
   #63 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Los/proc;TA;>;)Lscala/Function1<Lscala/collection/immutable/Seq<Los/Shellable;>;TA;>;
   #64 = Utf8               g
   #65 = NameAndType        #61:#62       // andThen:(Lscala/Function1;)Lscala/Function1;
   #66 = Methodref          #49.#65       // os/proc$.andThen:(Lscala/Function1;)Lscala/Function1;
   #67 = Utf8               compose
   #68 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<TA;Lscala/collection/immutable/Seq<Los/Shellable;>;>;)Lscala/Function1<TA;Los/proc;>;
   #69 = NameAndType        #67:#62       // compose:(Lscala/Function1;)Lscala/Function1;
   #70 = Methodref          #49.#69       // os/proc$.compose:(Lscala/Function1;)Lscala/Function1;
   #71 = Utf8               productElementNames
   #72 = Utf8               ()Lscala/collection/Iterator;
   #73 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #74 = Utf8               productElementNames$
   #75 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #76 = NameAndType        #74:#75       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #77 = InterfaceMethodref #6.#76        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #78 = Utf8               this
   #79 = Utf8               Los/proc;
   #80 = Utf8               ()Lscala/collection/immutable/Seq;
   #81 = Utf8               ()Lscala/collection/immutable/Seq<Los/Shellable;>;
   #82 = NameAndType        #41:#42       // command:Lscala/collection/immutable/Seq;
   #83 = Fieldref           #2.#82        // os/proc.command:Lscala/collection/immutable/Seq;
   #84 = Utf8               call
   #85 = Utf8               (Los/Path;Lscala/collection/immutable/Map;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZJZZ)Los/CommandResult;
   #86 = Utf8               (Los/Path;Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZJZZ)Los/CommandResult;
   #87 = Utf8               cwd
   #88 = Utf8               env
   #89 = Utf8               stdin
   #90 = Utf8               stdout
   #91 = Utf8               stderr
   #92 = Utf8               mergeErrIntoOut
   #93 = Utf8               timeout
   #94 = Utf8               check
   #95 = Utf8               propagateEnv
   #96 = Utf8               java/util/concurrent/ConcurrentLinkedQueue
   #97 = Class              #96           // java/util/concurrent/ConcurrentLinkedQueue
   #98 = Utf8               <init>
   #99 = Utf8               ()V
  #100 = NameAndType        #98:#99       // "<init>":()V
  #101 = Methodref          #97.#100      // java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
  #102 = Utf8               os/Pipe$
  #103 = Class              #102          // os/Pipe$
  #104 = Utf8               Los/Pipe$;
  #105 = NameAndType        #50:#104      // MODULE$:Los/Pipe$;
  #106 = Fieldref           #103.#105     // os/Pipe$.MODULE$:Los/Pipe$;
  #107 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #108 = MethodType         #107          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #109 = Utf8               $anonfun$call$1$adapted
  #110 = Utf8               (Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
  #111 = NameAndType        #109:#110     // $anonfun$call$1$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
  #112 = Methodref          #2.#111       // os/proc.$anonfun$call$1$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
  #113 = MethodHandle       6:#112        // REF_invokeStatic os/proc.$anonfun$call$1$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
  #114 = Utf8               ([BLjava/lang/Object;)Ljava/lang/Object;
  #115 = MethodType         #114          //  ([BLjava/lang/Object;)Ljava/lang/Object;
  #116 = Integer            5
  #117 = Integer            1
  #118 = Utf8               java/lang/invoke/LambdaMetafactory
  #119 = Class              #118          // java/lang/invoke/LambdaMetafactory
  #120 = Utf8               altMetafactory
  #121 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #122 = NameAndType        #120:#121     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #123 = Methodref          #119.#122     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #124 = MethodHandle       6:#123        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #125 = Utf8               (Ljava/util/concurrent/ConcurrentLinkedQueue;)Lscala/Function2;
  #126 = NameAndType        #56:#125      // apply:(Ljava/util/concurrent/ConcurrentLinkedQueue;)Lscala/Function2;
  #127 = InvokeDynamic      #0:#126       // #0:apply:(Ljava/util/concurrent/ConcurrentLinkedQueue;)Lscala/Function2;
  #128 = Utf8               (Lscala/Function2;)V
  #129 = NameAndType        #98:#128      // "<init>":(Lscala/Function2;)V
  #130 = Methodref          #24.#129      // os/ProcessOutput$ReadBytes."<init>":(Lscala/Function2;)V
  #131 = Utf8               $anonfun$call$2$adapted
  #132 = NameAndType        #131:#110     // $anonfun$call$2$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
  #133 = Methodref          #2.#132       // os/proc.$anonfun$call$2$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
  #134 = MethodHandle       6:#133        // REF_invokeStatic os/proc.$anonfun$call$2$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
  #135 = InvokeDynamic      #1:#126       // #1:apply:(Ljava/util/concurrent/ConcurrentLinkedQueue;)Lscala/Function2;
  #136 = Utf8               spawn
  #137 = Utf8               (Los/Path;Lscala/collection/immutable/Map;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZZ)Los/SubProcess;
  #138 = NameAndType        #136:#137     // spawn:(Los/Path;Lscala/collection/immutable/Map;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZZ)Los/SubProcess;
  #139 = Methodref          #2.#138       // os/proc.spawn:(Los/Path;Lscala/collection/immutable/Map;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZZ)Los/SubProcess;
  #140 = Utf8               join
  #141 = Utf8               (J)Z
  #142 = NameAndType        #140:#141     // join:(J)Z
  #143 = Methodref          #31.#142      // os/SubProcess.join:(J)Z
  #144 = Utf8               scala/collection/JavaConverters$
  #145 = Class              #144          // scala/collection/JavaConverters$
  #146 = Utf8               Lscala/collection/JavaConverters$;
  #147 = NameAndType        #50:#146      // MODULE$:Lscala/collection/JavaConverters$;
  #148 = Fieldref           #145.#147     // scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
  #149 = Utf8               iterator
  #150 = Utf8               ()Ljava/util/Iterator;
  #151 = NameAndType        #149:#150     // iterator:()Ljava/util/Iterator;
  #152 = Methodref          #97.#151      // java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
  #153 = Utf8               asScalaIteratorConverter
  #154 = Utf8               (Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #155 = NameAndType        #153:#154     // asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #156 = Methodref          #145.#155     // scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #157 = Utf8               asScala
  #158 = Utf8               ()Ljava/lang/Object;
  #159 = NameAndType        #157:#158     // asScala:()Ljava/lang/Object;
  #160 = Methodref          #37.#159      // scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
  #161 = Utf8               scala/collection/IterableOnceOps
  #162 = Class              #161          // scala/collection/IterableOnceOps
  #163 = Utf8               scala/reflect/ClassTag$
  #164 = Class              #163          // scala/reflect/ClassTag$
  #165 = Utf8               Lscala/reflect/ClassTag$;
  #166 = NameAndType        #50:#165      // MODULE$:Lscala/reflect/ClassTag$;
  #167 = Fieldref           #164.#166     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #168 = Utf8               scala/util/Either
  #169 = Class              #168          // scala/util/Either
  #170 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #171 = NameAndType        #56:#170      // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #172 = Methodref          #164.#171     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #173 = Utf8               toArray
  #174 = Utf8               (Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #175 = NameAndType        #173:#174     // toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #176 = InterfaceMethodref #162.#175     // scala/collection/IterableOnceOps.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #177 = Utf8               [Lscala/util/Either;
  #178 = Class              #177          // "[Lscala/util/Either;"
  #179 = Utf8               os/CommandResult
  #180 = Class              #179          // os/CommandResult
  #181 = Utf8               exitCode
  #182 = Utf8               ()I
  #183 = NameAndType        #181:#182     // exitCode:()I
  #184 = Methodref          #31.#183      // os/SubProcess.exitCode:()I
  #185 = Utf8               scala/Predef$
  #186 = Class              #185          // scala/Predef$
  #187 = Utf8               Lscala/Predef$;
  #188 = NameAndType        #50:#187      // MODULE$:Lscala/Predef$;
  #189 = Fieldref           #186.#188     // scala/Predef$.MODULE$:Lscala/Predef$;
  #190 = Utf8               copyArrayToImmutableIndexedSeq
  #191 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/IndexedSeq;
  #192 = NameAndType        #190:#191     // copyArrayToImmutableIndexedSeq:(Ljava/lang/Object;)Lscala/collection/immutable/IndexedSeq;
  #193 = Methodref          #186.#192     // scala/Predef$.copyArrayToImmutableIndexedSeq:(Ljava/lang/Object;)Lscala/collection/immutable/IndexedSeq;
  #194 = Utf8               (ILscala/collection/immutable/Seq;)V
  #195 = NameAndType        #98:#194      // "<init>":(ILscala/collection/immutable/Seq;)V
  #196 = Methodref          #180.#195     // os/CommandResult."<init>":(ILscala/collection/immutable/Seq;)V
  #197 = Methodref          #180.#183     // os/CommandResult.exitCode:()I
  #198 = Utf8               os/SubprocessException
  #199 = Class              #198          // os/SubprocessException
  #200 = Utf8               (Los/CommandResult;)V
  #201 = NameAndType        #98:#200      // "<init>":(Los/CommandResult;)V
  #202 = Methodref          #199.#201     // os/SubprocessException."<init>":(Los/CommandResult;)V
  #203 = Utf8               chunks
  #204 = Utf8               Ljava/util/concurrent/ConcurrentLinkedQueue;
  #205 = Utf8               sub
  #206 = Utf8               Los/SubProcess;
  #207 = Utf8               chunksArr
  #208 = Utf8               res
  #209 = Utf8               Los/CommandResult;
  #210 = Utf8               Los/Path;
  #211 = Utf8               Lscala/collection/immutable/Map;
  #212 = Utf8               Los/ProcessInput;
  #213 = Utf8               Los/ProcessOutput;
  #214 = Utf8               Z
  #215 = Utf8               J
  #216 = Utf8               os/Path
  #217 = Class              #216          // os/Path
  #218 = Utf8               scala/collection/immutable/Map
  #219 = Class              #218          // scala/collection/immutable/Map
  #220 = Utf8               os/ProcessInput
  #221 = Class              #220          // os/ProcessInput
  #222 = Utf8               call$default$1
  #223 = Utf8               ()Los/Path;
  #224 = Utf8               call$default$2
  #225 = Utf8               ()Lscala/collection/immutable/Map;
  #226 = Utf8               ()Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;
  #227 = Utf8               call$default$3
  #228 = Utf8               ()Los/ProcessInput;
  #229 = Utf8               call$default$4
  #230 = Utf8               ()Los/ProcessOutput;
  #231 = Utf8               call$default$5
  #232 = Utf8               os/Inherit$
  #233 = Class              #232          // os/Inherit$
  #234 = Utf8               Los/Inherit$;
  #235 = NameAndType        #50:#234      // MODULE$:Los/Inherit$;
  #236 = Fieldref           #233.#235     // os/Inherit$.MODULE$:Los/Inherit$;
  #237 = Utf8               call$default$6
  #238 = Utf8               ()Z
  #239 = Utf8               call$default$7
  #240 = Utf8               ()J
  #241 = Long               -1l
  #243 = Utf8               call$default$8
  #244 = Utf8               call$default$9
  #245 = Utf8               (Los/Path;Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZZ)Los/SubProcess;
  #246 = Utf8               scala/runtime/LazyRef
  #247 = Class              #246          // scala/runtime/LazyRef
  #248 = Methodref          #247.#100     // scala/runtime/LazyRef."<init>":()V
  #249 = Utf8               java/lang/String
  #250 = Class              #249          // java/lang/String
  #251 = Utf8               ([Ljava/lang/String;)V
  #252 = NameAndType        #98:#251      // "<init>":([Ljava/lang/String;)V
  #253 = Methodref          #16.#252      // java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
  #254 = Utf8               scala/sys/package$
  #255 = Class              #254          // scala/sys/package$
  #256 = Utf8               Lscala/sys/package$;
  #257 = NameAndType        #50:#256      // MODULE$:Lscala/sys/package$;
  #258 = Fieldref           #255.#257     // scala/sys/package$.MODULE$:Lscala/sys/package$;
  #259 = NameAndType        #88:#225      // env:()Lscala/collection/immutable/Map;
  #260 = Methodref          #255.#259     // scala/sys/package$.env:()Lscala/collection/immutable/Map;
  #261 = Utf8               Map
  #262 = Utf8               ()Lscala/collection/immutable/Map$;
  #263 = NameAndType        #261:#262     // Map:()Lscala/collection/immutable/Map$;
  #264 = Methodref          #186.#263     // scala/Predef$.Map:()Lscala/collection/immutable/Map$;
  #265 = Utf8               scala/collection/immutable/Nil$
  #266 = Class              #265          // scala/collection/immutable/Nil$
  #267 = Utf8               Lscala/collection/immutable/Nil$;
  #268 = NameAndType        #50:#267      // MODULE$:Lscala/collection/immutable/Nil$;
  #269 = Fieldref           #266.#268     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #270 = Utf8               scala/collection/immutable/Map$
  #271 = Class              #270          // scala/collection/immutable/Map$
  #272 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #273 = NameAndType        #56:#272      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #274 = Methodref          #271.#273     // scala/collection/immutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #275 = Utf8               scala/Option$
  #276 = Class              #275          // scala/Option$
  #277 = Utf8               Lscala/Option$;
  #278 = NameAndType        #50:#277      // MODULE$:Lscala/Option$;
  #279 = Fieldref           #276.#278     // scala/Option$.MODULE$:Lscala/Option$;
  #280 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #281 = NameAndType        #56:#280      // apply:(Ljava/lang/Object;)Lscala/Option;
  #282 = Methodref          #276.#281     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #283 = MethodType         #158          //  ()Ljava/lang/Object;
  #284 = Utf8               $anonfun$spawn$1
  #285 = NameAndType        #284:#225     // $anonfun$spawn$1:()Lscala/collection/immutable/Map;
  #286 = Methodref          #2.#285       // os/proc.$anonfun$spawn$1:()Lscala/collection/immutable/Map;
  #287 = MethodHandle       6:#286        // REF_invokeStatic os/proc.$anonfun$spawn$1:()Lscala/collection/immutable/Map;
  #288 = MethodType         #225          //  ()Lscala/collection/immutable/Map;
  #289 = Utf8               ()Lscala/Function0;
  #290 = NameAndType        #56:#289      // apply:()Lscala/Function0;
  #291 = InvokeDynamic      #2:#290       // #2:apply:()Lscala/Function0;
  #292 = Utf8               scala/Option
  #293 = Class              #292          // scala/Option
  #294 = Utf8               getOrElse
  #295 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #296 = NameAndType        #294:#295     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #297 = Methodref          #293.#296     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #298 = Utf8               scala/collection/IterableOnce
  #299 = Class              #298          // scala/collection/IterableOnce
  #300 = Utf8               $plus$plus
  #301 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #302 = NameAndType        #300:#301     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #303 = InterfaceMethodref #219.#302     // scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #304 = Utf8               scala/collection/IterableOps
  #305 = Class              #304          // scala/collection/IterableOps
  #306 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #307 = MethodType         #306          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #308 = Utf8               $anonfun$spawn$2$adapted
  #309 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #310 = NameAndType        #308:#309     // $anonfun$spawn$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #311 = Methodref          #2.#310       // os/proc.$anonfun$spawn$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #312 = MethodHandle       6:#311        // REF_invokeStatic os/proc.$anonfun$spawn$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #313 = MethodType         #309          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #314 = Utf8               ()Lscala/Function1;
  #315 = NameAndType        #56:#314      // apply:()Lscala/Function1;
  #316 = InvokeDynamic      #3:#315       // #3:apply:()Lscala/Function1;
  #317 = Utf8               withFilter
  #318 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #319 = NameAndType        #317:#318     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #320 = InterfaceMethodref #305.#319     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #321 = Utf8               $anonfun$spawn$3
  #322 = Utf8               (Ljava/lang/ProcessBuilder;Lscala/Tuple2;)Ljava/lang/String;
  #323 = NameAndType        #321:#322     // $anonfun$spawn$3:(Ljava/lang/ProcessBuilder;Lscala/Tuple2;)Ljava/lang/String;
  #324 = Methodref          #2.#323       // os/proc.$anonfun$spawn$3:(Ljava/lang/ProcessBuilder;Lscala/Tuple2;)Ljava/lang/String;
  #325 = MethodHandle       6:#324        // REF_invokeStatic os/proc.$anonfun$spawn$3:(Ljava/lang/ProcessBuilder;Lscala/Tuple2;)Ljava/lang/String;
  #326 = Utf8               (Lscala/Tuple2;)Ljava/lang/String;
  #327 = MethodType         #326          //  (Lscala/Tuple2;)Ljava/lang/String;
  #328 = Utf8               (Ljava/lang/ProcessBuilder;)Lscala/Function1;
  #329 = NameAndType        #56:#328      // apply:(Ljava/lang/ProcessBuilder;)Lscala/Function1;
  #330 = InvokeDynamic      #4:#329       // #4:apply:(Ljava/lang/ProcessBuilder;)Lscala/Function1;
  #331 = Utf8               scala/collection/WithFilter
  #332 = Class              #331          // scala/collection/WithFilter
  #333 = Utf8               foreach
  #334 = Utf8               (Lscala/Function1;)V
  #335 = NameAndType        #333:#334     // foreach:(Lscala/Function1;)V
  #336 = Methodref          #332.#335     // scala/collection/WithFilter.foreach:(Lscala/Function1;)V
  #337 = Utf8               $anonfun$spawn$4
  #338 = NameAndType        #337:#223     // $anonfun$spawn$4:()Los/Path;
  #339 = Methodref          #2.#338       // os/proc.$anonfun$spawn$4:()Los/Path;
  #340 = MethodHandle       6:#339        // REF_invokeStatic os/proc.$anonfun$spawn$4:()Los/Path;
  #341 = MethodType         #223          //  ()Los/Path;
  #342 = InvokeDynamic      #5:#290       // #5:apply:()Lscala/Function0;
  #343 = Utf8               toIO
  #344 = Utf8               ()Ljava/io/File;
  #345 = NameAndType        #343:#344     // toIO:()Ljava/io/File;
  #346 = Methodref          #217.#345     // os/Path.toIO:()Ljava/io/File;
  #347 = Utf8               directory
  #348 = Utf8               (Ljava/io/File;)Ljava/lang/ProcessBuilder;
  #349 = NameAndType        #347:#348     // directory:(Ljava/io/File;)Ljava/lang/ProcessBuilder;
  #350 = Methodref          #16.#349      // java/lang/ProcessBuilder.directory:(Ljava/io/File;)Ljava/lang/ProcessBuilder;
  #351 = NameAndType        #41:#80       // command:()Lscala/collection/immutable/Seq;
  #352 = Methodref          #2.#351       // os/proc.command:()Lscala/collection/immutable/Seq;
  #353 = Utf8               $anonfun$spawn$5
  #354 = Utf8               (Los/Shellable;)Lscala/collection/immutable/Seq;
  #355 = NameAndType        #353:#354     // $anonfun$spawn$5:(Los/Shellable;)Lscala/collection/immutable/Seq;
  #356 = Methodref          #2.#355       // os/proc.$anonfun$spawn$5:(Los/Shellable;)Lscala/collection/immutable/Seq;
  #357 = MethodHandle       6:#356        // REF_invokeStatic os/proc.$anonfun$spawn$5:(Los/Shellable;)Lscala/collection/immutable/Seq;
  #358 = MethodType         #354          //  (Los/Shellable;)Lscala/collection/immutable/Seq;
  #359 = InvokeDynamic      #6:#315       // #6:apply:()Lscala/Function1;
  #360 = Utf8               scala/collection/immutable/Seq
  #361 = Class              #360          // scala/collection/immutable/Seq
  #362 = Utf8               flatMap
  #363 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #364 = NameAndType        #362:#363     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #365 = InterfaceMethodref #361.#364     // scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #366 = Utf8
  #367 = String             #366          //
  #368 = Utf8               mkString
  #369 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #370 = NameAndType        #368:#369     // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #371 = InterfaceMethodref #361.#370     // scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #372 = Utf8               proc$1
  #373 = Utf8               (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
  #374 = NameAndType        #372:#373     // proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
  #375 = Methodref          #2.#374       // os/proc.proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
  #376 = Utf8               inputPumperThread
  #377 = Utf8               ()Lscala/Option;
  #378 = NameAndType        #376:#377     // inputPumperThread:()Lscala/Option;
  #379 = Methodref          #31.#378      // os/SubProcess.inputPumperThread:()Lscala/Option;
  #380 = Utf8               $anonfun$spawn$12$adapted
  #381 = Utf8               (Ljava/lang/Thread;)Ljava/lang/Object;
  #382 = NameAndType        #380:#381     // $anonfun$spawn$12$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #383 = Methodref          #2.#382       // os/proc.$anonfun$spawn$12$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #384 = MethodHandle       6:#383        // REF_invokeStatic os/proc.$anonfun$spawn$12$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #385 = MethodType         #381          //  (Ljava/lang/Thread;)Ljava/lang/Object;
  #386 = InvokeDynamic      #7:#315       // #7:apply:()Lscala/Function1;
  #387 = Methodref          #293.#335     // scala/Option.foreach:(Lscala/Function1;)V
  #388 = Utf8               outputPumperThread
  #389 = NameAndType        #388:#377     // outputPumperThread:()Lscala/Option;
  #390 = Methodref          #31.#389      // os/SubProcess.outputPumperThread:()Lscala/Option;
  #391 = Utf8               $anonfun$spawn$13$adapted
  #392 = NameAndType        #391:#381     // $anonfun$spawn$13$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #393 = Methodref          #2.#392       // os/proc.$anonfun$spawn$13$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #394 = MethodHandle       6:#393        // REF_invokeStatic os/proc.$anonfun$spawn$13$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #395 = InvokeDynamic      #8:#315       // #8:apply:()Lscala/Function1;
  #396 = Utf8               errorPumperThread
  #397 = NameAndType        #396:#377     // errorPumperThread:()Lscala/Option;
  #398 = Methodref          #31.#397      // os/SubProcess.errorPumperThread:()Lscala/Option;
  #399 = Utf8               $anonfun$spawn$14$adapted
  #400 = NameAndType        #399:#381     // $anonfun$spawn$14$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #401 = Methodref          #2.#400       // os/proc.$anonfun$spawn$14$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #402 = MethodHandle       6:#401        // REF_invokeStatic os/proc.$anonfun$spawn$14$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #403 = InvokeDynamic      #9:#315       // #9:apply:()Lscala/Function1;
  #404 = Utf8               proc$lzy
  #405 = Utf8               Lscala/runtime/LazyRef;
  #406 = Utf8               builder
  #407 = Utf8               Ljava/lang/ProcessBuilder;
  #408 = Utf8               baseEnv
  #409 = Utf8               commandChunks
  #410 = Utf8               commandStr
  #411 = Utf8               Ljava/lang/String;
  #412 = Utf8               spawn$default$1
  #413 = Utf8               spawn$default$2
  #414 = Utf8               spawn$default$3
  #415 = Utf8               spawn$default$4
  #416 = Utf8               spawn$default$5
  #417 = Utf8               spawn$default$6
  #418 = Utf8               spawn$default$7
  #419 = Utf8               productPrefix
  #420 = Utf8               ()Ljava/lang/String;
  #421 = Utf8               proc
  #422 = String             #421          // proc
  #423 = Utf8               productArity
  #424 = Utf8               productElement
  #425 = Utf8               (I)Ljava/lang/Object;
  #426 = Utf8               x$1
  #427 = Utf8               scala/runtime/Statics
  #428 = Class              #427          // scala/runtime/Statics
  #429 = Utf8               ioobe
  #430 = NameAndType        #429:#425     // ioobe:(I)Ljava/lang/Object;
  #431 = Methodref          #428.#430     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #432 = Utf8               I
  #433 = Utf8               productIterator
  #434 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #435 = Utf8               scala/runtime/ScalaRunTime$
  #436 = Class              #435          // scala/runtime/ScalaRunTime$
  #437 = Utf8               Lscala/runtime/ScalaRunTime$;
  #438 = NameAndType        #50:#437      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #439 = Fieldref           #436.#438     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #440 = Utf8               typedProductIterator
  #441 = NameAndType        #440:#75      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #442 = Methodref          #436.#441     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #443 = Utf8               canEqual
  #444 = Utf8               (Ljava/lang/Object;)Z
  #445 = Utf8               Ljava/lang/Object;
  #446 = Utf8               productElementName
  #447 = Utf8               (I)Ljava/lang/String;
  #448 = String             #41           // command
  #449 = Utf8               hashCode
  #450 = Utf8               _hashCode
  #451 = Utf8               (Lscala/Product;)I
  #452 = NameAndType        #450:#451     // _hashCode:(Lscala/Product;)I
  #453 = Methodref          #436.#452     // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
  #454 = Utf8               toString
  #455 = Utf8               _toString
  #456 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #457 = NameAndType        #455:#456     // _toString:(Lscala/Product;)Ljava/lang/String;
  #458 = Methodref          #436.#457     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #459 = Utf8               equals
  #460 = NameAndType        #459:#444     // equals:(Ljava/lang/Object;)Z
  #461 = Methodref          #4.#460       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #462 = NameAndType        #443:#444     // canEqual:(Ljava/lang/Object;)Z
  #463 = Methodref          #2.#462       // os/proc.canEqual:(Ljava/lang/Object;)Z
  #464 = Utf8               $anonfun$call$1
  #465 = Utf8               (Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
  #466 = Utf8               chunks$1
  #467 = Utf8               buf
  #468 = Utf8               n
  #469 = Utf8               scala/package$
  #470 = Class              #469          // scala/package$
  #471 = Utf8               Lscala/package$;
  #472 = NameAndType        #50:#471      // MODULE$:Lscala/package$;
  #473 = Fieldref           #470.#472     // scala/package$.MODULE$:Lscala/package$;
  #474 = Utf8               Left
  #475 = Utf8               ()Lscala/util/Left$;
  #476 = NameAndType        #474:#475     // Left:()Lscala/util/Left$;
  #477 = Methodref          #470.#476     // scala/package$.Left:()Lscala/util/Left$;
  #478 = Utf8               geny/Bytes
  #479 = Class              #478          // geny/Bytes
  #480 = Utf8               java/util/Arrays
  #481 = Class              #480          // java/util/Arrays
  #482 = Utf8               copyOf
  #483 = Utf8               ([BI)[B
  #484 = NameAndType        #482:#483     // copyOf:([BI)[B
  #485 = Methodref          #481.#484     // java/util/Arrays.copyOf:([BI)[B
  #486 = Utf8               ([B)V
  #487 = NameAndType        #98:#486      // "<init>":([B)V
  #488 = Methodref          #479.#487     // geny/Bytes."<init>":([B)V
  #489 = Utf8               scala/util/Left$
  #490 = Class              #489          // scala/util/Left$
  #491 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #492 = NameAndType        #56:#491      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #493 = Methodref          #490.#492     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #494 = Utf8               add
  #495 = NameAndType        #494:#444     // add:(Ljava/lang/Object;)Z
  #496 = Methodref          #97.#495      // java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
  #497 = Utf8               [B
  #498 = Utf8               $anonfun$call$2
  #499 = Utf8               Right
  #500 = Utf8               ()Lscala/util/Right$;
  #501 = NameAndType        #499:#500     // Right:()Lscala/util/Right$;
  #502 = Methodref          #470.#501     // scala/package$.Right:()Lscala/util/Right$;
  #503 = Utf8               scala/util/Right$
  #504 = Class              #503          // scala/util/Right$
  #505 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #506 = NameAndType        #56:#505      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #507 = Methodref          #504.#506     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #508 = Utf8               $anonfun$spawn$2
  #509 = Utf8               (Lscala/Tuple2;)Z
  #510 = Utf8               check$ifrefutable$1
  #511 = Utf8               Lscala/Tuple2;
  #512 = Utf8               scala/Tuple2
  #513 = Class              #512          // scala/Tuple2
  #514 = Utf8               builder$1
  #515 = Utf8               _1
  #516 = NameAndType        #515:#158     // _1:()Ljava/lang/Object;
  #517 = Methodref          #513.#516     // scala/Tuple2._1:()Ljava/lang/Object;
  #518 = Utf8               _2
  #519 = NameAndType        #518:#158     // _2:()Ljava/lang/Object;
  #520 = Methodref          #513.#519     // scala/Tuple2._2:()Ljava/lang/Object;
  #521 = Utf8               environment
  #522 = Utf8               ()Ljava/util/Map;
  #523 = NameAndType        #521:#522     // environment:()Ljava/util/Map;
  #524 = Methodref          #16.#523      // java/lang/ProcessBuilder.environment:()Ljava/util/Map;
  #525 = Utf8               java/util/Map
  #526 = Class              #525          // java/util/Map
  #527 = Utf8               put
  #528 = NameAndType        #527:#107     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #529 = InterfaceMethodref #526.#528     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #530 = Utf8               remove
  #531 = NameAndType        #530:#306     // remove:(Ljava/lang/Object;)Ljava/lang/Object;
  #532 = InterfaceMethodref #526.#531     // java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
  #533 = Utf8               scala/MatchError
  #534 = Class              #533          // scala/MatchError
  #535 = Utf8               (Ljava/lang/Object;)V
  #536 = NameAndType        #98:#535      // "<init>":(Ljava/lang/Object;)V
  #537 = Methodref          #534.#536     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #538 = Utf8               k
  #539 = Utf8               v
  #540 = Utf8               os/package$
  #541 = Class              #540          // os/package$
  #542 = Utf8               Los/package$;
  #543 = NameAndType        #50:#542      // MODULE$:Los/package$;
  #544 = Fieldref           #541.#543     // os/package$.MODULE$:Los/package$;
  #545 = Utf8               pwd
  #546 = NameAndType        #545:#223     // pwd:()Los/Path;
  #547 = Methodref          #541.#546     // os/package$.pwd:()Los/Path;
  #548 = Utf8               x$2
  #549 = Utf8               os/Shellable
  #550 = Class              #549          // os/Shellable
  #551 = Utf8               value
  #552 = NameAndType        #551:#80      // value:()Lscala/collection/immutable/Seq;
  #553 = Methodref          #550.#552     // os/Shellable.value:()Lscala/collection/immutable/Seq;
  #554 = Utf8               Los/Shellable;
  #555 = Utf8               $anonfun$spawn$6
  #556 = Utf8               (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$InputStream;
  #557 = Utf8               proc$lzy$1
  #558 = Utf8               commandChunks$1
  #559 = Utf8               stdin$1
  #560 = Utf8               stdout$1
  #561 = Utf8               stderr$1
  #562 = Utf8               mergeErrIntoOut$1
  #563 = Utf8               commandStr$1
  #564 = Utf8               ()Los/SubProcess$InputStream;
  #565 = NameAndType        #89:#564      // stdin:()Los/SubProcess$InputStream;
  #566 = Methodref          #31.#565      // os/SubProcess.stdin:()Los/SubProcess$InputStream;
  #567 = Utf8               $anonfun$spawn$7
  #568 = Utf8               (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #569 = Utf8               x$3
  #570 = Utf8               java/lang/Thread
  #571 = Class              #570          // java/lang/Thread
  #572 = Utf8               java/lang/StringBuilder
  #573 = Class              #572          // java/lang/StringBuilder
  #574 = Integer            13
  #575 = Utf8               (I)V
  #576 = NameAndType        #98:#575      // "<init>":(I)V
  #577 = Methodref          #573.#576     // java/lang/StringBuilder."<init>":(I)V
  #578 = Utf8               append
  #579 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #580 = NameAndType        #578:#579     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #581 = Methodref          #573.#580     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #582 = Utf8                stdin thread
  #583 = String             #582          //  stdin thread
  #584 = NameAndType        #454:#420     // toString:()Ljava/lang/String;
  #585 = Methodref          #573.#584     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #586 = Utf8               (Ljava/lang/Runnable;Ljava/lang/String;)V
  #587 = NameAndType        #98:#586      // "<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
  #588 = Methodref          #571.#587     // java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
  #589 = Utf8               Ljava/lang/Runnable;
  #590 = Utf8               $anonfun$spawn$8
  #591 = Utf8               (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
  #592 = Utf8               ()Los/SubProcess$OutputStream;
  #593 = NameAndType        #90:#592      // stdout:()Los/SubProcess$OutputStream;
  #594 = Methodref          #31.#593      // os/SubProcess.stdout:()Los/SubProcess$OutputStream;
  #595 = Utf8               $anonfun$spawn$9
  #596 = Utf8               x$4
  #597 = Integer            14
  #598 = Utf8                stdout thread
  #599 = String             #598          //  stdout thread
  #600 = Utf8               $anonfun$spawn$10
  #601 = NameAndType        #91:#592      // stderr:()Los/SubProcess$OutputStream;
  #602 = Methodref          #31.#601      // os/SubProcess.stderr:()Los/SubProcess$OutputStream;
  #603 = Utf8               $anonfun$spawn$11
  #604 = Utf8               x$5
  #605 = Utf8                stderr thread
  #606 = String             #605          //  stderr thread
  #607 = Utf8               proc$lzycompute$1
  #608 = Utf8               initialized
  #609 = NameAndType        #608:#238     // initialized:()Z
  #610 = Methodref          #247.#609     // scala/runtime/LazyRef.initialized:()Z
  #611 = NameAndType        #551:#158     // value:()Ljava/lang/Object;
  #612 = Methodref          #247.#611     // scala/runtime/LazyRef.value:()Ljava/lang/Object;
  #613 = InterfaceMethodref #361.#175     // scala/collection/immutable/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #614 = Utf8               [Ljava/lang/String;
  #615 = Class              #614          // "[Ljava/lang/String;"
  #616 = Utf8               ([Ljava/lang/String;)Ljava/lang/ProcessBuilder;
  #617 = NameAndType        #41:#616      // command:([Ljava/lang/String;)Ljava/lang/ProcessBuilder;
  #618 = Methodref          #16.#617      // java/lang/ProcessBuilder.command:([Ljava/lang/String;)Ljava/lang/ProcessBuilder;
  #619 = Utf8               redirectFrom
  #620 = Utf8               ()Ljava/lang/ProcessBuilder$Redirect;
  #621 = NameAndType        #619:#620     // redirectFrom:()Ljava/lang/ProcessBuilder$Redirect;
  #622 = InterfaceMethodref #221.#621     // os/ProcessInput.redirectFrom:()Ljava/lang/ProcessBuilder$Redirect;
  #623 = Utf8               redirectInput
  #624 = Utf8               (Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #625 = NameAndType        #623:#624     // redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #626 = Methodref          #16.#625      // java/lang/ProcessBuilder.redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #627 = Utf8               redirectTo
  #628 = NameAndType        #627:#620     // redirectTo:()Ljava/lang/ProcessBuilder$Redirect;
  #629 = InterfaceMethodref #26.#628      // os/ProcessOutput.redirectTo:()Ljava/lang/ProcessBuilder$Redirect;
  #630 = Utf8               redirectOutput
  #631 = NameAndType        #630:#624     // redirectOutput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #632 = Methodref          #16.#631      // java/lang/ProcessBuilder.redirectOutput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #633 = Utf8               redirectError
  #634 = NameAndType        #633:#624     // redirectError:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #635 = Methodref          #16.#634      // java/lang/ProcessBuilder.redirectError:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #636 = Utf8               redirectErrorStream
  #637 = Utf8               (Z)Ljava/lang/ProcessBuilder;
  #638 = NameAndType        #636:#637     // redirectErrorStream:(Z)Ljava/lang/ProcessBuilder;
  #639 = Methodref          #16.#638      // java/lang/ProcessBuilder.redirectErrorStream:(Z)Ljava/lang/ProcessBuilder;
  #640 = Utf8               start
  #641 = Utf8               ()Ljava/lang/Process;
  #642 = NameAndType        #640:#641     // start:()Ljava/lang/Process;
  #643 = Methodref          #16.#642      // java/lang/ProcessBuilder.start:()Ljava/lang/Process;
  #644 = NameAndType        #555:#556     // $anonfun$spawn$6:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$InputStream;
  #645 = Methodref          #2.#644       // os/proc.$anonfun$spawn$6:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$InputStream;
  #646 = MethodHandle       6:#645        // REF_invokeStatic os/proc.$anonfun$spawn$6:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$InputStream;
  #647 = MethodType         #564          //  ()Los/SubProcess$InputStream;
  #648 = Utf8               (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
  #649 = NameAndType        #56:#648      // apply:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
  #650 = InvokeDynamic      #10:#649      // #10:apply:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
  #651 = Utf8               processInput
  #652 = Utf8               (Lscala/Function0;)Lscala/Option;
  #653 = NameAndType        #651:#652     // processInput:(Lscala/Function0;)Lscala/Option;
  #654 = InterfaceMethodref #221.#653     // os/ProcessInput.processInput:(Lscala/Function0;)Lscala/Option;
  #655 = NameAndType        #567:#568     // $anonfun$spawn$7:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #656 = Methodref          #2.#655       // os/proc.$anonfun$spawn$7:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #657 = MethodHandle       6:#656        // REF_invokeStatic os/proc.$anonfun$spawn$7:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #658 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;
  #659 = MethodType         #658          //  (Ljava/lang/Runnable;)Ljava/lang/Thread;
  #660 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #661 = NameAndType        #56:#660      // apply:(Ljava/lang/String;)Lscala/Function1;
  #662 = InvokeDynamic      #11:#661      // #11:apply:(Ljava/lang/String;)Lscala/Function1;
  #663 = Utf8               map
  #664 = Utf8               (Lscala/Function1;)Lscala/Option;
  #665 = NameAndType        #663:#664     // map:(Lscala/Function1;)Lscala/Option;
  #666 = Methodref          #293.#665     // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #667 = NameAndType        #590:#591     // $anonfun$spawn$8:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
  #668 = Methodref          #2.#667       // os/proc.$anonfun$spawn$8:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
  #669 = MethodHandle       6:#668        // REF_invokeStatic os/proc.$anonfun$spawn$8:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
  #670 = MethodType         #592          //  ()Los/SubProcess$OutputStream;
  #671 = InvokeDynamic      #12:#649      // #12:apply:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
  #672 = Utf8               processOutput
  #673 = NameAndType        #672:#652     // processOutput:(Lscala/Function0;)Lscala/Option;
  #674 = InterfaceMethodref #26.#673      // os/ProcessOutput.processOutput:(Lscala/Function0;)Lscala/Option;
  #675 = NameAndType        #595:#568     // $anonfun$spawn$9:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #676 = Methodref          #2.#675       // os/proc.$anonfun$spawn$9:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #677 = MethodHandle       6:#676        // REF_invokeStatic os/proc.$anonfun$spawn$9:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #678 = InvokeDynamic      #13:#661      // #13:apply:(Ljava/lang/String;)Lscala/Function1;
  #679 = NameAndType        #600:#591     // $anonfun$spawn$10:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
  #680 = Methodref          #2.#679       // os/proc.$anonfun$spawn$10:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
  #681 = MethodHandle       6:#680        // REF_invokeStatic os/proc.$anonfun$spawn$10:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
  #682 = InvokeDynamic      #14:#649      // #14:apply:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
  #683 = NameAndType        #603:#568     // $anonfun$spawn$11:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #684 = Methodref          #2.#683       // os/proc.$anonfun$spawn$11:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #685 = MethodHandle       6:#684        // REF_invokeStatic os/proc.$anonfun$spawn$11:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  #686 = InvokeDynamic      #15:#661      // #15:apply:(Ljava/lang/String;)Lscala/Function1;
  #687 = Utf8               (Ljava/lang/Process;Lscala/Option;Lscala/Option;Lscala/Option;)V
  #688 = NameAndType        #98:#687      // "<init>":(Ljava/lang/Process;Lscala/Option;Lscala/Option;Lscala/Option;)V
  #689 = Methodref          #31.#688      // os/SubProcess."<init>":(Ljava/lang/Process;Lscala/Option;Lscala/Option;Lscala/Option;)V
  #690 = Utf8               initialize
  #691 = NameAndType        #690:#306     // initialize:(Ljava/lang/Object;)Ljava/lang/Object;
  #692 = Methodref          #247.#691     // scala/runtime/LazyRef.initialize:(Ljava/lang/Object;)Ljava/lang/Object;
  #693 = Utf8               java/lang/Throwable
  #694 = Class              #693          // java/lang/Throwable
  #695 = NameAndType        #607:#373     // proc$lzycompute$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
  #696 = Methodref          #2.#695       // os/proc.proc$lzycompute$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
  #697 = Utf8               $anonfun$spawn$12
  #698 = Utf8               (Ljava/lang/Thread;)V
  #699 = Utf8               x$6
  #700 = NameAndType        #640:#99      // start:()V
  #701 = Methodref          #571.#700     // java/lang/Thread.start:()V
  #702 = Utf8               Ljava/lang/Thread;
  #703 = Utf8               $anonfun$spawn$13
  #704 = Utf8               x$7
  #705 = Utf8               $anonfun$spawn$14
  #706 = Utf8               x$8
  #707 = Utf8               (Lscala/collection/immutable/Seq;)V
  #708 = Utf8               (Lscala/collection/immutable/Seq<Los/Shellable;>;)V
  #709 = Methodref          #4.#100       // java/lang/Object."<init>":()V
  #710 = Utf8               $init$
  #711 = Utf8               (Lscala/Product;)V
  #712 = NameAndType        #710:#711     // $init$:(Lscala/Product;)V
  #713 = InterfaceMethodref #6.#712       // scala/Product.$init$:(Lscala/Product;)V
  #714 = Utf8               scala/runtime/BoxesRunTime
  #715 = Class              #714          // scala/runtime/BoxesRunTime
  #716 = Utf8               unboxToInt
  #717 = Utf8               (Ljava/lang/Object;)I
  #718 = NameAndType        #716:#717     // unboxToInt:(Ljava/lang/Object;)I
  #719 = Methodref          #715.#718     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #720 = NameAndType        #464:#465     // $anonfun$call$1:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
  #721 = Methodref          #2.#720       // os/proc.$anonfun$call$1:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
  #722 = Utf8               scala/runtime/BoxedUnit
  #723 = Class              #722          // scala/runtime/BoxedUnit
  #724 = Utf8               UNIT
  #725 = Utf8               Lscala/runtime/BoxedUnit;
  #726 = NameAndType        #724:#725     // UNIT:Lscala/runtime/BoxedUnit;
  #727 = Fieldref           #723.#726     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #728 = NameAndType        #498:#465     // $anonfun$call$2:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
  #729 = Methodref          #2.#728       // os/proc.$anonfun$call$2:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
  #730 = NameAndType        #508:#509     // $anonfun$spawn$2:(Lscala/Tuple2;)Z
  #731 = Methodref          #2.#730       // os/proc.$anonfun$spawn$2:(Lscala/Tuple2;)Z
  #732 = Utf8               boxToBoolean
  #733 = Utf8               (Z)Ljava/lang/Boolean;
  #734 = NameAndType        #732:#733     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #735 = Methodref          #715.#734     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #736 = NameAndType        #697:#698     // $anonfun$spawn$12:(Ljava/lang/Thread;)V
  #737 = Methodref          #2.#736       // os/proc.$anonfun$spawn$12:(Ljava/lang/Thread;)V
  #738 = NameAndType        #703:#698     // $anonfun$spawn$13:(Ljava/lang/Thread;)V
  #739 = Methodref          #2.#738       // os/proc.$anonfun$spawn$13:(Ljava/lang/Thread;)V
  #740 = NameAndType        #705:#698     // $anonfun$spawn$14:(Ljava/lang/Thread;)V
  #741 = Methodref          #2.#740       // os/proc.$anonfun$spawn$14:(Ljava/lang/Thread;)V
  #742 = Utf8               $deserializeLambda$
  #743 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #744 = Utf8               scala/runtime/LambdaDeserialize
  #745 = Class              #744          // scala/runtime/LambdaDeserialize
  #746 = Utf8               bootstrap
  #747 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #748 = NameAndType        #746:#747     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #749 = Methodref          #745.#748     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #750 = MethodHandle       6:#749        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #751 = Utf8               lambdaDeserialize
  #752 = NameAndType        #751:#743     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #753 = InvokeDynamic      #16:#752      // #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #754 = Utf8               Signature
  #755 = Utf8               Code
  #756 = Utf8               MethodParameters
  #757 = Utf8               LineNumberTable
  #758 = Utf8               LocalVariableTable
  #759 = Utf8               StackMapTable
  #760 = Utf8               InnerClasses
  #761 = Utf8               SourceFile
  #762 = Utf8               RuntimeVisibleAnnotations
  #763 = Utf8               BootstrapMethods
  #764 = Utf8               ScalaInlineInfo
  #765 = Utf8               ScalaSig
{
  private final scala.collection.immutable.Seq<os.Shellable> command;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #43                          // Lscala/collection/immutable/Seq<Los/Shellable;>;

  public static scala.Option<scala.collection.immutable.Seq<os.Shellable>> unapplySeq(os.proc);
    descriptor: (Los/proc;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #53                 // Field os/proc$.MODULE$:Los/proc$;
         3: aload_0
         4: invokevirtual #55                 // Method os/proc$.unapplySeq:(Los/proc;)Lscala/Option;
         7: areturn
    Signature: #46                          // (Los/proc;)Lscala/Option<Lscala/collection/immutable/Seq<Los/Shellable;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static os.proc apply(scala.collection.immutable.Seq<os.Shellable>);
    descriptor: (Lscala/collection/immutable/Seq;)Los/proc;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #53                 // Field os/proc$.MODULE$:Los/proc$;
         3: aload_0
         4: invokevirtual #60                 // Method os/proc$.apply:(Lscala/collection/immutable/Seq;)Los/proc;
         7: areturn
    Signature: #58                          // (Lscala/collection/immutable/Seq<Los/Shellable;>;)Los/proc;
    MethodParameters:
      Name                           Flags
      command                        final

  public static <A extends java.lang.Object> scala.Function1<scala.collection.immutable.Seq<os.Shellable>, A> andThen(scala.Function1<os.proc, A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #53                 // Field os/proc$.MODULE$:Los/proc$;
         3: aload_0
         4: invokevirtual #66                 // Method os/proc$.andThen:(Lscala/Function1;)Lscala/Function1;
         7: areturn
    Signature: #63                          // <A:Ljava/lang/Object;>(Lscala/Function1<Los/proc;TA;>;)Lscala/Function1<Lscala/collection/immutable/Seq<Los/Shellable;>;TA;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public static <A extends java.lang.Object> scala.Function1<A, os.proc> compose(scala.Function1<A, scala.collection.immutable.Seq<os.Shellable>>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #53                 // Field os/proc$.MODULE$:Los/proc$;
         3: aload_0
         4: invokevirtual #70                 // Method os/proc$.compose:(Lscala/Function1;)Lscala/Function1;
         7: areturn
    Signature: #68                          // <A:Ljava/lang/Object;>(Lscala/Function1<TA;Lscala/collection/immutable/Seq<Los/Shellable;>;>;)Lscala/Function1<TA;Los/proc;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #77                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/proc;
    Signature: #73                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public scala.collection.immutable.Seq<os.Shellable> command();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #83                 // Field command:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/proc;
    Signature: #81                          // ()Lscala/collection/immutable/Seq<Los/Shellable;>;

  public os.CommandResult call(os.Path, scala.collection.immutable.Map<java.lang.String, java.lang.String>, os.ProcessInput, os.ProcessOutput, os.ProcessOutput, boolean, long, boolean, boolean);
    descriptor: (Los/Path;Lscala/collection/immutable/Map;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZJZZ)Los/CommandResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=15, args_size=10
         0: new           #97                 // class java/util/concurrent/ConcurrentLinkedQueue
         3: dup
         4: invokespecial #101                // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
         7: astore        11
         9: aload_0
        10: aload_1
        11: aload_2
        12: aload_3
        13: aload         4
        15: getstatic     #106                // Field os/Pipe$.MODULE$:Los/Pipe$;
        18: if_acmpeq     26
        21: aload         4
        23: goto          40
        26: new           #24                 // class os/ProcessOutput$ReadBytes
        29: dup
        30: aload         11
        32: invokedynamic #127,  0            // InvokeDynamic #0:apply:(Ljava/util/concurrent/ConcurrentLinkedQueue;)Lscala/Function2;
        37: invokespecial #130                // Method os/ProcessOutput$ReadBytes."<init>":(Lscala/Function2;)V
        40: aload         5
        42: getstatic     #106                // Field os/Pipe$.MODULE$:Los/Pipe$;
        45: if_acmpeq     53
        48: aload         5
        50: goto          67
        53: new           #24                 // class os/ProcessOutput$ReadBytes
        56: dup
        57: aload         11
        59: invokedynamic #135,  0            // InvokeDynamic #1:apply:(Ljava/util/concurrent/ConcurrentLinkedQueue;)Lscala/Function2;
        64: invokespecial #130                // Method os/ProcessOutput$ReadBytes."<init>":(Lscala/Function2;)V
        67: iload         6
        69: iload         10
        71: invokevirtual #139                // Method spawn:(Los/Path;Lscala/collection/immutable/Map;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZZ)Los/SubProcess;
        74: astore        12
        76: aload         12
        78: lload         7
        80: invokevirtual #143                // Method os/SubProcess.join:(J)Z
        83: pop
        84: getstatic     #148                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
        87: aload         11
        89: invokevirtual #152                // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
        92: invokevirtual #156                // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
        95: invokevirtual #160                // Method scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
        98: checkcast     #162                // class scala/collection/IterableOnceOps
       101: getstatic     #167                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       104: ldc           #169                // class scala/util/Either
       106: invokevirtual #172                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       109: invokeinterface #176,  2          // InterfaceMethod scala/collection/IterableOnceOps.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
       114: checkcast     #178                // class "[Lscala/util/Either;"
       117: astore        13
       119: new           #180                // class os/CommandResult
       122: dup
       123: aload         12
       125: invokevirtual #184                // Method os/SubProcess.exitCode:()I
       128: getstatic     #189                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       131: aload         13
       133: invokevirtual #193                // Method scala/Predef$.copyArrayToImmutableIndexedSeq:(Ljava/lang/Object;)Lscala/collection/immutable/IndexedSeq;
       136: invokespecial #196                // Method os/CommandResult."<init>":(ILscala/collection/immutable/Seq;)V
       139: astore        14
       141: aload         14
       143: invokevirtual #197                // Method os/CommandResult.exitCode:()I
       146: iconst_0
       147: if_icmpeq     155
       150: iload         9
       152: ifne          160
       155: aload         14
       157: goto          170
       160: new           #199                // class os/SubprocessException
       163: dup
       164: aload         14
       166: invokespecial #202                // Method os/SubprocessException."<init>":(Los/CommandResult;)V
       169: athrow
       170: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput, class os/ProcessOutput, class os/ProcessOutput, int, long, int, int, class java/util/concurrent/ConcurrentLinkedQueue ]
          stack = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput, class os/ProcessOutput, class os/ProcessOutput, int, long, int, int, class java/util/concurrent/ConcurrentLinkedQueue ]
          stack = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput, class os/ProcessOutput ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput, class os/ProcessOutput, class os/ProcessOutput, int, long, int, int, class java/util/concurrent/ConcurrentLinkedQueue ]
          stack = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput, class os/ProcessOutput ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput, class os/ProcessOutput, class os/ProcessOutput, int, long, int, int, class java/util/concurrent/ConcurrentLinkedQueue ]
          stack = [ class os/proc, class os/Path, class scala/collection/immutable/Map, class os/ProcessInput, class os/ProcessOutput, class os/ProcessOutput ]
        frame_type = 254 /* append */
          offset_delta = 87
          locals = [ class os/SubProcess, class "[Lscala/util/Either;", class os/CommandResult ]
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class os/CommandResult ]
      LineNumberTable:
        line 62: 0
        line 64: 9
        line 65: 10
        line 66: 12
        line 67: 13
        line 68: 26
        line 69: 30
        line 71: 40
        line 72: 53
        line 73: 57
        line 75: 67
        line 76: 69
        line 80: 76
        line 82: 84
        line 83: 119
        line 84: 141
        line 85: 160
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     161    11 chunks   Ljava/util/concurrent/ConcurrentLinkedQueue;
           76      94    12   sub   Los/SubProcess;
          119      51    13 chunksArr   [Lscala/util/Either;
          141      29    14   res   Los/CommandResult;
            0     171     0  this   Los/proc;
            0     171     1   cwd   Los/Path;
            0     171     2   env   Lscala/collection/immutable/Map;
            0     171     3 stdin   Los/ProcessInput;
            0     171     4 stdout   Los/ProcessOutput;
            0     171     5 stderr   Los/ProcessOutput;
            0     171     6 mergeErrIntoOut   Z
            0     171     7 timeout   J
            0     171     9 check   Z
            0     171    10 propagateEnv   Z
    Signature: #86                          // (Los/Path;Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZJZZ)Los/CommandResult;
    MethodParameters:
      Name                           Flags
      cwd                            final
      env                            final
      stdin                          final
      stdout                         final
      stderr                         final
      mergeErrIntoOut                final
      timeout                        final
      check                          final
      propagateEnv                   final

  public os.Path call$default$1();
    descriptor: ()Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> call$default$2();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;
    Signature: #226                         // ()Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;

  public os.ProcessInput call$default$3();
    descriptor: ()Los/ProcessInput;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #106                // Field os/Pipe$.MODULE$:Los/Pipe$;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public os.ProcessOutput call$default$4();
    descriptor: ()Los/ProcessOutput;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #106                // Field os/Pipe$.MODULE$:Los/Pipe$;
         3: areturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public os.ProcessOutput call$default$5();
    descriptor: ()Los/ProcessOutput;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #236                // Field os/Inherit$.MODULE$:Los/Inherit$;
         3: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public boolean call$default$6();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public long call$default$7();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc2_w        #241                // long -1l
         3: lreturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public boolean call$default$8();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public boolean call$default$9();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public os.SubProcess spawn(os.Path, scala.collection.immutable.Map<java.lang.String, java.lang.String>, os.ProcessInput, os.ProcessOutput, os.ProcessOutput, boolean, boolean);
    descriptor: (Los/Path;Lscala/collection/immutable/Map;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZZ)Los/SubProcess;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=13, args_size=8
         0: new           #247                // class scala/runtime/LazyRef
         3: dup
         4: invokespecial #248                // Method scala/runtime/LazyRef."<init>":()V
         7: astore        8
         9: new           #16                 // class java/lang/ProcessBuilder
        12: dup
        13: iconst_0
        14: anewarray     #250                // class java/lang/String
        17: invokespecial #253                // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
        20: astore        9
        22: iload         7
        24: ifeq          36
        27: getstatic     #258                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        30: invokevirtual #260                // Method scala/sys/package$.env:()Lscala/collection/immutable/Map;
        33: goto          51
        36: getstatic     #189                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        39: invokevirtual #264                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
        42: getstatic     #269                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        45: invokevirtual #274                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        48: checkcast     #219                // class scala/collection/immutable/Map
        51: astore        10
        53: aload         10
        55: getstatic     #279                // Field scala/Option$.MODULE$:Lscala/Option$;
        58: aload_2
        59: invokevirtual #282                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        62: invokedynamic #291,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
        67: invokevirtual #297                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        70: checkcast     #299                // class scala/collection/IterableOnce
        73: invokeinterface #303,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        78: checkcast     #305                // class scala/collection/IterableOps
        81: invokedynamic #316,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        86: invokeinterface #320,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        91: aload         9
        93: invokedynamic #330,  0            // InvokeDynamic #4:apply:(Ljava/lang/ProcessBuilder;)Lscala/Function1;
        98: invokevirtual #336                // Method scala/collection/WithFilter.foreach:(Lscala/Function1;)V
       101: aload         9
       103: getstatic     #279                // Field scala/Option$.MODULE$:Lscala/Option$;
       106: aload_1
       107: invokevirtual #282                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
       110: invokedynamic #342,  0            // InvokeDynamic #5:apply:()Lscala/Function0;
       115: invokevirtual #297                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       118: checkcast     #217                // class os/Path
       121: invokevirtual #346                // Method os/Path.toIO:()Ljava/io/File;
       124: invokevirtual #350                // Method java/lang/ProcessBuilder.directory:(Ljava/io/File;)Ljava/lang/ProcessBuilder;
       127: pop
       128: aload_0
       129: invokevirtual #352                // Method command:()Lscala/collection/immutable/Seq;
       132: invokedynamic #359,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
       137: invokeinterface #365,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       142: checkcast     #361                // class scala/collection/immutable/Seq
       145: astore        11
       147: aload         11
       149: ldc_w         #367                // String
       152: invokeinterface #371,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
       157: astore        12
       159: aload         8
       161: aload         9
       163: aload         11
       165: aload_3
       166: aload         4
       168: aload         5
       170: iload         6
       172: aload         12
       174: invokestatic  #375                // Method proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
       177: invokevirtual #379                // Method os/SubProcess.inputPumperThread:()Lscala/Option;
       180: invokedynamic #386,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
       185: invokevirtual #387                // Method scala/Option.foreach:(Lscala/Function1;)V
       188: aload         8
       190: aload         9
       192: aload         11
       194: aload_3
       195: aload         4
       197: aload         5
       199: iload         6
       201: aload         12
       203: invokestatic  #375                // Method proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
       206: invokevirtual #390                // Method os/SubProcess.outputPumperThread:()Lscala/Option;
       209: invokedynamic #395,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
       214: invokevirtual #387                // Method scala/Option.foreach:(Lscala/Function1;)V
       217: aload         8
       219: aload         9
       221: aload         11
       223: aload_3
       224: aload         4
       226: aload         5
       228: iload         6
       230: aload         12
       232: invokestatic  #375                // Method proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
       235: invokevirtual #398                // Method os/SubProcess.errorPumperThread:()Lscala/Option;
       238: invokedynamic #403,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
       243: invokevirtual #387                // Method scala/Option.foreach:(Lscala/Function1;)V
       246: aload         8
       248: aload         9
       250: aload         11
       252: aload_3
       253: aload         4
       255: aload         5
       257: iload         6
       259: aload         12
       261: invokestatic  #375                // Method proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
       264: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ class scala/runtime/LazyRef, class java/lang/ProcessBuilder ]
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Map ]
      LineNumberTable:
        line 122: 0
        line 108: 9
        line 111: 22
        line 112: 36
        line 113: 53
        line 118: 101
        line 120: 128
        line 121: 147
        line 135: 159
        line 136: 188
        line 137: 217
        line 138: 246
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     255     8 proc$lzy   Lscala/runtime/LazyRef;
           22     242     9 builder   Ljava/lang/ProcessBuilder;
           53     211    10 baseEnv   Lscala/collection/immutable/Map;
          147     117    11 commandChunks   Lscala/collection/immutable/Seq;
          159     105    12 commandStr   Ljava/lang/String;
            0     265     0  this   Los/proc;
            0     265     1   cwd   Los/Path;
            0     265     2   env   Lscala/collection/immutable/Map;
            0     265     3 stdin   Los/ProcessInput;
            0     265     4 stdout   Los/ProcessOutput;
            0     265     5 stderr   Los/ProcessOutput;
            0     265     6 mergeErrIntoOut   Z
            0     265     7 propagateEnv   Z
    Signature: #245                         // (Los/Path;Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZZ)Los/SubProcess;
    MethodParameters:
      Name                           Flags
      cwd                            final
      env                            final
      stdin                          final
      stdout                         final
      stderr                         final
      mergeErrIntoOut                final
      propagateEnv                   final

  public os.Path spawn$default$1();
    descriptor: ()Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> spawn$default$2();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;
    Signature: #226                         // ()Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;

  public os.ProcessInput spawn$default$3();
    descriptor: ()Los/ProcessInput;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #106                // Field os/Pipe$.MODULE$:Los/Pipe$;
         3: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public os.ProcessOutput spawn$default$4();
    descriptor: ()Los/ProcessOutput;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #106                // Field os/Pipe$.MODULE$:Los/Pipe$;
         3: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public os.ProcessOutput spawn$default$5();
    descriptor: ()Los/ProcessOutput;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #236                // Field os/Inherit$.MODULE$:Los/Inherit$;
         3: areturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public boolean spawn$default$6();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public boolean spawn$default$7();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #422                // String proc
         3: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/proc;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/proc;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #352                // Method command:()Lscala/collection/immutable/Seq;
        24: goto          34
        27: iload_1
        28: invokestatic  #431                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        31: goto          34
        34: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Los/proc;
            0      35     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #439                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #442                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/proc;
    Signature: #434                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class os/proc
         4: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/proc;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #448                // String command
        23: goto          36
        26: iload_1
        27: invokestatic  #431                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        30: checkcast     #250                // class java/lang/String
        33: goto          36
        36: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Los/proc;
            0      37     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #439                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #453                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/proc;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #439                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #458                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/proc;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     86
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class os/proc
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          90
        31: aload_1
        32: checkcast     #2                  // class os/proc
        35: astore        4
        37: aload_0
        38: invokevirtual #352                // Method command:()Lscala/collection/immutable/Seq;
        41: aload         4
        43: invokevirtual #352                // Method command:()Lscala/collection/immutable/Seq;
        46: astore        5
        48: dup
        49: ifnonnull     61
        52: pop
        53: aload         5
        55: ifnull        69
        58: goto          82
        61: aload         5
        63: invokevirtual #461                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        66: ifeq          82
        69: aload         4
        71: aload_0
        72: invokevirtual #463                // Method canEqual:(Ljava/lang/Object;)Z
        75: ifeq          82
        78: iconst_1
        79: goto          83
        82: iconst_0
        83: ifeq          90
        86: iconst_1
        87: goto          91
        90: iconst_0
        91: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class os/proc, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class os/proc, class java/lang/Object, int, class java/lang/Object, class os/proc, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class os/proc, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class os/proc, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      92     0  this   Los/proc;
            0      92     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final void $anonfun$call$1(java.util.concurrent.ConcurrentLinkedQueue, byte[], int);
    descriptor: (Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: getstatic     #473                // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #477                // Method scala/package$.Left:()Lscala/util/Left$;
         7: new           #479                // class geny/Bytes
        10: dup
        11: aload_1
        12: iload_2
        13: invokestatic  #485                // Method java/util/Arrays.copyOf:([BI)[B
        16: invokespecial #488                // Method geny/Bytes."<init>":([B)V
        19: invokevirtual #493                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        22: invokevirtual #496                // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
        25: pop
        26: return
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0 chunks$1   Ljava/util/concurrent/ConcurrentLinkedQueue;
            0      27     1   buf   [B
            0      27     2     n   I
    MethodParameters:
      Name                           Flags
      chunks$1                       final
      buf                            final
      n                              final

  public static final void $anonfun$call$2(java.util.concurrent.ConcurrentLinkedQueue, byte[], int);
    descriptor: (Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: getstatic     #473                // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #502                // Method scala/package$.Right:()Lscala/util/Right$;
         7: new           #479                // class geny/Bytes
        10: dup
        11: aload_1
        12: iload_2
        13: invokestatic  #485                // Method java/util/Arrays.copyOf:([BI)[B
        16: invokespecial #488                // Method geny/Bytes."<init>":([B)V
        19: invokevirtual #507                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        22: invokevirtual #496                // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
        25: pop
        26: return
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0 chunks$1   Ljava/util/concurrent/ConcurrentLinkedQueue;
            0      27     1   buf   [B
            0      27     2     n   I
    MethodParameters:
      Name                           Flags
      chunks$1                       final
      buf                            final
      n                              final

  public static final scala.collection.immutable.Map $anonfun$spawn$1();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #189                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: invokevirtual #264                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
         6: getstatic     #269                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #274                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        12: checkcast     #219                // class scala/collection/immutable/Map
        15: areturn
      LineNumberTable:
        line 113: 0

  public static final boolean $anonfun$spawn$2(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final java.lang.String $anonfun$spawn$3(java.lang.ProcessBuilder, scala.Tuple2);
    descriptor: (Ljava/lang/ProcessBuilder;Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        66
         6: aload_3
         7: invokevirtual #517                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #250                // class java/lang/String
        13: astore        4
        15: aload_3
        16: invokevirtual #520                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #250                // class java/lang/String
        22: astore        5
        24: aload         5
        26: ifnull        48
        29: aload_0
        30: invokevirtual #524                // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
        33: aload         4
        35: aload         5
        37: invokeinterface #529,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        42: checkcast     #250                // class java/lang/String
        45: goto          62
        48: aload_0
        49: invokevirtual #524                // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
        52: aload         4
        54: invokeinterface #532,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        59: checkcast     #250                // class java/lang/String
        62: astore_2
        63: goto          78
        66: goto          69
        69: new           #534                // class scala/MatchError
        72: dup
        73: aload_3
        74: invokespecial #537                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        77: athrow
        78: aload_2
        79: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class java/lang/ProcessBuilder, class scala/Tuple2, top, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/lang/ProcessBuilder, class scala/Tuple2, class java/lang/String, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 113: 0
        line 114: 24
        line 115: 48
        line 113: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      51     4     k   Ljava/lang/String;
           24      42     5     v   Ljava/lang/String;
            0      80     0 builder$1   Ljava/lang/ProcessBuilder;
            0      80     1   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      builder$1                      final
      x$1                            final

  public static final os.Path $anonfun$spawn$4();
    descriptor: ()Los/Path;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #544                // Field os/package$.MODULE$:Los/package$;
         3: invokevirtual #547                // Method os/package$.pwd:()Los/Path;
         6: areturn
      LineNumberTable:
        line 118: 0

  public static final scala.collection.immutable.Seq $anonfun$spawn$5(os.Shellable);
    descriptor: (Los/Shellable;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #553                // Method os/Shellable.value:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Los/Shellable;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final os.SubProcess$InputStream $anonfun$spawn$6(scala.runtime.LazyRef, java.lang.ProcessBuilder, scala.collection.immutable.Seq, os.ProcessInput, os.ProcessOutput, os.ProcessOutput, boolean, java.lang.String);
    descriptor: (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$InputStream;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=8, args_size=8
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: iload         6
        10: aload         7
        12: invokestatic  #375                // Method proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
        15: invokevirtual #566                // Method os/SubProcess.stdin:()Los/SubProcess$InputStream;
        18: areturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 proc$lzy$1   Lscala/runtime/LazyRef;
            0      19     1 builder$1   Ljava/lang/ProcessBuilder;
            0      19     2 commandChunks$1   Lscala/collection/immutable/Seq;
            0      19     3 stdin$1   Los/ProcessInput;
            0      19     4 stdout$1   Los/ProcessOutput;
            0      19     5 stderr$1   Los/ProcessOutput;
            0      19     6 mergeErrIntoOut$1   Z
            0      19     7 commandStr$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      proc$lzy$1                     final
      builder$1                      final
      commandChunks$1                final
      stdin$1                        final
      stdout$1                       final
      stderr$1                       final
      mergeErrIntoOut$1              final
      commandStr$1                   final

  public static final java.lang.Thread $anonfun$spawn$7(java.lang.String, java.lang.Runnable);
    descriptor: (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #571                // class java/lang/Thread
         3: dup
         4: aload_1
         5: new           #573                // class java/lang/StringBuilder
         8: dup
         9: ldc_w         #574                // int 13
        12: invokespecial #577                // Method java/lang/StringBuilder."<init>":(I)V
        15: aload_0
        16: invokevirtual #581                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: ldc_w         #583                // String  stdin thread
        22: invokevirtual #581                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: invokevirtual #585                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        28: invokespecial #588                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
        31: areturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0 commandStr$1   Ljava/lang/String;
            0      32     1   x$3   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      commandStr$1                   final
      x$3                            final

  public static final os.SubProcess$OutputStream $anonfun$spawn$8(scala.runtime.LazyRef, java.lang.ProcessBuilder, scala.collection.immutable.Seq, os.ProcessInput, os.ProcessOutput, os.ProcessOutput, boolean, java.lang.String);
    descriptor: (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=8, args_size=8
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: iload         6
        10: aload         7
        12: invokestatic  #375                // Method proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
        15: invokevirtual #594                // Method os/SubProcess.stdout:()Los/SubProcess$OutputStream;
        18: areturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 proc$lzy$1   Lscala/runtime/LazyRef;
            0      19     1 builder$1   Ljava/lang/ProcessBuilder;
            0      19     2 commandChunks$1   Lscala/collection/immutable/Seq;
            0      19     3 stdin$1   Los/ProcessInput;
            0      19     4 stdout$1   Los/ProcessOutput;
            0      19     5 stderr$1   Los/ProcessOutput;
            0      19     6 mergeErrIntoOut$1   Z
            0      19     7 commandStr$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      proc$lzy$1                     final
      builder$1                      final
      commandChunks$1                final
      stdin$1                        final
      stdout$1                       final
      stderr$1                       final
      mergeErrIntoOut$1              final
      commandStr$1                   final

  public static final java.lang.Thread $anonfun$spawn$9(java.lang.String, java.lang.Runnable);
    descriptor: (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #571                // class java/lang/Thread
         3: dup
         4: aload_1
         5: new           #573                // class java/lang/StringBuilder
         8: dup
         9: ldc_w         #597                // int 14
        12: invokespecial #577                // Method java/lang/StringBuilder."<init>":(I)V
        15: aload_0
        16: invokevirtual #581                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: ldc_w         #599                // String  stdout thread
        22: invokevirtual #581                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: invokevirtual #585                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        28: invokespecial #588                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
        31: areturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0 commandStr$1   Ljava/lang/String;
            0      32     1   x$4   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      commandStr$1                   final
      x$4                            final

  public static final os.SubProcess$OutputStream $anonfun$spawn$10(scala.runtime.LazyRef, java.lang.ProcessBuilder, scala.collection.immutable.Seq, os.ProcessInput, os.ProcessOutput, os.ProcessOutput, boolean, java.lang.String);
    descriptor: (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=8, args_size=8
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: iload         6
        10: aload         7
        12: invokestatic  #375                // Method proc$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
        15: invokevirtual #602                // Method os/SubProcess.stderr:()Los/SubProcess$OutputStream;
        18: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 proc$lzy$1   Lscala/runtime/LazyRef;
            0      19     1 builder$1   Ljava/lang/ProcessBuilder;
            0      19     2 commandChunks$1   Lscala/collection/immutable/Seq;
            0      19     3 stdin$1   Los/ProcessInput;
            0      19     4 stdout$1   Los/ProcessOutput;
            0      19     5 stderr$1   Los/ProcessOutput;
            0      19     6 mergeErrIntoOut$1   Z
            0      19     7 commandStr$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      proc$lzy$1                     final
      builder$1                      final
      commandChunks$1                final
      stdin$1                        final
      stdout$1                       final
      stderr$1                       final
      mergeErrIntoOut$1              final
      commandStr$1                   final

  public static final java.lang.Thread $anonfun$spawn$11(java.lang.String, java.lang.Runnable);
    descriptor: (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #571                // class java/lang/Thread
         3: dup
         4: aload_1
         5: new           #573                // class java/lang/StringBuilder
         8: dup
         9: ldc_w         #597                // int 14
        12: invokespecial #577                // Method java/lang/StringBuilder."<init>":(I)V
        15: aload_0
        16: invokevirtual #581                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: ldc_w         #606                // String  stderr thread
        22: invokevirtual #581                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: invokevirtual #585                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        28: invokespecial #588                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
        31: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0 commandStr$1   Ljava/lang/String;
            0      32     1   x$5   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      commandStr$1                   final
      x$5                            final

  private static final os.SubProcess proc$lzycompute$1(scala.runtime.LazyRef, java.lang.ProcessBuilder, scala.collection.immutable.Seq, os.ProcessInput, os.ProcessOutput, os.ProcessOutput, boolean, java.lang.String);
    descriptor: (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
    flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=15, locals=10, args_size=8
         0: aload_0
         1: dup
         2: astore        8
         4: monitorenter
         5: aload_0
         6: invokevirtual #610                // Method scala/runtime/LazyRef.initialized:()Z
         9: ifeq          22
        12: aload_0
        13: invokevirtual #612                // Method scala/runtime/LazyRef.value:()Ljava/lang/Object;
        16: checkcast     #31                 // class os/SubProcess
        19: goto          195
        22: aload_0
        23: new           #31                 // class os/SubProcess
        26: dup
        27: aload_1
        28: aload_2
        29: getstatic     #167                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        32: ldc           #250                // class java/lang/String
        34: invokevirtual #172                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        37: invokeinterface #613,  2          // InterfaceMethod scala/collection/immutable/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
        42: checkcast     #615                // class "[Ljava/lang/String;"
        45: invokevirtual #618                // Method java/lang/ProcessBuilder.command:([Ljava/lang/String;)Ljava/lang/ProcessBuilder;
        48: aload_3
        49: invokeinterface #622,  1          // InterfaceMethod os/ProcessInput.redirectFrom:()Ljava/lang/ProcessBuilder$Redirect;
        54: invokevirtual #626                // Method java/lang/ProcessBuilder.redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
        57: aload         4
        59: invokeinterface #629,  1          // InterfaceMethod os/ProcessOutput.redirectTo:()Ljava/lang/ProcessBuilder$Redirect;
        64: invokevirtual #632                // Method java/lang/ProcessBuilder.redirectOutput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
        67: aload         5
        69: invokeinterface #629,  1          // InterfaceMethod os/ProcessOutput.redirectTo:()Ljava/lang/ProcessBuilder$Redirect;
        74: invokevirtual #635                // Method java/lang/ProcessBuilder.redirectError:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
        77: iload         6
        79: invokevirtual #639                // Method java/lang/ProcessBuilder.redirectErrorStream:(Z)Ljava/lang/ProcessBuilder;
        82: invokevirtual #643                // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
        85: aload_3
        86: aload_0
        87: aload_1
        88: aload_2
        89: aload_3
        90: aload         4
        92: aload         5
        94: iload         6
        96: aload         7
        98: invokedynamic #650,  0            // InvokeDynamic #10:apply:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
       103: invokeinterface #654,  2          // InterfaceMethod os/ProcessInput.processInput:(Lscala/Function0;)Lscala/Option;
       108: aload         7
       110: invokedynamic #662,  0            // InvokeDynamic #11:apply:(Ljava/lang/String;)Lscala/Function1;
       115: invokevirtual #666                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       118: aload         4
       120: aload_0
       121: aload_1
       122: aload_2
       123: aload_3
       124: aload         4
       126: aload         5
       128: iload         6
       130: aload         7
       132: invokedynamic #671,  0            // InvokeDynamic #12:apply:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
       137: invokeinterface #674,  2          // InterfaceMethod os/ProcessOutput.processOutput:(Lscala/Function0;)Lscala/Option;
       142: aload         7
       144: invokedynamic #678,  0            // InvokeDynamic #13:apply:(Ljava/lang/String;)Lscala/Function1;
       149: invokevirtual #666                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       152: aload         5
       154: aload_0
       155: aload_1
       156: aload_2
       157: aload_3
       158: aload         4
       160: aload         5
       162: iload         6
       164: aload         7
       166: invokedynamic #682,  0            // InvokeDynamic #14:apply:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Lscala/Function0;
       171: invokeinterface #674,  2          // InterfaceMethod os/ProcessOutput.processOutput:(Lscala/Function0;)Lscala/Option;
       176: aload         7
       178: invokedynamic #686,  0            // InvokeDynamic #15:apply:(Ljava/lang/String;)Lscala/Function1;
       183: invokevirtual #666                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       186: invokespecial #689                // Method os/SubProcess."<init>":(Ljava/lang/Process;Lscala/Option;Lscala/Option;Lscala/Option;)V
       189: invokevirtual #692                // Method scala/runtime/LazyRef.initialize:(Ljava/lang/Object;)Ljava/lang/Object;
       192: checkcast     #31                 // class os/SubProcess
       195: astore        9
       197: aload         8
       199: monitorexit
       200: aload         9
       202: goto          209
       205: aload         8
       207: monitorexit
       208: athrow
       209: areturn
      Exception table:
         from    to  target type
             5   197   205   any
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class scala/runtime/LazyRef ]
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 172
          stack = [ class os/SubProcess ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/runtime/LazyRef, class java/lang/ProcessBuilder, class scala/collection/immutable/Seq, class os/ProcessInput, class os/ProcessOutput, class os/ProcessOutput, int, class java/lang/String, class scala/runtime/LazyRef, class os/SubProcess ]
          stack = [ class os/SubProcess ]
      LineNumberTable:
        line 122: 0
        line 123: 27
        line 124: 28
        line 125: 48
        line 126: 57
        line 127: 67
        line 128: 77
        line 130: 85
        line 131: 118
        line 132: 152
        line 122: 209
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     210     0 proc$lzy$1   Lscala/runtime/LazyRef;
            0     210     1 builder$1   Ljava/lang/ProcessBuilder;
            0     210     2 commandChunks$1   Lscala/collection/immutable/Seq;
            0     210     3 stdin$1   Los/ProcessInput;
            0     210     4 stdout$1   Los/ProcessOutput;
            0     210     5 stderr$1   Los/ProcessOutput;
            0     210     6 mergeErrIntoOut$1   Z
            0     210     7 commandStr$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      proc$lzy$1                     final
      builder$1                      final
      commandChunks$1                final
      stdin$1                        final
      stdout$1                       final
      stderr$1                       final
      mergeErrIntoOut$1              final
      commandStr$1                   final

  private static final os.SubProcess proc$1(scala.runtime.LazyRef, java.lang.ProcessBuilder, scala.collection.immutable.Seq, os.ProcessInput, os.ProcessOutput, os.ProcessOutput, boolean, java.lang.String);
    descriptor: (Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=8, locals=8, args_size=8
         0: aload_0
         1: invokevirtual #610                // Method scala/runtime/LazyRef.initialized:()Z
         4: ifeq          17
         7: aload_0
         8: invokevirtual #612                // Method scala/runtime/LazyRef.value:()Ljava/lang/Object;
        11: checkcast     #31                 // class os/SubProcess
        14: goto          32
        17: aload_0
        18: aload_1
        19: aload_2
        20: aload_3
        21: aload         4
        23: aload         5
        25: iload         6
        27: aload         7
        29: invokestatic  #696                // Method proc$lzycompute$1:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess;
        32: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class os/SubProcess ]
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 proc$lzy$1   Lscala/runtime/LazyRef;
            0      33     1 builder$1   Ljava/lang/ProcessBuilder;
            0      33     2 commandChunks$1   Lscala/collection/immutable/Seq;
            0      33     3 stdin$1   Los/ProcessInput;
            0      33     4 stdout$1   Los/ProcessOutput;
            0      33     5 stderr$1   Los/ProcessOutput;
            0      33     6 mergeErrIntoOut$1   Z
            0      33     7 commandStr$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      proc$lzy$1                     final
      builder$1                      final
      commandChunks$1                final
      stdin$1                        final
      stdout$1                       final
      stderr$1                       final
      mergeErrIntoOut$1              final
      commandStr$1                   final

  public static final void $anonfun$spawn$12(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #701                // Method java/lang/Thread.start:()V
         4: return
      LineNumberTable:
        line 135: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final void $anonfun$spawn$13(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #701                // Method java/lang/Thread.start:()V
         4: return
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$7   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final void $anonfun$spawn$14(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #701                // Method java/lang/Thread.start:()V
         4: return
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$8   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public os.proc(scala.collection.immutable.Seq<os.Shellable>);
    descriptor: (Lscala/collection/immutable/Seq;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #83                 // Field command:Lscala/collection/immutable/Seq;
         5: aload_0
         6: invokespecial #709                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #713                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Los/proc;
            0      14     1 command   Lscala/collection/immutable/Seq;
    Signature: #708                         // (Lscala/collection/immutable/Seq<Los/Shellable;>;)V
    MethodParameters:
      Name                           Flags
      command                        final

  public static final java.lang.Object $anonfun$call$1$adapted(java.util.concurrent.ConcurrentLinkedQueue, byte[], java.lang.Object);
    descriptor: (Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #719                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         6: invokestatic  #721                // Method $anonfun$call$1:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
         9: getstatic     #727                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        12: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 chunks$1   Ljava/util/concurrent/ConcurrentLinkedQueue;
            0      13     1   buf   [B
            0      13     2     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      chunks$1                       final
      buf                            final
      n                              final

  public static final java.lang.Object $anonfun$call$2$adapted(java.util.concurrent.ConcurrentLinkedQueue, byte[], java.lang.Object);
    descriptor: (Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #719                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         6: invokestatic  #729                // Method $anonfun$call$2:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BI)V
         9: getstatic     #727                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        12: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 chunks$1   Ljava/util/concurrent/ConcurrentLinkedQueue;
            0      13     1   buf   [B
            0      13     2     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      chunks$1                       final
      buf                            final
      n                              final

  public static final java.lang.Object $anonfun$spawn$2$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #731                // Method $anonfun$spawn$2:(Lscala/Tuple2;)Z
         4: invokestatic  #735                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final java.lang.Object $anonfun$spawn$12$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #737                // Method $anonfun$spawn$12:(Ljava/lang/Thread;)V
         4: getstatic     #727                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 135: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$6   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final java.lang.Object $anonfun$spawn$13$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #739                // Method $anonfun$spawn$13:(Ljava/lang/Thread;)V
         4: getstatic     #727                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$7   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final java.lang.Object $anonfun$spawn$14$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #741                // Method $anonfun$spawn$14:(Ljava/lang/Thread;)V
         4: getstatic     #727                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$8   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$8                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #753,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static abstract #17= #14 of #16; // Redirect=class java/lang/ProcessBuilder$Redirect of class java/lang/ProcessBuilder
  public static final #22= #19 of #21;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #27= #24 of #26;          // ReadBytes=class os/ProcessOutput$ReadBytes of class os/ProcessOutput
  public static #32= #29 of #31;          // InputStream=class os/SubProcess$InputStream of class os/SubProcess
  public static #35= #34 of #31;          // OutputStream=class os/SubProcess$OutputStream of class os/SubProcess
  public static #40= #37 of #39;          // AsScala=class scala/collection/JavaConverters$AsScala of class scala/collection/JavaConverters
SourceFile: "ProcessOps.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005]h\u0001\u0002\u0014(\u0001*B\u0001\u0002\u0011\u0001\u0003\u0016\u0004%\t!\u0011\u0005\t\u0013\u0002\u0011\t\u0012)A\u0005\u0005\")!\n\u0001C\u0001\u0017\")a\n\u0001C\u0001\u001f\"Aq\u0010AI\u0001\n\u0003\t\t\u0001C\u0005\u0002\u0018\u0001\t\n\u0011\"\u0001\u0002\u001a!I\u0011Q\u0004\u0001\u0012\u0002\u0013\u0005\u0011q\u0004\u0005\n\u0003G\u0001\u0011\u0013!C\u0001\u0003KA\u0011\"!\u000b\u0001#\u0003%\t!!\n\t\u0013\u0005-\u0002!%A\u0005\u0002\u00055\u0002\"CA\u0019\u0001E\u0005I\u0011AA\u001a\u0011%\t9\u0004AI\u0001\n\u0003\ti\u0003C\u0005\u0002:\u0001\t\n\u0011\"\u0001\u0002.!9\u00111\b\u0001\u0005\u0002\u0005u\u0002\"CA*\u0001E\u0005I\u0011AA\u0001\u0011%\t)\u0006AI\u0001\n\u0003\tI\u0002C\u0005\u0002X\u0001\t\n\u0011\"\u0001\u0002 !I\u0011\u0011\f\u0001\u0012\u0002\u0013\u0005\u0011Q\u0005\u0005\n\u00037\u0002\u0011\u0013!C\u0001\u0003KA\u0011\"!\u0018\u0001#\u0003%\t!!\f\t\u0013\u0005}\u0003!%A\u0005\u0002\u00055\u0002\"CA1\u0001\u0005\u0005I\u0011IA2\u0011%\t\u0019\bAA\u0001\n\u0003\t)\bC\u0005\u0002~\u0001\t\t\u0011\"\u0001\u0002\u0000!I\u00111\u0012\u0001\u0002\u0002\u0013\u0005\u0013Q\u0012\u0005\n\u00037\u0003\u0011\u0011!C\u0001\u0003;C\u0011\"!)\u0001\u0003\u0003%\t%a)\t\u0013\u0005\u001d\u0006!!A\u0005B\u0005%\u0006\"CAV\u0001\u0005\u0005I\u0011IAW\u0011%\ty\u000bAA\u0001\n\u0003\n\tlB\u0005\u00026\u001e\n\t\u0011#\u0001\u00028\u001aAaeJA\u0001\u0012\u0003\tI\f\u0003\u0004KA\u0011\u0005\u0011\u0011\u001b\u0005\n\u0003W\u0003\u0013\u0011!C#\u0003[C\u0011\"a5!\u0003\u0003%\t)!6\t\u0013\u0005e\u0007%!A\u0005\u0002\u0006m\u0007\"CAwA\u0005\u0005I\u0011BAx\u0005\u0011\u0001(o\\2\u000b\u0003!\n!a\\:\u0004\u0001M!\u0001aK\u00195!\tas&D\u0001.\u0015\u0005q\u0013!B:dC2\f\u0017B\u0001\u0019.\u0005\u0019\te.\u001f*fMB\u0011AFM\u0005\u0003g5\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u00026{9\u0011ag\u000f\b\u0003oij\u0011\u0001\u000f\u0006\u0003s%\na\u0001\u0010:p_Rt\u0014\"\u0001\u0018\n\u0005qj\u0013a\u00029bG.\fw-Z\u0005\u0003}}\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001P\u0017\u0002\u000f\r|W.\\1oIV\t!\tE\u0002-\u0007\u0016K!\u0001R\u0017\u0003\u0015q\u0012X\r]3bi\u0016$g\b\u0005\u0002G\u000f6\tq%\u0003\u0002IO\tI1\u000b[3mY\u0006\u0014G.Z\u0001\tG>lW.\u00198eA\u00051A(\u001b8jiz\"\"\u0001T\'\u0011\u0005\u0019\u0003\u0001\"\u0002!\u0004\u0001\u0004\u0011\u0015\u0001B2bY2$\"\u0002U*YK*|\u0017O^>~!\t1\u0015+\u0003\u0002SO\ti1i\\7nC:$\'+Z:vYRDq\u0001\u0016\u0003\u0011\u0002\u0003\u0007Q+A\u0002do\u0012\u0004\"A\u0012,\n\u0005];#\u0001\u0002)bi\"Dq!\u0017\u0003\u0011\u0002\u0003\u0007!,A\u0002f]Z\u0004BaW0cE:\u0011A,\u0018\t\u0003o5J!AX\u0017\u0002\rA\u0013X\rZ3g\u0013\t\u0001\u0017MA\u0002NCBT!AX\u0017\u0011\u0005m\u001b\u0017B\u00013b\u0005\u0019\u0019FO]5oO\"9a\r\u0002I\u0001\u0002\u00049\u0017!B:uI&t\u0007C\u0001$i\u0013\tIwE\u0001\u0007Qe>\u001cWm]:J]B,H\u000fC\u0004l\tA\u0005\t\u0019\u00017\u0002\rM$Hm\\;u!\t1U.\u0003\u0002oO\ti\u0001K]8dKN\u001cx*\u001e;qkRDq\u0001\u001d\u0003\u0011\u0002\u0003\u0007A.\u0001\u0004ti\u0012,\'O\u001d\u0005\be\u0012\u0001\n\u00111\u0001t\u0003=iWM]4f\u000bJ\u0014\u0018J\u001c;p\u001fV$\bC\u0001\u0017u\u0013\t)XFA\u0004C_>dW-\u00198\t\u000f]$\u0001\u0013!a\u0001q\u00069A/[7f_V$\bC\u0001\u0017z\u0013\tQXF\u0001\u0003M_:<\u0007b\u0002?\u0005!\u0003\u0005\ra]\u0001\u0006G\",7m\u001b\u0005\b}\u0012\u0001\n\u00111\u0001t\u00031\u0001(o\u001c9bO\u0006$X-\u00128w\u00039\u0019\u0017\r\u001c7%I\u00164\u0017-\u001e7uIE*\"!a\u0001+\u0007U\u000b)a\u000b\u0002\u0002\bA!\u0011\u0011BA\n\u001b\t\tYA\u0003\u0003\u0002\u000e\u0005=\u0011!C;oG\",7m[3e\u0015\r\t\t\"L\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002BA\u000b\u0003\u0017\u0011\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019\u0017\r\u001c7%I\u00164\u0017-\u001e7uII*\"!a\u0007+\u0007i\u000b)!\u0001\bdC2dG\u0005Z3gCVdG\u000fJ\u001a\u0016\u0005\u0005\u0005\"fA4\u0002\u0006\u0005q1-\u00197mI\u0011,g-Y;mi\u0012\"TCAA\u0014U\ra\u0017QA\u0001\u000fG\u0006dG\u000e\n3fM\u0006,H\u000e\u001e\u00136\u00039\u0019\u0017\r\u001c7%I\u00164\u0017-\u001e7uIY*\"!a\f+\u0007M\f)!\u0001\bdC2dG\u0005Z3gCVdG\u000fJ\u001c\u0016\u0005\u0005U\"f\u0001=\u0002\u0006\u0005q1-\u00197mI\u0011,g-Y;mi\u0012B\u0014AD2bY2$C-\u001a4bk2$H%O\u0001\u0006gB\fwO\u001c\u000b\u0011\u0003\u007f\t)%a\u0012\u0002J\u0005-\u0013QJA(\u0003#\u00022ARA!\u0013\r\t\u0019e\n\u0002\u000b\'V\u0014\u0007K]8dKN\u001c\bb\u0002+\u000f!\u0003\u0005\r!\u0016\u0005\b3:\u0001\n\u00111\u0001[\u0011\u001d1g\u0002%AA\u0002\u001dDqa\u001b\b\u0011\u0002\u0003\u0007A\u000eC\u0004q\u001dA\u0005\t\u0019\u00017\t\u000fIt\u0001\u0013!a\u0001g\"9aP\u0004I\u0001\u0002\u0004\u0019\u0018aD:qC^tG\u0005Z3gCVdG\u000fJ\u0019\u0002\u001fM\u0004\u0018m\u001e8%I\u00164\u0017-\u001e7uII\nqb\u001d9bo:$C-\u001a4bk2$HeM\u0001\u0010gB\fwO\u001c\u0013eK\u001a\fW\u000f\u001c;%i\u0005y1\u000f]1x]\u0012\"WMZ1vYR$S\'A\bta\u0006<h\u000e\n3fM\u0006,H\u000e\u001e\u00137\u0003=\u0019\b/Y<oI\u0011,g-Y;mi\u0012:\u0014!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0002fA!\u0011qMA9\u001b\t\tIG\u0003\u0003\u0002l\u00055\u0014\u0001\u00027b]\u001eT!!a\u001c\u0002\t)\fg/Y\u0005\u0004I\u0006%\u0014\u0001\u00049s_\u0012,8\r^!sSRLXCAA<!\ra\u0013\u0011P\u0005\u0004\u0003wj#aA%oi\u0006q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BAA\u0003\u000f\u00032\u0001LAB\u0013\r\t))\f\u0002\u0004\u0003:L\b\"CAE1\u0005\u0005\t\u0019AA<\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\u0011\u0011q\u0012\t\u0007\u0003#\u000b9*!!\u000e\u0005\u0005M%bAAK[\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\t\u0005e\u00151\u0013\u0002\t\u0013R,\'/\u0019;pe\u0006A1-\u00198FcV\fG\u000eF\u0002t\u0003?C\u0011\"!#\u001b\u0003\u0003\u0005\r!!!\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\u0003K\n)\u000bC\u0005\u0002\nn\t\t\u00111\u0001\u0002x\u0005A\u0001.Y:i\u0007>$W\r\u0006\u0002\u0002x\u0005AAo\\*ue&tw\r\u0006\u0002\u0002f\u00051Q-];bYN$2a]AZ\u0011%\tIIHA\u0001\u0002\u0004\t\t)\u0001\u0003qe>\u001c\u0007C\u0001$!\'\u0015\u0001\u00131XAd!\u0019\ti,a1C\u00196\u0011\u0011q\u0018\u0006\u0004\u0003\u0003l\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003\u000b\fyLA\tBEN$(/Y2u\rVt7\r^5p]F\u0002B!!3\u0002P6\u0011\u00111\u001a\u0006\u0005\u0003\u001b\fi\'\u0001\u0002j_&\u0019a(a3\u0015\u0005\u0005]\u0016!B1qa2LHc\u0001\'\u0002X\")\u0001i\ta\u0001\u0005\u0006QQO\\1qa2L8+Z9\u0015\t\u0005u\u0017\u0011\u001e\t\u0006Y\u0005}\u00171]\u0005\u0004\u0003Cl#AB(qi&|g\u000e\u0005\u00036\u0003K,\u0015bAAt\u007f\t\u00191+Z9\t\u0011\u0005-H%!AA\u00021\u000b1\u0001\u001f\u00131\u000319(/\u001b;f%\u0016\u0004H.Y2f)\t\t\t\u0010\u0005\u0003\u0002h\u0005M\u0018\u0002BA{\u0003S\u0012aa\u00142kK\u000e$\b"
    )
BootstrapMethods:
  0: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #108 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #113 REF_invokeStatic os/proc.$anonfun$call$1$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
      #115 ([BLjava/lang/Object;)Ljava/lang/Object;
      #116 5
      #117 1
      #115 ([BLjava/lang/Object;)Ljava/lang/Object;
  1: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #108 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #134 REF_invokeStatic os/proc.$anonfun$call$2$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
      #115 ([BLjava/lang/Object;)Ljava/lang/Object;
      #116 5
      #117 1
      #115 ([BLjava/lang/Object;)Ljava/lang/Object;
  2: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #283 ()Ljava/lang/Object;
      #287 REF_invokeStatic os/proc.$anonfun$spawn$1:()Lscala/collection/immutable/Map;
      #288 ()Lscala/collection/immutable/Map;
      #116 5
      #117 1
      #288 ()Lscala/collection/immutable/Map;
  3: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #312 REF_invokeStatic os/proc.$anonfun$spawn$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #313 (Lscala/Tuple2;)Ljava/lang/Object;
      #116 5
      #117 1
      #313 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #325 REF_invokeStatic os/proc.$anonfun$spawn$3:(Ljava/lang/ProcessBuilder;Lscala/Tuple2;)Ljava/lang/String;
      #327 (Lscala/Tuple2;)Ljava/lang/String;
      #116 5
      #117 1
      #327 (Lscala/Tuple2;)Ljava/lang/String;
  5: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #283 ()Ljava/lang/Object;
      #340 REF_invokeStatic os/proc.$anonfun$spawn$4:()Los/Path;
      #341 ()Los/Path;
      #116 5
      #117 1
      #341 ()Los/Path;
  6: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #357 REF_invokeStatic os/proc.$anonfun$spawn$5:(Los/Shellable;)Lscala/collection/immutable/Seq;
      #358 (Los/Shellable;)Lscala/collection/immutable/Seq;
      #116 5
      #117 1
      #358 (Los/Shellable;)Lscala/collection/immutable/Seq;
  7: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #384 REF_invokeStatic os/proc.$anonfun$spawn$12$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #385 (Ljava/lang/Thread;)Ljava/lang/Object;
      #116 5
      #117 1
      #385 (Ljava/lang/Thread;)Ljava/lang/Object;
  8: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #394 REF_invokeStatic os/proc.$anonfun$spawn$13$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #385 (Ljava/lang/Thread;)Ljava/lang/Object;
      #116 5
      #117 1
      #385 (Ljava/lang/Thread;)Ljava/lang/Object;
  9: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #402 REF_invokeStatic os/proc.$anonfun$spawn$14$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #385 (Ljava/lang/Thread;)Ljava/lang/Object;
      #116 5
      #117 1
      #385 (Ljava/lang/Thread;)Ljava/lang/Object;
  10: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #283 ()Ljava/lang/Object;
      #646 REF_invokeStatic os/proc.$anonfun$spawn$6:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$InputStream;
      #647 ()Los/SubProcess$InputStream;
      #116 5
      #117 1
      #647 ()Los/SubProcess$InputStream;
  11: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #657 REF_invokeStatic os/proc.$anonfun$spawn$7:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
      #659 (Ljava/lang/Runnable;)Ljava/lang/Thread;
      #116 5
      #117 1
      #659 (Ljava/lang/Runnable;)Ljava/lang/Thread;
  12: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #283 ()Ljava/lang/Object;
      #669 REF_invokeStatic os/proc.$anonfun$spawn$8:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
      #670 ()Los/SubProcess$OutputStream;
      #116 5
      #117 1
      #670 ()Los/SubProcess$OutputStream;
  13: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #677 REF_invokeStatic os/proc.$anonfun$spawn$9:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
      #659 (Ljava/lang/Runnable;)Ljava/lang/Thread;
      #116 5
      #117 1
      #659 (Ljava/lang/Runnable;)Ljava/lang/Thread;
  14: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #283 ()Ljava/lang/Object;
      #681 REF_invokeStatic os/proc.$anonfun$spawn$10:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
      #670 ()Los/SubProcess$OutputStream;
      #116 5
      #117 1
      #670 ()Los/SubProcess$OutputStream;
  15: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 (Ljava/lang/Object;)Ljava/lang/Object;
      #685 REF_invokeStatic os/proc.$anonfun$spawn$11:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
      #659 (Ljava/lang/Runnable;)Ljava/lang/Thread;
      #116 5
      #117 1
      #659 (Ljava/lang/Runnable;)Ljava/lang/Thread;
  16: #750 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #113 REF_invokeStatic os/proc.$anonfun$call$1$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
      #134 REF_invokeStatic os/proc.$anonfun$call$2$adapted:(Ljava/util/concurrent/ConcurrentLinkedQueue;[BLjava/lang/Object;)Ljava/lang/Object;
      #287 REF_invokeStatic os/proc.$anonfun$spawn$1:()Lscala/collection/immutable/Map;
      #681 REF_invokeStatic os/proc.$anonfun$spawn$10:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
      #685 REF_invokeStatic os/proc.$anonfun$spawn$11:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
      #384 REF_invokeStatic os/proc.$anonfun$spawn$12$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #394 REF_invokeStatic os/proc.$anonfun$spawn$13$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #402 REF_invokeStatic os/proc.$anonfun$spawn$14$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #312 REF_invokeStatic os/proc.$anonfun$spawn$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #325 REF_invokeStatic os/proc.$anonfun$spawn$3:(Ljava/lang/ProcessBuilder;Lscala/Tuple2;)Ljava/lang/String;
      #340 REF_invokeStatic os/proc.$anonfun$spawn$4:()Los/Path;
      #357 REF_invokeStatic os/proc.$anonfun$spawn$5:(Los/Shellable;)Lscala/collection/immutable/Seq;
      #646 REF_invokeStatic os/proc.$anonfun$spawn$6:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$InputStream;
      #657 REF_invokeStatic os/proc.$anonfun$spawn$7:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
      #669 REF_invokeStatic os/proc.$anonfun$spawn$8:(Lscala/runtime/LazyRef;Ljava/lang/ProcessBuilder;Lscala/collection/immutable/Seq;Los/ProcessInput;Los/ProcessOutput;Los/ProcessOutput;ZLjava/lang/String;)Los/SubProcess$OutputStream;
      #677 REF_invokeStatic os/proc.$anonfun$spawn$9:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;
  ScalaInlineInfo: length = 0x112 (unknown attribute)
   01 00 00 36 01 D0 01 D1 01 00 6D 00 6E 01 01 F2
   01 D1 01 00 83 00 6E 01 01 1C 00 E1 01 02 58 02
   4F 01 02 5B 02 38 01 02 B9 02 BA 01 01 7C 01 7D
   01 02 BF 02 BA 01 01 87 01 7D 01 02 C1 02 BA 01
   01 8F 01 7D 01 01 FC 01 FD 01 01 34 01 35 01 01
   41 01 42 01 01 51 00 DF 01 01 61 01 62 01 02 2B
   02 2C 01 02 37 02 38 01 02 4E 02 4F 01 02 53 02
   38 01 00 62 02 C3 00 00 54 00 55 00 00 DE 00 DF
   00 00 E0 00 E1 00 00 E3 00 E4 00 00 E5 00 E6 00
   00 E7 00 E6 00 00 ED 00 EE 00 00 EF 00 F0 00 00
   F3 00 EE 00 00 F4 00 EE 00 01 BB 01 BC 00 00 29
   00 50 00 01 CB 01 BC 00 01 C1 00 B6 00 01 74 01
   75 01 02 5F 01 75 01 01 A7 00 B6 00 01 A8 01 A9
   00 01 BE 01 BF 00 00 47 00 48 00 01 B1 00 48 00
   01 A3 01 A4 00 00 88 00 89 00 01 9C 00 DF 00 01
   9D 00 E1 00 01 9E 00 E4 00 01 9F 00 E6 00 01 A0
   00 E6 00 01 A1 00 EE 00 01 A2 00 EE 00 01 C6 01
   A4 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
