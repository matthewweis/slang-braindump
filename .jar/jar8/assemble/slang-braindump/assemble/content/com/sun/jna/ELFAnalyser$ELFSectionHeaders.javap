Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/sun/jna/ELFAnalyser$ELFSectionHeaders.class
  Last modified May 29, 2022; size 3519 bytes
  SHA-256 checksum ed2bdb98ce26259d6c8de8139539da80f506019063088081bca7a4b8e0134128
  Compiled from "ELFAnalyser.java"
class com.sun.jna.ELFAnalyser$ELFSectionHeaders
  minor version: 0
  major version: 50
  flags: (0x0020) ACC_SUPER
  this_class: #40                         // com/sun/jna/ELFAnalyser$ELFSectionHeaders
  super_class: #41                        // java/lang/Object
  interfaces: 0, fields: 1, methods: 2, attributes: 2
Constant pool:
    #1 = Methodref          #41.#97       // java/lang/Object."<init>":()V
    #2 = Class              #98           // java/util/ArrayList
    #3 = Methodref          #2.#97        // java/util/ArrayList."<init>":()V
    #4 = Fieldref           #40.#99       // com/sun/jna/ELFAnalyser$ELFSectionHeaders.entries:Ljava/util/List;
    #5 = Methodref          #100.#101     // java/nio/ByteBuffer.getLong:(I)J
    #6 = Methodref          #100.#102     // java/nio/ByteBuffer.getShort:(I)S
    #7 = Methodref          #100.#103     // java/nio/ByteBuffer.getInt:(I)I
    #8 = Methodref          #100.#104     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
    #9 = Fieldref           #105.#106     // java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
   #10 = Fieldref           #105.#107     // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
   #11 = Methodref          #100.#108     // java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
   #12 = Methodref          #109.#110     // java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
   #13 = Methodref          #111.#112     // java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
   #14 = Methodref          #100.#113     // java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
   #15 = Methodref          #100.#114     // java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
   #16 = Methodref          #100.#115     // java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
   #17 = Methodref          #100.#116     // java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
   #18 = Class              #118          // com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry
   #19 = Methodref          #18.#119      // com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry."<init>":(ZLjava/nio/ByteBuffer;)V
   #20 = InterfaceMethodref #120.#121     // java/util/List.add:(Ljava/lang/Object;)Z
   #21 = InterfaceMethodref #120.#122     // java/util/List.get:(I)Ljava/lang/Object;
   #22 = Methodref          #18.#123      // com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.getSize:()I
   #23 = Methodref          #18.#124      // com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.getOffset:()I
   #24 = Methodref          #100.#125     // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
   #25 = Class              #126          // java/io/ByteArrayOutputStream
   #26 = Methodref          #25.#127      // java/io/ByteArrayOutputStream."<init>":(I)V
   #27 = InterfaceMethodref #120.#128     // java/util/List.iterator:()Ljava/util/Iterator;
   #28 = InterfaceMethodref #129.#130     // java/util/Iterator.hasNext:()Z
   #29 = InterfaceMethodref #129.#131     // java/util/Iterator.next:()Ljava/lang/Object;
   #30 = Methodref          #25.#132      // java/io/ByteArrayOutputStream.reset:()V
   #31 = Methodref          #18.#133      // com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.getNameOffset:()I
   #32 = Methodref          #134.#113     // java/nio/Buffer.position:(I)Ljava/nio/Buffer;
   #33 = Methodref          #100.#135     // java/nio/ByteBuffer.position:()I
   #34 = Methodref          #100.#136     // java/nio/ByteBuffer.limit:()I
   #35 = Methodref          #100.#137     // java/nio/ByteBuffer.get:()B
   #36 = Methodref          #25.#138      // java/io/ByteArrayOutputStream.write:(I)V
   #37 = String             #139          // ASCII
   #38 = Methodref          #25.#140      // java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
   #39 = Methodref          #18.#141      // com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.setName:(Ljava/lang/String;)V
   #40 = Class              #142          // com/sun/jna/ELFAnalyser$ELFSectionHeaders
   #41 = Class              #143          // java/lang/Object
   #42 = Utf8               entries
   #43 = Utf8               Ljava/util/List;
   #44 = Utf8               Signature
   #45 = Utf8               ELFSectionHeaderEntry
   #46 = Utf8               InnerClasses
   #47 = Utf8               Ljava/util/List<Lcom/sun/jna/ELFAnalyser$ELFSectionHeaderEntry;>;
   #48 = Utf8               <init>
   #49 = Utf8               (ZZLjava/nio/ByteBuffer;Ljava/io/RandomAccessFile;)V
   #50 = Utf8               Code
   #51 = Utf8               LineNumberTable
   #52 = Utf8               LocalVariableTable
   #53 = Utf8               shoff
   #54 = Utf8               J
   #55 = Utf8               shentsize
   #56 = Utf8               I
   #57 = Utf8               shnum
   #58 = Utf8               shstrndx
   #59 = Utf8               S
   #60 = Utf8               header
   #61 = Utf8               Ljava/nio/ByteBuffer;
   #62 = Utf8               i
   #63 = Utf8               b
   #64 = Utf8               B
   #65 = Utf8               eshe
   #66 = Utf8               Lcom/sun/jna/ELFAnalyser$ELFSectionHeaderEntry;
   #67 = Utf8               this
   #68 = Utf8               ELFSectionHeaders
   #69 = Utf8               Lcom/sun/jna/ELFAnalyser$ELFSectionHeaders;
   #70 = Utf8               _64bit
   #71 = Utf8               Z
   #72 = Utf8               bigEndian
   #73 = Utf8               headerData
   #74 = Utf8               raf
   #75 = Utf8               Ljava/io/RandomAccessFile;
   #76 = Utf8               tableLength
   #77 = Utf8               data
   #78 = Utf8               stringTable
   #79 = Utf8               stringBuffer
   #80 = Utf8               baos
   #81 = Utf8               Ljava/io/ByteArrayOutputStream;
   #82 = Utf8               StackMapTable
   #83 = Class              #142          // com/sun/jna/ELFAnalyser$ELFSectionHeaders
   #84 = Class              #144          // java/nio/ByteBuffer
   #85 = Class              #145          // java/io/RandomAccessFile
   #86 = Class              #146          // java/nio/ByteOrder
   #87 = Class              #118          // com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry
   #88 = Class              #126          // java/io/ByteArrayOutputStream
   #89 = Class              #147          // java/util/Iterator
   #90 = Utf8               Exceptions
   #91 = Class              #148          // java/io/IOException
   #92 = Utf8               getEntries
   #93 = Utf8               ()Ljava/util/List;
   #94 = Utf8               ()Ljava/util/List<Lcom/sun/jna/ELFAnalyser$ELFSectionHeaderEntry;>;
   #95 = Utf8               SourceFile
   #96 = Utf8               ELFAnalyser.java
   #97 = NameAndType        #48:#149      // "<init>":()V
   #98 = Utf8               java/util/ArrayList
   #99 = NameAndType        #42:#43       // entries:Ljava/util/List;
  #100 = Class              #144          // java/nio/ByteBuffer
  #101 = NameAndType        #150:#151     // getLong:(I)J
  #102 = NameAndType        #152:#153     // getShort:(I)S
  #103 = NameAndType        #154:#155     // getInt:(I)I
  #104 = NameAndType        #156:#157     // allocate:(I)Ljava/nio/ByteBuffer;
  #105 = Class              #146          // java/nio/ByteOrder
  #106 = NameAndType        #158:#159     // BIG_ENDIAN:Ljava/nio/ByteOrder;
  #107 = NameAndType        #160:#159     // LITTLE_ENDIAN:Ljava/nio/ByteOrder;
  #108 = NameAndType        #161:#162     // order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
  #109 = Class              #145          // java/io/RandomAccessFile
  #110 = NameAndType        #163:#164     // getChannel:()Ljava/nio/channels/FileChannel;
  #111 = Class              #165          // java/nio/channels/FileChannel
  #112 = NameAndType        #166:#167     // read:(Ljava/nio/ByteBuffer;J)I
  #113 = NameAndType        #168:#169     // position:(I)Ljava/nio/Buffer;
  #114 = NameAndType        #170:#171     // slice:()Ljava/nio/ByteBuffer;
  #115 = NameAndType        #161:#172     // order:()Ljava/nio/ByteOrder;
  #116 = NameAndType        #173:#169     // limit:(I)Ljava/nio/Buffer;
  #117 = Class              #174          // com/sun/jna/ELFAnalyser
  #118 = Utf8               com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry
  #119 = NameAndType        #48:#175      // "<init>":(ZLjava/nio/ByteBuffer;)V
  #120 = Class              #176          // java/util/List
  #121 = NameAndType        #177:#178     // add:(Ljava/lang/Object;)Z
  #122 = NameAndType        #179:#180     // get:(I)Ljava/lang/Object;
  #123 = NameAndType        #181:#182     // getSize:()I
  #124 = NameAndType        #183:#182     // getOffset:()I
  #125 = NameAndType        #184:#185     // rewind:()Ljava/nio/Buffer;
  #126 = Utf8               java/io/ByteArrayOutputStream
  #127 = NameAndType        #48:#186      // "<init>":(I)V
  #128 = NameAndType        #187:#188     // iterator:()Ljava/util/Iterator;
  #129 = Class              #147          // java/util/Iterator
  #130 = NameAndType        #189:#190     // hasNext:()Z
  #131 = NameAndType        #191:#192     // next:()Ljava/lang/Object;
  #132 = NameAndType        #193:#149     // reset:()V
  #133 = NameAndType        #194:#182     // getNameOffset:()I
  #134 = Class              #195          // java/nio/Buffer
  #135 = NameAndType        #168:#182     // position:()I
  #136 = NameAndType        #173:#182     // limit:()I
  #137 = NameAndType        #179:#196     // get:()B
  #138 = NameAndType        #197:#186     // write:(I)V
  #139 = Utf8               ASCII
  #140 = NameAndType        #198:#199     // toString:(Ljava/lang/String;)Ljava/lang/String;
  #141 = NameAndType        #200:#201     // setName:(Ljava/lang/String;)V
  #142 = Utf8               com/sun/jna/ELFAnalyser$ELFSectionHeaders
  #143 = Utf8               java/lang/Object
  #144 = Utf8               java/nio/ByteBuffer
  #145 = Utf8               java/io/RandomAccessFile
  #146 = Utf8               java/nio/ByteOrder
  #147 = Utf8               java/util/Iterator
  #148 = Utf8               java/io/IOException
  #149 = Utf8               ()V
  #150 = Utf8               getLong
  #151 = Utf8               (I)J
  #152 = Utf8               getShort
  #153 = Utf8               (I)S
  #154 = Utf8               getInt
  #155 = Utf8               (I)I
  #156 = Utf8               allocate
  #157 = Utf8               (I)Ljava/nio/ByteBuffer;
  #158 = Utf8               BIG_ENDIAN
  #159 = Utf8               Ljava/nio/ByteOrder;
  #160 = Utf8               LITTLE_ENDIAN
  #161 = Utf8               order
  #162 = Utf8               (Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
  #163 = Utf8               getChannel
  #164 = Utf8               ()Ljava/nio/channels/FileChannel;
  #165 = Utf8               java/nio/channels/FileChannel
  #166 = Utf8               read
  #167 = Utf8               (Ljava/nio/ByteBuffer;J)I
  #168 = Utf8               position
  #169 = Utf8               (I)Ljava/nio/Buffer;
  #170 = Utf8               slice
  #171 = Utf8               ()Ljava/nio/ByteBuffer;
  #172 = Utf8               ()Ljava/nio/ByteOrder;
  #173 = Utf8               limit
  #174 = Utf8               com/sun/jna/ELFAnalyser
  #175 = Utf8               (ZLjava/nio/ByteBuffer;)V
  #176 = Utf8               java/util/List
  #177 = Utf8               add
  #178 = Utf8               (Ljava/lang/Object;)Z
  #179 = Utf8               get
  #180 = Utf8               (I)Ljava/lang/Object;
  #181 = Utf8               getSize
  #182 = Utf8               ()I
  #183 = Utf8               getOffset
  #184 = Utf8               rewind
  #185 = Utf8               ()Ljava/nio/Buffer;
  #186 = Utf8               (I)V
  #187 = Utf8               iterator
  #188 = Utf8               ()Ljava/util/Iterator;
  #189 = Utf8               hasNext
  #190 = Utf8               ()Z
  #191 = Utf8               next
  #192 = Utf8               ()Ljava/lang/Object;
  #193 = Utf8               reset
  #194 = Utf8               getNameOffset
  #195 = Utf8               java/nio/Buffer
  #196 = Utf8               ()B
  #197 = Utf8               write
  #198 = Utf8               toString
  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #200 = Utf8               setName
  #201 = Utf8               (Ljava/lang/String;)V
{
  private final java.util.List<com.sun.jna.ELFAnalyser$ELFSectionHeaderEntry> entries;
    descriptor: Ljava/util/List;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #47                          // Ljava/util/List<Lcom/sun/jna/ELFAnalyser$ELFSectionHeaderEntry;>;

  public com.sun.jna.ELFAnalyser$ELFSectionHeaders(boolean, boolean, java.nio.ByteBuffer, java.io.RandomAccessFile) throws java.io.IOException;
    descriptor: (ZZLjava/nio/ByteBuffer;Ljava/io/RandomAccessFile;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=18, args_size=5
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #2                  // class java/util/ArrayList
         8: dup
         9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
        12: putfield      #4                  // Field entries:Ljava/util/List;
        15: iload_1
        16: ifeq          54
        19: aload_3
        20: bipush        40
        22: invokevirtual #5                  // Method java/nio/ByteBuffer.getLong:(I)J
        25: lstore        5
        27: aload_3
        28: bipush        58
        30: invokevirtual #6                  // Method java/nio/ByteBuffer.getShort:(I)S
        33: istore        7
        35: aload_3
        36: bipush        60
        38: invokevirtual #6                  // Method java/nio/ByteBuffer.getShort:(I)S
        41: istore        8
        43: aload_3
        44: bipush        62
        46: invokevirtual #6                  // Method java/nio/ByteBuffer.getShort:(I)S
        49: istore        9
        51: goto          87
        54: aload_3
        55: bipush        32
        57: invokevirtual #7                  // Method java/nio/ByteBuffer.getInt:(I)I
        60: i2l
        61: lstore        5
        63: aload_3
        64: bipush        46
        66: invokevirtual #6                  // Method java/nio/ByteBuffer.getShort:(I)S
        69: istore        7
        71: aload_3
        72: bipush        48
        74: invokevirtual #6                  // Method java/nio/ByteBuffer.getShort:(I)S
        77: istore        8
        79: aload_3
        80: bipush        50
        82: invokevirtual #6                  // Method java/nio/ByteBuffer.getShort:(I)S
        85: istore        9
        87: iload         8
        89: iload         7
        91: imul
        92: istore        10
        94: iload         10
        96: invokestatic  #8                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        99: astore        11
       101: aload         11
       103: iload_2
       104: ifeq          113
       107: getstatic     #9                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       110: goto          116
       113: getstatic     #10                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       116: invokevirtual #11                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
       119: pop
       120: aload         4
       122: invokevirtual #12                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
       125: aload         11
       127: lload         5
       129: invokevirtual #13                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
       132: pop
       133: iconst_0
       134: istore        12
       136: iload         12
       138: iload         8
       140: if_icmpge     206
       143: aload         11
       145: iload         12
       147: iload         7
       149: imul
       150: invokevirtual #14                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       153: pop
       154: aload         11
       156: invokevirtual #15                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
       159: astore        13
       161: aload         13
       163: aload         11
       165: invokevirtual #16                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
       168: invokevirtual #11                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
       171: pop
       172: aload         13
       174: iload         7
       176: invokevirtual #17                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
       179: pop
       180: aload_0
       181: getfield      #4                  // Field entries:Ljava/util/List;
       184: new           #18                 // class com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry
       187: dup
       188: iload_1
       189: aload         13
       191: invokespecial #19                 // Method com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry."<init>":(ZLjava/nio/ByteBuffer;)V
       194: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       199: pop
       200: iinc          12, 1
       203: goto          136
       206: aload_0
       207: getfield      #4                  // Field entries:Ljava/util/List;
       210: iload         9
       212: invokeinterface #21,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       217: checkcast     #18                 // class com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry
       220: astore        12
       222: aload         12
       224: invokevirtual #22                 // Method com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.getSize:()I
       227: invokestatic  #8                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       230: astore        13
       232: aload         13
       234: iload_2
       235: ifeq          244
       238: getstatic     #9                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       241: goto          247
       244: getstatic     #10                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       247: invokevirtual #11                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
       250: pop
       251: aload         4
       253: invokevirtual #12                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
       256: aload         13
       258: aload         12
       260: invokevirtual #23                 // Method com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.getOffset:()I
       263: i2l
       264: invokevirtual #13                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
       267: pop
       268: aload         13
       270: invokevirtual #24                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
       273: pop
       274: new           #25                 // class java/io/ByteArrayOutputStream
       277: dup
       278: bipush        20
       280: invokespecial #26                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
       283: astore        14
       285: aload_0
       286: getfield      #4                  // Field entries:Ljava/util/List;
       289: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       294: astore        15
       296: aload         15
       298: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       303: ifeq          387
       306: aload         15
       308: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       313: checkcast     #18                 // class com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry
       316: astore        16
       318: aload         14
       320: invokevirtual #30                 // Method java/io/ByteArrayOutputStream.reset:()V
       323: aload         13
       325: aload         16
       327: invokevirtual #31                 // Method com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.getNameOffset:()I
       330: invokevirtual #32                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
       333: pop
       334: aload         13
       336: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
       339: aload         13
       341: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:()I
       344: if_icmpge     372
       347: aload         13
       349: invokevirtual #35                 // Method java/nio/ByteBuffer.get:()B
       352: istore        17
       354: iload         17
       356: ifne          362
       359: goto          372
       362: aload         14
       364: iload         17
       366: invokevirtual #36                 // Method java/io/ByteArrayOutputStream.write:(I)V
       369: goto          334
       372: aload         16
       374: aload         14
       376: ldc           #37                 // String ASCII
       378: invokevirtual #38                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
       381: invokevirtual #39                 // Method com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry.setName:(Ljava/lang/String;)V
       384: goto          296
       387: return
      LineNumberTable:
        line 235: 0
        line 233: 4
        line 240: 15
        line 241: 19
        line 242: 27
        line 243: 35
        line 244: 43
        line 246: 54
        line 247: 63
        line 248: 71
        line 249: 79
        line 252: 87
        line 254: 94
        line 255: 101
        line 256: 120
        line 258: 133
        line 259: 143
        line 260: 154
        line 261: 161
        line 262: 172
        line 263: 180
        line 258: 200
        line 266: 206
        line 267: 222
        line 268: 232
        line 269: 251
        line 270: 268
        line 272: 274
        line 273: 285
        line 274: 318
        line 276: 323
        line 278: 334
        line 279: 347
        line 280: 354
        line 281: 359
        line 283: 362
        line 285: 369
        line 287: 372
        line 288: 384
        line 289: 387
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      27     5 shoff   J
           35      19     7 shentsize   I
           43      11     8 shnum   I
           51       3     9 shstrndx   S
          161      39    13 header   Ljava/nio/ByteBuffer;
          136      70    12     i   I
          354      15    17     b   B
          318      66    16  eshe   Lcom/sun/jna/ELFAnalyser$ELFSectionHeaderEntry;
            0     388     0  this   Lcom/sun/jna/ELFAnalyser$ELFSectionHeaders;
            0     388     1 _64bit   Z
            0     388     2 bigEndian   Z
            0     388     3 headerData   Ljava/nio/ByteBuffer;
            0     388     4   raf   Ljava/io/RandomAccessFile;
           63     325     5 shoff   J
           71     317     7 shentsize   I
           79     309     8 shnum   I
           87     301     9 shstrndx   S
           94     294    10 tableLength   I
          101     287    11  data   Ljava/nio/ByteBuffer;
          222     166    12 stringTable   Lcom/sun/jna/ELFAnalyser$ELFSectionHeaderEntry;
          232     156    13 stringBuffer   Ljava/nio/ByteBuffer;
          285     103    14  baos   Ljava/io/ByteArrayOutputStream;
      StackMapTable: number_of_entries = 13
        frame_type = 255 /* full_frame */
          offset_delta = 54
          locals = [ class com/sun/jna/ELFAnalyser$ELFSectionHeaders, int, int, class java/nio/ByteBuffer, class java/io/RandomAccessFile ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [ class com/sun/jna/ELFAnalyser$ELFSectionHeaders, int, int, class java/nio/ByteBuffer, class java/io/RandomAccessFile, long, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class com/sun/jna/ELFAnalyser$ELFSectionHeaders, int, int, class java/nio/ByteBuffer, class java/io/RandomAccessFile, long, int, int, int, int, class java/nio/ByteBuffer ]
          stack = [ class java/nio/ByteBuffer ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class com/sun/jna/ELFAnalyser$ELFSectionHeaders, int, int, class java/nio/ByteBuffer, class java/io/RandomAccessFile, long, int, int, int, int, class java/nio/ByteBuffer ]
          stack = [ class java/nio/ByteBuffer, class java/nio/ByteOrder ]
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 69
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class com/sun/jna/ELFAnalyser$ELFSectionHeaders, int, int, class java/nio/ByteBuffer, class java/io/RandomAccessFile, long, int, int, int, int, class java/nio/ByteBuffer, class com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry, class java/nio/ByteBuffer ]
          stack = [ class java/nio/ByteBuffer ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class com/sun/jna/ELFAnalyser$ELFSectionHeaders, int, int, class java/nio/ByteBuffer, class java/io/RandomAccessFile, long, int, int, int, int, class java/nio/ByteBuffer, class com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry, class java/nio/ByteBuffer ]
          stack = [ class java/nio/ByteBuffer, class java/nio/ByteOrder ]
        frame_type = 253 /* append */
          offset_delta = 48
          locals = [ class java/io/ByteArrayOutputStream, class java/util/Iterator ]
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry ]
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 249 /* chop */
          offset_delta = 14
    Exceptions:
      throws java.io.IOException

  public java.util.List<com.sun.jna.ELFAnalyser$ELFSectionHeaderEntry> getEntries();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field entries:Ljava/util/List;
         4: areturn
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/ELFAnalyser$ELFSectionHeaders;
    Signature: #94                          // ()Ljava/util/List<Lcom/sun/jna/ELFAnalyser$ELFSectionHeaderEntry;>;
}
SourceFile: "ELFAnalyser.java"
InnerClasses:
  static #45= #18 of #117;                // ELFSectionHeaderEntry=class com/sun/jna/ELFAnalyser$ELFSectionHeaderEntry of class com/sun/jna/ELFAnalyser
  static #68= #40 of #117;                // ELFSectionHeaders=class com/sun/jna/ELFAnalyser$ELFSectionHeaders of class com/sun/jna/ELFAnalyser
