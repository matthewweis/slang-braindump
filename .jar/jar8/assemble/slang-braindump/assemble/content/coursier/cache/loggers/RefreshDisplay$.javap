Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/cache/loggers/RefreshDisplay$.class
  Last modified May 29, 2022; size 3515 bytes
  SHA-256 checksum 1a07fdac5fa5565876b5ae34cdd5ffd070ba216c4fad2cb5b7ebbd65bf3055f2
  Compiled from "RefreshDisplay.scala"
public final class coursier.cache.loggers.RefreshDisplay$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/loggers/RefreshDisplay$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               coursier/cache/loggers/RefreshDisplay$
    #2 = Class              #1            // coursier/cache/loggers/RefreshDisplay$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               RefreshDisplay.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               MODULE$
   #12 = Utf8               Lcoursier/cache/loggers/RefreshDisplay$;
   #13 = Utf8               isWindows
   #14 = Utf8               Z
   #15 = Utf8               bitmap$0
   #16 = Utf8               <clinit>
   #17 = Utf8               ()V
   #18 = Utf8               <init>
   #19 = NameAndType        #18:#17       // "<init>":()V
   #20 = Methodref          #2.#19        // coursier/cache/loggers/RefreshDisplay$."<init>":()V
   #21 = NameAndType        #11:#12       // MODULE$:Lcoursier/cache/loggers/RefreshDisplay$;
   #22 = Fieldref           #2.#21        // coursier/cache/loggers/RefreshDisplay$.MODULE$:Lcoursier/cache/loggers/RefreshDisplay$;
   #23 = Utf8               isWindows$lzycompute
   #24 = Utf8               ()Z
   #25 = NameAndType        #15:#14       // bitmap$0:Z
   #26 = Fieldref           #2.#25        // coursier/cache/loggers/RefreshDisplay$.bitmap$0:Z
   #27 = Utf8               scala/sys/package$
   #28 = Class              #27           // scala/sys/package$
   #29 = Utf8               Lscala/sys/package$;
   #30 = NameAndType        #11:#29       // MODULE$:Lscala/sys/package$;
   #31 = Fieldref           #28.#30       // scala/sys/package$.MODULE$:Lscala/sys/package$;
   #32 = Utf8               props
   #33 = Utf8               ()Lscala/sys/SystemProperties;
   #34 = NameAndType        #32:#33       // props:()Lscala/sys/SystemProperties;
   #35 = Methodref          #28.#34       // scala/sys/package$.props:()Lscala/sys/SystemProperties;
   #36 = Utf8               os.name
   #37 = String             #36           // os.name
   #38 = Utf8               scala/sys/SystemProperties
   #39 = Class              #38           // scala/sys/SystemProperties
   #40 = Utf8               get
   #41 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #42 = NameAndType        #40:#41       // get:(Ljava/lang/String;)Lscala/Option;
   #43 = Methodref          #39.#42       // scala/sys/SystemProperties.get:(Ljava/lang/String;)Lscala/Option;
   #44 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #45 = MethodType         #44           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #46 = Utf8               $anonfun$isWindows$1
   #47 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #48 = NameAndType        #46:#47       // $anonfun$isWindows$1:(Ljava/lang/String;)Ljava/lang/String;
   #49 = Methodref          #2.#48        // coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$1:(Ljava/lang/String;)Ljava/lang/String;
   #50 = MethodHandle       6:#49         // REF_invokeStatic coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$1:(Ljava/lang/String;)Ljava/lang/String;
   #51 = MethodType         #47           //  (Ljava/lang/String;)Ljava/lang/String;
   #52 = Integer            5
   #53 = Integer            1
   #54 = Utf8               java/lang/invoke/LambdaMetafactory
   #55 = Class              #54           // java/lang/invoke/LambdaMetafactory
   #56 = Utf8               altMetafactory
   #57 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #58 = NameAndType        #56:#57       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #59 = Methodref          #55.#58       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #60 = MethodHandle       6:#59         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #61 = Utf8               apply
   #62 = Utf8               ()Lscala/Function1;
   #63 = NameAndType        #61:#62       // apply:()Lscala/Function1;
   #64 = InvokeDynamic      #0:#63        // #0:apply:()Lscala/Function1;
   #65 = Utf8               scala/Option
   #66 = Class              #65           // scala/Option
   #67 = Utf8               map
   #68 = Utf8               (Lscala/Function1;)Lscala/Option;
   #69 = NameAndType        #67:#68       // map:(Lscala/Function1;)Lscala/Option;
   #70 = Methodref          #66.#69       // scala/Option.map:(Lscala/Function1;)Lscala/Option;
   #71 = Utf8               $anonfun$isWindows$2$adapted
   #72 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
   #73 = NameAndType        #71:#72       // $anonfun$isWindows$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
   #74 = Methodref          #2.#73        // coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
   #75 = MethodHandle       6:#74         // REF_invokeStatic coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
   #76 = MethodType         #72           //  (Ljava/lang/String;)Ljava/lang/Object;
   #77 = InvokeDynamic      #1:#63        // #1:apply:()Lscala/Function1;
   #78 = Utf8               exists
   #79 = Utf8               (Lscala/Function1;)Z
   #80 = NameAndType        #78:#79       // exists:(Lscala/Function1;)Z
   #81 = Methodref          #66.#80       // scala/Option.exists:(Lscala/Function1;)Z
   #82 = NameAndType        #13:#14       // isWindows:Z
   #83 = Fieldref           #2.#82        // coursier/cache/loggers/RefreshDisplay$.isWindows:Z
   #84 = Utf8               java/lang/Throwable
   #85 = Class              #84           // java/lang/Throwable
   #86 = Utf8               this
   #87 = NameAndType        #23:#24       // isWindows$lzycompute:()Z
   #88 = Methodref          #2.#87        // coursier/cache/loggers/RefreshDisplay$.isWindows$lzycompute:()Z
   #89 = Utf8               truncated
   #90 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
   #91 = Utf8               s
   #92 = Utf8               width
   #93 = Utf8               java/lang/String
   #94 = Class              #93           // java/lang/String
   #95 = Utf8               length
   #96 = Utf8               ()I
   #97 = NameAndType        #95:#96       // length:()I
   #98 = Methodref          #94.#97       // java/lang/String.length:()I
   #99 = NameAndType        #13:#24       // isWindows:()Z
  #100 = Methodref          #2.#99        // coursier/cache/loggers/RefreshDisplay$.isWindows:()Z
  #101 = Utf8               java/lang/StringBuilder
  #102 = Class              #101          // java/lang/StringBuilder
  #103 = Integer            3
  #104 = Utf8               (I)V
  #105 = NameAndType        #18:#104      // "<init>":(I)V
  #106 = Methodref          #102.#105     // java/lang/StringBuilder."<init>":(I)V
  #107 = Utf8               scala/collection/StringOps$
  #108 = Class              #107          // scala/collection/StringOps$
  #109 = Utf8               Lscala/collection/StringOps$;
  #110 = NameAndType        #11:#109      // MODULE$:Lscala/collection/StringOps$;
  #111 = Fieldref           #108.#110     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #112 = Utf8               scala/Predef$
  #113 = Class              #112          // scala/Predef$
  #114 = Utf8               Lscala/Predef$;
  #115 = NameAndType        #11:#114      // MODULE$:Lscala/Predef$;
  #116 = Fieldref           #113.#115     // scala/Predef$.MODULE$:Lscala/Predef$;
  #117 = Utf8               augmentString
  #118 = NameAndType        #117:#47      // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #119 = Methodref          #113.#118     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #120 = Utf8               take$extension
  #121 = NameAndType        #120:#90      // take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #122 = Methodref          #108.#121     // scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #123 = Utf8               append
  #124 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #125 = NameAndType        #123:#124     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #126 = Methodref          #102.#125     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #127 = Utf8               ...
  #128 = String             #127          // ...
  #129 = Utf8               toString
  #130 = Utf8               ()Ljava/lang/String;
  #131 = NameAndType        #129:#130     // toString:()Ljava/lang/String;
  #132 = Methodref          #102.#131     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #133 = Utf8               …
  #134 = String             #133          // …
  #135 = Utf8               Ljava/lang/String;
  #136 = Utf8               I
  #137 = Utf8               x$1
  #138 = Utf8               java/util/Locale
  #139 = Class              #138          // java/util/Locale
  #140 = Utf8               ROOT
  #141 = Utf8               Ljava/util/Locale;
  #142 = NameAndType        #140:#141     // ROOT:Ljava/util/Locale;
  #143 = Fieldref           #139.#142     // java/util/Locale.ROOT:Ljava/util/Locale;
  #144 = Utf8               toLowerCase
  #145 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #146 = NameAndType        #144:#145     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #147 = Methodref          #94.#146      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #148 = Utf8               $anonfun$isWindows$2
  #149 = Utf8               (Ljava/lang/String;)Z
  #150 = Utf8               x$2
  #151 = Utf8               windows
  #152 = String             #151          // windows
  #153 = Utf8               contains
  #154 = Utf8               (Ljava/lang/CharSequence;)Z
  #155 = NameAndType        #153:#154     // contains:(Ljava/lang/CharSequence;)Z
  #156 = Methodref          #94.#155      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #157 = Methodref          #4.#19        // java/lang/Object."<init>":()V
  #158 = NameAndType        #148:#149     // $anonfun$isWindows$2:(Ljava/lang/String;)Z
  #159 = Methodref          #2.#158       // coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$2:(Ljava/lang/String;)Z
  #160 = Utf8               scala/runtime/BoxesRunTime
  #161 = Class              #160          // scala/runtime/BoxesRunTime
  #162 = Utf8               boxToBoolean
  #163 = Utf8               (Z)Ljava/lang/Boolean;
  #164 = NameAndType        #162:#163     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #165 = Methodref          #161.#164     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #166 = Utf8               $deserializeLambda$
  #167 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #168 = Utf8               scala/runtime/LambdaDeserialize
  #169 = Class              #168          // scala/runtime/LambdaDeserialize
  #170 = Utf8               bootstrap
  #171 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #172 = NameAndType        #170:#171     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #173 = Methodref          #169.#172     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #174 = MethodHandle       6:#173        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #175 = Utf8               lambdaDeserialize
  #176 = NameAndType        #175:#167     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #177 = InvokeDynamic      #2:#176       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #178 = Utf8               Code
  #179 = Utf8               LineNumberTable
  #180 = Utf8               StackMapTable
  #181 = Utf8               LocalVariableTable
  #182 = Utf8               MethodParameters
  #183 = Utf8               InnerClasses
  #184 = Utf8               SourceFile
  #185 = Utf8               BootstrapMethods
  #186 = Utf8               ScalaInlineInfo
  #187 = Utf8               Scala
{
  public static final coursier.cache.loggers.RefreshDisplay$ MODULE$;
    descriptor: Lcoursier/cache/loggers/RefreshDisplay$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static boolean isWindows;
    descriptor: Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/cache/loggers/RefreshDisplay$
         3: dup
         4: invokespecial #20                 // Method "<init>":()V
         7: putstatic     #22                 // Field MODULE$:Lcoursier/cache/loggers/RefreshDisplay$;
        10: return
      LineNumberTable:
        line 28: 0

  private boolean isWindows$lzycompute();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #26                 // Field bitmap$0:Z
         7: ifne          44
        10: getstatic     #31                 // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        13: invokevirtual #35                 // Method scala/sys/package$.props:()Lscala/sys/SystemProperties;
        16: ldc           #37                 // String os.name
        18: invokevirtual #43                 // Method scala/sys/SystemProperties.get:(Ljava/lang/String;)Lscala/Option;
        21: invokedynamic #64,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        26: invokevirtual #70                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        29: invokedynamic #77,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
        34: invokevirtual #81                 // Method scala/Option.exists:(Lscala/Function1;)Z
        37: putstatic     #83                 // Field isWindows:Z
        40: iconst_1
        41: putstatic     #26                 // Field bitmap$0:Z
        44: aload_1
        45: monitorexit
        46: goto          52
        49: aload_1
        50: monitorexit
        51: athrow
        52: getstatic     #83                 // Field isWindows:Z
        55: ireturn
      Exception table:
         from    to  target type
             4    44    49   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 44
          locals = [ class coursier/cache/loggers/RefreshDisplay$ ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 30: 0
        line 31: 10
        line 32: 16
        line 33: 21
        line 34: 29
        line 30: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lcoursier/cache/loggers/RefreshDisplay$;

  private boolean isWindows();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #26                 // Field bitmap$0:Z
         3: ifne          13
         6: aload_0
         7: invokespecial #88                 // Method isWindows$lzycompute:()Z
        10: goto          16
        13: getstatic     #83                 // Field isWindows:Z
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/cache/loggers/RefreshDisplay$;

  public java.lang.String truncated(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_1
         1: invokevirtual #98                 // Method java/lang/String.length:()I
         4: iload_2
         5: if_icmpgt     12
         8: aload_1
         9: goto          94
        12: aload_0
        13: invokespecial #100                // Method isWindows:()Z
        16: ifeq          58
        19: new           #102                // class java/lang/StringBuilder
        22: dup
        23: ldc           #103                // int 3
        25: invokespecial #106                // Method java/lang/StringBuilder."<init>":(I)V
        28: getstatic     #111                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        31: getstatic     #116                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        34: aload_1
        35: invokevirtual #119                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        38: iload_2
        39: iconst_4
        40: isub
        41: invokevirtual #122                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        44: invokevirtual #126                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: ldc           #128                // String ...
        49: invokevirtual #126                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        52: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        55: goto          94
        58: new           #102                // class java/lang/StringBuilder
        61: dup
        62: ldc           #53                 // int 1
        64: invokespecial #106                // Method java/lang/StringBuilder."<init>":(I)V
        67: getstatic     #111                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        70: getstatic     #116                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        73: aload_1
        74: invokevirtual #119                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        77: iload_2
        78: iconst_1
        79: isub
        80: invokevirtual #122                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        83: invokevirtual #126                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: ldc           #134                // String …
        88: invokevirtual #126                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        91: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        94: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 12 /* same */
        frame_type = 45 /* same */
        frame_type = 99 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 37: 0
        line 38: 8
        line 39: 12
        line 41: 19
        line 43: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      95     0  this   Lcoursier/cache/loggers/RefreshDisplay$;
            0      95     1     s   Ljava/lang/String;
            0      95     2 width   I
    MethodParameters:
      Name                           Flags
      s                              final
      width                          final

  public static final java.lang.String $anonfun$isWindows$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #143                // Field java/util/Locale.ROOT:Ljava/util/Locale;
         4: invokevirtual #147                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final boolean $anonfun$isWindows$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #152                // String windows
         3: invokevirtual #156                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
         6: ireturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  private coursier.cache.loggers.RefreshDisplay$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #157                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 45: 0
        line 28: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshDisplay$;

  public static final java.lang.Object $anonfun$isWindows$2$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #159                // Method $anonfun$isWindows$2:(Ljava/lang/String;)Z
         4: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #177,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "RefreshDisplay.scala"
BootstrapMethods:
  0: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #50 REF_invokeStatic coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$1:(Ljava/lang/String;)Ljava/lang/String;
      #51 (Ljava/lang/String;)Ljava/lang/String;
      #52 5
      #53 1
      #51 (Ljava/lang/String;)Ljava/lang/String;
  1: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 (Ljava/lang/Object;)Ljava/lang/Object;
      #75 REF_invokeStatic coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #76 (Ljava/lang/String;)Ljava/lang/Object;
      #52 5
      #53 1
      #76 (Ljava/lang/String;)Ljava/lang/Object;
  2: #174 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #50 REF_invokeStatic coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$1:(Ljava/lang/String;)Ljava/lang/String;
      #75 REF_invokeStatic coursier/cache/loggers/RefreshDisplay$.$anonfun$isWindows$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 2E 00 2F 01 00 94 00 95 01 00 47
   00 48 01 00 12 00 11 01 00 0D 00 18 01 00 17 00
   18 01 00 59 00 5A 01
  Scala: length = 0x0 (unknown attribute)

