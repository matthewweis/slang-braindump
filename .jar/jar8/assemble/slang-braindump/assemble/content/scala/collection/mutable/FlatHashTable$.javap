Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/mutable/FlatHashTable$.class
  Last modified May 29, 2022; size 2438 bytes
  SHA-256 checksum a21295bd5208b6ac9373df74755cc04528d9020c6e36fb0a3eac797718844d1a
  Compiled from "FlatHashTable.scala"
public final class scala.collection.mutable.FlatHashTable$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/mutable/FlatHashTable$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/mutable/FlatHashTable$
    #2 = Class              #1            // scala/collection/mutable/FlatHashTable$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               FlatHashTable.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/collection/mutable/FlatHashTable$$anon$2
   #12 = Class              #11           // scala/collection/mutable/FlatHashTable$$anon$2
   #13 = Utf8               MODULE$
   #14 = Utf8               Lscala/collection/mutable/FlatHashTable$;
   #15 = Utf8               <clinit>
   #16 = Utf8               ()V
   #17 = Utf8               <init>
   #18 = NameAndType        #17:#16       // "<init>":()V
   #19 = Methodref          #2.#18        // scala/collection/mutable/FlatHashTable$."<init>":()V
   #20 = NameAndType        #13:#14       // MODULE$:Lscala/collection/mutable/FlatHashTable$;
   #21 = Fieldref           #2.#20        // scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
   #22 = Utf8               seedGenerator
   #23 = Utf8               ()Ljava/lang/ThreadLocal;
   #24 = Utf8               ()Ljava/lang/ThreadLocal<Lscala/util/Random;>;
   #25 = Methodref          #12.#18       // scala/collection/mutable/FlatHashTable$$anon$2."<init>":()V
   #26 = Utf8               this
   #27 = Utf8               defaultLoadFactor
   #28 = Utf8               ()I
   #29 = Utf8               loadFactorDenum
   #30 = Utf8               sizeForThreshold
   #31 = Utf8               (II)I
   #32 = Utf8               size
   #33 = Utf8               _loadFactor
   #34 = Utf8               scala/math/package$
   #35 = Class              #34           // scala/math/package$
   #36 = Utf8               Lscala/math/package$;
   #37 = NameAndType        #13:#36       // MODULE$:Lscala/math/package$;
   #38 = Fieldref           #35.#37       // scala/math/package$.MODULE$:Lscala/math/package$;
   #39 = NameAndType        #29:#28       // loadFactorDenum:()I
   #40 = Methodref          #2.#39        // scala/collection/mutable/FlatHashTable$.loadFactorDenum:()I
   #41 = Utf8               max
   #42 = NameAndType        #41:#31       // max:(II)I
   #43 = Methodref          #35.#42       // scala/math/package$.max:(II)I
   #44 = Utf8               I
   #45 = Utf8               newThreshold
   #46 = Utf8               scala/Predef$
   #47 = Class              #46           // scala/Predef$
   #48 = Utf8               Lscala/Predef$;
   #49 = NameAndType        #13:#48       // MODULE$:Lscala/Predef$;
   #50 = Fieldref           #47.#49       // scala/Predef$.MODULE$:Lscala/Predef$;
   #51 = Utf8               ()Ljava/lang/Object;
   #52 = MethodType         #51           //  ()Ljava/lang/Object;
   #53 = Utf8               $anonfun$newThreshold$1
   #54 = Utf8               ()Ljava/lang/String;
   #55 = NameAndType        #53:#54       // $anonfun$newThreshold$1:()Ljava/lang/String;
   #56 = Methodref          #2.#55        // scala/collection/mutable/FlatHashTable$.$anonfun$newThreshold$1:()Ljava/lang/String;
   #57 = MethodHandle       6:#56         // REF_invokeStatic scala/collection/mutable/FlatHashTable$.$anonfun$newThreshold$1:()Ljava/lang/String;
   #58 = MethodType         #54           //  ()Ljava/lang/String;
   #59 = Integer            5
   #60 = Integer            1
   #61 = Utf8               java/lang/invoke/LambdaMetafactory
   #62 = Class              #61           // java/lang/invoke/LambdaMetafactory
   #63 = Utf8               altMetafactory
   #64 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #65 = NameAndType        #63:#64       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #66 = Methodref          #62.#65       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #67 = MethodHandle       6:#66         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #68 = Utf8               apply
   #69 = Utf8               ()Lscala/Function0;
   #70 = NameAndType        #68:#69       // apply:()Lscala/Function0;
   #71 = InvokeDynamic      #0:#70        // #0:apply:()Lscala/Function0;
   #72 = Utf8               assert
   #73 = Utf8               (ZLscala/Function0;)V
   #74 = NameAndType        #72:#73       // assert:(ZLscala/Function0;)V
   #75 = Methodref          #47.#74       // scala/Predef$.assert:(ZLscala/Function0;)V
   #76 = Utf8               lf
   #77 = Utf8               loadFactor too large; must be < 0.5
   #78 = String             #77           // loadFactor too large; must be < 0.5
   #79 = Methodref          #4.#18        // java/lang/Object."<init>":()V
   #80 = Utf8               $deserializeLambda$
   #81 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #82 = Utf8               scala/runtime/LambdaDeserialize
   #83 = Class              #82           // scala/runtime/LambdaDeserialize
   #84 = Utf8               bootstrap
   #85 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #86 = NameAndType        #84:#85       // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #87 = Methodref          #83.#86       // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #88 = MethodHandle       6:#87         // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #89 = Utf8               lambdaDeserialize
   #90 = NameAndType        #89:#81       // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #91 = InvokeDynamic      #1:#90        // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #92 = Utf8               Code
   #93 = Utf8               LineNumberTable
   #94 = Utf8               LocalVariableTable
   #95 = Utf8               Signature
   #96 = Utf8               MethodParameters
   #97 = Utf8               StackMapTable
   #98 = Utf8               InnerClasses
   #99 = Utf8               SourceFile
  #100 = Utf8               BootstrapMethods
  #101 = Utf8               ScalaInlineInfo
  #102 = Utf8               Scala
{
  public static final scala.collection.mutable.FlatHashTable$ MODULE$;
    descriptor: Lscala/collection/mutable/FlatHashTable$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/collection/mutable/FlatHashTable$
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #21                 // Field MODULE$:Lscala/collection/mutable/FlatHashTable$;
        10: return
      LineNumberTable:
        line 372: 0

  public final java.lang.ThreadLocal<scala.util.Random> seedGenerator();
    descriptor: ()Ljava/lang/ThreadLocal;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: new           #12                 // class scala/collection/mutable/FlatHashTable$$anon$2
         3: dup
         4: invokespecial #25                 // Method scala/collection/mutable/FlatHashTable$$anon$2."<init>":()V
         7: areturn
      LineNumberTable:
        line 380: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/FlatHashTable$;
    Signature: #24                          // ()Ljava/lang/ThreadLocal<Lscala/util/Random;>;

  public int defaultLoadFactor();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: sipush        450
         3: ireturn
      LineNumberTable:
        line 391: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/FlatHashTable$;

  public final int loadFactorDenum();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: sipush        1000
         3: ireturn
      LineNumberTable:
        line 392: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/FlatHashTable$;

  public int sizeForThreshold(int, int);
    descriptor: (II)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: getstatic     #38                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: bipush        32
         5: iload_1
         6: i2l
         7: aload_0
         8: invokevirtual #40                 // Method loadFactorDenum:()I
        11: i2l
        12: lmul
        13: iload_2
        14: i2l
        15: ldiv
        16: l2i
        17: invokevirtual #43                 // Method scala/math/package$.max:(II)I
        20: ireturn
      LineNumberTable:
        line 394: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/mutable/FlatHashTable$;
            0      21     1  size   I
            0      21     2 _loadFactor   I
    MethodParameters:
      Name                           Flags
      size                           final
      _loadFactor                    final

  public int newThreshold(int, int);
    descriptor: (II)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: iload_1
         1: istore_3
         2: getstatic     #50                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         5: iload_3
         6: aload_0
         7: invokevirtual #40                 // Method loadFactorDenum:()I
        10: iconst_2
        11: idiv
        12: if_icmpge     19
        15: iconst_1
        16: goto          20
        19: iconst_0
        20: invokedynamic #71,  0             // InvokeDynamic #0:apply:()Lscala/Function0;
        25: invokevirtual #75                 // Method scala/Predef$.assert:(ZLscala/Function0;)V
        28: iload_2
        29: i2l
        30: iload_3
        31: i2l
        32: lmul
        33: aload_0
        34: invokevirtual #40                 // Method loadFactorDenum:()I
        37: i2l
        38: ldiv
        39: l2i
        40: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/mutable/FlatHashTable$, int, int, int ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/mutable/FlatHashTable$, int, int, int ]
          stack = [ class scala/Predef$, int ]
      LineNumberTable:
        line 397: 0
        line 398: 2
        line 399: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      38     3    lf   I
            0      41     0  this   Lscala/collection/mutable/FlatHashTable$;
            0      41     1 _loadFactor   I
            0      41     2  size   I
    MethodParameters:
      Name                           Flags
      _loadFactor                    final
      size                           final

  public static final java.lang.String $anonfun$newThreshold$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #78                 // String loadFactor too large; must be < 0.5
         2: areturn
      LineNumberTable:
        line 398: 0

  private scala.collection.mutable.FlatHashTable$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #79                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 432: 0
        line 372: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/FlatHashTable$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #91,  0             // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #12;                       // class scala/collection/mutable/FlatHashTable$$anon$2
SourceFile: "FlatHashTable.scala"
BootstrapMethods:
  0: #67 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #52 ()Ljava/lang/Object;
      #57 REF_invokeStatic scala/collection/mutable/FlatHashTable$.$anonfun$newThreshold$1:()Ljava/lang/String;
      #58 ()Ljava/lang/String;
      #59 5
      #60 1
      #58 ()Ljava/lang/String;
  1: #88 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 REF_invokeStatic scala/collection/mutable/FlatHashTable$.$anonfun$newThreshold$1:()Ljava/lang/String;
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 35 00 36 01 00 11 00 10 01 00 1B
   00 1C 01 00 1D 00 1C 01 00 2D 00 1F 01 00 16 00
   17 01 00 1E 00 1F 01
  Scala: length = 0x0 (unknown attribute)

