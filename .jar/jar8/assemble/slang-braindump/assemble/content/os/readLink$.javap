Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/readLink$.class
  Last modified May 29, 2022; size 6528 bytes
  SHA-256 checksum b6afb55e62b332310f40d6bf6ca099c8ba9449e39f46409d7d92f7597a96412f
  Compiled from "FileOps.scala"
public final class os.readLink$ extends java.lang.Object implements scala.Function1<os.Path, os.FilePath>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // os/readLink$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 32, attributes: 5
Constant pool:
    #1 = Utf8               os/readLink$
    #2 = Class              #1            // os/readLink$
    #3 = Utf8               Ljava/lang/Object;Lscala/Function1<Los/Path;Los/FilePath;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Function1
    #7 = Class              #6            // scala/Function1
    #8 = Utf8               FileOps.scala
    #9 = Utf8               os/PathChunk$RelPathChunk
   #10 = Class              #9            // os/PathChunk$RelPathChunk
   #11 = Utf8               os/PathChunk
   #12 = Class              #11           // os/PathChunk
   #13 = Utf8               RelPathChunk
   #14 = Utf8               os/PathConvertible$NioPathConvertible$
   #15 = Class              #14           // os/PathConvertible$NioPathConvertible$
   #16 = Utf8               os/PathConvertible
   #17 = Class              #16           // os/PathConvertible
   #18 = Utf8               NioPathConvertible$
   #19 = Utf8               MODULE$
   #20 = Utf8               Los/readLink$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // os/readLink$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Los/readLink$;
   #27 = Fieldref           #2.#26        // os/readLink$.MODULE$:Los/readLink$;
   #28 = Utf8               $init$
   #29 = Utf8               (Lscala/Function1;)V
   #30 = NameAndType        #28:#29       // $init$:(Lscala/Function1;)V
   #31 = InterfaceMethodref #7.#30        // scala/Function1.$init$:(Lscala/Function1;)V
   #32 = Utf8               apply$mcZD$sp
   #33 = Utf8               (D)Z
   #34 = Utf8               v1
   #35 = Utf8               apply$mcZD$sp$
   #36 = Utf8               (Lscala/Function1;D)Z
   #37 = NameAndType        #35:#36       // apply$mcZD$sp$:(Lscala/Function1;D)Z
   #38 = InterfaceMethodref #7.#37        // scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
   #39 = Utf8               this
   #40 = Utf8               D
   #41 = Utf8               apply$mcDD$sp
   #42 = Utf8               (D)D
   #43 = Utf8               apply$mcDD$sp$
   #44 = Utf8               (Lscala/Function1;D)D
   #45 = NameAndType        #43:#44       // apply$mcDD$sp$:(Lscala/Function1;D)D
   #46 = InterfaceMethodref #7.#45        // scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
   #47 = Utf8               apply$mcFD$sp
   #48 = Utf8               (D)F
   #49 = Utf8               apply$mcFD$sp$
   #50 = Utf8               (Lscala/Function1;D)F
   #51 = NameAndType        #49:#50       // apply$mcFD$sp$:(Lscala/Function1;D)F
   #52 = InterfaceMethodref #7.#51        // scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
   #53 = Utf8               apply$mcID$sp
   #54 = Utf8               (D)I
   #55 = Utf8               apply$mcID$sp$
   #56 = Utf8               (Lscala/Function1;D)I
   #57 = NameAndType        #55:#56       // apply$mcID$sp$:(Lscala/Function1;D)I
   #58 = InterfaceMethodref #7.#57        // scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
   #59 = Utf8               apply$mcJD$sp
   #60 = Utf8               (D)J
   #61 = Utf8               apply$mcJD$sp$
   #62 = Utf8               (Lscala/Function1;D)J
   #63 = NameAndType        #61:#62       // apply$mcJD$sp$:(Lscala/Function1;D)J
   #64 = InterfaceMethodref #7.#63        // scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
   #65 = Utf8               apply$mcVD$sp
   #66 = Utf8               (D)V
   #67 = Utf8               apply$mcVD$sp$
   #68 = Utf8               (Lscala/Function1;D)V
   #69 = NameAndType        #67:#68       // apply$mcVD$sp$:(Lscala/Function1;D)V
   #70 = InterfaceMethodref #7.#69        // scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
   #71 = Utf8               apply$mcZF$sp
   #72 = Utf8               (F)Z
   #73 = Utf8               apply$mcZF$sp$
   #74 = Utf8               (Lscala/Function1;F)Z
   #75 = NameAndType        #73:#74       // apply$mcZF$sp$:(Lscala/Function1;F)Z
   #76 = InterfaceMethodref #7.#75        // scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
   #77 = Utf8               F
   #78 = Utf8               apply$mcDF$sp
   #79 = Utf8               (F)D
   #80 = Utf8               apply$mcDF$sp$
   #81 = Utf8               (Lscala/Function1;F)D
   #82 = NameAndType        #80:#81       // apply$mcDF$sp$:(Lscala/Function1;F)D
   #83 = InterfaceMethodref #7.#82        // scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
   #84 = Utf8               apply$mcFF$sp
   #85 = Utf8               (F)F
   #86 = Utf8               apply$mcFF$sp$
   #87 = Utf8               (Lscala/Function1;F)F
   #88 = NameAndType        #86:#87       // apply$mcFF$sp$:(Lscala/Function1;F)F
   #89 = InterfaceMethodref #7.#88        // scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
   #90 = Utf8               apply$mcIF$sp
   #91 = Utf8               (F)I
   #92 = Utf8               apply$mcIF$sp$
   #93 = Utf8               (Lscala/Function1;F)I
   #94 = NameAndType        #92:#93       // apply$mcIF$sp$:(Lscala/Function1;F)I
   #95 = InterfaceMethodref #7.#94        // scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
   #96 = Utf8               apply$mcJF$sp
   #97 = Utf8               (F)J
   #98 = Utf8               apply$mcJF$sp$
   #99 = Utf8               (Lscala/Function1;F)J
  #100 = NameAndType        #98:#99       // apply$mcJF$sp$:(Lscala/Function1;F)J
  #101 = InterfaceMethodref #7.#100       // scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
  #102 = Utf8               apply$mcVF$sp
  #103 = Utf8               (F)V
  #104 = Utf8               apply$mcVF$sp$
  #105 = Utf8               (Lscala/Function1;F)V
  #106 = NameAndType        #104:#105     // apply$mcVF$sp$:(Lscala/Function1;F)V
  #107 = InterfaceMethodref #7.#106       // scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
  #108 = Utf8               apply$mcZI$sp
  #109 = Utf8               (I)Z
  #110 = Utf8               apply$mcZI$sp$
  #111 = Utf8               (Lscala/Function1;I)Z
  #112 = NameAndType        #110:#111     // apply$mcZI$sp$:(Lscala/Function1;I)Z
  #113 = InterfaceMethodref #7.#112       // scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
  #114 = Utf8               I
  #115 = Utf8               apply$mcDI$sp
  #116 = Utf8               (I)D
  #117 = Utf8               apply$mcDI$sp$
  #118 = Utf8               (Lscala/Function1;I)D
  #119 = NameAndType        #117:#118     // apply$mcDI$sp$:(Lscala/Function1;I)D
  #120 = InterfaceMethodref #7.#119       // scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
  #121 = Utf8               apply$mcFI$sp
  #122 = Utf8               (I)F
  #123 = Utf8               apply$mcFI$sp$
  #124 = Utf8               (Lscala/Function1;I)F
  #125 = NameAndType        #123:#124     // apply$mcFI$sp$:(Lscala/Function1;I)F
  #126 = InterfaceMethodref #7.#125       // scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
  #127 = Utf8               apply$mcII$sp
  #128 = Utf8               (I)I
  #129 = Utf8               apply$mcII$sp$
  #130 = Utf8               (Lscala/Function1;I)I
  #131 = NameAndType        #129:#130     // apply$mcII$sp$:(Lscala/Function1;I)I
  #132 = InterfaceMethodref #7.#131       // scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
  #133 = Utf8               apply$mcJI$sp
  #134 = Utf8               (I)J
  #135 = Utf8               apply$mcJI$sp$
  #136 = Utf8               (Lscala/Function1;I)J
  #137 = NameAndType        #135:#136     // apply$mcJI$sp$:(Lscala/Function1;I)J
  #138 = InterfaceMethodref #7.#137       // scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
  #139 = Utf8               apply$mcVI$sp
  #140 = Utf8               (I)V
  #141 = Utf8               apply$mcVI$sp$
  #142 = Utf8               (Lscala/Function1;I)V
  #143 = NameAndType        #141:#142     // apply$mcVI$sp$:(Lscala/Function1;I)V
  #144 = InterfaceMethodref #7.#143       // scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
  #145 = Utf8               apply$mcZJ$sp
  #146 = Utf8               (J)Z
  #147 = Utf8               apply$mcZJ$sp$
  #148 = Utf8               (Lscala/Function1;J)Z
  #149 = NameAndType        #147:#148     // apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #150 = InterfaceMethodref #7.#149       // scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #151 = Utf8               J
  #152 = Utf8               apply$mcDJ$sp
  #153 = Utf8               (J)D
  #154 = Utf8               apply$mcDJ$sp$
  #155 = Utf8               (Lscala/Function1;J)D
  #156 = NameAndType        #154:#155     // apply$mcDJ$sp$:(Lscala/Function1;J)D
  #157 = InterfaceMethodref #7.#156       // scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
  #158 = Utf8               apply$mcFJ$sp
  #159 = Utf8               (J)F
  #160 = Utf8               apply$mcFJ$sp$
  #161 = Utf8               (Lscala/Function1;J)F
  #162 = NameAndType        #160:#161     // apply$mcFJ$sp$:(Lscala/Function1;J)F
  #163 = InterfaceMethodref #7.#162       // scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
  #164 = Utf8               apply$mcIJ$sp
  #165 = Utf8               (J)I
  #166 = Utf8               apply$mcIJ$sp$
  #167 = Utf8               (Lscala/Function1;J)I
  #168 = NameAndType        #166:#167     // apply$mcIJ$sp$:(Lscala/Function1;J)I
  #169 = InterfaceMethodref #7.#168       // scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
  #170 = Utf8               apply$mcJJ$sp
  #171 = Utf8               (J)J
  #172 = Utf8               apply$mcJJ$sp$
  #173 = Utf8               (Lscala/Function1;J)J
  #174 = NameAndType        #172:#173     // apply$mcJJ$sp$:(Lscala/Function1;J)J
  #175 = InterfaceMethodref #7.#174       // scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
  #176 = Utf8               apply$mcVJ$sp
  #177 = Utf8               (J)V
  #178 = Utf8               apply$mcVJ$sp$
  #179 = Utf8               (Lscala/Function1;J)V
  #180 = NameAndType        #178:#179     // apply$mcVJ$sp$:(Lscala/Function1;J)V
  #181 = InterfaceMethodref #7.#180       // scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
  #182 = Utf8               compose
  #183 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #184 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/Path;>;)Lscala/Function1<TA;Los/FilePath;>;
  #185 = Utf8               g
  #186 = Utf8               compose$
  #187 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #188 = NameAndType        #186:#187     // compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #189 = InterfaceMethodref #7.#188       // scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #190 = Utf8               Lscala/Function1;
  #191 = Utf8               andThen
  #192 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Los/FilePath;TA;>;)Lscala/Function1<Los/Path;TA;>;
  #193 = Utf8               andThen$
  #194 = NameAndType        #193:#187     // andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #195 = InterfaceMethodref #7.#194       // scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #196 = Utf8               toString
  #197 = Utf8               ()Ljava/lang/String;
  #198 = Utf8               toString$
  #199 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #200 = NameAndType        #198:#199     // toString$:(Lscala/Function1;)Ljava/lang/String;
  #201 = InterfaceMethodref #7.#200       // scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
  #202 = Utf8               apply
  #203 = Utf8               (Los/Path;)Los/FilePath;
  #204 = Utf8               src
  #205 = Utf8               os/FilePath$
  #206 = Class              #205          // os/FilePath$
  #207 = Utf8               Los/FilePath$;
  #208 = NameAndType        #19:#207      // MODULE$:Los/FilePath$;
  #209 = Fieldref           #206.#208     // os/FilePath$.MODULE$:Los/FilePath$;
  #210 = Utf8               os/Path
  #211 = Class              #210          // os/Path
  #212 = Utf8               toNIO
  #213 = Utf8               ()Ljava/nio/file/Path;
  #214 = NameAndType        #212:#213     // toNIO:()Ljava/nio/file/Path;
  #215 = Methodref          #211.#214     // os/Path.toNIO:()Ljava/nio/file/Path;
  #216 = Utf8               java/nio/file/Files
  #217 = Class              #216          // java/nio/file/Files
  #218 = Utf8               readSymbolicLink
  #219 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #220 = NameAndType        #218:#219     // readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #221 = Methodref          #217.#220     // java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #222 = Utf8               Los/PathConvertible$NioPathConvertible$;
  #223 = NameAndType        #19:#222      // MODULE$:Los/PathConvertible$NioPathConvertible$;
  #224 = Fieldref           #15.#223      // os/PathConvertible$NioPathConvertible$.MODULE$:Los/PathConvertible$NioPathConvertible$;
  #225 = Utf8               (Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
  #226 = NameAndType        #202:#225     // apply:(Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
  #227 = Methodref          #206.#226     // os/FilePath$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
  #228 = Utf8               os/FilePath
  #229 = Class              #228          // os/FilePath
  #230 = Utf8               Los/Path;
  #231 = Utf8               absolute
  #232 = Utf8               (Los/Path;)Los/Path;
  #233 = Utf8               os/Path$
  #234 = Class              #233          // os/Path$
  #235 = Utf8               Los/Path$;
  #236 = NameAndType        #19:#235      // MODULE$:Los/Path$;
  #237 = Fieldref           #234.#236     // os/Path$.MODULE$:Los/Path$;
  #238 = Utf8               os/PathChunk$
  #239 = Class              #238          // os/PathChunk$
  #240 = Utf8               Los/PathChunk$;
  #241 = NameAndType        #19:#240      // MODULE$:Los/PathChunk$;
  #242 = Fieldref           #239.#241     // os/PathChunk$.MODULE$:Los/PathChunk$;
  #243 = Utf8               os/package$
  #244 = Class              #243          // os/package$
  #245 = Utf8               Los/package$;
  #246 = NameAndType        #19:#245      // MODULE$:Los/package$;
  #247 = Fieldref           #244.#246     // os/package$.MODULE$:Los/package$;
  #248 = Utf8               up
  #249 = Utf8               ()Los/RelPath;
  #250 = NameAndType        #248:#249     // up:()Los/RelPath;
  #251 = Methodref          #244.#250     // os/package$.up:()Los/RelPath;
  #252 = Utf8               (Los/RelPath;)Los/PathChunk$RelPathChunk;
  #253 = NameAndType        #13:#252      // RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
  #254 = Methodref          #239.#253     // os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
  #255 = Utf8               $div
  #256 = Utf8               (Los/PathChunk;)Los/Path;
  #257 = NameAndType        #255:#256     // $div:(Los/PathChunk;)Los/Path;
  #258 = Methodref          #211.#257     // os/Path.$div:(Los/PathChunk;)Los/Path;
  #259 = Utf8               (Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
  #260 = NameAndType        #202:#259     // apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
  #261 = Methodref          #234.#260     // os/Path$.apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
  #262 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #263 = NameAndType        #202:#203     // apply:(Los/Path;)Los/FilePath;
  #264 = Methodref          #2.#263       // os/readLink$.apply:(Los/Path;)Los/FilePath;
  #265 = Utf8               Ljava/lang/Object;
  #266 = Methodref          #5.#24        // java/lang/Object."<init>":()V
  #267 = Utf8               Code
  #268 = Utf8               LineNumberTable
  #269 = Utf8               LocalVariableTable
  #270 = Utf8               MethodParameters
  #271 = Utf8               Signature
  #272 = Utf8               InnerClasses
  #273 = Utf8               SourceFile
  #274 = Utf8               ScalaInlineInfo
  #275 = Utf8               Scala
{
  public static final os.readLink$ MODULE$;
    descriptor: Los/readLink$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/readLink$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Los/readLink$;
        10: getstatic     #27                 // Field MODULE$:Los/readLink$;
        13: invokestatic  #31                 // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
        16: return
      LineNumberTable:
        line 366: 0

  public boolean apply$mcZD$sp(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #38                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDD$sp(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #46                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
         5: dreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFD$sp(double);
    descriptor: (D)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #52                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
         5: freturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcID$sp(double);
    descriptor: (D)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #58                 // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJD$sp(double);
    descriptor: (D)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #64                 // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
         5: lreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVD$sp(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #70                 // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
         5: return
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZF$sp(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #76                 // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDF$sp(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #83                 // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
         5: dreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFF$sp(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #89                 // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
         5: freturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIF$sp(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #95                 // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJF$sp(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #101                // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
         5: lreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #107                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
         5: return
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZI$sp(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #113                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #120                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
         5: dreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFI$sp(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #126                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
         5: freturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #132                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJI$sp(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #138                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
         5: lreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVI$sp(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #144                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
         5: return
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZJ$sp(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #150                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDJ$sp(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #157                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
         5: dreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFJ$sp(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #163                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
         5: freturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIJ$sp(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #169                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
         5: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJJ$sp(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #175                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
         5: lreturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVJ$sp(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #181                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
         5: return
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public <A extends java.lang.Object> scala.Function1<A, os.FilePath> compose(scala.Function1<A, os.Path>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #189                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1     g   Lscala/Function1;
    Signature: #184                         // <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/Path;>;)Lscala/Function1<TA;Los/FilePath;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public <A extends java.lang.Object> scala.Function1<os.Path, A> andThen(scala.Function1<os.FilePath, A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #195                // InterfaceMethod scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/readLink$;
            0       6     1     g   Lscala/Function1;
    Signature: #192                         // <A:Ljava/lang/Object;>(Lscala/Function1<Los/FilePath;TA;>;)Lscala/Function1<Los/Path;TA;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #201                // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/readLink$;

  public os.FilePath apply(os.Path);
    descriptor: (Los/Path;)Los/FilePath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #209                // Field os/FilePath$.MODULE$:Los/FilePath$;
         3: aload_1
         4: invokevirtual #215                // Method os/Path.toNIO:()Ljava/nio/file/Path;
         7: invokestatic  #221                // Method java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
        10: getstatic     #224                // Field os/PathConvertible$NioPathConvertible$.MODULE$:Los/PathConvertible$NioPathConvertible$;
        13: invokevirtual #227                // Method os/FilePath$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
        16: checkcast     #229                // class os/FilePath
        19: areturn
      LineNumberTable:
        line 367: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Los/readLink$;
            0      20     1   src   Los/Path;
    MethodParameters:
      Name                           Flags
      src                            final

  public os.Path absolute(os.Path);
    descriptor: (Los/Path;)Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: getstatic     #237                // Field os/Path$.MODULE$:Los/Path$;
         3: aload_1
         4: invokevirtual #215                // Method os/Path.toNIO:()Ljava/nio/file/Path;
         7: invokestatic  #221                // Method java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
        10: aload_1
        11: getstatic     #242                // Field os/PathChunk$.MODULE$:Los/PathChunk$;
        14: getstatic     #247                // Field os/package$.MODULE$:Los/package$;
        17: invokevirtual #251                // Method os/package$.up:()Los/RelPath;
        20: invokevirtual #254                // Method os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
        23: invokevirtual #258                // Method os/Path.$div:(Los/PathChunk;)Los/Path;
        26: getstatic     #224                // Field os/PathConvertible$NioPathConvertible$.MODULE$:Los/PathConvertible$NioPathConvertible$;
        29: invokevirtual #261                // Method os/Path$.apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
        32: areturn
      LineNumberTable:
        line 368: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Los/readLink$;
            0      33     1   src   Los/Path;
    MethodParameters:
      Name                           Flags
      src                            final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #211                // class os/Path
         5: invokevirtual #264                // Method apply:(Los/Path;)Los/FilePath;
         8: areturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/readLink$;
            0       9     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  private os.readLink$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #266                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/readLink$;
}
InnerClasses:
  public static #13= #10 of #12;          // RelPathChunk=class os/PathChunk$RelPathChunk of class os/PathChunk
  public static #18= #15 of #17;          // NioPathConvertible$=class os/PathConvertible$NioPathConvertible$ of class os/PathConvertible
Signature: #3                           // Ljava/lang/Object;Lscala/Function1<Los/Path;Los/FilePath;>;
SourceFile: "FileOps.scala"
  ScalaInlineInfo: length = 0x9F (unknown attribute)
   01 01 00 1F 00 17 00 16 01 00 E7 00 E8 01 00 BF
   00 B7 01 00 CA 01 06 01 00 CA 00 CB 01 00 29 00
   2A 01 00 4E 00 4F 01 00 73 00 74 01 00 98 00 99
   01 00 2F 00 30 01 00 54 00 55 01 00 79 00 7A 01
   00 9E 00 9F 01 00 35 00 36 01 00 5A 00 5B 01 00
   7F 00 80 01 00 A4 00 A5 01 00 3B 00 3C 01 00 60
   00 61 01 00 85 00 86 01 00 AA 00 AB 01 00 41 00
   42 01 00 66 00 67 01 00 8B 00 8C 01 00 B0 00 B1
   01 00 20 00 21 01 00 47 00 48 01 00 6C 00 6D 01
   00 91 00 92 01 00 B6 00 B7 01 00 C4 00 C5 01
  Scala: length = 0x0 (unknown attribute)

