Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/kohsuke/github/RateLimitChecker.class
  Last modified May 29, 2022; size 2160 bytes
  SHA-256 checksum 0c436f1d49a425b72ee3a69ca1c717bee4af18c018db4432ffe86948e39212ae
  Compiled from "RateLimitChecker.java"
public abstract class org.kohsuke.github.RateLimitChecker
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #15                         // org/kohsuke/github/RateLimitChecker
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 4, attributes: 2
Constant pool:
    #1 = Methodref          #6.#54        // java/lang/Object."<init>":()V
    #2 = Methodref          #35.#55       // org/kohsuke/github/GHRateLimit$Record.getResetDate:()Ljava/util/Date;
    #3 = Methodref          #56.#57       // java/util/Date.getTime:()J
    #4 = Methodref          #58.#59       // java/lang/System.currentTimeMillis:()J
    #5 = String             #60           // GitHub API - Current quota has %d remaining of %d. Waiting for quota to reset at %tT.
    #6 = Class              #61           // java/lang/Object
    #7 = Methodref          #35.#62       // org/kohsuke/github/GHRateLimit$Record.getRemaining:()I
    #8 = Methodref          #63.#64       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    #9 = Methodref          #35.#65       // org/kohsuke/github/GHRateLimit$Record.getLimit:()I
   #10 = Methodref          #66.#67       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #11 = Fieldref           #15.#68       // org/kohsuke/github/RateLimitChecker.LOGGER:Ljava/util/logging/Logger;
   #12 = Fieldref           #69.#70       // java/util/logging/Level.INFO:Ljava/util/logging/Level;
   #13 = Methodref          #71.#72       // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
   #14 = Methodref          #73.#74       // java/lang/Thread.sleep:(J)V
   #15 = Class              #75           // org/kohsuke/github/RateLimitChecker
   #16 = Methodref          #76.#77       // java/lang/Class.getName:()Ljava/lang/String;
   #17 = Methodref          #71.#78       // java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
   #18 = Class              #79           // org/kohsuke/github/RateLimitChecker$1
   #19 = Methodref          #18.#54       // org/kohsuke/github/RateLimitChecker$1."<init>":()V
   #20 = Fieldref           #15.#80       // org/kohsuke/github/RateLimitChecker.NONE:Lorg/kohsuke/github/RateLimitChecker;
   #21 = Class              #81           // org/kohsuke/github/RateLimitChecker$LiteralValue
   #22 = Utf8               LiteralValue
   #23 = Utf8               InnerClasses
   #24 = Utf8               LOGGER
   #25 = Utf8               Ljava/util/logging/Logger;
   #26 = Utf8               NONE
   #27 = Utf8               Lorg/kohsuke/github/RateLimitChecker;
   #28 = Utf8               <init>
   #29 = Utf8               ()V
   #30 = Utf8               Code
   #31 = Utf8               LineNumberTable
   #32 = Utf8               LocalVariableTable
   #33 = Utf8               this
   #34 = Utf8               checkRateLimit
   #35 = Class              #83           // org/kohsuke/github/GHRateLimit$Record
   #36 = Utf8               Record
   #37 = Utf8               (Lorg/kohsuke/github/GHRateLimit$Record;J)Z
   #38 = Utf8               rateLimitRecord
   #39 = Utf8               Lorg/kohsuke/github/GHRateLimit$Record;
   #40 = Utf8               count
   #41 = Utf8               J
   #42 = Utf8               Exceptions
   #43 = Class              #84           // java/lang/InterruptedException
   #44 = Utf8               sleepUntilReset
   #45 = Utf8               (Lorg/kohsuke/github/GHRateLimit$Record;)Z
   #46 = Utf8               message
   #47 = Utf8               Ljava/lang/String;
   #48 = Utf8               record
   #49 = Utf8               sleepMilliseconds
   #50 = Utf8               StackMapTable
   #51 = Utf8               <clinit>
   #52 = Utf8               SourceFile
   #53 = Utf8               RateLimitChecker.java
   #54 = NameAndType        #28:#29       // "<init>":()V
   #55 = NameAndType        #85:#86       // getResetDate:()Ljava/util/Date;
   #56 = Class              #87           // java/util/Date
   #57 = NameAndType        #88:#89       // getTime:()J
   #58 = Class              #90           // java/lang/System
   #59 = NameAndType        #91:#89       // currentTimeMillis:()J
   #60 = Utf8               GitHub API - Current quota has %d remaining of %d. Waiting for quota to reset at %tT.
   #61 = Utf8               java/lang/Object
   #62 = NameAndType        #92:#93       // getRemaining:()I
   #63 = Class              #94           // java/lang/Integer
   #64 = NameAndType        #95:#96       // valueOf:(I)Ljava/lang/Integer;
   #65 = NameAndType        #97:#93       // getLimit:()I
   #66 = Class              #98           // java/lang/String
   #67 = NameAndType        #99:#100      // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #68 = NameAndType        #24:#25       // LOGGER:Ljava/util/logging/Logger;
   #69 = Class              #101          // java/util/logging/Level
   #70 = NameAndType        #102:#103     // INFO:Ljava/util/logging/Level;
   #71 = Class              #104          // java/util/logging/Logger
   #72 = NameAndType        #105:#106     // log:(Ljava/util/logging/Level;Ljava/lang/String;)V
   #73 = Class              #107          // java/lang/Thread
   #74 = NameAndType        #108:#109     // sleep:(J)V
   #75 = Utf8               org/kohsuke/github/RateLimitChecker
   #76 = Class              #110          // java/lang/Class
   #77 = NameAndType        #111:#112     // getName:()Ljava/lang/String;
   #78 = NameAndType        #113:#114     // getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
   #79 = Utf8               org/kohsuke/github/RateLimitChecker$1
   #80 = NameAndType        #26:#27       // NONE:Lorg/kohsuke/github/RateLimitChecker;
   #81 = Utf8               org/kohsuke/github/RateLimitChecker$LiteralValue
   #82 = Class              #115          // org/kohsuke/github/GHRateLimit
   #83 = Utf8               org/kohsuke/github/GHRateLimit$Record
   #84 = Utf8               java/lang/InterruptedException
   #85 = Utf8               getResetDate
   #86 = Utf8               ()Ljava/util/Date;
   #87 = Utf8               java/util/Date
   #88 = Utf8               getTime
   #89 = Utf8               ()J
   #90 = Utf8               java/lang/System
   #91 = Utf8               currentTimeMillis
   #92 = Utf8               getRemaining
   #93 = Utf8               ()I
   #94 = Utf8               java/lang/Integer
   #95 = Utf8               valueOf
   #96 = Utf8               (I)Ljava/lang/Integer;
   #97 = Utf8               getLimit
   #98 = Utf8               java/lang/String
   #99 = Utf8               format
  #100 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #101 = Utf8               java/util/logging/Level
  #102 = Utf8               INFO
  #103 = Utf8               Ljava/util/logging/Level;
  #104 = Utf8               java/util/logging/Logger
  #105 = Utf8               log
  #106 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;)V
  #107 = Utf8               java/lang/Thread
  #108 = Utf8               sleep
  #109 = Utf8               (J)V
  #110 = Utf8               java/lang/Class
  #111 = Utf8               getName
  #112 = Utf8               ()Ljava/lang/String;
  #113 = Utf8               getLogger
  #114 = Utf8               (Ljava/lang/String;)Ljava/util/logging/Logger;
  #115 = Utf8               org/kohsuke/github/GHRateLimit
{
  private static final java.util.logging.Logger LOGGER;
    descriptor: Ljava/util/logging/Logger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static final org.kohsuke.github.RateLimitChecker NONE;
    descriptor: Lorg/kohsuke/github/RateLimitChecker;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public org.kohsuke.github.RateLimitChecker();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/RateLimitChecker;

  protected boolean checkRateLimit(org.kohsuke.github.GHRateLimit$Record, long) throws java.lang.InterruptedException;
    descriptor: (Lorg/kohsuke/github/GHRateLimit$Record;J)Z
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=4, args_size=3
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/kohsuke/github/RateLimitChecker;
            0       2     1 rateLimitRecord   Lorg/kohsuke/github/GHRateLimit$Record;
            0       2     2 count   J
    Exceptions:
      throws java.lang.InterruptedException

  protected final boolean sleepUntilReset(org.kohsuke.github.GHRateLimit$Record) throws java.lang.InterruptedException;
    descriptor: (Lorg/kohsuke/github/GHRateLimit$Record;)Z
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL
    Code:
      stack=5, locals=5, args_size=2
         0: aload_1
         1: invokevirtual #2                  // Method org/kohsuke/github/GHRateLimit$Record.getResetDate:()Ljava/util/Date;
         4: invokevirtual #3                  // Method java/util/Date.getTime:()J
         7: invokestatic  #4                  // Method java/lang/System.currentTimeMillis:()J
        10: lsub
        11: lstore_2
        12: lload_2
        13: lconst_0
        14: lcmp
        15: ifle          73
        18: ldc           #5                  // String GitHub API - Current quota has %d remaining of %d. Waiting for quota to reset at %tT.
        20: iconst_3
        21: anewarray     #6                  // class java/lang/Object
        24: dup
        25: iconst_0
        26: aload_1
        27: invokevirtual #7                  // Method org/kohsuke/github/GHRateLimit$Record.getRemaining:()I
        30: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        33: aastore
        34: dup
        35: iconst_1
        36: aload_1
        37: invokevirtual #9                  // Method org/kohsuke/github/GHRateLimit$Record.getLimit:()I
        40: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        43: aastore
        44: dup
        45: iconst_2
        46: aload_1
        47: invokevirtual #2                  // Method org/kohsuke/github/GHRateLimit$Record.getResetDate:()Ljava/util/Date;
        50: aastore
        51: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        54: astore        4
        56: getstatic     #11                 // Field LOGGER:Ljava/util/logging/Logger;
        59: getstatic     #12                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
        62: aload         4
        64: invokevirtual #13                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
        67: lload_2
        68: invokestatic  #14                 // Method java/lang/Thread.sleep:(J)V
        71: iconst_1
        72: ireturn
        73: iconst_0
        74: ireturn
      LineNumberTable:
        line 65: 0
        line 66: 12
        line 67: 18
        line 69: 27
        line 70: 37
        line 71: 47
        line 67: 51
        line 73: 56
        line 75: 67
        line 76: 71
        line 78: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           56      17     4 message   Ljava/lang/String;
            0      75     0  this   Lorg/kohsuke/github/RateLimitChecker;
            0      75     1 record   Lorg/kohsuke/github/GHRateLimit$Record;
           12      63     2 sleepMilliseconds   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 73
          locals = [ long ]
    Exceptions:
      throws java.lang.InterruptedException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: ldc           #15                 // class org/kohsuke/github/RateLimitChecker
         2: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
         5: invokestatic  #17                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
         8: putstatic     #11                 // Field LOGGER:Ljava/util/logging/Logger;
        11: new           #18                 // class org/kohsuke/github/RateLimitChecker$1
        14: dup
        15: invokespecial #19                 // Method org/kohsuke/github/RateLimitChecker$1."<init>":()V
        18: putstatic     #20                 // Field NONE:Lorg/kohsuke/github/RateLimitChecker;
        21: return
      LineNumberTable:
        line 24: 0
        line 26: 11
}
SourceFile: "RateLimitChecker.java"
InnerClasses:
  public static #22= #21 of #15;          // LiteralValue=class org/kohsuke/github/RateLimitChecker$LiteralValue of class org/kohsuke/github/RateLimitChecker
  #18;                                    // class org/kohsuke/github/RateLimitChecker$1
  public static #36= #35 of #82;          // Record=class org/kohsuke/github/GHRateLimit$Record of class org/kohsuke/github/GHRateLimit
