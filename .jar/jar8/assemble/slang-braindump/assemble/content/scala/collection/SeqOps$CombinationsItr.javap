Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/SeqOps$CombinationsItr.class
  Last modified May 29, 2022; size 10991 bytes
  SHA-256 checksum 91032e587910525ff37a6fc4bb96c1221b6bd6d9cce326bb39af7ea1988921b1
  Compiled from "Seq.scala"
public class scala.collection.SeqOps$CombinationsItr extends scala.collection.AbstractIterator<C>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/SeqOps$CombinationsItr
  super_class: #5                         // scala/collection/AbstractIterator
  interfaces: 0, fields: 8, methods: 18, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/SeqOps$CombinationsItr
    #2 = Class              #1            // scala/collection/SeqOps$CombinationsItr
    #3 = Utf8               Lscala/collection/AbstractIterator<TC;>;
    #4 = Utf8               scala/collection/AbstractIterator
    #5 = Class              #4            // scala/collection/AbstractIterator
    #6 = Utf8               Seq.scala
    #7 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #8 = Class              #7            // java/lang/invoke/MethodHandles$Lookup
    #9 = Utf8               java/lang/invoke/MethodHandles
   #10 = Class              #9            // java/lang/invoke/MethodHandles
   #11 = Utf8               Lookup
   #12 = Utf8               scala/collection/IterableFactory$ToFactory
   #13 = Class              #12           // scala/collection/IterableFactory$ToFactory
   #14 = Utf8               scala/collection/IterableFactory
   #15 = Class              #14           // scala/collection/IterableFactory
   #16 = Utf8               ToFactory
   #17 = Utf8               scala/collection/SeqOps
   #18 = Class              #17           // scala/collection/SeqOps
   #19 = Utf8               CombinationsItr
   #20 = Utf8               scala/collection/immutable/Range$Exclusive
   #21 = Class              #20           // scala/collection/immutable/Range$Exclusive
   #22 = Utf8               scala/collection/immutable/Range
   #23 = Class              #22           // scala/collection/immutable/Range
   #24 = Utf8               Exclusive
   #25 = Utf8               scala/math/Ordering$Int$
   #26 = Class              #25           // scala/math/Ordering$Int$
   #27 = Utf8               scala/math/Ordering
   #28 = Class              #27           // scala/math/Ordering
   #29 = Utf8               Int$
   #30 = Utf8               n
   #31 = Utf8               I
   #32 = Utf8               x$7
   #33 = Utf8               Lscala/Tuple3;
   #34 = Utf8               elms
   #35 = Utf8               Lscala/collection/IndexedSeq;
   #36 = Utf8               Lscala/collection/IndexedSeq<TA;>;
   #37 = Utf8               cnts
   #38 = Utf8               [I
   #39 = Utf8               nums
   #40 = Utf8               offs
   #41 = Utf8               _hasNext
   #42 = Utf8               Z
   #43 = Utf8               $outer
   #44 = Utf8               Lscala/collection/SeqOps;
   #45 = Utf8               hasNext
   #46 = Utf8               ()Z
   #47 = NameAndType        #41:#42       // _hasNext:Z
   #48 = Fieldref           #2.#47        // scala/collection/SeqOps$CombinationsItr._hasNext:Z
   #49 = Utf8               this
   #50 = Utf8               Lscala/collection/SeqOps$CombinationsItr;
   #51 = Utf8               next
   #52 = Utf8               ()Ljava/lang/Object;
   #53 = Utf8               ()TC;
   #54 = NameAndType        #45:#46       // hasNext:()Z
   #55 = Methodref          #2.#54        // scala/collection/SeqOps$CombinationsItr.hasNext:()Z
   #56 = Utf8               scala/collection/Iterator$
   #57 = Class              #56           // scala/collection/Iterator$
   #58 = Utf8               MODULE$
   #59 = Utf8               Lscala/collection/Iterator$;
   #60 = NameAndType        #58:#59       // MODULE$:Lscala/collection/Iterator$;
   #61 = Fieldref           #57.#60       // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
   #62 = Utf8               scala$collection$Iterator$$_empty
   #63 = Utf8               Lscala/collection/Iterator;
   #64 = NameAndType        #62:#63       // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #65 = Fieldref           #57.#64       // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #66 = Utf8               scala/collection/Iterator
   #67 = Class              #66           // scala/collection/Iterator
   #68 = NameAndType        #51:#52       // next:()Ljava/lang/Object;
   #69 = InterfaceMethodref #67.#68       // scala/collection/Iterator.next:()Ljava/lang/Object;
   #70 = Utf8               scala$collection$SeqOps$CombinationsItr$$$outer
   #71 = Utf8               ()Lscala/collection/SeqOps;
   #72 = NameAndType        #70:#71       // scala$collection$SeqOps$CombinationsItr$$$outer:()Lscala/collection/SeqOps;
   #73 = Methodref          #2.#72        // scala/collection/SeqOps$CombinationsItr.scala$collection$SeqOps$CombinationsItr$$$outer:()Lscala/collection/SeqOps;
   #74 = Utf8               newSpecificBuilder
   #75 = Utf8               ()Lscala/collection/mutable/Builder;
   #76 = NameAndType        #74:#75       // newSpecificBuilder:()Lscala/collection/mutable/Builder;
   #77 = InterfaceMethodref #18.#76       // scala/collection/SeqOps.newSpecificBuilder:()Lscala/collection/mutable/Builder;
   #78 = Utf8               scala/runtime/RichInt$
   #79 = Class              #78           // scala/runtime/RichInt$
   #80 = Utf8               Lscala/runtime/RichInt$;
   #81 = NameAndType        #58:#80       // MODULE$:Lscala/runtime/RichInt$;
   #82 = Fieldref           #79.#81       // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
   #83 = NameAndType        #39:#38       // nums:[I
   #84 = Fieldref           #2.#83        // scala/collection/SeqOps$CombinationsItr.nums:[I
   #85 = Utf8               scala/collection/immutable/Range$
   #86 = Class              #85           // scala/collection/immutable/Range$
   #87 = Utf8               Lscala/collection/immutable/Range$;
   #88 = NameAndType        #58:#87       // MODULE$:Lscala/collection/immutable/Range$;
   #89 = Fieldref           #86.#88       // scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
   #90 = Utf8               <init>
   #91 = Utf8               (III)V
   #92 = NameAndType        #90:#91       // "<init>":(III)V
   #93 = Methodref          #21.#92       // scala/collection/immutable/Range$Exclusive."<init>":(III)V
   #94 = Utf8               isEmpty
   #95 = NameAndType        #94:#46       // isEmpty:()Z
   #96 = Methodref          #23.#95       // scala/collection/immutable/Range.isEmpty:()Z
   #97 = Utf8               start
   #98 = Utf8               ()I
   #99 = NameAndType        #97:#98       // start:()I
  #100 = Methodref          #23.#99       // scala/collection/immutable/Range.start:()I
  #101 = Utf8               $anonfun$next$1
  #102 = Utf8               (Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;I)V
  #103 = NameAndType        #101:#102     // $anonfun$next$1:(Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;I)V
  #104 = Methodref          #2.#103       // scala/collection/SeqOps$CombinationsItr.$anonfun$next$1:(Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;I)V
  #105 = Utf8               scala$collection$immutable$Range$$lastElement
  #106 = NameAndType        #105:#31      // scala$collection$immutable$Range$$lastElement:I
  #107 = Fieldref           #23.#106      // scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
  #108 = Utf8               step
  #109 = NameAndType        #108:#98      // step:()I
  #110 = Methodref          #23.#109      // scala/collection/immutable/Range.step:()I
  #111 = Utf8               scala/collection/mutable/Builder
  #112 = Class              #111          // scala/collection/mutable/Builder
  #113 = Utf8               result
  #114 = NameAndType        #113:#52      // result:()Ljava/lang/Object;
  #115 = InterfaceMethodref #112.#114     // scala/collection/mutable/Builder.result:()Ljava/lang/Object;
  #116 = NameAndType        #37:#38       // cnts:[I
  #117 = Fieldref           #2.#116       // scala/collection/SeqOps$CombinationsItr.cnts:[I
  #118 = Utf8               java/lang/Math
  #119 = Class              #118          // java/lang/Math
  #120 = Utf8               min
  #121 = Utf8               (II)I
  #122 = NameAndType        #120:#121     // min:(II)I
  #123 = Methodref          #119.#122     // java/lang/Math.min:(II)I
  #124 = Utf8               $anonfun$next$3
  #125 = Utf8               (I)Z
  #126 = NameAndType        #124:#125     // $anonfun$next$3:(I)Z
  #127 = Methodref          #2.#126       // scala/collection/SeqOps$CombinationsItr.$anonfun$next$3:(I)Z
  #128 = Utf8               scala/math/package$
  #129 = Class              #128          // scala/math/package$
  #130 = Utf8               Lscala/math/package$;
  #131 = NameAndType        #58:#130      // MODULE$:Lscala/math/package$;
  #132 = Fieldref           #129.#131     // scala/math/package$.MODULE$:Lscala/math/package$;
  #133 = Utf8               i
  #134 = Utf8               buf
  #135 = Utf8               Lscala/collection/mutable/Builder;
  #136 = Utf8               res
  #137 = Utf8               Ljava/lang/Object;
  #138 = Utf8               idx
  #139 = Utf8               foreach$mVc$sp_i
  #140 = Utf8               foreach$mVc$sp_this
  #141 = Utf8               Lscala/collection/immutable/Range;
  #142 = Utf8               lastIndexWhere$extension_i
  #143 = Utf8               lastIndexWhere$extension_$this
  #144 = Utf8               lastIndexWhere$extension_end
  #145 = Utf8               until$extension_end
  #146 = Utf8               $anonfun$next$4_min$extension_that
  #147 = Utf8               java/lang/Object
  #148 = Class              #147          // java/lang/Object
  #149 = Class              #38           // "[I"
  #150 = Utf8               init
  #151 = Utf8               ()Lscala/Tuple3;
  #152 = Utf8               ()Lscala/Tuple3<Lscala/collection/IndexedSeq<TA;>;[I[I>;
  #153 = Utf8               scala/collection/mutable/HashMap$
  #154 = Class              #153          // scala/collection/mutable/HashMap$
  #155 = Utf8               Lscala/collection/mutable/HashMap$;
  #156 = NameAndType        #58:#155      // MODULE$:Lscala/collection/mutable/HashMap$;
  #157 = Fieldref           #154.#156     // scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
  #158 = Utf8               scala/collection/immutable/Nil$
  #159 = Class              #158          // scala/collection/immutable/Nil$
  #160 = Utf8               Lscala/collection/immutable/Nil$;
  #161 = NameAndType        #58:#160      // MODULE$:Lscala/collection/immutable/Nil$;
  #162 = Fieldref           #159.#161     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #163 = Utf8               from
  #164 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
  #165 = NameAndType        #163:#164     // from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
  #166 = Methodref          #154.#165     // scala/collection/mutable/HashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
  #167 = Utf8               scala/collection/Seq
  #168 = Class              #167          // scala/collection/Seq
  #169 = Utf8               toSeq
  #170 = Utf8               ()Lscala/collection/immutable/Seq;
  #171 = NameAndType        #169:#170     // toSeq:()Lscala/collection/immutable/Seq;
  #172 = InterfaceMethodref #18.#171      // scala/collection/SeqOps.toSeq:()Lscala/collection/immutable/Seq;
  #173 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #174 = MethodType         #173          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #175 = Utf8               $anonfun$init$4
  #176 = Utf8               (Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #177 = NameAndType        #175:#176     // $anonfun$init$4:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #178 = Methodref          #2.#177       // scala/collection/SeqOps$CombinationsItr.$anonfun$init$4:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #179 = MethodHandle       6:#178        // REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$4:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #180 = Utf8               (Ljava/lang/Object;)Lscala/Tuple2;
  #181 = MethodType         #180          //  (Ljava/lang/Object;)Lscala/Tuple2;
  #182 = Integer            5
  #183 = Integer            1
  #184 = Utf8               java/lang/invoke/LambdaMetafactory
  #185 = Class              #184          // java/lang/invoke/LambdaMetafactory
  #186 = Utf8               altMetafactory
  #187 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #188 = NameAndType        #186:#187     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #189 = Methodref          #185.#188     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #190 = MethodHandle       6:#189        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #191 = Utf8               apply
  #192 = Utf8               (Lscala/collection/mutable/HashMap;)Lscala/Function1;
  #193 = NameAndType        #191:#192     // apply:(Lscala/collection/mutable/HashMap;)Lscala/Function1;
  #194 = InvokeDynamic      #0:#193       // #0:apply:(Lscala/collection/mutable/HashMap;)Lscala/Function1;
  #195 = Utf8               map
  #196 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #197 = NameAndType        #195:#196     // map:(Lscala/Function1;)Ljava/lang/Object;
  #198 = InterfaceMethodref #168.#197     // scala/collection/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #199 = Utf8               $anonfun$init$6$adapted
  #200 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #201 = NameAndType        #199:#200     // $anonfun$init$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #202 = Methodref          #2.#201       // scala/collection/SeqOps$CombinationsItr.$anonfun$init$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #203 = MethodHandle       6:#202        // REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #204 = MethodType         #200          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #205 = Utf8               ()Lscala/Function1;
  #206 = NameAndType        #191:#205     // apply:()Lscala/Function1;
  #207 = InvokeDynamic      #1:#206       // #1:apply:()Lscala/Function1;
  #208 = Utf8               Lscala/math/Ordering$Int$;
  #209 = NameAndType        #58:#208      // MODULE$:Lscala/math/Ordering$Int$;
  #210 = Fieldref           #26.#209      // scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
  #211 = Utf8               sortBy
  #212 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #213 = NameAndType        #211:#212     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #214 = InterfaceMethodref #18.#213      // scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #215 = Utf8               scala/collection/IterableOps
  #216 = Class              #215          // scala/collection/IterableOps
  #217 = Utf8               scala/$less$colon$less$
  #218 = Class              #217          // scala/$less$colon$less$
  #219 = Utf8               Lscala/$less$colon$less$;
  #220 = NameAndType        #58:#219      // MODULE$:Lscala/$less$colon$less$;
  #221 = Fieldref           #218.#220     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #222 = Utf8               refl
  #223 = Utf8               ()Lscala/$eq$colon$eq;
  #224 = NameAndType        #222:#223     // refl:()Lscala/$eq$colon$eq;
  #225 = Methodref          #218.#224     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #226 = Utf8               unzip
  #227 = Utf8               (Lscala/Function1;)Lscala/Tuple2;
  #228 = NameAndType        #226:#227     // unzip:(Lscala/Function1;)Lscala/Tuple2;
  #229 = InterfaceMethodref #216.#228     // scala/collection/IterableOps.unzip:(Lscala/Function1;)Lscala/Tuple2;
  #230 = Utf8               scala/Tuple2
  #231 = Class              #230          // scala/Tuple2
  #232 = Utf8               _1
  #233 = NameAndType        #232:#52      // _1:()Ljava/lang/Object;
  #234 = Methodref          #231.#233     // scala/Tuple2._1:()Ljava/lang/Object;
  #235 = Utf8               _2
  #236 = NameAndType        #235:#52      // _2:()Ljava/lang/Object;
  #237 = Methodref          #231.#236     // scala/Tuple2._2:()Ljava/lang/Object;
  #238 = Utf8               scala/MatchError
  #239 = Class              #238          // scala/MatchError
  #240 = Utf8               (Ljava/lang/Object;)V
  #241 = NameAndType        #90:#240      // "<init>":(Ljava/lang/Object;)V
  #242 = Methodref          #239.#241     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #243 = Utf8               scala/collection/mutable/HashMap
  #244 = Class              #243          // scala/collection/mutable/HashMap
  #245 = Utf8               size
  #246 = NameAndType        #245:#98      // size:()I
  #247 = Methodref          #244.#246     // scala/collection/mutable/HashMap.size:()I
  #248 = Utf8               (I)V
  #249 = MethodType         #248          //  (I)V
  #250 = Utf8               $anonfun$init$7
  #251 = Utf8               ([II)V
  #252 = NameAndType        #250:#251     // $anonfun$init$7:([II)V
  #253 = Methodref          #2.#252       // scala/collection/SeqOps$CombinationsItr.$anonfun$init$7:([II)V
  #254 = MethodHandle       6:#253        // REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$7:([II)V
  #255 = Utf8               apply$mcVI$sp
  #256 = Utf8               ([I)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #257 = NameAndType        #255:#256     // apply$mcVI$sp:([I)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #258 = InvokeDynamic      #2:#257       // #2:apply$mcVI$sp:([I)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #259 = Utf8               foreach
  #260 = Utf8               (Lscala/Function1;)V
  #261 = NameAndType        #259:#260     // foreach:(Lscala/Function1;)V
  #262 = InterfaceMethodref #168.#261     // scala/collection/Seq.foreach:(Lscala/Function1;)V
  #263 = NameAndType        #30:#31       // n:I
  #264 = Fieldref           #2.#263       // scala/collection/SeqOps$CombinationsItr.n:I
  #265 = Utf8               scala/Tuple3
  #266 = Class              #265          // scala/Tuple3
  #267 = Utf8               scala/collection/IterableFactory$
  #268 = Class              #267          // scala/collection/IterableFactory$
  #269 = Utf8               Lscala/collection/IterableFactory$;
  #270 = NameAndType        #58:#269      // MODULE$:Lscala/collection/IterableFactory$;
  #271 = Fieldref           #268.#270     // scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
  #272 = Utf8               scala/collection/IndexedSeq$
  #273 = Class              #272          // scala/collection/IndexedSeq$
  #274 = Utf8               Lscala/collection/IndexedSeq$;
  #275 = NameAndType        #58:#274      // MODULE$:Lscala/collection/IndexedSeq$;
  #276 = Fieldref           #273.#275     // scala/collection/IndexedSeq$.MODULE$:Lscala/collection/IndexedSeq$;
  #277 = Utf8               (Lscala/collection/IterableFactory;)V
  #278 = NameAndType        #90:#277      // "<init>":(Lscala/collection/IterableFactory;)V
  #279 = Methodref          #13.#278      // scala/collection/IterableFactory$ToFactory."<init>":(Lscala/collection/IterableFactory;)V
  #280 = Utf8               to
  #281 = Utf8               (Lscala/collection/Factory;)Ljava/lang/Object;
  #282 = NameAndType        #280:#281     // to:(Lscala/collection/Factory;)Ljava/lang/Object;
  #283 = InterfaceMethodref #168.#282     // scala/collection/Seq.to:(Lscala/collection/Factory;)Ljava/lang/Object;
  #284 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #285 = NameAndType        #90:#284      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #286 = Methodref          #266.#285     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #287 = Utf8               es
  #288 = Utf8               Lscala/collection/Seq;
  #289 = Utf8               is
  #290 = Utf8               m
  #291 = Utf8               Lscala/collection/mutable/HashMap;
  #292 = Utf8               cs
  #293 = Utf8               ns
  #294 = Utf8               scala$collection$SeqOps$$toGenericSeq_this
  #295 = Utf8               apply_this
  #296 = Utf8               apply_elems
  #297 = Utf8               Lscala/collection/immutable/Seq;
  #298 = Utf8               toFactory_factory
  #299 = Utf8               Lscala/collection/IterableFactory;
  #300 = Utf8               $anonfun$init$8_min$extension_that
  #301 = NameAndType        #43:#44       // $outer:Lscala/collection/SeqOps;
  #302 = Fieldref           #2.#301       // scala/collection/SeqOps$CombinationsItr.$outer:Lscala/collection/SeqOps;
  #303 = Utf8               $anonfun$offs$1
  #304 = Utf8               x$8
  #305 = Utf8               x$9
  #306 = Utf8               $anonfun$next$2
  #307 = Utf8               (Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;II)Lscala/collection/mutable/Builder;
  #308 = Utf8               $this
  #309 = Utf8               buf$1
  #310 = Utf8               k$1
  #311 = Utf8               j
  #312 = NameAndType        #34:#35       // elms:Lscala/collection/IndexedSeq;
  #313 = Fieldref           #2.#312       // scala/collection/SeqOps$CombinationsItr.elms:Lscala/collection/IndexedSeq;
  #314 = NameAndType        #40:#38       // offs:[I
  #315 = Fieldref           #2.#314       // scala/collection/SeqOps$CombinationsItr.offs:[I
  #316 = Utf8               scala/collection/IndexedSeq
  #317 = Class              #316          // scala/collection/IndexedSeq
  #318 = Utf8               (I)Ljava/lang/Object;
  #319 = NameAndType        #191:#318     // apply:(I)Ljava/lang/Object;
  #320 = InterfaceMethodref #317.#319     // scala/collection/IndexedSeq.apply:(I)Ljava/lang/Object;
  #321 = Utf8               scala/collection/mutable/Growable
  #322 = Class              #321          // scala/collection/mutable/Growable
  #323 = Utf8               addOne
  #324 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #325 = NameAndType        #323:#324     // addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #326 = InterfaceMethodref #322.#325     // scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #327 = Utf8               $plus$eq_elem
  #328 = Utf8               k
  #329 = NameAndType        #306:#307     // $anonfun$next$2:(Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;II)Lscala/collection/mutable/Builder;
  #330 = Methodref          #2.#329       // scala/collection/SeqOps$CombinationsItr.$anonfun$next$2:(Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;II)Lscala/collection/mutable/Builder;
  #331 = Utf8               foreach_i
  #332 = Utf8               foreach_this
  #333 = Utf8               x$10
  #334 = Utf8               $anonfun$next$4
  #335 = Utf8               (Lscala/collection/SeqOps$CombinationsItr;Lscala/runtime/IntRef;I)V
  #336 = Utf8               sum$1
  #337 = Utf8               scala/runtime/IntRef
  #338 = Class              #337          // scala/runtime/IntRef
  #339 = Utf8               elem
  #340 = NameAndType        #339:#31      // elem:I
  #341 = Fieldref           #338.#340     // scala/runtime/IntRef.elem:I
  #342 = Utf8               Lscala/runtime/IntRef;
  #343 = Utf8               min$extension_that
  #344 = Utf8               $anonfun$init$5
  #345 = Utf8               (Lscala/collection/mutable/HashMap;)I
  #346 = Utf8               m$2
  #347 = Utf8               e
  #348 = MethodType         #98           //  ()I
  #349 = NameAndType        #344:#345     // $anonfun$init$5:(Lscala/collection/mutable/HashMap;)I
  #350 = Methodref          #2.#349       // scala/collection/SeqOps$CombinationsItr.$anonfun$init$5:(Lscala/collection/mutable/HashMap;)I
  #351 = MethodHandle       6:#350        // REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$5:(Lscala/collection/mutable/HashMap;)I
  #352 = Utf8               apply$mcI$sp
  #353 = Utf8               (Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #354 = NameAndType        #352:#353     // apply$mcI$sp:(Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #355 = InvokeDynamic      #3:#354       // #3:apply$mcI$sp:(Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #356 = Utf8               getOrElseUpdate
  #357 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #358 = NameAndType        #356:#357     // getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #359 = Methodref          #244.#358     // scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #360 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #361 = NameAndType        #90:#360      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #362 = Methodref          #231.#361     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #363 = Utf8               $anonfun$init$6
  #364 = Utf8               (Lscala/Tuple2;)I
  #365 = Utf8               x$11
  #366 = Utf8               _2$mcI$sp
  #367 = NameAndType        #366:#98      // _2$mcI$sp:()I
  #368 = Methodref          #231.#367     // scala/Tuple2._2$mcI$sp:()I
  #369 = Utf8               Lscala/Tuple2;
  #370 = Utf8               cs$1
  #371 = Utf8               $anonfun$init$8
  #372 = Utf8               ([ILscala/runtime/IntRef;[II)V
  #373 = Utf8               ns$1
  #374 = Utf8               r$1
  #375 = Utf8               (Lscala/collection/SeqOps;I)V
  #376 = Utf8               ()V
  #377 = NameAndType        #90:#376      // "<init>":()V
  #378 = Methodref          #5.#377       // scala/collection/AbstractIterator."<init>":()V
  #379 = NameAndType        #150:#151     // init:()Lscala/Tuple3;
  #380 = Methodref          #2.#379       // scala/collection/SeqOps$CombinationsItr.init:()Lscala/Tuple3;
  #381 = Methodref          #266.#233     // scala/Tuple3._1:()Ljava/lang/Object;
  #382 = Methodref          #266.#236     // scala/Tuple3._2:()Ljava/lang/Object;
  #383 = Utf8               _3
  #384 = NameAndType        #383:#52      // _3:()Ljava/lang/Object;
  #385 = Methodref          #266.#384     // scala/Tuple3._3:()Ljava/lang/Object;
  #386 = NameAndType        #32:#33       // x$7:Lscala/Tuple3;
  #387 = Fieldref           #2.#386       // scala/collection/SeqOps$CombinationsItr.x$7:Lscala/Tuple3;
  #388 = Utf8               scanLeft$extension_v
  #389 = Utf8               scanLeft$extension_i
  #390 = Utf8               scanLeft$extension_res
  #391 = Utf8               scanLeft$extension_$this
  #392 = Utf8               scanLeft$extension_z
  #393 = NameAndType        #363:#364     // $anonfun$init$6:(Lscala/Tuple2;)I
  #394 = Methodref          #2.#393       // scala/collection/SeqOps$CombinationsItr.$anonfun$init$6:(Lscala/Tuple2;)I
  #395 = Utf8               scala/runtime/BoxesRunTime
  #396 = Class              #395          // scala/runtime/BoxesRunTime
  #397 = Utf8               boxToInteger
  #398 = Utf8               (I)Ljava/lang/Integer;
  #399 = NameAndType        #397:#398     // boxToInteger:(I)Ljava/lang/Integer;
  #400 = Methodref          #396.#399     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #401 = Utf8               $anonfun$next$2$adapted
  #402 = Utf8               (Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;ILjava/lang/Object;)Lscala/collection/mutable/Builder;
  #403 = Utf8               unboxToInt
  #404 = Utf8               (Ljava/lang/Object;)I
  #405 = NameAndType        #403:#404     // unboxToInt:(Ljava/lang/Object;)I
  #406 = Methodref          #396.#405     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #407 = Utf8               $deserializeLambda$
  #408 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #409 = Utf8               scala/runtime/LambdaDeserialize
  #410 = Class              #409          // scala/runtime/LambdaDeserialize
  #411 = Utf8               bootstrap
  #412 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #413 = NameAndType        #411:#412     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #414 = Methodref          #410.#413     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #415 = MethodHandle       6:#414        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #416 = Utf8               lambdaDeserialize
  #417 = NameAndType        #416:#408     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #418 = InvokeDynamic      #4:#417       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #419 = Utf8               Signature
  #420 = Utf8               Code
  #421 = Utf8               LineNumberTable
  #422 = Utf8               LocalVariableTable
  #423 = Utf8               StackMapTable
  #424 = Utf8               MethodParameters
  #425 = Utf8               InnerClasses
  #426 = Utf8               SourceFile
  #427 = Utf8               BootstrapMethods
  #428 = Utf8               ScalaInlineInfo
  #429 = Utf8               Scala
{
  private final int n;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Tuple3 x$7;
    descriptor: Lscala/Tuple3;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.collection.IndexedSeq<A> elms;
    descriptor: Lscala/collection/IndexedSeq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #36                          // Lscala/collection/IndexedSeq<TA;>;

  private final int[] cnts;
    descriptor: [I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int[] nums;
    descriptor: [I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int[] offs;
    descriptor: [I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private boolean _hasNext;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final scala.collection.SeqOps $outer;
    descriptor: Lscala/collection/SeqOps;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field _hasNext:Z
         4: ireturn
      LineNumberTable:
        line 618: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/SeqOps$CombinationsItr;

  public C next();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=19, args_size=1
         0: aload_0
         1: invokevirtual #55                 // Method hasNext:()Z
         4: ifne          20
         7: getstatic     #61                 // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #65                 // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: invokeinterface #69,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        19: pop
        20: aload_0
        21: invokevirtual #73                 // Method scala$collection$SeqOps$CombinationsItr$$$outer:()Lscala/collection/SeqOps;
        24: invokeinterface #77,  1           // InterfaceMethod scala/collection/SeqOps.newSpecificBuilder:()Lscala/collection/mutable/Builder;
        29: astore_1
        30: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        33: pop
        34: iconst_0
        35: istore        5
        37: aload_0
        38: getfield      #84                 // Field nums:[I
        41: arraylength
        42: istore        15
        44: getstatic     #89                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
        47: pop
        48: new           #21                 // class scala/collection/immutable/Range$Exclusive
        51: dup
        52: iload         5
        54: iload         15
        56: iconst_1
        57: invokespecial #93                 // Method scala/collection/immutable/Range$Exclusive."<init>":(III)V
        60: astore        7
        62: aload         7
        64: invokevirtual #96                 // Method scala/collection/immutable/Range.isEmpty:()Z
        67: ifne          107
        70: aload         7
        72: invokevirtual #100                // Method scala/collection/immutable/Range.start:()I
        75: istore        8
        77: aload_0
        78: aload_1
        79: iload         8
        81: invokestatic  #104                // Method $anonfun$next$1:(Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;I)V
        84: iload         8
        86: aload         7
        88: getfield      #107                // Field scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
        91: if_icmpeq     107
        94: iload         8
        96: aload         7
        98: invokevirtual #110                // Method scala/collection/immutable/Range.step:()I
       101: iadd
       102: istore        8
       104: goto          77
       107: aconst_null
       108: astore        7
       110: aload_1
       111: invokeinterface #115,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       116: astore_2
       117: aload_0
       118: getfield      #84                 // Field nums:[I
       121: arraylength
       122: iconst_1
       123: isub
       124: istore_3
       125: iload_3
       126: iconst_0
       127: if_icmplt     151
       130: aload_0
       131: getfield      #84                 // Field nums:[I
       134: iload_3
       135: iaload
       136: aload_0
       137: getfield      #117                // Field cnts:[I
       140: iload_3
       141: iaload
       142: if_icmpne     151
       145: iinc          3, -1
       148: goto          125
       151: aload_0
       152: getfield      #84                 // Field nums:[I
       155: iload_3
       156: iconst_1
       157: isub
       158: istore        10
       160: astore        9
       162: iload         10
       164: aload         9
       166: arraylength
       167: iconst_1
       168: isub
       169: invokestatic  #123                // Method java/lang/Math.min:(II)I
       172: istore        11
       174: iload         11
       176: iconst_0
       177: if_icmplt     204
       180: aload         9
       182: iload         11
       184: iaload
       185: invokestatic  #127                // Method $anonfun$next$3:(I)Z
       188: ifeq          198
       191: iload         11
       193: istore        12
       195: goto          207
       198: iinc          11, -1
       201: goto          174
       204: iconst_m1
       205: istore        12
       207: iload         12
       209: aconst_null
       210: astore        9
       212: istore_3
       213: iload_3
       214: iconst_0
       215: if_icmpge     226
       218: aload_0
       219: iconst_0
       220: putfield      #48                 // Field _hasNext:Z
       223: goto          393
       226: iconst_1
       227: istore        18
       229: iload_3
       230: iconst_1
       231: iadd
       232: istore        4
       234: iload         4
       236: aload_0
       237: getfield      #84                 // Field nums:[I
       240: arraylength
       241: if_icmpge     262
       244: iload         18
       246: aload_0
       247: getfield      #84                 // Field nums:[I
       250: iload         4
       252: iaload
       253: iadd
       254: istore        18
       256: iinc          4, 1
       259: goto          234
       262: aload_0
       263: getfield      #84                 // Field nums:[I
       266: iload         12
       268: aload_0
       269: getfield      #84                 // Field nums:[I
       272: iload         12
       274: iaload
       275: iconst_1
       276: isub
       277: iastore
       278: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       281: pop
       282: iload_3
       283: iconst_1
       284: iadd
       285: istore        6
       287: aload_0
       288: getfield      #84                 // Field nums:[I
       291: arraylength
       292: istore        16
       294: getstatic     #89                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
       297: pop
       298: new           #21                 // class scala/collection/immutable/Range$Exclusive
       301: dup
       302: iload         6
       304: iload         16
       306: iconst_1
       307: invokespecial #93                 // Method scala/collection/immutable/Range$Exclusive."<init>":(III)V
       310: astore        13
       312: aload         13
       314: invokevirtual #96                 // Method scala/collection/immutable/Range.isEmpty:()Z
       317: ifne          393
       320: aload         13
       322: invokevirtual #100                // Method scala/collection/immutable/Range.start:()I
       325: istore        14
       327: aload_0
       328: getfield      #84                 // Field nums:[I
       331: iload         14
       333: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       336: pop
       337: aload_0
       338: getfield      #117                // Field cnts:[I
       341: iload         14
       343: iaload
       344: istore        17
       346: getstatic     #132                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       349: pop
       350: iload         18
       352: iload         17
       354: invokestatic  #123                // Method java/lang/Math.min:(II)I
       357: iastore
       358: iload         18
       360: aload_0
       361: getfield      #84                 // Field nums:[I
       364: iload         14
       366: iaload
       367: isub
       368: istore        18
       370: iload         14
       372: aload         13
       374: getfield      #107                // Field scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
       377: if_icmpeq     393
       380: iload         14
       382: aload         13
       384: invokevirtual #110                // Method scala/collection/immutable/Range.step:()I
       387: iadd
       388: istore        14
       390: goto          327
       393: aload_2
       394: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 20 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, top, top, top, int, top, class scala/collection/immutable/Range$Exclusive, int, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, top, top, top, int, top, class scala/collection/immutable/Range$Exclusive, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, class java/lang/Object, int, top, int, top, null, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 25 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, class java/lang/Object, int, top, int, top, null, top, class "[I", int, int, top, top, top, int ]
          stack = []
        frame_type = 23 /* same */
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, class java/lang/Object, int, top, int, top, null, top, class "[I", int, int, int, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, class java/lang/Object, int, top, int, top, null, top, null, int, int, int, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, class java/lang/Object, int, int, int, top, null, top, null, int, int, int, top, top, int, top, top, int ]
          stack = []
        frame_type = 27 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, class java/lang/Object, int, int, int, int, null, top, null, int, int, int, class scala/collection/immutable/Range$Exclusive, int, int, int, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 65
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, class java/lang/Object, int, top, int, top, null, top, null, int, int, int, top, top, int ]
          stack = []
      LineNumberTable:
        line 620: 0
        line 621: 7
        line 624: 20
        line 625: 30
        line 627: 110
        line 630: 117
        line 631: 125
        line 632: 145
        line 634: 151
        line 636: 213
        line 637: 218
        line 640: 226
        line 641: 229
        line 642: 234
        line 643: 244
        line 644: 256
        line 642: 259
        line 646: 262
        line 647: 278
        line 648: 327
        line 649: 358
        line 647: 370
        line 653: 393
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          234     159     4     i   I
           30     364     1   buf   Lscala/collection/mutable/Builder;
          117     277     2   res   Ljava/lang/Object;
          125     269     3   idx   I
            0     395     0  this   Lscala/collection/SeqOps$CombinationsItr;
           77      30     8 foreach$mVc$sp_i   I
           62      45     7 foreach$mVc$sp_this   Lscala/collection/immutable/Range;
          174      31    11 lastIndexWhere$extension_i   I
          162      45     9 lastIndexWhere$extension_$this   Ljava/lang/Object;
          162      45    10 lastIndexWhere$extension_end   I
          327      66    14 foreach$mVc$sp_i   I
          312      81    13 foreach$mVc$sp_this   Lscala/collection/immutable/Range;
           44      16    15 until$extension_end   I
          294      16    16 until$extension_end   I
          346      11    17 $anonfun$next$4_min$extension_that   I
    Signature: #53                          // ()TC;

  private scala.Tuple3<scala.collection.IndexedSeq<A>, int[], int[]> init();
    descriptor: ()Lscala/Tuple3;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=22, args_size=1
         0: getstatic     #157                // Field scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
         3: getstatic     #162                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         6: astore        11
         8: astore        10
        10: aload         10
        12: aload         11
        14: invokevirtual #166                // Method scala/collection/mutable/HashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
        17: astore        19
        19: aload         19
        21: aconst_null
        22: astore        19
        24: astore        18
        26: aload         18
        28: aconst_null
        29: astore        18
        31: astore        17
        33: aload         17
        35: aconst_null
        36: astore        17
        38: astore        12
        40: aload         12
        42: aconst_null
        43: astore        10
        45: aconst_null
        46: astore        11
        48: aconst_null
        49: astore        12
        51: astore_1
        52: aload_0
        53: invokevirtual #73                 // Method scala$collection$SeqOps$CombinationsItr$$$outer:()Lscala/collection/SeqOps;
        56: dup
        57: ifnonnull     62
        60: aconst_null
        61: athrow
        62: astore        7
        64: aload         7
        66: instanceof    #168                // class scala/collection/Seq
        69: ifeq          82
        72: aload         7
        74: checkcast     #168                // class scala/collection/Seq
        77: astore        8
        79: goto          91
        82: aload         7
        84: invokeinterface #172,  1          // InterfaceMethod scala/collection/SeqOps.toSeq:()Lscala/collection/immutable/Seq;
        89: astore        8
        91: aload         8
        93: aconst_null
        94: astore        7
        96: aconst_null
        97: astore        8
        99: aload_1
       100: invokedynamic #194,  0            // InvokeDynamic #0:apply:(Lscala/collection/mutable/HashMap;)Lscala/Function1;
       105: invokeinterface #198,  2          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       110: checkcast     #18                 // class scala/collection/SeqOps
       113: invokedynamic #207,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       118: getstatic     #210                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
       121: invokeinterface #214,  3          // InterfaceMethod scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       126: checkcast     #216                // class scala/collection/IterableOps
       129: getstatic     #221                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       132: invokevirtual #225                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       135: invokeinterface #229,  2          // InterfaceMethod scala/collection/IterableOps.unzip:(Lscala/Function1;)Lscala/Tuple2;
       140: astore_2
       141: aload_2
       142: ifnull        165
       145: aload_2
       146: invokevirtual #234                // Method scala/Tuple2._1:()Ljava/lang/Object;
       149: checkcast     #168                // class scala/collection/Seq
       152: astore_3
       153: aload_2
       154: invokevirtual #237                // Method scala/Tuple2._2:()Ljava/lang/Object;
       157: checkcast     #168                // class scala/collection/Seq
       160: astore        4
       162: goto          174
       165: new           #239                // class scala/MatchError
       168: dup
       169: aconst_null
       170: invokespecial #242                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       173: athrow
       174: aload_1
       175: invokevirtual #247                // Method scala/collection/mutable/HashMap.size:()I
       178: newarray       int
       180: astore        5
       182: aload         4
       184: aload         5
       186: invokedynamic #258,  0            // InvokeDynamic #2:apply$mcVI$sp:([I)Lscala/runtime/java8/JFunction1$mcVI$sp;
       191: invokeinterface #262,  2          // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
       196: aload         5
       198: arraylength
       199: newarray       int
       201: astore        6
       203: aload_0
       204: getfield      #264                // Field n:I
       207: istore        21
       209: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       212: pop
       213: iconst_0
       214: istore        9
       216: aload         6
       218: arraylength
       219: istore        16
       221: getstatic     #89                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
       224: pop
       225: new           #21                 // class scala/collection/immutable/Range$Exclusive
       228: dup
       229: iload         9
       231: iload         16
       233: iconst_1
       234: invokespecial #93                 // Method scala/collection/immutable/Range$Exclusive."<init>":(III)V
       237: astore        13
       239: aload         13
       241: invokevirtual #96                 // Method scala/collection/immutable/Range.isEmpty:()Z
       244: ifne          314
       247: aload         13
       249: invokevirtual #100                // Method scala/collection/immutable/Range.start:()I
       252: istore        14
       254: aload         6
       256: iload         14
       258: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       261: pop
       262: aload         5
       264: iload         14
       266: iaload
       267: istore        20
       269: getstatic     #132                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       272: pop
       273: iload         21
       275: iload         20
       277: invokestatic  #123                // Method java/lang/Math.min:(II)I
       280: iastore
       281: iload         21
       283: aload         6
       285: iload         14
       287: iaload
       288: isub
       289: istore        21
       291: iload         14
       293: aload         13
       295: getfield      #107                // Field scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
       298: if_icmpeq     314
       301: iload         14
       303: aload         13
       305: invokevirtual #110                // Method scala/collection/immutable/Range.step:()I
       308: iadd
       309: istore        14
       311: goto          254
       314: aconst_null
       315: astore        13
       317: new           #266                // class scala/Tuple3
       320: dup
       321: aload_3
       322: getstatic     #271                // Field scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
       325: pop
       326: getstatic     #276                // Field scala/collection/IndexedSeq$.MODULE$:Lscala/collection/IndexedSeq$;
       329: astore        15
       331: new           #13                 // class scala/collection/IterableFactory$ToFactory
       334: dup
       335: aload         15
       337: invokespecial #279                // Method scala/collection/IterableFactory$ToFactory."<init>":(Lscala/collection/IterableFactory;)V
       340: aconst_null
       341: astore        15
       343: invokeinterface #283,  2          // InterfaceMethod scala/collection/Seq.to:(Lscala/collection/Factory;)Ljava/lang/Object;
       348: aload         5
       350: aload         6
       352: invokespecial #286                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       355: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/HashMap, top, top, top, top, top, top, top, top, null, null, null, top, top, top, top, null, null, null ]
          stack = [ class scala/collection/SeqOps ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/HashMap, top, top, top, top, top, class scala/collection/SeqOps, top, top, null, null, null, top, top, top, top, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/HashMap, top, top, top, top, top, class scala/collection/SeqOps, class scala/collection/Seq, top, null, null, null, top, top, top, top, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 73
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/HashMap, class scala/Tuple2, top, top, top, top, null, null, top, null, null, null, top, top, top, top, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/HashMap, class scala/Tuple2, class scala/collection/Seq, class scala/collection/Seq, top, top, null, null, top, null, null, null, top, top, top, top, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 79
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/HashMap, class scala/Tuple2, class scala/collection/Seq, class scala/collection/Seq, class "[I", class "[I", null, null, int, null, null, null, class scala/collection/immutable/Range$Exclusive, int, top, int, null, null, null, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/HashMap, class scala/Tuple2, class scala/collection/Seq, class scala/collection/Seq, class "[I", class "[I", null, null, int, null, null, null, class scala/collection/immutable/Range$Exclusive, top, top, int, null, null, null, top, int ]
          stack = []
      LineNumberTable:
        line 662: 0
        line 665: 52
        line 416: 64
        line 417: 82
        line 415: 91
        line 665: 91
        line 666: 174
        line 667: 182
        line 668: 196
        line 670: 203
        line 671: 209
        line 672: 254
        line 673: 281
        line 671: 291
        line 675: 317
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          153      12     3    es   Lscala/collection/Seq;
          162       3     4    is   Lscala/collection/Seq;
           52     303     1     m   Lscala/collection/mutable/HashMap;
          182     173     5    cs   [I
          203     152     6    ns   [I
            0     356     0  this   Lscala/collection/SeqOps$CombinationsItr;
           64      27     7 scala$collection$SeqOps$$toGenericSeq_this   Lscala/collection/SeqOps;
           10      30    10 apply_this   Lscala/collection/mutable/HashMap$;
           10      30    11 apply_elems   Lscala/collection/immutable/Seq;
          254      60    14 foreach$mVc$sp_i   I
          239      75    13 foreach$mVc$sp_this   Lscala/collection/immutable/Range;
          331       9    15 toFactory_factory   Lscala/collection/IterableFactory;
          221      16    16 until$extension_end   I
          269      11    20 $anonfun$init$8_min$extension_that   I
    Signature: #152                         // ()Lscala/Tuple3<Lscala/collection/IndexedSeq<TA;>;[I[I>;

  public scala.collection.SeqOps scala$collection$SeqOps$CombinationsItr$$$outer();
    descriptor: ()Lscala/collection/SeqOps;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #302                // Field $outer:Lscala/collection/SeqOps;
         4: areturn
      LineNumberTable:
        line 610: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/SeqOps$CombinationsItr;

  public static final int $anonfun$offs$1(int, int);
    descriptor: (II)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: iadd
         3: ireturn
      LineNumberTable:
        line 615: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$8   I
            0       4     1   x$9   I
    MethodParameters:
      Name                           Flags
      x$8                            final
      x$9                            final

  public static final scala.collection.mutable.Builder $anonfun$next$2(scala.collection.SeqOps$CombinationsItr, scala.collection.mutable.Builder, int, int);
    descriptor: (Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;II)Lscala/collection/mutable/Builder;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #313                // Field elms:Lscala/collection/IndexedSeq;
         5: aload_0
         6: getfield      #315                // Field offs:[I
         9: iload_2
        10: iaload
        11: iload_3
        12: iadd
        13: invokeinterface #320,  2          // InterfaceMethod scala/collection/IndexedSeq.apply:(I)Ljava/lang/Object;
        18: astore        4
        20: ifnonnull     25
        23: aconst_null
        24: athrow
        25: aload_1
        26: aload         4
        28: invokeinterface #326,  2          // InterfaceMethod scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        33: checkcast     #112                // class scala/collection/mutable/Builder
        36: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 626: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0 $this   Lscala/collection/SeqOps$CombinationsItr;
            0      37     1 buf$1   Lscala/collection/mutable/Builder;
            0      37     2   k$1   I
            0      37     3     j   I
           25       8     4 $plus$eq_elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      buf$1                          final
      k$1                            final
      j                              final

  public static final void $anonfun$next$1(scala.collection.SeqOps$CombinationsItr, scala.collection.mutable.Builder, int);
    descriptor: (Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=7, args_size=3
         0: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         3: pop
         4: iconst_0
         5: istore_3
         6: aload_0
         7: getfield      #84                 // Field nums:[I
        10: iload_2
        11: iaload
        12: istore        6
        14: getstatic     #89                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
        17: pop
        18: new           #21                 // class scala/collection/immutable/Range$Exclusive
        21: dup
        22: iload_3
        23: iload         6
        25: iconst_1
        26: invokespecial #93                 // Method scala/collection/immutable/Range$Exclusive."<init>":(III)V
        29: astore        4
        31: aload         4
        33: invokevirtual #96                 // Method scala/collection/immutable/Range.isEmpty:()Z
        36: ifne          78
        39: aload         4
        41: invokevirtual #100                // Method scala/collection/immutable/Range.start:()I
        44: istore        5
        46: aload_0
        47: aload_1
        48: iload_2
        49: iload         5
        51: invokestatic  #330                // Method $anonfun$next$2:(Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;II)Lscala/collection/mutable/Builder;
        54: pop
        55: iload         5
        57: aload         4
        59: getfield      #107                // Field scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
        62: if_icmpeq     78
        65: iload         5
        67: aload         4
        69: invokevirtual #110                // Method scala/collection/immutable/Range.step:()I
        72: iadd
        73: istore        5
        75: goto          46
        78: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, int, int, class scala/collection/immutable/Range$Exclusive, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/mutable/Builder, int, int, class scala/collection/immutable/Range$Exclusive, top, int ]
          stack = []
      LineNumberTable:
        line 625: 0
        line 625: 46
        line 625: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      79     0 $this   Lscala/collection/SeqOps$CombinationsItr;
            0      79     1 buf$1   Lscala/collection/mutable/Builder;
            0      79     2     k   I
           46      32     5 foreach_i   I
           31      47     4 foreach_this   Lscala/collection/immutable/Range;
           14      15     6 until$extension_end   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      buf$1                          final
      k                              final

  public static final boolean $anonfun$next$3(int);
    descriptor: (I)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: iconst_0
         2: if_icmple     7
         5: iconst_1
         6: ireturn
         7: iconst_0
         8: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 7 /* same */
      LineNumberTable:
        line 634: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$10   I
    MethodParameters:
      Name                           Flags
      x$10                           final

  public static final void $anonfun$next$4(scala.collection.SeqOps$CombinationsItr, scala.runtime.IntRef, int);
    descriptor: (Lscala/collection/SeqOps$CombinationsItr;Lscala/runtime/IntRef;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=3
         0: aload_0
         1: getfield      #84                 // Field nums:[I
         4: iload_2
         5: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         8: pop
         9: aload_1
        10: getfield      #341                // Field scala/runtime/IntRef.elem:I
        13: istore_3
        14: aload_0
        15: getfield      #117                // Field cnts:[I
        18: iload_2
        19: iaload
        20: istore        4
        22: getstatic     #132                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        25: pop
        26: iload_3
        27: iload         4
        29: invokestatic  #123                // Method java/lang/Math.min:(II)I
        32: iastore
        33: aload_1
        34: aload_1
        35: getfield      #341                // Field scala/runtime/IntRef.elem:I
        38: aload_0
        39: getfield      #84                 // Field nums:[I
        42: iload_2
        43: iaload
        44: isub
        45: putfield      #341                // Field scala/runtime/IntRef.elem:I
        48: return
      LineNumberTable:
        line 648: 0
        line 649: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0 $this   Lscala/collection/SeqOps$CombinationsItr;
            0      49     1 sum$1   Lscala/runtime/IntRef;
            0      49     2     k   I
           22      10     4 min$extension_that   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      sum$1                          final
      k                              final

  public static final int $anonfun$init$5(scala.collection.mutable.HashMap);
    descriptor: (Lscala/collection/mutable/HashMap;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #247                // Method scala/collection/mutable/HashMap.size:()I
         4: ireturn
      LineNumberTable:
        line 665: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   m$2   Lscala/collection/mutable/HashMap;
    MethodParameters:
      Name                           Flags
      m$2                            final

  public static final scala.Tuple2 $anonfun$init$4(scala.collection.mutable.HashMap, java.lang.Object);
    descriptor: (Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #231                // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_0
         6: aload_1
         7: aload_0
         8: invokedynamic #355,  0            // InvokeDynamic #3:apply$mcI$sp:(Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
        13: invokevirtual #359                // Method scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        16: invokespecial #362                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        19: areturn
      LineNumberTable:
        line 665: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0   m$2   Lscala/collection/mutable/HashMap;
            0      20     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      m$2                            final
      e                              final

  public static final int $anonfun$init$6(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #368                // Method scala/Tuple2._2$mcI$sp:()I
         4: ireturn
      LineNumberTable:
        line 665: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$11   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final void $anonfun$init$7(int[], int);
    descriptor: ([II)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: aload_0
         3: iload_1
         4: iaload
         5: iconst_1
         6: iadd
         7: iastore
         8: return
      LineNumberTable:
        line 667: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  cs$1   [I
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      cs$1                           final
      i                              final

  public static final void $anonfun$init$8(int[], scala.runtime.IntRef, int[], int);
    descriptor: ([ILscala/runtime/IntRef;[II)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=6, args_size=4
         0: aload_0
         1: iload_3
         2: getstatic     #82                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         5: pop
         6: aload_1
         7: getfield      #341                // Field scala/runtime/IntRef.elem:I
        10: istore        4
        12: aload_2
        13: iload_3
        14: iaload
        15: istore        5
        17: getstatic     #132                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        20: pop
        21: iload         4
        23: iload         5
        25: invokestatic  #123                // Method java/lang/Math.min:(II)I
        28: iastore
        29: aload_1
        30: aload_1
        31: getfield      #341                // Field scala/runtime/IntRef.elem:I
        34: aload_0
        35: iload_3
        36: iaload
        37: isub
        38: putfield      #341                // Field scala/runtime/IntRef.elem:I
        41: return
      LineNumberTable:
        line 672: 0
        line 673: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  ns$1   [I
            0      42     1   r$1   Lscala/runtime/IntRef;
            0      42     2  cs$1   [I
            0      42     3     k   I
           17      11     5 min$extension_that   I
    MethodParameters:
      Name                           Flags
      ns$1                           final
      r$1                            final
      cs$1                           final
      k                              final

  public scala.collection.SeqOps$CombinationsItr(scala.collection.SeqOps, int);
    descriptor: (Lscala/collection/SeqOps;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=15, args_size=3
         0: aload_0
         1: iload_2
         2: putfield      #264                // Field n:I
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #302                // Field $outer:Lscala/collection/SeqOps;
        16: aload_0
        17: invokespecial #378                // Method scala/collection/AbstractIterator."<init>":()V
        20: aload_0
        21: aload_0
        22: invokespecial #380                // Method init:()Lscala/Tuple3;
        25: astore        4
        27: aload         4
        29: ifnull        79
        32: aload         4
        34: invokevirtual #381                // Method scala/Tuple3._1:()Ljava/lang/Object;
        37: checkcast     #317                // class scala/collection/IndexedSeq
        40: astore        5
        42: aload         4
        44: invokevirtual #382                // Method scala/Tuple3._2:()Ljava/lang/Object;
        47: checkcast     #149                // class "[I"
        50: astore        6
        52: aload         4
        54: invokevirtual #385                // Method scala/Tuple3._3:()Ljava/lang/Object;
        57: checkcast     #149                // class "[I"
        60: astore        7
        62: new           #266                // class scala/Tuple3
        65: dup
        66: aload         5
        68: aload         6
        70: aload         7
        72: invokespecial #286                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        75: astore_3
        76: goto          88
        79: new           #239                // class scala/MatchError
        82: dup
        83: aconst_null
        84: invokespecial #242                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        87: athrow
        88: aload_3
        89: putfield      #387                // Field x$7:Lscala/Tuple3;
        92: aload_0
        93: aload_0
        94: getfield      #387                // Field x$7:Lscala/Tuple3;
        97: invokevirtual #381                // Method scala/Tuple3._1:()Ljava/lang/Object;
       100: checkcast     #317                // class scala/collection/IndexedSeq
       103: putfield      #313                // Field elms:Lscala/collection/IndexedSeq;
       106: aload_0
       107: aload_0
       108: getfield      #387                // Field x$7:Lscala/Tuple3;
       111: invokevirtual #382                // Method scala/Tuple3._2:()Ljava/lang/Object;
       114: checkcast     #149                // class "[I"
       117: putfield      #117                // Field cnts:[I
       120: aload_0
       121: aload_0
       122: getfield      #387                // Field x$7:Lscala/Tuple3;
       125: invokevirtual #385                // Method scala/Tuple3._3:()Ljava/lang/Object;
       128: checkcast     #149                // class "[I"
       131: putfield      #84                 // Field nums:[I
       134: aload_0
       135: aload_0
       136: getfield      #117                // Field cnts:[I
       139: iconst_0
       140: istore        9
       142: astore        8
       144: iload         9
       146: istore        10
       148: iconst_0
       149: istore        11
       151: aload         8
       153: arraylength
       154: iconst_1
       155: iadd
       156: newarray       int
       158: astore        14
       160: aload         14
       162: aconst_null
       163: astore        14
       165: astore        13
       167: aload         13
       169: aconst_null
       170: astore        13
       172: astore        12
       174: iload         11
       176: aload         8
       178: arraylength
       179: if_icmpge     205
       182: aload         12
       184: iload         11
       186: iload         10
       188: iastore
       189: iload         10
       191: aload         8
       193: iload         11
       195: iaload
       196: iadd
       197: istore        10
       199: iinc          11, 1
       202: goto          174
       205: aload         12
       207: iload         11
       209: iload         10
       211: iastore
       212: aload         12
       214: putfield      #315                // Field offs:[I
       217: aload_0
       218: iconst_1
       219: putfield      #48                 // Field _hasNext:Z
       222: return
      StackMapTable: number_of_entries = 5
        frame_type = 11 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 67
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/SeqOps, int, top, class scala/Tuple3 ]
          stack = [ class scala/collection/SeqOps$CombinationsItr ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/SeqOps, int, class scala/Tuple3, class scala/Tuple3, class scala/collection/IndexedSeq, class "[I", class "[I" ]
          stack = [ class scala/collection/SeqOps$CombinationsItr ]
        frame_type = 255 /* full_frame */
          offset_delta = 85
          locals = [ class scala/collection/SeqOps$CombinationsItr, class scala/collection/SeqOps, int, class scala/Tuple3, class scala/Tuple3, class scala/collection/IndexedSeq, class "[I", class "[I", class "[I", int, int, int, class "[I", null, null ]
          stack = [ class scala/collection/SeqOps$CombinationsItr ]
        frame_type = 94 /* same_locals_1_stack_item */
          stack = [ class scala/collection/SeqOps$CombinationsItr ]
      LineNumberTable:
        line 610: 0
        line 614: 20
        line 615: 134
        line 615: 196
        line 615: 197
        line 616: 217
        line 610: 222
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           42      37     5  elms   Lscala/collection/IndexedSeq;
           52      27     6  cnts   [I
           62      17     7  nums   [I
            0     223     0  this   Lscala/collection/SeqOps$CombinationsItr;
            0     223     1 $outer   Lscala/collection/SeqOps;
            0     223     2     n   I
          148      64    10 scanLeft$extension_v   I
          151      61    11 scanLeft$extension_i   I
          174      38    12 scanLeft$extension_res   Ljava/lang/Object;
          144      68     8 scanLeft$extension_$this   Ljava/lang/Object;
          144      68     9 scanLeft$extension_z   I
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      n                              final

  public static final java.lang.Object $anonfun$init$6$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #394                // Method $anonfun$init$6:(Lscala/Tuple2;)I
         4: invokestatic  #400                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 665: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$11   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final scala.collection.mutable.Builder $anonfun$next$2$adapted(scala.collection.SeqOps$CombinationsItr, scala.collection.mutable.Builder, int, java.lang.Object);
    descriptor: (Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;ILjava/lang/Object;)Lscala/collection/mutable/Builder;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: aload_3
         4: invokestatic  #406                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         7: invokestatic  #330                // Method $anonfun$next$2:(Lscala/collection/SeqOps$CombinationsItr;Lscala/collection/mutable/Builder;II)Lscala/collection/mutable/Builder;
        10: areturn
      LineNumberTable:
        line 625: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Lscala/collection/SeqOps$CombinationsItr;
            0      11     1 buf$1   Lscala/collection/mutable/Builder;
            0      11     2   k$1   I
            0      11     3     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      buf$1                          final
      k$1                            final
      j                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #418,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #11= #8 of #10;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  private static #16= #13 of #15;         // ToFactory=class scala/collection/IterableFactory$ToFactory of class scala/collection/IterableFactory
  private #19= #2 of #18;                 // CombinationsItr=class scala/collection/SeqOps$CombinationsItr of class scala/collection/SeqOps
  public static final #24= #21 of #23;    // Exclusive=class scala/collection/immutable/Range$Exclusive of class scala/collection/immutable/Range
  public static #29= #26 of #28;          // Int$=class scala/math/Ordering$Int$ of class scala/math/Ordering
Signature: #3                           // Lscala/collection/AbstractIterator<TC;>;
SourceFile: "Seq.scala"
BootstrapMethods:
  0: #190 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #174 (Ljava/lang/Object;)Ljava/lang/Object;
      #179 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$4:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
      #181 (Ljava/lang/Object;)Lscala/Tuple2;
      #182 5
      #183 1
      #181 (Ljava/lang/Object;)Lscala/Tuple2;
  1: #190 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #174 (Ljava/lang/Object;)Ljava/lang/Object;
      #203 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #204 (Lscala/Tuple2;)Ljava/lang/Object;
      #182 5
      #183 1
      #204 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #190 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #249 (I)V
      #254 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$7:([II)V
      #249 (I)V
      #183 1
  3: #190 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #348 ()I
      #351 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$5:(Lscala/collection/mutable/HashMap;)I
      #348 ()I
      #183 1
  4: #415 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #179 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$4:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
      #351 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$5:(Lscala/collection/mutable/HashMap;)I
      #203 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #254 REF_invokeStatic scala/collection/SeqOps$CombinationsItr.$anonfun$init$7:([II)V
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 00 00 11 00 AF 00 B0 01 01 58 01 59 01 01 6B
   01 6C 01 00 C7 00 C8 01 00 FA 00 FB 01 01 73 01
   74 01 00 65 00 66 01 01 32 01 33 01 01 91 01 92
   01 00 7C 00 7D 01 01 4E 01 4F 01 01 2F 00 79 01
   00 5A 01 77 00 00 2D 00 2E 00 00 96 00 97 01 00
   33 00 34 00 00 46 00 47 00
  Scala: length = 0x0 (unknown attribute)

