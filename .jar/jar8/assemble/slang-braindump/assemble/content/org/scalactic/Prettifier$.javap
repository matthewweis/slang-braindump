Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/Prettifier$.class
  Last modified May 29, 2022; size 4657 bytes
  SHA-256 checksum df9cb62d67896fc99812efe18b747f743472313f9aac7ebf3e1e070257412382
  Compiled from "Prettifier.scala"
public final class org.scalactic.Prettifier$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalactic/Prettifier$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 11, attributes: 4
Constant pool:
    #1 = Utf8               org/scalactic/Prettifier$
    #2 = Class              #1            // org/scalactic/Prettifier$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Prettifier.scala
    #8 = Utf8               org/scalactic/Prettifier$$anon$1
    #9 = Class              #8            // org/scalactic/Prettifier$$anon$1
   #10 = Utf8               org/scalactic/Prettifier$$anon$2
   #11 = Class              #10           // org/scalactic/Prettifier$$anon$2
   #12 = Utf8               MODULE$
   #13 = Utf8               Lorg/scalactic/Prettifier$;
   #14 = Utf8               default
   #15 = Utf8               Lorg/scalactic/Prettifier;
   #16 = Utf8               basic
   #17 = Utf8               Lorg/scalactic/BasicPrettifier;
   #18 = Utf8               lineSeparator
   #19 = Utf8               Ljava/lang/String;
   #20 = Utf8               <clinit>
   #21 = Utf8               ()V
   #22 = Utf8               <init>
   #23 = NameAndType        #22:#21       // "<init>":()V
   #24 = Methodref          #2.#23        // org/scalactic/Prettifier$."<init>":()V
   #25 = NameAndType        #12:#13       // MODULE$:Lorg/scalactic/Prettifier$;
   #26 = Fieldref           #2.#25        // org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
   #27 = Methodref          #11.#23       // org/scalactic/Prettifier$$anon$2."<init>":()V
   #28 = NameAndType        #14:#15       // default:Lorg/scalactic/Prettifier;
   #29 = Fieldref           #2.#28        // org/scalactic/Prettifier$.default:Lorg/scalactic/Prettifier;
   #30 = Utf8               org/scalactic/BasicPrettifier
   #31 = Class              #30           // org/scalactic/BasicPrettifier
   #32 = Methodref          #31.#23       // org/scalactic/BasicPrettifier."<init>":()V
   #33 = NameAndType        #16:#17       // basic:Lorg/scalactic/BasicPrettifier;
   #34 = Fieldref           #2.#33        // org/scalactic/Prettifier$.basic:Lorg/scalactic/BasicPrettifier;
   #35 = Utf8               scala/compat/Platform$
   #36 = Class              #35           // scala/compat/Platform$
   #37 = Utf8               Lscala/compat/Platform$;
   #38 = NameAndType        #12:#37       // MODULE$:Lscala/compat/Platform$;
   #39 = Fieldref           #36.#38       // scala/compat/Platform$.MODULE$:Lscala/compat/Platform$;
   #40 = Utf8               EOL
   #41 = Utf8               ()Ljava/lang/String;
   #42 = NameAndType        #40:#41       // EOL:()Ljava/lang/String;
   #43 = Methodref          #36.#42       // scala/compat/Platform$.EOL:()Ljava/lang/String;
   #44 = NameAndType        #18:#19       // lineSeparator:Ljava/lang/String;
   #45 = Fieldref           #2.#44        // org/scalactic/Prettifier$.lineSeparator:Ljava/lang/String;
   #46 = Utf8               apply
   #47 = Utf8               (Lscala/PartialFunction;)Lorg/scalactic/Prettifier;
   #48 = Utf8               (Lscala/PartialFunction<Ljava/lang/Object;Ljava/lang/String;>;)Lorg/scalactic/Prettifier;
   #49 = Utf8               fun
   #50 = Utf8               (Lscala/PartialFunction;)V
   #51 = NameAndType        #22:#50       // "<init>":(Lscala/PartialFunction;)V
   #52 = Methodref          #9.#51        // org/scalactic/Prettifier$$anon$1."<init>":(Lscala/PartialFunction;)V
   #53 = Utf8               this
   #54 = Utf8               Lscala/PartialFunction;
   #55 = Utf8               ()Lorg/scalactic/Prettifier;
   #56 = Utf8               ()Lorg/scalactic/BasicPrettifier;
   #57 = Utf8               diffStrings
   #58 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/Tuple2;
   #59 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;
   #60 = Utf8               s
   #61 = Utf8               t
   #62 = Utf8               equals
   #63 = Utf8               (Ljava/lang/Object;)Z
   #64 = NameAndType        #62:#63       // equals:(Ljava/lang/Object;)Z
   #65 = Methodref          #4.#64        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #66 = Utf8               findCommonPrefixLength$1
   #67 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I
   #68 = NameAndType        #66:#67       // findCommonPrefixLength$1:(Ljava/lang/String;Ljava/lang/String;)I
   #69 = Methodref          #2.#68        // org/scalactic/Prettifier$.findCommonPrefixLength$1:(Ljava/lang/String;Ljava/lang/String;)I
   #70 = Utf8               java/lang/String
   #71 = Class              #70           // java/lang/String
   #72 = Utf8               substring
   #73 = Utf8               (I)Ljava/lang/String;
   #74 = NameAndType        #72:#73       // substring:(I)Ljava/lang/String;
   #75 = Methodref          #71.#74       // java/lang/String.substring:(I)Ljava/lang/String;
   #76 = Utf8               findCommonSuffixLength$1
   #77 = NameAndType        #76:#67       // findCommonSuffixLength$1:(Ljava/lang/String;Ljava/lang/String;)I
   #78 = Methodref          #2.#77        // org/scalactic/Prettifier$.findCommonSuffixLength$1:(Ljava/lang/String;Ljava/lang/String;)I
   #79 = Utf8               (II)Ljava/lang/String;
   #80 = NameAndType        #72:#79       // substring:(II)Ljava/lang/String;
   #81 = Methodref          #71.#80       // java/lang/String.substring:(II)Ljava/lang/String;
   #82 = Utf8               length
   #83 = Utf8               ()I
   #84 = NameAndType        #82:#83       // length:()I
   #85 = Methodref          #71.#84       // java/lang/String.length:()I
   #86 = Utf8
   #87 = String             #86           //
   #88 = Utf8               java/lang/StringBuilder
   #89 = Class              #88           // java/lang/StringBuilder
   #90 = Integer            3
   #91 = Utf8               (I)V
   #92 = NameAndType        #22:#91       // "<init>":(I)V
   #93 = Methodref          #89.#92       // java/lang/StringBuilder."<init>":(I)V
   #94 = Utf8               ...
   #95 = String             #94           // ...
   #96 = Utf8               append
   #97 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #98 = NameAndType        #96:#97       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #99 = Methodref          #89.#98       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #100 = Utf8               toString
  #101 = NameAndType        #100:#41      // toString:()Ljava/lang/String;
  #102 = Methodref          #89.#101      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #103 = Utf8               scala/Tuple2
  #104 = Class              #103          // scala/Tuple2
  #105 = Integer            2
  #106 = Utf8               [
  #107 = String             #106          // [
  #108 = Utf8               ]
  #109 = String             #108          // ]
  #110 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #111 = NameAndType        #22:#110      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #112 = Methodref          #104.#111     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #113 = Utf8               commonPrefixLength
  #114 = Utf8               I
  #115 = Utf8               commonSuffixLength
  #116 = Utf8               prefix
  #117 = Utf8               suffix
  #118 = Utf8               sMiddleEnd
  #119 = Utf8               tMiddleEnd
  #120 = Utf8               sMiddle
  #121 = Utf8               tMiddle
  #122 = Utf8               MaxContext
  #123 = Utf8               shortPrefix
  #124 = Utf8               shortSuffix
  #125 = Utf8               getObjectsForFailureMessage
  #126 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #127 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;
  #128 = Utf8               a
  #129 = Utf8               b
  #130 = NameAndType        #57:#58       // diffStrings:(Ljava/lang/String;Ljava/lang/String;)Lscala/Tuple2;
  #131 = Methodref          #2.#130       // org/scalactic/Prettifier$.diffStrings:(Ljava/lang/String;Ljava/lang/String;)Lscala/Tuple2;
  #132 = Utf8               Ljava/lang/Object;
  #133 = Utf8               writeReplace
  #134 = Utf8               ()Ljava/lang/Object;
  #135 = Utf8               scala/runtime/ModuleSerializationProxy
  #136 = Class              #135          // scala/runtime/ModuleSerializationProxy
  #137 = Utf8               (Ljava/lang/Class;)V
  #138 = NameAndType        #22:#137      // "<init>":(Ljava/lang/Class;)V
  #139 = Methodref          #136.#138     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #140 = Utf8               scala/runtime/RichInt$
  #141 = Class              #140          // scala/runtime/RichInt$
  #142 = Utf8               Lscala/runtime/RichInt$;
  #143 = NameAndType        #12:#142      // MODULE$:Lscala/runtime/RichInt$;
  #144 = Fieldref           #141.#143     // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #145 = Utf8               scala/Predef$
  #146 = Class              #145          // scala/Predef$
  #147 = Utf8               Lscala/Predef$;
  #148 = NameAndType        #12:#147      // MODULE$:Lscala/Predef$;
  #149 = Fieldref           #146.#148     // scala/Predef$.MODULE$:Lscala/Predef$;
  #150 = Utf8               intWrapper
  #151 = Utf8               (I)I
  #152 = NameAndType        #150:#151     // intWrapper:(I)I
  #153 = Methodref          #146.#152     // scala/Predef$.intWrapper:(I)I
  #154 = Utf8               min$extension
  #155 = Utf8               (II)I
  #156 = NameAndType        #154:#155     // min$extension:(II)I
  #157 = Methodref          #141.#156     // scala/runtime/RichInt$.min$extension:(II)I
  #158 = Utf8               charAt
  #159 = Utf8               (I)C
  #160 = NameAndType        #158:#159     // charAt:(I)C
  #161 = Methodref          #71.#160      // java/lang/String.charAt:(I)C
  #162 = Utf8               max
  #163 = Utf8               i
  #164 = Utf8               found
  #165 = Utf8               Z
  #166 = Methodref          #4.#23        // java/lang/Object."<init>":()V
  #167 = Utf8               Code
  #168 = Utf8               LineNumberTable
  #169 = Utf8               LocalVariableTable
  #170 = Utf8               Signature
  #171 = Utf8               MethodParameters
  #172 = Utf8               StackMapTable
  #173 = Utf8               InnerClasses
  #174 = Utf8               SourceFile
  #175 = Utf8               ScalaInlineInfo
  #176 = Utf8               Scala
{
  public static final org.scalactic.Prettifier$ MODULE$;
    descriptor: Lorg/scalactic/Prettifier$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final org.scalactic.Prettifier default;
    descriptor: Lorg/scalactic/Prettifier;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.scalactic.BasicPrettifier basic;
    descriptor: Lorg/scalactic/BasicPrettifier;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.lang.String lineSeparator;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/scalactic/Prettifier$
         3: dup
         4: invokespecial #24                 // Method "<init>":()V
         7: putstatic     #26                 // Field MODULE$:Lorg/scalactic/Prettifier$;
        10: new           #11                 // class org/scalactic/Prettifier$$anon$2
        13: dup
        14: invokespecial #27                 // Method org/scalactic/Prettifier$$anon$2."<init>":()V
        17: putstatic     #29                 // Field default:Lorg/scalactic/Prettifier;
        20: new           #31                 // class org/scalactic/BasicPrettifier
        23: dup
        24: invokespecial #32                 // Method org/scalactic/BasicPrettifier."<init>":()V
        27: putstatic     #34                 // Field basic:Lorg/scalactic/BasicPrettifier;
        30: getstatic     #39                 // Field scala/compat/Platform$.MODULE$:Lscala/compat/Platform$;
        33: invokevirtual #43                 // Method scala/compat/Platform$.EOL:()Ljava/lang/String;
        36: putstatic     #45                 // Field lineSeparator:Ljava/lang/String;
        39: return
      LineNumberTable:
        line 137: 0
        line 185: 10
        line 184: 17
        line 290: 20
        line 346: 30
        line 137: 39

  public org.scalactic.Prettifier apply(scala.PartialFunction<java.lang.Object, java.lang.String>);
    descriptor: (Lscala/PartialFunction;)Lorg/scalactic/Prettifier;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #9                  // class org/scalactic/Prettifier$$anon$1
         3: dup
         4: aload_1
         5: invokespecial #52                 // Method org/scalactic/Prettifier$$anon$1."<init>":(Lscala/PartialFunction;)V
         8: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalactic/Prettifier$;
            0       9     1   fun   Lscala/PartialFunction;
    Signature: #48                          // (Lscala/PartialFunction<Ljava/lang/Object;Ljava/lang/String;>;)Lorg/scalactic/Prettifier;
    MethodParameters:
      Name                           Flags
      fun                            final

  public org.scalactic.Prettifier default();
    descriptor: ()Lorg/scalactic/Prettifier;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #29                 // Field default:Lorg/scalactic/Prettifier;
         3: areturn
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/scalactic/Prettifier$;

  public org.scalactic.BasicPrettifier basic();
    descriptor: ()Lorg/scalactic/BasicPrettifier;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #34                 // Field basic:Lorg/scalactic/BasicPrettifier;
         3: areturn
      LineNumberTable:
        line 290: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/scalactic/Prettifier$;

  public scala.Tuple2<java.lang.String, java.lang.String> diffStrings(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=15, args_size=3
         0: aload_1
         1: aload_2
         2: astore_3
         3: dup
         4: ifnonnull     15
         7: pop
         8: aload_3
         9: ifnull        299
        12: goto          22
        15: aload_3
        16: invokevirtual #65                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        19: ifne          299
        22: aload_1
        23: aload_2
        24: invokestatic  #69                 // Method findCommonPrefixLength$1:(Ljava/lang/String;Ljava/lang/String;)I
        27: istore        4
        29: aload_1
        30: iload         4
        32: invokevirtual #75                 // Method java/lang/String.substring:(I)Ljava/lang/String;
        35: aload_2
        36: iload         4
        38: invokevirtual #75                 // Method java/lang/String.substring:(I)Ljava/lang/String;
        41: invokestatic  #78                 // Method findCommonSuffixLength$1:(Ljava/lang/String;Ljava/lang/String;)I
        44: istore        5
        46: aload_1
        47: iconst_0
        48: iload         4
        50: invokevirtual #81                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        53: astore        6
        55: aload_1
        56: invokevirtual #85                 // Method java/lang/String.length:()I
        59: iload         5
        61: isub
        62: iconst_0
        63: if_icmpge     71
        66: ldc           #87                 // String
        68: goto          82
        71: aload_1
        72: aload_1
        73: invokevirtual #85                 // Method java/lang/String.length:()I
        76: iload         5
        78: isub
        79: invokevirtual #75                 // Method java/lang/String.substring:(I)Ljava/lang/String;
        82: astore        7
        84: aload_1
        85: invokevirtual #85                 // Method java/lang/String.length:()I
        88: iload         5
        90: isub
        91: istore        8
        93: aload_2
        94: invokevirtual #85                 // Method java/lang/String.length:()I
        97: iload         5
        99: isub
       100: istore        9
       102: aload_1
       103: iload         4
       105: iload         8
       107: invokevirtual #81                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       110: astore        10
       112: aload_2
       113: iload         4
       115: iload         9
       117: invokevirtual #81                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       120: astore        11
       122: bipush        20
       124: istore        12
       126: iload         4
       128: iload         12
       130: if_icmple     169
       133: new           #89                 // class java/lang/StringBuilder
       136: dup
       137: ldc           #90                 // int 3
       139: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
       142: ldc           #95                 // String ...
       144: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       147: aload         6
       149: aload         6
       151: invokevirtual #85                 // Method java/lang/String.length:()I
       154: iload         12
       156: isub
       157: invokevirtual #75                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       160: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       163: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       166: goto          171
       169: aload         6
       171: astore        13
       173: iload         5
       175: iload         12
       177: if_icmple     211
       180: new           #89                 // class java/lang/StringBuilder
       183: dup
       184: ldc           #90                 // int 3
       186: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
       189: aload         7
       191: iconst_0
       192: iload         12
       194: invokevirtual #81                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       197: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       200: ldc           #95                 // String ...
       202: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       205: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       208: goto          213
       211: aload         7
       213: astore        14
       215: new           #104                // class scala/Tuple2
       218: dup
       219: new           #89                 // class java/lang/StringBuilder
       222: dup
       223: ldc           #105                // int 2
       225: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
       228: aload         13
       230: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       233: ldc           #107                // String [
       235: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       238: aload         10
       240: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       243: ldc           #109                // String ]
       245: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       248: aload         14
       250: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       253: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       256: new           #89                 // class java/lang/StringBuilder
       259: dup
       260: ldc           #105                // int 2
       262: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
       265: aload         13
       267: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       270: ldc           #107                // String [
       272: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       275: aload         11
       277: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       280: ldc           #109                // String ]
       282: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       285: aload         14
       287: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       290: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       293: invokespecial #112                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       296: goto          308
       299: new           #104                // class scala/Tuple2
       302: dup
       303: aload_1
       304: aload_2
       305: invokespecial #112                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       308: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class org/scalactic/Prettifier$, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 254 /* append */
          offset_delta = 48
          locals = [ int, int, class java/lang/String ]
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class org/scalactic/Prettifier$, class java/lang/String, class java/lang/String, class java/lang/String, int, int, class java/lang/String, class java/lang/String, int, int, class java/lang/String, class java/lang/String, int ]
          stack = []
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ class java/lang/String ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 85
          locals = [ class org/scalactic/Prettifier$, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 315: 0
        line 316: 22
        line 317: 29
        line 318: 46
        line 319: 55
        line 320: 84
        line 321: 93
        line 322: 102
        line 323: 112
        line 324: 122
        line 325: 126
        line 326: 173
        line 327: 215
        line 330: 299
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29     267     4 commonPrefixLength   I
           46     250     5 commonSuffixLength   I
           55     241     6 prefix   Ljava/lang/String;
           84     212     7 suffix   Ljava/lang/String;
           93     203     8 sMiddleEnd   I
          102     194     9 tMiddleEnd   I
          112     184    10 sMiddle   Ljava/lang/String;
          122     174    11 tMiddle   Ljava/lang/String;
          126     170    12 MaxContext   I
          173     123    13 shortPrefix   Ljava/lang/String;
          215      81    14 shortSuffix   Ljava/lang/String;
            0     309     0  this   Lorg/scalactic/Prettifier$;
            0     309     1     s   Ljava/lang/String;
            0     309     2     t   Ljava/lang/String;
    Signature: #59                          // (Ljava/lang/String;Ljava/lang/String;)Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      s                              final
      t                              final

  public scala.Tuple2<java.lang.Object, java.lang.Object> getObjectsForFailureMessage(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=9, args_size=3
         0: aload_1
         1: astore        5
         3: aload         5
         5: instanceof    #71                 // class java/lang/String
         8: ifeq          72
        11: aload         5
        13: checkcast     #71                 // class java/lang/String
        16: astore        6
        18: aload_2
        19: astore        7
        21: aload         7
        23: instanceof    #71                 // class java/lang/String
        26: ifeq          49
        29: aload         7
        31: checkcast     #71                 // class java/lang/String
        34: astore        8
        36: aload_0
        37: aload         6
        39: aload         8
        41: invokevirtual #131                // Method diffStrings:(Ljava/lang/String;Ljava/lang/String;)Lscala/Tuple2;
        44: astore        4
        46: goto          66
        49: goto          52
        52: new           #104                // class scala/Tuple2
        55: dup
        56: aload_1
        57: aload_2
        58: invokespecial #112                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        61: astore        4
        63: goto          66
        66: aload         4
        68: astore_3
        69: goto          88
        72: goto          75
        75: new           #104                // class scala/Tuple2
        78: dup
        79: aload_1
        80: aload_2
        81: invokespecial #112                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        84: astore_3
        85: goto          88
        88: aload_3
        89: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class org/scalactic/Prettifier$, class java/lang/Object, class java/lang/Object, top, top, class java/lang/Object, class java/lang/String, class java/lang/Object ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class org/scalactic/Prettifier$, class java/lang/Object, class java/lang/Object, top, class scala/Tuple2, class java/lang/Object, class java/lang/String, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class org/scalactic/Prettifier$, class java/lang/Object, class java/lang/Object, top, top, class java/lang/Object ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class org/scalactic/Prettifier$, class java/lang/Object, class java/lang/Object, class scala/Tuple2, top, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 334: 0
        line 335: 3
        line 336: 18
        line 337: 21
        line 338: 36
        line 337: 49
        line 340: 52
        line 336: 66
        line 335: 72
        line 343: 75
        line 334: 88
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      90     0  this   Lorg/scalactic/Prettifier$;
            0      90     1     a   Ljava/lang/Object;
            0      90     2     b   Ljava/lang/Object;
    Signature: #127                         // (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      a                              final
      b                              final

  public java.lang.String lineSeparator();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #45                 // Field lineSeparator:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 346: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/scalactic/Prettifier$;

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #136                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class org/scalactic/Prettifier$
         6: invokespecial #139                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalactic/Prettifier$;

  private static final int findCommonPrefixLength$1(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=2
         0: getstatic     #144                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         3: getstatic     #149                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #85                 // Method java/lang/String.length:()I
        10: invokevirtual #153                // Method scala/Predef$.intWrapper:(I)I
        13: aload_1
        14: invokevirtual #85                 // Method java/lang/String.length:()I
        17: invokevirtual #157                // Method scala/runtime/RichInt$.min$extension:(II)I
        20: istore_2
        21: iconst_0
        22: istore_3
        23: iconst_0
        24: istore        4
        26: iload_3
        27: iload_2
        28: if_icmpge     35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: iload         4
        38: ifne          45
        41: iconst_1
        42: goto          46
        45: iconst_0
        46: iand
        47: ifeq          85
        50: aload_0
        51: iload_3
        52: invokevirtual #161                // Method java/lang/String.charAt:(I)C
        55: aload_1
        56: iload_3
        57: invokevirtual #161                // Method java/lang/String.charAt:(I)C
        60: if_icmpeq     67
        63: iconst_1
        64: goto          68
        67: iconst_0
        68: istore        4
        70: iload         4
        72: ifne          82
        75: iload_3
        76: iconst_1
        77: iadd
        78: istore_3
        79: goto          82
        82: goto          26
        85: iload_3
        86: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 254 /* append */
          offset_delta = 26
          locals = [ int, int, int ]
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/String, class java/lang/String, int, int, int ]
          stack = [ int, int ]
        frame_type = 20 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 13 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 294: 0
        line 295: 21
        line 296: 23
        line 297: 26
        line 298: 50
        line 299: 70
        line 300: 75
        line 297: 82
        line 302: 85
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      65     2   max   I
           23      63     3     i   I
           26      60     4 found   Z
            0      87     0     s   Ljava/lang/String;
            0      87     1     t   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final
      t                              final

  private static final int findCommonSuffixLength$1(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=2
         0: getstatic     #144                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         3: getstatic     #149                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #85                 // Method java/lang/String.length:()I
        10: invokevirtual #153                // Method scala/Predef$.intWrapper:(I)I
        13: aload_1
        14: invokevirtual #85                 // Method java/lang/String.length:()I
        17: invokevirtual #157                // Method scala/runtime/RichInt$.min$extension:(II)I
        20: istore_2
        21: iconst_0
        22: istore_3
        23: iconst_0
        24: istore        4
        26: iload_3
        27: iload_2
        28: if_icmpge     35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: iload         4
        38: ifne          45
        41: iconst_1
        42: goto          46
        45: iconst_0
        46: iand
        47: ifeq          99
        50: aload_0
        51: aload_0
        52: invokevirtual #85                 // Method java/lang/String.length:()I
        55: iconst_1
        56: isub
        57: iload_3
        58: isub
        59: invokevirtual #161                // Method java/lang/String.charAt:(I)C
        62: aload_1
        63: aload_1
        64: invokevirtual #85                 // Method java/lang/String.length:()I
        67: iconst_1
        68: isub
        69: iload_3
        70: isub
        71: invokevirtual #161                // Method java/lang/String.charAt:(I)C
        74: if_icmpeq     81
        77: iconst_1
        78: goto          82
        81: iconst_0
        82: istore        4
        84: iload         4
        86: ifne          96
        89: iload_3
        90: iconst_1
        91: iadd
        92: istore_3
        93: goto          96
        96: goto          26
        99: iload_3
       100: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 254 /* append */
          offset_delta = 26
          locals = [ int, int, int ]
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/String, class java/lang/String, int, int, int ]
          stack = [ int, int ]
        frame_type = 34 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 13 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 305: 0
        line 306: 21
        line 307: 23
        line 308: 26
        line 309: 50
        line 310: 84
        line 311: 89
        line 308: 96
        line 313: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      79     2   max   I
           23      77     3     i   I
           26      74     4 found   Z
            0     101     0     s   Ljava/lang/String;
            0     101     1     t   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final
      t                              final

  private org.scalactic.Prettifier$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #166                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 349: 0
        line 137: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/Prettifier$;
}
InnerClasses:
  public final #9;                        // class org/scalactic/Prettifier$$anon$1
  public final #11;                       // class org/scalactic/Prettifier$$anon$2
SourceFile: "Prettifier.scala"
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 01 00 0A 00 16 00 15 01 00 2E 00 2F 01 00 10
   00 38 01 00 0E 00 37 01 00 39 00 3A 01 00 42 00
   43 01 00 4C 00 43 01 00 7D 00 7E 01 00 12 00 29
   01 00 85 00 86 01
  Scala: length = 0x0 (unknown attribute)

