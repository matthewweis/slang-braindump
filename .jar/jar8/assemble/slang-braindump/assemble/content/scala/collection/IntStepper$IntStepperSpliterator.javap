Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/IntStepper$IntStepperSpliterator.class
  Last modified May 29, 2022; size 2859 bytes
  SHA-256 checksum f6bd1c8ef4150613a02c79b57f4a9625528a75b375a9dede4fafa71976202422
  Compiled from "Stepper.scala"
public class scala.collection.IntStepper$IntStepperSpliterator implements java.util.Spliterator$OfInt
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/IntStepper$IntStepperSpliterator
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 12, attributes: 4
Constant pool:
    #1 = Utf8               scala/collection/IntStepper$IntStepperSpliterator
    #2 = Class              #1            // scala/collection/IntStepper$IntStepperSpliterator
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/util/Spliterator$OfInt
    #6 = Class              #5            // java/util/Spliterator$OfInt
    #7 = Utf8               Stepper.scala
    #8 = Utf8               java/util/Spliterator
    #9 = Class              #8            // java/util/Spliterator
   #10 = Utf8               OfInt
   #11 = Utf8               java/util/Spliterator$OfPrimitive
   #12 = Class              #11           // java/util/Spliterator$OfPrimitive
   #13 = Utf8               OfPrimitive
   #14 = Utf8               scala/collection/IntStepper
   #15 = Class              #14           // scala/collection/IntStepper
   #16 = Utf8               IntStepperSpliterator
   #17 = Utf8               s
   #18 = Utf8               Lscala/collection/IntStepper;
   #19 = Utf8               tryAdvance
   #20 = Utf8               (Ljava/util/function/IntConsumer;)Z
   #21 = Utf8               c
   #22 = NameAndType        #17:#18       // s:Lscala/collection/IntStepper;
   #23 = Fieldref           #2.#22        // scala/collection/IntStepper$IntStepperSpliterator.s:Lscala/collection/IntStepper;
   #24 = Utf8               hasStep
   #25 = Utf8               ()Z
   #26 = NameAndType        #24:#25       // hasStep:()Z
   #27 = InterfaceMethodref #15.#26       // scala/collection/IntStepper.hasStep:()Z
   #28 = Utf8               nextStep$mcI$sp
   #29 = Utf8               ()I
   #30 = NameAndType        #28:#29       // nextStep$mcI$sp:()I
   #31 = InterfaceMethodref #15.#30       // scala/collection/IntStepper.nextStep$mcI$sp:()I
   #32 = Utf8               java/util/function/IntConsumer
   #33 = Class              #32           // java/util/function/IntConsumer
   #34 = Utf8               accept
   #35 = Utf8               (I)V
   #36 = NameAndType        #34:#35       // accept:(I)V
   #37 = InterfaceMethodref #33.#36       // java/util/function/IntConsumer.accept:(I)V
   #38 = Utf8               this
   #39 = Utf8               Lscala/collection/IntStepper$IntStepperSpliterator;
   #40 = Utf8               Ljava/util/function/IntConsumer;
   #41 = Utf8               (Ljava/util/function/Consumer;)Z
   #42 = Utf8               (Ljava/util/function/Consumer<-Ljava/lang/Integer;>;)Z
   #43 = NameAndType        #19:#20       // tryAdvance:(Ljava/util/function/IntConsumer;)Z
   #44 = Methodref          #2.#43        // scala/collection/IntStepper$IntStepperSpliterator.tryAdvance:(Ljava/util/function/IntConsumer;)Z
   #45 = Utf8               java/lang/Integer
   #46 = Class              #45           // java/lang/Integer
   #47 = Utf8               valueOf
   #48 = Utf8               (I)Ljava/lang/Integer;
   #49 = NameAndType        #47:#48       // valueOf:(I)Ljava/lang/Integer;
   #50 = Methodref          #46.#49       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #51 = Utf8               java/util/function/Consumer
   #52 = Class              #51           // java/util/function/Consumer
   #53 = Utf8               (Ljava/lang/Object;)V
   #54 = NameAndType        #34:#53       // accept:(Ljava/lang/Object;)V
   #55 = InterfaceMethodref #52.#54       // java/util/function/Consumer.accept:(Ljava/lang/Object;)V
   #56 = Utf8               Ljava/util/function/Consumer;
   #57 = Utf8               trySplit
   #58 = Utf8               ()Ljava/util/Spliterator$OfInt;
   #59 = Utf8               ()Lscala/collection/IntStepper;
   #60 = NameAndType        #57:#59       // trySplit:()Lscala/collection/IntStepper;
   #61 = InterfaceMethodref #15.#60       // scala/collection/IntStepper.trySplit:()Lscala/collection/IntStepper;
   #62 = Utf8               spliterator
   #63 = NameAndType        #62:#58       // spliterator:()Ljava/util/Spliterator$OfInt;
   #64 = InterfaceMethodref #15.#63       // scala/collection/IntStepper.spliterator:()Ljava/util/Spliterator$OfInt;
   #65 = Utf8               sp
   #66 = Utf8               estimateSize
   #67 = Utf8               ()J
   #68 = NameAndType        #66:#67       // estimateSize:()J
   #69 = InterfaceMethodref #15.#68       // scala/collection/IntStepper.estimateSize:()J
   #70 = Utf8               characteristics
   #71 = NameAndType        #70:#29       // characteristics:()I
   #72 = InterfaceMethodref #15.#71       // scala/collection/IntStepper.characteristics:()I
   #73 = Utf8               forEachRemaining
   #74 = Utf8               (Ljava/util/function/IntConsumer;)V
   #75 = Utf8               (Ljava/util/function/Consumer;)V
   #76 = Utf8               (Ljava/util/function/Consumer<-Ljava/lang/Integer;>;)V
   #77 = NameAndType        #73:#74       // forEachRemaining:(Ljava/util/function/IntConsumer;)V
   #78 = Methodref          #2.#77        // scala/collection/IntStepper$IntStepperSpliterator.forEachRemaining:(Ljava/util/function/IntConsumer;)V
   #79 = Utf8               x$1
   #80 = Utf8               Ljava/lang/Object;
   #81 = Utf8               ()Ljava/util/Spliterator;
   #82 = NameAndType        #57:#58       // trySplit:()Ljava/util/Spliterator$OfInt;
   #83 = Methodref          #2.#82        // scala/collection/IntStepper$IntStepperSpliterator.trySplit:()Ljava/util/Spliterator$OfInt;
   #84 = Utf8               ()Ljava/util/Spliterator$OfPrimitive;
   #85 = Utf8               (Ljava/lang/Object;)Z
   #86 = Utf8               <init>
   #87 = Utf8               (Lscala/collection/IntStepper;)V
   #88 = Utf8               ()V
   #89 = NameAndType        #86:#88       // "<init>":()V
   #90 = Methodref          #4.#89        // java/lang/Object."<init>":()V
   #91 = Utf8               Code
   #92 = Utf8               StackMapTable
   #93 = Utf8               LineNumberTable
   #94 = Utf8               LocalVariableTable
   #95 = Utf8               MethodParameters
   #96 = Utf8               Signature
   #97 = Utf8               InnerClasses
   #98 = Utf8               SourceFile
   #99 = Utf8               ScalaInlineInfo
  #100 = Utf8               Scala
{
  private final scala.collection.IntStepper s;
    descriptor: Lscala/collection/IntStepper;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public boolean tryAdvance(java.util.function.IntConsumer);
    descriptor: (Ljava/util/function/IntConsumer;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #23                 // Field s:Lscala/collection/IntStepper;
         4: invokeinterface #27,  1           // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
         9: ifeq          29
        12: aload_1
        13: aload_0
        14: getfield      #23                 // Field s:Lscala/collection/IntStepper;
        17: invokeinterface #31,  1           // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        22: invokeinterface #37,  2           // InterfaceMethod java/util/function/IntConsumer.accept:(I)V
        27: iconst_1
        28: ireturn
        29: iconst_0
        30: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 29 /* same */
      LineNumberTable:
        line 268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;
            0      31     1     c   Ljava/util/function/IntConsumer;
    MethodParameters:
      Name                           Flags
      c                              final

  public boolean tryAdvance(java.util.function.Consumer<? super java.lang.Integer>);
    descriptor: (Ljava/util/function/Consumer;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: instanceof    #33                 // class java/util/function/IntConsumer
         4: ifeq          21
         7: aload_1
         8: checkcast     #33                 // class java/util/function/IntConsumer
        11: astore_3
        12: aload_0
        13: aload_3
        14: invokevirtual #44                 // Method tryAdvance:(Ljava/util/function/IntConsumer;)Z
        17: istore_2
        18: goto          57
        21: aload_0
        22: getfield      #23                 // Field s:Lscala/collection/IntStepper;
        25: invokeinterface #27,  1           // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        30: ifeq          55
        33: aload_1
        34: aload_0
        35: getfield      #23                 // Field s:Lscala/collection/IntStepper;
        38: invokeinterface #31,  1           // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        43: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        46: invokeinterface #55,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: istore_2
        57: iload_2
        58: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 21 /* same */
        frame_type = 33 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 0
          locals = [ int ]
      LineNumberTable:
        line 271: 0
        line 272: 21
        line 270: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;
            0      59     1     c   Ljava/util/function/Consumer;
    Signature: #42                          // (Ljava/util/function/Consumer<-Ljava/lang/Integer;>;)Z
    MethodParameters:
      Name                           Flags
      c                              final

  public java.util.Spliterator$OfInt trySplit();
    descriptor: ()Ljava/util/Spliterator$OfInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: getfield      #23                 // Field s:Lscala/collection/IntStepper;
         4: invokeinterface #61,  1           // InterfaceMethod scala/collection/IntStepper.trySplit:()Lscala/collection/IntStepper;
         9: astore_1
        10: aload_1
        11: ifnonnull     16
        14: aconst_null
        15: areturn
        16: aload_1
        17: invokeinterface #64,  1           // InterfaceMethod scala/collection/IntStepper.spliterator:()Ljava/util/Spliterator$OfInt;
        22: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ class scala/collection/IntStepper ]
      LineNumberTable:
        line 276: 0
        line 277: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      12     1    sp   Lscala/collection/IntStepper;
            0      23     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;

  public long estimateSize();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #23                 // Field s:Lscala/collection/IntStepper;
         4: invokeinterface #69,  1           // InterfaceMethod scala/collection/IntStepper.estimateSize:()J
         9: lreturn
      LineNumberTable:
        line 279: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;

  public int characteristics();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #23                 // Field s:Lscala/collection/IntStepper;
         4: invokeinterface #72,  1           // InterfaceMethod scala/collection/IntStepper.characteristics:()I
         9: ireturn
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;

  public void forEachRemaining(java.util.function.IntConsumer);
    descriptor: (Ljava/util/function/IntConsumer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #23                 // Field s:Lscala/collection/IntStepper;
         4: invokeinterface #27,  1           // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
         9: ifeq          30
        12: aload_1
        13: aload_0
        14: getfield      #23                 // Field s:Lscala/collection/IntStepper;
        17: invokeinterface #31,  1           // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        22: invokeinterface #37,  2           // InterfaceMethod java/util/function/IntConsumer.accept:(I)V
        27: goto          0
        30: return
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 29 /* same */
      LineNumberTable:
        line 283: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;
            0      31     1     c   Ljava/util/function/IntConsumer;
    MethodParameters:
      Name                           Flags
      c                              final

  public void forEachRemaining(java.util.function.Consumer<? super java.lang.Integer>);
    descriptor: (Ljava/util/function/Consumer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: instanceof    #33                 // class java/util/function/IntConsumer
         4: ifeq          18
         7: aload_1
         8: checkcast     #33                 // class java/util/function/IntConsumer
        11: astore_2
        12: aload_0
        13: aload_2
        14: invokevirtual #78                 // Method forEachRemaining:(Ljava/util/function/IntConsumer;)V
        17: return
        18: aload_0
        19: getfield      #23                 // Field s:Lscala/collection/IntStepper;
        22: invokeinterface #27,  1           // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        27: ifeq          51
        30: aload_1
        31: aload_0
        32: getfield      #23                 // Field s:Lscala/collection/IntStepper;
        35: invokeinterface #31,  1           // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        40: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        43: invokeinterface #55,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
        48: goto          18
        51: return
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 32 /* same */
      LineNumberTable:
        line 286: 0
        line 287: 18
        line 285: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;
            0      52     1     c   Ljava/util/function/Consumer;
    Signature: #76                          // (Ljava/util/function/Consumer<-Ljava/lang/Integer;>;)V
    MethodParameters:
      Name                           Flags
      c                              final

  public void forEachRemaining(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #33                 // class java/util/function/IntConsumer
         5: invokevirtual #78                 // Method forEachRemaining:(Ljava/util/function/IntConsumer;)V
         8: return
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.util.Spliterator trySplit();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #83                 // Method trySplit:()Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;

  public java.util.Spliterator$OfPrimitive trySplit();
    descriptor: ()Ljava/util/Spliterator$OfPrimitive;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #83                 // Method trySplit:()Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;

  public boolean tryAdvance(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #33                 // class java/util/function/IntConsumer
         5: invokevirtual #44                 // Method tryAdvance:(Ljava/util/function/IntConsumer;)Z
         8: ireturn
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.IntStepper$IntStepperSpliterator(scala.collection.IntStepper);
    descriptor: (Lscala/collection/IntStepper;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #23                 // Field s:Lscala/collection/IntStepper;
         5: aload_0
         6: invokespecial #90                 // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/IntStepper$IntStepperSpliterator;
            0      10     1     s   Lscala/collection/IntStepper;
    MethodParameters:
      Name                           Flags
      s                              final
}
InnerClasses:
  public static #10= #6 of #9;            // OfInt=class java/util/Spliterator$OfInt of class java/util/Spliterator
  public static #13= #12 of #9;           // OfPrimitive=class java/util/Spliterator$OfPrimitive of class java/util/Spliterator
  public static #16= #2 of #15;           // IntStepperSpliterator=class scala/collection/IntStepper$IntStepperSpliterator of class scala/collection/IntStepper
SourceFile: "Stepper.scala"
  ScalaInlineInfo: length = 0x40 (unknown attribute)
   01 00 00 0C 00 56 00 57 00 00 46 00 1D 00 00 42
   00 43 00 00 49 00 35 00 00 49 00 4B 00 00 49 00
   4A 00 00 13 00 55 00 00 13 00 29 00 00 13 00 14
   00 00 39 00 3A 00 00 39 00 54 00 00 39 00 51 00

  Scala: length = 0x0 (unknown attribute)

