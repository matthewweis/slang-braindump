Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1.class
  Last modified May 29, 2022; size 2642 bytes
  SHA-256 checksum 3e94753315a497905a41fe4751f1d9e8b340bb6079c571957cd06643becd8e52
  Compiled from "ExecutionContextImpl.scala"
public final class scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$1 extends java.util.concurrent.ForkJoinWorkerThread implements scala.concurrent.BlockContext
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1
  super_class: #4                         // java/util/concurrent/ForkJoinWorkerThread
  interfaces: 1, fields: 2, methods: 2, attributes: 5
Constant pool:
   #1 = Utf8               scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1
   #2 = Class              #1             // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1
   #3 = Utf8               java/util/concurrent/ForkJoinWorkerThread
   #4 = Class              #3             // java/util/concurrent/ForkJoinWorkerThread
   #5 = Utf8               scala/concurrent/BlockContext
   #6 = Class              #5             // scala/concurrent/BlockContext
   #7 = Utf8               ExecutionContextImpl.scala
   #8 = Utf8               scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory
   #9 = Class              #8             // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory
  #10 = Utf8               newThread
  #11 = Utf8               (Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;
  #12 = NameAndType        #10:#11        // newThread:(Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;
  #13 = Utf8               java/util/concurrent/ForkJoinPool$ManagedBlocker
  #14 = Class              #13            // java/util/concurrent/ForkJoinPool$ManagedBlocker
  #15 = Utf8               java/util/concurrent/ForkJoinPool
  #16 = Class              #15            // java/util/concurrent/ForkJoinPool
  #17 = Utf8               ManagedBlocker
  #18 = Utf8               scala/concurrent/impl/ExecutionContextImpl
  #19 = Class              #18            // scala/concurrent/impl/ExecutionContextImpl
  #20 = Utf8               DefaultThreadFactory
  #21 = Utf8               scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
  #22 = Class              #21            // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
  #23 = Utf8               isBlocked
  #24 = Utf8               Z
  #25 = Utf8               $outer
  #26 = Utf8               Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
  #27 = Utf8               blockOn
  #28 = Utf8               (Lscala/Function0;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
  #29 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;Lscala/concurrent/CanAwait;)TT;
  #30 = Utf8               thunk
  #31 = Utf8               permission
  #32 = Utf8               java/lang/Thread
  #33 = Class              #32            // java/lang/Thread
  #34 = Utf8               currentThread
  #35 = Utf8               ()Ljava/lang/Thread;
  #36 = NameAndType        #34:#35        // currentThread:()Ljava/lang/Thread;
  #37 = Methodref          #33.#36        // java/lang/Thread.currentThread:()Ljava/lang/Thread;
  #38 = NameAndType        #23:#24        // isBlocked:Z
  #39 = Fieldref           #2.#38         // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1.isBlocked:Z
  #40 = NameAndType        #25:#26        // $outer:Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
  #41 = Fieldref           #2.#40         // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1.$outer:Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
  #42 = Utf8               scala$concurrent$impl$ExecutionContextImpl$DefaultThreadFactory$$blockerPermits
  #43 = Utf8               ()Ljava/util/concurrent/Semaphore;
  #44 = NameAndType        #42:#43        // scala$concurrent$impl$ExecutionContextImpl$DefaultThreadFactory$$blockerPermits:()Ljava/util/concurrent/Semaphore;
  #45 = Methodref          #9.#44         // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory.scala$concurrent$impl$ExecutionContextImpl$DefaultThreadFactory$$blockerPermits:()Ljava/util/concurrent/Semaphore;
  #46 = Utf8               java/util/concurrent/Semaphore
  #47 = Class              #46            // java/util/concurrent/Semaphore
  #48 = Utf8               tryAcquire
  #49 = Utf8               ()Z
  #50 = NameAndType        #48:#49        // tryAcquire:()Z
  #51 = Methodref          #47.#50        // java/util/concurrent/Semaphore.tryAcquire:()Z
  #52 = Utf8               <init>
  #53 = Utf8               (Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;Lscala/Function0;)V
  #54 = NameAndType        #52:#53        // "<init>":(Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;Lscala/Function0;)V
  #55 = Methodref          #22.#54        // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2."<init>":(Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;Lscala/Function0;)V
  #56 = Utf8               managedBlock
  #57 = Utf8               (Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
  #58 = NameAndType        #56:#57        // managedBlock:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
  #59 = Methodref          #16.#58        // java/util/concurrent/ForkJoinPool.managedBlock:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
  #60 = Utf8               scala/Function0
  #61 = Class              #60            // scala/Function0
  #62 = Utf8               apply
  #63 = Utf8               ()Ljava/lang/Object;
  #64 = NameAndType        #62:#63        // apply:()Ljava/lang/Object;
  #65 = InterfaceMethodref #61.#64        // scala/Function0.apply:()Ljava/lang/Object;
  #66 = Utf8               release
  #67 = Utf8               ()V
  #68 = NameAndType        #66:#67        // release:()V
  #69 = Methodref          #47.#68        // java/util/concurrent/Semaphore.release:()V
  #70 = Utf8               b
  #71 = Utf8               Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;
  #72 = Utf8               this
  #73 = Utf8               Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;
  #74 = Utf8               Lscala/Function0;
  #75 = Utf8               Lscala/concurrent/CanAwait;
  #76 = Utf8               java/lang/Throwable
  #77 = Class              #76            // java/lang/Throwable
  #78 = Utf8               scala/concurrent/CanAwait
  #79 = Class              #78            // scala/concurrent/CanAwait
  #80 = Utf8               java/lang/Object
  #81 = Class              #80            // java/lang/Object
  #82 = Utf8               (Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;Ljava/util/concurrent/ForkJoinPool;)V
  #83 = Utf8               fjp$1
  #84 = Utf8               (Ljava/util/concurrent/ForkJoinPool;)V
  #85 = NameAndType        #52:#84        // "<init>":(Ljava/util/concurrent/ForkJoinPool;)V
  #86 = Methodref          #4.#85         // java/util/concurrent/ForkJoinWorkerThread."<init>":(Ljava/util/concurrent/ForkJoinPool;)V
  #87 = Utf8               Ljava/util/concurrent/ForkJoinPool;
  #88 = Utf8               Code
  #89 = Utf8               StackMapTable
  #90 = Utf8               LineNumberTable
  #91 = Utf8               LocalVariableTable
  #92 = Utf8               Signature
  #93 = Utf8               MethodParameters
  #94 = Utf8               InnerClasses
  #95 = Utf8               EnclosingMethod
  #96 = Utf8               SourceFile
  #97 = Utf8               ScalaInlineInfo
  #98 = Utf8               Scala
{
  private boolean isBlocked;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private final scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory $outer;
    descriptor: Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public final <T extends java.lang.Object> T blockOn(scala.Function0<T>, scala.concurrent.CanAwait);
    descriptor: (Lscala/Function0;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=3
         0: invokestatic  #37                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         3: aload_0
         4: if_acmpne     91
         7: aload_0
         8: getfield      #39                 // Field isBlocked:Z
        11: ifne          91
        14: aload_0
        15: getfield      #41                 // Field $outer:Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
        18: invokevirtual #45                 // Method scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory.scala$concurrent$impl$ExecutionContextImpl$DefaultThreadFactory$$blockerPermits:()Ljava/util/concurrent/Semaphore;
        21: invokevirtual #51                 // Method java/util/concurrent/Semaphore.tryAcquire:()Z
        24: ifeq          91
        27: new           #22                 // class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
        30: dup
        31: aconst_null
        32: aload_1
        33: invokespecial #55                 // Method scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2."<init>":(Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;Lscala/Function0;)V
        36: astore_3
        37: aload_0
        38: iconst_1
        39: putfield      #39                 // Field isBlocked:Z
        42: aload_3
        43: invokestatic  #59                 // Method java/util/concurrent/ForkJoinPool.managedBlock:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
        46: aload_3
        47: invokeinterface #65,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        52: goto          75
        55: astore        4
        57: aload_0
        58: iconst_0
        59: putfield      #39                 // Field isBlocked:Z
        62: aload_0
        63: getfield      #41                 // Field $outer:Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
        66: invokevirtual #45                 // Method scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory.scala$concurrent$impl$ExecutionContextImpl$DefaultThreadFactory$$blockerPermits:()Ljava/util/concurrent/Semaphore;
        69: invokevirtual #69                 // Method java/util/concurrent/Semaphore.release:()V
        72: aload         4
        74: athrow
        75: aload_0
        76: iconst_0
        77: putfield      #39                 // Field isBlocked:Z
        80: aload_0
        81: getfield      #41                 // Field $outer:Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
        84: invokevirtual #45                 // Method scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory.scala$concurrent$impl$ExecutionContextImpl$DefaultThreadFactory$$blockerPermits:()Ljava/util/concurrent/Semaphore;
        87: invokevirtual #69                 // Method java/util/concurrent/Semaphore.release:()V
        90: areturn
        91: aload_1
        92: invokeinterface #65,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        97: areturn
      Exception table:
         from    to  target type
            27    55    55   any
      StackMapTable: number_of_entries = 3
        frame_type = 119 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1, class scala/Function0, class scala/concurrent/CanAwait, class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2 ]
          stack = [ class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 15
      LineNumberTable:
        line 51: 0
        line 54: 27
        line 69: 37
        line 70: 42
        line 71: 46
        line 73: 57
        line 74: 62
        line 73: 75
        line 74: 80
        line 76: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37      15     3     b   Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;
            0      98     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;
            0      98     1 thunk   Lscala/Function0;
            0      98     2 permission   Lscala/concurrent/CanAwait;
    Signature: #29                          // <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;Lscala/concurrent/CanAwait;)TT;
    MethodParameters:
      Name                           Flags
      thunk                          final
      permission                     final

  public scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$1(scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory, java.util.concurrent.ForkJoinPool);
    descriptor: (Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;Ljava/util/concurrent/ForkJoinPool;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #41                 // Field $outer:Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
        11: aload_0
        12: aload_2
        13: invokespecial #86                 // Method java/util/concurrent/ForkJoinWorkerThread."<init>":(Ljava/util/concurrent/ForkJoinPool;)V
        16: aload_0
        17: iconst_0
        18: putfield      #39                 // Field isBlocked:Z
        21: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 48: 0
        line 49: 16
        line 48: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;
            0      22     1 $outer   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory;
            0      22     2 fjp$1   Ljava/util/concurrent/ForkJoinPool;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      fjp$1                          final
}
InnerClasses:
  public static #17= #14 of #16;          // ManagedBlocker=class java/util/concurrent/ForkJoinPool$ManagedBlocker of class java/util/concurrent/ForkJoinPool
  public static final #20= #9 of #19;     // DefaultThreadFactory=class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory of class scala/concurrent/impl/ExecutionContextImpl
  public final #2;                        // class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1
  public final #22;                       // class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
EnclosingMethod: #9.#12                 // scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory.newThread
SourceFile: "ExecutionContextImpl.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 34 00 52 01 00 1B 00 1C 01
  Scala: length = 0x0 (unknown attribute)

