Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/CaseClassMacros$PatchedContext$1$$anon$3.class
  Last modified May 29, 2022; size 4936 bytes
  SHA-256 checksum 81710f3521a623763f7b3f470a107cbc2c1ec7bcb533558f9bc68103347182af
  Compiled from "generic.scala"
public final class shapeless.CaseClassMacros$PatchedContext$1$$anon$3 implements shapeless.CaseClassMacros$PatchedContext$1$PatchedLookupResult
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // shapeless/CaseClassMacros$PatchedContext$1$$anon$3
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 2, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/CaseClassMacros$PatchedContext$1$$anon$3
    #2 = Class              #1            // shapeless/CaseClassMacros$PatchedContext$1$$anon$3
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               shapeless/CaseClassMacros$PatchedContext$1$PatchedLookupResult
    #6 = Class              #5            // shapeless/CaseClassMacros$PatchedContext$1$PatchedLookupResult
    #7 = Utf8               generic.scala
    #8 = Utf8               shapeless/CaseClassMacros$PatchedContext$1
    #9 = Class              #8            // shapeless/CaseClassMacros$PatchedContext$1
   #10 = Utf8               patchedLookup
   #11 = Utf8               (Lscala/reflect/internal/Names$Name;Lscala/reflect/internal/Symbols$Symbol;)Lshapeless/CaseClassMacros$PatchedContext$1$PatchedLookupResult;
   #12 = NameAndType        #10:#11       // patchedLookup:(Lscala/reflect/internal/Names$Name;Lscala/reflect/internal/Symbols$Symbol;)Lshapeless/CaseClassMacros$PatchedContext$1$PatchedLookupResult;
   #13 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
   #14 = Class              #13           // scala/collection/SeqFactory$UnapplySeqWrapper
   #15 = Utf8               scala/collection/SeqFactory
   #16 = Class              #15           // scala/collection/SeqFactory
   #17 = Utf8               UnapplySeqWrapper
   #18 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #19 = Class              #18           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #20 = Utf8               UnapplySeqWrapper$
   #21 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #22 = Class              #21           // scala/reflect/api/Symbols$SymbolApi
   #23 = Utf8               scala/reflect/api/Symbols
   #24 = Class              #23           // scala/reflect/api/Symbols
   #25 = Utf8               SymbolApi
   #26 = Utf8               scala/reflect/internal/Names$Name
   #27 = Class              #26           // scala/reflect/internal/Names$Name
   #28 = Utf8               scala/reflect/internal/Names
   #29 = Class              #28           // scala/reflect/internal/Names
   #30 = Utf8               Name
   #31 = Utf8               scala/reflect/internal/Scopes$Scope
   #32 = Class              #31           // scala/reflect/internal/Scopes$Scope
   #33 = Utf8               scala/reflect/internal/Scopes
   #34 = Class              #33           // scala/reflect/internal/Scopes
   #35 = Utf8               Scope
   #36 = Utf8               scala/reflect/internal/Symbols$NoSymbol
   #37 = Class              #36           // scala/reflect/internal/Symbols$NoSymbol
   #38 = Utf8               scala/reflect/internal/Symbols
   #39 = Class              #38           // scala/reflect/internal/Symbols
   #40 = Utf8               NoSymbol
   #41 = Utf8               scala/reflect/internal/Symbols$Symbol
   #42 = Class              #41           // scala/reflect/internal/Symbols$Symbol
   #43 = Utf8               Symbol
   #44 = Utf8               scala/tools/nsc/typechecker/Contexts$Context
   #45 = Class              #44           // scala/tools/nsc/typechecker/Contexts$Context
   #46 = Utf8               scala/tools/nsc/typechecker/Contexts
   #47 = Class              #46           // scala/tools/nsc/typechecker/Contexts
   #48 = Utf8               Context
   #49 = Utf8               PatchedContext$1
   #50 = Utf8               PatchedLookupResult
   #51 = Utf8               $outer
   #52 = Utf8               Lshapeless/CaseClassMacros$PatchedContext$1;
   #53 = Utf8               name$1
   #54 = Utf8               Lscala/reflect/internal/Names$Name;
   #55 = Utf8               expectedOwner$1
   #56 = Utf8               Lscala/reflect/internal/Symbols$Symbol;
   #57 = Utf8               suchThat
   #58 = Utf8               (Lscala/Function1;)Lscala/reflect/internal/Symbols$Symbol;
   #59 = Utf8               (Lscala/Function1<Lscala/reflect/internal/Symbols$Symbol;Ljava/lang/Object;>;)Lscala/reflect/internal/Symbols$Symbol;
   #60 = Utf8               criterion
   #61 = NameAndType        #51:#52       // $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
   #62 = Fieldref           #2.#61        // shapeless/CaseClassMacros$PatchedContext$1$$anon$3.$outer:Lshapeless/CaseClassMacros$PatchedContext$1;
   #63 = Utf8               global$1
   #64 = Utf8               Lscala/tools/nsc/Global;
   #65 = NameAndType        #63:#64       // global$1:Lscala/tools/nsc/Global;
   #66 = Fieldref           #9.#65        // shapeless/CaseClassMacros$PatchedContext$1.global$1:Lscala/tools/nsc/Global;
   #67 = Utf8               scala/tools/nsc/Global
   #68 = Class              #67           // scala/tools/nsc/Global
   #69 = Utf8               ()Lscala/reflect/internal/Symbols$NoSymbol;
   #70 = NameAndType        #40:#69       // NoSymbol:()Lscala/reflect/internal/Symbols$NoSymbol;
   #71 = Methodref          #68.#70       // scala/tools/nsc/Global.NoSymbol:()Lscala/reflect/internal/Symbols$NoSymbol;
   #72 = Utf8               shapeless$CaseClassMacros$PatchedContext$$ctx
   #73 = Utf8               Lscala/tools/nsc/typechecker/Contexts$Context;
   #74 = NameAndType        #72:#73       // shapeless$CaseClassMacros$PatchedContext$$ctx:Lscala/tools/nsc/typechecker/Contexts$Context;
   #75 = Fieldref           #9.#74        // shapeless/CaseClassMacros$PatchedContext$1.shapeless$CaseClassMacros$PatchedContext$$ctx:Lscala/tools/nsc/typechecker/Contexts$Context;
   #76 = Utf8               equals
   #77 = Utf8               (Ljava/lang/Object;)Z
   #78 = NameAndType        #76:#77       // equals:(Ljava/lang/Object;)Z
   #79 = Methodref          #4.#78        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #80 = Utf8               outer
   #81 = Utf8               ()Lscala/tools/nsc/typechecker/Contexts$Context;
   #82 = NameAndType        #80:#81       // outer:()Lscala/tools/nsc/typechecker/Contexts$Context;
   #83 = Methodref          #45.#82       // scala/tools/nsc/typechecker/Contexts$Context.outer:()Lscala/tools/nsc/typechecker/Contexts$Context;
   #84 = Utf8               scope
   #85 = Utf8               ()Lscala/reflect/internal/Scopes$Scope;
   #86 = NameAndType        #84:#85       // scope:()Lscala/reflect/internal/Scopes$Scope;
   #87 = Methodref          #45.#86       // scala/tools/nsc/typechecker/Contexts$Context.scope:()Lscala/reflect/internal/Scopes$Scope;
   #88 = NameAndType        #53:#54       // name$1:Lscala/reflect/internal/Names$Name;
   #89 = Fieldref           #2.#88        // shapeless/CaseClassMacros$PatchedContext$1$$anon$3.name$1:Lscala/reflect/internal/Names$Name;
   #90 = Utf8               lookupAll
   #91 = Utf8               (Lscala/reflect/internal/Names$Name;)Lscala/collection/Iterator;
   #92 = NameAndType        #90:#91       // lookupAll:(Lscala/reflect/internal/Names$Name;)Lscala/collection/Iterator;
   #93 = Methodref          #32.#92       // scala/reflect/internal/Scopes$Scope.lookupAll:(Lscala/reflect/internal/Names$Name;)Lscala/collection/Iterator;
   #94 = Utf8               scala/collection/Iterator
   #95 = Class              #94           // scala/collection/Iterator
   #96 = Utf8               filter
   #97 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
   #98 = NameAndType        #96:#97       // filter:(Lscala/Function1;)Lscala/collection/Iterator;
   #99 = InterfaceMethodref #95.#98       // scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #100 = Utf8               toList
  #101 = Utf8               ()Lscala/collection/immutable/List;
  #102 = NameAndType        #100:#101     // toList:()Lscala/collection/immutable/List;
  #103 = InterfaceMethodref #95.#102      // scala/collection/Iterator.toList:()Lscala/collection/immutable/List;
  #104 = Utf8               scala/collection/immutable/Nil$
  #105 = Class              #104          // scala/collection/immutable/Nil$
  #106 = Utf8               MODULE$
  #107 = Utf8               Lscala/collection/immutable/Nil$;
  #108 = NameAndType        #106:#107     // MODULE$:Lscala/collection/immutable/Nil$;
  #109 = Fieldref           #105.#108     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #110 = Utf8               scala/collection/immutable/List$
  #111 = Class              #110          // scala/collection/immutable/List$
  #112 = Utf8               Lscala/collection/immutable/List$;
  #113 = NameAndType        #106:#112     // MODULE$:Lscala/collection/immutable/List$;
  #114 = Fieldref           #111.#113     // scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
  #115 = Utf8               unapplySeq
  #116 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #117 = NameAndType        #115:#116     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #118 = Methodref          #111.#117     // scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #119 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #120 = NameAndType        #106:#119     // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #121 = Fieldref           #19.#120      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #122 = Utf8               isEmpty$extension
  #123 = Utf8               (Lscala/collection/SeqOps;)Z
  #124 = NameAndType        #122:#123     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #125 = Methodref          #19.#124      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #126 = Utf8               get$extension
  #127 = NameAndType        #126:#116     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #128 = Methodref          #19.#127      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #129 = Utf8               <init>
  #130 = Utf8               (Lscala/collection/SeqOps;)V
  #131 = NameAndType        #129:#130     // "<init>":(Lscala/collection/SeqOps;)V
  #132 = Methodref          #14.#131      // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #133 = Utf8               lengthCompare$extension
  #134 = Utf8               (Lscala/collection/SeqOps;I)I
  #135 = NameAndType        #133:#134     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #136 = Methodref          #19.#135      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #137 = Utf8               apply$extension
  #138 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #139 = NameAndType        #137:#138     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #140 = Methodref          #19.#139      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #141 = Utf8               java/lang/StringBuilder
  #142 = Class              #141          // java/lang/StringBuilder
  #143 = Integer            68
  #144 = Utf8               (I)V
  #145 = NameAndType        #129:#144     // "<init>":(I)V
  #146 = Methodref          #142.#145     // java/lang/StringBuilder."<init>":(I)V
  #147 = Utf8               unexpected multiple results for a companion symbol lookup for
  #148 = String             #147          // unexpected multiple results for a companion symbol lookup for
  #149 = Utf8               append
  #150 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #151 = NameAndType        #149:#150     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #152 = Methodref          #142.#151     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #153 = Utf8               original$1
  #154 = Utf8               Lscala/reflect/api/Symbols$SymbolApi;
  #155 = NameAndType        #153:#154     // original$1:Lscala/reflect/api/Symbols$SymbolApi;
  #156 = Fieldref           #9.#155       // shapeless/CaseClassMacros$PatchedContext$1.original$1:Lscala/reflect/api/Symbols$SymbolApi;
  #157 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #158 = NameAndType        #149:#157     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #159 = Methodref          #142.#158     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #160 = Utf8               #{
  #161 = String             #160          // #{
  #162 = Utf8               .id}
  #163 = String             #162          // .id}
  #164 = Utf8               toString
  #165 = Utf8               ()Ljava/lang/String;
  #166 = NameAndType        #164:#165     // toString:()Ljava/lang/String;
  #167 = Methodref          #142.#166     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #168 = Utf8               abort
  #169 = Utf8               (Ljava/lang/String;)Lscala/runtime/Nothing$;
  #170 = NameAndType        #168:#169     // abort:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #171 = Methodref          #68.#170      // scala/tools/nsc/Global.abort:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #172 = Utf8               owner
  #173 = Utf8               ()Lscala/reflect/internal/Symbols$Symbol;
  #174 = NameAndType        #172:#173     // owner:()Lscala/reflect/internal/Symbols$Symbol;
  #175 = Methodref          #42.#174      // scala/reflect/internal/Symbols$Symbol.owner:()Lscala/reflect/internal/Symbols$Symbol;
  #176 = NameAndType        #55:#56       // expectedOwner$1:Lscala/reflect/internal/Symbols$Symbol;
  #177 = Fieldref           #2.#176       // shapeless/CaseClassMacros$PatchedContext$1$$anon$3.expectedOwner$1:Lscala/reflect/internal/Symbols$Symbol;
  #178 = Utf8               unique
  #179 = Utf8               lookupResult
  #180 = Utf8               Lscala/collection/immutable/List;
  #181 = Utf8               s
  #182 = Utf8               res
  #183 = Utf8               ctx
  #184 = Utf8               this
  #185 = Utf8               Lshapeless/CaseClassMacros$PatchedContext$1$$anon$3;
  #186 = Utf8               Lscala/Function1;
  #187 = Utf8               scala/Function1
  #188 = Class              #187          // scala/Function1
  #189 = Utf8               scala/collection/immutable/List
  #190 = Class              #189          // scala/collection/immutable/List
  #191 = Utf8               scala/collection/SeqOps
  #192 = Class              #191          // scala/collection/SeqOps
  #193 = Utf8               (Lshapeless/CaseClassMacros$PatchedContext$1;Lscala/reflect/internal/Names$Name;Lscala/reflect/internal/Symbols$Symbol;)V
  #194 = Utf8               ()V
  #195 = NameAndType        #129:#194     // "<init>":()V
  #196 = Methodref          #4.#195       // java/lang/Object."<init>":()V
  #197 = Utf8               Code
  #198 = Utf8               StackMapTable
  #199 = Utf8               LineNumberTable
  #200 = Utf8               LocalVariableTable
  #201 = Utf8               Signature
  #202 = Utf8               MethodParameters
  #203 = Utf8               InnerClasses
  #204 = Utf8               EnclosingMethod
  #205 = Utf8               SourceFile
  #206 = Utf8               ScalaInlineInfo
  #207 = Utf8               Scala
{
  private final shapeless.CaseClassMacros$PatchedContext$1 $outer;
    descriptor: Lshapeless/CaseClassMacros$PatchedContext$1;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.reflect.internal.Names$Name name$1;
    descriptor: Lscala/reflect/internal/Names$Name;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.reflect.internal.Symbols$Symbol expectedOwner$1;
    descriptor: Lscala/reflect/internal/Symbols$Symbol;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.reflect.internal.Symbols$Symbol suchThat(scala.Function1<scala.reflect.internal.Symbols$Symbol, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/reflect/internal/Symbols$Symbol;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=14, args_size=2
         0: aload_0
         1: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
         4: getfield      #66                 // Field shapeless/CaseClassMacros$PatchedContext$1.global$1:Lscala/tools/nsc/Global;
         7: invokevirtual #71                 // Method scala/tools/nsc/Global.NoSymbol:()Lscala/reflect/internal/Symbols$NoSymbol;
        10: astore_3
        11: aload_0
        12: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
        15: getfield      #75                 // Field shapeless/CaseClassMacros$PatchedContext$1.shapeless$CaseClassMacros$PatchedContext$$ctx:Lscala/tools/nsc/typechecker/Contexts$Context;
        18: astore        4
        20: aload_3
        21: aload_0
        22: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
        25: getfield      #66                 // Field shapeless/CaseClassMacros$PatchedContext$1.global$1:Lscala/tools/nsc/Global;
        28: invokevirtual #71                 // Method scala/tools/nsc/Global.NoSymbol:()Lscala/reflect/internal/Symbols$NoSymbol;
        31: astore        5
        33: dup
        34: ifnonnull     46
        37: pop
        38: aload         5
        40: ifnull        54
        43: goto          380
        46: aload         5
        48: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        51: ifeq          380
        54: aload         4
        56: invokevirtual #83                 // Method scala/tools/nsc/typechecker/Contexts$Context.outer:()Lscala/tools/nsc/typechecker/Contexts$Context;
        59: aload         4
        61: astore        6
        63: dup
        64: ifnonnull     76
        67: pop
        68: aload         6
        70: ifnull        380
        73: goto          84
        76: aload         6
        78: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        81: ifne          380
        84: aload         4
        86: invokevirtual #87                 // Method scala/tools/nsc/typechecker/Contexts$Context.scope:()Lscala/reflect/internal/Scopes$Scope;
        89: aload_0
        90: getfield      #89                 // Field name$1:Lscala/reflect/internal/Names$Name;
        93: invokevirtual #93                 // Method scala/reflect/internal/Scopes$Scope.lookupAll:(Lscala/reflect/internal/Names$Name;)Lscala/collection/Iterator;
        96: aload_1
        97: invokeinterface #99,  2           // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
       102: invokeinterface #103,  1          // InterfaceMethod scala/collection/Iterator.toList:()Lscala/collection/immutable/List;
       107: astore        8
       109: aload         8
       111: astore        9
       113: getstatic     #109                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       116: aload         9
       118: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       121: ifeq          138
       124: aload_0
       125: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
       128: getfield      #66                 // Field shapeless/CaseClassMacros$PatchedContext$1.global$1:Lscala/tools/nsc/Global;
       131: invokevirtual #71                 // Method scala/tools/nsc/Global.NoSymbol:()Lscala/reflect/internal/Symbols$NoSymbol;
       134: astore_2
       135: goto          294
       138: goto          141
       141: aload         9
       143: ifnull        233
       146: getstatic     #114                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       149: aload         9
       151: invokevirtual #118                // Method scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       154: astore        10
       156: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       159: aload         10
       161: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
       164: ifne          230
       167: new           #14                 // class scala/collection/SeqFactory$UnapplySeqWrapper
       170: dup
       171: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       174: aload         10
       176: invokevirtual #128                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       179: invokespecial #132                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
       182: ifnull        230
       185: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       188: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       191: aload         10
       193: invokevirtual #128                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       196: iconst_1
       197: invokevirtual #136                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
       200: iconst_0
       201: if_icmpne     230
       204: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       207: getstatic     #121                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       210: aload         10
       212: invokevirtual #128                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       215: iconst_0
       216: invokevirtual #140                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
       219: checkcast     #42                 // class scala/reflect/internal/Symbols$Symbol
       222: astore        11
       224: aload         11
       226: astore_2
       227: goto          294
       230: goto          236
       233: goto          236
       236: aload_0
       237: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
       240: getfield      #66                 // Field shapeless/CaseClassMacros$PatchedContext$1.global$1:Lscala/tools/nsc/Global;
       243: new           #142                // class java/lang/StringBuilder
       246: dup
       247: ldc           #143                // int 68
       249: invokespecial #146                // Method java/lang/StringBuilder."<init>":(I)V
       252: ldc           #148                // String unexpected multiple results for a companion symbol lookup for
       254: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       257: aload_0
       258: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
       261: getfield      #156                // Field shapeless/CaseClassMacros$PatchedContext$1.original$1:Lscala/reflect/api/Symbols$SymbolApi;
       264: invokevirtual #159                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       267: ldc           #161                // String #{
       269: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       272: aload_0
       273: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
       276: getfield      #156                // Field shapeless/CaseClassMacros$PatchedContext$1.original$1:Lscala/reflect/api/Symbols$SymbolApi;
       279: invokevirtual #159                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       282: ldc           #163                // String .id}
       284: invokevirtual #152                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       287: invokevirtual #167                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       290: invokevirtual #171                // Method scala/tools/nsc/Global.abort:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       293: athrow
       294: aload_2
       295: astore        7
       297: aload         7
       299: aload_0
       300: getfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
       303: getfield      #66                 // Field shapeless/CaseClassMacros$PatchedContext$1.global$1:Lscala/tools/nsc/Global;
       306: invokevirtual #71                 // Method scala/tools/nsc/Global.NoSymbol:()Lscala/reflect/internal/Symbols$NoSymbol;
       309: astore        12
       311: dup
       312: ifnonnull     324
       315: pop
       316: aload         12
       318: ifnull        370
       321: goto          332
       324: aload         12
       326: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       329: ifne          370
       332: aload         7
       334: invokevirtual #175                // Method scala/reflect/internal/Symbols$Symbol.owner:()Lscala/reflect/internal/Symbols$Symbol;
       337: aload_0
       338: getfield      #177                // Field expectedOwner$1:Lscala/reflect/internal/Symbols$Symbol;
       341: astore        13
       343: dup
       344: ifnonnull     356
       347: pop
       348: aload         13
       350: ifnull        364
       353: goto          370
       356: aload         13
       358: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       361: ifeq          370
       364: aload         7
       366: astore_3
       367: goto          377
       370: aload         4
       372: invokevirtual #83                 // Method scala/tools/nsc/typechecker/Contexts$Context.outer:()Lscala/tools/nsc/typechecker/Contexts$Context;
       375: astore        4
       377: goto          20
       380: aload_3
       381: areturn
      StackMapTable: number_of_entries = 18
        frame_type = 254 /* append */
          offset_delta = 20
          locals = [ top, class scala/reflect/internal/Symbols$Symbol, class scala/tools/nsc/typechecker/Contexts$Context ]
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class shapeless/CaseClassMacros$PatchedContext$1$$anon$3, class scala/Function1, top, class scala/reflect/internal/Symbols$Symbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$NoSymbol ]
          stack = [ class scala/reflect/internal/Symbols$Symbol ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class shapeless/CaseClassMacros$PatchedContext$1$$anon$3, class scala/Function1, top, class scala/reflect/internal/Symbols$Symbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$NoSymbol, class scala/tools/nsc/typechecker/Contexts$Context ]
          stack = [ class scala/tools/nsc/typechecker/Contexts$Context ]
        frame_type = 7 /* same */
        frame_type = 254 /* append */
          offset_delta = 53
          locals = [ top, class scala/collection/immutable/List, class scala/collection/immutable/List ]
        frame_type = 2 /* same */
        frame_type = 252 /* append */
          offset_delta = 88
          locals = [ class scala/collection/SeqOps ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class shapeless/CaseClassMacros$PatchedContext$1$$anon$3, class scala/Function1, class scala/reflect/internal/Symbols$Symbol, class scala/reflect/internal/Symbols$Symbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$NoSymbol, class scala/tools/nsc/typechecker/Contexts$Context, top, class scala/collection/immutable/List, class scala/collection/immutable/List ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class shapeless/CaseClassMacros$PatchedContext$1$$anon$3, class scala/Function1, class scala/reflect/internal/Symbols$Symbol, class scala/reflect/internal/Symbols$Symbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$NoSymbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$Symbol, class scala/collection/immutable/List, class scala/collection/immutable/List, top, top, class scala/reflect/internal/Symbols$NoSymbol ]
          stack = [ class scala/reflect/internal/Symbols$Symbol ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class shapeless/CaseClassMacros$PatchedContext$1$$anon$3, class scala/Function1, class scala/reflect/internal/Symbols$Symbol, class scala/reflect/internal/Symbols$Symbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$NoSymbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$Symbol, class scala/collection/immutable/List, class scala/collection/immutable/List, top, top, class scala/reflect/internal/Symbols$NoSymbol, class scala/reflect/internal/Symbols$Symbol ]
          stack = [ class scala/reflect/internal/Symbols$Symbol ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/CaseClassMacros$PatchedContext$1$$anon$3, class scala/Function1, top, class scala/reflect/internal/Symbols$Symbol, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$NoSymbol ]
          stack = []
      LineNumberTable:
        line 721: 0
        line 722: 11
        line 723: 20
        line 728: 84
        line 729: 109
        line 730: 113
        line 731: 141
        line 732: 236
        line 729: 294
        line 735: 297
        line 736: 364
        line 738: 370
        line 723: 377
        line 740: 380
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          222       8    11 unique   Lscala/reflect/internal/Symbols$Symbol;
          107     188     8 lookupResult   Lscala/collection/immutable/List;
          295      82     7     s   Lscala/reflect/internal/Symbols$Symbol;
           10     371     3   res   Lscala/reflect/internal/Symbols$Symbol;
           18     363     4   ctx   Lscala/tools/nsc/typechecker/Contexts$Context;
            0     382     0  this   Lshapeless/CaseClassMacros$PatchedContext$1$$anon$3;
            0     382     1 criterion   Lscala/Function1;
    Signature: #59                          // (Lscala/Function1<Lscala/reflect/internal/Symbols$Symbol;Ljava/lang/Object;>;)Lscala/reflect/internal/Symbols$Symbol;
    MethodParameters:
      Name                           Flags
      criterion                      final

  public shapeless.CaseClassMacros$PatchedContext$1$$anon$3(shapeless.CaseClassMacros$PatchedContext$1, scala.reflect.internal.Names$Name, scala.reflect.internal.Symbols$Symbol);
    descriptor: (Lshapeless/CaseClassMacros$PatchedContext$1;Lscala/reflect/internal/Names$Name;Lscala/reflect/internal/Symbols$Symbol;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #62                 // Field $outer:Lshapeless/CaseClassMacros$PatchedContext$1;
        11: aload_0
        12: aload_2
        13: putfield      #89                 // Field name$1:Lscala/reflect/internal/Names$Name;
        16: aload_0
        17: aload_3
        18: putfield      #177                // Field expectedOwner$1:Lscala/reflect/internal/Symbols$Symbol;
        21: aload_0
        22: invokespecial #196                // Method java/lang/Object."<init>":()V
        25: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 719: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lshapeless/CaseClassMacros$PatchedContext$1$$anon$3;
            0      26     1 $outer   Lshapeless/CaseClassMacros$PatchedContext$1;
            0      26     2 name$1   Lscala/reflect/internal/Names$Name;
            0      26     3 expectedOwner$1   Lscala/reflect/internal/Symbols$Symbol;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      name$1                         final
      expectedOwner$1                final
}
InnerClasses:
  public static final #17= #14 of #16;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #20= #19 of #16;          // UnapplySeqWrapper$=class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
  public #25= #22 of #24;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public abstract #30= #27 of #29;        // Name=class scala/reflect/internal/Names$Name of class scala/reflect/internal/Names
  public #35= #32 of #34;                 // Scope=class scala/reflect/internal/Scopes$Scope of class scala/reflect/internal/Scopes
  public #40= #37 of #39;                 // NoSymbol=class scala/reflect/internal/Symbols$NoSymbol of class scala/reflect/internal/Symbols
  public abstract #43= #42 of #39;        // Symbol=class scala/reflect/internal/Symbols$Symbol of class scala/reflect/internal/Symbols
  public #48= #45 of #47;                 // Context=class scala/tools/nsc/typechecker/Contexts$Context of class scala/tools/nsc/typechecker/Contexts
  public #49= #9;                         // PatchedContext$1=class shapeless/CaseClassMacros$PatchedContext$1
  public final #2;                        // class shapeless/CaseClassMacros$PatchedContext$1$$anon$3
  public #50= #6 of #9;                   // PatchedLookupResult=class shapeless/CaseClassMacros$PatchedContext$1$PatchedLookupResult of class shapeless/CaseClassMacros$PatchedContext$1
EnclosingMethod: #9.#12                 // shapeless.CaseClassMacros$PatchedContext$1.patchedLookup
SourceFile: "generic.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 81 00 C1 01 00 39 00 3A 01
  Scala: length = 0x0 (unknown attribute)

