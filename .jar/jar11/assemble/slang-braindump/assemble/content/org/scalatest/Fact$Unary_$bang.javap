Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/Fact$Unary_$bang.class
  Last modified May 29, 2022; size 7506 bytes
  SHA-256 checksum 2f290c3d5e2903d8355dedfa1582e26b80e2822e01cfa84731246a340add9559
  Compiled from "Fact.scala"
public class org.scalatest.Fact$Unary_$bang extends org.scalatest.Fact implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/Fact$Unary_$bang
  super_class: #4                         // org/scalatest/Fact
  interfaces: 2, fields: 13, methods: 29, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/Fact$Unary_$bang
    #2 = Class              #1            // org/scalatest/Fact$Unary_$bang
    #3 = Utf8               org/scalatest/Fact
    #4 = Class              #3            // org/scalatest/Fact
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Fact.scala
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               Unary_$bang
   #16 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #17 = Class              #16           // scala/collection/mutable/ArraySeq$ofRef
   #18 = Utf8               scala/collection/mutable/ArraySeq
   #19 = Class              #18           // scala/collection/mutable/ArraySeq
   #20 = Utf8               ofRef
   #21 = Utf8               underlying
   #22 = Utf8               Lorg/scalatest/Fact;
   #23 = Utf8               rawFactMessage
   #24 = Utf8               Ljava/lang/String;
   #25 = Utf8               rawSimplifiedFactMessage
   #26 = Utf8               rawMidSentenceFactMessage
   #27 = Utf8               rawMidSentenceSimplifiedFactMessage
   #28 = Utf8               factMessageArgs
   #29 = Utf8               Lscala/collection/immutable/IndexedSeq;
   #30 = Utf8               Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;
   #31 = Utf8               simplifiedFactMessageArgs
   #32 = Utf8               midSentenceFactMessageArgs
   #33 = Utf8               midSentenceSimplifiedFactMessageArgs
   #34 = Utf8               isLeaf
   #35 = Utf8               Z
   #36 = Utf8               prettifier
   #37 = Utf8               Lorg/scalactic/Prettifier;
   #38 = Utf8               isYes
   #39 = Utf8               isVacuousYes
   #40 = Utf8               productElementNames
   #41 = Utf8               ()Lscala/collection/Iterator;
   #42 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #43 = Utf8               productElementNames$
   #44 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #45 = NameAndType        #43:#44       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #46 = InterfaceMethodref #6.#45        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #47 = Utf8               this
   #48 = Utf8               Lorg/scalatest/Fact$Unary_$bang;
   #49 = Utf8               ()Lorg/scalatest/Fact;
   #50 = NameAndType        #21:#22       // underlying:Lorg/scalatest/Fact;
   #51 = Fieldref           #2.#50        // org/scalatest/Fact$Unary_$bang.underlying:Lorg/scalatest/Fact;
   #52 = Utf8               ()Ljava/lang/String;
   #53 = NameAndType        #23:#24       // rawFactMessage:Ljava/lang/String;
   #54 = Fieldref           #2.#53        // org/scalatest/Fact$Unary_$bang.rawFactMessage:Ljava/lang/String;
   #55 = NameAndType        #25:#24       // rawSimplifiedFactMessage:Ljava/lang/String;
   #56 = Fieldref           #2.#55        // org/scalatest/Fact$Unary_$bang.rawSimplifiedFactMessage:Ljava/lang/String;
   #57 = NameAndType        #26:#24       // rawMidSentenceFactMessage:Ljava/lang/String;
   #58 = Fieldref           #2.#57        // org/scalatest/Fact$Unary_$bang.rawMidSentenceFactMessage:Ljava/lang/String;
   #59 = NameAndType        #27:#24       // rawMidSentenceSimplifiedFactMessage:Ljava/lang/String;
   #60 = Fieldref           #2.#59        // org/scalatest/Fact$Unary_$bang.rawMidSentenceSimplifiedFactMessage:Ljava/lang/String;
   #61 = Utf8               ()Lscala/collection/immutable/IndexedSeq;
   #62 = Utf8               ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;
   #63 = NameAndType        #28:#29       // factMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #64 = Fieldref           #2.#63        // org/scalatest/Fact$Unary_$bang.factMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #65 = NameAndType        #31:#29       // simplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #66 = Fieldref           #2.#65        // org/scalatest/Fact$Unary_$bang.simplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #67 = NameAndType        #32:#29       // midSentenceFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #68 = Fieldref           #2.#67        // org/scalatest/Fact$Unary_$bang.midSentenceFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #69 = NameAndType        #33:#29       // midSentenceSimplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #70 = Fieldref           #2.#69        // org/scalatest/Fact$Unary_$bang.midSentenceSimplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
   #71 = Utf8               ()Z
   #72 = NameAndType        #34:#35       // isLeaf:Z
   #73 = Fieldref           #2.#72        // org/scalatest/Fact$Unary_$bang.isLeaf:Z
   #74 = Utf8               ()Lorg/scalactic/Prettifier;
   #75 = NameAndType        #36:#37       // prettifier:Lorg/scalactic/Prettifier;
   #76 = Fieldref           #2.#75        // org/scalatest/Fact$Unary_$bang.prettifier:Lorg/scalactic/Prettifier;
   #77 = NameAndType        #38:#35       // isYes:Z
   #78 = Fieldref           #2.#77        // org/scalatest/Fact$Unary_$bang.isYes:Z
   #79 = NameAndType        #39:#35       // isVacuousYes:Z
   #80 = Fieldref           #2.#79        // org/scalatest/Fact$Unary_$bang.isVacuousYes:Z
   #81 = Utf8               unary_$bang
   #82 = NameAndType        #21:#49       // underlying:()Lorg/scalatest/Fact;
   #83 = Methodref          #2.#82        // org/scalatest/Fact$Unary_$bang.underlying:()Lorg/scalatest/Fact;
   #84 = Utf8               factDiagram
   #85 = Utf8               (I)Ljava/lang/String;
   #86 = Utf8               level
   #87 = Utf8               scala/collection/StringOps$
   #88 = Class              #87           // scala/collection/StringOps$
   #89 = Utf8               MODULE$
   #90 = Utf8               Lscala/collection/StringOps$;
   #91 = NameAndType        #89:#90       // MODULE$:Lscala/collection/StringOps$;
   #92 = Fieldref           #88.#91       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #93 = Utf8               scala/Predef$
   #94 = Class              #93           // scala/Predef$
   #95 = Utf8               Lscala/Predef$;
   #96 = NameAndType        #89:#95       // MODULE$:Lscala/Predef$;
   #97 = Fieldref           #94.#96       // scala/Predef$.MODULE$:Lscala/Predef$;
   #98 = Utf8
   #99 = String             #98           //
  #100 = Utf8               augmentString
  #101 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #102 = NameAndType        #100:#101     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #103 = Methodref          #94.#102      // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #104 = Utf8               $times$extension
  #105 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #106 = NameAndType        #104:#105     // $times$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #107 = Methodref          #88.#106      // scala/collection/StringOps$.$times$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #108 = NameAndType        #84:#85       // factDiagram:(I)Ljava/lang/String;
  #109 = Methodref          #4.#108       // org/scalatest/Fact.factDiagram:(I)Ljava/lang/String;
  #110 = Utf8               java/lang/StringBuilder
  #111 = Class              #110          // java/lang/StringBuilder
  #112 = Integer            1
  #113 = Utf8               <init>
  #114 = Utf8               (I)V
  #115 = NameAndType        #113:#114     // "<init>":(I)V
  #116 = Methodref          #111.#115     // java/lang/StringBuilder."<init>":(I)V
  #117 = Utf8               append
  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #119 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #120 = Methodref          #111.#119     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #121 = NameAndType        #38:#71       // isYes:()Z
  #122 = Methodref          #2.#121       // org/scalatest/Fact$Unary_$bang.isYes:()Z
  #123 = Utf8               Yes(
  #124 = String             #123          // Yes(
  #125 = Utf8               No(
  #126 = String             #125          // No(
  #127 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #128 = NameAndType        #117:#127     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #129 = Methodref          #111.#128     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #130 = Utf8               NEWLINE
  #131 = NameAndType        #130:#52      // NEWLINE:()Ljava/lang/String;
  #132 = Methodref          #2.#131       // org/scalatest/Fact$Unary_$bang.NEWLINE:()Ljava/lang/String;
  #133 = Utf8               \n
  #134 = String             #133          // \n
  #135 = Utf8               java/lang/String
  #136 = Class              #135          // java/lang/String
  #137 = Utf8               contains
  #138 = Utf8               (Ljava/lang/CharSequence;)Z
  #139 = NameAndType        #137:#138     // contains:(Ljava/lang/CharSequence;)Z
  #140 = Methodref          #136.#139     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #141 = Integer            0
  #142 = Utf8               scala/collection/ArrayOps$
  #143 = Class              #142          // scala/collection/ArrayOps$
  #144 = Utf8               Lscala/collection/ArrayOps$;
  #145 = NameAndType        #89:#144      // MODULE$:Lscala/collection/ArrayOps$;
  #146 = Fieldref           #143.#145     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #147 = Utf8               !
  #148 = String             #147          // !
  #149 = Utf8               toString
  #150 = NameAndType        #149:#52      // toString:()Ljava/lang/String;
  #151 = Methodref          #111.#150     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #152 = Utf8               split
  #153 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;
  #154 = NameAndType        #152:#153     // split:(Ljava/lang/String;)[Ljava/lang/String;
  #155 = Methodref          #136.#154     // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
  #156 = Utf8               [Ljava/lang/Object;
  #157 = Class              #156          // "[Ljava/lang/Object;"
  #158 = Utf8               refArrayOps
  #159 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #160 = NameAndType        #158:#159     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #161 = Methodref          #94.#160      // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #162 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #163 = MethodType         #162          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #164 = Utf8               $anonfun$factDiagram$2
  #165 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #166 = NameAndType        #164:#165     // $anonfun$factDiagram$2:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #167 = Methodref          #2.#166       // org/scalatest/Fact$Unary_$bang.$anonfun$factDiagram$2:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #168 = MethodHandle       6:#167        // REF_invokeStatic org/scalatest/Fact$Unary_$bang.$anonfun$factDiagram$2:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #169 = MethodType         #101          //  (Ljava/lang/String;)Ljava/lang/String;
  #170 = Integer            5
  #171 = Utf8               java/lang/invoke/LambdaMetafactory
  #172 = Class              #171          // java/lang/invoke/LambdaMetafactory
  #173 = Utf8               altMetafactory
  #174 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #175 = NameAndType        #173:#174     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #176 = Methodref          #172.#175     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #177 = MethodHandle       6:#176        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #178 = Utf8               apply
  #179 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #180 = NameAndType        #178:#179     // apply:(Ljava/lang/String;)Lscala/Function1;
  #181 = InvokeDynamic      #0:#180       // #0:apply:(Ljava/lang/String;)Lscala/Function1;
  #182 = Utf8               scala/reflect/ClassTag$
  #183 = Class              #182          // scala/reflect/ClassTag$
  #184 = Utf8               Lscala/reflect/ClassTag$;
  #185 = NameAndType        #89:#184      // MODULE$:Lscala/reflect/ClassTag$;
  #186 = Fieldref           #183.#185     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #187 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #188 = NameAndType        #178:#187     // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #189 = Methodref          #183.#188     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #190 = Utf8               map$extension
  #191 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #192 = NameAndType        #190:#191     // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #193 = Methodref          #143.#192     // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #194 = Utf8               wrapRefArray
  #195 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #196 = NameAndType        #194:#195     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #197 = Methodref          #94.#196      // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #198 = Utf8               mkString
  #199 = NameAndType        #198:#101     // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #200 = Methodref          #17.#199      // scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #201 = Integer            3
  #202 = Utf8                 !
  #203 = String             #202          //   !
  #204 = Utf8               )
  #205 = String             #204          // )
  #206 = Utf8               padding
  #207 = Utf8               msg
  #208 = Utf8               I
  #209 = Utf8               copy
  #210 = Utf8               (Lorg/scalatest/Fact;)Lorg/scalatest/Fact$Unary_$bang;
  #211 = Utf8               (Lorg/scalatest/Fact;)V
  #212 = NameAndType        #113:#211     // "<init>":(Lorg/scalatest/Fact;)V
  #213 = Methodref          #2.#212       // org/scalatest/Fact$Unary_$bang."<init>":(Lorg/scalatest/Fact;)V
  #214 = Utf8               copy$default$1
  #215 = Utf8               productPrefix
  #216 = Utf8               Unary_!
  #217 = String             #216          // Unary_!
  #218 = Utf8               productArity
  #219 = Utf8               ()I
  #220 = Utf8               productElement
  #221 = Utf8               (I)Ljava/lang/Object;
  #222 = Utf8               x$1
  #223 = Utf8               scala/runtime/Statics
  #224 = Class              #223          // scala/runtime/Statics
  #225 = Utf8               ioobe
  #226 = NameAndType        #225:#221     // ioobe:(I)Ljava/lang/Object;
  #227 = Methodref          #224.#226     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #228 = Utf8               java/lang/Object
  #229 = Class              #228          // java/lang/Object
  #230 = Utf8               productIterator
  #231 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #232 = Utf8               scala/runtime/ScalaRunTime$
  #233 = Class              #232          // scala/runtime/ScalaRunTime$
  #234 = Utf8               Lscala/runtime/ScalaRunTime$;
  #235 = NameAndType        #89:#234      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #236 = Fieldref           #233.#235     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #237 = Utf8               typedProductIterator
  #238 = NameAndType        #237:#44      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #239 = Methodref          #233.#238     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #240 = Utf8               canEqual
  #241 = Utf8               (Ljava/lang/Object;)Z
  #242 = Utf8               Ljava/lang/Object;
  #243 = Utf8               productElementName
  #244 = String             #21           // underlying
  #245 = Utf8               hashCode
  #246 = Utf8               _hashCode
  #247 = Utf8               (Lscala/Product;)I
  #248 = NameAndType        #246:#247     // _hashCode:(Lscala/Product;)I
  #249 = Methodref          #233.#248     // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
  #250 = Utf8               equals
  #251 = NameAndType        #250:#241     // equals:(Ljava/lang/Object;)Z
  #252 = Methodref          #229.#251     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #253 = NameAndType        #240:#241     // canEqual:(Ljava/lang/Object;)Z
  #254 = Methodref          #2.#253       // org/scalatest/Fact$Unary_$bang.canEqual:(Ljava/lang/Object;)Z
  #255 = Utf8               padding$2
  #256 = Utf8               line
  #257 = Integer            2
  #258 = Utf8               ()V
  #259 = NameAndType        #113:#258     // "<init>":()V
  #260 = Methodref          #4.#259       // org/scalatest/Fact."<init>":()V
  #261 = Utf8               $init$
  #262 = Utf8               (Lscala/Product;)V
  #263 = NameAndType        #261:#262     // $init$:(Lscala/Product;)V
  #264 = InterfaceMethodref #6.#263       // scala/Product.$init$:(Lscala/Product;)V
  #265 = NameAndType        #25:#52       // rawSimplifiedFactMessage:()Ljava/lang/String;
  #266 = Methodref          #4.#265       // org/scalatest/Fact.rawSimplifiedFactMessage:()Ljava/lang/String;
  #267 = NameAndType        #27:#52       // rawMidSentenceSimplifiedFactMessage:()Ljava/lang/String;
  #268 = Methodref          #4.#267       // org/scalatest/Fact.rawMidSentenceSimplifiedFactMessage:()Ljava/lang/String;
  #269 = NameAndType        #31:#61       // simplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #270 = Methodref          #4.#269       // org/scalatest/Fact.simplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #271 = NameAndType        #33:#61       // midSentenceSimplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #272 = Methodref          #4.#271       // org/scalatest/Fact.midSentenceSimplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #273 = NameAndType        #34:#71       // isLeaf:()Z
  #274 = Methodref          #4.#273       // org/scalatest/Fact.isLeaf:()Z
  #275 = NameAndType        #36:#74       // prettifier:()Lorg/scalactic/Prettifier;
  #276 = Methodref          #4.#275       // org/scalatest/Fact.prettifier:()Lorg/scalactic/Prettifier;
  #277 = Methodref          #4.#121       // org/scalatest/Fact.isYes:()Z
  #278 = Utf8               $deserializeLambda$
  #279 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #280 = Utf8               scala/runtime/LambdaDeserialize
  #281 = Class              #280          // scala/runtime/LambdaDeserialize
  #282 = Utf8               bootstrap
  #283 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #284 = NameAndType        #282:#283     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #285 = Methodref          #281.#284     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #286 = MethodHandle       6:#285        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #287 = Utf8               lambdaDeserialize
  #288 = NameAndType        #287:#279     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #289 = InvokeDynamic      #1:#288       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #290 = Utf8               Signature
  #291 = Utf8               Code
  #292 = Utf8               LineNumberTable
  #293 = Utf8               LocalVariableTable
  #294 = Utf8               StackMapTable
  #295 = Utf8               MethodParameters
  #296 = Utf8               InnerClasses
  #297 = Utf8               SourceFile
  #298 = Utf8               BootstrapMethods
  #299 = Utf8               ScalaInlineInfo
  #300 = Utf8               Scala
{
  private final org.scalatest.Fact underlying;
    descriptor: Lorg/scalatest/Fact;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String rawFactMessage;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String rawSimplifiedFactMessage;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String rawMidSentenceFactMessage;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String rawMidSentenceSimplifiedFactMessage;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.immutable.IndexedSeq<java.lang.Object> factMessageArgs;
    descriptor: Lscala/collection/immutable/IndexedSeq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  private final scala.collection.immutable.IndexedSeq<java.lang.Object> simplifiedFactMessageArgs;
    descriptor: Lscala/collection/immutable/IndexedSeq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  private final scala.collection.immutable.IndexedSeq<java.lang.Object> midSentenceFactMessageArgs;
    descriptor: Lscala/collection/immutable/IndexedSeq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  private final scala.collection.immutable.IndexedSeq<java.lang.Object> midSentenceSimplifiedFactMessageArgs;
    descriptor: Lscala/collection/immutable/IndexedSeq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  private final boolean isLeaf;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.scalactic.Prettifier prettifier;
    descriptor: Lorg/scalactic/Prettifier;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean isYes;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean isVacuousYes;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;
    Signature: #42                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public org.scalatest.Fact underlying();
    descriptor: ()Lorg/scalatest/Fact;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #51                 // Field underlying:Lorg/scalatest/Fact;
         4: areturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public java.lang.String rawFactMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #54                 // Field rawFactMessage:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 835: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public java.lang.String rawSimplifiedFactMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field rawSimplifiedFactMessage:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 836: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public java.lang.String rawMidSentenceFactMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #58                 // Field rawMidSentenceFactMessage:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 837: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public java.lang.String rawMidSentenceSimplifiedFactMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #60                 // Field rawMidSentenceSimplifiedFactMessage:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 838: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> factMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #64                 // Field factMessageArgs:Lscala/collection/immutable/IndexedSeq;
         4: areturn
      LineNumberTable:
        line 839: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;
    Signature: #62                          // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> simplifiedFactMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #66                 // Field simplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
         4: areturn
      LineNumberTable:
        line 840: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;
    Signature: #62                          // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> midSentenceFactMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #68                 // Field midSentenceFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
         4: areturn
      LineNumberTable:
        line 841: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;
    Signature: #62                          // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> midSentenceSimplifiedFactMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #70                 // Field midSentenceSimplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
         4: areturn
      LineNumberTable:
        line 842: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;
    Signature: #62                          // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public boolean isLeaf();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #73                 // Field isLeaf:Z
         4: ireturn
      LineNumberTable:
        line 843: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public org.scalactic.Prettifier prettifier();
    descriptor: ()Lorg/scalactic/Prettifier;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #76                 // Field prettifier:Lorg/scalactic/Prettifier;
         4: areturn
      LineNumberTable:
        line 844: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public boolean isYes();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #78                 // Field isYes:Z
         4: ireturn
      LineNumberTable:
        line 846: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public boolean isVacuousYes();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #80                 // Field isVacuousYes:Z
         4: ireturn
      LineNumberTable:
        line 847: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public org.scalatest.Fact unary_$bang();
    descriptor: ()Lorg/scalatest/Fact;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #83                 // Method underlying:()Lorg/scalatest/Fact;
         4: areturn
      LineNumberTable:
        line 849: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public java.lang.String factDiagram(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=4, args_size=2
         0: getstatic     #92                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: ldc           #99                 // String
         8: invokevirtual #103                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        11: iload_1
        12: invokevirtual #107                // Method scala/collection/StringOps$.$times$extension:(Ljava/lang/String;I)Ljava/lang/String;
        15: astore_2
        16: aload_0
        17: invokevirtual #83                 // Method underlying:()Lorg/scalatest/Fact;
        20: iconst_0
        21: invokevirtual #109                // Method org/scalatest/Fact.factDiagram:(I)Ljava/lang/String;
        24: astore_3
        25: new           #111                // class java/lang/StringBuilder
        28: dup
        29: ldc           #112                // int 1
        31: invokespecial #116                // Method java/lang/StringBuilder."<init>":(I)V
        34: aload_2
        35: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: aload_0
        39: invokevirtual #122                // Method isYes:()Z
        42: ifeq          50
        45: ldc           #124                // String Yes(
        47: goto          52
        50: ldc           #126                // String No(
        52: invokevirtual #129                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        55: aload_0
        56: invokevirtual #132                // Method NEWLINE:()Ljava/lang/String;
        59: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: aload_3
        63: ldc           #134                // String \n
        65: invokevirtual #140                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        68: ifeq          165
        71: new           #111                // class java/lang/StringBuilder
        74: dup
        75: ldc           #141                // int 0
        77: invokespecial #116                // Method java/lang/StringBuilder."<init>":(I)V
        80: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        83: getstatic     #146                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        86: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        89: new           #111                // class java/lang/StringBuilder
        92: dup
        93: ldc           #112                // int 1
        95: invokespecial #116                // Method java/lang/StringBuilder."<init>":(I)V
        98: ldc           #148                // String !
       100: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       103: aload_3
       104: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       107: invokevirtual #151                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       110: ldc           #134                // String \n
       112: invokevirtual #155                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       115: checkcast     #157                // class "[Ljava/lang/Object;"
       118: invokevirtual #161                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       121: aload_2
       122: invokedynamic #181,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function1;
       127: getstatic     #186                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       130: ldc           #136                // class java/lang/String
       132: invokevirtual #189                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       135: invokevirtual #193                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       138: checkcast     #157                // class "[Ljava/lang/Object;"
       141: invokevirtual #197                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
       144: ldc           #134                // String \n
       146: invokevirtual #200                // Method scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
       149: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       152: aload_0
       153: invokevirtual #132                // Method NEWLINE:()Ljava/lang/String;
       156: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       159: invokevirtual #151                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       162: goto          197
       165: new           #111                // class java/lang/StringBuilder
       168: dup
       169: ldc           #201                // int 3
       171: invokespecial #116                // Method java/lang/StringBuilder."<init>":(I)V
       174: aload_2
       175: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       178: ldc           #203                // String   !
       180: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       183: aload_3
       184: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       187: aload_0
       188: invokevirtual #132                // Method NEWLINE:()Ljava/lang/String;
       191: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       194: invokevirtual #151                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       197: invokevirtual #129                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       200: aload_2
       201: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       204: ldc           #205                // String )
       206: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       209: invokevirtual #151                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       212: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/scalatest/Fact$Unary_$bang, int, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/scalatest/Fact$Unary_$bang, int, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 112
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class org/scalatest/Fact$Unary_$bang, int, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
      LineNumberTable:
        line 852: 0
        line 853: 16
        line 860: 25
        line 854: 34
        line 855: 62
        line 856: 71
        line 858: 165
        line 860: 200
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16     196     2 padding   Ljava/lang/String;
           25     187     3   msg   Ljava/lang/String;
            0     213     0  this   Lorg/scalatest/Fact$Unary_$bang;
            0     213     1 level   I
    MethodParameters:
      Name                           Flags
      level                          final

  public org.scalatest.Fact$Unary_$bang copy(org.scalatest.Fact);
    descriptor: (Lorg/scalatest/Fact;)Lorg/scalatest/Fact$Unary_$bang;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/scalatest/Fact$Unary_$bang
         3: dup
         4: aload_1
         5: invokespecial #213                // Method "<init>":(Lorg/scalatest/Fact;)V
         8: areturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalatest/Fact$Unary_$bang;
            0       9     1 underlying   Lorg/scalatest/Fact;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public org.scalatest.Fact copy$default$1();
    descriptor: ()Lorg/scalatest/Fact;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #83                 // Method underlying:()Lorg/scalatest/Fact;
         4: areturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #217                // String Unary_!
         2: areturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #83                 // Method underlying:()Lorg/scalatest/Fact;
        24: goto          34
        27: iload_1
        28: invokestatic  #227                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        31: goto          34
        34: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/scalatest/Fact$Unary_$bang;
            0      35     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #236                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #239                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/Fact$Unary_$bang;
    Signature: #231                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/Fact$Unary_$bang
         4: ireturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Fact$Unary_$bang;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 25
            }
        20: ldc           #244                // String underlying
        22: goto          35
        25: iload_1
        26: invokestatic  #227                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        29: checkcast     #136                // class java/lang/String
        32: goto          35
        35: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/scalatest/Fact$Unary_$bang;
            0      36     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #236                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #249                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/Fact$Unary_$bang;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     86
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalatest/Fact$Unary_$bang
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          90
        31: aload_1
        32: checkcast     #2                  // class org/scalatest/Fact$Unary_$bang
        35: astore        4
        37: aload_0
        38: invokevirtual #83                 // Method underlying:()Lorg/scalatest/Fact;
        41: aload         4
        43: invokevirtual #83                 // Method underlying:()Lorg/scalatest/Fact;
        46: astore        5
        48: dup
        49: ifnonnull     61
        52: pop
        53: aload         5
        55: ifnull        69
        58: goto          82
        61: aload         5
        63: invokevirtual #252                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        66: ifeq          82
        69: aload         4
        71: aload_0
        72: invokevirtual #254                // Method canEqual:(Ljava/lang/Object;)Z
        75: ifeq          82
        78: iconst_1
        79: goto          83
        82: iconst_0
        83: ifeq          90
        86: iconst_1
        87: goto          91
        90: iconst_0
        91: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/Fact$Unary_$bang, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class org/scalatest/Fact$Unary_$bang, class java/lang/Object, int, class java/lang/Object, class org/scalatest/Fact$Unary_$bang, class org/scalatest/Fact ]
          stack = [ class org/scalatest/Fact ]
        frame_type = 7 /* same */
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/Fact$Unary_$bang, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/Fact$Unary_$bang, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 833: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      92     0  this   Lorg/scalatest/Fact$Unary_$bang;
            0      92     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.String $anonfun$factDiagram$2(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #111                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #257                // int 2
         7: invokespecial #116                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: ldc           #99                 // String
        16: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: aload_1
        20: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #151                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 856: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0 padding$2   Ljava/lang/String;
            0      27     1  line   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      padding$2                      final
      line                           final

  public org.scalatest.Fact$Unary_$bang(org.scalatest.Fact);
    descriptor: (Lorg/scalatest/Fact;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #51                 // Field underlying:Lorg/scalatest/Fact;
         5: aload_0
         6: invokespecial #260                // Method org/scalatest/Fact."<init>":()V
         9: aload_0
        10: invokestatic  #264                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: aload_0
        14: aload_1
        15: invokevirtual #266                // Method org/scalatest/Fact.rawSimplifiedFactMessage:()Ljava/lang/String;
        18: putfield      #54                 // Field rawFactMessage:Ljava/lang/String;
        21: aload_0
        22: aload_1
        23: invokevirtual #266                // Method org/scalatest/Fact.rawSimplifiedFactMessage:()Ljava/lang/String;
        26: putfield      #56                 // Field rawSimplifiedFactMessage:Ljava/lang/String;
        29: aload_0
        30: aload_1
        31: invokevirtual #268                // Method org/scalatest/Fact.rawMidSentenceSimplifiedFactMessage:()Ljava/lang/String;
        34: putfield      #58                 // Field rawMidSentenceFactMessage:Ljava/lang/String;
        37: aload_0
        38: aload_1
        39: invokevirtual #268                // Method org/scalatest/Fact.rawMidSentenceSimplifiedFactMessage:()Ljava/lang/String;
        42: putfield      #60                 // Field rawMidSentenceSimplifiedFactMessage:Ljava/lang/String;
        45: aload_0
        46: aload_1
        47: invokevirtual #270                // Method org/scalatest/Fact.simplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        50: putfield      #64                 // Field factMessageArgs:Lscala/collection/immutable/IndexedSeq;
        53: aload_0
        54: aload_1
        55: invokevirtual #270                // Method org/scalatest/Fact.simplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        58: putfield      #66                 // Field simplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
        61: aload_0
        62: aload_1
        63: invokevirtual #272                // Method org/scalatest/Fact.midSentenceSimplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        66: putfield      #68                 // Field midSentenceFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
        69: aload_0
        70: aload_1
        71: invokevirtual #272                // Method org/scalatest/Fact.midSentenceSimplifiedFactMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        74: putfield      #70                 // Field midSentenceSimplifiedFactMessageArgs:Lscala/collection/immutable/IndexedSeq;
        77: aload_0
        78: aload_1
        79: invokevirtual #274                // Method org/scalatest/Fact.isLeaf:()Z
        82: putfield      #73                 // Field isLeaf:Z
        85: aload_0
        86: aload_1
        87: invokevirtual #276                // Method org/scalatest/Fact.prettifier:()Lorg/scalactic/Prettifier;
        90: putfield      #76                 // Field prettifier:Lorg/scalactic/Prettifier;
        93: aload_0
        94: aload_1
        95: invokevirtual #277                // Method org/scalatest/Fact.isYes:()Z
        98: ifne          105
       101: iconst_1
       102: goto          106
       105: iconst_0
       106: putfield      #78                 // Field isYes:Z
       109: aload_0
       110: iconst_0
       111: putfield      #80                 // Field isVacuousYes:Z
       114: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 105
          locals = [ class org/scalatest/Fact$Unary_$bang, class org/scalatest/Fact ]
          stack = [ class org/scalatest/Fact$Unary_$bang ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/Fact$Unary_$bang, class org/scalatest/Fact ]
          stack = [ class org/scalatest/Fact$Unary_$bang, int ]
      LineNumberTable:
        line 833: 0
        line 835: 13
        line 836: 21
        line 837: 29
        line 838: 37
        line 839: 45
        line 840: 53
        line 841: 61
        line 842: 69
        line 843: 77
        line 844: 85
        line 846: 93
        line 847: 109
        line 833: 114
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     115     0  this   Lorg/scalatest/Fact$Unary_$bang;
            0     115     1 underlying   Lorg/scalatest/Fact;
    MethodParameters:
      Name                           Flags
      underlying                     final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #289,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #2 of #4;            // Unary_$bang=class org/scalatest/Fact$Unary_$bang of class org/scalatest/Fact
  public static final #20= #17 of #19;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
SourceFile: "Fact.scala"
BootstrapMethods:
  0: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #163 (Ljava/lang/Object;)Ljava/lang/Object;
      #168 REF_invokeStatic org/scalatest/Fact$Unary_$bang.$anonfun$factDiagram$2:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      #169 (Ljava/lang/String;)Ljava/lang/String;
      #170 5
      #112 1
      #169 (Ljava/lang/String;)Ljava/lang/String;
  1: #286 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 REF_invokeStatic org/scalatest/Fact$Unary_$bang.$anonfun$factDiagram$2:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x90 (unknown attribute)
   01 00 00 1C 00 A4 00 A5 01 00 71 00 D3 00 00 F0
   00 F1 00 00 D1 00 D2 00 00 D6 00 31 00 00 FA 00
   F1 00 00 54 00 55 00 00 1C 00 3D 00 00 F5 00 DB
   00 00 22 00 47 00 00 27 00 47 00 00 26 00 47 00
   00 20 00 3D 00 00 21 00 3D 00 00 24 00 4A 00 00
   DA 00 DB 00 00 DC 00 DD 00 00 F3 00 55 00 00 28
   00 29 00 00 E6 00 29 00 00 D7 00 34 00 00 17 00
   34 00 00 1A 00 34 00 00 1B 00 34 00 00 19 00 34
   00 00 1F 00 3D 00 00 51 00 31 00 00 15 00 31 00

  Scala: length = 0x0 (unknown attribute)

