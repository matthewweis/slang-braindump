Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/parser/Json$State$Long$.class
  Last modified May 29, 2022; size 3633 bytes
  SHA-256 checksum 3de772e9e4ea5e5fb6548cb904754e65014e227c7e09002b10cca359c375e7a4
  Compiled from "JsonParser.scala"
public class org.sireum.parser.Json$State$Long$ extends java.lang.Object implements org.sireum.$ZCompanionLong<org.sireum.parser.Json$State>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/parser/Json$State$Long$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 9, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/parser/Json$State$Long$
    #2 = Class              #1            // org/sireum/parser/Json$State$Long$
    #3 = Utf8               Ljava/lang/Object;Lorg/sireum/$ZCompanionLong<Lorg/sireum/parser/Json$State;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/$ZCompanionLong
    #7 = Class              #6            // org/sireum/$ZCompanionLong
    #8 = Utf8               JsonParser.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               org/sireum/Z$MP$
   #15 = Class              #14           // org/sireum/Z$MP$
   #16 = Utf8               org/sireum/Z
   #17 = Class              #16           // org/sireum/Z
   #18 = Utf8               MP$
   #19 = Utf8               org/sireum/package$$Long2Z$
   #20 = Class              #19           // org/sireum/package$$Long2Z$
   #21 = Utf8               org/sireum/package
   #22 = Class              #21           // org/sireum/package
   #23 = Utf8               $Long2Z$
   #24 = Utf8               org/sireum/parser/Json$State
   #25 = Class              #24           // org/sireum/parser/Json$State
   #26 = Utf8               org/sireum/parser/Json
   #27 = Class              #26           // org/sireum/parser/Json
   #28 = Utf8               State
   #29 = Utf8               org/sireum/parser/Json$State$
   #30 = Class              #29           // org/sireum/parser/Json$State$
   #31 = Utf8               State$
   #32 = Utf8               Long$
   #33 = Utf8               MODULE$
   #34 = Utf8               Lorg/sireum/parser/Json$State$Long$;
   #35 = Utf8               <clinit>
   #36 = Utf8               ()V
   #37 = Utf8               <init>
   #38 = NameAndType        #37:#36       // "<init>":()V
   #39 = Methodref          #2.#38        // org/sireum/parser/Json$State$Long$."<init>":()V
   #40 = NameAndType        #33:#34       // MODULE$:Lorg/sireum/parser/Json$State$Long$;
   #41 = Fieldref           #2.#40        // org/sireum/parser/Json$State$Long$.MODULE$:Lorg/sireum/parser/Json$State$Long$;
   #42 = Utf8               apply
   #43 = Utf8               (J)Lorg/sireum/Z;
   #44 = Utf8               n
   #45 = Utf8               Lorg/sireum/parser/Json$State$;
   #46 = NameAndType        #33:#45       // MODULE$:Lorg/sireum/parser/Json$State$;
   #47 = Fieldref           #30.#46       // org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
   #48 = Utf8               Lorg/sireum/Z$MP$;
   #49 = NameAndType        #33:#48       // MODULE$:Lorg/sireum/Z$MP$;
   #50 = Fieldref           #15.#49       // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
   #51 = NameAndType        #42:#43       // apply:(J)Lorg/sireum/Z;
   #52 = Methodref          #15.#51       // org/sireum/Z$MP$.apply:(J)Lorg/sireum/Z;
   #53 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #54 = NameAndType        #42:#53       // apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #55 = Methodref          #30.#54       // org/sireum/parser/Json$State$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #56 = Utf8               this
   #57 = Utf8               J
   #58 = Utf8               unapply
   #59 = Utf8               (Lorg/sireum/Z;)Lscala/Option;
   #60 = Utf8               (Lorg/sireum/Z;)Lscala/Option<Ljava/lang/Object;>;
   #61 = Utf8               org/sireum/B$
   #62 = Class              #61           // org/sireum/B$
   #63 = Utf8               Lorg/sireum/B$;
   #64 = NameAndType        #33:#63       // MODULE$:Lorg/sireum/B$;
   #65 = Fieldref           #62.#64       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #66 = Utf8               Lorg/sireum/package$$Long2Z$;
   #67 = NameAndType        #33:#66       // MODULE$:Lorg/sireum/package$$Long2Z$;
   #68 = Fieldref           #20.#67       // org/sireum/package$$Long2Z$.MODULE$:Lorg/sireum/package$$Long2Z$;
   #69 = Utf8               org/sireum/package$
   #70 = Class              #69           // org/sireum/package$
   #71 = Utf8               Lorg/sireum/package$;
   #72 = NameAndType        #33:#71       // MODULE$:Lorg/sireum/package$;
   #73 = Fieldref           #70.#72       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #74 = Long               -9223372036854775808l
   #76 = Utf8               $Long2Z
   #77 = Utf8               (J)J
   #78 = NameAndType        #76:#77       // $Long2Z:(J)J
   #79 = Methodref          #70.#78       // org/sireum/package$.$Long2Z:(J)J
   #80 = Utf8               $less$eq$extension
   #81 = Utf8               (JLorg/sireum/Z;)Z
   #82 = NameAndType        #80:#81       // $less$eq$extension:(JLorg/sireum/Z;)Z
   #83 = Methodref          #20.#82       // org/sireum/package$$Long2Z$.$less$eq$extension:(JLorg/sireum/Z;)Z
   #84 = Utf8               ()Ljava/lang/Object;
   #85 = MethodType         #84           //  ()Ljava/lang/Object;
   #86 = Utf8               $anonfun$unapply$2$adapted
   #87 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
   #88 = NameAndType        #86:#87       // $anonfun$unapply$2$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
   #89 = Methodref          #2.#88        // org/sireum/parser/Json$State$Long$.$anonfun$unapply$2$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
   #90 = MethodHandle       6:#89         // REF_invokeStatic org/sireum/parser/Json$State$Long$.$anonfun$unapply$2$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
   #91 = Integer            1
   #92 = Utf8               java/lang/invoke/LambdaMetafactory
   #93 = Class              #92           // java/lang/invoke/LambdaMetafactory
   #94 = Utf8               altMetafactory
   #95 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #96 = NameAndType        #94:#95       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #97 = Methodref          #93.#96       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #98 = MethodHandle       6:#97         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #99 = Utf8               (Lorg/sireum/Z;)Lscala/Function0;
  #100 = NameAndType        #42:#99       // apply:(Lorg/sireum/Z;)Lscala/Function0;
  #101 = InvokeDynamic      #0:#100       // #0:apply:(Lorg/sireum/Z;)Lscala/Function0;
  #102 = Utf8               $amp$amp$extension
  #103 = Utf8               (ZLscala/Function0;)Z
  #104 = NameAndType        #102:#103     // $amp$amp$extension:(ZLscala/Function0;)Z
  #105 = Methodref          #62.#104      // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #106 = Utf8               $4B
  #107 = Utf8               (Z)Z
  #108 = NameAndType        #106:#107     // $4B:(Z)Z
  #109 = Methodref          #62.#108      // org/sireum/B$.$4B:(Z)Z
  #110 = Utf8               scala/Some
  #111 = Class              #110          // scala/Some
  #112 = Utf8               toBigInt
  #113 = Utf8               ()Lscala/math/BigInt;
  #114 = NameAndType        #112:#113     // toBigInt:()Lscala/math/BigInt;
  #115 = InterfaceMethodref #17.#114      // org/sireum/Z.toBigInt:()Lscala/math/BigInt;
  #116 = Utf8               scala/math/BigInt
  #117 = Class              #116          // scala/math/BigInt
  #118 = Utf8               toLong
  #119 = Utf8               ()J
  #120 = NameAndType        #118:#119     // toLong:()J
  #121 = Methodref          #117.#120     // scala/math/BigInt.toLong:()J
  #122 = Utf8               scala/runtime/BoxesRunTime
  #123 = Class              #122          // scala/runtime/BoxesRunTime
  #124 = Utf8               boxToLong
  #125 = Utf8               (J)Ljava/lang/Long;
  #126 = NameAndType        #124:#125     // boxToLong:(J)Ljava/lang/Long;
  #127 = Methodref          #123.#126     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #128 = Utf8               (Ljava/lang/Object;)V
  #129 = NameAndType        #37:#128      // "<init>":(Ljava/lang/Object;)V
  #130 = Methodref          #111.#129     // scala/Some."<init>":(Ljava/lang/Object;)V
  #131 = Utf8               scala/None$
  #132 = Class              #131          // scala/None$
  #133 = Utf8               Lscala/None$;
  #134 = NameAndType        #33:#133      // MODULE$:Lscala/None$;
  #135 = Fieldref           #132.#134     // scala/None$.MODULE$:Lscala/None$;
  #136 = Utf8               Lorg/sireum/Z;
  #137 = Utf8               scala/Option
  #138 = Class              #137          // scala/Option
  #139 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #140 = Utf8               value
  #141 = Utf8               ()Lorg/sireum/Z;
  #142 = NameAndType        #140:#141     // value:()Lorg/sireum/Z;
  #143 = Methodref          #25.#142      // org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
  #144 = NameAndType        #58:#59       // unapply:(Lorg/sireum/Z;)Lscala/Option;
  #145 = Methodref          #2.#144       // org/sireum/parser/Json$State$Long$.unapply:(Lorg/sireum/Z;)Lscala/Option;
  #146 = Utf8               Ljava/lang/Object;
  #147 = Utf8               (J)Ljava/lang/Object;
  #148 = Methodref          #2.#51        // org/sireum/parser/Json$State$Long$.apply:(J)Lorg/sireum/Z;
  #149 = Utf8               (Lorg/sireum/Z;)V
  #150 = NameAndType        #37:#149      // "<init>":(Lorg/sireum/Z;)V
  #151 = Methodref          #25.#150      // org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
  #152 = Utf8               $anonfun$unapply$2
  #153 = Utf8               (Lorg/sireum/Z;)Z
  #154 = Utf8               n$2
  #155 = Utf8               org/sireum/Z$
  #156 = Class              #155          // org/sireum/Z$
  #157 = Utf8               Lorg/sireum/Z$;
  #158 = NameAndType        #33:#157      // MODULE$:Lorg/sireum/Z$;
  #159 = Fieldref           #156.#158     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #160 = Long               9223372036854775807l
  #162 = Methodref          #156.#51      // org/sireum/Z$.apply:(J)Lorg/sireum/Z;
  #163 = Utf8               $less$eq
  #164 = NameAndType        #163:#153     // $less$eq:(Lorg/sireum/Z;)Z
  #165 = InterfaceMethodref #17.#164      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #166 = Methodref          #5.#38        // java/lang/Object."<init>":()V
  #167 = Utf8               org/sireum/B
  #168 = Class              #167          // org/sireum/B
  #169 = NameAndType        #152:#153     // $anonfun$unapply$2:(Lorg/sireum/Z;)Z
  #170 = Methodref          #2.#169       // org/sireum/parser/Json$State$Long$.$anonfun$unapply$2:(Lorg/sireum/Z;)Z
  #171 = Utf8               (Z)V
  #172 = NameAndType        #37:#171      // "<init>":(Z)V
  #173 = Methodref          #168.#172     // org/sireum/B."<init>":(Z)V
  #174 = Utf8               $deserializeLambda$
  #175 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #176 = Utf8               scala/runtime/LambdaDeserialize
  #177 = Class              #176          // scala/runtime/LambdaDeserialize
  #178 = Utf8               bootstrap
  #179 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #180 = NameAndType        #178:#179     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #181 = Methodref          #177.#180     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #182 = MethodHandle       6:#181        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #183 = Utf8               lambdaDeserialize
  #184 = NameAndType        #183:#175     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #185 = InvokeDynamic      #1:#184       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #186 = Utf8               Code
  #187 = Utf8               LineNumberTable
  #188 = Utf8               LocalVariableTable
  #189 = Utf8               MethodParameters
  #190 = Utf8               StackMapTable
  #191 = Utf8               Signature
  #192 = Utf8               InnerClasses
  #193 = Utf8               SourceFile
  #194 = Utf8               BootstrapMethods
  #195 = Utf8               ScalaInlineInfo
  #196 = Utf8               Scala
{
  public static final org.sireum.parser.Json$State$Long$ MODULE$;
    descriptor: Lorg/sireum/parser/Json$State$Long$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/parser/Json$State$Long$
         3: dup
         4: invokespecial #39                 // Method "<init>":()V
         7: putstatic     #41                 // Field MODULE$:Lorg/sireum/parser/Json$State$Long$;
        10: return
      LineNumberTable:
        line 38: 0

  public org.sireum.Z apply(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #47                 // Field org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
         3: getstatic     #50                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
         6: lload_1
         7: invokevirtual #52                 // Method org/sireum/Z$MP$.apply:(J)Lorg/sireum/Z;
        10: invokevirtual #55                 // Method org/sireum/parser/Json$State$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        13: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/parser/Json$State$Long$;
            0      14     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.Option<java.lang.Object> unapply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: getstatic     #65                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #65                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #68                 // Field org/sireum/package$$Long2Z$.MODULE$:Lorg/sireum/package$$Long2Z$;
         9: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        12: ldc2_w        #74                 // long -9223372036854775808l
        15: invokevirtual #79                 // Method org/sireum/package$.$Long2Z:(J)J
        18: aload_1
        19: invokevirtual #83                 // Method org/sireum/package$$Long2Z$.$less$eq$extension:(JLorg/sireum/Z;)Z
        22: aload_1
        23: invokedynamic #101,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Z;)Lscala/Function0;
        28: invokevirtual #105                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        31: invokevirtual #109                // Method org/sireum/B$.$4B:(Z)Z
        34: ifeq          59
        37: new           #111                // class scala/Some
        40: dup
        41: aload_1
        42: invokeinterface #115,  1          // InterfaceMethod org/sireum/Z.toBigInt:()Lscala/math/BigInt;
        47: invokevirtual #121                // Method scala/math/BigInt.toLong:()J
        50: invokestatic  #127                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        53: invokespecial #130                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        56: goto          62
        59: getstatic     #135                // Field scala/None$.MODULE$:Lscala/None$;
        62: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 59 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/sireum/parser/Json$State$Long$;
            0      63     1     n   Lorg/sireum/Z;
    Signature: #60                          // (Lorg/sireum/Z;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.Option unapply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: instanceof    #25                 // class org/sireum/parser/Json$State
         4: ifeq          21
         7: aload_0
         8: aload_1
         9: checkcast     #25                 // class org/sireum/parser/Json$State
        12: invokevirtual #143                // Method org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
        15: invokevirtual #145                // Method unapply:(Lorg/sireum/Z;)Lscala/Option;
        18: goto          24
        21: getstatic     #135                // Field scala/None$.MODULE$:Lscala/None$;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/parser/Json$State$Long$;
            0      25     1     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object apply(long);
    descriptor: (J)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=2
         0: new           #25                 // class org/sireum/parser/Json$State
         3: dup
         4: aload_0
         5: lload_1
         6: invokevirtual #148                // Method apply:(J)Lorg/sireum/Z;
         9: invokespecial #151                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        12: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/parser/Json$State$Long$;
            0      13     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public static final boolean $anonfun$unapply$2(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getstatic     #159                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         4: ldc2_w        #160                // long 9223372036854775807l
         7: invokevirtual #162                // Method org/sireum/Z$.apply:(J)Lorg/sireum/Z;
        10: invokeinterface #165,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        15: ireturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   n$2   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n$2                            final

  public org.sireum.parser.Json$State$Long$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #166                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/Json$State$Long$;

  public static final java.lang.Object $anonfun$unapply$2$adapted(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #168                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #170                // Method $anonfun$unapply$2:(Lorg/sireum/Z;)Z
         8: invokespecial #173                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   n$2   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n$2                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #185,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #15 of #17;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
  public static #23= #20 of #22;          // $Long2Z$=class org/sireum/package$$Long2Z$ of class org/sireum/package
  public static final #28= #25 of #27;    // State=class org/sireum/parser/Json$State of class org/sireum/parser/Json
  public static #31= #30 of #27;          // State$=class org/sireum/parser/Json$State$ of class org/sireum/parser/Json
  public static #32= #2 of #30;           // Long$=class org/sireum/parser/Json$State$Long$ of class org/sireum/parser/Json$State$
Signature: #3                           // Ljava/lang/Object;Lorg/sireum/$ZCompanionLong<Lorg/sireum/parser/Json$State;>;
SourceFile: "JsonParser.scala"
BootstrapMethods:
  0: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #85 ()Ljava/lang/Object;
      #90 REF_invokeStatic org/sireum/parser/Json$State$Long$.$anonfun$unapply$2$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
      #85 ()Ljava/lang/Object;
      #91 1
  1: #182 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #90 REF_invokeStatic org/sireum/parser/Json$State$Long$.$anonfun$unapply$2$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 98 00 99 01 00 56 00 57 01 00 25
   00 24 01 00 2A 00 93 01 00 2A 00 2B 01 00 3A 00
   8B 01 00 3A 00 3B 01
  Scala: length = 0x0 (unknown attribute)

