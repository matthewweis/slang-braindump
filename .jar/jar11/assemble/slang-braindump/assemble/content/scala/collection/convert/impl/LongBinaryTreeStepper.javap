Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/LongBinaryTreeStepper.class
  Last modified May 29, 2022; size 8254 bytes
  SHA-256 checksum 9f1af0a3b9f96b47cc80620e28ded2d32fc905dcb91b857fd4e128fb4ca1b8f9
  Compiled from "BinaryTreeStepper.scala"
public final class scala.collection.convert.impl.LongBinaryTreeStepper<T extends java.lang.Object> extends scala.collection.convert.impl.BinaryTreeStepperBase<java.lang.Object, T, scala.collection.LongStepper, scala.collection.convert.impl.LongBinaryTreeStepper<T>> implements scala.collection.LongStepper
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/LongBinaryTreeStepper
  super_class: #5                         // scala/collection/convert/impl/BinaryTreeStepperBase
  interfaces: 1, fields: 1, methods: 26, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/LongBinaryTreeStepper
    #2 = Class              #1            // scala/collection/convert/impl/LongBinaryTreeStepper
    #3 = Utf8               <T:Ljava/lang/Object;>Lscala/collection/convert/impl/BinaryTreeStepperBase<Ljava/lang/Object;TT;Lscala/collection/LongStepper;Lscala/collection/convert/impl/LongBinaryTreeStepper<TT;>;>;Lscala/collection/LongStepper;
    #4 = Utf8               scala/collection/convert/impl/BinaryTreeStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/BinaryTreeStepperBase
    #6 = Utf8               scala/collection/LongStepper
    #7 = Class              #6            // scala/collection/LongStepper
    #8 = Utf8               BinaryTreeStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005M4Q\u0001E\t\u0003+eA\u0001\u0002\u000e\u0001\u0003\u0002\u0003\u0006I!\u000e\u0005\tq\u0001\u0011\t\u0011)A\u0005G!A\u0011\b\u0001B\u0001B\u0003%!\b\u0003\u0005>\u0001\t\u0005\t\u0015!\u00036\u0011%q\u0004A!A!\u0002\u0013y$\tC\u0005E\u0001\t\u0005\t\u0015!\u0003@\u000b\"Aq\t\u0001BC\u0002\u0013E\u0001\n\u0003\u0005K\u0001\t\u0005\t\u0015!\u0003J\u0011\u0015Y\u0005\u0001\"\u0001M\u0011\u0015!\u0006\u0001\"\u0001V\u0011\u00151\u0006\u0001\"\u0001X\u000f\u0019\u0001\u0017\u0003#\u0001\u0016C\u001a1\u0001#\u0005E\u0001+\tDQaS\u0007\u0005\u0002\rDQ\u0001Z\u0007\u0005\u0002\u0015\u0014Q\u0003T8oO\nKg.\u0019:z)J,Wm\u0015;faB,\'O\u0003\u0002\u0013\'\u0005!\u0011.\u001c9m\u0015\t!R#A\u0004d_:4XM\u001d;\u000b\u0005Y9\u0012AC2pY2,7\r^5p]*\t\u0001$A\u0003tG\u0006d\u0017-\u0006\u0002\u001bKM\u0019\u0001aG\u0018\u0011\rqirdI\u00184\u001b\u0005\t\u0012B\u0001\u0010\u0012\u0005U\u0011\u0015N\\1ssR\u0013X-Z*uKB\u0004XM\u001d\"bg\u0016\u0004\"\u0001I\u0011\u000e\u0003]I!AI\f\u0003\t1{gn\u001a\t\u0003I\u0015b\u0001\u0001B\u0003\'\u0001\t\u0007\u0001FA\u0001U\u0007\u0001\t\"!\u000b\u0017\u0011\u0005\u0001R\u0013BA\u0016\u0018\u0005\u0011qU\u000f\u001c7\u0011\u0005\u0001j\u0013B\u0001\u0018\u0018\u0005\u0019\te.\u001f*fMB\u0011\u0001\'M\u0007\u0002+%\u0011!\'\u0006\u0002\f\u0019>twm\u0015;faB,\'\u000fE\u0002\u001d\u0001\r\n!bX7bq2+gn\u001a;i!\t\u0001c\'\u0003\u00028/\t\u0019\u0011J\u001c;\u0002\u0015}k\u0017pQ;se\u0016tG/\u0001\u0004`gR\f7m\u001b\t\u0004Amb\u0013B\u0001\u001f\u0018\u0005\u0015\t%O]1z\u0003\u0019y\u0016N\u001c3fq\u0006)q\f\\3giB!\u0001\u0005Q\u0012$\u0013\t\tuCA\u0005Gk:\u001cG/[8oc%\u00111)H\u0001\u0005Y\u00164G/\u0001\u0004`e&<\u0007\u000e^\u0005\u0003\rv\tQA]5hQR\fq!\u001a=ue\u0006\u001cG/F\u0001J!\u0011\u0001\u0003iI\u0010\u0002\u0011\u0015DHO]1di\u0002\na\u0001P5oSRtD\u0003C\u001aN\u001d>\u0003\u0016KU*\t\u000bQJ\u0001\u0019A\u001b\t\u000baJ\u0001\u0019A\u0012\t\u000beJ\u0001\u0019\u0001\u001e\t\u000buJ\u0001\u0019A\u001b\t\u000byJ\u0001\u0019A \t\u000b\u0011K\u0001\u0019A \t\u000b\u001dK\u0001\u0019A%\u0002\u00119,\u0007\u0010^*uKB$\u0012aH\u0001\ng\u0016l\u0017n\u00197p]\u0016$Ra\r-[9zCQ!W\u0006A\u0002U\nA!\\1y\u0019\")1l\u0003a\u0001G\u0005\u0019Q._\"\t\u000bu[\u0001\u0019\u0001\u001e\u0002\u0007M$8\u000eC\u0003`\u0017\u0001\u0007Q\'\u0001\u0002jq\u0006)Bj\u001c8h\u0005&t\u0017M]=Ue\u0016,7\u000b^3qa\u0016\u0014\bC\u0001\u000f\u000e\'\tiA\u0006F\u0001b\u0003\u00111\'o\\7\u0016\u0005\u0019LGCB4kY:\u0004\u0018\u000fE\u0002\u001d\u0001!\u0004\"\u0001J5\u0005\u000b\u0019z!\u0019\u0001\u0015\t\u000b-|\u0001\u0019A\u001b\u0002\u00135\f\u0007\u0010T3oORD\u0007\"B7\u0010\u0001\u0004A\u0017\u0001\u0002:p_RDQaQ\bA\u0002=\u0004B\u0001\t!iQ\")ai\u0004a\u0001_\")qi\u0004a\u0001eB!\u0001\u0005\u00115 \u0001
   #12 = Utf8               java/util/PrimitiveIterator$OfLong
   #13 = Class              #12           // java/util/PrimitiveIterator$OfLong
   #14 = Utf8               java/util/PrimitiveIterator
   #15 = Class              #14           // java/util/PrimitiveIterator
   #16 = Utf8               OfLong
   #17 = Utf8               java/util/Spliterator$OfLong
   #18 = Class              #17           // java/util/Spliterator$OfLong
   #19 = Utf8               java/util/Spliterator
   #20 = Class              #19           // java/util/Spliterator
   #21 = Utf8               extract
   #22 = Utf8               Lscala/Function1;
   #23 = Utf8               Lscala/Function1<TT;Ljava/lang/Object;>;
   #24 = Utf8               from
   #25 = Utf8               (ILjava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Lscala/collection/convert/impl/LongBinaryTreeStepper;
   #26 = Utf8               <T:Ljava/lang/Object;>(ITT;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/collection/convert/impl/LongBinaryTreeStepper<TT;>;
   #27 = Utf8               maxLength
   #28 = Utf8               root
   #29 = Utf8               left
   #30 = Utf8               right
   #31 = Utf8               scala/collection/convert/impl/LongBinaryTreeStepper$
   #32 = Class              #31           // scala/collection/convert/impl/LongBinaryTreeStepper$
   #33 = Utf8               MODULE$
   #34 = Utf8               Lscala/collection/convert/impl/LongBinaryTreeStepper$;
   #35 = NameAndType        #33:#34       // MODULE$:Lscala/collection/convert/impl/LongBinaryTreeStepper$;
   #36 = Fieldref           #32.#35       // scala/collection/convert/impl/LongBinaryTreeStepper$.MODULE$:Lscala/collection/convert/impl/LongBinaryTreeStepper$;
   #37 = Utf8               scala/collection/convert/impl/BinaryTreeStepper$
   #38 = Class              #37           // scala/collection/convert/impl/BinaryTreeStepper$
   #39 = Utf8               Lscala/collection/convert/impl/BinaryTreeStepper$;
   #40 = NameAndType        #33:#39       // MODULE$:Lscala/collection/convert/impl/BinaryTreeStepper$;
   #41 = Fieldref           #38.#40       // scala/collection/convert/impl/BinaryTreeStepper$.MODULE$:Lscala/collection/convert/impl/BinaryTreeStepper$;
   #42 = Utf8               emptyStack
   #43 = Utf8               ()[Ljava/lang/Object;
   #44 = NameAndType        #42:#43       // emptyStack:()[Ljava/lang/Object;
   #45 = Methodref          #38.#44       // scala/collection/convert/impl/BinaryTreeStepper$.emptyStack:()[Ljava/lang/Object;
   #46 = Utf8               <init>
   #47 = Utf8               (ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
   #48 = NameAndType        #46:#47       // "<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
   #49 = Methodref          #2.#48        // scala/collection/convert/impl/LongBinaryTreeStepper."<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
   #50 = Utf8               initialize
   #51 = Utf8               (Ljava/lang/Object;I)V
   #52 = NameAndType        #50:#51       // initialize:(Ljava/lang/Object;I)V
   #53 = Methodref          #2.#52        // scala/collection/convert/impl/LongBinaryTreeStepper.initialize:(Ljava/lang/Object;I)V
   #54 = Utf8               I
   #55 = Utf8               Ljava/lang/Object;
   #56 = Utf8               from_ans
   #57 = Utf8               Lscala/collection/convert/impl/LongBinaryTreeStepper;
   #58 = Utf8               spliterator
   #59 = Utf8               ()Ljava/util/Spliterator$OfLong;
   #60 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfLong;
   #61 = Utf8               spliterator$
   #62 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
   #63 = NameAndType        #61:#62       // spliterator$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
   #64 = InterfaceMethodref #7.#63        // scala/collection/LongStepper.spliterator$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
   #65 = Utf8               this
   #66 = Utf8               javaIterator
   #67 = Utf8               ()Ljava/util/PrimitiveIterator$OfLong;
   #68 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfLong;
   #69 = Utf8               javaIterator$
   #70 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
   #71 = NameAndType        #69:#70       // javaIterator$:(Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
   #72 = InterfaceMethodref #7.#71        // scala/collection/LongStepper.javaIterator$:(Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
   #73 = Utf8               spliterator$mcJ$sp
   #74 = Utf8               ()Ljava/util/Spliterator;
   #75 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #76 = Utf8               spliterator$mcJ$sp$
   #77 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/Spliterator;
   #78 = NameAndType        #76:#77       // spliterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator;
   #79 = InterfaceMethodref #7.#78        // scala/collection/LongStepper.spliterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator;
   #80 = Utf8               javaIterator$mcJ$sp
   #81 = Utf8               ()Ljava/util/Iterator;
   #82 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #83 = Utf8               javaIterator$mcJ$sp$
   #84 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/Iterator;
   #85 = NameAndType        #83:#84       // javaIterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Iterator;
   #86 = InterfaceMethodref #7.#85        // scala/collection/LongStepper.javaIterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Iterator;
   #87 = Utf8               nextStep$mcD$sp
   #88 = Utf8               ()D
   #89 = Utf8               scala/collection/Stepper
   #90 = Class              #89           // scala/collection/Stepper
   #91 = Utf8               nextStep$mcD$sp$
   #92 = Utf8               (Lscala/collection/Stepper;)D
   #93 = NameAndType        #91:#92       // nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #94 = InterfaceMethodref #90.#93       // scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #95 = Utf8               nextStep$mcI$sp
   #96 = Utf8               ()I
   #97 = Utf8               nextStep$mcI$sp$
   #98 = Utf8               (Lscala/collection/Stepper;)I
   #99 = NameAndType        #97:#98       // nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
  #100 = InterfaceMethodref #90.#99       // scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
  #101 = Utf8               trySplit$mcD$sp
  #102 = Utf8               ()Lscala/collection/Stepper;
  #103 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
  #104 = Utf8               trySplit$mcD$sp$
  #105 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #106 = NameAndType        #104:#105     // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #107 = InterfaceMethodref #90.#106      // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #108 = Utf8               trySplit$mcI$sp
  #109 = Utf8               trySplit$mcI$sp$
  #110 = NameAndType        #109:#105     // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #111 = InterfaceMethodref #90.#110      // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #112 = Utf8               trySplit$mcJ$sp
  #113 = Utf8               trySplit$mcJ$sp$
  #114 = NameAndType        #113:#105     // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #115 = InterfaceMethodref #90.#114      // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #116 = Utf8               spliterator$mcD$sp
  #117 = Utf8               spliterator$mcD$sp$
  #118 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #119 = NameAndType        #117:#118     // spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #120 = InterfaceMethodref #90.#119      // scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #121 = Utf8               spliterator$mcI$sp
  #122 = Utf8               spliterator$mcI$sp$
  #123 = NameAndType        #122:#118     // spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #124 = InterfaceMethodref #90.#123      // scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #125 = Utf8               javaIterator$mcD$sp
  #126 = Utf8               javaIterator$mcD$sp$
  #127 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
  #128 = NameAndType        #126:#127     // javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #129 = InterfaceMethodref #90.#128      // scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #130 = Utf8               javaIterator$mcI$sp
  #131 = Utf8               javaIterator$mcI$sp$
  #132 = NameAndType        #131:#127     // javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #133 = InterfaceMethodref #90.#132      // scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #134 = Utf8               iterator
  #135 = Utf8               ()Lscala/collection/Iterator;
  #136 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #137 = Utf8               iterator$
  #138 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #139 = NameAndType        #137:#138     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #140 = InterfaceMethodref #90.#139      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #141 = Utf8               ()Lscala/Function1;
  #142 = Utf8               ()Lscala/Function1<TT;Ljava/lang/Object;>;
  #143 = NameAndType        #21:#22       // extract:Lscala/Function1;
  #144 = Fieldref           #2.#143       // scala/collection/convert/impl/LongBinaryTreeStepper.extract:Lscala/Function1;
  #145 = Utf8               nextStep
  #146 = Utf8               ()J
  #147 = Utf8               nextStep$mcJ$sp
  #148 = NameAndType        #147:#146     // nextStep$mcJ$sp:()J
  #149 = Methodref          #2.#148       // scala/collection/convert/impl/LongBinaryTreeStepper.nextStep$mcJ$sp:()J
  #150 = Utf8               semiclone
  #151 = Utf8               (ILjava/lang/Object;[Ljava/lang/Object;I)Lscala/collection/convert/impl/LongBinaryTreeStepper;
  #152 = Utf8               (ITT;[Ljava/lang/Object;I)Lscala/collection/convert/impl/LongBinaryTreeStepper<TT;>;
  #153 = Utf8               maxL
  #154 = Utf8               myC
  #155 = Utf8               stk
  #156 = Utf8               ix
  #157 = NameAndType        #29:#141      // left:()Lscala/Function1;
  #158 = Methodref          #2.#157       // scala/collection/convert/impl/LongBinaryTreeStepper.left:()Lscala/Function1;
  #159 = NameAndType        #30:#141      // right:()Lscala/Function1;
  #160 = Methodref          #2.#159       // scala/collection/convert/impl/LongBinaryTreeStepper.right:()Lscala/Function1;
  #161 = NameAndType        #21:#141      // extract:()Lscala/Function1;
  #162 = Methodref          #2.#161       // scala/collection/convert/impl/LongBinaryTreeStepper.extract:()Lscala/Function1;
  #163 = Utf8               [Ljava/lang/Object;
  #164 = Utf8               hasStep
  #165 = Utf8               ()Z
  #166 = NameAndType        #164:#165     // hasStep:()Z
  #167 = Methodref          #2.#166       // scala/collection/convert/impl/LongBinaryTreeStepper.hasStep:()Z
  #168 = Utf8               myCurrent
  #169 = Utf8               ()Ljava/lang/Object;
  #170 = NameAndType        #168:#169     // myCurrent:()Ljava/lang/Object;
  #171 = Methodref          #2.#170       // scala/collection/convert/impl/LongBinaryTreeStepper.myCurrent:()Ljava/lang/Object;
  #172 = Utf8               scala/Function1
  #173 = Class              #172          // scala/Function1
  #174 = Utf8               apply
  #175 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #176 = NameAndType        #174:#175     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #177 = InterfaceMethodref #173.#176     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #178 = Utf8               scala/runtime/BoxesRunTime
  #179 = Class              #178          // scala/runtime/BoxesRunTime
  #180 = Utf8               unboxToLong
  #181 = Utf8               (Ljava/lang/Object;)J
  #182 = NameAndType        #180:#181     // unboxToLong:(Ljava/lang/Object;)J
  #183 = Methodref          #179.#182     // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #184 = Utf8               myCurrent_$eq
  #185 = Utf8               (Ljava/lang/Object;)V
  #186 = NameAndType        #184:#185     // myCurrent_$eq:(Ljava/lang/Object;)V
  #187 = Methodref          #2.#186       // scala/collection/convert/impl/LongBinaryTreeStepper.myCurrent_$eq:(Ljava/lang/Object;)V
  #188 = NameAndType        #27:#96       // maxLength:()I
  #189 = Methodref          #2.#188       // scala/collection/convert/impl/LongBinaryTreeStepper.maxLength:()I
  #190 = Utf8               maxLength_$eq
  #191 = Utf8               (I)V
  #192 = NameAndType        #190:#191     // maxLength_$eq:(I)V
  #193 = Methodref          #2.#192       // scala/collection/convert/impl/LongBinaryTreeStepper.maxLength_$eq:(I)V
  #194 = Utf8               scala/collection/Stepper$
  #195 = Class              #194          // scala/collection/Stepper$
  #196 = Utf8               Lscala/collection/Stepper$;
  #197 = NameAndType        #33:#196      // MODULE$:Lscala/collection/Stepper$;
  #198 = Fieldref           #195.#197     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #199 = Utf8               java/util/NoSuchElementException
  #200 = Class              #199          // java/util/NoSuchElementException
  #201 = Utf8               Empty Stepper
  #202 = String             #201          // Empty Stepper
  #203 = Utf8               (Ljava/lang/String;)V
  #204 = NameAndType        #46:#203      // "<init>":(Ljava/lang/String;)V
  #205 = Methodref          #200.#204     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #206 = Utf8               ans
  #207 = Utf8               J
  #208 = Utf8               trySplit
  #209 = NameAndType        #208:#169     // trySplit:()Ljava/lang/Object;
  #210 = Methodref          #2.#209       // scala/collection/convert/impl/LongBinaryTreeStepper.trySplit:()Ljava/lang/Object;
  #211 = Utf8               ()Lscala/collection/LongStepper;
  #212 = NameAndType        #66:#67       // javaIterator:()Ljava/util/PrimitiveIterator$OfLong;
  #213 = Methodref          #2.#212       // scala/collection/convert/impl/LongBinaryTreeStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfLong;
  #214 = NameAndType        #58:#59       // spliterator:()Ljava/util/Spliterator$OfLong;
  #215 = Methodref          #2.#214       // scala/collection/convert/impl/LongBinaryTreeStepper.spliterator:()Ljava/util/Spliterator$OfLong;
  #216 = Utf8               (ILjava/lang/Object;[Ljava/lang/Object;I)Lscala/collection/convert/impl/BinaryTreeStepperBase;
  #217 = NameAndType        #150:#151     // semiclone:(ILjava/lang/Object;[Ljava/lang/Object;I)Lscala/collection/convert/impl/LongBinaryTreeStepper;
  #218 = Methodref          #2.#217       // scala/collection/convert/impl/LongBinaryTreeStepper.semiclone:(ILjava/lang/Object;[Ljava/lang/Object;I)Lscala/collection/convert/impl/LongBinaryTreeStepper;
  #219 = NameAndType        #145:#146     // nextStep:()J
  #220 = Methodref          #2.#219       // scala/collection/convert/impl/LongBinaryTreeStepper.nextStep:()J
  #221 = Utf8               boxToLong
  #222 = Utf8               (J)Ljava/lang/Long;
  #223 = NameAndType        #221:#222     // boxToLong:(J)Ljava/lang/Long;
  #224 = Methodref          #179.#223     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #225 = Utf8               (ITT;[Ljava/lang/Object;ILscala/Function1<TT;TT;>;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;Ljava/lang/Object;>;)V
  #226 = Utf8               _maxLength
  #227 = Utf8               _myCurrent
  #228 = Utf8               _stack
  #229 = Utf8               _index
  #230 = Utf8               _left
  #231 = Utf8               _right
  #232 = Utf8               (ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;)V
  #233 = NameAndType        #46:#232      // "<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;)V
  #234 = Methodref          #5.#233       // scala/collection/convert/impl/BinaryTreeStepperBase."<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;)V
  #235 = Utf8               Signature
  #236 = Utf8               Code
  #237 = Utf8               LineNumberTable
  #238 = Utf8               LocalVariableTable
  #239 = Utf8               MethodParameters
  #240 = Utf8               StackMapTable
  #241 = Utf8               InnerClasses
  #242 = Utf8               SourceFile
  #243 = Utf8               RuntimeVisibleAnnotations
  #244 = Utf8               ScalaInlineInfo
  #245 = Utf8               ScalaSig
{
  private final scala.Function1<T, java.lang.Object> extract;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Lscala/Function1<TT;Ljava/lang/Object;>;

  public static <T extends java.lang.Object> scala.collection.convert.impl.LongBinaryTreeStepper<T> from(int, T, scala.Function1<T, T>, scala.Function1<T, T>, scala.Function1<T, java.lang.Object>);
    descriptor: (ILjava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Lscala/collection/convert/impl/LongBinaryTreeStepper;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=9, locals=6, args_size=5
         0: getstatic     #36                 // Field scala/collection/convert/impl/LongBinaryTreeStepper$.MODULE$:Lscala/collection/convert/impl/LongBinaryTreeStepper$;
         3: pop
         4: new           #2                  // class scala/collection/convert/impl/LongBinaryTreeStepper
         7: dup
         8: iconst_0
         9: aconst_null
        10: getstatic     #41                 // Field scala/collection/convert/impl/BinaryTreeStepper$.MODULE$:Lscala/collection/convert/impl/BinaryTreeStepper$;
        13: invokevirtual #45                 // Method scala/collection/convert/impl/BinaryTreeStepper$.emptyStack:()[Ljava/lang/Object;
        16: iconst_m1
        17: aload_2
        18: aload_3
        19: aload         4
        21: invokespecial #49                 // Method "<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
        24: astore        5
        26: aload         5
        28: aload_1
        29: iload_0
        30: invokevirtual #53                 // Method initialize:(Ljava/lang/Object;I)V
        33: aload         5
        35: areturn
      LineNumberTable:
        line 242: 4
        line 243: 26
        line 244: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0 maxLength   I
            0      36     1  root   Ljava/lang/Object;
            0      36     2  left   Lscala/Function1;
            0      36     3 right   Lscala/Function1;
            0      36     4 extract   Lscala/Function1;
           26       7     5 from_ans   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #26                          // <T:Ljava/lang/Object;>(ITT;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/collection/convert/impl/LongBinaryTreeStepper<TT;>;
    MethodParameters:
      Name                           Flags
      maxLength                      final
      root                           final
      left                           final
      right                          final
      extract                        final

  public <B extends java.lang.Object> java.util.Spliterator$OfLong spliterator();
    descriptor: ()Ljava/util/Spliterator$OfLong;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/collection/LongStepper.spliterator$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #60                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfLong;

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfLong javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfLong;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod scala/collection/LongStepper.javaIterator$:(Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #68                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfLong;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod scala/collection/LongStepper.spliterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #75                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #86                 // InterfaceMethod scala/collection/LongStepper.javaIterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #82                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #94                 // InterfaceMethod scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
         4: dreturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
         4: ireturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #107                // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #103                         // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #111                // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #103                         // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #115                // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #103                         // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #120                // InterfaceMethod scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #75                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #124                // InterfaceMethod scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #75                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #129                // InterfaceMethod scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #82                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #133                // InterfaceMethod scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #82                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #140                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #136                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.Function1<T, java.lang.Object> extract();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #144                // Field extract:Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 224: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
    Signature: #142                         // ()Lscala/Function1<TT;Ljava/lang/Object;>;

  public long nextStep();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #149                // Method nextStep$mcJ$sp:()J
         4: lreturn
      LineNumberTable:
        line 228: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public scala.collection.convert.impl.LongBinaryTreeStepper<T> semiclone(int, T, java.lang.Object[], int);
    descriptor: (ILjava/lang/Object;[Ljava/lang/Object;I)Lscala/collection/convert/impl/LongBinaryTreeStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=5, args_size=5
         0: new           #2                  // class scala/collection/convert/impl/LongBinaryTreeStepper
         3: dup
         4: iload_1
         5: aload_2
         6: aload_3
         7: iload         4
         9: aload_0
        10: invokevirtual #158                // Method left:()Lscala/Function1;
        13: aload_0
        14: invokevirtual #160                // Method right:()Lscala/Function1;
        17: aload_0
        18: invokevirtual #162                // Method extract:()Lscala/Function1;
        21: invokespecial #49                 // Method "<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
        24: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
            0      25     1  maxL   I
            0      25     2   myC   Ljava/lang/Object;
            0      25     3   stk   [Ljava/lang/Object;
            0      25     4    ix   I
    Signature: #152                         // (ITT;[Ljava/lang/Object;I)Lscala/collection/convert/impl/LongBinaryTreeStepper<TT;>;
    MethodParameters:
      Name                           Flags
      maxL                           final
      myC                            final
      stk                            final
      ix                             final

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #167                // Method hasStep:()Z
         4: ifeq          41
         7: aload_0
         8: invokevirtual #162                // Method extract:()Lscala/Function1;
        11: aload_0
        12: invokevirtual #171                // Method myCurrent:()Ljava/lang/Object;
        15: invokeinterface #177,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        20: invokestatic  #183                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        23: lstore_1
        24: aload_0
        25: aconst_null
        26: invokevirtual #187                // Method myCurrent_$eq:(Ljava/lang/Object;)V
        29: aload_0
        30: aload_0
        31: invokevirtual #189                // Method maxLength:()I
        34: iconst_1
        35: isub
        36: invokevirtual #193                // Method maxLength_$eq:(I)V
        39: lload_1
        40: lreturn
        41: getstatic     #198                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        44: pop
        45: new           #200                // class java/util/NoSuchElementException
        48: dup
        49: ldc           #202                // String Empty Stepper
        51: invokespecial #205                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        54: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 41 /* same */
      LineNumberTable:
        line 229: 0
        line 230: 7
        line 231: 24
        line 232: 29
        line 233: 39
        line 235: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           24      16     1   ans   J
            0      55     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #210                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #90                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public scala.collection.LongStepper trySplit();
    descriptor: ()Lscala/collection/LongStepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #210                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/LongStepper
         7: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #213                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfLong;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #215                // Method spliterator:()Ljava/util/Spliterator$OfLong;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public scala.collection.convert.impl.BinaryTreeStepperBase semiclone(int, java.lang.Object, java.lang.Object[], int);
    descriptor: (ILjava/lang/Object;[Ljava/lang/Object;I)Lscala/collection/convert/impl/BinaryTreeStepperBase;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: iload_1
         2: aload_2
         3: aload_3
         4: iload         4
         6: invokevirtual #218                // Method semiclone:(ILjava/lang/Object;[Ljava/lang/Object;I)Lscala/collection/convert/impl/LongBinaryTreeStepper;
         9: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
            0      10     1  maxL   I
            0      10     2   myC   Ljava/lang/Object;
            0      10     3   stk   [Ljava/lang/Object;
            0      10     4    ix   I
    MethodParameters:
      Name                           Flags
      maxL                           final
      myC                            final
      stk                            final
      ix                             final

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #220                // Method nextStep:()J
         4: invokestatic  #224                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
         7: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;

  public scala.collection.convert.impl.LongBinaryTreeStepper(int, T, java.lang.Object[], int, scala.Function1<T, T>, scala.Function1<T, T>, scala.Function1<T, java.lang.Object>);
    descriptor: (ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=8, args_size=8
         0: aload_0
         1: aload         7
         3: putfield      #144                // Field extract:Lscala/Function1;
         6: aload_0
         7: iload_1
         8: aload_2
         9: aload_3
        10: iload         4
        12: aload         5
        14: aload         6
        16: invokespecial #234                // Method scala/collection/convert/impl/BinaryTreeStepperBase."<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;)V
        19: return
      LineNumberTable:
        line 224: 0
        line 226: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/collection/convert/impl/LongBinaryTreeStepper;
            0      20     1 _maxLength   I
            0      20     2 _myCurrent   Ljava/lang/Object;
            0      20     3 _stack   [Ljava/lang/Object;
            0      20     4 _index   I
            0      20     5 _left   Lscala/Function1;
            0      20     6 _right   Lscala/Function1;
            0      20     7 extract   Lscala/Function1;
    Signature: #225                         // (ITT;[Ljava/lang/Object;ILscala/Function1<TT;TT;>;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      _maxLength                     final
      _myCurrent                     final
      _stack                         final
      _index                         final
      _left                          final
      _right                         final
      extract                        final
}
InnerClasses:
  public static #16= #13 of #15;          // OfLong=class java/util/PrimitiveIterator$OfLong of class java/util/PrimitiveIterator
  public static #16= #18 of #20;          // OfLong=class java/util/Spliterator$OfLong of class java/util/Spliterator
Signature: #3                           // <T:Ljava/lang/Object;>Lscala/collection/convert/impl/BinaryTreeStepperBase<Ljava/lang/Object;TT;Lscala/collection/LongStepper;Lscala/collection/convert/impl/LongBinaryTreeStepper<TT;>;>;Lscala/collection/LongStepper;
SourceFile: "BinaryTreeStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005M4Q\u0001E\t\u0003+eA\u0001\u0002\u000e\u0001\u0003\u0002\u0003\u0006I!\u000e\u0005\tq\u0001\u0011\t\u0011)A\u0005G!A\u0011\b\u0001B\u0001B\u0003%!\b\u0003\u0005>\u0001\t\u0005\t\u0015!\u00036\u0011%q\u0004A!A!\u0002\u0013y$\tC\u0005E\u0001\t\u0005\t\u0015!\u0003@\u000b\"Aq\t\u0001BC\u0002\u0013E\u0001\n\u0003\u0005K\u0001\t\u0005\t\u0015!\u0003J\u0011\u0015Y\u0005\u0001\"\u0001M\u0011\u0015!\u0006\u0001\"\u0001V\u0011\u00151\u0006\u0001\"\u0001X\u000f\u0019\u0001\u0017\u0003#\u0001\u0016C\u001a1\u0001#\u0005E\u0001+\tDQaS\u0007\u0005\u0002\rDQ\u0001Z\u0007\u0005\u0002\u0015\u0014Q\u0003T8oO\nKg.\u0019:z)J,Wm\u0015;faB,\'O\u0003\u0002\u0013\'\u0005!\u0011.\u001c9m\u0015\t!R#A\u0004d_:4XM\u001d;\u000b\u0005Y9\u0012AC2pY2,7\r^5p]*\t\u0001$A\u0003tG\u0006d\u0017-\u0006\u0002\u001bKM\u0019\u0001aG\u0018\u0011\rqirdI\u00184\u001b\u0005\t\u0012B\u0001\u0010\u0012\u0005U\u0011\u0015N\\1ssR\u0013X-Z*uKB\u0004XM\u001d\"bg\u0016\u0004\"\u0001I\u0011\u000e\u0003]I!AI\f\u0003\t1{gn\u001a\t\u0003I\u0015b\u0001\u0001B\u0003\'\u0001\t\u0007\u0001FA\u0001U\u0007\u0001\t\"!\u000b\u0017\u0011\u0005\u0001R\u0013BA\u0016\u0018\u0005\u0011qU\u000f\u001c7\u0011\u0005\u0001j\u0013B\u0001\u0018\u0018\u0005\u0019\te.\u001f*fMB\u0011\u0001\'M\u0007\u0002+%\u0011!\'\u0006\u0002\f\u0019>twm\u0015;faB,\'\u000fE\u0002\u001d\u0001\r\n!bX7bq2+gn\u001a;i!\t\u0001c\'\u0003\u00028/\t\u0019\u0011J\u001c;\u0002\u0015}k\u0017pQ;se\u0016tG/\u0001\u0004`gR\f7m\u001b\t\u0004Amb\u0013B\u0001\u001f\u0018\u0005\u0015\t%O]1z\u0003\u0019y\u0016N\u001c3fq\u0006)q\f\\3giB!\u0001\u0005Q\u0012$\u0013\t\tuCA\u0005Gk:\u001cG/[8oc%\u00111)H\u0001\u0005Y\u00164G/\u0001\u0004`e&<\u0007\u000e^\u0005\u0003\rv\tQA]5hQR\fq!\u001a=ue\u0006\u001cG/F\u0001J!\u0011\u0001\u0003iI\u0010\u0002\u0011\u0015DHO]1di\u0002\na\u0001P5oSRtD\u0003C\u001aN\u001d>\u0003\u0016KU*\t\u000bQJ\u0001\u0019A\u001b\t\u000baJ\u0001\u0019A\u0012\t\u000beJ\u0001\u0019\u0001\u001e\t\u000buJ\u0001\u0019A\u001b\t\u000byJ\u0001\u0019A \t\u000b\u0011K\u0001\u0019A \t\u000b\u001dK\u0001\u0019A%\u0002\u00119,\u0007\u0010^*uKB$\u0012aH\u0001\ng\u0016l\u0017n\u00197p]\u0016$Ra\r-[9zCQ!W\u0006A\u0002U\nA!\\1y\u0019\")1l\u0003a\u0001G\u0005\u0019Q._\"\t\u000bu[\u0001\u0019\u0001\u001e\u0002\u0007M$8\u000eC\u0003`\u0017\u0001\u0007Q\'\u0001\u0002jq\u0006)Bj\u001c8h\u0005&t\u0017M]=Ue\u0016,7\u000b^3qa\u0016\u0014\bC\u0001\u000f\u000e\'\tiA\u0006F\u0001b\u0003\u00111\'o\\7\u0016\u0005\u0019LGCB4kY:\u0004\u0018\u000fE\u0002\u001d\u0001!\u0004\"\u0001J5\u0005\u000b\u0019z!\u0019\u0001\u0015\t\u000b-|\u0001\u0019A\u001b\u0002\u00135\f\u0007\u0010T3oORD\u0007\"B7\u0010\u0001\u0004A\u0017\u0001\u0002:p_RDQaQ\bA\u0002=\u0004B\u0001\t!iQ\")ai\u0004a\u0001_\")qi\u0004a\u0001eB!\u0001\u0005\u00115 \u0001"
    )
  ScalaInlineInfo: length = 0x81 (unknown attribute)
   01 01 00 19 00 2E 00 2F 01 00 15 00 8D 01 00 86
   00 87 01 00 42 00 51 01 00 42 00 43 01 00 7D 00
   51 01 00 82 00 51 01 00 50 00 51 01 00 91 00 92
   01 00 91 00 A9 01 00 57 00 58 01 00 5F 00 60 01
   00 93 00 92 01 00 96 00 D8 01 00 96 00 97 01 00
   3A 00 3B 01 00 3A 00 4A 01 00 74 00 4A 01 00 79
   00 4A 01 00 49 00 4A 01 00 D0 00 D3 01 00 D0 00
   66 01 00 65 00 66 01 00 6C 00 66 01 00 70 00 66
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
