Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/sun/jna/NativeMappedConverter.class
  Last modified May 29, 2022; size 3273 bytes
  SHA-256 checksum 8dd9ef7bb1ad6ab6ec5d484c83f041cd2218546fa433cd7539ba814298e025ba
  Compiled from "NativeMappedConverter.java"
public class com.sun.jna.NativeMappedConverter implements com.sun.jna.TypeConverter
  minor version: 0
  major version: 50
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #5                          // com/sun/jna/NativeMappedConverter
  super_class: #34                        // java/lang/Object
  interfaces: 1, fields: 4, methods: 7, attributes: 1
Constant pool:
    #1 = Fieldref           #5.#87        // com/sun/jna/NativeMappedConverter.converters:Ljava/util/Map;
    #2 = InterfaceMethodref #88.#89       // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
    #3 = Class              #90           // java/lang/ref/Reference
    #4 = Methodref          #3.#91        // java/lang/ref/Reference.get:()Ljava/lang/Object;
    #5 = Class              #92           // com/sun/jna/NativeMappedConverter
    #6 = Methodref          #5.#93        // com/sun/jna/NativeMappedConverter."<init>":(Ljava/lang/Class;)V
    #7 = Class              #94           // java/lang/ref/SoftReference
    #8 = Methodref          #7.#95        // java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
    #9 = InterfaceMethodref #88.#96       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #10 = Methodref          #34.#97       // java/lang/Object."<init>":()V
   #11 = Class              #98           // com/sun/jna/NativeMapped
   #12 = Methodref          #99.#100      // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
   #13 = Class              #101          // java/lang/IllegalArgumentException
   #14 = Class              #102          // java/lang/StringBuilder
   #15 = Methodref          #14.#97       // java/lang/StringBuilder."<init>":()V
   #16 = String             #103          // Type must derive from
   #17 = Methodref          #14.#104      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #18 = Methodref          #14.#105      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #19 = Methodref          #14.#106      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #20 = Methodref          #13.#107      // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #21 = Fieldref           #5.#108       // com/sun/jna/NativeMappedConverter.type:Ljava/lang/Class;
   #22 = Methodref          #5.#109       // com/sun/jna/NativeMappedConverter.defaultValue:()Lcom/sun/jna/NativeMapped;
   #23 = Fieldref           #5.#110       // com/sun/jna/NativeMappedConverter.instance:Lcom/sun/jna/NativeMapped;
   #24 = InterfaceMethodref #11.#111      // com/sun/jna/NativeMapped.nativeType:()Ljava/lang/Class;
   #25 = Fieldref           #5.#112       // com/sun/jna/NativeMappedConverter.nativeType:Ljava/lang/Class;
   #26 = Methodref          #99.#113      // java/lang/Class.isEnum:()Z
   #27 = Methodref          #99.#114      // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
   #28 = Methodref          #115.#116     // com/sun/jna/Klass.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
   #29 = InterfaceMethodref #11.#117      // com/sun/jna/NativeMapped.fromNative:(Ljava/lang/Object;Lcom/sun/jna/FromNativeContext;)Ljava/lang/Object;
   #30 = Class              #118          // com/sun/jna/Pointer
   #31 = InterfaceMethodref #11.#119      // com/sun/jna/NativeMapped.toNative:()Ljava/lang/Object;
   #32 = Class              #120          // java/util/WeakHashMap
   #33 = Methodref          #32.#97       // java/util/WeakHashMap."<init>":()V
   #34 = Class              #121          // java/lang/Object
   #35 = Class              #122          // com/sun/jna/TypeConverter
   #36 = Utf8               converters
   #37 = Utf8               Ljava/util/Map;
   #38 = Utf8               Signature
   #39 = Utf8               Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/ref/Reference<Lcom/sun/jna/NativeMappedConverter;>;>;
   #40 = Utf8               type
   #41 = Utf8               Ljava/lang/Class;
   #42 = Utf8               Ljava/lang/Class<*>;
   #43 = Utf8               nativeType
   #44 = Utf8               instance
   #45 = Utf8               Lcom/sun/jna/NativeMapped;
   #46 = Utf8               getInstance
   #47 = Utf8               (Ljava/lang/Class;)Lcom/sun/jna/NativeMappedConverter;
   #48 = Utf8               Code
   #49 = Utf8               LineNumberTable
   #50 = Utf8               LocalVariableTable
   #51 = Utf8               r
   #52 = Utf8               Ljava/lang/ref/Reference;
   #53 = Utf8               nmc
   #54 = Utf8               Lcom/sun/jna/NativeMappedConverter;
   #55 = Utf8               cls
   #56 = Utf8               LocalVariableTypeTable
   #57 = Utf8               Ljava/lang/ref/Reference<Lcom/sun/jna/NativeMappedConverter;>;
   #58 = Utf8               StackMapTable
   #59 = Class              #121          // java/lang/Object
   #60 = Class              #90           // java/lang/ref/Reference
   #61 = Class              #92           // com/sun/jna/NativeMappedConverter
   #62 = Class              #123          // java/lang/Class
   #63 = Class              #124          // java/lang/Throwable
   #64 = Utf8               (Ljava/lang/Class<*>;)Lcom/sun/jna/NativeMappedConverter;
   #65 = Utf8               <init>
   #66 = Utf8               (Ljava/lang/Class;)V
   #67 = Utf8               this
   #68 = Utf8               (Ljava/lang/Class<*>;)V
   #69 = Utf8               defaultValue
   #70 = Utf8               ()Lcom/sun/jna/NativeMapped;
   #71 = Utf8               fromNative
   #72 = Utf8               (Ljava/lang/Object;Lcom/sun/jna/FromNativeContext;)Ljava/lang/Object;
   #73 = Utf8               nativeValue
   #74 = Utf8               Ljava/lang/Object;
   #75 = Utf8               context
   #76 = Utf8               Lcom/sun/jna/FromNativeContext;
   #77 = Utf8               ()Ljava/lang/Class;
   #78 = Utf8               ()Ljava/lang/Class<*>;
   #79 = Utf8               toNative
   #80 = Utf8               (Ljava/lang/Object;Lcom/sun/jna/ToNativeContext;)Ljava/lang/Object;
   #81 = Utf8               value
   #82 = Utf8               Lcom/sun/jna/ToNativeContext;
   #83 = Utf8               <clinit>
   #84 = Utf8               ()V
   #85 = Utf8               SourceFile
   #86 = Utf8               NativeMappedConverter.java
   #87 = NameAndType        #36:#37       // converters:Ljava/util/Map;
   #88 = Class              #125          // java/util/Map
   #89 = NameAndType        #126:#127     // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #90 = Utf8               java/lang/ref/Reference
   #91 = NameAndType        #126:#128     // get:()Ljava/lang/Object;
   #92 = Utf8               com/sun/jna/NativeMappedConverter
   #93 = NameAndType        #65:#66       // "<init>":(Ljava/lang/Class;)V
   #94 = Utf8               java/lang/ref/SoftReference
   #95 = NameAndType        #65:#129      // "<init>":(Ljava/lang/Object;)V
   #96 = NameAndType        #130:#131     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #97 = NameAndType        #65:#84       // "<init>":()V
   #98 = Utf8               com/sun/jna/NativeMapped
   #99 = Class              #123          // java/lang/Class
  #100 = NameAndType        #132:#133     // isAssignableFrom:(Ljava/lang/Class;)Z
  #101 = Utf8               java/lang/IllegalArgumentException
  #102 = Utf8               java/lang/StringBuilder
  #103 = Utf8               Type must derive from
  #104 = NameAndType        #134:#135     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #105 = NameAndType        #134:#136     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #106 = NameAndType        #137:#138     // toString:()Ljava/lang/String;
  #107 = NameAndType        #65:#139      // "<init>":(Ljava/lang/String;)V
  #108 = NameAndType        #40:#41       // type:Ljava/lang/Class;
  #109 = NameAndType        #69:#70       // defaultValue:()Lcom/sun/jna/NativeMapped;
  #110 = NameAndType        #44:#45       // instance:Lcom/sun/jna/NativeMapped;
  #111 = NameAndType        #43:#77       // nativeType:()Ljava/lang/Class;
  #112 = NameAndType        #43:#41       // nativeType:Ljava/lang/Class;
  #113 = NameAndType        #140:#141     // isEnum:()Z
  #114 = NameAndType        #142:#143     // getEnumConstants:()[Ljava/lang/Object;
  #115 = Class              #144          // com/sun/jna/Klass
  #116 = NameAndType        #145:#146     // newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
  #117 = NameAndType        #71:#72       // fromNative:(Ljava/lang/Object;Lcom/sun/jna/FromNativeContext;)Ljava/lang/Object;
  #118 = Utf8               com/sun/jna/Pointer
  #119 = NameAndType        #79:#128      // toNative:()Ljava/lang/Object;
  #120 = Utf8               java/util/WeakHashMap
  #121 = Utf8               java/lang/Object
  #122 = Utf8               com/sun/jna/TypeConverter
  #123 = Utf8               java/lang/Class
  #124 = Utf8               java/lang/Throwable
  #125 = Utf8               java/util/Map
  #126 = Utf8               get
  #127 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #128 = Utf8               ()Ljava/lang/Object;
  #129 = Utf8               (Ljava/lang/Object;)V
  #130 = Utf8               put
  #131 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #132 = Utf8               isAssignableFrom
  #133 = Utf8               (Ljava/lang/Class;)Z
  #134 = Utf8               append
  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #136 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #137 = Utf8               toString
  #138 = Utf8               ()Ljava/lang/String;
  #139 = Utf8               (Ljava/lang/String;)V
  #140 = Utf8               isEnum
  #141 = Utf8               ()Z
  #142 = Utf8               getEnumConstants
  #143 = Utf8               ()[Ljava/lang/Object;
  #144 = Utf8               com/sun/jna/Klass
  #145 = Utf8               newInstance
  #146 = Utf8               (Ljava/lang/Class;)Ljava/lang/Object;
{
  private static final java.util.Map<java.lang.Class<?>, java.lang.ref.Reference<com.sun.jna.NativeMappedConverter>> converters;
    descriptor: Ljava/util/Map;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #39                          // Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/ref/Reference<Lcom/sun/jna/NativeMappedConverter;>;>;

  private final java.lang.Class<?> type;
    descriptor: Ljava/lang/Class;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #42                          // Ljava/lang/Class<*>;

  private final java.lang.Class<?> nativeType;
    descriptor: Ljava/lang/Class;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #42                          // Ljava/lang/Class<*>;

  private final com.sun.jna.NativeMapped instance;
    descriptor: Lcom/sun/jna/NativeMapped;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static com.sun.jna.NativeMappedConverter getInstance(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Lcom/sun/jna/NativeMappedConverter;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=5, args_size=1
         0: getstatic     #1                  // Field converters:Ljava/util/Map;
         3: dup
         4: astore_1
         5: monitorenter
         6: getstatic     #1                  // Field converters:Ljava/util/Map;
         9: aload_0
        10: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        15: checkcast     #3                  // class java/lang/ref/Reference
        18: astore_2
        19: aload_2
        20: ifnull        33
        23: aload_2
        24: invokevirtual #4                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
        27: checkcast     #5                  // class com/sun/jna/NativeMappedConverter
        30: goto          34
        33: aconst_null
        34: astore_3
        35: aload_3
        36: ifnonnull     66
        39: new           #5                  // class com/sun/jna/NativeMappedConverter
        42: dup
        43: aload_0
        44: invokespecial #6                  // Method "<init>":(Ljava/lang/Class;)V
        47: astore_3
        48: getstatic     #1                  // Field converters:Ljava/util/Map;
        51: aload_0
        52: new           #7                  // class java/lang/ref/SoftReference
        55: dup
        56: aload_3
        57: invokespecial #8                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
        60: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        65: pop
        66: aload_3
        67: aload_1
        68: monitorexit
        69: areturn
        70: astore        4
        72: aload_1
        73: monitorexit
        74: aload         4
        76: athrow
      Exception table:
         from    to  target type
             6    69    70   any
            70    74    70   any
      LineNumberTable:
        line 41: 0
        line 42: 6
        line 43: 19
        line 44: 35
        line 45: 39
        line 46: 48
        line 48: 66
        line 49: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      51     2     r   Ljava/lang/ref/Reference;
           35      35     3   nmc   Lcom/sun/jna/NativeMappedConverter;
            0      77     0   cls   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           19      51     2     r   Ljava/lang/ref/Reference<Lcom/sun/jna/NativeMappedConverter;>;
            0      77     0   cls   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ class java/lang/Object, class java/lang/ref/Reference ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class com/sun/jna/NativeMappedConverter ]
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class com/sun/jna/NativeMappedConverter ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class java/lang/Class, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
    Signature: #64                          // (Ljava/lang/Class<*>;)Lcom/sun/jna/NativeMappedConverter;

  public com.sun.jna.NativeMappedConverter(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #10                 // Method java/lang/Object."<init>":()V
         4: ldc           #11                 // class com/sun/jna/NativeMapped
         6: aload_1
         7: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
        10: ifne          41
        13: new           #13                 // class java/lang/IllegalArgumentException
        16: dup
        17: new           #14                 // class java/lang/StringBuilder
        20: dup
        21: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
        24: ldc           #16                 // String Type must derive from
        26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: ldc           #11                 // class com/sun/jna/NativeMapped
        31: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        34: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        37: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: aload_0
        42: aload_1
        43: putfield      #21                 // Field type:Ljava/lang/Class;
        46: aload_0
        47: aload_0
        48: invokevirtual #22                 // Method defaultValue:()Lcom/sun/jna/NativeMapped;
        51: putfield      #23                 // Field instance:Lcom/sun/jna/NativeMapped;
        54: aload_0
        55: aload_0
        56: getfield      #23                 // Field instance:Lcom/sun/jna/NativeMapped;
        59: invokeinterface #24,  1           // InterfaceMethod com/sun/jna/NativeMapped.nativeType:()Ljava/lang/Class;
        64: putfield      #25                 // Field nativeType:Ljava/lang/Class;
        67: return
      LineNumberTable:
        line 52: 0
        line 53: 4
        line 54: 13
        line 55: 41
        line 56: 46
        line 57: 54
        line 58: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lcom/sun/jna/NativeMappedConverter;
            0      68     1  type   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      68     1  type   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class com/sun/jna/NativeMappedConverter, class java/lang/Class ]
          stack = []
    Signature: #68                          // (Ljava/lang/Class<*>;)V

  public com.sun.jna.NativeMapped defaultValue();
    descriptor: ()Lcom/sun/jna/NativeMapped;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #21                 // Field type:Ljava/lang/Class;
         4: invokevirtual #26                 // Method java/lang/Class.isEnum:()Z
         7: ifeq          23
        10: aload_0
        11: getfield      #21                 // Field type:Ljava/lang/Class;
        14: invokevirtual #27                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
        17: iconst_0
        18: aaload
        19: checkcast     #11                 // class com/sun/jna/NativeMapped
        22: areturn
        23: aload_0
        24: getfield      #21                 // Field type:Ljava/lang/Class;
        27: invokestatic  #28                 // Method com/sun/jna/Klass.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
        30: checkcast     #11                 // class com/sun/jna/NativeMapped
        33: areturn
      LineNumberTable:
        line 61: 0
        line 62: 10
        line 65: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lcom/sun/jna/NativeMappedConverter;
      StackMapTable: number_of_entries = 1
        frame_type = 23 /* same */

  public java.lang.Object fromNative(java.lang.Object, com.sun.jna.FromNativeContext);
    descriptor: (Ljava/lang/Object;Lcom/sun/jna/FromNativeContext;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #23                 // Field instance:Lcom/sun/jna/NativeMapped;
         4: aload_1
         5: aload_2
         6: invokeinterface #29,  3           // InterfaceMethod com/sun/jna/NativeMapped.fromNative:(Ljava/lang/Object;Lcom/sun/jna/FromNativeContext;)Ljava/lang/Object;
        11: areturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/sun/jna/NativeMappedConverter;
            0      12     1 nativeValue   Ljava/lang/Object;
            0      12     2 context   Lcom/sun/jna/FromNativeContext;

  public java.lang.Class<?> nativeType();
    descriptor: ()Ljava/lang/Class;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #25                 // Field nativeType:Ljava/lang/Class;
         4: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/NativeMappedConverter;
    Signature: #78                          // ()Ljava/lang/Class<*>;

  public java.lang.Object toNative(java.lang.Object, com.sun.jna.ToNativeContext);
    descriptor: (Ljava/lang/Object;Lcom/sun/jna/ToNativeContext;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     23
         4: ldc           #30                 // class com/sun/jna/Pointer
         6: aload_0
         7: getfield      #25                 // Field nativeType:Ljava/lang/Class;
        10: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
        13: ifeq          18
        16: aconst_null
        17: areturn
        18: aload_0
        19: invokevirtual #22                 // Method defaultValue:()Lcom/sun/jna/NativeMapped;
        22: astore_1
        23: aload_1
        24: checkcast     #11                 // class com/sun/jna/NativeMapped
        27: invokeinterface #31,  1           // InterfaceMethod com/sun/jna/NativeMapped.toNative:()Ljava/lang/Object;
        32: areturn
      LineNumberTable:
        line 80: 0
        line 81: 4
        line 82: 16
        line 84: 18
        line 86: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lcom/sun/jna/NativeMappedConverter;
            0      33     1 value   Ljava/lang/Object;
            0      33     2 context   Lcom/sun/jna/ToNativeContext;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 4 /* same */

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #32                 // class java/util/WeakHashMap
         3: dup
         4: invokespecial #33                 // Method java/util/WeakHashMap."<init>":()V
         7: putstatic     #1                  // Field converters:Ljava/util/Map;
        10: return
      LineNumberTable:
        line 34: 0
}
SourceFile: "NativeMappedConverter.java"
