Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/filefilter/SizeFileFilter.class
  Last modified May 29, 2022; size 1473 bytes
  SHA-256 checksum ef4a471d719cb2cd92fc0b7cbce2262fdc03bd56051e6b2969267ff472dbdd42
  Compiled from "SizeFileFilter.java"
public class org.apache.commons.io.filefilter.SizeFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #19                         // org/apache/commons/io/filefilter/SizeFileFilter
  super_class: #20                        // org/apache/commons/io/filefilter/AbstractFileFilter
  interfaces: 1, fields: 3, methods: 4, attributes: 1
Constant pool:
   #1 = Methodref          #19.#52        // org/apache/commons/io/filefilter/SizeFileFilter."<init>":(JZ)V
   #2 = Methodref          #20.#53        // org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
   #3 = Class              #54            // java/lang/IllegalArgumentException
   #4 = String             #55            // The size must be non-negative
   #5 = Methodref          #3.#56         // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #6 = Fieldref           #19.#57        // org/apache/commons/io/filefilter/SizeFileFilter.size:J
   #7 = Fieldref           #19.#58        // org/apache/commons/io/filefilter/SizeFileFilter.acceptLarger:Z
   #8 = Methodref          #59.#60        // java/io/File.length:()J
   #9 = String             #61            // >=
  #10 = String             #62            // <
  #11 = Class              #63            // java/lang/StringBuilder
  #12 = Methodref          #11.#53        // java/lang/StringBuilder."<init>":()V
  #13 = Methodref          #20.#64        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;
  #14 = Methodref          #11.#65        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #15 = String             #66            // (
  #16 = Methodref          #11.#67        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
  #17 = String             #68            // )
  #18 = Methodref          #11.#64        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #19 = Class              #69            // org/apache/commons/io/filefilter/SizeFileFilter
  #20 = Class              #70            // org/apache/commons/io/filefilter/AbstractFileFilter
  #21 = Class              #71            // java/io/Serializable
  #22 = Utf8               serialVersionUID
  #23 = Utf8               J
  #24 = Utf8               ConstantValue
  #25 = Long               7388077430788600069l
  #27 = Utf8               size
  #28 = Utf8               acceptLarger
  #29 = Utf8               Z
  #30 = Utf8               <init>
  #31 = Utf8               (J)V
  #32 = Utf8               Code
  #33 = Utf8               LineNumberTable
  #34 = Utf8               LocalVariableTable
  #35 = Utf8               this
  #36 = Utf8               Lorg/apache/commons/io/filefilter/SizeFileFilter;
  #37 = Utf8               (JZ)V
  #38 = Utf8               StackMapTable
  #39 = Class              #69            // org/apache/commons/io/filefilter/SizeFileFilter
  #40 = Utf8               accept
  #41 = Utf8               (Ljava/io/File;)Z
  #42 = Utf8               file
  #43 = Utf8               Ljava/io/File;
  #44 = Class              #72            // java/io/File
  #45 = Utf8               toString
  #46 = Utf8               ()Ljava/lang/String;
  #47 = Utf8               condition
  #48 = Utf8               Ljava/lang/String;
  #49 = Class              #73            // java/lang/String
  #50 = Utf8               SourceFile
  #51 = Utf8               SizeFileFilter.java
  #52 = NameAndType        #30:#37        // "<init>":(JZ)V
  #53 = NameAndType        #30:#74        // "<init>":()V
  #54 = Utf8               java/lang/IllegalArgumentException
  #55 = Utf8               The size must be non-negative
  #56 = NameAndType        #30:#75        // "<init>":(Ljava/lang/String;)V
  #57 = NameAndType        #27:#23        // size:J
  #58 = NameAndType        #28:#29        // acceptLarger:Z
  #59 = Class              #72            // java/io/File
  #60 = NameAndType        #76:#77        // length:()J
  #61 = Utf8               >=
  #62 = Utf8               <
  #63 = Utf8               java/lang/StringBuilder
  #64 = NameAndType        #45:#46        // toString:()Ljava/lang/String;
  #65 = NameAndType        #78:#79        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #66 = Utf8               (
  #67 = NameAndType        #78:#80        // append:(J)Ljava/lang/StringBuilder;
  #68 = Utf8               )
  #69 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter
  #70 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter
  #71 = Utf8               java/io/Serializable
  #72 = Utf8               java/io/File
  #73 = Utf8               java/lang/String
  #74 = Utf8               ()V
  #75 = Utf8               (Ljava/lang/String;)V
  #76 = Utf8               length
  #77 = Utf8               ()J
  #78 = Utf8               append
  #79 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #80 = Utf8               (J)Ljava/lang/StringBuilder;
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 7388077430788600069l

  private final long size;
    descriptor: J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean acceptLarger;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.filefilter.SizeFileFilter(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: iconst_1
         3: invokespecial #1                  // Method "<init>":(JZ)V
         6: return
      LineNumberTable:
        line 60: 0
        line 61: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/apache/commons/io/filefilter/SizeFileFilter;
            0       7     1  size   J

  public org.apache.commons.io.filefilter.SizeFileFilter(long, boolean);
    descriptor: (JZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: invokespecial #2                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
         4: lload_1
         5: lconst_0
         6: lcmp
         7: ifge          20
        10: new           #3                  // class java/lang/IllegalArgumentException
        13: dup
        14: ldc           #4                  // String The size must be non-negative
        16: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: lload_1
        22: putfield      #6                  // Field size:J
        25: aload_0
        26: iload_3
        27: putfield      #7                  // Field acceptLarger:Z
        30: return
      LineNumberTable:
        line 72: 0
        line 73: 4
        line 74: 10
        line 76: 20
        line 77: 25
        line 78: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/apache/commons/io/filefilter/SizeFileFilter;
            0      31     1  size   J
            0      31     3 acceptLarger   Z
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class org/apache/commons/io/filefilter/SizeFileFilter, long, int ]
          stack = []

  public boolean accept(java.io.File);
    descriptor: (Ljava/io/File;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: getfield      #7                  // Field acceptLarger:Z
         4: aload_1
         5: invokevirtual #8                  // Method java/io/File.length:()J
         8: aload_0
         9: getfield      #6                  // Field size:J
        12: lcmp
        13: ifge          20
        16: iconst_1
        17: goto          21
        20: iconst_0
        21: if_icmpeq     28
        24: iconst_1
        25: goto          29
        28: iconst_0
        29: ireturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/apache/commons/io/filefilter/SizeFileFilter;
            0      30     1  file   Ljava/io/File;
      StackMapTable: number_of_entries = 4
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/io/filefilter/SizeFileFilter, class java/io/File ]
          stack = [ int, int ]
        frame_type = 6 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: getfield      #7                  // Field acceptLarger:Z
         4: ifeq          12
         7: ldc           #9                  // String >=
         9: goto          14
        12: ldc           #10                 // String <
        14: astore_1
        15: new           #11                 // class java/lang/StringBuilder
        18: dup
        19: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
        22: aload_0
        23: invokespecial #13                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;
        26: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: ldc           #15                 // String (
        31: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: aload_1
        35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: aload_0
        39: getfield      #6                  // Field size:J
        42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        45: ldc           #17                 // String )
        47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        53: areturn
      LineNumberTable:
        line 104: 0
        line 105: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lorg/apache/commons/io/filefilter/SizeFileFilter;
           15      39     1 condition   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
}
SourceFile: "SizeFileFilter.java"
