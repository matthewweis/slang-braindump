Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/runtime/RichChar.class
  Last modified May 29, 2022; size 19266 bytes
  SHA-256 checksum 811aef38d2e21bff52c1f1369b0644c891ccbf0ac891ef9d9ddcf2bd06c513bb
  Compiled from "RichChar.scala"
public final class scala.runtime.RichChar extends java.lang.Object implements scala.runtime.IntegralProxy<java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/runtime/RichChar
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 115, attributes: 6
Constant pool:
    #1 = Utf8               scala/runtime/RichChar
    #2 = Class              #1            // scala/runtime/RichChar
    #3 = Utf8               Ljava/lang/Object;Lscala/runtime/IntegralProxy<Ljava/lang/Object;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/runtime/IntegralProxy
    #7 = Class              #6            // scala/runtime/IntegralProxy
    #8 = Utf8               RichChar.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\t\u001df\u0001B*U\u0005eC\u0001\"\u001a\u0001\u0003\u0006\u0004%\tA\u001a\u0005\tO\u0002\u0011\t\u0011)A\u0005E\")\u0001\u000e\u0001C\u0001S\")A\u000e\u0001C\t[\")a\u0010\u0001C\t\u007f\"9\u0011q\u0002\u0001\u0005B\u0005E\u0001bBA\r\u0001\u0011\u0005\u00131\u0004\u0005\b\u0003G\u0001A\u0011IA\u0013\u0011\u001d\ti\u0003\u0001C!\u0003_Aq!a\u000e\u0001\t\u0003\nI\u0004C\u0004\u0002B\u0001!\t%a\u0011\t\u000f\u0005-\u0003\u0001\"\u0011\u0002N!1\u0011Q\u000b\u0001\u0005B\u0019Dq!a\u0016\u0001\t\u0003\nI\u0006C\u0004\u0002`\u0001!\t%!\u0019\t\u000f\u0005\u0015\u0004\u0001\"\u0001\u00020!9\u0011q\r\u0001\u0005\u0002\u00055\u0003bBA5\u0001\u0011\u0005\u0011Q\n\u0005\b\u0003W\u0002A\u0011AA\'\u0011\u001d\ti\u0007\u0001C\u0001\u0003\u001bBq!a\u001c\u0001\t\u0003\ti\u0005C\u0004\u0002r\u0001!\t!!\u0014\t\u000f\u0005M\u0004\u0001\"\u0001\u0002N!9\u0011Q\u000f\u0001\u0005\u0002\u00055\u0003bBA<\u0001\u0011\u0005\u0011Q\n\u0005\b\u0003s\u0002A\u0011AA\'\u0011\u001d\tY\b\u0001C\u0001\u0003\u001bBq!! \u0001\t\u0003\ti\u0005C\u0004\u0002\u0000\u0001!\t!!\u0014\t\u000f\u0005\u0005\u0005\u0001\"\u0001\u0002N!9\u00111\u0011\u0001\u0005\u0002\u00055\u0003bBAC\u0001\u0011\u0005\u0011Q\n\u0005\u0007\u0003\u000f\u0003A\u0011\u00014\t\r\u0005%\u0005\u0001\"\u0001g\u0011\u0019\tY\t\u0001C\u0001M\"9\u0011Q\u0012\u0001\u0005\u0002\u0005=\u0002bBAH\u0001\u0011\u0005\u0011q\u0006\u0005\b\u0003#\u0003A\u0011AA\u001d\u0011\u0019\t\u0019\n\u0001C\u0001M\"I\u0011Q\u0013\u0001\u0002\u0002\u0013\u0005\u0013q\u0013\u0005\n\u00033\u0003\u0011\u0011!C!\u00037;\u0011\"a*U\u0003\u0003E\t!!+\u0007\u0011M#\u0016\u0011!E\u0001\u0003WCa\u0001[\u0016\u0005\u0002\u0005M\u0006bBA[W\u0011\u0015\u0011q\u0017\u0005\b\u0003{[CQAA`\u0011\u001d\t\u0019m\u000bC\u0003\u0003\u000bDq!!3,\t\u000b\tY\rC\u0004\u0002P.\")!!5\t\u000f\u0005U7\u0006\"\u0002\u0002X\"9\u00111\\\u0016\u0005\u0006\u0005u\u0007bBAqW\u0011\u0015\u00111\u001d\u0005\b\u0003O\\CQAAu\u0011\u001d\tio\u000bC\u0003\u0003_Dq!a=,\t\u000b\t)\u0010C\u0004\u0002~.\")!a@\t\u000f\t\u001d1\u0006\"\u0002\u0003\n!9!QB\u0016\u0005\u0006\t=\u0001b\u0002B\nW\u0011\u0015!Q\u0003\u0005\b\u00053YCQ\u0001B\u000e\u0011\u001d\u0011yb\u000bC\u0003\u0005CAqA!\n,\t\u000b\u00119\u0003C\u0004\u0003,-\")A!\f\t\u000f\tE2\u0006\"\u0002\u00034!9!qG\u0016\u0005\u0006\te\u0002b\u0002B\u001fW\u0011\u0015!q\b\u0005\b\u0005\u0007ZCQ\u0001B#\u0011\u001d\u0011Ie\u000bC\u0003\u0005\u0017BqAa\u0014,\t\u000b\u0011\t\u0006C\u0004\u0003V-\")Aa\u0016\t\u000f\tm3\u0006\"\u0002\u0003^!9!\u0011M\u0016\u0005\u0006\t\r\u0004b\u0002B4W\u0011\u0015!\u0011\u000e\u0005\b\u0005[ZCQ\u0001B8\u0011\u001d\u0011\u0019h\u000bC\u0003\u0005kBqA!\u001f,\t\u000b\u0011Y\bC\u0004\u0003\u0000-\")A!!\t\u000f\t\u00155\u0006\"\u0002\u0003\b\"9!1R\u0016\u0005\u0006\t5\u0005b\u0002BIW\u0011\u0015!1\u0013\u0005\n\u0005/[\u0013\u0011!C\u0003\u00053C\u0011B!(,\u0003\u0003%)Aa(\u0003\u0011IK7\r[\"iCJT!!\u0016,\u0002\u000fI,h\u000e^5nK*\tq+A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001Qf\f\u0005\u0002\\96\ta+\u0003\u0002^-\n1\u0011I\\=WC2\u00042a\u00181c\u001b\u0005!\u0016BA1U\u00055Ie\u000e^3he\u0006d\u0007K]8ysB\u00111lY\u0005\u0003IZ\u0013Aa\u00115be\u0006!1/\u001a7g+\u0005\u0011\u0017!B:fY\u001a\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002kWB\u0011q\f\u0001\u0005\u0006K\u000e\u0001\rAY\u0001\u0004]VlW#\u00018\u0011\u0005=\\hB\u00019y\u001d\t\thO\u0004\u0002sk6\t1O\u0003\u0002u1\u00061AH]8pizJ\u0011aV\u0005\u0003oZ\u000bA!\\1uQ&\u0011\u0011P_\u0001\b\u001dVlWM]5d\u0015\t9hK\u0003\u0002}{\u0006q1\t[1s\u0013NLe\u000e^3he\u0006d\'BA={\u0003\ry\'\u000fZ\u000b\u0003\u0003\u0003\u0001B!a\u0001\u0002\n9\u0019\u0001/!\u0002\n\u0007\u0005\u001d!0\u0001\u0005Pe\u0012,\'/\u001b8h\u0015\u0011\tY!!\u0004\u0002\t\rC\u0017M\u001d\u0006\u0004\u0003\u000fQ\u0018a\u00033pk\ndWMV1mk\u0016,\"!a\u0005\u0011\u0007m\u000b)\"C\u0002\u0002\u0018Y\u0013a\u0001R8vE2,\u0017A\u00034m_\u0006$h+\u00197vKV\u0011\u0011Q\u0004\t\u00047\u0006}\u0011bAA\u0011-\n)a\t\\8bi\u0006IAn\u001c8h-\u0006dW/Z\u000b\u0003\u0003O\u00012aWA\u0015\u0013\r\tYC\u0016\u0002\u0005\u0019>tw-\u0001\u0005j]R4\u0016\r\\;f+\t\t\t\u0004E\u0002\\\u0003gI1!!\u000eW\u0005\rIe\u000e^\u0001\nEf$XMV1mk\u0016,\"!a\u000f\u0011\u0007m\u000bi$C\u0002\u0002@Y\u0013AAQ=uK\u0006Q1\u000f[8siZ\u000bG.^3\u0016\u0005\u0005\u0015\u0003cA.\u0002H%\u0019\u0011\u0011\n,\u0003\u000bMCwN\u001d;\u0002\u0017%\u001ch+\u00197jI\u000eC\u0017M]\u000b\u0003\u0003\u001f\u00022aWA)\u0013\r\t\u0019F\u0016\u0002\b\u0005>|G.Z1o\u0003\r\t\'m]\u0001\u0004[\u0006DHc\u00012\u0002\\!1\u0011Q\f\bA\u0002\t\fA\u0001\u001e5bi\u0006\u0019Q.\u001b8\u0015\u0007\t\f\u0019\u0007\u0003\u0004\u0002^=\u0001\rAY\u0001\bCN$\u0015nZ5u\u0003%I7oQ8oiJ|G.A\u0004jg\u0012Kw-\u001b;\u0002\u0011%\u001cH*\u001a;uKJ\fq\"[:MKR$XM](s\t&<\u0017\u000e^\u0001\rSN<\u0006.\u001b;fgB\f7-Z\u0001\fSN\u001c\u0006/Y2f\u0007\"\f\'/A\bjg\"Kw\r[*veJ|w-\u0019;f\u00039I7\u000fT8x\'V\u0014(o\\4bi\u0016\f1\"[:TkJ\u0014xnZ1uK\u0006A\u0012n]+oS\u000e|G-Z%eK:$\u0018NZ5feN#\u0018M\u001d;\u0002/%\u001cXK\\5d_\u0012,\u0017\nZ3oi&4\u0017.\u001a:QCJ$\u0018!F5t\u0013\u0012,g\u000e^5gS\u0016\u0014\u0018j\u001a8pe\u0006\u0014G.Z\u0001\u000bSNl\u0015N\u001d:pe\u0016$\u0017aB5t\u0019><XM]\u0001\bSN,\u0006\u000f]3s\u0003-I7\u000fV5uY\u0016\u001c\u0015m]3\u0002\u000fQ|Gj\\<fe\u00069Ao\\+qa\u0016\u0014\u0018a\u0003;p)&$H.Z\"bg\u0016\fqaZ3u)f\u0004X-A\bhKRtU/\\3sS\u000e4\u0016\r\\;f\u0003E9W\r\u001e#je\u0016\u001cG/[8oC2LG/_\u0001\re\u00164XM]:f\u0005f$Xm]\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u0011\u0011G\u0001\u0007KF,\u0018\r\\:\u0015\t\u0005=\u0013Q\u0014\u0005\n\u0003?K\u0013\u0011!a\u0001\u0003C\u000b1\u0001\u001f\u00132!\rY\u00161U\u0005\u0004\u0003K3&aA!os\u0006A!+[2i\u0007\"\f\'\u000f\u0005\u0002`WM\u00191&!,\u0011\u0007m\u000by+C\u0002\u00022Z\u0013a!\u00118z%\u00164GCAAU\u00035qW/\u001c\u0013fqR,gn]5p]R\u0019a.!/\t\r\u0005mV\u00061\u0001k\u0003\u0015!C\u000f[5t\u00035y\'\u000f\u001a\u0013fqR,gn]5p]R!\u0011\u0011AAa\u0011\u0019\tYL\fa\u0001U\u0006)Bm\\;cY\u00164\u0016\r\\;fI\u0015DH/\u001a8tS>tG\u0003BA\n\u0003\u000fDa!a/0\u0001\u0004Q\u0017\u0001\u00064m_\u0006$h+\u00197vK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002\u001e\u00055\u0007BBA^a\u0001\u0007!.A\nm_:<g+\u00197vK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002(\u0005M\u0007BBA^c\u0001\u0007!.\u0001\nj]R4\u0016\r\\;fI\u0015DH/\u001a8tS>tG\u0003BA\u0019\u00033Da!a/3\u0001\u0004Q\u0017a\u00052zi\u00164\u0016\r\\;fI\u0015DH/\u001a8tS>tG\u0003BA\u001e\u0003?Da!a/4\u0001\u0004Q\u0017\u0001F:i_J$h+\u00197vK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002F\u0005\u0015\bBBA^i\u0001\u0007!.A\u000bjgZ\u000bG.\u001b3DQ\u0006\u0014H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005=\u00131\u001e\u0005\u0007\u0003w+\u0004\u0019\u00016\u0002\u001b\u0005\u00147\u000fJ3yi\u0016t7/[8o)\r\u0011\u0017\u0011\u001f\u0005\u0007\u0003w3\u0004\u0019\u00016\u0002\u001b5\f\u0007\u0010J3yi\u0016t7/[8o)\u0011\t90a?\u0015\u0007\t\fI\u0010\u0003\u0004\u0002^]\u0002\rA\u0019\u0005\u0007\u0003w;\u0004\u0019\u00016\u0002\u001b5Lg\u000eJ3yi\u0016t7/[8o)\u0011\u0011\tA!\u0002\u0015\u0007\t\u0014\u0019\u0001\u0003\u0004\u0002^a\u0002\rA\u0019\u0005\u0007\u0003wC\u0004\u0019\u00016\u0002#\u0005\u001cH)[4ji\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u00022\t-\u0001BBA^s\u0001\u0007!.A\njg\u000e{g\u000e\u001e:pY\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\tE\u0001BBA^u\u0001\u0007!.A\tjg\u0012Kw-\u001b;%Kb$XM\\:j_:$B!a\u0014\u0003\u0018!1\u00111X\u001eA\u0002)\f!#[:MKR$XM\u001d\u0013fqR,gn]5p]R!\u0011q\nB\u000f\u0011\u0019\tY\f\u0010a\u0001U\u0006I\u0012n\u001d\'fiR,\'o\u0014:ES\u001eLG\u000fJ3yi\u0016t7/[8o)\u0011\tyEa\t\t\r\u0005mV\b1\u0001k\u0003YI7o\u00165ji\u0016\u001c\b/Y2fI\u0015DH/\u001a8tS>tG\u0003BA(\u0005SAa!a/?\u0001\u0004Q\u0017!F5t\'B\f7-Z\"iCJ$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u001f\u0012y\u0003\u0003\u0004\u0002<~\u0002\rA[\u0001\u001aSND\u0015n\u001a5TkJ\u0014xnZ1uK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\tU\u0002BBA^\u0001\u0002\u0007!.\u0001\rjg2{woU;se><\u0017\r^3%Kb$XM\\:j_:$B!a\u0014\u0003<!1\u00111X!A\u0002)\fQ#[:TkJ\u0014xnZ1uK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\t\u0005\u0003BBA^\u0005\u0002\u0007!.\u0001\u0012jgVs\u0017nY8eK&#WM\u001c;jM&,\'o\u0015;beR$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u001f\u00129\u0005\u0003\u0004\u0002<\u000e\u0003\rA[\u0001\"SN,f.[2pI\u0016LE-\u001a8uS\u001aLWM\u001d)beR$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u001f\u0012i\u0005\u0003\u0004\u0002<\u0012\u0003\rA[\u0001 SNLE-\u001a8uS\u001aLWM]%h]>\u0014\u0018M\u00197fI\u0015DH/\u001a8tS>tG\u0003BA(\u0005\'Ba!a/F\u0001\u0004Q\u0017\u0001F5t\u001b&\u0014(o\u001c:fI\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\te\u0003BBA^\r\u0002\u0007!.A\tjg2{w/\u001a:%Kb$XM\\:j_:$B!a\u0014\u0003`!1\u00111X$A\u0002)\f\u0011#[:VaB,\'\u000fJ3yi\u0016t7/[8o)\u0011\tyE!\u001a\t\r\u0005m\u0006\n1\u0001k\u0003UI7\u000fV5uY\u0016\u001c\u0015m]3%Kb$XM\\:j_:$B!a\u0014\u0003l!1\u00111X%A\u0002)\f\u0011\u0003^8M_^,\'\u000fJ3yi\u0016t7/[8o)\r\u0011\'\u0011\u000f\u0005\u0007\u0003wS\u0005\u0019\u00016\u0002#Q|W\u000b\u001d9fe\u0012*\u0007\u0010^3og&|g\u000eF\u0002c\u0005oBa!a/L\u0001\u0004Q\u0017!\u0006;p)&$H.Z\"bg\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0004E\nu\u0004BBA^\u0019\u0002\u0007!.A\thKR$\u0016\u0010]3%Kb$XM\\:j_:$B!!\r\u0003\u0004\"1\u00111X\'A\u0002)\f\u0011dZ3u\u001dVlWM]5d-\u0006dW/\u001a\u0013fqR,gn]5p]R!\u0011\u0011\u0007BE\u0011\u0019\tYL\u0014a\u0001U\u0006Yr-\u001a;ESJ,7\r^5p]\u0006d\u0017\u000e^=%Kb$XM\\:j_:$B!a\u000f\u0003\u0010\"1\u00111X(A\u0002)\faC]3wKJ\u001cXMQ=uKN$S\r\u001f;f]NLwN\u001c\u000b\u0004E\nU\u0005BBA^!\u0002\u0007!.\u0001\niCND7i\u001c3fI\u0015DH/\u001a8tS>tG\u0003BAL\u00057Ca!a/R\u0001\u0004Q\u0017\u0001E3rk\u0006d7\u000fJ3yi\u0016t7/[8o)\u0011\u0011\tK!*\u0015\t\u0005=#1\u0015\u0005\n\u0003?\u0013\u0016\u0011!a\u0001\u0003CCa!a/S\u0001\u0004Q\u0007
   #12 = Utf8               scala/collection/immutable/NumericRange$Exclusive
   #13 = Class              #12           // scala/collection/immutable/NumericRange$Exclusive
   #14 = Utf8               scala/collection/immutable/NumericRange
   #15 = Class              #14           // scala/collection/immutable/NumericRange
   #16 = Utf8               Exclusive
   #17 = Utf8               scala/collection/immutable/NumericRange$Inclusive
   #18 = Class              #17           // scala/collection/immutable/NumericRange$Inclusive
   #19 = Utf8               Inclusive
   #20 = Utf8               scala/math/Numeric$CharIsIntegral$
   #21 = Class              #20           // scala/math/Numeric$CharIsIntegral$
   #22 = Utf8               scala/math/Numeric
   #23 = Class              #22           // scala/math/Numeric
   #24 = Utf8               CharIsIntegral$
   #25 = Utf8               scala/math/Ordering$Char$
   #26 = Class              #25           // scala/math/Ordering$Char$
   #27 = Utf8               scala/math/Ordering
   #28 = Class              #27           // scala/math/Ordering
   #29 = Utf8               Char$
   #30 = Utf8               self
   #31 = Utf8               C
   #32 = Utf8               equals$extension
   #33 = Utf8               (CLjava/lang/Object;)Z
   #34 = Utf8               $this
   #35 = Utf8               x$1
   #36 = Utf8               scala/runtime/RichChar$
   #37 = Class              #36           // scala/runtime/RichChar$
   #38 = Utf8               MODULE$
   #39 = Utf8               Lscala/runtime/RichChar$;
   #40 = NameAndType        #38:#39       // MODULE$:Lscala/runtime/RichChar$;
   #41 = Fieldref           #37.#40       // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
   #42 = NameAndType        #32:#33       // equals$extension:(CLjava/lang/Object;)Z
   #43 = Methodref          #37.#42       // scala/runtime/RichChar$.equals$extension:(CLjava/lang/Object;)Z
   #44 = Utf8               Ljava/lang/Object;
   #45 = Utf8               hashCode$extension
   #46 = Utf8               (C)I
   #47 = Utf8               java/lang/Character
   #48 = Class              #47           // java/lang/Character
   #49 = Utf8               hashCode
   #50 = NameAndType        #49:#46       // hashCode:(C)I
   #51 = Methodref          #48.#50       // java/lang/Character.hashCode:(C)I
   #52 = Utf8               reverseBytes$extension
   #53 = Utf8               (C)C
   #54 = Utf8               reverseBytes
   #55 = NameAndType        #54:#53       // reverseBytes:(C)C
   #56 = Methodref          #48.#55       // java/lang/Character.reverseBytes:(C)C
   #57 = Utf8               getDirectionality$extension
   #58 = Utf8               (C)B
   #59 = Utf8               getDirectionality
   #60 = NameAndType        #59:#58       // getDirectionality:(C)B
   #61 = Methodref          #48.#60       // java/lang/Character.getDirectionality:(C)B
   #62 = Utf8               getNumericValue$extension
   #63 = Utf8               getNumericValue
   #64 = NameAndType        #63:#46       // getNumericValue:(C)I
   #65 = Methodref          #48.#64       // java/lang/Character.getNumericValue:(C)I
   #66 = Utf8               getType$extension
   #67 = Utf8               getType
   #68 = NameAndType        #67:#46       // getType:(C)I
   #69 = Methodref          #48.#68       // java/lang/Character.getType:(C)I
   #70 = Utf8               toTitleCase$extension
   #71 = Utf8               toTitleCase
   #72 = NameAndType        #71:#53       // toTitleCase:(C)C
   #73 = Methodref          #48.#72       // java/lang/Character.toTitleCase:(C)C
   #74 = Utf8               toUpper$extension
   #75 = Utf8               toUpperCase
   #76 = NameAndType        #75:#53       // toUpperCase:(C)C
   #77 = Methodref          #48.#76       // java/lang/Character.toUpperCase:(C)C
   #78 = Utf8               toLower$extension
   #79 = Utf8               toLowerCase
   #80 = NameAndType        #79:#53       // toLowerCase:(C)C
   #81 = Methodref          #48.#80       // java/lang/Character.toLowerCase:(C)C
   #82 = Utf8               isTitleCase$extension
   #83 = Utf8               (C)Z
   #84 = Utf8               isTitleCase
   #85 = NameAndType        #84:#83       // isTitleCase:(C)Z
   #86 = Methodref          #48.#85       // java/lang/Character.isTitleCase:(C)Z
   #87 = Utf8               isUpper$extension
   #88 = Utf8               isUpperCase
   #89 = NameAndType        #88:#83       // isUpperCase:(C)Z
   #90 = Methodref          #48.#89       // java/lang/Character.isUpperCase:(C)Z
   #91 = Utf8               isLower$extension
   #92 = Utf8               isLowerCase
   #93 = NameAndType        #92:#83       // isLowerCase:(C)Z
   #94 = Methodref          #48.#93       // java/lang/Character.isLowerCase:(C)Z
   #95 = Utf8               isMirrored$extension
   #96 = Utf8               isMirrored
   #97 = NameAndType        #96:#83       // isMirrored:(C)Z
   #98 = Methodref          #48.#97       // java/lang/Character.isMirrored:(C)Z
   #99 = Utf8               isIdentifierIgnorable$extension
  #100 = Utf8               isIdentifierIgnorable
  #101 = NameAndType        #100:#83      // isIdentifierIgnorable:(C)Z
  #102 = Methodref          #48.#101      // java/lang/Character.isIdentifierIgnorable:(C)Z
  #103 = Utf8               isUnicodeIdentifierPart$extension
  #104 = Utf8               isUnicodeIdentifierPart
  #105 = NameAndType        #104:#83      // isUnicodeIdentifierPart:(C)Z
  #106 = Methodref          #48.#105      // java/lang/Character.isUnicodeIdentifierPart:(C)Z
  #107 = Utf8               isUnicodeIdentifierStart$extension
  #108 = Utf8               isUnicodeIdentifierStart
  #109 = NameAndType        #108:#83      // isUnicodeIdentifierStart:(C)Z
  #110 = Methodref          #48.#109      // java/lang/Character.isUnicodeIdentifierStart:(C)Z
  #111 = Utf8               isSurrogate$extension
  #112 = NameAndType        #111:#83      // isSurrogate$extension:(C)Z
  #113 = Methodref          #37.#112      // scala/runtime/RichChar$.isSurrogate$extension:(C)Z
  #114 = Utf8               isLowSurrogate$extension
  #115 = Utf8               isLowSurrogate
  #116 = NameAndType        #115:#83      // isLowSurrogate:(C)Z
  #117 = Methodref          #48.#116      // java/lang/Character.isLowSurrogate:(C)Z
  #118 = Utf8               isHighSurrogate$extension
  #119 = Utf8               isHighSurrogate
  #120 = NameAndType        #119:#83      // isHighSurrogate:(C)Z
  #121 = Methodref          #48.#120      // java/lang/Character.isHighSurrogate:(C)Z
  #122 = Utf8               isSpaceChar$extension
  #123 = Utf8               isSpaceChar
  #124 = NameAndType        #123:#83      // isSpaceChar:(C)Z
  #125 = Methodref          #48.#124      // java/lang/Character.isSpaceChar:(C)Z
  #126 = Utf8               isWhitespace$extension
  #127 = Utf8               isWhitespace
  #128 = NameAndType        #127:#83      // isWhitespace:(C)Z
  #129 = Methodref          #48.#128      // java/lang/Character.isWhitespace:(C)Z
  #130 = Utf8               isLetterOrDigit$extension
  #131 = Utf8               isLetterOrDigit
  #132 = NameAndType        #131:#83      // isLetterOrDigit:(C)Z
  #133 = Methodref          #48.#132      // java/lang/Character.isLetterOrDigit:(C)Z
  #134 = Utf8               isLetter$extension
  #135 = Utf8               isLetter
  #136 = NameAndType        #135:#83      // isLetter:(C)Z
  #137 = Methodref          #48.#136      // java/lang/Character.isLetter:(C)Z
  #138 = Utf8               isDigit$extension
  #139 = Utf8               isDigit
  #140 = NameAndType        #139:#83      // isDigit:(C)Z
  #141 = Methodref          #48.#140      // java/lang/Character.isDigit:(C)Z
  #142 = Utf8               isControl$extension
  #143 = Utf8               isISOControl
  #144 = NameAndType        #143:#83      // isISOControl:(C)Z
  #145 = Methodref          #48.#144      // java/lang/Character.isISOControl:(C)Z
  #146 = Utf8               asDigit$extension
  #147 = Utf8               digit
  #148 = Utf8               (CI)I
  #149 = NameAndType        #147:#148     // digit:(CI)I
  #150 = Methodref          #48.#149      // java/lang/Character.digit:(CI)I
  #151 = Utf8               min$extension
  #152 = Utf8               (CC)C
  #153 = Utf8               that
  #154 = Utf8               scala/math/package$
  #155 = Class              #154          // scala/math/package$
  #156 = Utf8               Lscala/math/package$;
  #157 = NameAndType        #38:#156      // MODULE$:Lscala/math/package$;
  #158 = Fieldref           #155.#157     // scala/math/package$.MODULE$:Lscala/math/package$;
  #159 = Utf8               java/lang/Math
  #160 = Class              #159          // java/lang/Math
  #161 = Utf8               min
  #162 = Utf8               (II)I
  #163 = NameAndType        #161:#162     // min:(II)I
  #164 = Methodref          #160.#163     // java/lang/Math.min:(II)I
  #165 = Utf8               max$extension
  #166 = Utf8               max
  #167 = NameAndType        #166:#162     // max:(II)I
  #168 = Methodref          #160.#167     // java/lang/Math.max:(II)I
  #169 = Utf8               abs$extension
  #170 = Utf8               isValidChar$extension
  #171 = Utf8               shortValue$extension
  #172 = Utf8               (C)S
  #173 = Utf8               byteValue$extension
  #174 = Utf8               intValue$extension
  #175 = Utf8               longValue$extension
  #176 = Utf8               (C)J
  #177 = Utf8               floatValue$extension
  #178 = Utf8               (C)F
  #179 = Utf8               doubleValue$extension
  #180 = Utf8               (C)D
  #181 = Utf8               ord$extension
  #182 = Utf8               (C)Lscala/math/Ordering$Char$;
  #183 = Utf8               Lscala/math/Ordering$Char$;
  #184 = NameAndType        #38:#183      // MODULE$:Lscala/math/Ordering$Char$;
  #185 = Fieldref           #26.#184      // scala/math/Ordering$Char$.MODULE$:Lscala/math/Ordering$Char$;
  #186 = Utf8               num$extension
  #187 = Utf8               (C)Lscala/math/Numeric$CharIsIntegral$;
  #188 = Utf8               Lscala/math/Numeric$CharIsIntegral$;
  #189 = NameAndType        #38:#188      // MODULE$:Lscala/math/Numeric$CharIsIntegral$;
  #190 = Fieldref           #21.#189      // scala/math/Numeric$CharIsIntegral$.MODULE$:Lscala/math/Numeric$CharIsIntegral$;
  #191 = Utf8               until
  #192 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #193 = Utf8               end
  #194 = Utf8               until$
  #195 = Utf8               (Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #196 = NameAndType        #194:#195     // until$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #197 = InterfaceMethodref #7.#196       // scala/runtime/IntegralProxy.until$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #198 = Utf8               this
  #199 = Utf8               Lscala/runtime/RichChar;
  #200 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #201 = Utf8               step
  #202 = Utf8               (Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #203 = NameAndType        #194:#202     // until$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #204 = InterfaceMethodref #7.#203       // scala/runtime/IntegralProxy.until$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #205 = Utf8               to
  #206 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #207 = Utf8               to$
  #208 = Utf8               (Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #209 = NameAndType        #207:#208     // to$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #210 = InterfaceMethodref #7.#209       // scala/runtime/IntegralProxy.to$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #211 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #212 = Utf8               (Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #213 = NameAndType        #207:#212     // to$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #214 = InterfaceMethodref #7.#213       // scala/runtime/IntegralProxy.to$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #215 = Utf8               isWhole
  #216 = Utf8               ()Z
  #217 = Utf8               scala/runtime/ScalaWholeNumberProxy
  #218 = Class              #217          // scala/runtime/ScalaWholeNumberProxy
  #219 = Utf8               isWhole$
  #220 = Utf8               (Lscala/runtime/ScalaWholeNumberProxy;)Z
  #221 = NameAndType        #219:#220     // isWhole$:(Lscala/runtime/ScalaWholeNumberProxy;)Z
  #222 = InterfaceMethodref #218.#221     // scala/runtime/ScalaWholeNumberProxy.isWhole$:(Lscala/runtime/ScalaWholeNumberProxy;)Z
  #223 = Utf8               sign
  #224 = Utf8               ()Ljava/lang/Object;
  #225 = Utf8               scala/runtime/ScalaNumberProxy
  #226 = Class              #225          // scala/runtime/ScalaNumberProxy
  #227 = Utf8               sign$
  #228 = Utf8               (Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
  #229 = NameAndType        #227:#228     // sign$:(Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
  #230 = InterfaceMethodref #226.#229     // scala/runtime/ScalaNumberProxy.sign$:(Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
  #231 = Utf8               signum
  #232 = Utf8               ()I
  #233 = Utf8               signum$
  #234 = Utf8               (Lscala/runtime/ScalaNumberProxy;)I
  #235 = NameAndType        #233:#234     // signum$:(Lscala/runtime/ScalaNumberProxy;)I
  #236 = InterfaceMethodref #226.#235     // scala/runtime/ScalaNumberProxy.signum$:(Lscala/runtime/ScalaNumberProxy;)I
  #237 = Utf8               compare
  #238 = Utf8               (Ljava/lang/Object;)I
  #239 = Utf8               y
  #240 = Utf8               scala/runtime/OrderedProxy
  #241 = Class              #240          // scala/runtime/OrderedProxy
  #242 = Utf8               compare$
  #243 = Utf8               (Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
  #244 = NameAndType        #242:#243     // compare$:(Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
  #245 = InterfaceMethodref #241.#244     // scala/runtime/OrderedProxy.compare$:(Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
  #246 = Utf8               $less
  #247 = Utf8               (Ljava/lang/Object;)Z
  #248 = Utf8               scala/math/Ordered
  #249 = Class              #248          // scala/math/Ordered
  #250 = Utf8               $less$
  #251 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)Z
  #252 = NameAndType        #250:#251     // $less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #253 = InterfaceMethodref #249.#252     // scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #254 = Utf8               $greater
  #255 = Utf8               $greater$
  #256 = NameAndType        #255:#251     // $greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #257 = InterfaceMethodref #249.#256     // scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #258 = Utf8               $less$eq
  #259 = Utf8               $less$eq$
  #260 = NameAndType        #259:#251     // $less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #261 = InterfaceMethodref #249.#260     // scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #262 = Utf8               $greater$eq
  #263 = Utf8               $greater$eq$
  #264 = NameAndType        #263:#251     // $greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #265 = InterfaceMethodref #249.#264     // scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #266 = Utf8               compareTo
  #267 = Utf8               compareTo$
  #268 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)I
  #269 = NameAndType        #267:#268     // compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #270 = InterfaceMethodref #249.#269     // scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #271 = Utf8               toString
  #272 = Utf8               ()Ljava/lang/String;
  #273 = Utf8               scala/Proxy
  #274 = Class              #273          // scala/Proxy
  #275 = Utf8               toString$
  #276 = Utf8               (Lscala/Proxy;)Ljava/lang/String;
  #277 = NameAndType        #275:#276     // toString$:(Lscala/Proxy;)Ljava/lang/String;
  #278 = InterfaceMethodref #274.#277     // scala/Proxy.toString$:(Lscala/Proxy;)Ljava/lang/String;
  #279 = Utf8               toChar
  #280 = Utf8               ()C
  #281 = Utf8               scala/math/ScalaNumericAnyConversions
  #282 = Class              #281          // scala/math/ScalaNumericAnyConversions
  #283 = Utf8               toChar$
  #284 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)C
  #285 = NameAndType        #283:#284     // toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
  #286 = InterfaceMethodref #282.#285     // scala/math/ScalaNumericAnyConversions.toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
  #287 = Utf8               toByte
  #288 = Utf8               ()B
  #289 = Utf8               toByte$
  #290 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)B
  #291 = NameAndType        #289:#290     // toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
  #292 = InterfaceMethodref #282.#291     // scala/math/ScalaNumericAnyConversions.toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
  #293 = Utf8               toShort
  #294 = Utf8               ()S
  #295 = Utf8               toShort$
  #296 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)S
  #297 = NameAndType        #295:#296     // toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
  #298 = InterfaceMethodref #282.#297     // scala/math/ScalaNumericAnyConversions.toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
  #299 = Utf8               toInt
  #300 = Utf8               toInt$
  #301 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)I
  #302 = NameAndType        #300:#301     // toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
  #303 = InterfaceMethodref #282.#302     // scala/math/ScalaNumericAnyConversions.toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
  #304 = Utf8               toLong
  #305 = Utf8               ()J
  #306 = Utf8               toLong$
  #307 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)J
  #308 = NameAndType        #306:#307     // toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
  #309 = InterfaceMethodref #282.#308     // scala/math/ScalaNumericAnyConversions.toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
  #310 = Utf8               toFloat
  #311 = Utf8               ()F
  #312 = Utf8               toFloat$
  #313 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)F
  #314 = NameAndType        #312:#313     // toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
  #315 = InterfaceMethodref #282.#314     // scala/math/ScalaNumericAnyConversions.toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
  #316 = Utf8               toDouble
  #317 = Utf8               ()D
  #318 = Utf8               toDouble$
  #319 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)D
  #320 = NameAndType        #318:#319     // toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
  #321 = InterfaceMethodref #282.#320     // scala/math/ScalaNumericAnyConversions.toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
  #322 = Utf8               isValidByte
  #323 = Utf8               isValidByte$
  #324 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)Z
  #325 = NameAndType        #323:#324     // isValidByte$:(Lscala/math/ScalaNumericAnyConversions;)Z
  #326 = InterfaceMethodref #282.#325     // scala/math/ScalaNumericAnyConversions.isValidByte$:(Lscala/math/ScalaNumericAnyConversions;)Z
  #327 = Utf8               isValidShort
  #328 = Utf8               isValidShort$
  #329 = NameAndType        #328:#324     // isValidShort$:(Lscala/math/ScalaNumericAnyConversions;)Z
  #330 = InterfaceMethodref #282.#329     // scala/math/ScalaNumericAnyConversions.isValidShort$:(Lscala/math/ScalaNumericAnyConversions;)Z
  #331 = Utf8               isValidInt
  #332 = Utf8               isValidInt$
  #333 = NameAndType        #332:#324     // isValidInt$:(Lscala/math/ScalaNumericAnyConversions;)Z
  #334 = InterfaceMethodref #282.#333     // scala/math/ScalaNumericAnyConversions.isValidInt$:(Lscala/math/ScalaNumericAnyConversions;)Z
  #335 = Utf8               unifiedPrimitiveHashcode
  #336 = Utf8               unifiedPrimitiveHashcode$
  #337 = NameAndType        #336:#301     // unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
  #338 = InterfaceMethodref #282.#337     // scala/math/ScalaNumericAnyConversions.unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
  #339 = Utf8               unifiedPrimitiveEquals
  #340 = Utf8               x
  #341 = Utf8               unifiedPrimitiveEquals$
  #342 = Utf8               (Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #343 = NameAndType        #341:#342     // unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #344 = InterfaceMethodref #282.#343     // scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #345 = NameAndType        #30:#31       // self:C
  #346 = Fieldref           #2.#345       // scala/runtime/RichChar.self:C
  #347 = Utf8               num
  #348 = Utf8               ()Lscala/math/Numeric$CharIsIntegral$;
  #349 = NameAndType        #30:#280      // self:()C
  #350 = Methodref          #2.#349       // scala/runtime/RichChar.self:()C
  #351 = Utf8               ord
  #352 = Utf8               ()Lscala/math/Ordering$Char$;
  #353 = Utf8               doubleValue
  #354 = Utf8               floatValue
  #355 = Utf8               longValue
  #356 = Utf8               intValue
  #357 = Utf8               byteValue
  #358 = Utf8               shortValue
  #359 = Utf8               isValidChar
  #360 = Utf8               abs
  #361 = Utf8               max$extension_$this
  #362 = Utf8               min$extension_$this
  #363 = Utf8               asDigit
  #364 = Utf8               isControl
  #365 = Utf8               isSurrogate
  #366 = Utf8               isLower
  #367 = Utf8               isUpper
  #368 = Utf8               toLower
  #369 = Utf8               toUpper
  #370 = Utf8               equals
  #371 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/IndexedSeq;
  #372 = NameAndType        #205:#211     // to:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #373 = Methodref          #2.#372       // scala/runtime/RichChar.to:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #374 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #375 = NameAndType        #205:#206     // to:(Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #376 = Methodref          #2.#375       // scala/runtime/RichChar.to:(Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
  #377 = NameAndType        #191:#200     // until:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #378 = Methodref          #2.#377       // scala/runtime/RichChar.until:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #379 = NameAndType        #191:#192     // until:(Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #380 = Methodref          #2.#379       // scala/runtime/RichChar.until:(Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
  #381 = Utf8               scala/runtime/BoxesRunTime
  #382 = Class              #381          // scala/runtime/BoxesRunTime
  #383 = Utf8               unboxToChar
  #384 = Utf8               (Ljava/lang/Object;)C
  #385 = NameAndType        #383:#384     // unboxToChar:(Ljava/lang/Object;)C
  #386 = Methodref          #382.#385     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #387 = Utf8               valueOf
  #388 = Utf8               (C)Ljava/lang/Character;
  #389 = NameAndType        #387:#388     // valueOf:(C)Ljava/lang/Character;
  #390 = Methodref          #48.#389      // java/lang/Character.valueOf:(C)Ljava/lang/Character;
  #391 = Utf8               min$extension_that
  #392 = Utf8               max$extension_that
  #393 = Utf8               ()Lscala/math/Ordering;
  #394 = Utf8               ()Lscala/math/Numeric;
  #395 = Utf8               ()Lscala/math/Integral;
  #396 = Utf8               boxToCharacter
  #397 = NameAndType        #396:#388     // boxToCharacter:(C)Ljava/lang/Character;
  #398 = Methodref          #382.#397     // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #399 = Utf8               <init>
  #400 = Utf8               (C)V
  #401 = Utf8               ()V
  #402 = NameAndType        #399:#401     // "<init>":()V
  #403 = Methodref          #5.#402       // java/lang/Object."<init>":()V
  #404 = Utf8               Code
  #405 = Utf8               LocalVariableTable
  #406 = Utf8               MethodParameters
  #407 = Utf8               LineNumberTable
  #408 = Utf8               Deprecated
  #409 = Utf8               InnerClasses
  #410 = Utf8               Signature
  #411 = Utf8               SourceFile
  #412 = Utf8               RuntimeVisibleAnnotations
  #413 = Utf8               ScalaInlineInfo
  #414 = Utf8               ScalaSig
{
  private final char self;
    descriptor: C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static boolean equals$extension(char, java.lang.Object);
    descriptor: (CLjava/lang/Object;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: iload_0
         4: aload_1
         5: invokevirtual #43                 // Method scala/runtime/RichChar$.equals$extension:(CLjava/lang/Object;)Z
         8: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public static int hashCode$extension(char);
    descriptor: (C)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #51                 // Method java/lang/Character.hashCode:(C)I
         8: ireturn
      LineNumberTable:
        line 16: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static char reverseBytes$extension(char);
    descriptor: (C)C
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #56                 // Method java/lang/Character.reverseBytes:(C)C
         8: ireturn
      LineNumberTable:
        line 63: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static byte getDirectionality$extension(char);
    descriptor: (C)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #61                 // Method java/lang/Character.getDirectionality:(C)B
         8: ireturn
      LineNumberTable:
        line 62: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static int getNumericValue$extension(char);
    descriptor: (C)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #65                 // Method java/lang/Character.getNumericValue:(C)I
         8: ireturn
      LineNumberTable:
        line 61: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static int getType$extension(char);
    descriptor: (C)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #69                 // Method java/lang/Character.getType:(C)I
         8: ireturn
      LineNumberTable:
        line 60: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static char toTitleCase$extension(char);
    descriptor: (C)C
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #73                 // Method java/lang/Character.toTitleCase:(C)C
         8: ireturn
      LineNumberTable:
        line 58: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static char toUpper$extension(char);
    descriptor: (C)C
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #77                 // Method java/lang/Character.toUpperCase:(C)C
         8: ireturn
      LineNumberTable:
        line 57: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static char toLower$extension(char);
    descriptor: (C)C
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #81                 // Method java/lang/Character.toLowerCase:(C)C
         8: ireturn
      LineNumberTable:
        line 56: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isTitleCase$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #86                 // Method java/lang/Character.isTitleCase:(C)Z
         8: ireturn
      LineNumberTable:
        line 54: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isUpper$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #90                 // Method java/lang/Character.isUpperCase:(C)Z
         8: ireturn
      LineNumberTable:
        line 53: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isLower$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #94                 // Method java/lang/Character.isLowerCase:(C)Z
         8: ireturn
      LineNumberTable:
        line 52: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isMirrored$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #98                 // Method java/lang/Character.isMirrored:(C)Z
         8: ireturn
      LineNumberTable:
        line 50: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isIdentifierIgnorable$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #102                // Method java/lang/Character.isIdentifierIgnorable:(C)Z
         8: ireturn
      LineNumberTable:
        line 49: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isUnicodeIdentifierPart$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #106                // Method java/lang/Character.isUnicodeIdentifierPart:(C)Z
         8: ireturn
      LineNumberTable:
        line 48: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isUnicodeIdentifierStart$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #110                // Method java/lang/Character.isUnicodeIdentifierStart:(C)Z
         8: ireturn
      LineNumberTable:
        line 47: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isSurrogate$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: iload_0
         4: invokevirtual #113                // Method scala/runtime/RichChar$.isSurrogate$extension:(C)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isLowSurrogate$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #117                // Method java/lang/Character.isLowSurrogate:(C)Z
         8: ireturn
      LineNumberTable:
        line 45: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isHighSurrogate$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #121                // Method java/lang/Character.isHighSurrogate:(C)Z
         8: ireturn
      LineNumberTable:
        line 44: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isSpaceChar$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #125                // Method java/lang/Character.isSpaceChar:(C)Z
         8: ireturn
      LineNumberTable:
        line 43: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isWhitespace$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #129                // Method java/lang/Character.isWhitespace:(C)Z
         8: ireturn
      LineNumberTable:
        line 42: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isLetterOrDigit$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #133                // Method java/lang/Character.isLetterOrDigit:(C)Z
         8: ireturn
      LineNumberTable:
        line 41: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isLetter$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #137                // Method java/lang/Character.isLetter:(C)Z
         8: ireturn
      LineNumberTable:
        line 40: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isDigit$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #141                // Method java/lang/Character.isDigit:(C)Z
         8: ireturn
      LineNumberTable:
        line 39: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isControl$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: invokestatic  #145                // Method java/lang/Character.isISOControl:(C)Z
         8: ireturn
      LineNumberTable:
        line 38: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static int asDigit$extension(char);
    descriptor: (C)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: bipush        36
         7: invokestatic  #150                // Method java/lang/Character.digit:(CI)I
        10: ireturn
      LineNumberTable:
        line 36: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static char min$extension(char, char);
    descriptor: (CC)C
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: getstatic     #158                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: iload_0
         9: iload_1
        10: invokestatic  #164                // Method java/lang/Math.min:(II)I
        13: i2c
        14: ireturn
      LineNumberTable:
        line 34: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   C
            0      15     1  that   C
    MethodParameters:
      Name                           Flags
      $this                          final
      that                           final

  public static char max$extension(char, char);
    descriptor: (CC)C
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: getstatic     #158                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: iload_0
         9: iload_1
        10: invokestatic  #168                // Method java/lang/Math.max:(II)I
        13: i2c
        14: ireturn
      LineNumberTable:
        line 33: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   C
            0      15     1  that   C
    MethodParameters:
      Name                           Flags
      $this                          final
      that                           final

  public static char abs$extension(char);
    descriptor: (C)C
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isValidChar$extension(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iconst_1
         5: ireturn
      LineNumberTable:
        line 27: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static short shortValue$extension(char);
    descriptor: (C)S
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: i2s
         6: ireturn
      LineNumberTable:
        line 25: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static byte byteValue$extension(char);
    descriptor: (C)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: i2b
         6: ireturn
      LineNumberTable:
        line 24: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static int intValue$extension(char);
    descriptor: (C)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: ireturn
      LineNumberTable:
        line 23: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static long longValue$extension(char);
    descriptor: (C)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: i2l
         6: lreturn
      LineNumberTable:
        line 22: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static float floatValue$extension(char);
    descriptor: (C)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: i2f
         6: freturn
      LineNumberTable:
        line 21: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static double doubleValue$extension(char);
    descriptor: (C)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: iload_0
         5: i2d
         6: dreturn
      LineNumberTable:
        line 20: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static scala.math.Ordering$Char$ ord$extension(char);
    descriptor: (C)Lscala/math/Ordering$Char$;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: getstatic     #185                // Field scala/math/Ordering$Char$.MODULE$:Lscala/math/Ordering$Char$;
         7: areturn
      LineNumberTable:
        line 18: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public static scala.math.Numeric$CharIsIntegral$ num$extension(char);
    descriptor: (C)Lscala/math/Numeric$CharIsIntegral$;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: getstatic     #190                // Field scala/math/Numeric$CharIsIntegral$.MODULE$:Lscala/math/Numeric$CharIsIntegral$;
         7: areturn
      LineNumberTable:
        line 17: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public scala.collection.immutable.NumericRange$Exclusive until(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #197                // InterfaceMethod scala/runtime/IntegralProxy.until$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
         5: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1   end   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final

  public scala.collection.immutable.NumericRange$Exclusive until(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #204                // InterfaceMethod scala/runtime/IntegralProxy.until$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
         6: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/runtime/RichChar;
            0       7     1   end   Ljava/lang/Object;
            0       7     2  step   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final
      step                           final

  public scala.collection.immutable.NumericRange$Inclusive to(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #210                // InterfaceMethod scala/runtime/IntegralProxy.to$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
         5: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1   end   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final

  public scala.collection.immutable.NumericRange$Inclusive to(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #214                // InterfaceMethod scala/runtime/IntegralProxy.to$:(Lscala/runtime/IntegralProxy;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
         6: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/runtime/RichChar;
            0       7     1   end   Ljava/lang/Object;
            0       7     2  step   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final
      step                           final

  public boolean isWhole();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #222                // InterfaceMethod scala/runtime/ScalaWholeNumberProxy.isWhole$:(Lscala/runtime/ScalaWholeNumberProxy;)Z
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public java.lang.Object sign();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #230                // InterfaceMethod scala/runtime/ScalaNumberProxy.sign$:(Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public int signum();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #236                // InterfaceMethod scala/runtime/ScalaNumberProxy.signum$:(Lscala/runtime/ScalaNumberProxy;)I
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;
    Deprecated: true

  public int compare(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #245                // InterfaceMethod scala/runtime/OrderedProxy.compare$:(Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      y                              final

  public boolean $less(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #253                // InterfaceMethod scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #257                // InterfaceMethod scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $less$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #261                // InterfaceMethod scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #265                // InterfaceMethod scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #270                // InterfaceMethod scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #278                // InterfaceMethod scala/Proxy.toString$:(Lscala/Proxy;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public char toChar();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #286                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public byte toByte();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #292                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public short toShort();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #298                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public int toInt();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #303                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public long toLong();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #309                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
         4: lreturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public float toFloat();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #315                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
         4: freturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public double toDouble();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #321                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
         4: dreturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public boolean isValidByte();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #326                // InterfaceMethod scala/math/ScalaNumericAnyConversions.isValidByte$:(Lscala/math/ScalaNumericAnyConversions;)Z
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public boolean isValidShort();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #330                // InterfaceMethod scala/math/ScalaNumericAnyConversions.isValidShort$:(Lscala/math/ScalaNumericAnyConversions;)Z
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public boolean isValidInt();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #334                // InterfaceMethod scala/math/ScalaNumericAnyConversions.isValidInt$:(Lscala/math/ScalaNumericAnyConversions;)Z
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public int unifiedPrimitiveHashcode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #338                // InterfaceMethod scala/math/ScalaNumericAnyConversions.unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public boolean unifiedPrimitiveEquals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #344                // InterfaceMethod scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public char self();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #346                // Field self:C
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichChar;

  public scala.math.Numeric$CharIsIntegral$ num();
    descriptor: ()Lscala/math/Numeric$CharIsIntegral$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: pop
         9: getstatic     #190                // Field scala/math/Numeric$CharIsIntegral$.MODULE$:Lscala/math/Numeric$CharIsIntegral$;
        12: areturn
      LineNumberTable:
        line 17: 0
        line 17: 9
        line 17: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichChar;

  public scala.math.Ordering$Char$ ord();
    descriptor: ()Lscala/math/Ordering$Char$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: pop
         9: getstatic     #185                // Field scala/math/Ordering$Char$.MODULE$:Lscala/math/Ordering$Char$;
        12: areturn
      LineNumberTable:
        line 18: 0
        line 18: 9
        line 18: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichChar;

  public double doubleValue();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: i2d
         9: dreturn
      LineNumberTable:
        line 20: 0
        line 20: 8
        line 20: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichChar;

  public float floatValue();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: i2f
         9: freturn
      LineNumberTable:
        line 21: 0
        line 21: 8
        line 21: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichChar;

  public long longValue();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: i2l
         9: lreturn
      LineNumberTable:
        line 22: 0
        line 22: 8
        line 22: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichChar;

  public int intValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: ireturn
      LineNumberTable:
        line 23: 0
        line 23: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichChar;

  public byte byteValue();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: i2b
         9: ireturn
      LineNumberTable:
        line 24: 0
        line 24: 8
        line 24: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichChar;

  public short shortValue();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: i2s
         9: ireturn
      LineNumberTable:
        line 25: 0
        line 25: 8
        line 25: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichChar;

  public boolean isValidChar();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: pop
         9: iconst_1
        10: ireturn
      LineNumberTable:
        line 27: 0
        line 27: 9
        line 27: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichChar;

  public char abs();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: ireturn
      LineNumberTable:
        line 32: 0
        line 32: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichChar;

  public char max(char);
    descriptor: (C)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: istore_2
         9: getstatic     #158                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: iload_2
        14: iload_1
        15: invokestatic  #168                // Method java/lang/Math.max:(II)I
        18: i2c
        19: ireturn
      LineNumberTable:
        line 33: 0
        line 33: 9
        line 33: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/runtime/RichChar;
            0      20     1  that   C
            9      10     2 max$extension_$this   C
    MethodParameters:
      Name                           Flags
      that                           final

  public char min(char);
    descriptor: (C)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: istore_2
         9: getstatic     #158                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: iload_2
        14: iload_1
        15: invokestatic  #164                // Method java/lang/Math.min:(II)I
        18: i2c
        19: ireturn
      LineNumberTable:
        line 34: 0
        line 34: 9
        line 34: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/runtime/RichChar;
            0      20     1  that   C
            9      10     2 min$extension_$this   C
    MethodParameters:
      Name                           Flags
      that                           final

  public int asDigit();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: bipush        36
        10: invokestatic  #150                // Method java/lang/Character.digit:(CI)I
        13: ireturn
      LineNumberTable:
        line 36: 0
        line 36: 8
        line 36: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/runtime/RichChar;

  public boolean isControl();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #145                // Method java/lang/Character.isISOControl:(C)Z
        11: ireturn
      LineNumberTable:
        line 38: 0
        line 38: 8
        line 38: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isDigit();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #141                // Method java/lang/Character.isDigit:(C)Z
        11: ireturn
      LineNumberTable:
        line 39: 0
        line 39: 8
        line 39: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isLetter();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #137                // Method java/lang/Character.isLetter:(C)Z
        11: ireturn
      LineNumberTable:
        line 40: 0
        line 40: 8
        line 40: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isLetterOrDigit();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #133                // Method java/lang/Character.isLetterOrDigit:(C)Z
        11: ireturn
      LineNumberTable:
        line 41: 0
        line 41: 8
        line 41: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isWhitespace();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #129                // Method java/lang/Character.isWhitespace:(C)Z
        11: ireturn
      LineNumberTable:
        line 42: 0
        line 42: 8
        line 42: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isSpaceChar();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #125                // Method java/lang/Character.isSpaceChar:(C)Z
        11: ireturn
      LineNumberTable:
        line 43: 0
        line 43: 8
        line 43: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isHighSurrogate();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #121                // Method java/lang/Character.isHighSurrogate:(C)Z
        11: ireturn
      LineNumberTable:
        line 44: 0
        line 44: 8
        line 44: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isLowSurrogate();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #117                // Method java/lang/Character.isLowSurrogate:(C)Z
        11: ireturn
      LineNumberTable:
        line 45: 0
        line 45: 8
        line 45: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isSurrogate();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: aload_0
         4: invokevirtual #350                // Method self:()C
         7: invokevirtual #113                // Method scala/runtime/RichChar$.isSurrogate$extension:(C)Z
        10: ireturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichChar;

  public boolean isUnicodeIdentifierStart();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #110                // Method java/lang/Character.isUnicodeIdentifierStart:(C)Z
        11: ireturn
      LineNumberTable:
        line 47: 0
        line 47: 8
        line 47: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isUnicodeIdentifierPart();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #106                // Method java/lang/Character.isUnicodeIdentifierPart:(C)Z
        11: ireturn
      LineNumberTable:
        line 48: 0
        line 48: 8
        line 48: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isIdentifierIgnorable();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #102                // Method java/lang/Character.isIdentifierIgnorable:(C)Z
        11: ireturn
      LineNumberTable:
        line 49: 0
        line 49: 8
        line 49: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isMirrored();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #98                 // Method java/lang/Character.isMirrored:(C)Z
        11: ireturn
      LineNumberTable:
        line 50: 0
        line 50: 8
        line 50: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isLower();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #94                 // Method java/lang/Character.isLowerCase:(C)Z
        11: ireturn
      LineNumberTable:
        line 52: 0
        line 52: 8
        line 52: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isUpper();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #90                 // Method java/lang/Character.isUpperCase:(C)Z
        11: ireturn
      LineNumberTable:
        line 53: 0
        line 53: 8
        line 53: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean isTitleCase();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #86                 // Method java/lang/Character.isTitleCase:(C)Z
        11: ireturn
      LineNumberTable:
        line 54: 0
        line 54: 8
        line 54: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public char toLower();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #81                 // Method java/lang/Character.toLowerCase:(C)C
        11: ireturn
      LineNumberTable:
        line 56: 0
        line 56: 8
        line 56: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public char toUpper();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #77                 // Method java/lang/Character.toUpperCase:(C)C
        11: ireturn
      LineNumberTable:
        line 57: 0
        line 57: 8
        line 57: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public char toTitleCase();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #73                 // Method java/lang/Character.toTitleCase:(C)C
        11: ireturn
      LineNumberTable:
        line 58: 0
        line 58: 8
        line 58: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public int getType();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #69                 // Method java/lang/Character.getType:(C)I
        11: ireturn
      LineNumberTable:
        line 60: 0
        line 60: 8
        line 60: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public int getNumericValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #65                 // Method java/lang/Character.getNumericValue:(C)I
        11: ireturn
      LineNumberTable:
        line 61: 0
        line 61: 8
        line 61: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public byte getDirectionality();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #61                 // Method java/lang/Character.getDirectionality:(C)B
        11: ireturn
      LineNumberTable:
        line 62: 0
        line 62: 8
        line 62: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public char reverseBytes();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #56                 // Method java/lang/Character.reverseBytes:(C)C
        11: ireturn
      LineNumberTable:
        line 63: 0
        line 63: 8
        line 63: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #51                 // Method java/lang/Character.hashCode:(C)I
        11: ireturn
      LineNumberTable:
        line 16: 0
        line 16: 8
        line 16: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: aload_0
         4: invokevirtual #350                // Method self:()C
         7: aload_1
         8: invokevirtual #43                 // Method scala/runtime/RichChar$.equals$extension:(CLjava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;
            0      12     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.immutable.IndexedSeq to(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/IndexedSeq;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #373                // Method to:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
         6: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/runtime/RichChar;
            0       7     1   end   Ljava/lang/Object;
            0       7     2  step   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final
      step                           final

  public java.lang.Object to(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #376                // Method to:(Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Inclusive;
         5: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1   end   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final

  public scala.collection.immutable.IndexedSeq until(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/IndexedSeq;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #378                // Method until:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
         6: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/runtime/RichChar;
            0       7     1   end   Ljava/lang/Object;
            0       7     2  step   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final
      step                           final

  public java.lang.Object until(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #380                // Method until:(Ljava/lang/Object;)Lscala/collection/immutable/NumericRange$Exclusive;
         5: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichChar;
            0       6     1   end   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      end                            final

  public java.lang.Object min(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: aload_1
         9: invokestatic  #386                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        12: istore_3
        13: istore_2
        14: getstatic     #158                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        17: pop
        18: iload_2
        19: iload_3
        20: invokestatic  #164                // Method java/lang/Math.min:(II)I
        23: i2c
        24: invokestatic  #390                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        27: areturn
      LineNumberTable:
        line 16: 4
        line 34: 14
        line 16: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/runtime/RichChar;
            0      28     1  that   Ljava/lang/Object;
           14      10     2 min$extension_$this   C
           14      10     3 min$extension_that   C
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Object max(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: aload_1
         9: invokestatic  #386                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        12: istore_3
        13: istore_2
        14: getstatic     #158                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        17: pop
        18: iload_2
        19: iload_3
        20: invokestatic  #168                // Method java/lang/Math.max:(II)I
        23: i2c
        24: invokestatic  #390                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        27: areturn
      LineNumberTable:
        line 16: 4
        line 33: 14
        line 16: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/runtime/RichChar;
            0      28     1  that   Ljava/lang/Object;
           14      10     2 max$extension_$this   C
           14      10     3 max$extension_that   C
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Object abs();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: invokestatic  #390                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        11: areturn
      LineNumberTable:
        line 16: 4
        line 16: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichChar;

  public scala.math.Ordering ord();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: pop
         9: getstatic     #185                // Field scala/math/Ordering$Char$.MODULE$:Lscala/math/Ordering$Char$;
        12: areturn
      LineNumberTable:
        line 16: 4
        line 18: 9
        line 16: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichChar;

  public scala.math.Numeric num();
    descriptor: ()Lscala/math/Numeric;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: pop
         9: getstatic     #190                // Field scala/math/Numeric$CharIsIntegral$.MODULE$:Lscala/math/Numeric$CharIsIntegral$;
        12: areturn
      LineNumberTable:
        line 16: 4
        line 17: 9
        line 16: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichChar;

  public scala.math.Integral num();
    descriptor: ()Lscala/math/Integral;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: pop
         4: aload_0
         5: invokevirtual #350                // Method self:()C
         8: pop
         9: getstatic     #190                // Field scala/math/Numeric$CharIsIntegral$.MODULE$:Lscala/math/Numeric$CharIsIntegral$;
        12: areturn
      LineNumberTable:
        line 16: 4
        line 17: 9
        line 16: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichChar;

  public java.lang.Object self();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #350                // Method self:()C
         4: invokestatic  #398                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
         7: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/runtime/RichChar;

  public scala.runtime.RichChar(char);
    descriptor: (C)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #346                // Field self:C
         5: aload_0
         6: invokespecial #403                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichChar;
            0      10     1  self   C
    MethodParameters:
      Name                           Flags
      self                           final
}
InnerClasses:
  public static #16= #13 of #15;          // Exclusive=class scala/collection/immutable/NumericRange$Exclusive of class scala/collection/immutable/NumericRange
  public static #19= #18 of #15;          // Inclusive=class scala/collection/immutable/NumericRange$Inclusive of class scala/collection/immutable/NumericRange
  public static #24= #21 of #23;          // CharIsIntegral$=class scala/math/Numeric$CharIsIntegral$ of class scala/math/Numeric
  public static #29= #26 of #28;          // Char$=class scala/math/Ordering$Char$ of class scala/math/Ordering
Signature: #3                           // Ljava/lang/Object;Lscala/runtime/IntegralProxy<Ljava/lang/Object;>;
SourceFile: "RichChar.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t\u001df\u0001B*U\u0005eC\u0001\"\u001a\u0001\u0003\u0006\u0004%\tA\u001a\u0005\tO\u0002\u0011\t\u0011)A\u0005E\")\u0001\u000e\u0001C\u0001S\")A\u000e\u0001C\t[\")a\u0010\u0001C\t\u007f\"9\u0011q\u0002\u0001\u0005B\u0005E\u0001bBA\r\u0001\u0011\u0005\u00131\u0004\u0005\b\u0003G\u0001A\u0011IA\u0013\u0011\u001d\ti\u0003\u0001C!\u0003_Aq!a\u000e\u0001\t\u0003\nI\u0004C\u0004\u0002B\u0001!\t%a\u0011\t\u000f\u0005-\u0003\u0001\"\u0011\u0002N!1\u0011Q\u000b\u0001\u0005B\u0019Dq!a\u0016\u0001\t\u0003\nI\u0006C\u0004\u0002`\u0001!\t%!\u0019\t\u000f\u0005\u0015\u0004\u0001\"\u0001\u00020!9\u0011q\r\u0001\u0005\u0002\u00055\u0003bBA5\u0001\u0011\u0005\u0011Q\n\u0005\b\u0003W\u0002A\u0011AA\'\u0011\u001d\ti\u0007\u0001C\u0001\u0003\u001bBq!a\u001c\u0001\t\u0003\ti\u0005C\u0004\u0002r\u0001!\t!!\u0014\t\u000f\u0005M\u0004\u0001\"\u0001\u0002N!9\u0011Q\u000f\u0001\u0005\u0002\u00055\u0003bBA<\u0001\u0011\u0005\u0011Q\n\u0005\b\u0003s\u0002A\u0011AA\'\u0011\u001d\tY\b\u0001C\u0001\u0003\u001bBq!! \u0001\t\u0003\ti\u0005C\u0004\u0002\u0000\u0001!\t!!\u0014\t\u000f\u0005\u0005\u0005\u0001\"\u0001\u0002N!9\u00111\u0011\u0001\u0005\u0002\u00055\u0003bBAC\u0001\u0011\u0005\u0011Q\n\u0005\u0007\u0003\u000f\u0003A\u0011\u00014\t\r\u0005%\u0005\u0001\"\u0001g\u0011\u0019\tY\t\u0001C\u0001M\"9\u0011Q\u0012\u0001\u0005\u0002\u0005=\u0002bBAH\u0001\u0011\u0005\u0011q\u0006\u0005\b\u0003#\u0003A\u0011AA\u001d\u0011\u0019\t\u0019\n\u0001C\u0001M\"I\u0011Q\u0013\u0001\u0002\u0002\u0013\u0005\u0013q\u0013\u0005\n\u00033\u0003\u0011\u0011!C!\u00037;\u0011\"a*U\u0003\u0003E\t!!+\u0007\u0011M#\u0016\u0011!E\u0001\u0003WCa\u0001[\u0016\u0005\u0002\u0005M\u0006bBA[W\u0011\u0015\u0011q\u0017\u0005\b\u0003{[CQAA`\u0011\u001d\t\u0019m\u000bC\u0003\u0003\u000bDq!!3,\t\u000b\tY\rC\u0004\u0002P.\")!!5\t\u000f\u0005U7\u0006\"\u0002\u0002X\"9\u00111\\\u0016\u0005\u0006\u0005u\u0007bBAqW\u0011\u0015\u00111\u001d\u0005\b\u0003O\\CQAAu\u0011\u001d\tio\u000bC\u0003\u0003_Dq!a=,\t\u000b\t)\u0010C\u0004\u0002~.\")!a@\t\u000f\t\u001d1\u0006\"\u0002\u0003\n!9!QB\u0016\u0005\u0006\t=\u0001b\u0002B\nW\u0011\u0015!Q\u0003\u0005\b\u00053YCQ\u0001B\u000e\u0011\u001d\u0011yb\u000bC\u0003\u0005CAqA!\n,\t\u000b\u00119\u0003C\u0004\u0003,-\")A!\f\t\u000f\tE2\u0006\"\u0002\u00034!9!qG\u0016\u0005\u0006\te\u0002b\u0002B\u001fW\u0011\u0015!q\b\u0005\b\u0005\u0007ZCQ\u0001B#\u0011\u001d\u0011Ie\u000bC\u0003\u0005\u0017BqAa\u0014,\t\u000b\u0011\t\u0006C\u0004\u0003V-\")Aa\u0016\t\u000f\tm3\u0006\"\u0002\u0003^!9!\u0011M\u0016\u0005\u0006\t\r\u0004b\u0002B4W\u0011\u0015!\u0011\u000e\u0005\b\u0005[ZCQ\u0001B8\u0011\u001d\u0011\u0019h\u000bC\u0003\u0005kBqA!\u001f,\t\u000b\u0011Y\bC\u0004\u0003\u0000-\")A!!\t\u000f\t\u00155\u0006\"\u0002\u0003\b\"9!1R\u0016\u0005\u0006\t5\u0005b\u0002BIW\u0011\u0015!1\u0013\u0005\n\u0005/[\u0013\u0011!C\u0003\u00053C\u0011B!(,\u0003\u0003%)Aa(\u0003\u0011IK7\r[\"iCJT!!\u0016,\u0002\u000fI,h\u000e^5nK*\tq+A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001Qf\f\u0005\u0002\\96\ta+\u0003\u0002^-\n1\u0011I\\=WC2\u00042a\u00181c\u001b\u0005!\u0016BA1U\u00055Ie\u000e^3he\u0006d\u0007K]8ysB\u00111lY\u0005\u0003IZ\u0013Aa\u00115be\u0006!1/\u001a7g+\u0005\u0011\u0017!B:fY\u001a\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002kWB\u0011q\f\u0001\u0005\u0006K\u000e\u0001\rAY\u0001\u0004]VlW#\u00018\u0011\u0005=\\hB\u00019y\u001d\t\thO\u0004\u0002sk6\t1O\u0003\u0002u1\u00061AH]8pizJ\u0011aV\u0005\u0003oZ\u000bA!\\1uQ&\u0011\u0011P_\u0001\b\u001dVlWM]5d\u0015\t9hK\u0003\u0002}{\u0006q1\t[1s\u0013NLe\u000e^3he\u0006d\'BA={\u0003\ry\'\u000fZ\u000b\u0003\u0003\u0003\u0001B!a\u0001\u0002\n9\u0019\u0001/!\u0002\n\u0007\u0005\u001d!0\u0001\u0005Pe\u0012,\'/\u001b8h\u0015\u0011\tY!!\u0004\u0002\t\rC\u0017M\u001d\u0006\u0004\u0003\u000fQ\u0018a\u00033pk\ndWMV1mk\u0016,\"!a\u0005\u0011\u0007m\u000b)\"C\u0002\u0002\u0018Y\u0013a\u0001R8vE2,\u0017A\u00034m_\u0006$h+\u00197vKV\u0011\u0011Q\u0004\t\u00047\u0006}\u0011bAA\u0011-\n)a\t\\8bi\u0006IAn\u001c8h-\u0006dW/Z\u000b\u0003\u0003O\u00012aWA\u0015\u0013\r\tYC\u0016\u0002\u0005\u0019>tw-\u0001\u0005j]R4\u0016\r\\;f+\t\t\t\u0004E\u0002\\\u0003gI1!!\u000eW\u0005\rIe\u000e^\u0001\nEf$XMV1mk\u0016,\"!a\u000f\u0011\u0007m\u000bi$C\u0002\u0002@Y\u0013AAQ=uK\u0006Q1\u000f[8siZ\u000bG.^3\u0016\u0005\u0005\u0015\u0003cA.\u0002H%\u0019\u0011\u0011\n,\u0003\u000bMCwN\u001d;\u0002\u0017%\u001ch+\u00197jI\u000eC\u0017M]\u000b\u0003\u0003\u001f\u00022aWA)\u0013\r\t\u0019F\u0016\u0002\b\u0005>|G.Z1o\u0003\r\t\'m]\u0001\u0004[\u0006DHc\u00012\u0002\\!1\u0011Q\f\bA\u0002\t\fA\u0001\u001e5bi\u0006\u0019Q.\u001b8\u0015\u0007\t\f\u0019\u0007\u0003\u0004\u0002^=\u0001\rAY\u0001\bCN$\u0015nZ5u\u0003%I7oQ8oiJ|G.A\u0004jg\u0012Kw-\u001b;\u0002\u0011%\u001cH*\u001a;uKJ\fq\"[:MKR$XM](s\t&<\u0017\u000e^\u0001\rSN<\u0006.\u001b;fgB\f7-Z\u0001\fSN\u001c\u0006/Y2f\u0007\"\f\'/A\bjg\"Kw\r[*veJ|w-\u0019;f\u00039I7\u000fT8x\'V\u0014(o\\4bi\u0016\f1\"[:TkJ\u0014xnZ1uK\u0006A\u0012n]+oS\u000e|G-Z%eK:$\u0018NZ5feN#\u0018M\u001d;\u0002/%\u001cXK\\5d_\u0012,\u0017\nZ3oi&4\u0017.\u001a:QCJ$\u0018!F5t\u0013\u0012,g\u000e^5gS\u0016\u0014\u0018j\u001a8pe\u0006\u0014G.Z\u0001\u000bSNl\u0015N\u001d:pe\u0016$\u0017aB5t\u0019><XM]\u0001\bSN,\u0006\u000f]3s\u0003-I7\u000fV5uY\u0016\u001c\u0015m]3\u0002\u000fQ|Gj\\<fe\u00069Ao\\+qa\u0016\u0014\u0018a\u0003;p)&$H.Z\"bg\u0016\fqaZ3u)f\u0004X-A\bhKRtU/\\3sS\u000e4\u0016\r\\;f\u0003E9W\r\u001e#je\u0016\u001cG/[8oC2LG/_\u0001\re\u00164XM]:f\u0005f$Xm]\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u0011\u0011G\u0001\u0007KF,\u0018\r\\:\u0015\t\u0005=\u0013Q\u0014\u0005\n\u0003?K\u0013\u0011!a\u0001\u0003C\u000b1\u0001\u001f\u00132!\rY\u00161U\u0005\u0004\u0003K3&aA!os\u0006A!+[2i\u0007\"\f\'\u000f\u0005\u0002`WM\u00191&!,\u0011\u0007m\u000by+C\u0002\u00022Z\u0013a!\u00118z%\u00164GCAAU\u00035qW/\u001c\u0013fqR,gn]5p]R\u0019a.!/\t\r\u0005mV\u00061\u0001k\u0003\u0015!C\u000f[5t\u00035y\'\u000f\u001a\u0013fqR,gn]5p]R!\u0011\u0011AAa\u0011\u0019\tYL\fa\u0001U\u0006)Bm\\;cY\u00164\u0016\r\\;fI\u0015DH/\u001a8tS>tG\u0003BA\n\u0003\u000fDa!a/0\u0001\u0004Q\u0017\u0001\u00064m_\u0006$h+\u00197vK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002\u001e\u00055\u0007BBA^a\u0001\u0007!.A\nm_:<g+\u00197vK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002(\u0005M\u0007BBA^c\u0001\u0007!.\u0001\nj]R4\u0016\r\\;fI\u0015DH/\u001a8tS>tG\u0003BA\u0019\u00033Da!a/3\u0001\u0004Q\u0017a\u00052zi\u00164\u0016\r\\;fI\u0015DH/\u001a8tS>tG\u0003BA\u001e\u0003?Da!a/4\u0001\u0004Q\u0017\u0001F:i_J$h+\u00197vK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002F\u0005\u0015\bBBA^i\u0001\u0007!.A\u000bjgZ\u000bG.\u001b3DQ\u0006\u0014H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005=\u00131\u001e\u0005\u0007\u0003w+\u0004\u0019\u00016\u0002\u001b\u0005\u00147\u000fJ3yi\u0016t7/[8o)\r\u0011\u0017\u0011\u001f\u0005\u0007\u0003w3\u0004\u0019\u00016\u0002\u001b5\f\u0007\u0010J3yi\u0016t7/[8o)\u0011\t90a?\u0015\u0007\t\fI\u0010\u0003\u0004\u0002^]\u0002\rA\u0019\u0005\u0007\u0003w;\u0004\u0019\u00016\u0002\u001b5Lg\u000eJ3yi\u0016t7/[8o)\u0011\u0011\tA!\u0002\u0015\u0007\t\u0014\u0019\u0001\u0003\u0004\u0002^a\u0002\rA\u0019\u0005\u0007\u0003wC\u0004\u0019\u00016\u0002#\u0005\u001cH)[4ji\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u00022\t-\u0001BBA^s\u0001\u0007!.A\njg\u000e{g\u000e\u001e:pY\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\tE\u0001BBA^u\u0001\u0007!.A\tjg\u0012Kw-\u001b;%Kb$XM\\:j_:$B!a\u0014\u0003\u0018!1\u00111X\u001eA\u0002)\f!#[:MKR$XM\u001d\u0013fqR,gn]5p]R!\u0011q\nB\u000f\u0011\u0019\tY\f\u0010a\u0001U\u0006I\u0012n\u001d\'fiR,\'o\u0014:ES\u001eLG\u000fJ3yi\u0016t7/[8o)\u0011\tyEa\t\t\r\u0005mV\b1\u0001k\u0003YI7o\u00165ji\u0016\u001c\b/Y2fI\u0015DH/\u001a8tS>tG\u0003BA(\u0005SAa!a/?\u0001\u0004Q\u0017!F5t\'B\f7-Z\"iCJ$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u001f\u0012y\u0003\u0003\u0004\u0002<~\u0002\rA[\u0001\u001aSND\u0015n\u001a5TkJ\u0014xnZ1uK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\tU\u0002BBA^\u0001\u0002\u0007!.\u0001\rjg2{woU;se><\u0017\r^3%Kb$XM\\:j_:$B!a\u0014\u0003<!1\u00111X!A\u0002)\fQ#[:TkJ\u0014xnZ1uK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\t\u0005\u0003BBA^\u0005\u0002\u0007!.\u0001\u0012jgVs\u0017nY8eK&#WM\u001c;jM&,\'o\u0015;beR$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u001f\u00129\u0005\u0003\u0004\u0002<\u000e\u0003\rA[\u0001\"SN,f.[2pI\u0016LE-\u001a8uS\u001aLWM\u001d)beR$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u001f\u0012i\u0005\u0003\u0004\u0002<\u0012\u0003\rA[\u0001 SNLE-\u001a8uS\u001aLWM]%h]>\u0014\u0018M\u00197fI\u0015DH/\u001a8tS>tG\u0003BA(\u0005\'Ba!a/F\u0001\u0004Q\u0017\u0001F5t\u001b&\u0014(o\u001c:fI\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0002P\te\u0003BBA^\r\u0002\u0007!.A\tjg2{w/\u001a:%Kb$XM\\:j_:$B!a\u0014\u0003`!1\u00111X$A\u0002)\f\u0011#[:VaB,\'\u000fJ3yi\u0016t7/[8o)\u0011\tyE!\u001a\t\r\u0005m\u0006\n1\u0001k\u0003UI7\u000fV5uY\u0016\u001c\u0015m]3%Kb$XM\\:j_:$B!a\u0014\u0003l!1\u00111X%A\u0002)\f\u0011\u0003^8M_^,\'\u000fJ3yi\u0016t7/[8o)\r\u0011\'\u0011\u000f\u0005\u0007\u0003wS\u0005\u0019\u00016\u0002#Q|W\u000b\u001d9fe\u0012*\u0007\u0010^3og&|g\u000eF\u0002c\u0005oBa!a/L\u0001\u0004Q\u0017!\u0006;p)&$H.Z\"bg\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0004E\nu\u0004BBA^\u0019\u0002\u0007!.A\thKR$\u0016\u0010]3%Kb$XM\\:j_:$B!!\r\u0003\u0004\"1\u00111X\'A\u0002)\f\u0011dZ3u\u001dVlWM]5d-\u0006dW/\u001a\u0013fqR,gn]5p]R!\u0011\u0011\u0007BE\u0011\u0019\tYL\u0014a\u0001U\u0006Yr-\u001a;ESJ,7\r^5p]\u0006d\u0017\u000e^=%Kb$XM\\:j_:$B!a\u000f\u0003\u0010\"1\u00111X(A\u0002)\faC]3wKJ\u001cXMQ=uKN$S\r\u001f;f]NLwN\u001c\u000b\u0004E\nU\u0005BBA^!\u0002\u0007!.\u0001\niCND7i\u001c3fI\u0015DH/\u001a8tS>tG\u0003BAL\u00057Ca!a/R\u0001\u0004Q\u0017\u0001E3rk\u0006d7\u000fJ3yi\u0016t7/[8o)\u0011\u0011\tK!*\u0015\t\u0005=#1\u0015\u0005\n\u0003?\u0013\u0016\u0011!a\u0001\u0003CCa!a/S\u0001\u0004Q\u0007"
    )
  ScalaInlineInfo: length = 0x185 (unknown attribute)
   01 01 00 4D 00 FE 00 F7 01 01 06 00 F7 01 00 F6
   00 F7 01 01 02 00 F7 01 01 8F 01 90 01 01 68 01
   18 01 01 68 00 E0 01 01 6B 00 E8 01 01 65 01 20
   01 00 ED 00 EE 01 01 0A 00 EE 01 01 61 01 3D 01
   01 72 00 F7 01 01 62 01 37 01 00 3B 01 20 01 00
   3F 00 E8 01 00 43 00 E8 01 00 31 00 E8 01 01 64
   00 E8 01 01 6C 00 D8 01 00 8B 00 D8 01 00 77 00
   D8 01 00 64 00 D8 01 00 87 00 D8 01 00 83 00 D8
   01 00 73 00 D8 01 01 6E 00 D8 01 00 60 00 D8 01
   00 7B 00 D8 01 01 6D 00 D8 01 00 54 00 D8 01 00
   68 00 D8 01 00 6C 00 D8 01 01 6F 00 D8 01 01 42
   00 D8 01 01 67 00 D8 01 01 4B 00 D8 01 01 47 00
   D8 01 00 7F 00 D8 01 00 D7 00 D8 01 01 63 01 31
   01 00 A6 00 35 01 00 A6 01 76 01 00 A1 00 35 01
   00 A1 01 76 01 01 5B 01 8B 01 01 5B 01 5C 01 01
   5B 01 8A 01 01 5F 01 60 01 01 5F 01 89 01 00 36
   01 18 01 00 1E 01 18 01 00 1E 00 E0 01 01 66 01
   26 01 00 DF 00 E0 01 00 E7 00 E8 01 00 CD 01 76
   01 00 CD 00 CE 01 00 CD 01 73 01 00 CD 00 D3 01
   01 1F 01 20 01 01 17 01 18 01 01 3C 01 3D 01 01
   36 01 37 01 01 2B 00 E8 01 01 30 01 31 01 01 70
   01 18 01 01 25 01 26 01 01 0F 01 10 01 00 47 01
   18 01 01 71 01 18 01 01 53 00 F7 01 01 4F 00 E8
   01 00 BF 01 76 01 00 BF 00 C0 01 00 BF 01 73 01
   00 BF 00 C8 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
