Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/cli/CliOpt$Type$Path.class
  Last modified May 29, 2022; size 7525 bytes
  SHA-256 checksum 6752264a922ba378803751dad49eab0e63a25221559333167c319a07351ba2b4
  Compiled from "CliOpt.scala"
public final class org.sireum.cli.CliOpt$Type$Path implements org.sireum.cli.CliOpt$Type
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/cli/CliOpt$Type$Path
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 24, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/cli/CliOpt$Type$Path
    #2 = Class              #1            // org/sireum/cli/CliOpt$Type$Path
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/cli/CliOpt$Type
    #6 = Class              #5            // org/sireum/cli/CliOpt$Type
    #7 = Utf8               CliOpt.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/cli/CliOpt
   #14 = Class              #13           // org/sireum/cli/CliOpt
   #15 = Utf8               Type
   #16 = Utf8               org/sireum/cli/CliOpt$Type$
   #17 = Class              #16           // org/sireum/cli/CliOpt$Type$
   #18 = Utf8               Type$
   #19 = Utf8               Path
   #20 = Utf8               hashCode
   #21 = Utf8               I
   #22 = Utf8               $content
   #23 = Utf8               Lscala/collection/immutable/Seq;
   #24 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #25 = Utf8               _multiple
   #26 = Utf8               Z
   #27 = Utf8               _bdefault
   #28 = Utf8               _default
   #29 = Utf8               Ljava/lang/String;
   #30 = Utf8               bitmap$0
   #31 = Utf8               B
   #32 = Utf8               hash
   #33 = Utf8               ()Lorg/sireum/Z;
   #34 = Utf8               org/sireum/DatatypeSig
   #35 = Class              #34           // org/sireum/DatatypeSig
   #36 = Utf8               hash$
   #37 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #38 = NameAndType        #36:#37       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #39 = InterfaceMethodref #35.#38       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #40 = Utf8               this
   #41 = Utf8               Lorg/sireum/cli/CliOpt$Type$Path;
   #42 = Utf8               $cannotMixImmutableAndMutable
   #43 = Utf8               ()Lscala/runtime/Nothing$;
   #44 = Utf8               org/sireum/Immutable
   #45 = Class              #44           // org/sireum/Immutable
   #46 = Utf8               $cannotMixImmutableAndMutable$
   #47 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #48 = NameAndType        #46:#47       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #49 = InterfaceMethodref #45.#48       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #50 = Utf8               $hasEquals
   #51 = Utf8               ()Z
   #52 = Utf8               $hasEquals$
   #53 = Utf8               (Lorg/sireum/Immutable;)Z
   #54 = NameAndType        #52:#53       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #55 = InterfaceMethodref #45.#54       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #56 = Utf8               $hasString
   #57 = Utf8               $hasString$
   #58 = NameAndType        #57:#53       // $hasString$:(Lorg/sireum/Immutable;)Z
   #59 = InterfaceMethodref #45.#58       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #60 = Utf8               $clone
   #61 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #62 = Utf8               org/sireum/$internal/ImmutableMarker
   #63 = Class              #62           // org/sireum/$internal/ImmutableMarker
   #64 = Utf8               $clone$
   #65 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #66 = NameAndType        #64:#65       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #67 = InterfaceMethodref #63.#66       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #68 = Utf8               multiple
   #69 = NameAndType        #25:#26       // _multiple:Z
   #70 = Fieldref           #2.#69        // org/sireum/cli/CliOpt$Type$Path._multiple:Z
   #71 = Utf8               getMultiple
   #72 = Utf8               default
   #73 = Utf8               ()Lorg/sireum/Option;
   #74 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/String;>;
   #75 = NameAndType        #27:#26       // _bdefault:Z
   #76 = Fieldref           #2.#75        // org/sireum/cli/CliOpt$Type$Path._bdefault:Z
   #77 = Utf8               org/sireum/None$
   #78 = Class              #77           // org/sireum/None$
   #79 = Utf8               MODULE$
   #80 = Utf8               Lorg/sireum/None$;
   #81 = NameAndType        #79:#80       // MODULE$:Lorg/sireum/None$;
   #82 = Fieldref           #78.#81       // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #83 = Utf8               apply
   #84 = Utf8               ()Lorg/sireum/None;
   #85 = NameAndType        #83:#84       // apply:()Lorg/sireum/None;
   #86 = Methodref          #78.#85       // org/sireum/None$.apply:()Lorg/sireum/None;
   #87 = Utf8               org/sireum/Some$
   #88 = Class              #87           // org/sireum/Some$
   #89 = Utf8               Lorg/sireum/Some$;
   #90 = NameAndType        #79:#89       // MODULE$:Lorg/sireum/Some$;
   #91 = Fieldref           #88.#90       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #92 = Utf8               org/sireum/String
   #93 = Class              #92           // org/sireum/String
   #94 = NameAndType        #28:#29       // _default:Ljava/lang/String;
   #95 = Fieldref           #2.#94        // org/sireum/cli/CliOpt$Type$Path._default:Ljava/lang/String;
   #96 = Utf8               <init>
   #97 = Utf8               (Ljava/lang/String;)V
   #98 = NameAndType        #96:#97       // "<init>":(Ljava/lang/String;)V
   #99 = Methodref          #93.#98       // org/sireum/String."<init>":(Ljava/lang/String;)V
  #100 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #101 = NameAndType        #83:#100      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #102 = Methodref          #88.#101      // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #103 = Utf8               getDefault
  #104 = NameAndType        #72:#73       // default:()Lorg/sireum/Option;
  #105 = Methodref          #2.#104       // org/sireum/cli/CliOpt$Type$Path.default:()Lorg/sireum/Option;
  #106 = Utf8               toString
  #107 = Utf8               ()Ljava/lang/String;
  #108 = NameAndType        #56:#51       // $hasString:()Z
  #109 = Methodref          #2.#108       // org/sireum/cli/CliOpt$Type$Path.$hasString:()Z
  #110 = Utf8               string$
  #111 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #112 = NameAndType        #110:#111     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #113 = InterfaceMethodref #35.#112      // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #114 = Utf8               java/lang/StringBuilder
  #115 = Class              #114          // java/lang/StringBuilder
  #116 = Utf8               ()V
  #117 = NameAndType        #96:#116      // "<init>":()V
  #118 = Methodref          #115.#117     // java/lang/StringBuilder."<init>":()V
  #119 = String             #19           // Path
  #120 = Utf8               append
  #121 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #122 = NameAndType        #120:#121     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #123 = Methodref          #115.#122     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #124 = Utf8               (C)Ljava/lang/StringBuilder;
  #125 = NameAndType        #120:#124     // append:(C)Ljava/lang/StringBuilder;
  #126 = Methodref          #115.#125     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #127 = Utf8               org/sireum/String$
  #128 = Class              #127          // org/sireum/String$
  #129 = Utf8               Lorg/sireum/String$;
  #130 = NameAndType        #79:#129      // MODULE$:Lorg/sireum/String$;
  #131 = Fieldref           #128.#130     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #132 = Utf8               org/sireum/B
  #133 = Class              #132          // org/sireum/B
  #134 = NameAndType        #68:#51       // multiple:()Z
  #135 = Methodref          #2.#134       // org/sireum/cli/CliOpt$Type$Path.multiple:()Z
  #136 = Utf8               (Z)V
  #137 = NameAndType        #96:#136      // "<init>":(Z)V
  #138 = Methodref          #133.#137     // org/sireum/B."<init>":(Z)V
  #139 = Utf8               escape
  #140 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #141 = NameAndType        #139:#140     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #142 = Methodref          #128.#141     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #143 = Utf8               ,
  #144 = String             #143          // ,
  #145 = NameAndType        #106:#107     // toString:()Ljava/lang/String;
  #146 = Methodref          #115.#145     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #147 = Utf8               sb
  #148 = Utf8               Ljava/lang/StringBuilder;
  #149 = Utf8               java/lang/String
  #150 = Class              #149          // java/lang/String
  #151 = Utf8               string
  #152 = Methodref          #2.#145       // org/sireum/cli/CliOpt$Type$Path.toString:()Ljava/lang/String;
  #153 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #154 = NameAndType        #83:#153      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #155 = Methodref          #128.#154     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #156 = Utf8               hashCode$lzycompute
  #157 = Utf8               ()I
  #158 = NameAndType        #30:#31       // bitmap$0:B
  #159 = Fieldref           #2.#158       // org/sireum/cli/CliOpt$Type$Path.bitmap$0:B
  #160 = NameAndType        #50:#51       // $hasEquals:()Z
  #161 = Methodref          #2.#160       // org/sireum/cli/CliOpt$Type$Path.$hasEquals:()Z
  #162 = NameAndType        #20:#157      // hashCode:()I
  #163 = Methodref          #4.#162       // java/lang/Object.hashCode:()I
  #164 = Utf8               scala/package$
  #165 = Class              #164          // scala/package$
  #166 = Utf8               Lscala/package$;
  #167 = NameAndType        #79:#166      // MODULE$:Lscala/package$;
  #168 = Fieldref           #165.#167     // scala/package$.MODULE$:Lscala/package$;
  #169 = Utf8               Seq
  #170 = Utf8               ()Lscala/collection/immutable/Seq$;
  #171 = NameAndType        #169:#170     // Seq:()Lscala/collection/immutable/Seq$;
  #172 = Methodref          #165.#171     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #173 = Utf8               scala/runtime/ScalaRunTime$
  #174 = Class              #173          // scala/runtime/ScalaRunTime$
  #175 = Utf8               Lscala/runtime/ScalaRunTime$;
  #176 = NameAndType        #79:#175      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #177 = Fieldref           #174.#176     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #178 = Utf8               getClass
  #179 = Utf8               ()Ljava/lang/Class;
  #180 = NameAndType        #178:#179     // getClass:()Ljava/lang/Class;
  #181 = Methodref          #2.#180       // org/sireum/cli/CliOpt$Type$Path.getClass:()Ljava/lang/Class;
  #182 = Utf8               java/lang/Class
  #183 = Class              #182          // java/lang/Class
  #184 = Utf8               getName
  #185 = NameAndType        #184:#107     // getName:()Ljava/lang/String;
  #186 = Methodref          #183.#185     // java/lang/Class.getName:()Ljava/lang/String;
  #187 = Utf8               genericWrapArray
  #188 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #189 = NameAndType        #187:#188     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #190 = Methodref          #174.#189     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #191 = Utf8               scala/collection/immutable/Seq$
  #192 = Class              #191          // scala/collection/immutable/Seq$
  #193 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #194 = NameAndType        #83:#193      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #195 = Methodref          #192.#194     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #196 = Utf8               scala/collection/Seq
  #197 = Class              #196          // scala/collection/Seq
  #198 = InterfaceMethodref #197.#162     // scala/collection/Seq.hashCode:()I
  #199 = NameAndType        #20:#21       // hashCode:I
  #200 = Fieldref           #2.#199       // org/sireum/cli/CliOpt$Type$Path.hashCode:I
  #201 = Utf8               java/lang/Throwable
  #202 = Class              #201          // java/lang/Throwable
  #203 = NameAndType        #156:#157     // hashCode$lzycompute:()I
  #204 = Methodref          #2.#203       // org/sireum/cli/CliOpt$Type$Path.hashCode$lzycompute:()I
  #205 = Utf8               equals
  #206 = Utf8               (Ljava/lang/Object;)Z
  #207 = Utf8               o
  #208 = NameAndType        #205:#206     // equals:(Ljava/lang/Object;)Z
  #209 = Methodref          #4.#208       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #210 = Methodref          #2.#162       // org/sireum/cli/CliOpt$Type$Path.hashCode:()I
  #211 = Utf8               Ljava/lang/Object;
  #212 = Utf8               org/sireum/Option
  #213 = Class              #212          // org/sireum/Option
  #214 = Utf8               (ZLorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Path;
  #215 = Utf8               (ZLorg/sireum/Option<Lorg/sireum/String;>;)Lorg/sireum/cli/CliOpt$Type$Path;
  #216 = Utf8               (ZLorg/sireum/Option;)V
  #217 = NameAndType        #96:#216      // "<init>":(ZLorg/sireum/Option;)V
  #218 = Methodref          #2.#217       // org/sireum/cli/CliOpt$Type$Path."<init>":(ZLorg/sireum/Option;)V
  #219 = Utf8               Lorg/sireum/Option;
  #220 = Utf8               apply$default$1
  #221 = Utf8               apply$default$2
  #222 = Utf8               $content$lzycompute
  #223 = Utf8               ()Lscala/collection/immutable/Seq;
  #224 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #225 = Utf8               scala/Tuple2
  #226 = Class              #225          // scala/Tuple2
  #227 = Utf8               type
  #228 = String             #227          // type
  #229 = Utf8               List
  #230 = Utf8               ()Lscala/collection/immutable/List$;
  #231 = NameAndType        #229:#230     // List:()Lscala/collection/immutable/List$;
  #232 = Methodref          #165.#231     // scala/package$.List:()Lscala/collection/immutable/List$;
  #233 = Utf8               org
  #234 = String             #233          // org
  #235 = Utf8               sireum
  #236 = String             #235          // sireum
  #237 = Utf8               cli
  #238 = String             #237          // cli
  #239 = Utf8               [Ljava/lang/Object;
  #240 = Class              #239          // "[Ljava/lang/Object;"
  #241 = Utf8               wrapRefArray
  #242 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #243 = NameAndType        #241:#242     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #244 = Methodref          #174.#243     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #245 = Utf8               scala/collection/immutable/List$
  #246 = Class              #245          // scala/collection/immutable/List$
  #247 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #248 = NameAndType        #83:#247      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #249 = Methodref          #246.#248     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #250 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #251 = NameAndType        #96:#250      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #252 = Methodref          #226.#251     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #253 = String             #68           // multiple
  #254 = String             #72           // default
  #255 = Utf8               scala/collection/immutable/Seq
  #256 = Class              #255          // scala/collection/immutable/Seq
  #257 = NameAndType        #22:#23       // $content:Lscala/collection/immutable/Seq;
  #258 = Fieldref           #2.#257       // org/sireum/cli/CliOpt$Type$Path.$content:Lscala/collection/immutable/Seq;
  #259 = NameAndType        #222:#223     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #260 = Methodref          #2.#259       // org/sireum/cli/CliOpt$Type$Path.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #261 = Utf8               ()Ljava/lang/Object;
  #262 = NameAndType        #60:#61       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #263 = Methodref          #2.#262       // org/sireum/cli/CliOpt$Type$Path.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #264 = Utf8               $anonfun$_default$2
  #265 = Utf8               value
  #266 = NameAndType        #265:#107     // value:()Ljava/lang/String;
  #267 = Methodref          #93.#266      // org/sireum/String.value:()Ljava/lang/String;
  #268 = Utf8               (ZLorg/sireum/Option<Lorg/sireum/String;>;)V
  #269 = Utf8               __multiple
  #270 = Utf8               __default
  #271 = Methodref          #4.#117       // java/lang/Object."<init>":()V
  #272 = Utf8               $init$
  #273 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #274 = NameAndType        #272:#273     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #275 = InterfaceMethodref #63.#274      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #276 = Utf8               (Lorg/sireum/Immutable;)V
  #277 = NameAndType        #272:#276     // $init$:(Lorg/sireum/Immutable;)V
  #278 = InterfaceMethodref #45.#277      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #279 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #280 = NameAndType        #272:#279     // $init$:(Lorg/sireum/DatatypeSig;)V
  #281 = InterfaceMethodref #35.#280      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #282 = Utf8               isEmpty
  #283 = NameAndType        #282:#51      // isEmpty:()Z
  #284 = InterfaceMethodref #213.#283     // org/sireum/Option.isEmpty:()Z
  #285 = MethodType         #261          //  ()Ljava/lang/Object;
  #286 = Utf8               $anonfun$_default$2$adapted
  #287 = NameAndType        #286:#261     // $anonfun$_default$2$adapted:()Ljava/lang/Object;
  #288 = Methodref          #2.#287       // org/sireum/cli/CliOpt$Type$Path.$anonfun$_default$2$adapted:()Ljava/lang/Object;
  #289 = MethodHandle       6:#288        // REF_invokeStatic org/sireum/cli/CliOpt$Type$Path.$anonfun$_default$2$adapted:()Ljava/lang/Object;
  #290 = Integer            1
  #291 = Utf8               java/lang/invoke/LambdaMetafactory
  #292 = Class              #291          // java/lang/invoke/LambdaMetafactory
  #293 = Utf8               altMetafactory
  #294 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #295 = NameAndType        #293:#294     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #296 = Methodref          #292.#295     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #297 = MethodHandle       6:#296        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #298 = Utf8               ()Lscala/Function0;
  #299 = NameAndType        #83:#298      // apply:()Lscala/Function0;
  #300 = InvokeDynamic      #0:#299       // #0:apply:()Lscala/Function0;
  #301 = Utf8               getOrElse
  #302 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #303 = NameAndType        #301:#302     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #304 = InterfaceMethodref #213.#303     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #305 = NameAndType        #264:#107     // $anonfun$_default$2:()Ljava/lang/String;
  #306 = Methodref          #2.#305       // org/sireum/cli/CliOpt$Type$Path.$anonfun$_default$2:()Ljava/lang/String;
  #307 = Utf8               $deserializeLambda$
  #308 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #309 = Utf8               scala/runtime/LambdaDeserialize
  #310 = Class              #309          // scala/runtime/LambdaDeserialize
  #311 = Utf8               bootstrap
  #312 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #313 = NameAndType        #311:#312     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #314 = Methodref          #310.#313     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #315 = MethodHandle       6:#314        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #316 = Utf8               lambdaDeserialize
  #317 = NameAndType        #316:#308     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #318 = InvokeDynamic      #1:#317       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #319 = Utf8               Signature
  #320 = Utf8               Code
  #321 = Utf8               LineNumberTable
  #322 = Utf8               LocalVariableTable
  #323 = Utf8               StackMapTable
  #324 = Utf8               MethodParameters
  #325 = Utf8               InnerClasses
  #326 = Utf8               SourceFile
  #327 = Utf8               BootstrapMethods
  #328 = Utf8               ScalaInlineInfo
  #329 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #24                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final boolean _multiple;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bdefault;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _default;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #39                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #49                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #55                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public boolean multiple();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #70                 // Field _multiple:Z
         4: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public boolean getMultiple();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #70                 // Field _multiple:Z
         4: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public org.sireum.Option<org.sireum.String> default();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #76                 // Field _bdefault:Z
         4: ifeq          16
         7: getstatic     #82                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #86                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #91                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #93                 // class org/sireum/String
        22: dup
        23: aload_0
        24: getfield      #95                 // Field _default:Ljava/lang/String;
        27: invokespecial #99                 // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        30: invokevirtual #102                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
    Signature: #74                          // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.Option<org.sireum.String> getDefault();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #105                // Method default:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
    Signature: #74                          // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #113                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          91
        14: new           #115                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #118                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #119                // String Path
        25: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #126                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #131                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #133                // class org/sireum/B
        43: dup
        44: aload_0
        45: invokevirtual #135                // Method multiple:()Z
        48: invokespecial #138                // Method org/sireum/B."<init>":(Z)V
        51: invokevirtual #142                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: ldc           #144                // String ,
        61: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: getstatic     #131                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        69: aload_0
        70: invokevirtual #105                // Method default:()Lorg/sireum/Option;
        73: invokevirtual #142                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: bipush        41
        83: invokevirtual #126                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        91: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 76
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      69     1    sb   Ljava/lang/StringBuilder;
            0      92     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #113                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #131                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #152                // Method toString:()Ljava/lang/String;
        21: invokevirtual #155                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #159                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     102
        15: aload_0
        16: aload_0
        17: invokevirtual #161                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #163                // Method java/lang/Object.hashCode:()I
        27: goto          88
        30: getstatic     #168                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #172                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #177                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_3
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #181                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #186                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: new           #133                // class org/sireum/B
        58: dup
        59: aload_0
        60: invokevirtual #135                // Method multiple:()Z
        63: invokespecial #138                // Method org/sireum/B."<init>":(Z)V
        66: aastore
        67: dup
        68: iconst_2
        69: aload_0
        70: invokevirtual #105                // Method default:()Lorg/sireum/Option;
        73: aastore
        74: invokevirtual #190                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        77: invokevirtual #195                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        80: checkcast     #197                // class scala/collection/Seq
        83: invokeinterface #198,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        88: putfield      #200                // Field hashCode:I
        91: aload_0
        92: aload_0
        93: getfield      #159                // Field bitmap$0:B
        96: iconst_1
        97: ior
        98: i2b
        99: putfield      #159                // Field bitmap$0:B
       102: aload_1
       103: monitorexit
       104: goto          110
       107: aload_1
       108: monitorexit
       109: athrow
       110: aload_0
       111: getfield      #200                // Field hashCode:I
       114: ireturn
      Exception table:
         from    to  target type
             4   102   107   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/cli/CliOpt$Type$Path, class org/sireum/cli/CliOpt$Type$Path ]
          stack = [ class org/sireum/cli/CliOpt$Type$Path ]
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class org/sireum/cli/CliOpt$Type$Path, class org/sireum/cli/CliOpt$Type$Path ]
          stack = [ class org/sireum/cli/CliOpt$Type$Path, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     115     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #159                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #204                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #200                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #161                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #209                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          117
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          117
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/cli/CliOpt$Type$Path
        30: ifeq          108
        33: aload_3
        34: checkcast     #2                  // class org/sireum/cli/CliOpt$Type$Path
        37: astore        4
        39: aload_0
        40: invokevirtual #210                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #210                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          104
        55: aload_0
        56: invokevirtual #135                // Method multiple:()Z
        59: aload         4
        61: invokevirtual #135                // Method multiple:()Z
        64: if_icmpne     103
        67: aload_0
        68: invokevirtual #105                // Method default:()Lorg/sireum/Option;
        71: aload         4
        73: invokevirtual #105                // Method default:()Lorg/sireum/Option;
        76: astore        5
        78: dup
        79: ifnonnull     91
        82: pop
        83: aload         5
        85: ifnull        99
        88: goto          103
        91: aload         5
        93: invokevirtual #209                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        96: ifeq          103
        99: iconst_1
       100: goto          104
       103: iconst_0
       104: istore_2
       105: goto          116
       108: goto          111
       111: iconst_0
       112: istore_2
       113: goto          116
       116: iload_2
       117: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Path ]
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/sireum/cli/CliOpt$Type$Path, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Path, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/cli/CliOpt$Type$Path, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/cli/CliOpt$Type$Path, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     118     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
            0     118     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.cli.CliOpt$Type$Path apply(boolean, org.sireum.Option<org.sireum.String>);
    descriptor: (ZLorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/sireum/cli/CliOpt$Type$Path
         3: dup
         4: iload_1
         5: aload_2
         6: invokespecial #218                // Method "<init>":(ZLorg/sireum/Option;)V
         9: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
            0      10     1 multiple   Z
            0      10     2 default   Lorg/sireum/Option;
    Signature: #215                         // (ZLorg/sireum/Option<Lorg/sireum/String;>;)Lorg/sireum/cli/CliOpt$Type$Path;
    MethodParameters:
      Name                           Flags
      multiple                       final
      default                        final

  public boolean apply$default$1();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #135                // Method multiple:()Z
         4: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public org.sireum.Option<org.sireum.String> apply$default$2();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #105                // Method default:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
    Signature: #74                          // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #159                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     148
        15: aload_0
        16: getstatic     #168                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #172                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #177                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_3
        26: anewarray     #226                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #226                // class scala/Tuple2
        34: dup
        35: ldc           #228                // String type
        37: getstatic     #168                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #232                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #177                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #150                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #234                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #236                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #238                // String cli
        64: aastore
        65: dup
        66: iconst_3
        67: ldc           #119                // String Path
        69: aastore
        70: checkcast     #240                // class "[Ljava/lang/Object;"
        73: invokevirtual #244                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        76: invokevirtual #249                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        79: invokespecial #252                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_1
        85: new           #226                // class scala/Tuple2
        88: dup
        89: ldc           #253                // String multiple
        91: new           #133                // class org/sireum/B
        94: dup
        95: aload_0
        96: invokevirtual #135                // Method multiple:()Z
        99: invokespecial #138                // Method org/sireum/B."<init>":(Z)V
       102: invokespecial #252                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       105: aastore
       106: dup
       107: iconst_2
       108: new           #226                // class scala/Tuple2
       111: dup
       112: ldc           #254                // String default
       114: aload_0
       115: invokevirtual #105                // Method default:()Lorg/sireum/Option;
       118: invokespecial #252                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       121: aastore
       122: checkcast     #240                // class "[Ljava/lang/Object;"
       125: invokevirtual #244                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       128: invokevirtual #195                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       131: checkcast     #256                // class scala/collection/immutable/Seq
       134: putfield      #258                // Field $content:Lscala/collection/immutable/Seq;
       137: aload_0
       138: aload_0
       139: getfield      #159                // Field bitmap$0:B
       142: iconst_2
       143: ior
       144: i2b
       145: putfield      #159                // Field bitmap$0:B
       148: aload_1
       149: monitorexit
       150: goto          156
       153: aload_1
       154: monitorexit
       155: athrow
       156: aload_0
       157: getfield      #258                // Field $content:Lscala/collection/immutable/Seq;
       160: areturn
      Exception table:
         from    to  target type
             4   148   153   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 148
          locals = [ class org/sireum/cli/CliOpt$Type$Path ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     161     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
    Signature: #224                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #159                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #260                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #258                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
    Signature: #224                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #263                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Path;

  public static final java.lang.String $anonfun$_default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: ifnonnull     8
         4: aconst_null
         5: goto          12
         8: aconst_null
         9: invokevirtual #267                // Method org/sireum/String.value:()Ljava/lang/String;
        12: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 95: 8

  public org.sireum.cli.CliOpt$Type$Path(boolean, org.sireum.Option<org.sireum.String>);
    descriptor: (ZLorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #271                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #275                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #278                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #281                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: iload_1
        18: putfield      #70                 // Field _multiple:Z
        21: aload_0
        22: aload_2
        23: invokeinterface #284,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        28: putfield      #76                 // Field _bdefault:Z
        31: aload_0
        32: aload_2
        33: invokedynamic #300,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        38: invokeinterface #304,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        43: checkcast     #93                 // class org/sireum/String
        46: invokevirtual #267                // Method org/sireum/String.value:()Ljava/lang/String;
        49: putfield      #95                 // Field _default:Ljava/lang/String;
        52: return
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Lorg/sireum/cli/CliOpt$Type$Path;
            0      53     1 __multiple   Z
            0      53     2 __default   Lorg/sireum/Option;
    Signature: #268                         // (ZLorg/sireum/Option<Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      __multiple                     final
      __default                      final

  public static final java.lang.Object $anonfun$_default$2$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #93                 // class org/sireum/String
         3: dup
         4: invokestatic  #306                // Method $anonfun$_default$2:()Ljava/lang/String;
         7: invokespecial #99                 // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 95: 0

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #318,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #6 of #14;           // Type=class org/sireum/cli/CliOpt$Type of class org/sireum/cli/CliOpt
  public static #18= #17 of #14;          // Type$=class org/sireum/cli/CliOpt$Type$ of class org/sireum/cli/CliOpt
  public static final #19= #2 of #17;     // Path=class org/sireum/cli/CliOpt$Type$Path of class org/sireum/cli/CliOpt$Type$
SourceFile: "CliOpt.scala"
BootstrapMethods:
  0: #297 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #285 ()Ljava/lang/Object;
      #289 REF_invokeStatic org/sireum/cli/CliOpt$Type$Path.$anonfun$_default$2$adapted:()Ljava/lang/Object;
      #285 ()Ljava/lang/Object;
      #290 1
  1: #315 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #289 REF_invokeStatic org/sireum/cli/CliOpt$Type$Path.$anonfun$_default$2$adapted:()Ljava/lang/Object;
  ScalaInlineInfo: length = 0x77 (unknown attribute)
   01 01 00 17 01 08 00 6B 01 01 1E 01 05 01 00 2A
   00 2B 01 00 3C 01 05 01 00 3C 00 3D 01 00 16 00
   DF 01 00 DE 00 DF 01 00 32 00 33 01 00 38 00 33
   01 00 60 00 D8 01 00 53 00 D6 01 00 DC 00 33 01
   00 DD 00 49 01 00 48 00 49 01 00 CD 00 CE 01 00
   67 00 49 01 00 47 00 33 01 00 20 00 21 01 00 14
   00 9D 01 00 9C 00 9D 01 00 44 00 33 01 00 97 00
   6B 01 00 6A 00 6B 01
  Scala: length = 0x0 (unknown attribute)

