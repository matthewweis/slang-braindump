Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/$internal/Macro$.class
  Last modified May 29, 2022; size 5232 bytes
  SHA-256 checksum e2b4d9218f5ac1d5cbde41c153c323d98fdc8d60efd605edcd0e45e113c49e91
  Compiled from "Macro.scala"
public final class org.sireum.$internal.Macro$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/$internal/Macro$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/$internal/Macro$
    #2 = Class              #1            // org/sireum/$internal/Macro$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Macro.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/reflect/api/Exprs$Expr
   #12 = Class              #11           // scala/reflect/api/Exprs$Expr
   #13 = Utf8               scala/reflect/api/Exprs
   #14 = Class              #13           // scala/reflect/api/Exprs
   #15 = Utf8               Expr
   #16 = Utf8               scala/reflect/api/Trees$TreeApi
   #17 = Class              #16           // scala/reflect/api/Trees$TreeApi
   #18 = Utf8               scala/reflect/api/Trees
   #19 = Class              #18           // scala/reflect/api/Trees
   #20 = Utf8               TreeApi
   #21 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag
   #22 = Class              #21           // scala/reflect/api/TypeTags$WeakTypeTag
   #23 = Utf8               scala/reflect/api/TypeTags
   #24 = Class              #23           // scala/reflect/api/TypeTags
   #25 = Utf8               WeakTypeTag
   #26 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag$
   #27 = Class              #26           // scala/reflect/api/TypeTags$WeakTypeTag$
   #28 = Utf8               WeakTypeTag$
   #29 = Utf8               MODULE$
   #30 = Utf8               Lorg/sireum/$internal/Macro$;
   #31 = Utf8               templateString
   #32 = Utf8               Ljava/lang/String;
   #33 = Utf8               <clinit>
   #34 = Utf8               ()V
   #35 = Utf8               <init>
   #36 = NameAndType        #35:#34       // "<init>":()V
   #37 = Methodref          #2.#36        // org/sireum/$internal/Macro$."<init>":()V
   #38 = NameAndType        #29:#30       // MODULE$:Lorg/sireum/$internal/Macro$;
   #39 = Fieldref           #2.#38        // org/sireum/$internal/Macro$.MODULE$:Lorg/sireum/$internal/Macro$;
   #40 = Utf8               st\"...\"
   #41 = String             #40           // st\"...\"
   #42 = NameAndType        #31:#32       // templateString:Ljava/lang/String;
   #43 = Fieldref           #2.#42        // org/sireum/$internal/Macro$.templateString:Ljava/lang/String;
   #44 = Utf8               ()Ljava/lang/String;
   #45 = Utf8               this
   #46 = Utf8               eval
   #47 = Utf8               (Lscala/reflect/macros/blackbox/Context;Ljava/lang/Object;I)Ljava/lang/Object;
   #48 = Utf8               <T:Ljava/lang/Object;>(Lscala/reflect/macros/blackbox/Context;Ljava/lang/Object;I)TT;
   #49 = Utf8               c
   #50 = Utf8               t
   #51 = Utf8               n
   #52 = Utf8               scala/runtime/NonLocalReturnControl
   #53 = Class              #52           // scala/runtime/NonLocalReturnControl
   #54 = Methodref          #4.#36        // java/lang/Object."<init>":()V
   #55 = Utf8               scala/reflect/macros/blackbox/Context
   #56 = Class              #55           // scala/reflect/macros/blackbox/Context
   #57 = Utf8               untypecheck
   #58 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #59 = NameAndType        #57:#58       // untypecheck:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #60 = InterfaceMethodref #56.#59       // scala/reflect/macros/blackbox/Context.untypecheck:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #61 = Utf8               universe
   #62 = Utf8               ()Lscala/reflect/macros/Universe;
   #63 = NameAndType        #61:#62       // universe:()Lscala/reflect/macros/Universe;
   #64 = InterfaceMethodref #56.#63       // scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
   #65 = Utf8               scala/reflect/macros/Universe
   #66 = Class              #65           // scala/reflect/macros/Universe
   #67 = Utf8               ()Lscala/reflect/api/TypeTags$WeakTypeTag$;
   #68 = NameAndType        #25:#67       // WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
   #69 = Methodref          #66.#68       // scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
   #70 = Utf8               Nothing
   #71 = Utf8               ()Lscala/reflect/api/TypeTags$WeakTypeTag;
   #72 = NameAndType        #70:#71       // Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
   #73 = Methodref          #27.#72       // scala/reflect/api/TypeTags$WeakTypeTag$.Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
   #74 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
   #75 = NameAndType        #15:#74       // Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
   #76 = InterfaceMethodref #56.#75       // scala/reflect/macros/blackbox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
   #77 = Utf8               scala/runtime/RichInt$
   #78 = Class              #77           // scala/runtime/RichInt$
   #79 = Utf8               Lscala/runtime/RichInt$;
   #80 = NameAndType        #29:#79       // MODULE$:Lscala/runtime/RichInt$;
   #81 = Fieldref           #78.#80       // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
   #82 = Utf8               scala/Predef$
   #83 = Class              #82           // scala/Predef$
   #84 = Utf8               Lscala/Predef$;
   #85 = NameAndType        #29:#84       // MODULE$:Lscala/Predef$;
   #86 = Fieldref           #83.#85       // scala/Predef$.MODULE$:Lscala/Predef$;
   #87 = Utf8               intWrapper
   #88 = Utf8               (I)I
   #89 = NameAndType        #87:#88       // intWrapper:(I)I
   #90 = Methodref          #83.#89       // scala/Predef$.intWrapper:(I)I
   #91 = Utf8               until$extension
   #92 = Utf8               (II)Lscala/collection/immutable/Range;
   #93 = NameAndType        #91:#92       // until$extension:(II)Lscala/collection/immutable/Range;
   #94 = Methodref          #78.#93       // scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
   #95 = Utf8               (I)V
   #96 = MethodType         #95           //  (I)V
   #97 = Utf8               $anonfun$eval$1
   #98 = Utf8               (Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;I)V
   #99 = NameAndType        #97:#98       // $anonfun$eval$1:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;I)V
  #100 = Methodref          #2.#99        // org/sireum/$internal/Macro$.$anonfun$eval$1:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;I)V
  #101 = MethodHandle       6:#100        // REF_invokeStatic org/sireum/$internal/Macro$.$anonfun$eval$1:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;I)V
  #102 = Integer            1
  #103 = Utf8               java/lang/invoke/LambdaMetafactory
  #104 = Class              #103          // java/lang/invoke/LambdaMetafactory
  #105 = Utf8               altMetafactory
  #106 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #107 = NameAndType        #105:#106     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #108 = Methodref          #104.#107     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #109 = MethodHandle       6:#108        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #110 = Utf8               apply$mcVI$sp
  #111 = Utf8               (Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #112 = NameAndType        #110:#111     // apply$mcVI$sp:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #113 = InvokeDynamic      #0:#112       // #0:apply$mcVI$sp:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #114 = Utf8               scala/collection/immutable/Range
  #115 = Class              #114          // scala/collection/immutable/Range
  #116 = Utf8               foreach$mVc$sp
  #117 = Utf8               (Lscala/Function1;)V
  #118 = NameAndType        #116:#117     // foreach$mVc$sp:(Lscala/Function1;)V
  #119 = Methodref          #115.#118     // scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
  #120 = Utf8               (Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  #121 = NameAndType        #46:#120      // eval:(Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  #122 = InterfaceMethodref #56.#121      // scala/reflect/macros/blackbox/Context.eval:(Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  #123 = Utf8               key
  #124 = Utf8               ()Ljava/lang/Object;
  #125 = NameAndType        #123:#124     // key:()Ljava/lang/Object;
  #126 = Methodref          #53.#125      // scala/runtime/NonLocalReturnControl.key:()Ljava/lang/Object;
  #127 = Utf8               value
  #128 = NameAndType        #127:#124     // value:()Ljava/lang/Object;
  #129 = Methodref          #53.#128      // scala/runtime/NonLocalReturnControl.value:()Ljava/lang/Object;
  #130 = Utf8               tree
  #131 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #132 = Utf8               expr
  #133 = Utf8               Lscala/reflect/api/Exprs$Expr;
  #134 = Utf8               ex
  #135 = Utf8               Lscala/runtime/NonLocalReturnControl;
  #136 = Utf8               Lscala/reflect/macros/blackbox/Context;
  #137 = Utf8               Ljava/lang/Object;
  #138 = Utf8               I
  #139 = Utf8               eval$default$3
  #140 = Utf8               (Lscala/reflect/macros/blackbox/Context;)I
  #141 = Utf8               <T:Ljava/lang/Object;>(Lscala/reflect/macros/blackbox/Context;)I
  #142 = Utf8               $anonfun$eval$2
  #143 = Utf8               (Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  #144 = Utf8               c$1
  #145 = Utf8               expr$1
  #146 = Utf8               nonLocalReturnKey1$1
  #147 = Utf8               x$1
  #148 = Utf8               scala/util/Try$
  #149 = Class              #148          // scala/util/Try$
  #150 = Utf8               Lscala/util/Try$;
  #151 = NameAndType        #29:#150      // MODULE$:Lscala/util/Try$;
  #152 = Fieldref           #149.#151     // scala/util/Try$.MODULE$:Lscala/util/Try$;
  #153 = MethodType         #124          //  ()Ljava/lang/Object;
  #154 = NameAndType        #142:#143     // $anonfun$eval$2:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  #155 = Methodref          #2.#154       // org/sireum/$internal/Macro$.$anonfun$eval$2:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  #156 = MethodHandle       6:#155        // REF_invokeStatic org/sireum/$internal/Macro$.$anonfun$eval$2:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  #157 = Utf8               apply
  #158 = Utf8               (Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/Function0;
  #159 = NameAndType        #157:#158     // apply:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/Function0;
  #160 = InvokeDynamic      #1:#159       // #1:apply:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/Function0;
  #161 = Utf8               (Lscala/Function0;)Lscala/util/Try;
  #162 = NameAndType        #157:#161     // apply:(Lscala/Function0;)Lscala/util/Try;
  #163 = Methodref          #149.#162     // scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
  #164 = Utf8               scala/util/Success
  #165 = Class              #164          // scala/util/Success
  #166 = Methodref          #165.#128     // scala/util/Success.value:()Ljava/lang/Object;
  #167 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #168 = NameAndType        #35:#167      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #169 = Methodref          #53.#168      // scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #170 = Utf8               scala/runtime/BoxedUnit
  #171 = Class              #170          // scala/runtime/BoxedUnit
  #172 = Utf8               UNIT
  #173 = Utf8               Lscala/runtime/BoxedUnit;
  #174 = NameAndType        #172:#173     // UNIT:Lscala/runtime/BoxedUnit;
  #175 = Fieldref           #171.#174     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #176 = Long               100l
  #178 = Utf8               wait
  #179 = Utf8               (J)V
  #180 = NameAndType        #178:#179     // wait:(J)V
  #181 = Methodref          #2.#180       // org/sireum/$internal/Macro$.wait:(J)V
  #182 = Utf8               x
  #183 = Utf8               scala/util/Try
  #184 = Class              #183          // scala/util/Try
  #185 = Utf8               java/lang/Throwable
  #186 = Class              #185          // java/lang/Throwable
  #187 = Utf8               $deserializeLambda$
  #188 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #189 = Utf8               scala/runtime/LambdaDeserialize
  #190 = Class              #189          // scala/runtime/LambdaDeserialize
  #191 = Utf8               bootstrap
  #192 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #193 = NameAndType        #191:#192     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #194 = Methodref          #190.#193     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #195 = MethodHandle       6:#194        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #196 = Utf8               lambdaDeserialize
  #197 = NameAndType        #196:#188     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #198 = InvokeDynamic      #2:#197       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #199 = Utf8               Code
  #200 = Utf8               LineNumberTable
  #201 = Utf8               LocalVariableTable
  #202 = Utf8               StackMapTable
  #203 = Utf8               Signature
  #204 = Utf8               MethodParameters
  #205 = Utf8               InnerClasses
  #206 = Utf8               SourceFile
  #207 = Utf8               BootstrapMethods
  #208 = Utf8               ScalaInlineInfo
  #209 = Utf8               commitHash
  #210 = Utf8               isJs
  #211 = Utf8               ()Z
  #212 = Utf8               parMap
  #213 = Utf8               (Ljava/util/concurrent/atomic/AtomicReference;ILscala/collection/Seq;Lscala/Function1;)Lscala/collection/IndexedSeq;
  #214 = Utf8               sync
  #215 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #216 = Utf8               version
  #217 = Utf8               Scala
{
  public static final org.sireum.$internal.Macro$ MODULE$;
    descriptor: Lorg/sireum/$internal/Macro$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.lang.String templateString;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/$internal/Macro$
         3: dup
         4: invokespecial #37                 // Method "<init>":()V
         7: putstatic     #39                 // Field MODULE$:Lorg/sireum/$internal/Macro$;
        10: ldc           #41                 // String st\"...\"
        12: putstatic     #43                 // Field templateString:Ljava/lang/String;
        15: return
      LineNumberTable:
        line 30: 0
        line 31: 10
        line 30: 15

  public java.lang.String templateString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #43                 // Field templateString:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/$internal/Macro$;

  public <T extends java.lang.Object> T eval(scala.reflect.macros.blackbox.Context, java.lang.Object, int);
    descriptor: (Lscala/reflect/macros/blackbox/Context;Ljava/lang/Object;I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=8, args_size=4
         0: new           #4                  // class java/lang/Object
         3: dup
         4: invokespecial #54                 // Method java/lang/Object."<init>":()V
         7: astore        4
         9: aload_2
        10: checkcast     #17                 // class scala/reflect/api/Trees$TreeApi
        13: astore        5
        15: aload_1
        16: aload_1
        17: aload         5
        19: invokeinterface #60,  2           // InterfaceMethod scala/reflect/macros/blackbox/Context.untypecheck:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
        24: aload_1
        25: invokeinterface #64,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        30: invokevirtual #69                 // Method scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
        33: invokevirtual #73                 // Method scala/reflect/api/TypeTags$WeakTypeTag$.Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
        36: invokeinterface #76,  3           // InterfaceMethod scala/reflect/macros/blackbox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
        41: astore        6
        43: getstatic     #81                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        46: getstatic     #86                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        49: iconst_0
        50: invokevirtual #90                 // Method scala/Predef$.intWrapper:(I)I
        53: iload_3
        54: invokevirtual #94                 // Method scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
        57: aload_1
        58: aload         6
        60: aload         4
        62: invokedynamic #113,  0            // InvokeDynamic #0:apply$mcVI$sp:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;)Lscala/runtime/java8/JFunction1$mcVI$sp;
        67: invokevirtual #119                // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
        70: aload_1
        71: aload         6
        73: invokeinterface #122,  2          // InterfaceMethod scala/reflect/macros/blackbox/Context.eval:(Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
        78: goto          107
        81: astore        7
        83: aload         7
        85: invokevirtual #126                // Method scala/runtime/NonLocalReturnControl.key:()Ljava/lang/Object;
        88: aload         4
        90: if_acmpne     101
        93: aload         7
        95: invokevirtual #129                // Method scala/runtime/NonLocalReturnControl.value:()Ljava/lang/Object;
        98: goto          104
       101: aload         7
       103: athrow
       104: goto          107
       107: areturn
      Exception table:
         from    to  target type
             9    78    81   Class scala/runtime/NonLocalReturnControl
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 81
          locals = [ class org/sireum/$internal/Macro$, class scala/reflect/macros/blackbox/Context, class java/lang/Object, int, class java/lang/Object ]
          stack = [ class scala/runtime/NonLocalReturnControl ]
        frame_type = 254 /* append */
          offset_delta = 19
          locals = [ top, top, class scala/runtime/NonLocalReturnControl ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/$internal/Macro$, class scala/reflect/macros/blackbox/Context, class java/lang/Object, int, class java/lang/Object ]
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 44: 0
        line 46: 9
        line 47: 15
        line 48: 43
        line 55: 70
        line 45: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      63     5  tree   Lscala/reflect/api/Trees$TreeApi;
           43      35     6  expr   Lscala/reflect/api/Exprs$Expr;
           81      23     7    ex   Lscala/runtime/NonLocalReturnControl;
            0     108     0  this   Lorg/sireum/$internal/Macro$;
            0     108     1     c   Lscala/reflect/macros/blackbox/Context;
            0     108     2     t   Ljava/lang/Object;
            0     108     3     n   I
    Signature: #48                          // <T:Ljava/lang/Object;>(Lscala/reflect/macros/blackbox/Context;Ljava/lang/Object;I)TT;
    MethodParameters:
      Name                           Flags
      c                              final
      t                              final
      n                              final

  public <T extends java.lang.Object> int eval$default$3(scala.reflect.macros.blackbox.Context);
    descriptor: (Lscala/reflect/macros/blackbox/Context;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: bipush        6
         2: ireturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/sireum/$internal/Macro$;
            0       3     1     c   Lscala/reflect/macros/blackbox/Context;
    Signature: #141                         // <T:Ljava/lang/Object;>(Lscala/reflect/macros/blackbox/Context;)I
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$eval$2(scala.reflect.macros.blackbox.Context, scala.reflect.api.Exprs$Expr);
    descriptor: (Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #122,  2          // InterfaceMethod scala/reflect/macros/blackbox/Context.eval:(Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   c$1   Lscala/reflect/macros/blackbox/Context;
            0       8     1 expr$1   Lscala/reflect/api/Exprs$Expr;
    MethodParameters:
      Name                           Flags
      c$1                            final
      expr$1                         final

  public static final void $anonfun$eval$1(scala.reflect.macros.blackbox.Context, scala.reflect.api.Exprs$Expr, java.lang.Object, int);
    descriptor: (Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=11, args_size=4
         0: iload_3
         1: istore        6
         3: getstatic     #152                // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
         6: aload_0
         7: aload_1
         8: invokedynamic #160,  0            // InvokeDynamic #1:apply:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/Function0;
        13: invokevirtual #163                // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
        16: astore        7
        18: aload         7
        20: instanceof    #165                // class scala/util/Success
        23: ifeq          51
        26: aload         7
        28: checkcast     #165                // class scala/util/Success
        31: astore        8
        33: aload         8
        35: invokevirtual #166                // Method scala/util/Success.value:()Ljava/lang/Object;
        38: astore        9
        40: new           #53                 // class scala/runtime/NonLocalReturnControl
        43: dup
        44: aload_2
        45: aload         9
        47: invokespecial #169                // Method scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        50: athrow
        51: goto          54
        54: getstatic     #175                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        57: astore        5
        59: goto          62
        62: getstatic     #39                 // Field MODULE$:Lorg/sireum/$internal/Macro$;
        65: dup
        66: astore        10
        68: monitorenter
        69: getstatic     #39                 // Field MODULE$:Lorg/sireum/$internal/Macro$;
        72: ldc2_w        #176                // long 100l
        75: invokevirtual #181                // Method wait:(J)V
        78: aload         10
        80: monitorexit
        81: goto          88
        84: aload         10
        86: monitorexit
        87: athrow
        88: getstatic     #175                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        91: astore        4
        93: goto          96
        96: return
      Exception table:
         from    to  target type
            69    78    84   any
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class scala/reflect/macros/blackbox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/Object, int, top, top, int, class scala/util/Try ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class scala/reflect/macros/blackbox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/Object, int, top, class scala/runtime/BoxedUnit, int, class scala/util/Try ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/reflect/macros/blackbox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/Object, int, top, class scala/runtime/BoxedUnit, int, class scala/util/Try, top, top, class org/sireum/$internal/Macro$ ]
          stack = [ class java/lang/Throwable ]
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class scala/reflect/macros/blackbox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/Object, int, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, int, class scala/util/Try, top, top, class org/sireum/$internal/Macro$ ]
          stack = []
      LineNumberTable:
        line 48: 0
        line 49: 3
        line 50: 18
        line 51: 54
        line 53: 62
        line 48: 96
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      11     9     x   Ljava/lang/Object;
            0      97     0   c$1   Lscala/reflect/macros/blackbox/Context;
            0      97     1 expr$1   Lscala/reflect/api/Exprs$Expr;
            0      97     2 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      97     3   x$1   I
    MethodParameters:
      Name                           Flags
      c$1                            final
      expr$1                         final
      nonLocalReturnKey1$1           final
      x$1                            final

  private org.sireum.$internal.Macro$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #54                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/$internal/Macro$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #198,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
  public #20= #17 of #19;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #25= #22 of #24;                 // WeakTypeTag=class scala/reflect/api/TypeTags$WeakTypeTag of class scala/reflect/api/TypeTags
  public #28= #27 of #24;                 // WeakTypeTag$=class scala/reflect/api/TypeTags$WeakTypeTag$ of class scala/reflect/api/TypeTags
SourceFile: "Macro.scala"
BootstrapMethods:
  0: #109 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #96 (I)V
      #101 REF_invokeStatic org/sireum/$internal/Macro$.$anonfun$eval$1:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;I)V
      #96 (I)V
      #102 1
  1: #109 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 ()Ljava/lang/Object;
      #156 REF_invokeStatic org/sireum/$internal/Macro$.$anonfun$eval$2:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
      #153 ()Ljava/lang/Object;
      #102 1
  2: #195 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 REF_invokeStatic org/sireum/$internal/Macro$.$anonfun$eval$1:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/Object;I)V
      #156 REF_invokeStatic org/sireum/$internal/Macro$.$anonfun$eval$2:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 61 00 62 01 00 8E 00 8F 01 00 23
   00 22 01 00 D1 00 2C 01 00 2E 00 2F 01 00 8B 00
   8C 01 00 D2 00 D3 01 00 D4 00 D5 01 00 D6 00 D7
   01 00 1F 00 2C 01 00 D8 00 2C 01
  Scala: length = 0x0 (unknown attribute)

