Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/immutable/HashMap.class
  Last modified May 29, 2022; size 50622 bytes
  SHA-256 checksum 971ca126ef7a6c4b9eec1bd1581d87c67016c027880edfef8320a4dbdd60b7a7
  Compiled from "HashMap.scala"
public final class scala.collection.immutable.HashMap<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.immutable.AbstractMap<K, V> implements scala.collection.immutable.StrictOptimizedMapOps<K, V, scala.collection.immutable.HashMap, scala.collection.immutable.HashMap<K, V>>, scala.collection.generic.DefaultSerializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/immutable/HashMap
  super_class: #5                         // scala/collection/immutable/AbstractMap
  interfaces: 2, fields: 1, methods: 110, attributes: 7
Constant pool:
     #1 = Utf8               scala/collection/immutable/HashMap
     #2 = Class              #1           // scala/collection/immutable/HashMap
     #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/immutable/AbstractMap<TK;TV;>;Lscala/collection/immutable/StrictOptimizedMapOps<TK;TV;Lscala/collection/immutable/HashMap;Lscala/collection/immutable/HashMap<TK;TV;>;>;Lscala/collection/generic/DefaultSerializable;
     #4 = Utf8               scala/collection/immutable/AbstractMap
     #5 = Class              #4           // scala/collection/immutable/AbstractMap
     #6 = Utf8               scala/collection/immutable/StrictOptimizedMapOps
     #7 = Class              #6           // scala/collection/immutable/StrictOptimizedMapOps
     #8 = Utf8               scala/collection/generic/DefaultSerializable
     #9 = Class              #8           // scala/collection/generic/DefaultSerializable
    #10 = Utf8               HashMap.scala
    #11 = Utf8               Lscala/reflect/ScalaSignature;
    #12 = Utf8               bytes
    #13 = Utf8               \u0006\u0005\u0011-a\u0001B!C\u0005%C\u0011\u0002\u001d\u0001\u0003\u0006\u0004%\tAQ9\t\u0011U\u0004!\u0011!Q\u0001\nIDaA\u001e\u0001\u0005\u0002\t;\b\"\u0002<\u0001\t\u0003I\b\"\u0002>\u0001\t\u0003Z\bBB@\u0001\t\u0003\n\t\u0001C\u0004\u0002\n\u0001!\t%!\u0001\t\u000f\u0005-\u0001\u0001\"\u0011\u0002\u000e!9\u0011Q\u0003\u0001\u0005B\u0005]aABA\u0010\u0001\u0019\t\t\u0003\u0003\u0004w\u0015\u0011\u0005\u0011q\u0006\u0005\t\u0003gQ\u0001\u0015\"\u0003\u00026!A\u00111\u0007\u0006!\n\u0013\t)\u0005C\u0004\u0002V)!\t%a\u0016\t\u000f\u0005u#\u0002\"\u0011\u0002`!9\u00111\r\u0006\u0005B\u0005\u0015\u0004bBA9\u0015\u0011\u0005\u00131\u000f\u0005\b\u0003o\u0002A\u0011AA=\u0011\u001d\t9\t\u0001C!\u0003\u0013Cq!!$\u0001\t\u0003\ny\t\u0003\u0005\u0002\u0014\u0002!\tBQA=\u0011\u001d\t)\n\u0001C!\u0003/Cq!!8\u0001\t\u0003\ny\u000eC\u0004\u0002|\u0002!\t%!@\t\u000f\te\u0001\u0001\"\u0012\u0003\u001c!9!\u0011\u0005\u0001\u0005B\t\r\u0002b\u0002B\u0014\u0001\u0011\u0005!\u0011\u0006\u0005\b\u0005g\u0001A\u0011\tB\u001b\u0011!\u0011i\u0005\u0001Q\u0005\n\t=\u0003b\u0002B3\u0001\u0011\u0005!q\r\u0005\b\u0005o\u0002A\u0011\tB=\u0011\u001d\u0011y\t\u0001C\u0001\u0005#CqA!&\u0001\t\u0003\u00129\nC\u0004\u00036\u0002!\tEa.\t\u000f\te\u0006\u0001\"\u0011\u00038\"9!1\u0018\u0001\u0005B\tu\u0006b\u0002B`\u0001\u0011\u0005#Q\u0018\u0005\b\u0005\u0003\u0004A\u0011\tBb\u0011\u001d\u0011I\u000e\u0001C!\u00057D\u0001Ba;\u0001\t\u0003!%Q\u001e\u0005\b\u0005s\u0004A\u0011\tB~\u0011\u001d\u0011y\u0010\u0001C!\u0007\u0003A\u0001ba\u0001\u0001A\u0013E3Q\u0001\u0005\b\u0007/\u0001A\u0011AB\r\u0011\u001d\u0019y\u0003\u0001C!\u0007cA\u0001b!\u0011\u0001\t#\"51\t\u0005\b\u0007\u001b\u0002A\u0011IB(\u0011\u001d\u0019I\u0006\u0001C!\u00077Bqaa\u0019\u0001\t\u0003\u001a)\u0007C\u0004\u0004l\u0001!\te!\u001c\t\u000f\rE\u0004\u0001\"\u0011\u0004t!91q\u000f\u0001\u0005B\re\u0004bBB?\u0001\u0011\u00053q\u0010\u0005\b\u0007\u0007\u0003A\u0011IBC\u0011\u001d\u0019I\t\u0001C!\u0007\u0017;qaa$C\u0011\u0003\u0019\tJ\u0002\u0004B\u0005\"\u000511\u0013\u0005\u0007mf\"\taa\'\t\u0013\ru\u0015H1A\u0005\u000e\r}\u0005\u0002CBRs\u0001\u0006ia!)\t\u000f\r5\u0016\b\"\u0001\u00040\"91QX\u001d\u0005\u0002\r}\u0006bBBls\u0011\u00051\u0011\u001c\u0005\n\u0007kL\u0014\u0011!C\u0005\u0007o\u0014q\u0001S1tQ6\u000b\u0007O\u0003\u0002D\t\u0006I\u0011.\\7vi\u0006\u0014G.\u001a\u0006\u0003\u000b\u001a\u000b!bY8mY\u0016\u001cG/[8o\u0015\u00059\u0015!B:dC2\f7\u0001A\u000b\u0004\u0015Fc6#\u0002\u0001L=\u000eT\u0007\u0003\u0002\'N\u001fnk\u0011AQ\u0005\u0003\u001d\n\u00131\"\u00112tiJ\f7\r^\'baB\u0011\u0001+\u0015\u0007\u0001\t\u0015\u0011\u0006A1\u0001T\u0005\u0005Y\u0015C\u0001+Y!\t)f+D\u0001G\u0013\t9fIA\u0004O_RD\u0017N\\4\u0011\u0005UK\u0016B\u0001.G\u0005\r\te.\u001f\t\u0003!r#a!\u0018\u0001\u0005\u0006\u0004\u0019&!\u0001,\u0011\r1{vjW1c\u0013\t\u0001\'IA\u000bTiJL7\r^(qi&l\u0017N_3e\u001b\u0006\u0004x\n]:\u0011\u00051\u0003\u0001\u0003\u0002\'\u0001\u001fn\u0003b\u0001Z3P7\u0006<W\"\u0001#\n\u0005\u0019$%AE\'ba\u001a\u000b7\r^8ss\u0012+g-Y;miN\u0004\"\u0001\u00145\n\u0005%\u0014%\u0001C%uKJ\f\'\r\\3\u0011\u0005-tW\"\u00017\u000b\u00055$\u0015aB4f]\u0016\u0014\u0018nY\u0005\u0003_2\u00141\u0003R3gCVdGoU3sS\u0006d\u0017N_1cY\u0016\f\u0001B]8pi:{G-Z\u000b\u0002eB!Aj](\\\u0013\t!(I\u0001\u000bCSRl\u0017\r]%oI\u0016DX\rZ\'ba:{G-Z\u0001\ne>|GOT8eK\u0002\na\u0001P5oSRtDC\u00012y\u0011\u0015\u00018\u00011\u0001s)\u0005\u0011\u0017AC7ba\u001a\u000b7\r^8ssV\tA\u0010E\u0002e{\u0006L!A #\u0003\u00155\u000b\u0007OR1di>\u0014\u00180A\u0005l]><hnU5{KV\u0011\u00111\u0001\t\u0004+\u0006\u0015\u0011bAA\u0004\r\n\u0019\u0011J\u001c;\u0002\tML\'0Z\u0001\bSN,U\u000e\u001d;z+\t\ty\u0001E\u0002V\u0003#I1!a\u0005G\u0005\u001d\u0011un\u001c7fC:\faa[3z\'\u0016$XCAA\r!\u0011a\u00151D(\n\u0007\u0005u!IA\u0002TKR\u0014!\u0002S1tQ.+\u0017pU3u\'\rQ\u00111\u0005\t\u0005\u0003K\t9#D\u0001\u0001\u0013\u0011\tI#a\u000b\u0003\u001f%kW.\u001e;bE2,7*Z=TKRL1!!\fC\u0005\u0019i\u0015\r](qgR\u0011\u0011\u0011\u0007\t\u0004\u0003KQ\u0011a\u00048fo.+\u0017pU3u\u001fJ$\u0006.[:\u0015\t\u0005e\u0011q\u0007\u0005\b\u0003sa\u0001\u0019AA\u001e\u0003)qWm\u001e%bg\"l\u0015\r\u001d\u0019\u0005\u0003{\t\t\u0005E\u0003M\u0001=\u000by\u0004E\u0002Q\u0003\u0003\"1\"a\u0011\u00028\u0005\u0005\t\u0011!B\u0001\'\n\u0019q\fJ\u0019\u0015\t\u0005e\u0011q\t\u0005\b\u0003\u0013j\u0001\u0019AA&\u0003-qWm\u001e*p_Rtu\u000eZ31\t\u00055\u0013\u0011\u000b\t\u0006\u0019N|\u0015q\n\t\u0004!\u0006ECaCA*\u0003\u000f\n\t\u0011!A\u0003\u0002M\u00131a\u0018\u00133\u0003\u0011Ign\u00197\u0015\t\u0005e\u0011\u0011\f\u0005\u0007\u00037r\u0001\u0019A(\u0002\t\u0015dW-\\\u0001\u0005Kb\u001cG\u000e\u0006\u0003\u0002\u001a\u0005\u0005\u0004BBA.\u001f\u0001\u0007q*\u0001\u0004gS2$XM\u001d\u000b\u0005\u00033\t9\u0007C\u0004\u0002jA\u0001\r!a\u001b\u0002\tA\u0014X\r\u001a\t\u0007+\u00065t*a\u0004\n\u0007\u0005=dIA\u0005Gk:\u001cG/[8oc\u0005Ia-\u001b7uKJtu\u000e\u001e\u000b\u0005\u00033\t)\bC\u0004\u0002jE\u0001\r!a\u001b\u0002\u0011%$XM]1u_J,\"!a\u001f\u0011\u000b\u0011\fi(!!\n\u0007\u0005}DI\u0001\u0005Ji\u0016\u0014\u0018\r^8s!\u0015)\u00161Q(\\\u0013\r\t)I\u0012\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u0019-,\u0017p]%uKJ\fGo\u001c:\u0016\u0005\u0005-\u0005\u0003\u00023\u0002~=\u000baB^1mk\u0016\u001c\u0018\n^3sCR|\'/\u0006\u0002\u0002\u0012B!A-! \\\u0003=\u0011XM^3sg\u0016LE/\u001a:bi>\u0014\u0018aB:uKB\u0004XM]\u000b\u0005\u00033\u000b\u0019\u000b\u0006\u0003\u0002\u001c\u0006M\'CBAO\u0003C\u000b9L\u0002\u0004\u0002 \u0002\u0001\u00111\u0014\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0004!\u0006\rFaBAS-\t\u0007\u0011q\u0015\u0002\u0002\'F\u0019A+!+1\t\u0005-\u00161\u0017\t\u0006I\u00065\u0016\u0011W\u0005\u0004\u0003_#%aB*uKB\u0004XM\u001d\t\u0004!\u0006MFaCA[\u0003G\u000b\t\u0011!A\u0003\u0002M\u00131a\u0018\u00134!\u0011\tI,!4\u000f\t\u0005m\u0016\u0011\u001a\b\u0005\u0003{\u000b9M\u0004\u0003\u0002@\u0006\u0015WBAAa\u0015\r\t\u0019\rS\u0001\u0007yI|w\u000e\u001e \n\u0003\u001dK!!\u0012$\n\u0007\u0005-G)A\u0004Ti\u0016\u0004\b/\u001a:\n\t\u0005=\u0017\u0011\u001b\u0002\u000f\u000b\u001a4\u0017nY5f]R\u001c\u0006\u000f\\5u\u0015\r\tY\r\u0012\u0005\b\u0003+4\u00029AAl\u0003\u0015\u0019\b.\u00199f!\u001d!\u0017\u0011\\AA\u0003CK1!a7E\u00051\u0019F/\u001a9qKJ\u001c\u0006.\u00199f\u0003)YW-_*uKB\u0004XM]\u000b\u0005\u0003C\fI\u000f\u0006\u0003\u0002d\u0006](CBAs\u0003O\f9L\u0002\u0004\u0002 \u0002\u0001\u00111\u001d\t\u0004!\u0006%HaBAS/\t\u0007\u00111^\t\u0004)\u00065\b\u0007BAx\u0003g\u0004R\u0001ZAW\u0003c\u00042\u0001UAz\t-\t)0!;\u0002\u0002\u0003\u0005)\u0011A*\u0003\u0007}#C\u0007C\u0004\u0002V^\u0001\u001d!!?\u0011\r\u0011\fInTAt\u000311\u0018\r\\;f\'R,\u0007\u000f]3s+\u0011\tyPa\u0002\u0015\t\t\u0005!Q\u0003\n\u0007\u0005\u0007\u0011)!a.\u0007\r\u0005}\u0005\u0001\u0001B\u0001!\r\u0001&q\u0001\u0003\b\u0003KC\"\u0019\u0001B\u0005#\r!&1\u0002\u0019\u0005\u0005\u001b\u0011\t\u0002E\u0003e\u0003[\u0013y\u0001E\u0002Q\u0005#!1Ba\u0005\u0003\b\u0005\u0005\t\u0011!B\u0001\'\n\u0019q\fJ\u001b\t\u000f\u0005U\u0007\u0004q\u0001\u0003\u0018A1A-!7\\\u0005\u000b\t\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003\u001f\u0011i\u0002\u0003\u0004\u0003 e\u0001\raT\u0001\u0004W\u0016L\u0018!B1qa2LHcA.\u0003&!1!q\u0004\u000eA\u0002=\u000b1aZ3u)\u0011\u0011YC!\r\u0011\tU\u0013icW\u0005\u0004\u0005_1%AB(qi&|g\u000e\u0003\u0004\u0003 m\u0001\raT\u0001\nO\u0016$xJ]#mg\u0016,BAa\u000e\u0003<Q1!\u0011\bB!\u0005\u0007\u00022\u0001\u0015B\u001e\t\u001d\u0011i\u0004\bb\u0001\u0005\u007f\u0011!AV\u0019\u0012\u0005mC\u0006B\u0002B\u00109\u0001\u0007q\n\u0003\u0005\u0003Fq!\t\u0019\u0001B$\u0003\u001d!WMZ1vYR\u0004R!\u0016B%\u0005sI1Aa\u0013G\u0005!a$-\u001f8b[\u0016t\u0014\u0001\u00058fo\"\u000b7\u000f[\'ba>\u0013H\u000b[5t+\u0011\u0011\tFa\u0016\u0015\t\tM#\u0011\f\t\u0006\u0019\u0002y%Q\u000b\t\u0004!\n]Ca\u0002B\u001f;\t\u0007!q\b\u0005\b\u0003\u0013j\u0002\u0019\u0001B.!\u0015a5o\u0014B+Q\ri\"q\f\t\u0004+\n\u0005\u0014b\u0001B2\r\n1\u0011N\u001c7j]\u0016\fq!\u001e9eCR,G-\u0006\u0003\u0003j\t=DC\u0002B6\u0005c\u0012\u0019\bE\u0003M\u0001=\u0013i\u0007E\u0002Q\u0005_\"qA!\u0010\u001f\u0005\u0004\u0011y\u0004\u0003\u0004\u0003 y\u0001\ra\u0014\u0005\b\u0005kr\u0002\u0019\u0001B7\u0003\u00151\u0018\r\\;f\u0003-)\b\u000fZ1uK\u0012<\u0016\u000e\u001e5\u0016\t\tm$1\u0011\u000b\u0005\u0005{\u0012i\t\u0006\u0003\u0003\u0000\t\u0015\u0005#\u0002\'\u0001\u001f\n\u0005\u0005c\u0001)\u0003\u0004\u00129!QH\u0010C\u0002\t}\u0002b\u0002BD?\u0001\u0007!\u0011R\u0001\u0012e\u0016l\u0017\r\u001d9j]\u001e4UO\\2uS>t\u0007cB+\u0002n\t-\"1\u0012\t\u0006+\n5\"\u0011\u0011\u0005\u0007\u0005?y\u0002\u0019A(\u0002\u000fI,Wn\u001c<fIR\u0019!Ma%\t\r\t}\u0001\u00051\u0001P\u0003\u0019\u0019wN\\2biV!!\u0011\u0014BP)\u0011\u0011YJ!)\u0011\u000b1\u0003qJ!(\u0011\u0007A\u0013y\nB\u0004\u0003>\u0005\u0012\rAa\u0010\t\u000f\t\r\u0016\u00051\u0001\u0003&\u0006!A\u000f[1u!\u0019\u00119K!,\u00034:!\u0011Q\u0018BU\u0013\r\u0011YKR\u0001\ba\u0006\u001c7.Y4f\u0013\u0011\u0011yK!-\u0003\u0019%#XM]1cY\u0016|enY3\u000b\u0007\t-f\t\u0005\u0004V\u0003\u0007{%QT\u0001\u0005i\u0006LG.F\u0001c\u0003\u0011Ig.\u001b;\u0002\t!,\u0017\rZ\u000b\u0003\u0003\u0003\u000bA\u0001\\1ti\u00069am\u001c:fC\u000eDW\u0003\u0002Bc\u0005+$BAa2\u0003NB\u0019QK!3\n\u0007\t-gI\u0001\u0003V]&$\bb\u0002BhM\u0001\u0007!\u0011[\u0001\u0002MB9Q+!\u001c\u0002\u0002\nM\u0007c\u0001)\u0003V\u00121!q\u001b\u0014C\u0002M\u0013\u0011!V\u0001\rM>\u0014X-Y2i\u000b:$(/_\u000b\u0005\u0005;\u0014I\u000f\u0006\u0003\u0003H\n}\u0007b\u0002BhO\u0001\u0007!\u0011\u001d\t\b+\n\rxj\u0017Bt\u0013\r\u0011)O\u0012\u0002\n\rVt7\r^5p]J\u00022\u0001\u0015Bu\t\u0019\u00119n\nb\u0001\'\u0006yam\u001c:fC\u000eDw+\u001b;i\u0011\u0006\u001c\b\u000e\u0006\u0003\u0003H\n=\bb\u0002BhQ\u0001\u0007!\u0011\u001f\t\n+\nMxjWA\u0002\u0005\u000fL1A!>G\u0005%1UO\\2uS>t7\u0007K\u0002)\u0005?\na!Z9vC2\u001cH\u0003BA\b\u0005{DaAa)*\u0001\u0004A\u0016\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005\r\u0011!C2mCN\u001ch*Y7f+\t\u00199\u0001\u0005\u0003\u0004\n\rMQBAB\u0006\u0015\u0011\u0019iaa\u0004\u0002\t1\fgn\u001a\u0006\u0003\u0007#\tAA[1wC&!1QCB\u0006\u0005\u0019\u0019FO]5oO\u00061Q.\u001a:hK\u0012,Baa\u0007\u0004$Q!1QDB\u0017)\u0011\u0019yb!\n\u0011\u000b1\u0003qj!\t\u0011\u0007A\u001b\u0019\u0003B\u0004\u0003>1\u0012\rAa\u0010\t\u000f\r\u001dB\u00061\u0001\u0004*\u00051Q.\u001a:hK\u001a\u0004\u0012\"\u0016Br\u0003\u0003\u001bYca\u000b\u0011\rU\u000b\u0019iTB\u0011\u0011\u001d\u0011\u0019\u000b\fa\u0001\u0007?\t\u0011\u0002\u001e:b]N4wN]7\u0016\t\rM2\u0011\b\u000b\u0005\u0007k\u0019i\u0004E\u0003M\u0001=\u001b9\u0004E\u0002Q\u0007s!aaa\u000f.\u0005\u0004\u0019&!A,\t\u000f\t=W\u00061\u0001\u0004@A9QKa9P7\u000e]\u0012A\u00034jYR,\'/S7qYR)!m!\u0012\u0004J!9\u0011\u0011\u000e\u0018A\u0002\r\u001d\u0003cB+\u0002n\u0005\u0005\u0015q\u0002\u0005\b\u0007\u0017r\u0003\u0019AA\b\u0003%I7O\u00127jaB,G-\u0001\u0006sK6|g/\u001a3BY2$2AYB)\u0011\u001d\u0019\u0019f\fa\u0001\u0007+\nAa[3zgB)1q\u000bBW\u001f:\u0019QK!+\u0002\u0013A\f\'\u000f^5uS>tG\u0003BB/\u0007?\u0002R!VABE\nDqa!\u00191\u0001\u0004\u00199%A\u0001q\u0003\u0011!\u0018m[3\u0015\u0007\t\u001c9\u0007C\u0004\u0004jE\u0002\r!a\u0001\u0002\u00039\f\u0011\u0002^1lKJKw\r\u001b;\u0015\u0007\t\u001cy\u0007C\u0004\u0004jI\u0002\r!a\u0001\u0002\u0013Q\f7.Z,iS2,Gc\u00012\u0004v!91\u0011M\u001aA\u0002\r\u001d\u0013!\u00033s_B<\u0006.\u001b7f)\r\u001171\u0010\u0005\b\u0007C\"\u0004\u0019AB$\u0003%!\'o\u001c9SS\u001eDG\u000fF\u0002c\u0007\u0003Cqa!\u001b6\u0001\u0004\t\u0019!\u0001\u0003ee>\u0004Hc\u00012\u0004\b\"91\u0011\u000e\u001cA\u0002\u0005\r\u0011\u0001B:qC:$Ba!\u0018\u0004\u000e\"91\u0011M\u001cA\u0002\r\u001d\u0013a\u0002%bg\"l\u0015\r\u001d\t\u0003\u0019f\u001aB!OBKyB\u0019Qka&\n\u0007\reeI\u0001\u0004B]f\u0014VM\u001a\u000b\u0003\u0007#\u000b\u0001\"R7qifl\u0015\r]\u000b\u0003\u0007C\u0003B\u0001\u0014\u0001U)\u0006IQ)\u001c9us6\u000b\u0007\u000f\t\u0015\u0004y\r\u001d\u0006cA+\u0004*&\u001911\u0016$\u0003\u0013Q\u0014\u0018M\\:jK:$\u0018!B3naRLXCBBY\u0007o\u001bY,\u0006\u0002\u00044B1A\nAB[\u0007s\u00032\u0001UB\\\t\u0015\u0011VH1\u0001T!\r\u000161\u0018\u0003\u0006;v\u0012\raU\u0001\u0005MJ|W.\u0006\u0004\u0004B\u000e\u001d71\u001a\u000b\u0005\u0007\u0007\u001ci\r\u0005\u0004M\u0001\r\u00157\u0011\u001a\t\u0004!\u000e\u001dG!\u0002*?\u0005\u0004\u0019\u0006c\u0001)\u0004L\u0012)QL\u0010b\u0001\'\"91q\u001a A\u0002\rE\u0017AB:pkJ\u001cW\rE\u0003e\u0007\'\u001c).C\u0002\u00030\u0012\u0003r!VAB\u0007\u000b\u001cI-\u0001\u0006oK^\u0014U/\u001b7eKJ,baa7\u0004n\u000eEXCABo!!\u0019yn!:\u0004j\u000eMXBABq\u0015\r\u0019\u0019\u000fR\u0001\b[V$\u0018M\u00197f\u0013\u0011\u00199o!9\u0003\u001fI+Wo]1cY\u0016\u0014U/\u001b7eKJ\u0004r!VAB\u0007W\u001cy\u000fE\u0002Q\u0007[$QAU C\u0002M\u00032\u0001UBy\t\u0015ivH1\u0001T!\u0019a\u0005aa;\u0004p\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u00111\u0011 \t\u0005\u0007\u0013\u0019Y0\u0003\u0003\u0004~\u000e-!AB(cU\u0016\u001cG\u000fK\u0004:\t\u0003\u0011)\bb\u0002\u0011\u0007U#\u0019!C\u0002\u0005\u0006\u0019\u0013\u0001cU3sS\u0006dg+\u001a:tS>tW+\u0013#\u001f\u0003\rAs\u0001\u000fC\u0001\u0005k\"9\u0001
    #14 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #15 = Class              #14          // java/lang/invoke/MethodHandles$Lookup
    #16 = Utf8               java/lang/invoke/MethodHandles
    #17 = Class              #16          // java/lang/invoke/MethodHandles
    #18 = Utf8               Lookup
    #19 = Utf8               scala/collection/immutable/HashMap$HashKeySet
    #20 = Class              #19          // scala/collection/immutable/HashMap$HashKeySet
    #21 = Utf8               HashKeySet
    #22 = Utf8               scala/collection/immutable/HashMap$accum$1
    #23 = Class              #22          // scala/collection/immutable/HashMap$accum$1
    #24 = Utf8               accum$1
    #25 = Utf8               scala/collection/immutable/Set$EmptySet$
    #26 = Class              #25          // scala/collection/immutable/Set$EmptySet$
    #27 = Utf8               scala/collection/immutable/Set
    #28 = Class              #27          // scala/collection/immutable/Set
    #29 = Utf8               EmptySet$
    #30 = Utf8               scala/collection/mutable/HashMap$Node
    #31 = Class              #30          // scala/collection/mutable/HashMap$Node
    #32 = Utf8               scala/collection/mutable/HashMap
    #33 = Class              #32          // scala/collection/mutable/HashMap
    #34 = Utf8               Node
    #35 = Utf8               scala/collection/mutable/HashSet$$anon$2
    #36 = Class              #35          // scala/collection/mutable/HashSet$$anon$2
    #37 = Utf8               scala/collection/mutable/HashSet$Node
    #38 = Class              #37          // scala/collection/mutable/HashSet$Node
    #39 = Utf8               scala/collection/mutable/HashSet
    #40 = Class              #39          // scala/collection/mutable/HashSet
    #41 = Utf8               rootNode
    #42 = Utf8               Lscala/collection/immutable/BitmapIndexedMapNode;
    #43 = Utf8               Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;
    #44 = Utf8               newBuilder
    #45 = Utf8               ()Lscala/collection/mutable/ReusableBuilder;
    #46 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/ReusableBuilder<Lscala/Tuple2<TK;TV;>;Lscala/collection/immutable/HashMap<TK;TV;>;>;
    #47 = Utf8               scala/collection/immutable/HashMap$
    #48 = Class              #47          // scala/collection/immutable/HashMap$
    #49 = Utf8               MODULE$
    #50 = Utf8               Lscala/collection/immutable/HashMap$;
    #51 = NameAndType        #49:#50      // MODULE$:Lscala/collection/immutable/HashMap$;
    #52 = Fieldref           #48.#51      // scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
    #53 = Utf8               scala/collection/immutable/HashMapBuilder
    #54 = Class              #53          // scala/collection/immutable/HashMapBuilder
    #55 = Utf8               <init>
    #56 = Utf8               ()V
    #57 = NameAndType        #55:#56      // "<init>":()V
    #58 = Methodref          #54.#57      // scala/collection/immutable/HashMapBuilder."<init>":()V
    #59 = Utf8               from
    #60 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
    #61 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/immutable/HashMap<TK;TV;>;
    #62 = Utf8               source
    #63 = NameAndType        #59:#60      // from:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
    #64 = Methodref          #48.#63      // scala/collection/immutable/HashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
    #65 = Utf8               Lscala/collection/IterableOnce;
    #66 = Utf8               writeReplace
    #67 = Utf8               ()Ljava/lang/Object;
    #68 = Utf8               writeReplace$
    #69 = Utf8               (Lscala/collection/generic/DefaultSerializable;)Ljava/lang/Object;
    #70 = NameAndType        #68:#69      // writeReplace$:(Lscala/collection/generic/DefaultSerializable;)Ljava/lang/Object;
    #71 = InterfaceMethodref #9.#70       // scala/collection/generic/DefaultSerializable.writeReplace$:(Lscala/collection/generic/DefaultSerializable;)Ljava/lang/Object;
    #72 = Utf8               this
    #73 = Utf8               Lscala/collection/immutable/HashMap;
    #74 = Utf8               map
    #75 = Utf8               (Lscala/Function1;)Lscala/collection/IterableOps;
    #76 = Utf8               f
    #77 = Utf8               scala/collection/StrictOptimizedMapOps
    #78 = Class              #77          // scala/collection/StrictOptimizedMapOps
    #79 = Utf8               map$
    #80 = Utf8               (Lscala/collection/StrictOptimizedMapOps;Lscala/Function1;)Lscala/collection/IterableOps;
    #81 = NameAndType        #79:#80      // map$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Function1;)Lscala/collection/IterableOps;
    #82 = InterfaceMethodref #78.#81      // scala/collection/StrictOptimizedMapOps.map$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Function1;)Lscala/collection/IterableOps;
    #83 = Utf8               Lscala/Function1;
    #84 = Utf8               flatMap
    #85 = Utf8               flatMap$
    #86 = NameAndType        #85:#80      // flatMap$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Function1;)Lscala/collection/IterableOps;
    #87 = InterfaceMethodref #78.#86      // scala/collection/StrictOptimizedMapOps.flatMap$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Function1;)Lscala/collection/IterableOps;
    #88 = Utf8               collect
    #89 = Utf8               (Lscala/PartialFunction;)Lscala/collection/IterableOps;
    #90 = Utf8               pf
    #91 = Utf8               collect$
    #92 = Utf8               (Lscala/collection/StrictOptimizedMapOps;Lscala/PartialFunction;)Lscala/collection/IterableOps;
    #93 = NameAndType        #91:#92      // collect$:(Lscala/collection/StrictOptimizedMapOps;Lscala/PartialFunction;)Lscala/collection/IterableOps;
    #94 = InterfaceMethodref #78.#93      // scala/collection/StrictOptimizedMapOps.collect$:(Lscala/collection/StrictOptimizedMapOps;Lscala/PartialFunction;)Lscala/collection/IterableOps;
    #95 = Utf8               Lscala/PartialFunction;
    #96 = Utf8               $plus
    #97 = Utf8               (Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/immutable/Seq;)Lscala/collection/IterableOps;
    #98 = Utf8               elem1
    #99 = Utf8               elem2
   #100 = Utf8               elems
   #101 = Utf8               $plus$
   #102 = Utf8               (Lscala/collection/StrictOptimizedMapOps;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/immutable/Seq;)Lscala/collection/IterableOps;
   #103 = NameAndType        #101:#102    // $plus$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/immutable/Seq;)Lscala/collection/IterableOps;
   #104 = InterfaceMethodref #78.#103     // scala/collection/StrictOptimizedMapOps.$plus$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/immutable/Seq;)Lscala/collection/IterableOps;
   #105 = Utf8               Lscala/Tuple2;
   #106 = Utf8               Lscala/collection/immutable/Seq;
   #107 = Utf8               unzip
   #108 = Utf8               (Lscala/Function1;)Lscala/Tuple2;
   #109 = Utf8               <A1:Ljava/lang/Object;A2:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TA1;TA2;>;>;)Lscala/Tuple2<Lscala/collection/immutable/Iterable<TA1;>;Lscala/collection/immutable/Iterable<TA2;>;>;
   #110 = Utf8               asPair
   #111 = Utf8               scala/collection/StrictOptimizedIterableOps
   #112 = Class              #111         // scala/collection/StrictOptimizedIterableOps
   #113 = Utf8               unzip$
   #114 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
   #115 = NameAndType        #113:#114    // unzip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
   #116 = InterfaceMethodref #112.#115    // scala/collection/StrictOptimizedIterableOps.unzip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
   #117 = Utf8               unzip3
   #118 = Utf8               (Lscala/Function1;)Lscala/Tuple3;
   #119 = Utf8               <A1:Ljava/lang/Object;A2:Ljava/lang/Object;A3:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/Tuple3<TA1;TA2;TA3;>;>;)Lscala/Tuple3<Lscala/collection/immutable/Iterable<TA1;>;Lscala/collection/immutable/Iterable<TA2;>;Lscala/collection/immutable/Iterable<TA3;>;>;
   #120 = Utf8               asTriple
   #121 = Utf8               unzip3$
   #122 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple3;
   #123 = NameAndType        #121:#122    // unzip3$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple3;
   #124 = InterfaceMethodref #112.#123    // scala/collection/StrictOptimizedIterableOps.unzip3$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple3;
   #125 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #126 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #127 = NameAndType        #79:#126     // map$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #128 = InterfaceMethodref #112.#127    // scala/collection/StrictOptimizedIterableOps.map$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #129 = Utf8               strictOptimizedMap
   #130 = Utf8               (Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #131 = Utf8               <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/mutable/Builder<TB;TC2;>;Lscala/Function1<Lscala/Tuple2<TK;TV;>;TB;>;)TC2;
   #132 = Utf8               b
   #133 = Utf8               strictOptimizedMap$
   #134 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #135 = NameAndType        #133:#134    // strictOptimizedMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #136 = InterfaceMethodref #112.#135    // scala/collection/StrictOptimizedIterableOps.strictOptimizedMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #137 = Utf8               Lscala/collection/mutable/Builder;
   #138 = NameAndType        #85:#126     // flatMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #139 = InterfaceMethodref #112.#138    // scala/collection/StrictOptimizedIterableOps.flatMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #140 = Utf8               strictOptimizedFlatMap
   #141 = Utf8               <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/mutable/Builder<TB;TC2;>;Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/collection/IterableOnce<TB;>;>;)TC2;
   #142 = Utf8               strictOptimizedFlatMap$
   #143 = NameAndType        #142:#134    // strictOptimizedFlatMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #144 = InterfaceMethodref #112.#143    // scala/collection/StrictOptimizedIterableOps.strictOptimizedFlatMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #145 = Utf8               strictOptimizedConcat
   #146 = Utf8               (Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
   #147 = Utf8               <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TB;>;Lscala/collection/mutable/Builder<TB;TC2;>;)TC2;
   #148 = Utf8               that
   #149 = Utf8               strictOptimizedConcat$
   #150 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
   #151 = NameAndType        #149:#150    // strictOptimizedConcat$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
   #152 = InterfaceMethodref #112.#151    // scala/collection/StrictOptimizedIterableOps.strictOptimizedConcat$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
   #153 = Utf8               (Lscala/PartialFunction;)Ljava/lang/Object;
   #154 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/PartialFunction;)Ljava/lang/Object;
   #155 = NameAndType        #91:#154     // collect$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/PartialFunction;)Ljava/lang/Object;
   #156 = InterfaceMethodref #112.#155    // scala/collection/StrictOptimizedIterableOps.collect$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/PartialFunction;)Ljava/lang/Object;
   #157 = Utf8               strictOptimizedCollect
   #158 = Utf8               (Lscala/collection/mutable/Builder;Lscala/PartialFunction;)Ljava/lang/Object;
   #159 = Utf8               <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/mutable/Builder<TB;TC2;>;Lscala/PartialFunction<Lscala/Tuple2<TK;TV;>;TB;>;)TC2;
   #160 = Utf8               strictOptimizedCollect$
   #161 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/PartialFunction;)Ljava/lang/Object;
   #162 = NameAndType        #160:#161    // strictOptimizedCollect$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/PartialFunction;)Ljava/lang/Object;
   #163 = InterfaceMethodref #112.#162    // scala/collection/StrictOptimizedIterableOps.strictOptimizedCollect$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/PartialFunction;)Ljava/lang/Object;
   #164 = Utf8               flatten
   #165 = Utf8               toIterableOnce
   #166 = Utf8               flatten$
   #167 = NameAndType        #166:#126    // flatten$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #168 = InterfaceMethodref #112.#167    // scala/collection/StrictOptimizedIterableOps.flatten$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #169 = Utf8               strictOptimizedFlatten
   #170 = Utf8               strictOptimizedFlatten$
   #171 = NameAndType        #170:#134    // strictOptimizedFlatten$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #172 = InterfaceMethodref #112.#171    // scala/collection/StrictOptimizedIterableOps.strictOptimizedFlatten$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
   #173 = Utf8               zip
   #174 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #175 = Utf8               zip$
   #176 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #177 = NameAndType        #175:#176    // zip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #178 = InterfaceMethodref #112.#177    // scala/collection/StrictOptimizedIterableOps.zip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #179 = Utf8               strictOptimizedZip
   #180 = Utf8               <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TB;>;Lscala/collection/mutable/Builder<Lscala/Tuple2<Lscala/Tuple2<TK;TV;>;TB;>;TC2;>;)TC2;
   #181 = Utf8               strictOptimizedZip$
   #182 = NameAndType        #181:#150    // strictOptimizedZip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
   #183 = InterfaceMethodref #112.#182    // scala/collection/StrictOptimizedIterableOps.strictOptimizedZip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
   #184 = Utf8               zipWithIndex
   #185 = Utf8               zipWithIndex$
   #186 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;)Ljava/lang/Object;
   #187 = NameAndType        #185:#186    // zipWithIndex$:(Lscala/collection/StrictOptimizedIterableOps;)Ljava/lang/Object;
   #188 = InterfaceMethodref #112.#187    // scala/collection/StrictOptimizedIterableOps.zipWithIndex$:(Lscala/collection/StrictOptimizedIterableOps;)Ljava/lang/Object;
   #189 = Utf8               scanLeft
   #190 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #191 = Utf8               z
   #192 = Utf8               op
   #193 = Utf8               scanLeft$
   #194 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #195 = NameAndType        #193:#194    // scanLeft$:(Lscala/collection/StrictOptimizedIterableOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #196 = InterfaceMethodref #112.#195    // scala/collection/StrictOptimizedIterableOps.scanLeft$:(Lscala/collection/StrictOptimizedIterableOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #197 = Utf8               Ljava/lang/Object;
   #198 = Utf8               Lscala/Function2;
   #199 = Utf8               filter
   #200 = Utf8               pred
   #201 = Utf8               filter$
   #202 = NameAndType        #201:#126    // filter$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #203 = InterfaceMethodref #112.#202    // scala/collection/StrictOptimizedIterableOps.filter$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #204 = Utf8               filterNot
   #205 = Utf8               filterNot$
   #206 = NameAndType        #205:#126    // filterNot$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #207 = InterfaceMethodref #112.#206    // scala/collection/StrictOptimizedIterableOps.filterNot$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #208 = Utf8               partitionMap
   #209 = Utf8               <A1:Ljava/lang/Object;A2:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/util/Either<TA1;TA2;>;>;)Lscala/Tuple2<Lscala/collection/immutable/Iterable<TA1;>;Lscala/collection/immutable/Iterable<TA2;>;>;
   #210 = Utf8               partitionMap$
   #211 = NameAndType        #210:#114    // partitionMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
   #212 = InterfaceMethodref #112.#211    // scala/collection/StrictOptimizedIterableOps.partitionMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
   #213 = Utf8               tapEach
   #214 = Utf8               tapEach$
   #215 = NameAndType        #214:#126    // tapEach$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #216 = InterfaceMethodref #112.#215    // scala/collection/StrictOptimizedIterableOps.tapEach$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
   #217 = Utf8               ()Lscala/collection/immutable/BitmapIndexedMapNode;
   #218 = Utf8               ()Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;
   #219 = NameAndType        #41:#42      // rootNode:Lscala/collection/immutable/BitmapIndexedMapNode;
   #220 = Fieldref           #2.#219      // scala/collection/immutable/HashMap.rootNode:Lscala/collection/immutable/BitmapIndexedMapNode;
   #221 = Utf8               mapFactory
   #222 = Utf8               ()Lscala/collection/MapFactory;
   #223 = Utf8               ()Lscala/collection/MapFactory<Lscala/collection/immutable/HashMap;>;
   #224 = Utf8               knownSize
   #225 = Utf8               ()I
   #226 = NameAndType        #41:#217     // rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #227 = Methodref          #2.#226      // scala/collection/immutable/HashMap.rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #228 = Utf8               scala/collection/immutable/BitmapIndexedMapNode
   #229 = Class              #228         // scala/collection/immutable/BitmapIndexedMapNode
   #230 = Utf8               size
   #231 = NameAndType        #230:#225    // size:()I
   #232 = Methodref          #229.#231    // scala/collection/immutable/BitmapIndexedMapNode.size:()I
   #233 = Utf8               isEmpty
   #234 = Utf8               ()Z
   #235 = Utf8               keySet
   #236 = Utf8               ()Lscala/collection/immutable/Set;
   #237 = Utf8               ()Lscala/collection/immutable/Set<TK;>;
   #238 = Methodref          #2.#231      // scala/collection/immutable/HashMap.size:()I
   #239 = Utf8               scala/collection/immutable/Set$
   #240 = Class              #239         // scala/collection/immutable/Set$
   #241 = Utf8               Lscala/collection/immutable/Set$;
   #242 = NameAndType        #49:#241     // MODULE$:Lscala/collection/immutable/Set$;
   #243 = Fieldref           #240.#242    // scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
   #244 = Utf8               Lscala/collection/immutable/Set$EmptySet$;
   #245 = NameAndType        #49:#244     // MODULE$:Lscala/collection/immutable/Set$EmptySet$;
   #246 = Fieldref           #26.#245     // scala/collection/immutable/Set$EmptySet$.MODULE$:Lscala/collection/immutable/Set$EmptySet$;
   #247 = Utf8               (Lscala/collection/immutable/HashMap;)V
   #248 = NameAndType        #55:#247     // "<init>":(Lscala/collection/immutable/HashMap;)V
   #249 = Methodref          #20.#248     // scala/collection/immutable/HashMap$HashKeySet."<init>":(Lscala/collection/immutable/HashMap;)V
   #250 = Utf8               iterator
   #251 = Utf8               ()Lscala/collection/Iterator;
   #252 = Utf8               ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;
   #253 = NameAndType        #233:#234    // isEmpty:()Z
   #254 = Methodref          #2.#253      // scala/collection/immutable/HashMap.isEmpty:()Z
   #255 = Utf8               scala/collection/Iterator$
   #256 = Class              #255         // scala/collection/Iterator$
   #257 = Utf8               Lscala/collection/Iterator$;
   #258 = NameAndType        #49:#257     // MODULE$:Lscala/collection/Iterator$;
   #259 = Fieldref           #256.#258    // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
   #260 = Utf8               scala$collection$Iterator$$_empty
   #261 = Utf8               Lscala/collection/Iterator;
   #262 = NameAndType        #260:#261    // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #263 = Fieldref           #256.#262    // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #264 = Utf8               scala/collection/immutable/MapKeyValueTupleIterator
   #265 = Class              #264         // scala/collection/immutable/MapKeyValueTupleIterator
   #266 = Utf8               (Lscala/collection/immutable/MapNode;)V
   #267 = NameAndType        #55:#266     // "<init>":(Lscala/collection/immutable/MapNode;)V
   #268 = Methodref          #265.#267    // scala/collection/immutable/MapKeyValueTupleIterator."<init>":(Lscala/collection/immutable/MapNode;)V
   #269 = Utf8               keysIterator
   #270 = Utf8               ()Lscala/collection/Iterator<TK;>;
   #271 = Utf8               scala/collection/immutable/MapKeyIterator
   #272 = Class              #271         // scala/collection/immutable/MapKeyIterator
   #273 = Methodref          #272.#267    // scala/collection/immutable/MapKeyIterator."<init>":(Lscala/collection/immutable/MapNode;)V
   #274 = Utf8               valuesIterator
   #275 = Utf8               ()Lscala/collection/Iterator<TV;>;
   #276 = Utf8               scala/collection/immutable/MapValueIterator
   #277 = Class              #276         // scala/collection/immutable/MapValueIterator
   #278 = Methodref          #277.#267    // scala/collection/immutable/MapValueIterator."<init>":(Lscala/collection/immutable/MapNode;)V
   #279 = Utf8               reverseIterator
   #280 = Utf8               scala/collection/immutable/MapKeyValueTupleReverseIterator
   #281 = Class              #280         // scala/collection/immutable/MapKeyValueTupleReverseIterator
   #282 = Methodref          #281.#267    // scala/collection/immutable/MapKeyValueTupleReverseIterator."<init>":(Lscala/collection/immutable/MapNode;)V
   #283 = Utf8               stepper
   #284 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
   #285 = Utf8               <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TS;>;)TS;
   #286 = Utf8               shape
   #287 = Utf8               scala/collection/convert/impl/AnyChampStepper$
   #288 = Class              #287         // scala/collection/convert/impl/AnyChampStepper$
   #289 = Utf8               Lscala/collection/convert/impl/AnyChampStepper$;
   #290 = NameAndType        #49:#289     // MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
   #291 = Fieldref           #288.#290    // scala/collection/convert/impl/AnyChampStepper$.MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
   #292 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #293 = MethodType         #292         //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #294 = Utf8               $anonfun$stepper$1$adapted
   #295 = Utf8               (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
   #296 = NameAndType        #294:#295    // $anonfun$stepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
   #297 = Methodref          #2.#296      // scala/collection/immutable/HashMap.$anonfun$stepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
   #298 = MethodHandle       6:#297       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$stepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
   #299 = MethodType         #295         //  (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
   #300 = Integer            5
   #301 = Integer            1
   #302 = Utf8               java/lang/invoke/LambdaMetafactory
   #303 = Class              #302         // java/lang/invoke/LambdaMetafactory
   #304 = Utf8               altMetafactory
   #305 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #306 = NameAndType        #304:#305    // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #307 = Methodref          #303.#306    // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #308 = MethodHandle       6:#307       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #309 = Utf8               apply
   #310 = Utf8               ()Lscala/Function2;
   #311 = NameAndType        #309:#310    // apply:()Lscala/Function2;
   #312 = InvokeDynamic      #0:#311      // #0:apply:()Lscala/Function2;
   #313 = Utf8               scala/collection/convert/impl/AnyChampStepper
   #314 = Class              #313         // scala/collection/convert/impl/AnyChampStepper
   #315 = Utf8               (ILscala/Function2;)V
   #316 = NameAndType        #55:#315     // "<init>":(ILscala/Function2;)V
   #317 = Methodref          #314.#316    // scala/collection/convert/impl/AnyChampStepper."<init>":(ILscala/Function2;)V
   #318 = Utf8               initRoot
   #319 = Utf8               (Lscala/collection/immutable/Node;)V
   #320 = NameAndType        #318:#319    // initRoot:(Lscala/collection/immutable/Node;)V
   #321 = Methodref          #314.#320    // scala/collection/convert/impl/AnyChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
   #322 = Utf8               scala/collection/StepperShape
   #323 = Class              #322         // scala/collection/StepperShape
   #324 = Utf8               parUnbox
   #325 = Utf8               (Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
   #326 = NameAndType        #324:#325    // parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
   #327 = InterfaceMethodref #323.#326    // scala/collection/StepperShape.parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
   #328 = Utf8               Lscala/collection/StepperShape;
   #329 = Utf8               from_ans
   #330 = Utf8               Lscala/collection/convert/impl/AnyChampStepper;
   #331 = Utf8               from_maxSize
   #332 = Utf8               I
   #333 = Utf8               from_root
   #334 = Utf8               Lscala/collection/immutable/Node;
   #335 = Utf8               from_extract
   #336 = Utf8               keyStepper
   #337 = Utf8               <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<TK;TS;>;)TS;
   #338 = NameAndType        #286:#225    // shape:()I
   #339 = InterfaceMethodref #323.#338    // scala/collection/StepperShape.shape:()I
   #340 = Utf8               scala/collection/StepperShape$
   #341 = Class              #340         // scala/collection/StepperShape$
   #342 = Utf8               Lscala/collection/StepperShape$;
   #343 = NameAndType        #49:#342     // MODULE$:Lscala/collection/StepperShape$;
   #344 = Fieldref           #341.#343    // scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
   #345 = Utf8               IntShape
   #346 = NameAndType        #345:#225    // IntShape:()I
   #347 = Methodref          #341.#346    // scala/collection/StepperShape$.IntShape:()I
   #348 = Utf8               scala/collection/convert/impl/IntChampStepper$
   #349 = Class              #348         // scala/collection/convert/impl/IntChampStepper$
   #350 = Utf8               Lscala/collection/convert/impl/IntChampStepper$;
   #351 = NameAndType        #49:#350     // MODULE$:Lscala/collection/convert/impl/IntChampStepper$;
   #352 = Fieldref           #349.#351    // scala/collection/convert/impl/IntChampStepper$.MODULE$:Lscala/collection/convert/impl/IntChampStepper$;
   #353 = Utf8               $anonfun$keyStepper$1$adapted
   #354 = Utf8               (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #355 = NameAndType        #353:#354    // $anonfun$keyStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #356 = Methodref          #2.#355      // scala/collection/immutable/HashMap.$anonfun$keyStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #357 = MethodHandle       6:#356       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #358 = MethodType         #354         //  (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #359 = InvokeDynamic      #1:#311      // #1:apply:()Lscala/Function2;
   #360 = Utf8               scala/collection/convert/impl/IntChampStepper
   #361 = Class              #360         // scala/collection/convert/impl/IntChampStepper
   #362 = Methodref          #361.#316    // scala/collection/convert/impl/IntChampStepper."<init>":(ILscala/Function2;)V
   #363 = Methodref          #361.#320    // scala/collection/convert/impl/IntChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
   #364 = Utf8               LongShape
   #365 = NameAndType        #364:#225    // LongShape:()I
   #366 = Methodref          #341.#365    // scala/collection/StepperShape$.LongShape:()I
   #367 = Utf8               scala/collection/convert/impl/LongChampStepper$
   #368 = Class              #367         // scala/collection/convert/impl/LongChampStepper$
   #369 = Utf8               Lscala/collection/convert/impl/LongChampStepper$;
   #370 = NameAndType        #49:#369     // MODULE$:Lscala/collection/convert/impl/LongChampStepper$;
   #371 = Fieldref           #368.#370    // scala/collection/convert/impl/LongChampStepper$.MODULE$:Lscala/collection/convert/impl/LongChampStepper$;
   #372 = Utf8               $anonfun$keyStepper$2$adapted
   #373 = NameAndType        #372:#354    // $anonfun$keyStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #374 = Methodref          #2.#373      // scala/collection/immutable/HashMap.$anonfun$keyStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #375 = MethodHandle       6:#374       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #376 = InvokeDynamic      #2:#311      // #2:apply:()Lscala/Function2;
   #377 = Utf8               scala/collection/convert/impl/LongChampStepper
   #378 = Class              #377         // scala/collection/convert/impl/LongChampStepper
   #379 = Methodref          #378.#316    // scala/collection/convert/impl/LongChampStepper."<init>":(ILscala/Function2;)V
   #380 = Methodref          #378.#320    // scala/collection/convert/impl/LongChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
   #381 = Utf8               DoubleShape
   #382 = NameAndType        #381:#225    // DoubleShape:()I
   #383 = Methodref          #341.#382    // scala/collection/StepperShape$.DoubleShape:()I
   #384 = Utf8               scala/collection/convert/impl/DoubleChampStepper$
   #385 = Class              #384         // scala/collection/convert/impl/DoubleChampStepper$
   #386 = Utf8               Lscala/collection/convert/impl/DoubleChampStepper$;
   #387 = NameAndType        #49:#386     // MODULE$:Lscala/collection/convert/impl/DoubleChampStepper$;
   #388 = Fieldref           #385.#387    // scala/collection/convert/impl/DoubleChampStepper$.MODULE$:Lscala/collection/convert/impl/DoubleChampStepper$;
   #389 = Utf8               $anonfun$keyStepper$3$adapted
   #390 = NameAndType        #389:#354    // $anonfun$keyStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #391 = Methodref          #2.#390      // scala/collection/immutable/HashMap.$anonfun$keyStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #392 = MethodHandle       6:#391       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #393 = InvokeDynamic      #3:#311      // #3:apply:()Lscala/Function2;
   #394 = Utf8               scala/collection/convert/impl/DoubleChampStepper
   #395 = Class              #394         // scala/collection/convert/impl/DoubleChampStepper
   #396 = Methodref          #395.#316    // scala/collection/convert/impl/DoubleChampStepper."<init>":(ILscala/Function2;)V
   #397 = Methodref          #395.#320    // scala/collection/convert/impl/DoubleChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
   #398 = Utf8               $anonfun$keyStepper$4$adapted
   #399 = NameAndType        #398:#354    // $anonfun$keyStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #400 = Methodref          #2.#399      // scala/collection/immutable/HashMap.$anonfun$keyStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #401 = MethodHandle       6:#400       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #402 = InvokeDynamic      #4:#311      // #4:apply:()Lscala/Function2;
   #403 = Utf8               Lscala/collection/convert/impl/IntChampStepper;
   #404 = Utf8               Lscala/collection/convert/impl/LongChampStepper;
   #405 = Utf8               Lscala/collection/convert/impl/DoubleChampStepper;
   #406 = Utf8               scala/collection/Stepper
   #407 = Class              #406         // scala/collection/Stepper
   #408 = Utf8               valueStepper
   #409 = Utf8               <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<TV;TS;>;)TS;
   #410 = Utf8               $anonfun$valueStepper$1$adapted
   #411 = NameAndType        #410:#354    // $anonfun$valueStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #412 = Methodref          #2.#411      // scala/collection/immutable/HashMap.$anonfun$valueStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #413 = MethodHandle       6:#412       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #414 = InvokeDynamic      #5:#311      // #5:apply:()Lscala/Function2;
   #415 = Utf8               $anonfun$valueStepper$2$adapted
   #416 = NameAndType        #415:#354    // $anonfun$valueStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #417 = Methodref          #2.#416      // scala/collection/immutable/HashMap.$anonfun$valueStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #418 = MethodHandle       6:#417       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #419 = InvokeDynamic      #6:#311      // #6:apply:()Lscala/Function2;
   #420 = Utf8               $anonfun$valueStepper$3$adapted
   #421 = NameAndType        #420:#354    // $anonfun$valueStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #422 = Methodref          #2.#421      // scala/collection/immutable/HashMap.$anonfun$valueStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #423 = MethodHandle       6:#422       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #424 = InvokeDynamic      #7:#311      // #7:apply:()Lscala/Function2;
   #425 = Utf8               $anonfun$valueStepper$4$adapted
   #426 = NameAndType        #425:#354    // $anonfun$valueStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #427 = Methodref          #2.#426      // scala/collection/immutable/HashMap.$anonfun$valueStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #428 = MethodHandle       6:#427       // REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
   #429 = InvokeDynamic      #8:#311      // #8:apply:()Lscala/Function2;
   #430 = Utf8               contains
   #431 = Utf8               (Ljava/lang/Object;)Z
   #432 = Utf8               (TK;)Z
   #433 = Utf8               key
   #434 = Utf8               scala/runtime/Statics
   #435 = Class              #434         // scala/runtime/Statics
   #436 = Utf8               anyHash
   #437 = Utf8               (Ljava/lang/Object;)I
   #438 = NameAndType        #436:#437    // anyHash:(Ljava/lang/Object;)I
   #439 = Methodref          #435.#438    // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
   #440 = Utf8               scala/collection/Hashing$
   #441 = Class              #440         // scala/collection/Hashing$
   #442 = Utf8               Lscala/collection/Hashing$;
   #443 = NameAndType        #49:#442     // MODULE$:Lscala/collection/Hashing$;
   #444 = Fieldref           #441.#443    // scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
   #445 = Utf8               improve
   #446 = Utf8               (I)I
   #447 = NameAndType        #445:#446    // improve:(I)I
   #448 = Methodref          #441.#447    // scala/collection/Hashing$.improve:(I)I
   #449 = Utf8               containsKey
   #450 = Utf8               (Ljava/lang/Object;III)Z
   #451 = NameAndType        #449:#450    // containsKey:(Ljava/lang/Object;III)Z
   #452 = Methodref          #229.#451    // scala/collection/immutable/BitmapIndexedMapNode.containsKey:(Ljava/lang/Object;III)Z
   #453 = Utf8               keyUnimprovedHash
   #454 = Utf8               keyHash
   #455 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #456 = Utf8               (TK;)TV;
   #457 = Utf8               (Ljava/lang/Object;III)Ljava/lang/Object;
   #458 = NameAndType        #309:#457    // apply:(Ljava/lang/Object;III)Ljava/lang/Object;
   #459 = Methodref          #229.#458    // scala/collection/immutable/BitmapIndexedMapNode.apply:(Ljava/lang/Object;III)Ljava/lang/Object;
   #460 = Utf8               get
   #461 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #462 = Utf8               (TK;)Lscala/Option<TV;>;
   #463 = Utf8               (Ljava/lang/Object;III)Lscala/Option;
   #464 = NameAndType        #460:#463    // get:(Ljava/lang/Object;III)Lscala/Option;
   #465 = Methodref          #229.#464    // scala/collection/immutable/BitmapIndexedMapNode.get:(Ljava/lang/Object;III)Lscala/Option;
   #466 = Utf8               getOrElse
   #467 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #468 = Utf8               <V1:Ljava/lang/Object;>(TK;Lscala/Function0<TV1;>;)TV1;
   #469 = Utf8               default
   #470 = Utf8               scala/collection/immutable/Node$
   #471 = Class              #470         // scala/collection/immutable/Node$
   #472 = Utf8               Lscala/collection/immutable/Node$;
   #473 = NameAndType        #49:#472     // MODULE$:Lscala/collection/immutable/Node$;
   #474 = Fieldref           #471.#473    // scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
   #475 = Utf8               dataMap
   #476 = NameAndType        #475:#225    // dataMap:()I
   #477 = Methodref          #229.#476    // scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
   #478 = Utf8               indexFrom
   #479 = Utf8               (III)I
   #480 = NameAndType        #478:#479    // indexFrom:(III)I
   #481 = Methodref          #471.#480    // scala/collection/immutable/Node$.indexFrom:(III)I
   #482 = Utf8               content
   #483 = Utf8               ()[Ljava/lang/Object;
   #484 = NameAndType        #482:#483    // content:()[Ljava/lang/Object;
   #485 = Methodref          #229.#484    // scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
   #486 = Utf8               scala/runtime/BoxesRunTime
   #487 = Class              #486         // scala/runtime/BoxesRunTime
   #488 = Utf8               equals
   #489 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #490 = NameAndType        #488:#489    // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #491 = Methodref          #487.#490    // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #492 = Utf8               scala/Function0
   #493 = Class              #492         // scala/Function0
   #494 = NameAndType        #309:#67     // apply:()Ljava/lang/Object;
   #495 = InterfaceMethodref #493.#494    // scala/Function0.apply:()Ljava/lang/Object;
   #496 = Utf8               nodeMap
   #497 = NameAndType        #496:#225    // nodeMap:()I
   #498 = Methodref          #229.#497    // scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
   #499 = Utf8               getNode
   #500 = Utf8               (I)Lscala/collection/immutable/MapNode;
   #501 = NameAndType        #499:#500    // getNode:(I)Lscala/collection/immutable/MapNode;
   #502 = Methodref          #229.#501    // scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
   #503 = Utf8               scala/collection/immutable/MapNode
   #504 = Class              #503         // scala/collection/immutable/MapNode
   #505 = Utf8               (Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
   #506 = NameAndType        #466:#505    // getOrElse:(Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
   #507 = Methodref          #504.#506    // scala/collection/immutable/MapNode.getOrElse:(Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
   #508 = Utf8               Lscala/Function0;
   #509 = Utf8               getOrElse_index
   #510 = Utf8               getOrElse_key0
   #511 = Utf8               getOrElse_this
   #512 = Utf8               getOrElse_shift
   #513 = Utf8               java/lang/Object
   #514 = Class              #513         // java/lang/Object
   #515 = Utf8               newHashMapOrThis
   #516 = Utf8               (Lscala/collection/immutable/BitmapIndexedMapNode;)Lscala/collection/immutable/HashMap;
   #517 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV1;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
   #518 = Utf8               newRootNode
   #519 = Utf8               (Lscala/collection/immutable/BitmapIndexedMapNode;)V
   #520 = NameAndType        #55:#519     // "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
   #521 = Methodref          #2.#520      // scala/collection/immutable/HashMap."<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
   #522 = Utf8               updated
   #523 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
   #524 = Utf8               <V1:Ljava/lang/Object;>(TK;TV1;)Lscala/collection/immutable/HashMap<TK;TV1;>;
   #525 = Utf8               value
   #526 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
   #527 = NameAndType        #522:#526    // updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
   #528 = Methodref          #229.#527    // scala/collection/immutable/BitmapIndexedMapNode.updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
   #529 = Utf8               newHashMapOrThis_newRootNode
   #530 = Utf8               updatedWith
   #531 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/HashMap;
   #532 = Utf8               <V1:Ljava/lang/Object;>(TK;Lscala/Function1<Lscala/Option<TV;>;Lscala/Option<TV1;>;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
   #533 = Utf8               remappingFunction
   #534 = Utf8               scala/collection/immutable/MapOps
   #535 = Class              #534         // scala/collection/immutable/MapOps
   #536 = Utf8               updatedWith$
   #537 = Utf8               (Lscala/collection/immutable/MapOps;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/MapOps;
   #538 = NameAndType        #536:#537    // updatedWith$:(Lscala/collection/immutable/MapOps;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/MapOps;
   #539 = InterfaceMethodref #535.#538    // scala/collection/immutable/MapOps.updatedWith$:(Lscala/collection/immutable/MapOps;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/MapOps;
   #540 = Utf8               removed
   #541 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
   #542 = Utf8               (TK;)Lscala/collection/immutable/HashMap<TK;TV;>;
   #543 = Utf8               (Ljava/lang/Object;III)Lscala/collection/immutable/BitmapIndexedMapNode;
   #544 = NameAndType        #540:#543    // removed:(Ljava/lang/Object;III)Lscala/collection/immutable/BitmapIndexedMapNode;
   #545 = Methodref          #229.#544    // scala/collection/immutable/BitmapIndexedMapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/BitmapIndexedMapNode;
   #546 = Utf8               concat
   #547 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV1;>;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
   #548 = Utf8               (Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/BitmapIndexedMapNode;
   #549 = NameAndType        #546:#548    // concat:(Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/BitmapIndexedMapNode;
   #550 = Methodref          #229.#549    // scala/collection/immutable/BitmapIndexedMapNode.concat:(Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/BitmapIndexedMapNode;
   #551 = Utf8               nodeIterator
   #552 = NameAndType        #551:#251    // nodeIterator:()Lscala/collection/Iterator;
   #553 = Methodref          #33.#552     // scala/collection/mutable/HashMap.nodeIterator:()Lscala/collection/Iterator;
   #554 = Utf8               scala/collection/Iterator
   #555 = Class              #554         // scala/collection/Iterator
   #556 = Utf8               hasNext
   #557 = NameAndType        #556:#234    // hasNext:()Z
   #558 = InterfaceMethodref #555.#557    // scala/collection/Iterator.hasNext:()Z
   #559 = Utf8               next
   #560 = NameAndType        #559:#67     // next:()Ljava/lang/Object;
   #561 = InterfaceMethodref #555.#560    // scala/collection/Iterator.next:()Ljava/lang/Object;
   #562 = Utf8               hash
   #563 = NameAndType        #562:#225    // hash:()I
   #564 = Methodref          #31.#563     // scala/collection/mutable/HashMap$Node.hash:()I
   #565 = Utf8               unimproveHash
   #566 = NameAndType        #565:#446    // unimproveHash:(I)I
   #567 = Methodref          #33.#566     // scala/collection/mutable/HashMap.unimproveHash:(I)I
   #568 = NameAndType        #433:#67     // key:()Ljava/lang/Object;
   #569 = Methodref          #31.#568     // scala/collection/mutable/HashMap$Node.key:()Ljava/lang/Object;
   #570 = NameAndType        #525:#67     // value:()Ljava/lang/Object;
   #571 = Methodref          #31.#570     // scala/collection/mutable/HashMap$Node.value:()Ljava/lang/Object;
   #572 = Utf8               updateWithShallowMutations
   #573 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;IIII)I
   #574 = NameAndType        #572:#573    // updateWithShallowMutations:(Ljava/lang/Object;Ljava/lang/Object;IIII)I
   #575 = Methodref          #229.#574    // scala/collection/immutable/BitmapIndexedMapNode.updateWithShallowMutations:(Ljava/lang/Object;Ljava/lang/Object;IIII)I
   #576 = Utf8               scala/collection/immutable/Map
   #577 = Class              #576         // scala/collection/immutable/Map
   #578 = InterfaceMethodref #577.#253    // scala/collection/immutable/Map.isEmpty:()Z
   #579 = Methodref          #23.#248     // scala/collection/immutable/HashMap$accum$1."<init>":(Lscala/collection/immutable/HashMap;)V
   #580 = Utf8               foreachEntry
   #581 = Utf8               (Lscala/Function2;)V
   #582 = NameAndType        #580:#581    // foreachEntry:(Lscala/Function2;)V
   #583 = InterfaceMethodref #577.#582    // scala/collection/immutable/Map.foreachEntry:(Lscala/Function2;)V
   #584 = Utf8               current
   #585 = NameAndType        #584:#217    // current:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #586 = Methodref          #23.#585     // scala/collection/immutable/HashMap$accum$1.current:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #587 = Utf8               scala/collection/IterableOnce
   #588 = Class              #587         // scala/collection/IterableOnce
   #589 = NameAndType        #250:#251    // iterator:()Lscala/collection/Iterator;
   #590 = InterfaceMethodref #588.#589    // scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
   #591 = InterfaceMethodref #555.#253    // scala/collection/Iterator.isEmpty:()Z
   #592 = Utf8               foreach
   #593 = Utf8               (Lscala/Function1;)V
   #594 = NameAndType        #592:#593    // foreach:(Lscala/Function1;)V
   #595 = InterfaceMethodref #555.#594    // scala/collection/Iterator.foreach:(Lscala/Function1;)V
   #596 = Utf8               Lscala/collection/mutable/HashMap$Node;
   #597 = Utf8               originalHash
   #598 = Utf8               shallowlyMutableNodeMap
   #599 = Utf8               improved
   #600 = Utf8               iter
   #601 = Utf8               accum
   #602 = Utf8               Lscala/collection/immutable/HashMap$accum$1;
   #603 = Utf8               it
   #604 = Utf8               maskFrom_shift
   #605 = Utf8               tail
   #606 = Utf8               ()Lscala/collection/immutable/HashMap;
   #607 = Utf8               ()Lscala/collection/immutable/HashMap<TK;TV;>;
   #608 = Utf8               head
   #609 = Utf8               ()Lscala/Tuple2;
   #610 = NameAndType        #608:#609    // head:()Lscala/Tuple2;
   #611 = Methodref          #2.#610      // scala/collection/immutable/HashMap.head:()Lscala/Tuple2;
   #612 = Utf8               scala/Tuple2
   #613 = Class              #612         // scala/Tuple2
   #614 = Utf8               _1
   #615 = NameAndType        #614:#67     // _1:()Ljava/lang/Object;
   #616 = Methodref          #613.#615    // scala/Tuple2._1:()Ljava/lang/Object;
   #617 = NameAndType        #540:#541    // removed:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
   #618 = Methodref          #2.#617      // scala/collection/immutable/HashMap.removed:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
   #619 = Utf8               $minus_key
   #620 = Utf8               init
   #621 = Utf8               last
   #622 = NameAndType        #621:#609    // last:()Lscala/Tuple2;
   #623 = Methodref          #2.#622      // scala/collection/immutable/HashMap.last:()Lscala/Tuple2;
   #624 = Utf8               ()Lscala/Tuple2<TK;TV;>;
   #625 = Methodref          #2.#589      // scala/collection/immutable/HashMap.iterator:()Lscala/collection/Iterator;
   #626 = NameAndType        #279:#251    // reverseIterator:()Lscala/collection/Iterator;
   #627 = Methodref          #2.#626      // scala/collection/immutable/HashMap.reverseIterator:()Lscala/collection/Iterator;
   #628 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
   #629 = Utf8               payloadArity
   #630 = NameAndType        #629:#225    // payloadArity:()I
   #631 = Methodref          #229.#630    // scala/collection/immutable/BitmapIndexedMapNode.payloadArity:()I
   #632 = Utf8               getPayload
   #633 = Utf8               (I)Lscala/Tuple2;
   #634 = NameAndType        #632:#633    // getPayload:(I)Lscala/Tuple2;
   #635 = Methodref          #229.#634    // scala/collection/immutable/BitmapIndexedMapNode.getPayload:(I)Lscala/Tuple2;
   #636 = Utf8               scala/Function1
   #637 = Class              #636         // scala/Function1
   #638 = NameAndType        #309:#455    // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #639 = InterfaceMethodref #637.#638    // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #640 = Utf8               nodeArity
   #641 = NameAndType        #640:#225    // nodeArity:()I
   #642 = Methodref          #229.#641    // scala/collection/immutable/BitmapIndexedMapNode.nodeArity:()I
   #643 = Methodref          #504.#594    // scala/collection/immutable/MapNode.foreach:(Lscala/Function1;)V
   #644 = Utf8               foreach_iN
   #645 = Utf8               foreach_i
   #646 = Utf8               foreach_jN
   #647 = Utf8               foreach_j
   #648 = Utf8               foreach_this
   #649 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TU;>;)V
   #650 = Utf8               scala/Function2
   #651 = Class              #650         // scala/Function2
   #652 = NameAndType        #309:#292    // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #653 = InterfaceMethodref #651.#652    // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #654 = Methodref          #504.#582    // scala/collection/immutable/MapNode.foreachEntry:(Lscala/Function2;)V
   #655 = Utf8               foreachEntry_iN
   #656 = Utf8               foreachEntry_i
   #657 = Utf8               foreachEntry_jN
   #658 = Utf8               foreachEntry_j
   #659 = Utf8               foreachEntry_this
   #660 = Utf8               foreachWithHash
   #661 = Utf8               (Lscala/Function3;)V
   #662 = Utf8               (Lscala/Function3<TK;TV;Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;)V
   #663 = Utf8               originalHashes
   #664 = Utf8               ()[I
   #665 = NameAndType        #663:#664    // originalHashes:()[I
   #666 = Methodref          #229.#665    // scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
   #667 = Utf8               java/lang/Integer
   #668 = Class              #667         // java/lang/Integer
   #669 = Utf8               valueOf
   #670 = Utf8               (I)Ljava/lang/Integer;
   #671 = NameAndType        #669:#670    // valueOf:(I)Ljava/lang/Integer;
   #672 = Methodref          #668.#671    // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #673 = Utf8               scala/Function3
   #674 = Class              #673         // scala/Function3
   #675 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #676 = NameAndType        #309:#675    // apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #677 = InterfaceMethodref #674.#676    // scala/Function3.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #678 = NameAndType        #660:#661    // foreachWithHash:(Lscala/Function3;)V
   #679 = Methodref          #504.#678    // scala/collection/immutable/MapNode.foreachWithHash:(Lscala/Function3;)V
   #680 = Utf8               Lscala/Function3;
   #681 = Utf8               foreachWithHash_i
   #682 = Utf8               foreachWithHash_iN
   #683 = Utf8               foreachWithHash_jN
   #684 = Utf8               foreachWithHash_j
   #685 = Utf8               foreachWithHash_this
   #686 = NameAndType        #488:#431    // equals:(Ljava/lang/Object;)Z
   #687 = Methodref          #514.#686    // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #688 = Utf8               scala/collection/Map
   #689 = Class              #688         // scala/collection/Map
   #690 = Utf8               equals$
   #691 = Utf8               (Lscala/collection/Map;Ljava/lang/Object;)Z
   #692 = NameAndType        #690:#691    // equals$:(Lscala/collection/Map;Ljava/lang/Object;)Z
   #693 = InterfaceMethodref #689.#692    // scala/collection/Map.equals$:(Lscala/collection/Map;Ljava/lang/Object;)Z
   #694 = Utf8               hashCode
   #695 = Utf8               scala/util/hashing/MurmurHash3$
   #696 = Class              #695         // scala/util/hashing/MurmurHash3$
   #697 = Utf8               Lscala/util/hashing/MurmurHash3$;
   #698 = NameAndType        #49:#697     // MODULE$:Lscala/util/hashing/MurmurHash3$;
   #699 = Fieldref           #696.#698    // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
   #700 = Utf8               emptyMapHash
   #701 = NameAndType        #700:#225    // emptyMapHash:()I
   #702 = Methodref          #696.#701    // scala/util/hashing/MurmurHash3$.emptyMapHash:()I
   #703 = Utf8               scala/collection/immutable/MapKeyValueTupleHashIterator
   #704 = Class              #703         // scala/collection/immutable/MapKeyValueTupleHashIterator
   #705 = Methodref          #704.#267    // scala/collection/immutable/MapKeyValueTupleHashIterator."<init>":(Lscala/collection/immutable/MapNode;)V
   #706 = Utf8               mapSeed
   #707 = NameAndType        #706:#225    // mapSeed:()I
   #708 = Methodref          #696.#707    // scala/util/hashing/MurmurHash3$.mapSeed:()I
   #709 = Utf8               unorderedHash
   #710 = Utf8               (Lscala/collection/IterableOnce;I)I
   #711 = NameAndType        #709:#710    // unorderedHash:(Lscala/collection/IterableOnce;I)I
   #712 = Methodref          #696.#711    // scala/util/hashing/MurmurHash3$.unorderedHash:(Lscala/collection/IterableOnce;I)I
   #713 = Utf8               hashIterator
   #714 = Utf8               Lscala/collection/immutable/MapKeyValueTupleHashIterator;
   #715 = Utf8               className
   #716 = Utf8               ()Ljava/lang/String;
   #717 = Utf8               HashMap
   #718 = String             #717         // HashMap
   #719 = Utf8               merged
   #720 = Utf8               (Lscala/collection/immutable/HashMap;Lscala/Function2;)Lscala/collection/immutable/HashMap;
   #721 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/HashMap<TK;TV1;>;Lscala/Function2<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TK;TV1;>;Lscala/Tuple2<TK;TV1;>;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
   #722 = Utf8               mergef
   #723 = Utf8               scala/collection/MapOps
   #724 = Class              #723         // scala/collection/MapOps
   #725 = Utf8               $plus$plus$
   #726 = Utf8               (Lscala/collection/MapOps;Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
   #727 = NameAndType        #725:#726    // $plus$plus$:(Lscala/collection/MapOps;Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
   #728 = InterfaceMethodref #724.#727    // scala/collection/MapOps.$plus$plus$:(Lscala/collection/MapOps;Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
   #729 = Utf8               _2
   #730 = NameAndType        #729:#67     // _2:()Ljava/lang/Object;
   #731 = Methodref          #613.#730    // scala/Tuple2._2:()Ljava/lang/Object;
   #732 = Utf8               scala/MatchError
   #733 = Class              #732         // scala/MatchError
   #734 = Utf8               (Ljava/lang/Object;)V
   #735 = NameAndType        #55:#734     // "<init>":(Ljava/lang/Object;)V
   #736 = Methodref          #733.#735    // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #737 = Utf8               getHash
   #738 = NameAndType        #737:#446    // getHash:(I)I
   #739 = Methodref          #229.#738    // scala/collection/immutable/BitmapIndexedMapNode.getHash:(I)I
   #740 = Utf8               getTuple
   #741 = Utf8               (Ljava/lang/Object;III)Lscala/Tuple2;
   #742 = NameAndType        #740:#741    // getTuple:(Ljava/lang/Object;III)Lscala/Tuple2;
   #743 = Methodref          #229.#742    // scala/collection/immutable/BitmapIndexedMapNode.getTuple:(Ljava/lang/Object;III)Lscala/Tuple2;
   #744 = Utf8               buildTo
   #745 = Utf8               (Lscala/collection/immutable/HashMapBuilder;)V
   #746 = NameAndType        #744:#745    // buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
   #747 = Methodref          #504.#746    // scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
   #748 = Methodref          #229.#746    // scala/collection/immutable/BitmapIndexedMapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
   #749 = Utf8               numberOfTrailingZeros
   #750 = NameAndType        #749:#446    // numberOfTrailingZeros:(I)I
   #751 = Methodref          #668.#750    // java/lang/Integer.numberOfTrailingZeros:(I)I
   #752 = Utf8               numberOfLeadingZeros
   #753 = NameAndType        #752:#446    // numberOfLeadingZeros:(I)I
   #754 = Methodref          #668.#753    // java/lang/Integer.numberOfLeadingZeros:(I)I
   #755 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #756 = NameAndType        #55:#755     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #757 = Methodref          #613.#756    // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #758 = Utf8               addOne
   #759 = Utf8               (Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
   #760 = NameAndType        #758:#759    // addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
   #761 = Methodref          #54.#760     // scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
   #762 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;I)Lscala/collection/immutable/HashMapBuilder;
   #763 = NameAndType        #758:#762    // addOne:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/collection/immutable/HashMapBuilder;
   #764 = Methodref          #54.#763     // scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/collection/immutable/HashMapBuilder;
   #765 = Utf8               nodeIndex
   #766 = NameAndType        #765:#446    // nodeIndex:(I)I
   #767 = Methodref          #229.#766    // scala/collection/immutable/BitmapIndexedMapNode.nodeIndex:(I)I
   #768 = Utf8               (Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
   #769 = NameAndType        #540:#768    // removed:(Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
   #770 = Methodref          #504.#769    // scala/collection/immutable/MapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
   #771 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
   #772 = NameAndType        #758:#771    // addOne:(Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
   #773 = Methodref          #54.#772     // scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
   #774 = Methodref          #504.#742    // scala/collection/immutable/MapNode.getTuple:(Ljava/lang/Object;III)Lscala/Tuple2;
   #775 = Utf8               mergeInto
   #776 = Utf8               (Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
   #777 = NameAndType        #775:#776    // mergeInto:(Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
   #778 = Methodref          #504.#777    // scala/collection/immutable/MapNode.mergeInto:(Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
   #779 = Utf8               dataIndex
   #780 = NameAndType        #779:#446    // dataIndex:(I)I
   #781 = Methodref          #229.#780    // scala/collection/immutable/BitmapIndexedMapNode.dataIndex:(I)I
   #782 = Utf8               result
   #783 = NameAndType        #782:#606    // result:()Lscala/collection/immutable/HashMap;
   #784 = Methodref          #54.#783     // scala/collection/immutable/HashMapBuilder.result:()Lscala/collection/immutable/HashMap;
   #785 = Utf8               k
   #786 = Utf8               v
   #787 = Utf8               mergedK
   #788 = Utf8               mergedV
   #789 = Utf8               thatPayload
   #790 = Utf8               mergedOriginalHash
   #791 = Utf8               mergedImprovedHash
   #792 = Utf8               payload
   #793 = Utf8               thatOriginalHash
   #794 = Utf8               thatImproved
   #795 = Utf8               builder
   #796 = Utf8               Lscala/collection/immutable/HashMapBuilder;
   #797 = Utf8               mergeInto_rightKey
   #798 = Utf8               mergeInto_rightValue
   #799 = Utf8               mergeInto_subNode
   #800 = Utf8               Lscala/collection/immutable/MapNode;
   #801 = Utf8               mergeInto_leftImprovedHash
   #802 = Utf8               mergeInto_removed
   #803 = Utf8               mergeInto_leftKey
   #804 = Utf8               mergeInto_leftValue
   #805 = Utf8               mergeInto_rightImprovedHash
   #806 = Utf8               mergeInto_dataIndex
   #807 = Utf8               mergeInto_index
   #808 = Utf8               mergeInto_leftIdx
   #809 = Utf8               mergeInto_rightIdx
   #810 = Utf8               mergeInto_allMap
   #811 = Utf8               mergeInto_minIndex
   #812 = Utf8               mergeInto_maxIndex
   #813 = Utf8               mergeInto_this
   #814 = Utf8               mergeInto_that
   #815 = Utf8               mergeInto_shift
   #816 = Utf8               transform
   #817 = Utf8               (Lscala/Function2;)Lscala/collection/immutable/HashMap;
   #818 = Utf8               <W:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TW;>;)Lscala/collection/immutable/HashMap<TK;TW;>;
   #819 = Utf8               [Ljava/lang/Object;
   #820 = Class              #819         // "[Ljava/lang/Object;"
   #821 = Utf8               clone
   #822 = NameAndType        #821:#67     // clone:()Ljava/lang/Object;
   #823 = Methodref          #820.#822    // "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
   #824 = Utf8               (Lscala/Function2;)Lscala/collection/immutable/MapNode;
   #825 = NameAndType        #816:#824    // transform:(Lscala/Function2;)Lscala/collection/immutable/MapNode;
   #826 = Methodref          #504.#825    // scala/collection/immutable/MapNode.transform:(Lscala/Function2;)Lscala/collection/immutable/MapNode;
   #827 = Utf8               cachedJavaKeySetHashCode
   #828 = NameAndType        #827:#225    // cachedJavaKeySetHashCode:()I
   #829 = Methodref          #229.#828    // scala/collection/immutable/BitmapIndexedMapNode.cachedJavaKeySetHashCode:()I
   #830 = Utf8               (II[Ljava/lang/Object;[III)V
   #831 = NameAndType        #55:#830     // "<init>":(II[Ljava/lang/Object;[III)V
   #832 = Methodref          #229.#831    // scala/collection/immutable/BitmapIndexedMapNode."<init>":(II[Ljava/lang/Object;[III)V
   #833 = Utf8               transform_key
   #834 = Utf8               transform_value
   #835 = Utf8               transform_newValue
   #836 = Utf8               transform_node
   #837 = Utf8               transform_newNode
   #838 = Utf8               transform_newContent
   #839 = Utf8               transform_iN
   #840 = Utf8               transform_jN
   #841 = Utf8               transform_newContentLength
   #842 = Utf8               transform_i
   #843 = Utf8               transform_j
   #844 = Utf8               transform_this
   #845 = Utf8               filterImpl
   #846 = Utf8               (Lscala/Function1;Z)Lscala/collection/immutable/HashMap;
   #847 = Utf8               (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;Z)Lscala/collection/immutable/HashMap<TK;TV;>;
   #848 = Utf8               isFlipped
   #849 = Utf8               unboxToBoolean
   #850 = NameAndType        #849:#431    // unboxToBoolean:(Ljava/lang/Object;)Z
   #851 = Methodref          #487.#850    // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   #852 = Utf8               scala/collection/immutable/MapNode$
   #853 = Class              #852         // scala/collection/immutable/MapNode$
   #854 = Utf8               Lscala/collection/immutable/MapNode$;
   #855 = NameAndType        #49:#854     // MODULE$:Lscala/collection/immutable/MapNode$;
   #856 = Fieldref           #853.#855    // scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
   #857 = Utf8               empty
   #858 = NameAndType        #857:#217    // empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #859 = Methodref          #853.#858    // scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #860 = Utf8               bitCount
   #861 = NameAndType        #860:#446    // bitCount:(I)I
   #862 = Methodref          #668.#861    // java/lang/Integer.bitCount:(I)I
   #863 = Utf8               (Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
   #864 = NameAndType        #845:#863    // filterImpl:(Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
   #865 = Methodref          #504.#864    // scala/collection/immutable/MapNode.filterImpl:(Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
   #866 = Methodref          #504.#231    // scala/collection/immutable/MapNode.size:()I
   #867 = Methodref          #504.#828    // scala/collection/immutable/MapNode.cachedJavaKeySetHashCode:()I
   #868 = Utf8               scala/collection/mutable/Queue$
   #869 = Class              #868         // scala/collection/mutable/Queue$
   #870 = Utf8               Lscala/collection/mutable/Queue$;
   #871 = NameAndType        #49:#870     // MODULE$:Lscala/collection/mutable/Queue$;
   #872 = Fieldref           #869.#871    // scala/collection/mutable/Queue$.MODULE$:Lscala/collection/mutable/Queue$;
   #873 = Utf8               ()Lscala/collection/mutable/Queue;
   #874 = NameAndType        #857:#873    // empty:()Lscala/collection/mutable/Queue;
   #875 = Methodref          #869.#874    // scala/collection/mutable/Queue$.empty:()Lscala/collection/mutable/Queue;
   #876 = Utf8               scala/collection/mutable/Queue
   #877 = Class              #876         // scala/collection/mutable/Queue
   #878 = Utf8               $plus$eq
   #879 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #880 = NameAndType        #878:#879    // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #881 = Methodref          #877.#880    // scala/collection/mutable/Queue.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #882 = Utf8               scala/collection/immutable/Nil$
   #883 = Class              #882         // scala/collection/immutable/Nil$
   #884 = Utf8               Lscala/collection/immutable/Nil$;
   #885 = NameAndType        #49:#884     // MODULE$:Lscala/collection/immutable/Nil$;
   #886 = Fieldref           #883.#885    // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #887 = Utf8               scala/collection/IterableFactory
   #888 = Class              #887         // scala/collection/IterableFactory
   #889 = Utf8               apply$
   #890 = Utf8               (Lscala/collection/IterableFactory;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #891 = NameAndType        #889:#890    // apply$:(Lscala/collection/IterableFactory;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #892 = InterfaceMethodref #888.#891    // scala/collection/IterableFactory.apply$:(Lscala/collection/IterableFactory;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #893 = Utf8               bitposFrom
   #894 = NameAndType        #893:#446    // bitposFrom:(I)I
   #895 = Methodref          #471.#894    // scala/collection/immutable/Node$.bitposFrom:(I)I
   #896 = Utf8               dequeue
   #897 = NameAndType        #896:#67     // dequeue:()Ljava/lang/Object;
   #898 = Methodref          #877.#897    // scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
   #899 = Utf8               getKey
   #900 = Utf8               (I)Ljava/lang/Object;
   #901 = NameAndType        #899:#900    // getKey:(I)Ljava/lang/Object;
   #902 = Methodref          #504.#901    // scala/collection/immutable/MapNode.getKey:(I)Ljava/lang/Object;
   #903 = Utf8               getValue
   #904 = NameAndType        #903:#900    // getValue:(I)Ljava/lang/Object;
   #905 = Methodref          #504.#904    // scala/collection/immutable/MapNode.getValue:(I)Ljava/lang/Object;
   #906 = Methodref          #504.#738    // scala/collection/immutable/MapNode.getHash:(I)I
   #907 = NameAndType        #857:#606    // empty:()Lscala/collection/immutable/HashMap;
   #908 = Methodref          #48.#907     // scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
   #909 = Utf8               Z
   #910 = Utf8               filterImpl_payload
   #911 = Utf8               filterImpl_newSize
   #912 = Utf8               filterImpl_newContent
   #913 = Utf8               filterImpl_newOriginalHashCodes
   #914 = Utf8               [I
   #915 = Utf8               filterImpl_newMaximumIndex
   #916 = Utf8               filterImpl_j
   #917 = Utf8               filterImpl_newDataIndex
   #918 = Utf8               filterImpl_minimumIndex
   #919 = Utf8               filterImpl_maximumIndex
   #920 = Utf8               filterImpl_newDataMap
   #921 = Utf8               filterImpl_newCachedHashCode
   #922 = Utf8               filterImpl_dataIndex
   #923 = Utf8               filterImpl_i
   #924 = Utf8               filterImpl_oldSubNode
   #925 = Utf8               filterImpl_newSubNode
   #926 = Utf8               filterImpl_node
   #927 = Utf8               filterImpl_bitpos
   #928 = Utf8               filterImpl_newDataSize
   #929 = Utf8               filterImpl_newContentSize
   #930 = Utf8               filterImpl_newOriginalHashes
   #931 = Utf8               filterImpl_newAllMap
   #932 = Utf8               filterImpl_maxIndex
   #933 = Utf8               filterImpl_oldDataIndex
   #934 = Utf8               filterImpl_oldNodeIndex
   #935 = Utf8               filterImpl_newNodeIndex
   #936 = Utf8               filterImpl_allMap
   #937 = Utf8               filterImpl_oldDataPassThrough
   #938 = Utf8               filterImpl_nodeMigrateToDataTargetMap
   #939 = Utf8               filterImpl_nodesToMigrateToData
   #940 = Utf8               Lscala/collection/mutable/Queue;
   #941 = Utf8               filterImpl_nodesToPassThroughMap
   #942 = Utf8               filterImpl_mapOfNewNodes
   #943 = Utf8               filterImpl_newNodes
   #944 = Utf8               filterImpl_newNodeMap
   #945 = Utf8               filterImpl_nodeIndex
   #946 = Utf8               filterImpl_this
   #947 = Class              #914         // "[I"
   #948 = Utf8               removedAll
   #949 = Utf8               (Lscala/collection/IterableOnce<TK;>;)Lscala/collection/immutable/HashMap<TK;TV;>;
   #950 = Utf8               keys
   #951 = Utf8               scala/collection/immutable/HashSet
   #952 = Class              #951         // scala/collection/immutable/HashSet
   #953 = Methodref          #952.#253    // scala/collection/immutable/HashSet.isEmpty:()Z
   #954 = Utf8               scala/collection/immutable/MapNodeRemoveAllSetNodeIterator
   #955 = Class              #954         // scala/collection/immutable/MapNodeRemoveAllSetNodeIterator
   #956 = Utf8               ()Lscala/collection/immutable/BitmapIndexedSetNode;
   #957 = NameAndType        #41:#956     // rootNode:()Lscala/collection/immutable/BitmapIndexedSetNode;
   #958 = Methodref          #952.#957    // scala/collection/immutable/HashSet.rootNode:()Lscala/collection/immutable/BitmapIndexedSetNode;
   #959 = Utf8               (Lscala/collection/immutable/SetNode;)V
   #960 = NameAndType        #55:#959     // "<init>":(Lscala/collection/immutable/SetNode;)V
   #961 = Methodref          #955.#960    // scala/collection/immutable/MapNodeRemoveAllSetNodeIterator."<init>":(Lscala/collection/immutable/SetNode;)V
   #962 = Utf8               removeAll
   #963 = Utf8               (Lscala/collection/immutable/BitmapIndexedMapNode;)Lscala/collection/immutable/BitmapIndexedMapNode;
   #964 = NameAndType        #962:#963    // removeAll:(Lscala/collection/immutable/BitmapIndexedMapNode;)Lscala/collection/immutable/BitmapIndexedMapNode;
   #965 = Methodref          #955.#964    // scala/collection/immutable/MapNodeRemoveAllSetNodeIterator.removeAll:(Lscala/collection/immutable/BitmapIndexedMapNode;)Lscala/collection/immutable/BitmapIndexedMapNode;
   #966 = Methodref          #40.#253     // scala/collection/mutable/HashSet.isEmpty:()Z
   #967 = Utf8               (Lscala/collection/mutable/HashSet;)V
   #968 = NameAndType        #55:#967     // "<init>":(Lscala/collection/mutable/HashSet;)V
   #969 = Methodref          #36.#968     // scala/collection/mutable/HashSet$$anon$2."<init>":(Lscala/collection/mutable/HashSet;)V
   #970 = Methodref          #38.#563     // scala/collection/mutable/HashSet$Node.hash:()I
   #971 = Methodref          #38.#568     // scala/collection/mutable/HashSet$Node.key:()Ljava/lang/Object;
   #972 = Utf8               Lscala/collection/mutable/HashSet$Node;
   #973 = Utf8               curr
   #974 = Utf8               unimproveHash_improvedHash
   #975 = Utf8               partition
   #976 = Utf8               (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;)Lscala/Tuple2<Lscala/collection/immutable/HashMap<TK;TV;>;Lscala/collection/immutable/HashMap<TK;TV;>;>;
   #977 = Utf8               p
   #978 = Utf8               partition$
   #979 = NameAndType        #978:#114    // partition$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
   #980 = InterfaceMethodref #112.#979    // scala/collection/StrictOptimizedIterableOps.partition$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
   #981 = Utf8               take
   #982 = Utf8               (I)Lscala/collection/immutable/HashMap;
   #983 = Utf8               (I)Lscala/collection/immutable/HashMap<TK;TV;>;
   #984 = Utf8               n
   #985 = Utf8               scala/collection/IterableOps
   #986 = Class              #985         // scala/collection/IterableOps
   #987 = Utf8               take$
   #988 = Utf8               (Lscala/collection/IterableOps;I)Ljava/lang/Object;
   #989 = NameAndType        #987:#988    // take$:(Lscala/collection/IterableOps;I)Ljava/lang/Object;
   #990 = InterfaceMethodref #986.#989    // scala/collection/IterableOps.take$:(Lscala/collection/IterableOps;I)Ljava/lang/Object;
   #991 = Utf8               takeRight
   #992 = Utf8               takeRight$
   #993 = Utf8               (Lscala/collection/StrictOptimizedIterableOps;I)Ljava/lang/Object;
   #994 = NameAndType        #992:#993    // takeRight$:(Lscala/collection/StrictOptimizedIterableOps;I)Ljava/lang/Object;
   #995 = InterfaceMethodref #112.#994    // scala/collection/StrictOptimizedIterableOps.takeRight$:(Lscala/collection/StrictOptimizedIterableOps;I)Ljava/lang/Object;
   #996 = Utf8               takeWhile
   #997 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/HashMap;
   #998 = Utf8               (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;)Lscala/collection/immutable/HashMap<TK;TV;>;
   #999 = Utf8               takeWhile$
  #1000 = Utf8               (Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
  #1001 = NameAndType        #999:#1000   // takeWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
  #1002 = InterfaceMethodref #986.#1001   // scala/collection/IterableOps.takeWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
  #1003 = Utf8               dropWhile
  #1004 = Utf8               dropWhile$
  #1005 = NameAndType        #1004:#1000  // dropWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
  #1006 = InterfaceMethodref #986.#1005   // scala/collection/IterableOps.dropWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
  #1007 = Utf8               dropRight
  #1008 = Utf8               dropRight$
  #1009 = NameAndType        #1008:#993   // dropRight$:(Lscala/collection/StrictOptimizedIterableOps;I)Ljava/lang/Object;
  #1010 = InterfaceMethodref #112.#1009   // scala/collection/StrictOptimizedIterableOps.dropRight$:(Lscala/collection/StrictOptimizedIterableOps;I)Ljava/lang/Object;
  #1011 = Utf8               drop
  #1012 = Utf8               drop$
  #1013 = NameAndType        #1012:#988   // drop$:(Lscala/collection/IterableOps;I)Ljava/lang/Object;
  #1014 = InterfaceMethodref #986.#1013   // scala/collection/IterableOps.drop$:(Lscala/collection/IterableOps;I)Ljava/lang/Object;
  #1015 = Utf8               span
  #1016 = Utf8               span$
  #1017 = NameAndType        #1016:#114   // span$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
  #1018 = InterfaceMethodref #112.#1017   // scala/collection/StrictOptimizedIterableOps.span$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
  #1019 = NameAndType        #1011:#982   // drop:(I)Lscala/collection/immutable/HashMap;
  #1020 = Methodref          #2.#1019     // scala/collection/immutable/HashMap.drop:(I)Lscala/collection/immutable/HashMap;
  #1021 = NameAndType        #1007:#982   // dropRight:(I)Lscala/collection/immutable/HashMap;
  #1022 = Methodref          #2.#1021     // scala/collection/immutable/HashMap.dropRight:(I)Lscala/collection/immutable/HashMap;
  #1023 = NameAndType        #1003:#997   // dropWhile:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
  #1024 = Methodref          #2.#1023     // scala/collection/immutable/HashMap.dropWhile:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
  #1025 = NameAndType        #996:#997    // takeWhile:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
  #1026 = Methodref          #2.#1025     // scala/collection/immutable/HashMap.takeWhile:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
  #1027 = NameAndType        #991:#982    // takeRight:(I)Lscala/collection/immutable/HashMap;
  #1028 = Methodref          #2.#1027     // scala/collection/immutable/HashMap.takeRight:(I)Lscala/collection/immutable/HashMap;
  #1029 = NameAndType        #981:#982    // take:(I)Lscala/collection/immutable/HashMap;
  #1030 = Methodref          #2.#1029     // scala/collection/immutable/HashMap.take:(I)Lscala/collection/immutable/HashMap;
  #1031 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/immutable/MapOps;
  #1032 = NameAndType        #948:#60     // removedAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
  #1033 = Methodref          #2.#1032     // scala/collection/immutable/HashMap.removedAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
  #1034 = Utf8               (Lscala/Function1;Z)Ljava/lang/Object;
  #1035 = NameAndType        #845:#846    // filterImpl:(Lscala/Function1;Z)Lscala/collection/immutable/HashMap;
  #1036 = Methodref          #2.#1035     // scala/collection/immutable/HashMap.filterImpl:(Lscala/Function1;Z)Lscala/collection/immutable/HashMap;
  #1037 = Utf8               (Lscala/Function2;)Lscala/collection/immutable/MapOps;
  #1038 = NameAndType        #816:#817    // transform:(Lscala/Function2;)Lscala/collection/immutable/HashMap;
  #1039 = Methodref          #2.#1038     // scala/collection/immutable/HashMap.transform:(Lscala/Function2;)Lscala/collection/immutable/HashMap;
  #1040 = NameAndType        #620:#606    // init:()Lscala/collection/immutable/HashMap;
  #1041 = Methodref          #2.#1040     // scala/collection/immutable/HashMap.init:()Lscala/collection/immutable/HashMap;
  #1042 = NameAndType        #605:#606    // tail:()Lscala/collection/immutable/HashMap;
  #1043 = Methodref          #2.#1042     // scala/collection/immutable/HashMap.tail:()Lscala/collection/immutable/HashMap;
  #1044 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #1045 = Utf8               suffix
  #1046 = NameAndType        #546:#60     // concat:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
  #1047 = Methodref          #2.#1046     // scala/collection/immutable/HashMap.concat:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
  #1048 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
  #1049 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/MapOps;
  #1050 = NameAndType        #530:#531    // updatedWith:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/HashMap;
  #1051 = Methodref          #2.#1050     // scala/collection/immutable/HashMap.updatedWith:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/HashMap;
  #1052 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
  #1053 = NameAndType        #522:#523    // updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
  #1054 = Methodref          #2.#1053     // scala/collection/immutable/HashMap.updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
  #1055 = Utf8               ()Lscala/collection/Set;
  #1056 = NameAndType        #235:#236    // keySet:()Lscala/collection/immutable/Set;
  #1057 = Methodref          #2.#1056     // scala/collection/immutable/HashMap.keySet:()Lscala/collection/immutable/Set;
  #1058 = Utf8               $anonfun$stepper$1
  #1059 = Utf8               (Lscala/collection/immutable/MapNode;I)Lscala/Tuple2;
  #1060 = Utf8               node
  #1061 = Utf8               i
  #1062 = Methodref          #504.#634    // scala/collection/immutable/MapNode.getPayload:(I)Lscala/Tuple2;
  #1063 = Utf8               $anonfun$keyStepper$1
  #1064 = Utf8               (Lscala/collection/immutable/MapNode;I)I
  #1065 = Utf8               unboxToInt
  #1066 = NameAndType        #1065:#437   // unboxToInt:(Ljava/lang/Object;)I
  #1067 = Methodref          #487.#1066   // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #1068 = Utf8               $anonfun$keyStepper$2
  #1069 = Utf8               (Lscala/collection/immutable/MapNode;I)J
  #1070 = Utf8               unboxToLong
  #1071 = Utf8               (Ljava/lang/Object;)J
  #1072 = NameAndType        #1070:#1071  // unboxToLong:(Ljava/lang/Object;)J
  #1073 = Methodref          #487.#1072   // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #1074 = Utf8               $anonfun$keyStepper$3
  #1075 = Utf8               (Lscala/collection/immutable/MapNode;I)D
  #1076 = Utf8               unboxToDouble
  #1077 = Utf8               (Ljava/lang/Object;)D
  #1078 = NameAndType        #1076:#1077  // unboxToDouble:(Ljava/lang/Object;)D
  #1079 = Methodref          #487.#1078   // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #1080 = Utf8               $anonfun$keyStepper$4
  #1081 = Utf8               (Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
  #1082 = Utf8               $anonfun$valueStepper$1
  #1083 = Utf8               $anonfun$valueStepper$2
  #1084 = Utf8               $anonfun$valueStepper$3
  #1085 = Utf8               $anonfun$valueStepper$4
  #1086 = Utf8               (Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;)V
  #1087 = Methodref          #5.#57       // scala/collection/immutable/AbstractMap."<init>":()V
  #1088 = Utf8               releaseFence
  #1089 = NameAndType        #1088:#56    // releaseFence:()V
  #1090 = Methodref          #435.#1089   // scala/runtime/Statics.releaseFence:()V
  #1091 = NameAndType        #1058:#1059  // $anonfun$stepper$1:(Lscala/collection/immutable/MapNode;I)Lscala/Tuple2;
  #1092 = Methodref          #2.#1091     // scala/collection/immutable/HashMap.$anonfun$stepper$1:(Lscala/collection/immutable/MapNode;I)Lscala/Tuple2;
  #1093 = NameAndType        #1063:#1064  // $anonfun$keyStepper$1:(Lscala/collection/immutable/MapNode;I)I
  #1094 = Methodref          #2.#1093     // scala/collection/immutable/HashMap.$anonfun$keyStepper$1:(Lscala/collection/immutable/MapNode;I)I
  #1095 = Utf8               boxToInteger
  #1096 = NameAndType        #1095:#670   // boxToInteger:(I)Ljava/lang/Integer;
  #1097 = Methodref          #487.#1096   // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #1098 = NameAndType        #1068:#1069  // $anonfun$keyStepper$2:(Lscala/collection/immutable/MapNode;I)J
  #1099 = Methodref          #2.#1098     // scala/collection/immutable/HashMap.$anonfun$keyStepper$2:(Lscala/collection/immutable/MapNode;I)J
  #1100 = Utf8               boxToLong
  #1101 = Utf8               (J)Ljava/lang/Long;
  #1102 = NameAndType        #1100:#1101  // boxToLong:(J)Ljava/lang/Long;
  #1103 = Methodref          #487.#1102   // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #1104 = NameAndType        #1074:#1075  // $anonfun$keyStepper$3:(Lscala/collection/immutable/MapNode;I)D
  #1105 = Methodref          #2.#1104     // scala/collection/immutable/HashMap.$anonfun$keyStepper$3:(Lscala/collection/immutable/MapNode;I)D
  #1106 = Utf8               boxToDouble
  #1107 = Utf8               (D)Ljava/lang/Double;
  #1108 = NameAndType        #1106:#1107  // boxToDouble:(D)Ljava/lang/Double;
  #1109 = Methodref          #487.#1108   // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #1110 = NameAndType        #1080:#1081  // $anonfun$keyStepper$4:(Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
  #1111 = Methodref          #2.#1110     // scala/collection/immutable/HashMap.$anonfun$keyStepper$4:(Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
  #1112 = NameAndType        #1082:#1064  // $anonfun$valueStepper$1:(Lscala/collection/immutable/MapNode;I)I
  #1113 = Methodref          #2.#1112     // scala/collection/immutable/HashMap.$anonfun$valueStepper$1:(Lscala/collection/immutable/MapNode;I)I
  #1114 = NameAndType        #1083:#1069  // $anonfun$valueStepper$2:(Lscala/collection/immutable/MapNode;I)J
  #1115 = Methodref          #2.#1114     // scala/collection/immutable/HashMap.$anonfun$valueStepper$2:(Lscala/collection/immutable/MapNode;I)J
  #1116 = NameAndType        #1084:#1075  // $anonfun$valueStepper$3:(Lscala/collection/immutable/MapNode;I)D
  #1117 = Methodref          #2.#1116     // scala/collection/immutable/HashMap.$anonfun$valueStepper$3:(Lscala/collection/immutable/MapNode;I)D
  #1118 = NameAndType        #1085:#1081  // $anonfun$valueStepper$4:(Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
  #1119 = Methodref          #2.#1118     // scala/collection/immutable/HashMap.$anonfun$valueStepper$4:(Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
  #1120 = Utf8               $deserializeLambda$
  #1121 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1122 = Utf8               scala/runtime/LambdaDeserialize
  #1123 = Class              #1122        // scala/runtime/LambdaDeserialize
  #1124 = Utf8               bootstrap
  #1125 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1126 = NameAndType        #1124:#1125  // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1127 = Methodref          #1123.#1126  // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1128 = MethodHandle       6:#1127      // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1129 = Utf8               lambdaDeserialize
  #1130 = NameAndType        #1129:#1121  // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1131 = InvokeDynamic      #9:#1130     // #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1132 = Utf8               Signature
  #1133 = Utf8               Code
  #1134 = Utf8               LineNumberTable
  #1135 = Utf8               LocalVariableTable
  #1136 = Utf8               MethodParameters
  #1137 = Utf8               Deprecated
  #1138 = Utf8               StackMapTable
  #1139 = Utf8               InnerClasses
  #1140 = Utf8               SourceFile
  #1141 = Utf8               RuntimeVisibleAnnotations
  #1142 = Utf8               BootstrapMethods
  #1143 = Utf8               ScalaInlineInfo
  #1144 = Utf8               ScalaSig
{
  private final scala.collection.immutable.BitmapIndexedMapNode<K, V> rootNode;
    descriptor: Lscala/collection/immutable/BitmapIndexedMapNode;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #43                          // Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;

  public static <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.ReusableBuilder<scala.Tuple2<K, V>, scala.collection.immutable.HashMap<K, V>> newBuilder();
    descriptor: ()Lscala/collection/mutable/ReusableBuilder;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #52                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
         3: pop
         4: new           #54                 // class scala/collection/immutable/HashMapBuilder
         7: dup
         8: invokespecial #58                 // Method scala/collection/immutable/HashMapBuilder."<init>":()V
        11: areturn
      LineNumberTable:
        line 2175: 4
    Signature: #46                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/ReusableBuilder<Lscala/Tuple2<TK;TV;>;Lscala/collection/immutable/HashMap<TK;TV;>;>;

  public static <K extends java.lang.Object, V extends java.lang.Object> scala.collection.immutable.HashMap<K, V> from(scala.collection.IterableOnce<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #52                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
         3: aload_0
         4: invokevirtual #64                 // Method scala/collection/immutable/HashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 source   Lscala/collection/IterableOnce;
    Signature: #61                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      source                         final

  public java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod scala/collection/generic/DefaultSerializable.writeReplace$:(Lscala/collection/generic/DefaultSerializable;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;

  public scala.collection.IterableOps map(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/collection/IterableOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #82                 // InterfaceMethod scala/collection/StrictOptimizedMapOps.map$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Function1;)Lscala/collection/IterableOps;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.collection.IterableOps flatMap(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/collection/IterableOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #87                 // InterfaceMethod scala/collection/StrictOptimizedMapOps.flatMap$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Function1;)Lscala/collection/IterableOps;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.collection.IterableOps collect(scala.PartialFunction);
    descriptor: (Lscala/PartialFunction;)Lscala/collection/IterableOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #94                 // InterfaceMethod scala/collection/StrictOptimizedMapOps.collect$:(Lscala/collection/StrictOptimizedMapOps;Lscala/PartialFunction;)Lscala/collection/IterableOps;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1    pf   Lscala/PartialFunction;
    MethodParameters:
      Name                           Flags
      pf                             final

  public scala.collection.IterableOps $plus(scala.Tuple2, scala.Tuple2, scala.collection.immutable.Seq);
    descriptor: (Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/immutable/Seq;)Lscala/collection/IterableOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #104                // InterfaceMethod scala/collection/StrictOptimizedMapOps.$plus$:(Lscala/collection/StrictOptimizedMapOps;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/immutable/Seq;)Lscala/collection/IterableOps;
         7: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/immutable/HashMap;
            0       8     1 elem1   Lscala/Tuple2;
            0       8     2 elem2   Lscala/Tuple2;
            0       8     3 elems   Lscala/collection/immutable/Seq;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      elem1                          final
      elem2                          final
      elems                          final

  public <A1 extends java.lang.Object, A2 extends java.lang.Object> scala.Tuple2<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>> unzip(scala.Function1<scala.Tuple2<K, V>, scala.Tuple2<A1, A2>>);
    descriptor: (Lscala/Function1;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #116                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.unzip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1 asPair   Lscala/Function1;
    Signature: #109                         // <A1:Ljava/lang/Object;A2:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TA1;TA2;>;>;)Lscala/Tuple2<Lscala/collection/immutable/Iterable<TA1;>;Lscala/collection/immutable/Iterable<TA2;>;>;
    MethodParameters:
      Name                           Flags
      asPair                         final

  public <A1 extends java.lang.Object, A2 extends java.lang.Object, A3 extends java.lang.Object> scala.Tuple3<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>, scala.collection.immutable.Iterable<A3>> unzip3(scala.Function1<scala.Tuple2<K, V>, scala.Tuple3<A1, A2, A3>>);
    descriptor: (Lscala/Function1;)Lscala/Tuple3;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #124                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.unzip3$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple3;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1 asTriple   Lscala/Function1;
    Signature: #119                         // <A1:Ljava/lang/Object;A2:Ljava/lang/Object;A3:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/Tuple3<TA1;TA2;TA3;>;>;)Lscala/Tuple3<Lscala/collection/immutable/Iterable<TA1;>;Lscala/collection/immutable/Iterable<TA2;>;Lscala/collection/immutable/Iterable<TA3;>;>;
    MethodParameters:
      Name                           Flags
      asTriple                       final

  public java.lang.Object map(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #128                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.map$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final

  public final <B extends java.lang.Object, C2 extends java.lang.Object> C2 strictOptimizedMap(scala.collection.mutable.Builder<B, C2>, scala.Function1<scala.Tuple2<K, V>, B>);
    descriptor: (Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #136                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.strictOptimizedMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1     b   Lscala/collection/mutable/Builder;
            0       7     2     f   Lscala/Function1;
    Signature: #131                         // <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/mutable/Builder<TB;TC2;>;Lscala/Function1<Lscala/Tuple2<TK;TV;>;TB;>;)TC2;
    MethodParameters:
      Name                           Flags
      b                              final
      f                              final

  public java.lang.Object flatMap(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #139                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.flatMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final

  public final <B extends java.lang.Object, C2 extends java.lang.Object> C2 strictOptimizedFlatMap(scala.collection.mutable.Builder<B, C2>, scala.Function1<scala.Tuple2<K, V>, scala.collection.IterableOnce<B>>);
    descriptor: (Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #144                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.strictOptimizedFlatMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1     b   Lscala/collection/mutable/Builder;
            0       7     2     f   Lscala/Function1;
    Signature: #141                         // <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/mutable/Builder<TB;TC2;>;Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/collection/IterableOnce<TB;>;>;)TC2;
    MethodParameters:
      Name                           Flags
      b                              final
      f                              final

  public final <B extends java.lang.Object, C2 extends java.lang.Object> C2 strictOptimizedConcat(scala.collection.IterableOnce<B>, scala.collection.mutable.Builder<B, C2>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #152                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.strictOptimizedConcat$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1  that   Lscala/collection/IterableOnce;
            0       7     2     b   Lscala/collection/mutable/Builder;
    Signature: #147                         // <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TB;>;Lscala/collection/mutable/Builder<TB;TC2;>;)TC2;
    MethodParameters:
      Name                           Flags
      that                           final
      b                              final

  public java.lang.Object collect(scala.PartialFunction);
    descriptor: (Lscala/PartialFunction;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #156                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.collect$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/PartialFunction;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1    pf   Lscala/PartialFunction;
    MethodParameters:
      Name                           Flags
      pf                             final

  public final <B extends java.lang.Object, C2 extends java.lang.Object> C2 strictOptimizedCollect(scala.collection.mutable.Builder<B, C2>, scala.PartialFunction<scala.Tuple2<K, V>, B>);
    descriptor: (Lscala/collection/mutable/Builder;Lscala/PartialFunction;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #163                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.strictOptimizedCollect$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/PartialFunction;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1     b   Lscala/collection/mutable/Builder;
            0       7     2    pf   Lscala/PartialFunction;
    Signature: #159                         // <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/mutable/Builder<TB;TC2;>;Lscala/PartialFunction<Lscala/Tuple2<TK;TV;>;TB;>;)TC2;
    MethodParameters:
      Name                           Flags
      b                              final
      pf                             final

  public java.lang.Object flatten(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #168                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.flatten$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1 toIterableOnce   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      toIterableOnce                 final

  public final <B extends java.lang.Object, C2 extends java.lang.Object> C2 strictOptimizedFlatten(scala.collection.mutable.Builder<B, C2>, scala.Function1<scala.Tuple2<K, V>, scala.collection.IterableOnce<B>>);
    descriptor: (Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #172                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.strictOptimizedFlatten$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/mutable/Builder;Lscala/Function1;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1     b   Lscala/collection/mutable/Builder;
            0       7     2 toIterableOnce   Lscala/Function1;
    Signature: #141                         // <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/mutable/Builder<TB;TC2;>;Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/collection/IterableOnce<TB;>;>;)TC2;
    MethodParameters:
      Name                           Flags
      b                              final
      toIterableOnce                 final

  public java.lang.Object zip(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #178                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.zip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1  that   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      that                           final

  public final <B extends java.lang.Object, C2 extends java.lang.Object> C2 strictOptimizedZip(scala.collection.IterableOnce<B>, scala.collection.mutable.Builder<scala.Tuple2<scala.Tuple2<K, V>, B>, C2>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #183                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.strictOptimizedZip$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/collection/IterableOnce;Lscala/collection/mutable/Builder;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1  that   Lscala/collection/IterableOnce;
            0       7     2     b   Lscala/collection/mutable/Builder;
    Signature: #180                         // <B:Ljava/lang/Object;C2:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TB;>;Lscala/collection/mutable/Builder<Lscala/Tuple2<Lscala/Tuple2<TK;TV;>;TB;>;TC2;>;)TC2;
    MethodParameters:
      Name                           Flags
      that                           final
      b                              final

  public java.lang.Object zipWithIndex();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #188                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.zipWithIndex$:(Lscala/collection/StrictOptimizedIterableOps;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;

  public java.lang.Object scanLeft(java.lang.Object, scala.Function2);
    descriptor: (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #196                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.scanLeft$:(Lscala/collection/StrictOptimizedIterableOps;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1     z   Ljava/lang/Object;
            0       7     2    op   Lscala/Function2;
    MethodParameters:
      Name                           Flags
      z                              final
      op                             final

  public java.lang.Object filter(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #203                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.filter$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1  pred   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      pred                           final

  public java.lang.Object filterNot(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #207                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.filterNot$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1  pred   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      pred                           final

  public <A1 extends java.lang.Object, A2 extends java.lang.Object> scala.Tuple2<scala.collection.immutable.Iterable<A1>, scala.collection.immutable.Iterable<A2>> partitionMap(scala.Function1<scala.Tuple2<K, V>, scala.util.Either<A1, A2>>);
    descriptor: (Lscala/Function1;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #212                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.partitionMap$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     f   Lscala/Function1;
    Signature: #209                         // <A1:Ljava/lang/Object;A2:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;Lscala/util/Either<TA1;TA2;>;>;)Lscala/Tuple2<Lscala/collection/immutable/Iterable<TA1;>;Lscala/collection/immutable/Iterable<TA2;>;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public java.lang.Object tapEach(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #216                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.tapEach$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.collection.immutable.BitmapIndexedMapNode<K, V> rootNode();
    descriptor: ()Lscala/collection/immutable/BitmapIndexedMapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #220                // Field rootNode:Lscala/collection/immutable/BitmapIndexedMapNode;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;
    Signature: #218                         // ()Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;

  public scala.collection.MapFactory<scala.collection.immutable.HashMap> mapFactory();
    descriptor: ()Lscala/collection/MapFactory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #52                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
         3: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/immutable/HashMap;
    Signature: #223                         // ()Lscala/collection/MapFactory<Lscala/collection/immutable/HashMap;>;

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
         7: ireturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/immutable/HashMap;

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
         7: ireturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/immutable/HashMap;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
         7: iconst_0
         8: if_icmpne     13
        11: iconst_1
        12: ireturn
        13: iconst_0
        14: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/immutable/HashMap;

  public scala.collection.immutable.Set<K> keySet();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #238                // Method size:()I
         4: iconst_0
         5: if_icmpne     16
         8: getstatic     #243                // Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
        11: pop
        12: getstatic     #246                // Field scala/collection/immutable/Set$EmptySet$.MODULE$:Lscala/collection/immutable/Set$EmptySet$;
        15: areturn
        16: new           #20                 // class scala/collection/immutable/HashMap$HashKeySet
        19: dup
        20: aload_0
        21: invokespecial #249                // Method scala/collection/immutable/HashMap$HashKeySet."<init>":(Lscala/collection/immutable/HashMap;)V
        24: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/collection/immutable/HashMap;
    Signature: #237                         // ()Lscala/collection/immutable/Set<TK;>;

  public scala.collection.Iterator<scala.Tuple2<K, V>> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #254                // Method isEmpty:()Z
         4: ifeq          15
         7: getstatic     #259                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #263                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: areturn
        15: new           #265                // class scala/collection/immutable/MapKeyValueTupleIterator
        18: dup
        19: aload_0
        20: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        23: invokespecial #268                // Method scala/collection/immutable/MapKeyValueTupleIterator."<init>":(Lscala/collection/immutable/MapNode;)V
        26: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 79: 0
        line 80: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/immutable/HashMap;
    Signature: #252                         // ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;

  public scala.collection.Iterator<K> keysIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #254                // Method isEmpty:()Z
         4: ifeq          15
         7: getstatic     #259                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #263                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: areturn
        15: new           #272                // class scala/collection/immutable/MapKeyIterator
        18: dup
        19: aload_0
        20: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        23: invokespecial #273                // Method scala/collection/immutable/MapKeyIterator."<init>":(Lscala/collection/immutable/MapNode;)V
        26: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 84: 0
        line 85: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/immutable/HashMap;
    Signature: #270                         // ()Lscala/collection/Iterator<TK;>;

  public scala.collection.Iterator<V> valuesIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #254                // Method isEmpty:()Z
         4: ifeq          15
         7: getstatic     #259                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #263                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: areturn
        15: new           #277                // class scala/collection/immutable/MapValueIterator
        18: dup
        19: aload_0
        20: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        23: invokespecial #278                // Method scala/collection/immutable/MapValueIterator."<init>":(Lscala/collection/immutable/MapNode;)V
        26: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 88: 0
        line 89: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/immutable/HashMap;
    Signature: #275                         // ()Lscala/collection/Iterator<TV;>;

  public scala.collection.Iterator<scala.Tuple2<K, V>> reverseIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #254                // Method isEmpty:()Z
         4: ifeq          15
         7: getstatic     #259                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #263                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: areturn
        15: new           #281                // class scala/collection/immutable/MapKeyValueTupleReverseIterator
        18: dup
        19: aload_0
        20: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        23: invokespecial #282                // Method scala/collection/immutable/MapKeyValueTupleReverseIterator."<init>":(Lscala/collection/immutable/MapNode;)V
        26: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 93: 0
        line 94: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/immutable/HashMap;
    Signature: #252                         // ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;

  public <S extends scala.collection.Stepper<?>> S stepper(scala.collection.StepperShape<scala.Tuple2<K, V>, S>);
    descriptor: (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=2
         0: aload_1
         1: getstatic     #291                // Field scala/collection/convert/impl/AnyChampStepper$.MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
         4: pop
         5: aload_0
         6: invokevirtual #238                // Method size:()I
         9: aload_0
        10: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        13: invokedynamic #312,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
        18: astore        4
        20: astore_3
        21: istore_2
        22: new           #314                // class scala/collection/convert/impl/AnyChampStepper
        25: dup
        26: iload_2
        27: aload         4
        29: invokespecial #317                // Method scala/collection/convert/impl/AnyChampStepper."<init>":(ILscala/Function2;)V
        32: astore        5
        34: aload         5
        36: aload_3
        37: invokevirtual #321                // Method scala/collection/convert/impl/AnyChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
        40: aload         5
        42: aconst_null
        43: astore_3
        44: aconst_null
        45: astore        4
        47: aconst_null
        48: astore        5
        50: invokeinterface #327,  2          // InterfaceMethod scala/collection/StepperShape.parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
        55: areturn
      LineNumberTable:
        line 98: 0
        line 99: 1
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lscala/collection/immutable/HashMap;
            0      56     1 shape   Lscala/collection/StepperShape;
           34       6     5 from_ans   Lscala/collection/convert/impl/AnyChampStepper;
           22      18     2 from_maxSize   I
           22      18     3 from_root   Lscala/collection/immutable/Node;
           22      18     4 from_extract   Lscala/Function2;
    Signature: #285                         // <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TS;>;)TS;
    MethodParameters:
      Name                           Flags
      shape                          final

  public <S extends scala.collection.Stepper<?>> S keyStepper(scala.collection.StepperShape<K, S>);
    descriptor: (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=20, args_size=2
         0: aload_1
         1: invokeinterface #339,  1          // InterfaceMethod scala/collection/StepperShape.shape:()I
         6: istore_3
         7: getstatic     #344                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        10: invokevirtual #347                // Method scala/collection/StepperShape$.IntShape:()I
        13: iload_3
        14: if_icmpne     75
        17: getstatic     #352                // Field scala/collection/convert/impl/IntChampStepper$.MODULE$:Lscala/collection/convert/impl/IntChampStepper$;
        20: pop
        21: aload_0
        22: invokevirtual #238                // Method size:()I
        25: aload_0
        26: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        29: invokedynamic #359,  0            // InvokeDynamic #1:apply:()Lscala/Function2;
        34: astore        6
        36: astore        5
        38: istore        4
        40: new           #361                // class scala/collection/convert/impl/IntChampStepper
        43: dup
        44: iload         4
        46: aload         6
        48: invokespecial #362                // Method scala/collection/convert/impl/IntChampStepper."<init>":(ILscala/Function2;)V
        51: astore        7
        53: aload         7
        55: aload         5
        57: invokevirtual #363                // Method scala/collection/convert/impl/IntChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
        60: aload         7
        62: aconst_null
        63: astore        5
        65: aconst_null
        66: astore        6
        68: aconst_null
        69: astore        7
        71: astore_2
        72: goto          272
        75: getstatic     #344                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        78: invokevirtual #366                // Method scala/collection/StepperShape$.LongShape:()I
        81: iload_3
        82: if_icmpne     143
        85: getstatic     #371                // Field scala/collection/convert/impl/LongChampStepper$.MODULE$:Lscala/collection/convert/impl/LongChampStepper$;
        88: pop
        89: aload_0
        90: invokevirtual #238                // Method size:()I
        93: aload_0
        94: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        97: invokedynamic #376,  0            // InvokeDynamic #2:apply:()Lscala/Function2;
       102: astore        10
       104: astore        9
       106: istore        8
       108: new           #378                // class scala/collection/convert/impl/LongChampStepper
       111: dup
       112: iload         8
       114: aload         10
       116: invokespecial #379                // Method scala/collection/convert/impl/LongChampStepper."<init>":(ILscala/Function2;)V
       119: astore        11
       121: aload         11
       123: aload         9
       125: invokevirtual #380                // Method scala/collection/convert/impl/LongChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
       128: aload         11
       130: aconst_null
       131: astore        9
       133: aconst_null
       134: astore        10
       136: aconst_null
       137: astore        11
       139: astore_2
       140: goto          272
       143: getstatic     #344                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
       146: invokevirtual #383                // Method scala/collection/StepperShape$.DoubleShape:()I
       149: iload_3
       150: if_icmpne     211
       153: getstatic     #388                // Field scala/collection/convert/impl/DoubleChampStepper$.MODULE$:Lscala/collection/convert/impl/DoubleChampStepper$;
       156: pop
       157: aload_0
       158: invokevirtual #238                // Method size:()I
       161: aload_0
       162: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       165: invokedynamic #393,  0            // InvokeDynamic #3:apply:()Lscala/Function2;
       170: astore        14
       172: astore        13
       174: istore        12
       176: new           #395                // class scala/collection/convert/impl/DoubleChampStepper
       179: dup
       180: iload         12
       182: aload         14
       184: invokespecial #396                // Method scala/collection/convert/impl/DoubleChampStepper."<init>":(ILscala/Function2;)V
       187: astore        15
       189: aload         15
       191: aload         13
       193: invokevirtual #397                // Method scala/collection/convert/impl/DoubleChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
       196: aload         15
       198: aconst_null
       199: astore        13
       201: aconst_null
       202: astore        14
       204: aconst_null
       205: astore        15
       207: astore_2
       208: goto          272
       211: aload_1
       212: getstatic     #291                // Field scala/collection/convert/impl/AnyChampStepper$.MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
       215: pop
       216: aload_0
       217: invokevirtual #238                // Method size:()I
       220: aload_0
       221: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       224: invokedynamic #402,  0            // InvokeDynamic #4:apply:()Lscala/Function2;
       229: astore        18
       231: astore        17
       233: istore        16
       235: new           #314                // class scala/collection/convert/impl/AnyChampStepper
       238: dup
       239: iload         16
       241: aload         18
       243: invokespecial #317                // Method scala/collection/convert/impl/AnyChampStepper."<init>":(ILscala/Function2;)V
       246: astore        19
       248: aload         19
       250: aload         17
       252: invokevirtual #321                // Method scala/collection/convert/impl/AnyChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
       255: aload         19
       257: aconst_null
       258: astore        17
       260: aconst_null
       261: astore        18
       263: aconst_null
       264: astore        19
       266: invokeinterface #327,  2          // InterfaceMethod scala/collection/StepperShape.parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
       271: astore_2
       272: aload_2
       273: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 75
          locals = [ top, int ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/StepperShape, class scala/collection/Stepper, int ]
          stack = []
      LineNumberTable:
        line 103: 0
        line 104: 7
        line 105: 75
        line 106: 143
        line 107: 211
        line 109: 272
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     274     0  this   Lscala/collection/immutable/HashMap;
            0     274     1 shape   Lscala/collection/StepperShape;
           53       7     7 from_ans   Lscala/collection/convert/impl/IntChampStepper;
           40      20     4 from_maxSize   I
           40      20     5 from_root   Lscala/collection/immutable/Node;
           40      20     6 from_extract   Lscala/Function2;
          121       7    11 from_ans   Lscala/collection/convert/impl/LongChampStepper;
          108      20     8 from_maxSize   I
          108      20     9 from_root   Lscala/collection/immutable/Node;
          108      20    10 from_extract   Lscala/Function2;
          189       7    15 from_ans   Lscala/collection/convert/impl/DoubleChampStepper;
          176      20    12 from_maxSize   I
          176      20    13 from_root   Lscala/collection/immutable/Node;
          176      20    14 from_extract   Lscala/Function2;
          248       7    19 from_ans   Lscala/collection/convert/impl/AnyChampStepper;
          235      20    16 from_maxSize   I
          235      20    17 from_root   Lscala/collection/immutable/Node;
          235      20    18 from_extract   Lscala/Function2;
    Signature: #337                         // <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<TK;TS;>;)TS;
    MethodParameters:
      Name                           Flags
      shape                          final

  public <S extends scala.collection.Stepper<?>> S valueStepper(scala.collection.StepperShape<V, S>);
    descriptor: (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=20, args_size=2
         0: aload_1
         1: invokeinterface #339,  1          // InterfaceMethod scala/collection/StepperShape.shape:()I
         6: istore_3
         7: getstatic     #344                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        10: invokevirtual #347                // Method scala/collection/StepperShape$.IntShape:()I
        13: iload_3
        14: if_icmpne     75
        17: getstatic     #352                // Field scala/collection/convert/impl/IntChampStepper$.MODULE$:Lscala/collection/convert/impl/IntChampStepper$;
        20: pop
        21: aload_0
        22: invokevirtual #238                // Method size:()I
        25: aload_0
        26: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        29: invokedynamic #414,  0            // InvokeDynamic #5:apply:()Lscala/Function2;
        34: astore        6
        36: astore        5
        38: istore        4
        40: new           #361                // class scala/collection/convert/impl/IntChampStepper
        43: dup
        44: iload         4
        46: aload         6
        48: invokespecial #362                // Method scala/collection/convert/impl/IntChampStepper."<init>":(ILscala/Function2;)V
        51: astore        7
        53: aload         7
        55: aload         5
        57: invokevirtual #363                // Method scala/collection/convert/impl/IntChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
        60: aload         7
        62: aconst_null
        63: astore        5
        65: aconst_null
        66: astore        6
        68: aconst_null
        69: astore        7
        71: astore_2
        72: goto          272
        75: getstatic     #344                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        78: invokevirtual #366                // Method scala/collection/StepperShape$.LongShape:()I
        81: iload_3
        82: if_icmpne     143
        85: getstatic     #371                // Field scala/collection/convert/impl/LongChampStepper$.MODULE$:Lscala/collection/convert/impl/LongChampStepper$;
        88: pop
        89: aload_0
        90: invokevirtual #238                // Method size:()I
        93: aload_0
        94: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        97: invokedynamic #419,  0            // InvokeDynamic #6:apply:()Lscala/Function2;
       102: astore        10
       104: astore        9
       106: istore        8
       108: new           #378                // class scala/collection/convert/impl/LongChampStepper
       111: dup
       112: iload         8
       114: aload         10
       116: invokespecial #379                // Method scala/collection/convert/impl/LongChampStepper."<init>":(ILscala/Function2;)V
       119: astore        11
       121: aload         11
       123: aload         9
       125: invokevirtual #380                // Method scala/collection/convert/impl/LongChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
       128: aload         11
       130: aconst_null
       131: astore        9
       133: aconst_null
       134: astore        10
       136: aconst_null
       137: astore        11
       139: astore_2
       140: goto          272
       143: getstatic     #344                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
       146: invokevirtual #383                // Method scala/collection/StepperShape$.DoubleShape:()I
       149: iload_3
       150: if_icmpne     211
       153: getstatic     #388                // Field scala/collection/convert/impl/DoubleChampStepper$.MODULE$:Lscala/collection/convert/impl/DoubleChampStepper$;
       156: pop
       157: aload_0
       158: invokevirtual #238                // Method size:()I
       161: aload_0
       162: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       165: invokedynamic #424,  0            // InvokeDynamic #7:apply:()Lscala/Function2;
       170: astore        14
       172: astore        13
       174: istore        12
       176: new           #395                // class scala/collection/convert/impl/DoubleChampStepper
       179: dup
       180: iload         12
       182: aload         14
       184: invokespecial #396                // Method scala/collection/convert/impl/DoubleChampStepper."<init>":(ILscala/Function2;)V
       187: astore        15
       189: aload         15
       191: aload         13
       193: invokevirtual #397                // Method scala/collection/convert/impl/DoubleChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
       196: aload         15
       198: aconst_null
       199: astore        13
       201: aconst_null
       202: astore        14
       204: aconst_null
       205: astore        15
       207: astore_2
       208: goto          272
       211: aload_1
       212: getstatic     #291                // Field scala/collection/convert/impl/AnyChampStepper$.MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
       215: pop
       216: aload_0
       217: invokevirtual #238                // Method size:()I
       220: aload_0
       221: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       224: invokedynamic #429,  0            // InvokeDynamic #8:apply:()Lscala/Function2;
       229: astore        18
       231: astore        17
       233: istore        16
       235: new           #314                // class scala/collection/convert/impl/AnyChampStepper
       238: dup
       239: iload         16
       241: aload         18
       243: invokespecial #317                // Method scala/collection/convert/impl/AnyChampStepper."<init>":(ILscala/Function2;)V
       246: astore        19
       248: aload         19
       250: aload         17
       252: invokevirtual #321                // Method scala/collection/convert/impl/AnyChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
       255: aload         19
       257: aconst_null
       258: astore        17
       260: aconst_null
       261: astore        18
       263: aconst_null
       264: astore        19
       266: invokeinterface #327,  2          // InterfaceMethod scala/collection/StepperShape.parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
       271: astore_2
       272: aload_2
       273: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 75
          locals = [ top, int ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/StepperShape, class scala/collection/Stepper, int ]
          stack = []
      LineNumberTable:
        line 114: 0
        line 115: 7
        line 116: 75
        line 117: 143
        line 118: 211
        line 120: 272
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     274     0  this   Lscala/collection/immutable/HashMap;
            0     274     1 shape   Lscala/collection/StepperShape;
           53       7     7 from_ans   Lscala/collection/convert/impl/IntChampStepper;
           40      20     4 from_maxSize   I
           40      20     5 from_root   Lscala/collection/immutable/Node;
           40      20     6 from_extract   Lscala/Function2;
          121       7    11 from_ans   Lscala/collection/convert/impl/LongChampStepper;
          108      20     8 from_maxSize   I
          108      20     9 from_root   Lscala/collection/immutable/Node;
          108      20    10 from_extract   Lscala/Function2;
          189       7    15 from_ans   Lscala/collection/convert/impl/DoubleChampStepper;
          176      20    12 from_maxSize   I
          176      20    13 from_root   Lscala/collection/immutable/Node;
          176      20    14 from_extract   Lscala/Function2;
          248       7    19 from_ans   Lscala/collection/convert/impl/AnyChampStepper;
          235      20    16 from_maxSize   I
          235      20    17 from_root   Lscala/collection/immutable/Node;
          235      20    18 from_extract   Lscala/Function2;
    Signature: #409                         // <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<TV;TS;>;)TS;
    MethodParameters:
      Name                           Flags
      shape                          final

  public final boolean contains(K);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=4, args_size=2
         0: aload_1
         1: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         4: istore_2
         5: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
         8: iload_2
         9: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
        12: istore_3
        13: aload_0
        14: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        17: aload_1
        18: iload_2
        19: iload_3
        20: iconst_0
        21: invokevirtual #452                // Method scala/collection/immutable/BitmapIndexedMapNode.containsKey:(Ljava/lang/Object;III)Z
        24: ireturn
      LineNumberTable:
        line 124: 0
        line 125: 5
        line 126: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      19     2 keyUnimprovedHash   I
           13      11     3 keyHash   I
            0      25     0  this   Lscala/collection/immutable/HashMap;
            0      25     1   key   Ljava/lang/Object;
    Signature: #432                         // (TK;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public V apply(K);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_1
         1: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         4: istore_2
         5: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
         8: iload_2
         9: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
        12: istore_3
        13: aload_0
        14: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        17: aload_1
        18: iload_2
        19: iload_3
        20: iconst_0
        21: invokevirtual #459                // Method scala/collection/immutable/BitmapIndexedMapNode.apply:(Ljava/lang/Object;III)Ljava/lang/Object;
        24: areturn
      LineNumberTable:
        line 130: 0
        line 131: 5
        line 132: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      19     2 keyUnimprovedHash   I
           13      11     3 keyHash   I
            0      25     0  this   Lscala/collection/immutable/HashMap;
            0      25     1   key   Ljava/lang/Object;
    Signature: #456                         // (TK;)TV;
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.Option<V> get(K);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_1
         1: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         4: istore_2
         5: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
         8: iload_2
         9: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
        12: istore_3
        13: aload_0
        14: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        17: aload_1
        18: iload_2
        19: iload_3
        20: iconst_0
        21: invokevirtual #465                // Method scala/collection/immutable/BitmapIndexedMapNode.get:(Ljava/lang/Object;III)Lscala/Option;
        24: areturn
      LineNumberTable:
        line 136: 0
        line 137: 5
        line 138: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      19     2 keyUnimprovedHash   I
           13      11     3 keyHash   I
            0      25     0  this   Lscala/collection/immutable/HashMap;
            0      25     1   key   Ljava/lang/Object;
    Signature: #462                         // (TK;)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public <V1 extends java.lang.Object> V1 getOrElse(K, scala.Function0<V1>);
    descriptor: (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=13, args_size=3
         0: aload_1
         1: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         4: istore_3
         5: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
         8: iload_3
         9: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
        12: istore        4
        14: aload_0
        15: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        18: iconst_0
        19: istore        6
        21: dup
        22: ifnonnull     27
        25: aconst_null
        26: athrow
        27: astore        5
        29: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
        32: pop
        33: iload         4
        35: iload         6
        37: iushr
        38: bipush        31
        40: iand
        41: istore        11
        43: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
        46: pop
        47: iconst_1
        48: iload         11
        50: ishl
        51: istore        12
        53: aload         5
        55: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
        58: iload         12
        60: iand
        61: iconst_0
        62: if_icmpeq     130
        65: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
        68: aload         5
        70: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
        73: iload         11
        75: iload         12
        77: invokevirtual #481                // Method scala/collection/immutable/Node$.indexFrom:(III)I
        80: istore        7
        82: aload         5
        84: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        87: iconst_2
        88: iload         7
        90: imul
        91: aaload
        92: astore        10
        94: aload         10
        96: aconst_null
        97: astore        10
        99: astore        8
       101: aload_1
       102: aload         8
       104: invokestatic  #491                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       107: ifeq          123
       110: aload         5
       112: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       115: iconst_2
       116: iload         7
       118: imul
       119: iconst_1
       120: iadd
       121: aaload
       122: areturn
       123: aload_2
       124: invokeinterface #495,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       129: areturn
       130: aload         5
       132: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       135: iload         12
       137: iand
       138: iconst_0
       139: if_icmpeq     179
       142: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       145: aload         5
       147: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       150: iload         11
       152: iload         12
       154: invokevirtual #481                // Method scala/collection/immutable/Node$.indexFrom:(III)I
       157: istore        9
       159: aload         5
       161: iload         9
       163: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
       166: aload_1
       167: iload_3
       168: iload         4
       170: iload         6
       172: iconst_5
       173: iadd
       174: aload_2
       175: invokevirtual #507                // Method scala/collection/immutable/MapNode.getOrElse:(Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
       178: areturn
       179: aload_2
       180: invokeinterface #495,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       185: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class scala/collection/immutable/HashMap, class java/lang/Object, class scala/Function0, int, int, top, int ]
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 255 /* full_frame */
          offset_delta = 95
          locals = [ class scala/collection/immutable/HashMap, class java/lang/Object, class scala/Function0, int, int, class scala/collection/immutable/BitmapIndexedMapNode, int, int, class java/lang/Object, top, null, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/collection/immutable/HashMap, class java/lang/Object, class scala/Function0, int, int, class scala/collection/immutable/BitmapIndexedMapNode, int, top, top, top, top, int, int ]
          stack = []
        frame_type = 48 /* same */
      LineNumberTable:
        line 142: 0
        line 143: 5
        line 144: 14
        line 672: 29
        line 673: 43
        line 675: 53
        line 676: 65
        line 613: 82
        line 677: 94
        line 678: 101
        line 614: 110
        line 678: 122
        line 679: 130
        line 680: 142
        line 681: 159
        line 683: 179
        line 144: 185
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     180     3 keyUnimprovedHash   I
           14     171     4 keyHash   I
            0     186     0  this   Lscala/collection/immutable/HashMap;
            0     186     1   key   Ljava/lang/Object;
            0     186     2 default   Lscala/Function0;
           82      47     7 getOrElse_index   I
          101      28     8 getOrElse_key0   Ljava/lang/Object;
          159      19     9 getOrElse_index   I
           29     156     5 getOrElse_this   Lscala/collection/immutable/BitmapIndexedMapNode;
           29     156     6 getOrElse_shift   I
    Signature: #468                         // <V1:Ljava/lang/Object;>(TK;Lscala/Function0<TV1;>;)TV1;
    MethodParameters:
      Name                           Flags
      key                            final
      default                        final

  private <V1 extends java.lang.Object> scala.collection.immutable.HashMap<K, V1> newHashMapOrThis(scala.collection.immutable.BitmapIndexedMapNode<K, V1>);
    descriptor: (Lscala/collection/immutable/BitmapIndexedMapNode;)Lscala/collection/immutable/HashMap;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         5: if_acmpne     10
         8: aload_0
         9: areturn
        10: new           #2                  // class scala/collection/immutable/HashMap
        13: dup
        14: aload_1
        15: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
        18: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/collection/immutable/HashMap;
            0      19     1 newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #517                         // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV1;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      newRootNode                    final

  public <V1 extends java.lang.Object> scala.collection.immutable.HashMap<K, V1> updated(K, V1);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=5, args_size=3
         0: aload_1
         1: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         4: istore_3
         5: aload_0
         6: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         9: aload_1
        10: aload_2
        11: iload_3
        12: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
        15: iload_3
        16: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
        19: iconst_0
        20: iconst_1
        21: invokevirtual #528                // Method scala/collection/immutable/BitmapIndexedMapNode.updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
        24: astore        4
        26: aload         4
        28: aload_0
        29: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        32: if_acmpne     37
        35: aload_0
        36: areturn
        37: new           #2                  // class scala/collection/immutable/HashMap
        40: dup
        41: aload         4
        43: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
        46: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ int, class scala/collection/immutable/BitmapIndexedMapNode ]
      LineNumberTable:
        line 151: 0
        line 152: 5
        line 148: 26
        line 152: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      41     3 keyUnimprovedHash   I
            0      47     0  this   Lscala/collection/immutable/HashMap;
            0      47     1   key   Ljava/lang/Object;
            0      47     2 value   Ljava/lang/Object;
           26      20     4 newHashMapOrThis_newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #524                         // <V1:Ljava/lang/Object;>(TK;TV1;)Lscala/collection/immutable/HashMap<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      key                            final
      value                          final

  public <V1 extends java.lang.Object> scala.collection.immutable.HashMap<K, V1> updatedWith(K, scala.Function1<scala.Option<V>, scala.Option<V1>>);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #539                // InterfaceMethod scala/collection/immutable/MapOps.updatedWith$:(Lscala/collection/immutable/MapOps;Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/MapOps;
         6: checkcast     #2                  // class scala/collection/immutable/HashMap
         9: areturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/immutable/HashMap;
            0      10     1   key   Ljava/lang/Object;
            0      10     2 remappingFunction   Lscala/Function1;
    Signature: #532                         // <V1:Ljava/lang/Object;>(TK;Lscala/Function1<Lscala/Option<TV;>;Lscala/Option<TV1;>;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      key                            final
      remappingFunction              final

  public scala.collection.immutable.HashMap<K, V> removed(K);
    descriptor: (Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_1
         1: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         4: istore_2
         5: aload_0
         6: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         9: aload_1
        10: iload_2
        11: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
        14: iload_2
        15: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
        18: iconst_0
        19: invokevirtual #545                // Method scala/collection/immutable/BitmapIndexedMapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/BitmapIndexedMapNode;
        22: astore_3
        23: aload_3
        24: aload_0
        25: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        28: if_acmpne     33
        31: aload_0
        32: areturn
        33: new           #2                  // class scala/collection/immutable/HashMap
        36: dup
        37: aload_3
        38: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
        41: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ int, class scala/collection/immutable/BitmapIndexedMapNode ]
      LineNumberTable:
        line 160: 0
        line 161: 5
        line 148: 23
        line 161: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      36     2 keyUnimprovedHash   I
            0      42     0  this   Lscala/collection/immutable/HashMap;
            0      42     1   key   Ljava/lang/Object;
           23      18     3 newHashMapOrThis_newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #542                         // (TK;)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public <V1 extends java.lang.Object> scala.collection.immutable.HashMap<K, V1> concat(scala.collection.IterableOnce<scala.Tuple2<K, V1>>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=25, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/collection/immutable/HashMap
         4: ifeq          102
         7: aload_1
         8: checkcast     #2                  // class scala/collection/immutable/HashMap
        11: astore        4
        13: aload_0
        14: invokevirtual #254                // Method isEmpty:()Z
        17: ifeq          25
        20: aload         4
        22: goto          98
        25: aload_0
        26: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        29: aload         4
        31: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        34: iconst_0
        35: invokevirtual #550                // Method scala/collection/immutable/BitmapIndexedMapNode.concat:(Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/BitmapIndexedMapNode;
        38: aload         4
        40: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        43: if_acmpne     51
        46: aload         4
        48: goto          98
        51: aload_0
        52: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        55: aload         4
        57: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        60: iconst_0
        61: invokevirtual #550                // Method scala/collection/immutable/BitmapIndexedMapNode.concat:(Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/BitmapIndexedMapNode;
        64: astore        18
        66: aload         18
        68: aload_0
        69: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        72: if_acmpne     79
        75: aload_0
        76: goto          88
        79: new           #2                  // class scala/collection/immutable/HashMap
        82: dup
        83: aload         18
        85: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
        88: astore        19
        90: aload         19
        92: aconst_null
        93: astore        18
        95: aconst_null
        96: astore        19
        98: astore_2
        99: goto          475
       102: aload_1
       103: instanceof    #33                 // class scala/collection/mutable/HashMap
       106: ifeq          313
       109: aload_1
       110: checkcast     #33                 // class scala/collection/mutable/HashMap
       113: astore        5
       115: aload         5
       117: invokevirtual #553                // Method scala/collection/mutable/HashMap.nodeIterator:()Lscala/collection/Iterator;
       120: astore        6
       122: aload_0
       123: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       126: astore        7
       128: aload         6
       130: invokeinterface #558,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       135: ifeq          308
       138: aload         6
       140: invokeinterface #561,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       145: checkcast     #31                 // class scala/collection/mutable/HashMap$Node
       148: astore        8
       150: aload         5
       152: aload         8
       154: invokevirtual #564                // Method scala/collection/mutable/HashMap$Node.hash:()I
       157: invokevirtual #567                // Method scala/collection/mutable/HashMap.unimproveHash:(I)I
       160: istore        9
       162: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       165: iload         9
       167: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       170: istore        10
       172: aload         7
       174: aload         8
       176: invokevirtual #569                // Method scala/collection/mutable/HashMap$Node.key:()Ljava/lang/Object;
       179: aload         8
       181: invokevirtual #571                // Method scala/collection/mutable/HashMap$Node.value:()Ljava/lang/Object;
       184: iload         9
       186: iload         10
       188: iconst_0
       189: iconst_1
       190: invokevirtual #528                // Method scala/collection/immutable/BitmapIndexedMapNode.updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
       193: astore        7
       195: aload         7
       197: aload_0
       198: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       201: if_acmpeq     128
       204: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       207: pop
       208: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       211: pop
       212: iconst_0
       213: istore        23
       215: iload         10
       217: iload         23
       219: iushr
       220: bipush        31
       222: iand
       223: istore        24
       225: iconst_1
       226: iload         24
       228: ishl
       229: istore        11
       231: aload         6
       233: invokeinterface #558,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       238: ifeq          298
       241: aload         6
       243: invokeinterface #561,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       248: checkcast     #31                 // class scala/collection/mutable/HashMap$Node
       251: astore        12
       253: aload         5
       255: aload         12
       257: invokevirtual #564                // Method scala/collection/mutable/HashMap$Node.hash:()I
       260: invokevirtual #567                // Method scala/collection/mutable/HashMap.unimproveHash:(I)I
       263: istore        13
       265: aload         7
       267: aload         12
       269: invokevirtual #569                // Method scala/collection/mutable/HashMap$Node.key:()Ljava/lang/Object;
       272: aload         12
       274: invokevirtual #571                // Method scala/collection/mutable/HashMap$Node.value:()Ljava/lang/Object;
       277: iload         13
       279: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       282: iload         13
       284: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       287: iconst_0
       288: iload         11
       290: invokevirtual #575                // Method scala/collection/immutable/BitmapIndexedMapNode.updateWithShallowMutations:(Ljava/lang/Object;Ljava/lang/Object;IIII)I
       293: istore        11
       295: goto          231
       298: new           #2                  // class scala/collection/immutable/HashMap
       301: dup
       302: aload         7
       304: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       307: areturn
       308: aload_0
       309: astore_2
       310: goto          475
       313: aload_1
       314: instanceof    #577                // class scala/collection/immutable/Map
       317: ifeq          402
       320: aload_1
       321: checkcast     #577                // class scala/collection/immutable/Map
       324: astore        14
       326: aload         14
       328: invokeinterface #578,  1          // InterfaceMethod scala/collection/immutable/Map.isEmpty:()Z
       333: ifeq          340
       336: aload_0
       337: goto          398
       340: new           #23                 // class scala/collection/immutable/HashMap$accum$1
       343: dup
       344: aload_0
       345: invokespecial #579                // Method scala/collection/immutable/HashMap$accum$1."<init>":(Lscala/collection/immutable/HashMap;)V
       348: astore        15
       350: aload         14
       352: aload         15
       354: invokeinterface #583,  2          // InterfaceMethod scala/collection/immutable/Map.foreachEntry:(Lscala/Function2;)V
       359: aload         15
       361: invokevirtual #586                // Method scala/collection/immutable/HashMap$accum$1.current:()Lscala/collection/immutable/BitmapIndexedMapNode;
       364: astore        20
       366: aload         20
       368: aload_0
       369: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       372: if_acmpne     379
       375: aload_0
       376: goto          388
       379: new           #2                  // class scala/collection/immutable/HashMap
       382: dup
       383: aload         20
       385: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       388: astore        21
       390: aload         21
       392: aconst_null
       393: astore        20
       395: aconst_null
       396: astore        21
       398: astore_3
       399: goto          473
       402: aload_1
       403: invokeinterface #590,  1          // InterfaceMethod scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
       408: astore        16
       410: aload         16
       412: invokeinterface #591,  1          // InterfaceMethod scala/collection/Iterator.isEmpty:()Z
       417: ifeq          424
       420: aload_0
       421: goto          472
       424: new           #23                 // class scala/collection/immutable/HashMap$accum$1
       427: dup
       428: aload_0
       429: invokespecial #579                // Method scala/collection/immutable/HashMap$accum$1."<init>":(Lscala/collection/immutable/HashMap;)V
       432: astore        17
       434: aload         16
       436: aload         17
       438: invokeinterface #595,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
       443: aload         17
       445: invokevirtual #586                // Method scala/collection/immutable/HashMap$accum$1.current:()Lscala/collection/immutable/BitmapIndexedMapNode;
       448: astore        22
       450: aload         22
       452: aload_0
       453: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       456: if_acmpne     463
       459: aload_0
       460: goto          472
       463: new           #2                  // class scala/collection/immutable/HashMap
       466: dup
       467: aload         22
       469: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       472: astore_3
       473: aload_3
       474: astore_2
       475: aload_2
       476: areturn
      StackMapTable: number_of_entries = 21
        frame_type = 254 /* append */
          offset_delta = 25
          locals = [ top, top, class scala/collection/immutable/HashMap ]
        frame_type = 25 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, class scala/collection/immutable/HashMap, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = []
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, class scala/collection/immutable/HashMap ]
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, class scala/collection/mutable/HashMap, class scala/collection/Iterator, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 102
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, class scala/collection/mutable/HashMap, class scala/collection/Iterator, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/mutable/HashMap$Node, int, int, int, top, top, top, top, top, top, top, top, top, top, top, int, int ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 66
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, class scala/collection/mutable/HashMap, class scala/collection/Iterator, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/Map ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/Map, class scala/collection/immutable/HashMap$accum$1, top, top, top, top, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = []
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/Map ]
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/Iterator ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/Iterator, class scala/collection/immutable/HashMap$accum$1, top, top, top, top, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/Iterator ]
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, class scala/collection/immutable/HashMap ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, class scala/collection/immutable/HashMap ]
          stack = []
      LineNumberTable:
        line 165: 0
        line 166: 13
        line 168: 25
        line 169: 38
        line 170: 51
        line 148: 66
        line 170: 90
        line 172: 102
        line 173: 115
        line 174: 122
        line 175: 128
        line 176: 138
        line 177: 150
        line 178: 162
        line 179: 172
        line 181: 195
        line 182: 204
        line 184: 231
        line 185: 241
        line 186: 253
        line 187: 265
        line 184: 295
        line 189: 298
        line 192: 308
        line 222: 313
        line 223: 326
        line 225: 340
        line 226: 350
        line 227: 359
        line 148: 366
        line 227: 390
        line 230: 402
        line 231: 410
        line 233: 424
        line 234: 434
        line 235: 443
        line 148: 450
        line 235: 472
        line 221: 473
        line 164: 475
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          253      42    12  next   Lscala/collection/mutable/HashMap$Node;
          265      30    13 originalHash   I
          231      77    11 shallowlyMutableNodeMap   I
          150     158     8  next   Lscala/collection/mutable/HashMap$Node;
          162     146     9 originalHash   I
          172     136    10 improved   I
          122     187     6  iter   Lscala/collection/Iterator;
          128     181     7 current   Lscala/collection/immutable/BitmapIndexedMapNode;
          350      48    15 accum   Lscala/collection/immutable/HashMap$accum$1;
          434      38    17 accum   Lscala/collection/immutable/HashMap$accum$1;
          410      62    16    it   Lscala/collection/Iterator;
            0     477     0  this   Lscala/collection/immutable/HashMap;
            0     477     1  that   Lscala/collection/IterableOnce;
           66      24    18 newHashMapOrThis_newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
          366      24    20 newHashMapOrThis_newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
          450      22    22 newHashMapOrThis_newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
          215      10    23 maskFrom_shift   I
    Signature: #547                         // <V1:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV1;>;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.immutable.HashMap<K, V> tail();
    descriptor: ()Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #611                // Method head:()Lscala/Tuple2;
         4: invokevirtual #616                // Method scala/Tuple2._1:()Ljava/lang/Object;
         7: astore_1
         8: aload_0
         9: aload_1
        10: invokevirtual #618                // Method removed:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
        13: areturn
      LineNumberTable:
        line 240: 0
        line 39: 8
        line 240: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/collection/immutable/HashMap;
            8       5     1 $minus_key   Ljava/lang/Object;
    Signature: #607                         // ()Lscala/collection/immutable/HashMap<TK;TV;>;

  public scala.collection.immutable.HashMap<K, V> init();
    descriptor: ()Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #623                // Method last:()Lscala/Tuple2;
         4: invokevirtual #616                // Method scala/Tuple2._1:()Ljava/lang/Object;
         7: astore_1
         8: aload_0
         9: aload_1
        10: invokevirtual #618                // Method removed:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
        13: areturn
      LineNumberTable:
        line 242: 0
        line 39: 8
        line 242: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/collection/immutable/HashMap;
            8       5     1 $minus_key   Ljava/lang/Object;
    Signature: #607                         // ()Lscala/collection/immutable/HashMap<TK;TV;>;

  public scala.Tuple2<K, V> head();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #625                // Method iterator:()Lscala/collection/Iterator;
         4: invokeinterface #561,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
         9: checkcast     #613                // class scala/Tuple2
        12: areturn
      LineNumberTable:
        line 244: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/immutable/HashMap;
    Signature: #624                         // ()Lscala/Tuple2<TK;TV;>;

  public scala.Tuple2<K, V> last();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #627                // Method reverseIterator:()Lscala/collection/Iterator;
         4: invokeinterface #561,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
         9: checkcast     #613                // class scala/Tuple2
        12: areturn
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/immutable/HashMap;
    Signature: #624                         // ()Lscala/Tuple2<TK;TV;>;

  public <U extends java.lang.Object> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=2
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore_2
        11: aload_2
        12: invokevirtual #631                // Method scala/collection/immutable/BitmapIndexedMapNode.payloadArity:()I
        15: istore_3
        16: iconst_0
        17: istore        4
        19: iload         4
        21: iload_3
        22: if_icmpge     44
        25: aload_1
        26: aload_2
        27: iload         4
        29: invokevirtual #635                // Method scala/collection/immutable/BitmapIndexedMapNode.getPayload:(I)Lscala/Tuple2;
        32: invokeinterface #639,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        37: pop
        38: iinc          4, 1
        41: goto          19
        44: aload_2
        45: invokevirtual #642                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeArity:()I
        48: istore        5
        50: iconst_0
        51: istore        6
        53: iload         6
        55: iload         5
        57: if_icmpge     76
        60: aload_2
        61: iload         6
        63: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
        66: aload_1
        67: invokevirtual #643                // Method scala/collection/immutable/MapNode.foreach:(Lscala/Function1;)V
        70: iinc          6, 1
        73: goto          53
        76: return
      StackMapTable: number_of_entries = 5
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 254 /* append */
          offset_delta = 8
          locals = [ class scala/collection/immutable/BitmapIndexedMapNode, int, int ]
        frame_type = 24 /* same */
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ int, int ]
        frame_type = 22 /* same */
      LineNumberTable:
        line 248: 0
        line 1073: 11
        line 1074: 16
        line 1075: 19
        line 1076: 25
        line 1077: 38
        line 1075: 41
        line 1080: 44
        line 1081: 50
        line 1082: 53
        line 1083: 60
        line 1084: 70
        line 1082: 73
        line 248: 76
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lscala/collection/immutable/HashMap;
            0      77     1     f   Lscala/Function1;
           16      60     3 foreach_iN   I
           19      57     4 foreach_i   I
           50      26     5 foreach_jN   I
           53      23     6 foreach_j   I
           11      65     2 foreach_this   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #628                         // <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public <U extends java.lang.Object> void foreachEntry(scala.Function2<K, V, U>);
    descriptor: (Lscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=2
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore_2
        11: aload_2
        12: invokevirtual #631                // Method scala/collection/immutable/BitmapIndexedMapNode.payloadArity:()I
        15: istore_3
        16: iconst_0
        17: istore        4
        19: iload         4
        21: iload_3
        22: if_icmpge     58
        25: aload_1
        26: aload_2
        27: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        30: iconst_2
        31: iload         4
        33: imul
        34: aaload
        35: aload_2
        36: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        39: iconst_2
        40: iload         4
        42: imul
        43: iconst_1
        44: iadd
        45: aaload
        46: invokeinterface #653,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        51: pop
        52: iinc          4, 1
        55: goto          19
        58: aload_2
        59: invokevirtual #642                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeArity:()I
        62: istore        5
        64: iconst_0
        65: istore        6
        67: iload         6
        69: iload         5
        71: if_icmpge     90
        74: aload_2
        75: iload         6
        77: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
        80: aload_1
        81: invokevirtual #654                // Method scala/collection/immutable/MapNode.foreachEntry:(Lscala/Function2;)V
        84: iinc          6, 1
        87: goto          67
        90: return
      StackMapTable: number_of_entries = 5
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 254 /* append */
          offset_delta = 8
          locals = [ class scala/collection/immutable/BitmapIndexedMapNode, int, int ]
        frame_type = 38 /* same */
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ int, int ]
        frame_type = 22 /* same */
      LineNumberTable:
        line 250: 0
        line 1089: 11
        line 1090: 16
        line 1091: 19
        line 1092: 25
        line 613: 26
        line 614: 35
        line 1092: 46
        line 1093: 52
        line 1091: 55
        line 1096: 58
        line 1097: 64
        line 1098: 67
        line 1099: 74
        line 1100: 84
        line 1098: 87
        line 250: 90
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      91     0  this   Lscala/collection/immutable/HashMap;
            0      91     1     f   Lscala/Function2;
           16      74     3 foreachEntry_iN   I
           19      71     4 foreachEntry_i   I
           64      26     5 foreachEntry_jN   I
           67      23     6 foreachEntry_j   I
           11      79     2 foreachEntry_this   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #649                         // <U:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public void foreachWithHash(scala.Function3<K, V, java.lang.Object, scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function3;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=2
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore_2
        11: iconst_0
        12: istore_3
        13: aload_2
        14: invokevirtual #631                // Method scala/collection/immutable/BitmapIndexedMapNode.payloadArity:()I
        17: istore        4
        19: iload_3
        20: iload         4
        22: if_icmpge     65
        25: aload_1
        26: aload_2
        27: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        30: iconst_2
        31: iload_3
        32: imul
        33: aaload
        34: aload_2
        35: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        38: iconst_2
        39: iload_3
        40: imul
        41: iconst_1
        42: iadd
        43: aaload
        44: aload_2
        45: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
        48: iload_3
        49: iaload
        50: invokestatic  #672                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        53: invokeinterface #677,  4          // InterfaceMethod scala/Function3.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        58: pop
        59: iinc          3, 1
        62: goto          19
        65: aload_2
        66: invokevirtual #642                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeArity:()I
        69: istore        5
        71: iconst_0
        72: istore        6
        74: iload         6
        76: iload         5
        78: if_icmpge     97
        81: aload_2
        82: iload         6
        84: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
        87: aload_1
        88: invokevirtual #679                // Method scala/collection/immutable/MapNode.foreachWithHash:(Lscala/Function3;)V
        91: iinc          6, 1
        94: goto          74
        97: return
      StackMapTable: number_of_entries = 5
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 254 /* append */
          offset_delta = 8
          locals = [ class scala/collection/immutable/BitmapIndexedMapNode, int, int ]
        frame_type = 45 /* same */
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ int, int ]
        frame_type = 22 /* same */
      LineNumberTable:
        line 253: 0
        line 1105: 11
        line 1106: 13
        line 1107: 19
        line 1108: 25
        line 613: 26
        line 614: 34
        line 620: 44
        line 1108: 50
        line 1109: 59
        line 1107: 62
        line 1112: 65
        line 1113: 71
        line 1114: 74
        line 1115: 81
        line 1116: 91
        line 1114: 94
        line 253: 97
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      98     0  this   Lscala/collection/immutable/HashMap;
            0      98     1     f   Lscala/Function3;
           13      84     3 foreachWithHash_i   I
           19      78     4 foreachWithHash_iN   I
           71      26     5 foreachWithHash_jN   I
           74      23     6 foreachWithHash_j   I
           11      86     2 foreachWithHash_this   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #662                         // (Lscala/Function3<TK;TV;Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/collection/immutable/HashMap
         4: ifeq          57
         7: aload_1
         8: checkcast     #2                  // class scala/collection/immutable/HashMap
        11: astore_3
        12: aload_0
        13: aload_3
        14: if_acmpeq     48
        17: aload_0
        18: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        21: aload_3
        22: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        25: astore        4
        27: dup
        28: ifnonnull     40
        31: pop
        32: aload         4
        34: ifnull        48
        37: goto          52
        40: aload         4
        42: invokevirtual #687                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        45: ifeq          52
        48: iconst_1
        49: goto          53
        52: iconst_0
        53: istore_2
        54: goto          63
        57: aload_0
        58: aload_1
        59: invokestatic  #693                // InterfaceMethod scala/collection/Map.equals$:(Lscala/collection/Map;Ljava/lang/Object;)Z
        62: istore_2
        63: iload_2
        64: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class scala/collection/immutable/HashMap, class java/lang/Object, top, class scala/collection/immutable/HashMap, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/immutable/HashMap, class java/lang/Object, top, class scala/collection/immutable/HashMap ]
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
      LineNumberTable:
        line 257: 0
        line 258: 57
        line 256: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lscala/collection/immutable/HashMap;
            0      65     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #254                // Method isEmpty:()Z
         4: ifeq          14
         7: getstatic     #699                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        10: invokevirtual #702                // Method scala/util/hashing/MurmurHash3$.emptyMapHash:()I
        13: ireturn
        14: new           #704                // class scala/collection/immutable/MapKeyValueTupleHashIterator
        17: dup
        18: aload_0
        19: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        22: invokespecial #705                // Method scala/collection/immutable/MapKeyValueTupleHashIterator."<init>":(Lscala/collection/immutable/MapNode;)V
        25: astore_1
        26: getstatic     #699                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        29: aload_1
        30: getstatic     #699                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        33: invokevirtual #708                // Method scala/util/hashing/MurmurHash3$.mapSeed:()I
        36: invokevirtual #712                // Method scala/util/hashing/MurmurHash3$.unorderedHash:(Lscala/collection/IterableOnce;I)I
        39: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
      LineNumberTable:
        line 262: 0
        line 266: 14
        line 267: 26
        line 269: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      13     1 hashIterator   Lscala/collection/immutable/MapKeyValueTupleHashIterator;
            0      40     0  this   Lscala/collection/immutable/HashMap;

  public java.lang.String className();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #718                // String HashMap
         3: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/immutable/HashMap;

  public <V1 extends java.lang.Object> scala.collection.immutable.HashMap<K, V1> merged(scala.collection.immutable.HashMap<K, V1>, scala.Function2<scala.Tuple2<K, V>, scala.Tuple2<K, V1>, scala.Tuple2<K, V1>>);
    descriptor: (Lscala/collection/immutable/HashMap;Lscala/Function2;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=58, args_size=3
         0: aload_2
         1: ifnonnull     19
         4: aload_1
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: aload_1
        11: aload_0
        12: invokestatic  #728                // InterfaceMethod scala/collection/MapOps.$plus$plus$:(Lscala/collection/MapOps;Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
        15: checkcast     #2                  // class scala/collection/immutable/HashMap
        18: areturn
        19: aload_0
        20: invokevirtual #254                // Method isEmpty:()Z
        23: ifeq          28
        26: aload_1
        27: areturn
        28: aload_1
        29: invokevirtual #254                // Method isEmpty:()Z
        32: ifeq          37
        35: aload_0
        36: areturn
        37: aload_0
        38: invokevirtual #238                // Method size:()I
        41: iconst_1
        42: if_icmpne     260
        45: aload_0
        46: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        49: iconst_0
        50: invokevirtual #635                // Method scala/collection/immutable/BitmapIndexedMapNode.getPayload:(I)Lscala/Tuple2;
        53: astore_3
        54: aload_3
        55: ifnull        73
        58: aload_3
        59: invokevirtual #616                // Method scala/Tuple2._1:()Ljava/lang/Object;
        62: astore        4
        64: aload_3
        65: invokevirtual #731                // Method scala/Tuple2._2:()Ljava/lang/Object;
        68: astore        5
        70: goto          82
        73: new           #733                // class scala/MatchError
        76: dup
        77: aconst_null
        78: invokespecial #736                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        81: athrow
        82: aload_0
        83: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        86: iconst_0
        87: invokevirtual #739                // Method scala/collection/immutable/BitmapIndexedMapNode.getHash:(I)I
        90: istore        6
        92: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
        95: iload         6
        97: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       100: istore        7
       102: aload_1
       103: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       106: aload         4
       108: iload         6
       110: iload         7
       112: iconst_0
       113: invokevirtual #452                // Method scala/collection/immutable/BitmapIndexedMapNode.containsKey:(Ljava/lang/Object;III)Z
       116: ifeq          235
       119: aload_1
       120: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       123: aload         4
       125: iload         6
       127: iload         7
       129: iconst_0
       130: invokevirtual #743                // Method scala/collection/immutable/BitmapIndexedMapNode.getTuple:(Ljava/lang/Object;III)Lscala/Tuple2;
       133: astore        8
       135: aload_2
       136: aload_3
       137: aload         8
       139: invokeinterface #653,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       144: checkcast     #613                // class scala/Tuple2
       147: astore        9
       149: aload         9
       151: ifnull        171
       154: aload         9
       156: invokevirtual #616                // Method scala/Tuple2._1:()Ljava/lang/Object;
       159: astore        10
       161: aload         9
       163: invokevirtual #731                // Method scala/Tuple2._2:()Ljava/lang/Object;
       166: astore        11
       168: goto          180
       171: new           #733                // class scala/MatchError
       174: dup
       175: aconst_null
       176: invokespecial #736                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       179: athrow
       180: aload         10
       182: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       185: istore        12
       187: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       190: iload         12
       192: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       195: istore        13
       197: new           #2                  // class scala/collection/immutable/HashMap
       200: dup
       201: aload_1
       202: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       205: aload         8
       207: invokevirtual #616                // Method scala/Tuple2._1:()Ljava/lang/Object;
       210: iload         6
       212: iload         7
       214: iconst_0
       215: invokevirtual #545                // Method scala/collection/immutable/BitmapIndexedMapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/BitmapIndexedMapNode;
       218: aload         10
       220: aload         11
       222: iload         12
       224: iload         13
       226: iconst_0
       227: iconst_1
       228: invokevirtual #528                // Method scala/collection/immutable/BitmapIndexedMapNode.updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
       231: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       234: areturn
       235: new           #2                  // class scala/collection/immutable/HashMap
       238: dup
       239: aload_1
       240: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       243: aload         4
       245: aload         5
       247: iload         6
       249: iload         7
       251: iconst_0
       252: iconst_1
       253: invokevirtual #528                // Method scala/collection/immutable/BitmapIndexedMapNode.updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
       256: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       259: areturn
       260: aload_1
       261: invokevirtual #238                // Method size:()I
       264: iconst_0
       265: if_icmpne     475
       268: aload_0
       269: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       272: iconst_0
       273: invokevirtual #635                // Method scala/collection/immutable/BitmapIndexedMapNode.getPayload:(I)Lscala/Tuple2;
       276: astore        14
       278: aload         14
       280: ifnull        300
       283: aload         14
       285: invokevirtual #616                // Method scala/Tuple2._1:()Ljava/lang/Object;
       288: astore        15
       290: aload         14
       292: invokevirtual #731                // Method scala/Tuple2._2:()Ljava/lang/Object;
       295: astore        16
       297: goto          309
       300: new           #733                // class scala/MatchError
       303: dup
       304: aconst_null
       305: invokespecial #736                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       308: athrow
       309: aload_0
       310: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       313: iconst_0
       314: invokevirtual #739                // Method scala/collection/immutable/BitmapIndexedMapNode.getHash:(I)I
       317: istore        17
       319: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       322: iload         17
       324: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       327: istore        18
       329: aload_0
       330: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       333: aload         15
       335: iload         17
       337: iload         18
       339: iconst_0
       340: invokevirtual #452                // Method scala/collection/immutable/BitmapIndexedMapNode.containsKey:(Ljava/lang/Object;III)Z
       343: ifeq          450
       346: aload_0
       347: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       350: aload         15
       352: iload         17
       354: iload         18
       356: iconst_0
       357: invokevirtual #743                // Method scala/collection/immutable/BitmapIndexedMapNode.getTuple:(Ljava/lang/Object;III)Lscala/Tuple2;
       360: astore        19
       362: aload_2
       363: aload         19
       365: aload         14
       367: invokeinterface #653,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       372: checkcast     #613                // class scala/Tuple2
       375: astore        20
       377: aload         20
       379: ifnull        399
       382: aload         20
       384: invokevirtual #616                // Method scala/Tuple2._1:()Ljava/lang/Object;
       387: astore        21
       389: aload         20
       391: invokevirtual #731                // Method scala/Tuple2._2:()Ljava/lang/Object;
       394: astore        22
       396: goto          408
       399: new           #733                // class scala/MatchError
       402: dup
       403: aconst_null
       404: invokespecial #736                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       407: athrow
       408: aload         21
       410: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       413: istore        23
       415: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       418: iload         23
       420: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       423: istore        24
       425: new           #2                  // class scala/collection/immutable/HashMap
       428: dup
       429: aload_0
       430: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       433: aload         21
       435: aload         22
       437: iload         23
       439: iload         24
       441: iconst_0
       442: iconst_1
       443: invokevirtual #528                // Method scala/collection/immutable/BitmapIndexedMapNode.updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
       446: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       449: areturn
       450: new           #2                  // class scala/collection/immutable/HashMap
       453: dup
       454: aload_0
       455: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       458: aload         15
       460: aload         16
       462: iload         17
       464: iload         18
       466: iconst_0
       467: iconst_1
       468: invokevirtual #528                // Method scala/collection/immutable/BitmapIndexedMapNode.updated:(Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/BitmapIndexedMapNode;
       471: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       474: areturn
       475: new           #54                 // class scala/collection/immutable/HashMapBuilder
       478: dup
       479: invokespecial #58                 // Method scala/collection/immutable/HashMapBuilder."<init>":()V
       482: astore        25
       484: aload_0
       485: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       488: aload_1
       489: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       492: iconst_0
       493: istore        28
       495: astore        27
       497: dup
       498: ifnonnull     503
       501: aconst_null
       502: athrow
       503: astore        26
       505: aload         27
       507: instanceof    #229                // class scala/collection/immutable/BitmapIndexedMapNode
       510: ifeq          1351
       513: aload         26
       515: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
       518: iconst_0
       519: if_icmpne     532
       522: aload         27
       524: aload         25
       526: invokevirtual #747                // Method scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
       529: goto          1361
       532: aload         27
       534: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
       537: iconst_0
       538: if_icmpne     551
       541: aload         26
       543: aload         25
       545: invokevirtual #748                // Method scala/collection/immutable/BitmapIndexedMapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
       548: goto          1361
       551: aload         26
       553: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       556: aload         27
       558: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       561: ior
       562: aload         26
       564: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       567: ior
       568: aload         27
       570: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       573: ior
       574: istore        29
       576: iload         29
       578: invokestatic  #751                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
       581: istore        30
       583: bipush        32
       585: iload         29
       587: invokestatic  #754                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       590: isub
       591: istore        31
       593: iload         30
       595: istore        32
       597: iconst_0
       598: istore        33
       600: iconst_0
       601: istore        34
       603: iload         32
       605: iload         31
       607: if_icmpge     1361
       610: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       613: pop
       614: iconst_1
       615: iload         32
       617: ishl
       618: istore        57
       620: iload         57
       622: aload         26
       624: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       627: iand
       628: iconst_0
       629: if_icmpeq     984
       632: aload         26
       634: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       637: iconst_2
       638: iload         33
       640: imul
       641: aaload
       642: astore        48
       644: aload         48
       646: aconst_null
       647: astore        48
       649: astore        35
       651: aload         26
       653: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       656: iconst_2
       657: iload         33
       659: imul
       660: iconst_1
       661: iadd
       662: aaload
       663: astore        49
       665: aload         49
       667: aconst_null
       668: astore        49
       670: astore        36
       672: aload         26
       674: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
       677: iload         33
       679: iaload
       680: istore        50
       682: iload         57
       684: aload         27
       686: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       689: iand
       690: iconst_0
       691: if_icmpeq     831
       694: aload         27
       696: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       699: iconst_2
       700: iload         34
       702: imul
       703: aaload
       704: astore        51
       706: aload         51
       708: aconst_null
       709: astore        51
       711: astore        37
       713: aload         27
       715: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       718: iconst_2
       719: iload         34
       721: imul
       722: iconst_1
       723: iadd
       724: aaload
       725: astore        52
       727: aload         52
       729: aconst_null
       730: astore        52
       732: astore        38
       734: aload         27
       736: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
       739: iload         34
       741: iaload
       742: istore        53
       744: iload         50
       746: iload         53
       748: if_icmpne     801
       751: aload         35
       753: aload         37
       755: invokestatic  #491                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       758: ifeq          801
       761: aload         25
       763: aload_2
       764: new           #613                // class scala/Tuple2
       767: dup
       768: aload         35
       770: aload         36
       772: invokespecial #757                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       775: new           #613                // class scala/Tuple2
       778: dup
       779: aload         37
       781: aload         38
       783: invokespecial #757                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       786: invokeinterface #653,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       791: checkcast     #613                // class scala/Tuple2
       794: invokevirtual #761                // Method scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
       797: pop
       798: goto          825
       801: aload         25
       803: aload         35
       805: aload         36
       807: iload         50
       809: invokevirtual #764                // Method scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/collection/immutable/HashMapBuilder;
       812: pop
       813: aload         25
       815: aload         37
       817: aload         38
       819: iload         53
       821: invokevirtual #764                // Method scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/collection/immutable/HashMapBuilder;
       824: pop
       825: iinc          34, 1
       828: goto          978
       831: iload         57
       833: aload         27
       835: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       838: iand
       839: iconst_0
       840: if_icmpeq     966
       843: aload         27
       845: aload         27
       847: iload         57
       849: invokevirtual #767                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeIndex:(I)I
       852: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
       855: astore        39
       857: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       860: iload         50
       862: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       865: istore        40
       867: aload         39
       869: aload         35
       871: iload         50
       873: iload         40
       875: iload         28
       877: iconst_5
       878: iadd
       879: invokevirtual #770                // Method scala/collection/immutable/MapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
       882: astore        41
       884: aload         41
       886: aload         39
       888: if_acmpne     915
       891: aload         39
       893: aload         25
       895: invokevirtual #747                // Method scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
       898: aload         25
       900: aload         35
       902: aload         36
       904: iload         50
       906: iload         40
       908: invokevirtual #773                // Method scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
       911: pop
       912: goto          978
       915: aload         41
       917: aload         25
       919: invokevirtual #747                // Method scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
       922: aload         25
       924: aload_2
       925: new           #613                // class scala/Tuple2
       928: dup
       929: aload         35
       931: aload         36
       933: invokespecial #757                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       936: aload         39
       938: aload         35
       940: iload         50
       942: iload         40
       944: iload         28
       946: iconst_5
       947: iadd
       948: invokevirtual #774                // Method scala/collection/immutable/MapNode.getTuple:(Ljava/lang/Object;III)Lscala/Tuple2;
       951: invokeinterface #653,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       956: checkcast     #613                // class scala/Tuple2
       959: invokevirtual #761                // Method scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
       962: pop
       963: goto          978
       966: aload         25
       968: aload         35
       970: aload         36
       972: iload         50
       974: invokevirtual #764                // Method scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/collection/immutable/HashMapBuilder;
       977: pop
       978: iinc          33, 1
       981: goto          1345
       984: iload         57
       986: aload         26
       988: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       991: iand
       992: iconst_0
       993: if_icmpeq     1253
       996: iload         57
       998: aload         27
      1000: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
      1003: iand
      1004: iconst_0
      1005: if_icmpeq     1184
      1008: aload         27
      1010: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
      1013: iconst_2
      1014: iload         34
      1016: imul
      1017: aaload
      1018: astore        54
      1020: aload         54
      1022: aconst_null
      1023: astore        54
      1025: astore        42
      1027: aload         27
      1029: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
      1032: iconst_2
      1033: iload         34
      1035: imul
      1036: iconst_1
      1037: iadd
      1038: aaload
      1039: astore        55
      1041: aload         55
      1043: aconst_null
      1044: astore        55
      1046: astore        43
      1048: aload         27
      1050: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
      1053: iload         34
      1055: iaload
      1056: istore        56
      1058: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
      1061: iload         56
      1063: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
      1066: istore        44
      1068: aload         26
      1070: aload         26
      1072: iload         57
      1074: invokevirtual #767                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeIndex:(I)I
      1077: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
      1080: astore        45
      1082: aload         45
      1084: aload         42
      1086: iload         56
      1088: iload         44
      1090: iload         28
      1092: iconst_5
      1093: iadd
      1094: invokevirtual #770                // Method scala/collection/immutable/MapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
      1097: astore        46
      1099: aload         46
      1101: aload         45
      1103: if_acmpne     1130
      1106: aload         45
      1108: aload         25
      1110: invokevirtual #747                // Method scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
      1113: aload         25
      1115: aload         42
      1117: aload         43
      1119: iload         56
      1121: iload         44
      1123: invokevirtual #773                // Method scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
      1126: pop
      1127: goto          1178
      1130: aload         46
      1132: aload         25
      1134: invokevirtual #747                // Method scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
      1137: aload         25
      1139: aload_2
      1140: aload         45
      1142: aload         42
      1144: iload         56
      1146: iload         44
      1148: iload         28
      1150: iconst_5
      1151: iadd
      1152: invokevirtual #774                // Method scala/collection/immutable/MapNode.getTuple:(Ljava/lang/Object;III)Lscala/Tuple2;
      1155: new           #613                // class scala/Tuple2
      1158: dup
      1159: aload         42
      1161: aload         43
      1163: invokespecial #757                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      1166: invokeinterface #653,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      1171: checkcast     #613                // class scala/Tuple2
      1174: invokevirtual #761                // Method scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
      1177: pop
      1178: iinc          34, 1
      1181: goto          1345
      1184: iload         57
      1186: aload         27
      1188: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
      1191: iand
      1192: iconst_0
      1193: if_icmpeq     1233
      1196: aload         26
      1198: aload         26
      1200: iload         57
      1202: invokevirtual #767                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeIndex:(I)I
      1205: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
      1208: aload         27
      1210: aload         27
      1212: iload         57
      1214: invokevirtual #767                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeIndex:(I)I
      1217: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
      1220: aload         25
      1222: iload         28
      1224: iconst_5
      1225: iadd
      1226: aload_2
      1227: invokevirtual #778                // Method scala/collection/immutable/MapNode.mergeInto:(Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
      1230: goto          1345
      1233: aload         26
      1235: aload         26
      1237: iload         57
      1239: invokevirtual #767                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeIndex:(I)I
      1242: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
      1245: aload         25
      1247: invokevirtual #747                // Method scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
      1250: goto          1345
      1253: iload         57
      1255: aload         27
      1257: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
      1260: iand
      1261: iconst_0
      1262: if_icmpeq     1316
      1265: aload         27
      1267: iload         57
      1269: invokevirtual #781                // Method scala/collection/immutable/BitmapIndexedMapNode.dataIndex:(I)I
      1272: istore        47
      1274: aload         25
      1276: aload         27
      1278: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
      1281: iconst_2
      1282: iload         47
      1284: imul
      1285: aaload
      1286: aload         27
      1288: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
      1291: iconst_2
      1292: iload         47
      1294: imul
      1295: iconst_1
      1296: iadd
      1297: aaload
      1298: aload         27
      1300: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
      1303: iload         47
      1305: iaload
      1306: invokevirtual #764                // Method scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;I)Lscala/collection/immutable/HashMapBuilder;
      1309: pop
      1310: iinc          34, 1
      1313: goto          1345
      1316: iload         57
      1318: aload         27
      1320: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
      1323: iand
      1324: iconst_0
      1325: if_icmpeq     1345
      1328: aload         27
      1330: aload         27
      1332: iload         57
      1334: invokevirtual #767                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeIndex:(I)I
      1337: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
      1340: aload         25
      1342: invokevirtual #747                // Method scala/collection/immutable/MapNode.buildTo:(Lscala/collection/immutable/HashMapBuilder;)V
      1345: iinc          32, 1
      1348: goto          603
      1351: new           #733                // class scala/MatchError
      1354: dup
      1355: aload         27
      1357: invokespecial #736                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      1360: athrow
      1361: aconst_null
      1362: astore        26
      1364: aconst_null
      1365: astore        27
      1367: aconst_null
      1368: astore        35
      1370: aconst_null
      1371: astore        36
      1373: aconst_null
      1374: astore        37
      1376: aconst_null
      1377: astore        38
      1379: aconst_null
      1380: astore        39
      1382: aconst_null
      1383: astore        41
      1385: aconst_null
      1386: astore        42
      1388: aconst_null
      1389: astore        43
      1391: aconst_null
      1392: astore        45
      1394: aconst_null
      1395: astore        46
      1397: aconst_null
      1398: astore        48
      1400: aconst_null
      1401: astore        49
      1403: aconst_null
      1404: astore        51
      1406: aconst_null
      1407: astore        52
      1409: aconst_null
      1410: astore        54
      1412: aconst_null
      1413: astore        55
      1415: aload         25
      1417: invokevirtual #784                // Method scala/collection/immutable/HashMapBuilder.result:()Lscala/collection/immutable/HashMap;
      1420: areturn
      StackMapTable: number_of_entries = 36
        frame_type = 10 /* same */
        frame_type = 8 /* same */
        frame_type = 8 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 35
          locals = [ class scala/Tuple2 ]
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 88
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, class scala/Tuple2, class java/lang/Object, class java/lang/Object, int, int, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 54
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, class scala/Tuple2, class java/lang/Object, class java/lang/Object, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 89
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, class scala/Tuple2, class java/lang/Object, class java/lang/Object, int, int, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, class scala/Tuple2, class java/lang/Object, class java/lang/Object, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, top, class scala/collection/immutable/BitmapIndexedMapNode, int ]
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int ]
          stack = []
        frame_type = 18 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 197
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int, class java/lang/Object, class java/lang/Object, class java/lang/Object, class java/lang/Object, top, top, top, top, top, top, top, top, top, null, null, int, null, null, int, top, top, top, int ]
          stack = []
        frame_type = 23 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int, class java/lang/Object, class java/lang/Object, top, top, top, top, top, top, top, top, top, top, top, null, null, int, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 83
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int, class java/lang/Object, class java/lang/Object, top, top, class scala/collection/immutable/MapNode, int, class scala/collection/immutable/MapNode, top, top, top, top, top, top, null, null, int, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int, class java/lang/Object, class java/lang/Object, top, top, top, top, top, top, top, top, top, top, top, null, null, int, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 145
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int, top, top, top, top, top, top, top, class java/lang/Object, class java/lang/Object, int, class scala/collection/immutable/MapNode, class scala/collection/immutable/MapNode, top, top, top, top, top, top, top, null, null, int, int ]
          stack = []
        frame_type = 47 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 48 /* same */
        frame_type = 19 /* same */
        frame_type = 62 /* same */
        frame_type = 28 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/immutable/HashMap, class scala/Function2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/HashMapBuilder, class scala/collection/immutable/BitmapIndexedMapNode, class scala/collection/immutable/BitmapIndexedMapNode, int ]
          stack = []
        frame_type = 9 /* same */
      LineNumberTable:
        line 316: 0
        line 317: 4
        line 319: 19
        line 320: 28
        line 321: 37
        line 322: 45
        line 323: 82
        line 324: 92
        line 326: 102
        line 327: 119
        line 328: 135
        line 329: 180
        line 330: 187
        line 331: 197
        line 333: 235
        line 335: 260
        line 336: 268
        line 337: 309
        line 338: 319
        line 340: 329
        line 341: 346
        line 342: 362
        line 343: 408
        line 344: 415
        line 345: 425
        line 347: 450
        line 350: 475
        line 351: 484
        line 1174: 505
        line 1175: 513
        line 1176: 522
        line 1177: 529
        line 1178: 532
        line 1179: 541
        line 1180: 548
        line 1183: 551
        line 1185: 576
        line 1186: 583
        line 1189: 593
        line 1190: 597
        line 1191: 600
        line 1193: 603
        line 1194: 610
        line 1196: 620
        line 613: 632
        line 1197: 644
        line 614: 651
        line 1198: 665
        line 620: 672
        line 1200: 682
        line 613: 694
        line 1202: 706
        line 614: 713
        line 1203: 727
        line 620: 734
        line 1205: 744
        line 1206: 761
        line 1208: 801
        line 1209: 813
        line 1211: 825
        line 1200: 828
        line 1212: 831
        line 1214: 843
        line 1215: 857
        line 1216: 867
        line 1217: 884
        line 1219: 891
        line 1220: 898
        line 1223: 915
        line 1224: 922
        line 1228: 966
        line 1230: 978
        line 1231: 984
        line 1232: 996
        line 613: 1008
        line 1234: 1020
        line 614: 1027
        line 1235: 1041
        line 620: 1048
        line 1237: 1058
        line 1239: 1068
        line 1240: 1082
        line 1241: 1099
        line 1243: 1106
        line 1244: 1113
        line 1247: 1130
        line 1248: 1137
        line 1250: 1178
        line 1252: 1184
        line 1254: 1196
        line 1257: 1233
        line 1259: 1253
        line 1261: 1265
        line 1262: 1274
        line 613: 1276
        line 614: 1286
        line 620: 1298
        line 1262: 1306
        line 1263: 1310
        line 1265: 1316
        line 1267: 1328
        line 1270: 1345
        line 1193: 1348
        line 1173: 1351
        line 352: 1415
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64       9     4     k   Ljava/lang/Object;
           70       3     5     v   Ljava/lang/Object;
          161      10    10 mergedK   Ljava/lang/Object;
          168       3    11 mergedV   Ljava/lang/Object;
          135      99     8 thatPayload   Lscala/Tuple2;
          187      47    12 mergedOriginalHash   I
          197      37    13 mergedImprovedHash   I
           92     167     6 originalHash   I
          102     157     7 improved   I
          290      10    15     k   Ljava/lang/Object;
          297       3    16     v   Ljava/lang/Object;
          389      10    21 mergedK   Ljava/lang/Object;
          396       3    22 mergedV   Ljava/lang/Object;
          362      87    19 payload   Lscala/Tuple2;
          415      34    23 mergedOriginalHash   I
          425      24    24 mergedImprovedHash   I
          319     155    17 thatOriginalHash   I
          329     145    18 thatImproved   I
          484     936    25 builder   Lscala/collection/immutable/HashMapBuilder;
            0    1421     0  this   Lscala/collection/immutable/HashMap;
            0    1421     1  that   Lscala/collection/immutable/HashMap;
            0    1421     2 mergef   Lscala/Function2;
          713     115    37 mergeInto_rightKey   Ljava/lang/Object;
          734      94    38 mergeInto_rightValue   Ljava/lang/Object;
          857     106    39 mergeInto_subNode   Lscala/collection/immutable/MapNode;
          867      96    40 mergeInto_leftImprovedHash   I
          884      79    41 mergeInto_removed   Lscala/collection/immutable/MapNode;
          651     330    35 mergeInto_leftKey   Ljava/lang/Object;
          672     309    36 mergeInto_leftValue   Ljava/lang/Object;
         1027     154    42 mergeInto_rightKey   Ljava/lang/Object;
         1048     133    43 mergeInto_rightValue   Ljava/lang/Object;
         1068     113    44 mergeInto_rightImprovedHash   I
         1082      99    45 mergeInto_subNode   Lscala/collection/immutable/MapNode;
         1099      82    46 mergeInto_removed   Lscala/collection/immutable/MapNode;
         1274      39    47 mergeInto_dataIndex   I
          597     754    32 mergeInto_index   I
          600     751    33 mergeInto_leftIdx   I
          603     748    34 mergeInto_rightIdx   I
          576     775    29 mergeInto_allMap   I
          583     768    30 mergeInto_minIndex   I
          593     758    31 mergeInto_maxIndex   I
          505     856    26 mergeInto_this   Lscala/collection/immutable/BitmapIndexedMapNode;
          505     856    27 mergeInto_that   Lscala/collection/immutable/MapNode;
          505     856    28 mergeInto_shift   I
    Signature: #721                         // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/HashMap<TK;TV1;>;Lscala/Function2<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TK;TV1;>;Lscala/Tuple2<TK;TV1;>;>;)Lscala/collection/immutable/HashMap<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      that                           final
      mergef                         final

  public <W extends java.lang.Object> scala.collection.immutable.HashMap<K, W> transform(scala.Function2<K, V, W>);
    descriptor: (Lscala/Function2;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=17, args_size=2
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore_3
        11: aconst_null
        12: astore        4
        14: aload_3
        15: invokevirtual #631                // Method scala/collection/immutable/BitmapIndexedMapNode.payloadArity:()I
        18: istore        5
        20: aload_3
        21: invokevirtual #642                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeArity:()I
        24: istore        6
        26: aload_3
        27: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        30: arraylength
        31: istore        7
        33: iconst_0
        34: istore        8
        36: iload         8
        38: iload         5
        40: if_icmpge     148
        43: aload_3
        44: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        47: iconst_2
        48: iload         8
        50: imul
        51: aaload
        52: astore        15
        54: aload         15
        56: aconst_null
        57: astore        15
        59: astore        9
        61: aload_3
        62: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
        65: iconst_2
        66: iload         8
        68: imul
        69: iconst_1
        70: iadd
        71: aaload
        72: astore        16
        74: aload         16
        76: aconst_null
        77: astore        16
        79: astore        10
        81: aload_1
        82: aload         9
        84: aload         10
        86: invokeinterface #653,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        91: astore        11
        93: aload         4
        95: ifnonnull     131
        98: aload         11
       100: aload         10
       102: if_acmpeq     142
       105: aload_3
       106: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       109: invokevirtual #823                // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
       112: checkcast     #820                // class "[Ljava/lang/Object;"
       115: astore        4
       117: aload         4
       119: iconst_2
       120: iload         8
       122: imul
       123: iconst_1
       124: iadd
       125: aload         11
       127: aastore
       128: goto          142
       131: aload         4
       133: iconst_2
       134: iload         8
       136: imul
       137: iconst_1
       138: iadd
       139: aload         11
       141: aastore
       142: iinc          8, 1
       145: goto          36
       148: iconst_0
       149: istore        12
       151: iload         12
       153: iload         6
       155: if_icmpge     231
       158: aload_3
       159: iload         12
       161: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
       164: astore        13
       166: aload         13
       168: aload_1
       169: invokevirtual #826                // Method scala/collection/immutable/MapNode.transform:(Lscala/Function2;)Lscala/collection/immutable/MapNode;
       172: astore        14
       174: aload         4
       176: ifnonnull     213
       179: aload         14
       181: aload         13
       183: if_acmpeq     225
       186: aload_3
       187: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       190: invokevirtual #823                // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
       193: checkcast     #820                // class "[Ljava/lang/Object;"
       196: astore        4
       198: aload         4
       200: iload         7
       202: iload         12
       204: isub
       205: iconst_1
       206: isub
       207: aload         14
       209: aastore
       210: goto          225
       213: aload         4
       215: iload         7
       217: iload         12
       219: isub
       220: iconst_1
       221: isub
       222: aload         14
       224: aastore
       225: iinc          12, 1
       228: goto          151
       231: aload         4
       233: ifnonnull     240
       236: aload_3
       237: goto          269
       240: new           #229                // class scala/collection/immutable/BitmapIndexedMapNode
       243: dup
       244: aload_3
       245: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       248: aload_3
       249: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       252: aload         4
       254: aload_3
       255: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
       258: aload_3
       259: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
       262: aload_3
       263: invokevirtual #829                // Method scala/collection/immutable/BitmapIndexedMapNode.cachedJavaKeySetHashCode:()I
       266: invokespecial #832                // Method scala/collection/immutable/BitmapIndexedMapNode."<init>":(II[Ljava/lang/Object;[III)V
       269: aconst_null
       270: astore_3
       271: aconst_null
       272: astore        4
       274: aconst_null
       275: astore        9
       277: aconst_null
       278: astore        10
       280: aconst_null
       281: astore        11
       283: aconst_null
       284: astore        13
       286: aconst_null
       287: astore        14
       289: aconst_null
       290: astore        15
       292: aconst_null
       293: astore        16
       295: astore_2
       296: aload_2
       297: aload_0
       298: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       301: if_acmpne     306
       304: aload_0
       305: areturn
       306: new           #2                  // class scala/collection/immutable/HashMap
       309: dup
       310: aload_2
       311: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       314: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class scala/collection/immutable/HashMap, class scala/Function2, top, class scala/collection/immutable/BitmapIndexedMapNode, class "[Ljava/lang/Object;", int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 94
          locals = [ class scala/collection/immutable/HashMap, class scala/Function2, top, class scala/collection/immutable/BitmapIndexedMapNode, class "[Ljava/lang/Object;", int, int, int, int, class java/lang/Object, class java/lang/Object, class java/lang/Object, top, top, top, null, null ]
          stack = []
        frame_type = 10 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/Function2, top, class scala/collection/immutable/BitmapIndexedMapNode, class "[Ljava/lang/Object;", int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/immutable/HashMap, class scala/Function2, top, class scala/collection/immutable/BitmapIndexedMapNode, class "[Ljava/lang/Object;", int, int, int, int, top, top, top, int ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 61
          locals = [ class scala/collection/immutable/MapNode, class scala/collection/immutable/MapNode ]
        frame_type = 11 /* same */
        frame_type = 249 /* chop */
          offset_delta = 5
        frame_type = 8 /* same */
        frame_type = 92 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/collection/immutable/HashMap, class scala/Function2, class scala/collection/immutable/BitmapIndexedMapNode, null, null, int, int, int, int, null, null, null, int, null, null, null, null ]
          stack = []
      LineNumberTable:
        line 357: 0
        line 1136: 11
        line 1137: 14
        line 1138: 20
        line 1139: 26
        line 1140: 33
        line 1141: 36
        line 613: 43
        line 1142: 54
        line 614: 61
        line 1143: 74
        line 1144: 81
        line 1145: 93
        line 1146: 98
        line 1147: 105
        line 1148: 117
        line 1151: 131
        line 1153: 142
        line 1141: 145
        line 1156: 148
        line 1157: 151
        line 1158: 158
        line 1159: 166
        line 1160: 174
        line 1161: 179
        line 1162: 186
        line 1163: 198
        line 1166: 213
        line 1167: 225
        line 1157: 228
        line 1169: 231
        line 1170: 240
        line 357: 269
        line 148: 296
        line 357: 314
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     315     0  this   Lscala/collection/immutable/HashMap;
            0     315     1     f   Lscala/Function2;
          296      18     2 newHashMapOrThis_newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
           61      84     9 transform_key   Ljava/lang/Object;
           81      64    10 transform_value   Ljava/lang/Object;
           93      52    11 transform_newValue   Ljava/lang/Object;
          166      62    13 transform_node   Lscala/collection/immutable/MapNode;
          174      54    14 transform_newNode   Lscala/collection/immutable/MapNode;
           14     255     4 transform_newContent   [Ljava/lang/Object;
           20     249     5 transform_iN   I
           26     243     6 transform_jN   I
           33     236     7 transform_newContentLength   I
           36     233     8 transform_i   I
          151     118    12 transform_j   I
           11     258     3 transform_this   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #818                         // <W:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TW;>;)Lscala/collection/immutable/HashMap<TK;TW;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.collection.immutable.HashMap<K, V> filterImpl(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, boolean);
    descriptor: (Lscala/Function1;Z)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=54, args_size=3
         0: aload_0
         1: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore        4
        12: aload         4
        14: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
        17: iconst_0
        18: if_icmpne     26
        21: aload         4
        23: goto          1127
        26: aload         4
        28: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
        31: iconst_1
        32: if_icmpne     68
        35: aload_1
        36: aload         4
        38: iconst_0
        39: invokevirtual #635                // Method scala/collection/immutable/BitmapIndexedMapNode.getPayload:(I)Lscala/Tuple2;
        42: invokeinterface #639,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        47: invokestatic  #851                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        50: iload_2
        51: if_icmpeq     59
        54: aload         4
        56: goto          1127
        59: getstatic     #856                // Field scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
        62: invokevirtual #859                // Method scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
        65: goto          1127
        68: aload         4
        70: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
        73: iconst_0
        74: if_icmpne     407
        77: aload         4
        79: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
        82: invokestatic  #751                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
        85: istore        5
        87: bipush        32
        89: aload         4
        91: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
        94: invokestatic  #754                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
        97: isub
        98: istore        6
       100: iconst_0
       101: istore        7
       103: iconst_0
       104: istore        8
       106: iconst_0
       107: istore        9
       109: iload         5
       111: istore        10
       113: iload         10
       115: iload         6
       117: if_icmpge     209
       120: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       123: pop
       124: iconst_1
       125: iload         10
       127: ishl
       128: istore        51
       130: iload         51
       132: aload         4
       134: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       137: iand
       138: iconst_0
       139: if_icmpeq     203
       142: aload         4
       144: iload         9
       146: invokevirtual #635                // Method scala/collection/immutable/BitmapIndexedMapNode.getPayload:(I)Lscala/Tuple2;
       149: astore        11
       151: aload_1
       152: aload         11
       154: invokeinterface #639,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       159: invokestatic  #851                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       162: iload_2
       163: if_icmpeq     170
       166: iconst_1
       167: goto          171
       170: iconst_0
       171: ifeq          200
       174: iload         7
       176: iload         51
       178: ior
       179: istore        7
       181: iload         8
       183: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       186: aload         4
       188: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
       191: iload         9
       193: iaload
       194: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       197: iadd
       198: istore        8
       200: iinc          9, 1
       203: iinc          10, 1
       206: goto          113
       209: iload         7
       211: iconst_0
       212: if_icmpne     224
       215: getstatic     #856                // Field scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
       218: invokevirtual #859                // Method scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
       221: goto          1127
       224: iload         7
       226: aload         4
       228: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       231: if_icmpne     239
       234: aload         4
       236: goto          1127
       239: iload         7
       241: invokestatic  #862                // Method java/lang/Integer.bitCount:(I)I
       244: istore        12
       246: iload         12
       248: iconst_2
       249: imul
       250: anewarray     #514                // class java/lang/Object
       253: astore        13
       255: iload         12
       257: newarray       int
       259: astore        14
       261: bipush        32
       263: iload         7
       265: invokestatic  #754                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       268: isub
       269: istore        15
       271: iload         7
       273: invokestatic  #751                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
       276: istore        16
       278: iconst_0
       279: istore        17
       281: iload         16
       283: iload         15
       285: if_icmpge     386
       288: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       291: pop
       292: iconst_1
       293: iload         16
       295: ishl
       296: istore        52
       298: iload         52
       300: iload         7
       302: iand
       303: iconst_0
       304: if_icmpeq     380
       307: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       310: pop
       311: aload         4
       313: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       316: iload         52
       318: iconst_1
       319: isub
       320: iand
       321: invokestatic  #862                // Method java/lang/Integer.bitCount:(I)I
       324: istore        50
       326: aload         13
       328: iload         17
       330: iconst_2
       331: imul
       332: aload         4
       334: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       337: iload         50
       339: iconst_2
       340: imul
       341: aaload
       342: aastore
       343: aload         13
       345: iload         17
       347: iconst_2
       348: imul
       349: iconst_1
       350: iadd
       351: aload         4
       353: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       356: iload         50
       358: iconst_2
       359: imul
       360: iconst_1
       361: iadd
       362: aaload
       363: aastore
       364: aload         14
       366: iload         17
       368: aload         4
       370: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
       373: iload         50
       375: iaload
       376: iastore
       377: iinc          17, 1
       380: iinc          16, 1
       383: goto          281
       386: new           #229                // class scala/collection/immutable/BitmapIndexedMapNode
       389: dup
       390: iload         7
       392: iconst_0
       393: aload         13
       395: aload         14
       397: iload         12
       399: iload         8
       401: invokespecial #832                // Method scala/collection/immutable/BitmapIndexedMapNode."<init>":(II[Ljava/lang/Object;[III)V
       404: goto          1127
       407: aload         4
       409: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       412: aload         4
       414: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       417: ior
       418: istore        18
       420: iload         18
       422: invokestatic  #751                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
       425: istore        19
       427: bipush        32
       429: iload         18
       431: invokestatic  #754                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       434: isub
       435: istore        20
       437: iconst_0
       438: istore        21
       440: iconst_0
       441: istore        22
       443: aconst_null
       444: astore        23
       446: iconst_0
       447: istore        24
       449: iconst_0
       450: istore        25
       452: aconst_null
       453: astore        26
       455: iconst_0
       456: istore        27
       458: iconst_0
       459: istore        28
       461: iconst_0
       462: istore        29
       464: iconst_0
       465: istore        30
       467: iconst_0
       468: istore        31
       470: iconst_0
       471: istore        32
       473: iload         19
       475: istore        33
       477: iload         33
       479: iload         20
       481: if_icmpge     753
       484: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       487: pop
       488: iconst_1
       489: iload         33
       491: ishl
       492: istore        53
       494: iload         53
       496: aload         4
       498: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
       501: iand
       502: iconst_0
       503: if_icmpeq     580
       506: aload         4
       508: iload         31
       510: invokevirtual #635                // Method scala/collection/immutable/BitmapIndexedMapNode.getPayload:(I)Lscala/Tuple2;
       513: astore        34
       515: aload_1
       516: aload         34
       518: invokeinterface #639,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       523: invokestatic  #851                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       526: iload_2
       527: if_icmpeq     534
       530: iconst_1
       531: goto          535
       534: iconst_0
       535: ifeq          574
       538: iload         27
       540: iload         53
       542: ior
       543: istore        27
       545: iload         21
       547: iload         53
       549: ior
       550: istore        21
       552: iinc          29, 1
       555: iload         30
       557: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       560: aload         4
       562: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
       565: iload         31
       567: iaload
       568: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       571: iadd
       572: istore        30
       574: iinc          31, 1
       577: goto          747
       580: iload         53
       582: aload         4
       584: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
       587: iand
       588: iconst_0
       589: if_icmpeq     747
       592: aload         4
       594: iload         32
       596: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
       599: astore        35
       601: aload         35
       603: aload_1
       604: iload_2
       605: invokevirtual #865                // Method scala/collection/immutable/MapNode.filterImpl:(Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
       608: astore        36
       610: iload         29
       612: aload         36
       614: invokevirtual #866                // Method scala/collection/immutable/MapNode.size:()I
       617: iadd
       618: istore        29
       620: iload         30
       622: aload         36
       624: invokevirtual #867                // Method scala/collection/immutable/MapNode.cachedJavaKeySetHashCode:()I
       627: iadd
       628: istore        30
       630: aload         36
       632: invokevirtual #866                // Method scala/collection/immutable/MapNode.size:()I
       635: iconst_1
       636: if_icmple     694
       639: iload         28
       641: iload         53
       643: ior
       644: istore        28
       646: aload         35
       648: aload         36
       650: if_acmpne     663
       653: iload         24
       655: iload         53
       657: ior
       658: istore        24
       660: goto          744
       663: iload         25
       665: iload         53
       667: ior
       668: istore        25
       670: aload         26
       672: ifnonnull     683
       675: getstatic     #872                // Field scala/collection/mutable/Queue$.MODULE$:Lscala/collection/mutable/Queue$;
       678: invokevirtual #875                // Method scala/collection/mutable/Queue$.empty:()Lscala/collection/mutable/Queue;
       681: astore        26
       683: aload         26
       685: aload         36
       687: invokevirtual #881                // Method scala/collection/mutable/Queue.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       690: pop
       691: goto          744
       694: aload         36
       696: invokevirtual #866                // Method scala/collection/immutable/MapNode.size:()I
       699: iconst_1
       700: if_icmpne     744
       703: iload         27
       705: iload         53
       707: ior
       708: istore        27
       710: iload         22
       712: iload         53
       714: ior
       715: istore        22
       717: aload         23
       719: ifnonnull     736
       722: getstatic     #872                // Field scala/collection/mutable/Queue$.MODULE$:Lscala/collection/mutable/Queue$;
       725: getstatic     #886                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       728: invokestatic  #892                // InterfaceMethod scala/collection/IterableFactory.apply$:(Lscala/collection/IterableFactory;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       731: checkcast     #877                // class scala/collection/mutable/Queue
       734: astore        23
       736: aload         23
       738: aload         36
       740: invokevirtual #881                // Method scala/collection/mutable/Queue.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       743: pop
       744: iinc          32, 1
       747: iinc          33, 1
       750: goto          477
       753: iload         29
       755: iconst_0
       756: if_icmpne     768
       759: getstatic     #856                // Field scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
       762: invokevirtual #859                // Method scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
       765: goto          1127
       768: iload         29
       770: aload         4
       772: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
       775: if_icmpne     783
       778: aload         4
       780: goto          1127
       783: iload         27
       785: invokestatic  #862                // Method java/lang/Integer.bitCount:(I)I
       788: istore        37
       790: iconst_2
       791: iload         37
       793: imul
       794: iload         28
       796: invokestatic  #862                // Method java/lang/Integer.bitCount:(I)I
       799: iadd
       800: istore        38
       802: iload         38
       804: anewarray     #514                // class java/lang/Object
       807: astore        39
       809: iload         37
       811: newarray       int
       813: astore        40
       815: iload         27
       817: iload         28
       819: ior
       820: istore        41
       822: bipush        32
       824: iload         41
       826: invokestatic  #754                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       829: isub
       830: istore        42
       832: iload         19
       834: istore        43
       836: iconst_0
       837: istore        44
       839: iconst_0
       840: istore        45
       842: iconst_0
       843: istore        46
       845: iconst_0
       846: istore        47
       848: iload         43
       850: iload         42
       852: if_icmpge     1108
       855: getstatic     #474                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       858: iload         43
       860: invokevirtual #895                // Method scala/collection/immutable/Node$.bitposFrom:(I)I
       863: istore        48
       865: iload         48
       867: iload         21
       869: iand
       870: iconst_0
       871: if_icmpeq     934
       874: aload         39
       876: iload         46
       878: iconst_2
       879: imul
       880: aload         4
       882: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       885: iconst_2
       886: iload         44
       888: imul
       889: aaload
       890: aastore
       891: aload         39
       893: iload         46
       895: iconst_2
       896: imul
       897: iconst_1
       898: iadd
       899: aload         4
       901: invokevirtual #485                // Method scala/collection/immutable/BitmapIndexedMapNode.content:()[Ljava/lang/Object;
       904: iconst_2
       905: iload         44
       907: imul
       908: iconst_1
       909: iadd
       910: aaload
       911: aastore
       912: aload         40
       914: iload         46
       916: aload         4
       918: invokevirtual #666                // Method scala/collection/immutable/BitmapIndexedMapNode.originalHashes:()[I
       921: iload         44
       923: iaload
       924: iastore
       925: iinc          46, 1
       928: iinc          44, 1
       931: goto          1102
       934: iload         48
       936: iload         24
       938: iand
       939: iconst_0
       940: if_icmpeq     969
       943: aload         39
       945: iload         38
       947: iload         47
       949: isub
       950: iconst_1
       951: isub
       952: aload         4
       954: iload         45
       956: invokevirtual #502                // Method scala/collection/immutable/BitmapIndexedMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
       959: aastore
       960: iinc          47, 1
       963: iinc          45, 1
       966: goto          1102
       969: iload         48
       971: iload         22
       973: iand
       974: iconst_0
       975: if_icmpeq     1036
       978: aload         23
       980: invokevirtual #898                // Method scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
       983: checkcast     #504                // class scala/collection/immutable/MapNode
       986: astore        49
       988: aload         39
       990: iconst_2
       991: iload         46
       993: imul
       994: aload         49
       996: iconst_0
       997: invokevirtual #902                // Method scala/collection/immutable/MapNode.getKey:(I)Ljava/lang/Object;
      1000: aastore
      1001: aload         39
      1003: iconst_2
      1004: iload         46
      1006: imul
      1007: iconst_1
      1008: iadd
      1009: aload         49
      1011: iconst_0
      1012: invokevirtual #905                // Method scala/collection/immutable/MapNode.getValue:(I)Ljava/lang/Object;
      1015: aastore
      1016: aload         40
      1018: iload         46
      1020: aload         49
      1022: iconst_0
      1023: invokevirtual #906                // Method scala/collection/immutable/MapNode.getHash:(I)I
      1026: iastore
      1027: iinc          46, 1
      1030: iinc          45, 1
      1033: goto          1102
      1036: iload         48
      1038: iload         25
      1040: iand
      1041: iconst_0
      1042: if_icmpeq     1069
      1045: aload         39
      1047: iload         38
      1049: iload         47
      1051: isub
      1052: iconst_1
      1053: isub
      1054: aload         26
      1056: invokevirtual #898                // Method scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
      1059: aastore
      1060: iinc          47, 1
      1063: iinc          45, 1
      1066: goto          1102
      1069: iload         48
      1071: aload         4
      1073: invokevirtual #477                // Method scala/collection/immutable/BitmapIndexedMapNode.dataMap:()I
      1076: iand
      1077: iconst_0
      1078: if_icmpeq     1087
      1081: iinc          44, 1
      1084: goto          1102
      1087: iload         48
      1089: aload         4
      1091: invokevirtual #498                // Method scala/collection/immutable/BitmapIndexedMapNode.nodeMap:()I
      1094: iand
      1095: iconst_0
      1096: if_icmpeq     1102
      1099: iinc          45, 1
      1102: iinc          43, 1
      1105: goto          848
      1108: new           #229                // class scala/collection/immutable/BitmapIndexedMapNode
      1111: dup
      1112: iload         27
      1114: iload         28
      1116: aload         39
      1118: aload         40
      1120: iload         29
      1122: iload         30
      1124: invokespecial #832                // Method scala/collection/immutable/BitmapIndexedMapNode."<init>":(II[Ljava/lang/Object;[III)V
      1127: aconst_null
      1128: astore        4
      1130: aconst_null
      1131: astore        11
      1133: aconst_null
      1134: astore        13
      1136: aconst_null
      1137: astore        14
      1139: aconst_null
      1140: astore        23
      1142: aconst_null
      1143: astore        26
      1145: aconst_null
      1146: astore        34
      1148: aconst_null
      1149: astore        35
      1151: aconst_null
      1152: astore        36
      1154: aconst_null
      1155: astore        39
      1157: aconst_null
      1158: astore        40
      1160: aconst_null
      1161: astore        49
      1163: astore_3
      1164: aload_3
      1165: aload_0
      1166: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
      1169: if_acmpne     1174
      1172: aload_0
      1173: areturn
      1174: aload_3
      1175: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
      1178: iconst_0
      1179: if_icmpne     1189
      1182: getstatic     #52                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
      1185: invokevirtual #908                // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
      1188: areturn
      1189: new           #2                  // class scala/collection/immutable/HashMap
      1192: dup
      1193: aload_3
      1194: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
      1197: areturn
      StackMapTable: number_of_entries = 41
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 253 /* append */
          offset_delta = 15
          locals = [ top, class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 32 /* same */
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 28 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int ]
          stack = []
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, top, int, class "[Ljava/lang/Object;", class "[I", int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 98
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, top, int, class "[Ljava/lang/Object;", class "[I", int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, int, int, int, int, int, int, top, int, class "[Ljava/lang/Object;", class "[I", int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 69
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int, int, int, int, class scala/collection/mutable/Queue, int, int, class scala/collection/mutable/Queue, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int, int, int, int, class scala/collection/mutable/Queue, int, int, class scala/collection/mutable/Queue, int, int, int, int, int, int, int, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 38 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int, int, int, int, class scala/collection/mutable/Queue, int, int, class scala/collection/mutable/Queue, int, int, int, int, int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 82
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int, int, int, int, class scala/collection/mutable/Queue, int, int, class scala/collection/mutable/Queue, int, int, int, int, int, int, int, top, class scala/collection/immutable/MapNode, class scala/collection/immutable/MapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 19 /* same */
        frame_type = 10 /* same */
        frame_type = 41 /* same */
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int, int, int, int, class scala/collection/mutable/Queue, int, int, class scala/collection/mutable/Queue, int, int, int, int, int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int, int, int, int, class scala/collection/mutable/Queue, int, int, class scala/collection/mutable/Queue, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int, int, int, int, class scala/collection/mutable/Queue, int, int, class scala/collection/mutable/Queue, int, int, int, int, int, int, int, top, top, top, int, int, class "[Ljava/lang/Object;", class "[I", int, int, int, int, int, int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 85
          locals = [ int ]
        frame_type = 34 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 66
        frame_type = 32 /* same */
        frame_type = 17 /* same */
        frame_type = 14 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, top, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class scala/collection/immutable/HashMap, class scala/Function1, int, class scala/collection/immutable/BitmapIndexedMapNode, null, top, top, top, top, top, top, null, top, null, null, top, top, top, top, top, top, top, top, null, top, top, null, top, top, top, top, top, top, top, null, null, null, top, top, null, null, top, top, top, top, top, top, top, top, null ]
          stack = []
        frame_type = 14 /* same */
      LineNumberTable:
        line 360: 0
        line 1594: 12
        line 1595: 26
        line 1596: 35
        line 1597: 68
        line 1611: 77
        line 1612: 87
        line 1614: 100
        line 1615: 103
        line 1616: 106
        line 1618: 109
        line 1620: 113
        line 1621: 120
        line 1623: 130
        line 1624: 142
        line 1625: 151
        line 1627: 171
        line 1628: 174
        line 1629: 181
        line 620: 186
        line 1629: 194
        line 1632: 200
        line 1635: 203
        line 1620: 206
        line 1638: 209
        line 1639: 215
        line 1640: 224
        line 1641: 234
        line 1643: 239
        line 1644: 246
        line 1645: 255
        line 1646: 261
        line 1648: 271
        line 1650: 278
        line 1653: 281
        line 1654: 288
        line 1655: 298
        line 1656: 307
        line 1657: 326
        line 1658: 343
        line 1659: 364
        line 1660: 377
        line 1662: 380
        line 1653: 383
        line 1665: 386
        line 1670: 407
        line 1671: 420
        line 1672: 427
        line 1674: 437
        line 1677: 440
        line 1679: 443
        line 1682: 446
        line 1687: 449
        line 1689: 452
        line 1691: 455
        line 1692: 458
        line 1693: 461
        line 1694: 464
        line 1696: 467
        line 1697: 470
        line 1699: 473
        line 1700: 477
        line 1701: 484
        line 1703: 494
        line 1704: 506
        line 1705: 515
        line 1707: 535
        line 1708: 538
        line 1709: 545
        line 1710: 552
        line 1711: 555
        line 620: 560
        line 1711: 568
        line 1714: 574
        line 1715: 580
        line 1716: 592
        line 1717: 601
        line 1719: 610
        line 1720: 620
        line 1723: 630
        line 1724: 639
        line 1725: 646
        line 1726: 653
        line 1728: 663
        line 1729: 670
        line 1730: 675
        line 1732: 683
        line 1734: 694
        line 1735: 703
        line 1736: 710
        line 1737: 717
        line 1738: 722
        line 1740: 736
        line 1743: 744
        line 1746: 747
        line 1700: 750
        line 1749: 753
        line 1750: 759
        line 1751: 768
        line 1752: 778
        line 1754: 783
        line 1755: 790
        line 1756: 802
        line 1757: 809
        line 1759: 815
        line 1760: 822
        line 1764: 832
        line 1766: 836
        line 1767: 839
        line 1769: 842
        line 1770: 845
        line 1772: 848
        line 1773: 855
        line 1775: 865
        line 1776: 874
        line 613: 880
        line 1776: 890
        line 1777: 891
        line 614: 899
        line 1777: 911
        line 1778: 912
        line 620: 916
        line 1778: 924
        line 1779: 925
        line 1780: 928
        line 1781: 934
        line 1782: 943
        line 1783: 960
        line 1784: 963
        line 1785: 969
        line 1787: 978
        line 1788: 988
        line 1789: 1001
        line 1790: 1016
        line 1791: 1027
        line 1792: 1030
        line 1793: 1036
        line 1794: 1045
        line 1795: 1060
        line 1796: 1063
        line 1797: 1069
        line 1798: 1081
        line 1799: 1087
        line 1800: 1099
        line 1803: 1102
        line 1772: 1105
        line 1806: 1108
        line 360: 1127
        line 361: 1164
        line 362: 1174
        line 363: 1189
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
         1164      33     3 newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
            0    1198     0  this   Lscala/collection/immutable/HashMap;
            0    1198     1  pred   Lscala/Function1;
            0    1198     2 isFlipped   Z
          151      52    11 filterImpl_payload   Lscala/Tuple2;
          246     158    12 filterImpl_newSize   I
          255     149    13 filterImpl_newContent   [Ljava/lang/Object;
          261     143    14 filterImpl_newOriginalHashCodes   [I
          271     133    15 filterImpl_newMaximumIndex   I
          278     126    16 filterImpl_j   I
          281     123    17 filterImpl_newDataIndex   I
           87     317     5 filterImpl_minimumIndex   I
          100     304     6 filterImpl_maximumIndex   I
          103     301     7 filterImpl_newDataMap   I
          106     298     8 filterImpl_newCachedHashCode   I
          109     295     9 filterImpl_dataIndex   I
          113     291    10 filterImpl_i   I
          515      62    34 filterImpl_payload   Lscala/Tuple2;
          601     146    35 filterImpl_oldSubNode   Lscala/collection/immutable/MapNode;
          610     137    36 filterImpl_newSubNode   Lscala/collection/immutable/MapNode;
          988      45    49 filterImpl_node   Lscala/collection/immutable/MapNode;
          865     240    48 filterImpl_bitpos   I
          790     337    37 filterImpl_newDataSize   I
          802     325    38 filterImpl_newContentSize   I
          809     318    39 filterImpl_newContent   [Ljava/lang/Object;
          815     312    40 filterImpl_newOriginalHashes   [I
          822     305    41 filterImpl_newAllMap   I
          832     295    42 filterImpl_maxIndex   I
          836     291    43 filterImpl_i   I
          839     288    44 filterImpl_oldDataIndex   I
          842     285    45 filterImpl_oldNodeIndex   I
          845     282    46 filterImpl_newDataIndex   I
          848     279    47 filterImpl_newNodeIndex   I
          420     707    18 filterImpl_allMap   I
          427     700    19 filterImpl_minimumIndex   I
          437     690    20 filterImpl_maximumIndex   I
          440     687    21 filterImpl_oldDataPassThrough   I
          443     684    22 filterImpl_nodeMigrateToDataTargetMap   I
          446     681    23 filterImpl_nodesToMigrateToData   Lscala/collection/mutable/Queue;
          449     678    24 filterImpl_nodesToPassThroughMap   I
          452     675    25 filterImpl_mapOfNewNodes   I
          455     672    26 filterImpl_newNodes   Lscala/collection/mutable/Queue;
          458     669    27 filterImpl_newDataMap   I
          461     666    28 filterImpl_newNodeMap   I
          464     663    29 filterImpl_newSize   I
          467     660    30 filterImpl_newCachedHashCode   I
          470     657    31 filterImpl_dataIndex   I
          473     654    32 filterImpl_nodeIndex   I
          477     650    33 filterImpl_i   I
           12    1115     4 filterImpl_this   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #847                         // (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;Z)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      pred                           final
      isFlipped                      final

  public scala.collection.immutable.HashMap<K, V> removedAll(scala.collection.IterableOnce<K>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=19, args_size=2
         0: aload_0
         1: invokevirtual #254                // Method isEmpty:()Z
         4: ifeq          9
         7: aload_0
         8: areturn
         9: aload_1
        10: instanceof    #952                // class scala/collection/immutable/HashSet
        13: ifeq          96
        16: aload_1
        17: checkcast     #952                // class scala/collection/immutable/HashSet
        20: astore_3
        21: aload_3
        22: invokevirtual #953                // Method scala/collection/immutable/HashSet.isEmpty:()Z
        25: ifeq          32
        28: aload_0
        29: goto          92
        32: new           #955                // class scala/collection/immutable/MapNodeRemoveAllSetNodeIterator
        35: dup
        36: aload_3
        37: invokevirtual #958                // Method scala/collection/immutable/HashSet.rootNode:()Lscala/collection/immutable/BitmapIndexedSetNode;
        40: invokespecial #961                // Method scala/collection/immutable/MapNodeRemoveAllSetNodeIterator."<init>":(Lscala/collection/immutable/SetNode;)V
        43: aload_0
        44: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        47: invokevirtual #965                // Method scala/collection/immutable/MapNodeRemoveAllSetNodeIterator.removeAll:(Lscala/collection/immutable/BitmapIndexedMapNode;)Lscala/collection/immutable/BitmapIndexedMapNode;
        50: astore        4
        52: aload         4
        54: aload_0
        55: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
        58: if_acmpne     65
        61: aload_0
        62: goto          92
        65: aload         4
        67: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
        70: iconst_0
        71: if_icmpgt     83
        74: getstatic     #52                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
        77: invokevirtual #908                // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
        80: goto          92
        83: new           #2                  // class scala/collection/immutable/HashMap
        86: dup
        87: aload         4
        89: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
        92: astore_2
        93: goto          363
        96: aload_1
        97: instanceof    #40                 // class scala/collection/mutable/HashSet
       100: ifeq          260
       103: aload_1
       104: checkcast     #40                 // class scala/collection/mutable/HashSet
       107: astore        5
       109: aload         5
       111: invokevirtual #966                // Method scala/collection/mutable/HashSet.isEmpty:()Z
       114: ifeq          121
       117: aload_0
       118: goto          256
       121: new           #36                 // class scala/collection/mutable/HashSet$$anon$2
       124: dup
       125: aload         5
       127: invokespecial #969                // Method scala/collection/mutable/HashSet$$anon$2."<init>":(Lscala/collection/mutable/HashSet;)V
       130: astore        18
       132: aload         18
       134: aconst_null
       135: astore        18
       137: astore        6
       139: aload_0
       140: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       143: astore        7
       145: aload         6
       147: invokeinterface #558,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       152: ifeq          227
       155: aload         6
       157: invokeinterface #561,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       162: checkcast     #38                 // class scala/collection/mutable/HashSet$Node
       165: astore        8
       167: aload         8
       169: invokevirtual #970                // Method scala/collection/mutable/HashSet$Node.hash:()I
       172: istore        15
       174: iload         15
       176: iload         15
       178: bipush        16
       180: iushr
       181: ixor
       182: istore        16
       184: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       187: iload         16
       189: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       192: istore        9
       194: aload         7
       196: aload         8
       198: invokevirtual #971                // Method scala/collection/mutable/HashSet$Node.key:()Ljava/lang/Object;
       201: iload         16
       203: iload         9
       205: iconst_0
       206: invokevirtual #545                // Method scala/collection/immutable/BitmapIndexedMapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/BitmapIndexedMapNode;
       209: astore        7
       211: aload         7
       213: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
       216: iconst_0
       217: if_icmpne     145
       220: getstatic     #52                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       223: invokevirtual #908                // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
       226: areturn
       227: aload         7
       229: aload_0
       230: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       233: if_acmpne     240
       236: aload_0
       237: goto          249
       240: new           #2                  // class scala/collection/immutable/HashMap
       243: dup
       244: aload         7
       246: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       249: astore        17
       251: aload         17
       253: aconst_null
       254: astore        17
       256: astore_2
       257: goto          363
       260: aload_1
       261: invokeinterface #590,  1          // InterfaceMethod scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
       266: astore        10
       268: aload_0
       269: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       272: astore        11
       274: aload         10
       276: invokeinterface #558,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
       281: ifeq          340
       284: aload         10
       286: invokeinterface #561,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       291: astore        12
       293: aload         12
       295: invokestatic  #439                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       298: istore        13
       300: getstatic     #444                // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
       303: iload         13
       305: invokevirtual #448                // Method scala/collection/Hashing$.improve:(I)I
       308: istore        14
       310: aload         11
       312: aload         12
       314: iload         13
       316: iload         14
       318: iconst_0
       319: invokevirtual #545                // Method scala/collection/immutable/BitmapIndexedMapNode.removed:(Ljava/lang/Object;III)Lscala/collection/immutable/BitmapIndexedMapNode;
       322: astore        11
       324: aload         11
       326: invokevirtual #232                // Method scala/collection/immutable/BitmapIndexedMapNode.size:()I
       329: iconst_0
       330: if_icmpne     274
       333: getstatic     #52                 // Field scala/collection/immutable/HashMap$.MODULE$:Lscala/collection/immutable/HashMap$;
       336: invokevirtual #908                // Method scala/collection/immutable/HashMap$.empty:()Lscala/collection/immutable/HashMap;
       339: areturn
       340: aload         11
       342: aload_0
       343: invokevirtual #227                // Method rootNode:()Lscala/collection/immutable/BitmapIndexedMapNode;
       346: if_acmpne     353
       349: aload_0
       350: goto          362
       353: new           #2                  // class scala/collection/immutable/HashMap
       356: dup
       357: aload         11
       359: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
       362: astore_2
       363: aload_2
       364: areturn
      StackMapTable: number_of_entries = 18
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 22
          locals = [ top, class scala/collection/immutable/HashSet ]
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class scala/collection/immutable/BitmapIndexedMapNode ]
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, class scala/collection/immutable/HashSet ]
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, class scala/collection/mutable/HashSet ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, class scala/collection/mutable/HashSet, class scala/collection/mutable/HashSet$$anon$2, class scala/collection/immutable/BitmapIndexedMapNode, top, top, top, top, top, top, top, top, top, top, null ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 81
        frame_type = 12 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, class scala/collection/mutable/HashSet ]
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, top, top, top, top, top, top, top, top, class scala/collection/Iterator, class scala/collection/immutable/BitmapIndexedMapNode ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 65
        frame_type = 12 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/immutable/HashMap, class scala/collection/IterableOnce, class scala/collection/immutable/HashMap ]
          stack = []
      LineNumberTable:
        line 367: 0
        line 368: 7
        line 371: 9
        line 372: 21
        line 373: 28
        line 377: 32
        line 378: 52
        line 379: 65
        line 380: 83
        line 382: 96
        line 383: 109
        line 384: 117
        line 386: 121
        line 387: 139
        line 389: 145
        line 390: 155
        line 391: 167
        line 392: 184
        line 393: 194
        line 394: 211
        line 395: 220
        line 148: 227
        line 398: 251
        line 401: 260
        line 402: 268
        line 403: 274
        line 404: 284
        line 405: 293
        line 406: 300
        line 407: 310
        line 408: 324
        line 409: 333
        line 148: 340
        line 412: 362
        line 370: 363
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52      40     4 newRootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
          167      60     8  next   Lscala/collection/mutable/HashSet$Node;
          194      33     9 improved   I
          139     117     6  iter   Lscala/collection/Iterator;
          145     111     7  curr   Lscala/collection/immutable/BitmapIndexedMapNode;
          293      47    12  next   Ljava/lang/Object;
          300      40    13 originalHash   I
          310      30    14 improved   I
          268      94    10  iter   Lscala/collection/Iterator;
          274      88    11  curr   Lscala/collection/immutable/BitmapIndexedMapNode;
            0     365     0  this   Lscala/collection/immutable/HashMap;
            0     365     1  keys   Lscala/collection/IterableOnce;
          174      10    15 unimproveHash_improvedHash   I
    Signature: #949                         // (Lscala/collection/IterableOnce<TK;>;)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      keys                           final

  public scala.Tuple2<scala.collection.immutable.HashMap<K, V>, scala.collection.immutable.HashMap<K, V>> partition(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #980                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.partition$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
         5: areturn
      LineNumberTable:
        line 423: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     p   Lscala/Function1;
    Signature: #976                         // (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;)Lscala/Tuple2<Lscala/collection/immutable/HashMap<TK;TV;>;Lscala/collection/immutable/HashMap<TK;TV;>;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.HashMap<K, V> take(int);
    descriptor: (I)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #990                // InterfaceMethod scala/collection/IterableOps.take$:(Lscala/collection/IterableOps;I)Ljava/lang/Object;
         5: checkcast     #2                  // class scala/collection/immutable/HashMap
         8: areturn
      LineNumberTable:
        line 432: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashMap;
            0       9     1     n   I
    Signature: #983                         // (I)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.collection.immutable.HashMap<K, V> takeRight(int);
    descriptor: (I)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #995                // InterfaceMethod scala/collection/StrictOptimizedIterableOps.takeRight$:(Lscala/collection/StrictOptimizedIterableOps;I)Ljava/lang/Object;
         5: checkcast     #2                  // class scala/collection/immutable/HashMap
         8: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashMap;
            0       9     1     n   I
    Signature: #983                         // (I)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.collection.immutable.HashMap<K, V> takeWhile(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1002               // InterfaceMethod scala/collection/IterableOps.takeWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: checkcast     #2                  // class scala/collection/immutable/HashMap
         8: areturn
      LineNumberTable:
        line 450: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashMap;
            0       9     1     p   Lscala/Function1;
    Signature: #998                         // (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.HashMap<K, V> dropWhile(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1006               // InterfaceMethod scala/collection/IterableOps.dropWhile$:(Lscala/collection/IterableOps;Lscala/Function1;)Ljava/lang/Object;
         5: checkcast     #2                  // class scala/collection/immutable/HashMap
         8: areturn
      LineNumberTable:
        line 459: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashMap;
            0       9     1     p   Lscala/Function1;
    Signature: #998                         // (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.HashMap<K, V> dropRight(int);
    descriptor: (I)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #1010               // InterfaceMethod scala/collection/StrictOptimizedIterableOps.dropRight$:(Lscala/collection/StrictOptimizedIterableOps;I)Ljava/lang/Object;
         5: checkcast     #2                  // class scala/collection/immutable/HashMap
         8: areturn
      LineNumberTable:
        line 468: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashMap;
            0       9     1     n   I
    Signature: #983                         // (I)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.collection.immutable.HashMap<K, V> drop(int);
    descriptor: (I)Lscala/collection/immutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #1014               // InterfaceMethod scala/collection/IterableOps.drop$:(Lscala/collection/IterableOps;I)Ljava/lang/Object;
         5: checkcast     #2                  // class scala/collection/immutable/HashMap
         8: areturn
      LineNumberTable:
        line 477: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashMap;
            0       9     1     n   I
    Signature: #983                         // (I)Lscala/collection/immutable/HashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.Tuple2<scala.collection.immutable.HashMap<K, V>, scala.collection.immutable.HashMap<K, V>> span(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1018               // InterfaceMethod scala/collection/StrictOptimizedIterableOps.span$:(Lscala/collection/StrictOptimizedIterableOps;Lscala/Function1;)Lscala/Tuple2;
         5: areturn
      LineNumberTable:
        line 488: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     p   Lscala/Function1;
    Signature: #976                         // (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;)Lscala/Tuple2<Lscala/collection/immutable/HashMap<TK;TV;>;Lscala/collection/immutable/HashMap<TK;TV;>;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public java.lang.Object drop(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #1020               // Method drop:(I)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object dropRight(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #1022               // Method dropRight:(I)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object dropWhile(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #1024               // Method dropWhile:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     p   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      p                              final

  public java.lang.Object takeWhile(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #1026               // Method takeWhile:(Lscala/Function1;)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     p   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      p                              final

  public java.lang.Object takeRight(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #1028               // Method takeRight:(I)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object take(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #1030               // Method take:(I)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.collection.immutable.MapOps removedAll(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/immutable/MapOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #1033               // Method removedAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1  keys   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      keys                           final

  public java.lang.Object filterImpl(scala.Function1, boolean);
    descriptor: (Lscala/Function1;Z)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokevirtual #1036               // Method filterImpl:(Lscala/Function1;Z)Lscala/collection/immutable/HashMap;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1  pred   Lscala/Function1;
            0       7     2 isFlipped   Z
    MethodParameters:
      Name                           Flags
      pred                           final
      isFlipped                      final

  public scala.collection.immutable.MapOps transform(scala.Function2);
    descriptor: (Lscala/Function2;)Lscala/collection/immutable/MapOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #1039               // Method transform:(Lscala/Function2;)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1     f   Lscala/Function2;
    MethodParameters:
      Name                           Flags
      f                              final

  public java.lang.Object last();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #623                // Method last:()Lscala/Tuple2;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;

  public java.lang.Object head();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #611                // Method head:()Lscala/Tuple2;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;

  public java.lang.Object init();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1041               // Method init:()Lscala/collection/immutable/HashMap;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;

  public java.lang.Object tail();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1043               // Method tail:()Lscala/collection/immutable/HashMap;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;

  public scala.collection.IterableOps concat(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #1047               // Method concat:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1 suffix   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      suffix                         final

  public scala.collection.immutable.MapOps concat(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/immutable/MapOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #1047               // Method concat:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1  that   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.immutable.MapOps removed(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #618                // Method removed:(Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashMap;
            0       6     1   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.collection.immutable.MapOps updatedWith(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/MapOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #1051               // Method updatedWith:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/immutable/HashMap;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1   key   Ljava/lang/Object;
            0       7     2 remappingFunction   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      key                            final
      remappingFunction              final

  public scala.collection.immutable.MapOps updated(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/MapOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #1054               // Method updated:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/HashMap;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashMap;
            0       7     1   key   Ljava/lang/Object;
            0       7     2 value   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key                            final
      value                          final

  public scala.collection.Set keySet();
    descriptor: ()Lscala/collection/Set;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1057               // Method keySet:()Lscala/collection/immutable/Set;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashMap;

  public static final scala.Tuple2 $anonfun$stepper$1(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #1062               // Method scala/collection/immutable/MapNode.getPayload:(I)Lscala/Tuple2;
         5: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  node   Lscala/collection/immutable/MapNode;
            0       6     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final int $anonfun$keyStepper$1(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #902                // Method scala/collection/immutable/MapNode.getKey:(I)Ljava/lang/Object;
         5: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         8: ireturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final long $anonfun$keyStepper$2(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)J
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #902                // Method scala/collection/immutable/MapNode.getKey:(I)Ljava/lang/Object;
         5: invokestatic  #1073               // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
         8: lreturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final double $anonfun$keyStepper$3(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #902                // Method scala/collection/immutable/MapNode.getKey:(I)Ljava/lang/Object;
         5: invokestatic  #1079               // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         8: dreturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$keyStepper$4(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #902                // Method scala/collection/immutable/MapNode.getKey:(I)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  node   Lscala/collection/immutable/MapNode;
            0       6     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final int $anonfun$valueStepper$1(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #905                // Method scala/collection/immutable/MapNode.getValue:(I)Ljava/lang/Object;
         5: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         8: ireturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final long $anonfun$valueStepper$2(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)J
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #905                // Method scala/collection/immutable/MapNode.getValue:(I)Ljava/lang/Object;
         5: invokestatic  #1073               // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
         8: lreturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final double $anonfun$valueStepper$3(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #905                // Method scala/collection/immutable/MapNode.getValue:(I)Ljava/lang/Object;
         5: invokestatic  #1079               // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         8: dreturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$valueStepper$4(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #905                // Method scala/collection/immutable/MapNode.getValue:(I)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  node   Lscala/collection/immutable/MapNode;
            0       6     1     i   I
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public scala.collection.immutable.HashMap(scala.collection.immutable.BitmapIndexedMapNode<K, V>);
    descriptor: (Lscala/collection/immutable/BitmapIndexedMapNode;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #220                // Field rootNode:Lscala/collection/immutable/BitmapIndexedMapNode;
         5: aload_0
         6: invokespecial #1087               // Method scala/collection/immutable/AbstractMap."<init>":()V
         9: invokestatic  #1090               // Method scala/runtime/Statics.releaseFence:()V
        12: return
      LineNumberTable:
        line 39: 0
        line 40: 5
        line 48: 9
        line 39: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/immutable/HashMap;
            0      13     1 rootNode   Lscala/collection/immutable/BitmapIndexedMapNode;
    Signature: #1086                        // (Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;)V
    MethodParameters:
      Name                           Flags
      rootNode                       final

  public scala.collection.immutable.HashMap();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #856                // Field scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
         4: invokevirtual #859                // Method scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
         7: invokespecial #521                // Method "<init>":(Lscala/collection/immutable/BitmapIndexedMapNode;)V
        10: return
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/immutable/HashMap;

  public static final scala.Tuple2 $anonfun$stepper$1$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1092               // Method $anonfun$stepper$1:(Lscala/collection/immutable/MapNode;I)Lscala/Tuple2;
         8: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$keyStepper$1$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1094               // Method $anonfun$keyStepper$1:(Lscala/collection/immutable/MapNode;I)I
         8: invokestatic  #1097               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  node   Lscala/collection/immutable/MapNode;
            0      12     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$keyStepper$2$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1099               // Method $anonfun$keyStepper$2:(Lscala/collection/immutable/MapNode;I)J
         8: invokestatic  #1103               // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        11: areturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  node   Lscala/collection/immutable/MapNode;
            0      12     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$keyStepper$3$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1105               // Method $anonfun$keyStepper$3:(Lscala/collection/immutable/MapNode;I)D
         8: invokestatic  #1109               // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        11: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  node   Lscala/collection/immutable/MapNode;
            0      12     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$keyStepper$4$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1111               // Method $anonfun$keyStepper$4:(Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$valueStepper$1$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1113               // Method $anonfun$valueStepper$1:(Lscala/collection/immutable/MapNode;I)I
         8: invokestatic  #1097               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  node   Lscala/collection/immutable/MapNode;
            0      12     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$valueStepper$2$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1115               // Method $anonfun$valueStepper$2:(Lscala/collection/immutable/MapNode;I)J
         8: invokestatic  #1103               // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        11: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  node   Lscala/collection/immutable/MapNode;
            0      12     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$valueStepper$3$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1117               // Method $anonfun$valueStepper$3:(Lscala/collection/immutable/MapNode;I)D
         8: invokestatic  #1109               // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        11: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  node   Lscala/collection/immutable/MapNode;
            0      12     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  public static final java.lang.Object $anonfun$valueStepper$4$adapted(scala.collection.immutable.MapNode, java.lang.Object);
    descriptor: (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1067               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #1119               // Method $anonfun$valueStepper$4:(Lscala/collection/immutable/MapNode;I)Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/collection/immutable/MapNode;
            0       9     1     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final
      i                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #1131,  0           // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #18= #15 of #17;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  private final #21= #20 of #2;           // HashKeySet=class scala/collection/immutable/HashMap$HashKeySet of class scala/collection/immutable/HashMap
  public #24= #23;                        // accum$1=class scala/collection/immutable/HashMap$accum$1
  private static #29= #26 of #28;         // EmptySet$=class scala/collection/immutable/Set$EmptySet$ of class scala/collection/immutable/Set
  public static final #34= #31 of #33;    // Node=class scala/collection/mutable/HashMap$Node of class scala/collection/mutable/HashMap
  public final #36;                       // class scala/collection/mutable/HashSet$$anon$2
  public static final #34= #38 of #40;    // Node=class scala/collection/mutable/HashSet$Node of class scala/collection/mutable/HashSet
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/immutable/AbstractMap<TK;TV;>;Lscala/collection/immutable/StrictOptimizedMapOps<TK;TV;Lscala/collection/immutable/HashMap;Lscala/collection/immutable/HashMap<TK;TV;>;>;Lscala/collection/generic/DefaultSerializable;
SourceFile: "HashMap.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0011-a\u0001B!C\u0005%C\u0011\u0002\u001d\u0001\u0003\u0006\u0004%\tAQ9\t\u0011U\u0004!\u0011!Q\u0001\nIDaA\u001e\u0001\u0005\u0002\t;\b\"\u0002<\u0001\t\u0003I\b\"\u0002>\u0001\t\u0003Z\bBB@\u0001\t\u0003\n\t\u0001C\u0004\u0002\n\u0001!\t%!\u0001\t\u000f\u0005-\u0001\u0001\"\u0011\u0002\u000e!9\u0011Q\u0003\u0001\u0005B\u0005]aABA\u0010\u0001\u0019\t\t\u0003\u0003\u0004w\u0015\u0011\u0005\u0011q\u0006\u0005\t\u0003gQ\u0001\u0015\"\u0003\u00026!A\u00111\u0007\u0006!\n\u0013\t)\u0005C\u0004\u0002V)!\t%a\u0016\t\u000f\u0005u#\u0002\"\u0011\u0002`!9\u00111\r\u0006\u0005B\u0005\u0015\u0004bBA9\u0015\u0011\u0005\u00131\u000f\u0005\b\u0003o\u0002A\u0011AA=\u0011\u001d\t9\t\u0001C!\u0003\u0013Cq!!$\u0001\t\u0003\ny\t\u0003\u0005\u0002\u0014\u0002!\tBQA=\u0011\u001d\t)\n\u0001C!\u0003/Cq!!8\u0001\t\u0003\ny\u000eC\u0004\u0002|\u0002!\t%!@\t\u000f\te\u0001\u0001\"\u0012\u0003\u001c!9!\u0011\u0005\u0001\u0005B\t\r\u0002b\u0002B\u0014\u0001\u0011\u0005!\u0011\u0006\u0005\b\u0005g\u0001A\u0011\tB\u001b\u0011!\u0011i\u0005\u0001Q\u0005\n\t=\u0003b\u0002B3\u0001\u0011\u0005!q\r\u0005\b\u0005o\u0002A\u0011\tB=\u0011\u001d\u0011y\t\u0001C\u0001\u0005#CqA!&\u0001\t\u0003\u00129\nC\u0004\u00036\u0002!\tEa.\t\u000f\te\u0006\u0001\"\u0011\u00038\"9!1\u0018\u0001\u0005B\tu\u0006b\u0002B`\u0001\u0011\u0005#Q\u0018\u0005\b\u0005\u0003\u0004A\u0011\tBb\u0011\u001d\u0011I\u000e\u0001C!\u00057D\u0001Ba;\u0001\t\u0003!%Q\u001e\u0005\b\u0005s\u0004A\u0011\tB~\u0011\u001d\u0011y\u0010\u0001C!\u0007\u0003A\u0001ba\u0001\u0001A\u0013E3Q\u0001\u0005\b\u0007/\u0001A\u0011AB\r\u0011\u001d\u0019y\u0003\u0001C!\u0007cA\u0001b!\u0011\u0001\t#\"51\t\u0005\b\u0007\u001b\u0002A\u0011IB(\u0011\u001d\u0019I\u0006\u0001C!\u00077Bqaa\u0019\u0001\t\u0003\u001a)\u0007C\u0004\u0004l\u0001!\te!\u001c\t\u000f\rE\u0004\u0001\"\u0011\u0004t!91q\u000f\u0001\u0005B\re\u0004bBB?\u0001\u0011\u00053q\u0010\u0005\b\u0007\u0007\u0003A\u0011IBC\u0011\u001d\u0019I\t\u0001C!\u0007\u0017;qaa$C\u0011\u0003\u0019\tJ\u0002\u0004B\u0005\"\u000511\u0013\u0005\u0007mf\"\taa\'\t\u0013\ru\u0015H1A\u0005\u000e\r}\u0005\u0002CBRs\u0001\u0006ia!)\t\u000f\r5\u0016\b\"\u0001\u00040\"91QX\u001d\u0005\u0002\r}\u0006bBBls\u0011\u00051\u0011\u001c\u0005\n\u0007kL\u0014\u0011!C\u0005\u0007o\u0014q\u0001S1tQ6\u000b\u0007O\u0003\u0002D\t\u0006I\u0011.\\7vi\u0006\u0014G.\u001a\u0006\u0003\u000b\u001a\u000b!bY8mY\u0016\u001cG/[8o\u0015\u00059\u0015!B:dC2\f7\u0001A\u000b\u0004\u0015Fc6#\u0002\u0001L=\u000eT\u0007\u0003\u0002\'N\u001fnk\u0011AQ\u0005\u0003\u001d\n\u00131\"\u00112tiJ\f7\r^\'baB\u0011\u0001+\u0015\u0007\u0001\t\u0015\u0011\u0006A1\u0001T\u0005\u0005Y\u0015C\u0001+Y!\t)f+D\u0001G\u0013\t9fIA\u0004O_RD\u0017N\\4\u0011\u0005UK\u0016B\u0001.G\u0005\r\te.\u001f\t\u0003!r#a!\u0018\u0001\u0005\u0006\u0004\u0019&!\u0001,\u0011\r1{vjW1c\u0013\t\u0001\'IA\u000bTiJL7\r^(qi&l\u0017N_3e\u001b\u0006\u0004x\n]:\u0011\u00051\u0003\u0001\u0003\u0002\'\u0001\u001fn\u0003b\u0001Z3P7\u0006<W\"\u0001#\n\u0005\u0019$%AE\'ba\u001a\u000b7\r^8ss\u0012+g-Y;miN\u0004\"\u0001\u00145\n\u0005%\u0014%\u0001C%uKJ\f\'\r\\3\u0011\u0005-tW\"\u00017\u000b\u00055$\u0015aB4f]\u0016\u0014\u0018nY\u0005\u0003_2\u00141\u0003R3gCVdGoU3sS\u0006d\u0017N_1cY\u0016\f\u0001B]8pi:{G-Z\u000b\u0002eB!Aj](\\\u0013\t!(I\u0001\u000bCSRl\u0017\r]%oI\u0016DX\rZ\'ba:{G-Z\u0001\ne>|GOT8eK\u0002\na\u0001P5oSRtDC\u00012y\u0011\u0015\u00018\u00011\u0001s)\u0005\u0011\u0017AC7ba\u001a\u000b7\r^8ssV\tA\u0010E\u0002e{\u0006L!A #\u0003\u00155\u000b\u0007OR1di>\u0014\u00180A\u0005l]><hnU5{KV\u0011\u00111\u0001\t\u0004+\u0006\u0015\u0011bAA\u0004\r\n\u0019\u0011J\u001c;\u0002\tML\'0Z\u0001\bSN,U\u000e\u001d;z+\t\ty\u0001E\u0002V\u0003#I1!a\u0005G\u0005\u001d\u0011un\u001c7fC:\faa[3z\'\u0016$XCAA\r!\u0011a\u00151D(\n\u0007\u0005u!IA\u0002TKR\u0014!\u0002S1tQ.+\u0017pU3u\'\rQ\u00111\u0005\t\u0005\u0003K\t9#D\u0001\u0001\u0013\u0011\tI#a\u000b\u0003\u001f%kW.\u001e;bE2,7*Z=TKRL1!!\fC\u0005\u0019i\u0015\r](qgR\u0011\u0011\u0011\u0007\t\u0004\u0003KQ\u0011a\u00048fo.+\u0017pU3u\u001fJ$\u0006.[:\u0015\t\u0005e\u0011q\u0007\u0005\b\u0003sa\u0001\u0019AA\u001e\u0003)qWm\u001e%bg\"l\u0015\r\u001d\u0019\u0005\u0003{\t\t\u0005E\u0003M\u0001=\u000by\u0004E\u0002Q\u0003\u0003\"1\"a\u0011\u00028\u0005\u0005\t\u0011!B\u0001\'\n\u0019q\fJ\u0019\u0015\t\u0005e\u0011q\t\u0005\b\u0003\u0013j\u0001\u0019AA&\u0003-qWm\u001e*p_Rtu\u000eZ31\t\u00055\u0013\u0011\u000b\t\u0006\u0019N|\u0015q\n\t\u0004!\u0006ECaCA*\u0003\u000f\n\t\u0011!A\u0003\u0002M\u00131a\u0018\u00133\u0003\u0011Ign\u00197\u0015\t\u0005e\u0011\u0011\f\u0005\u0007\u00037r\u0001\u0019A(\u0002\t\u0015dW-\\\u0001\u0005Kb\u001cG\u000e\u0006\u0003\u0002\u001a\u0005\u0005\u0004BBA.\u001f\u0001\u0007q*\u0001\u0004gS2$XM\u001d\u000b\u0005\u00033\t9\u0007C\u0004\u0002jA\u0001\r!a\u001b\u0002\tA\u0014X\r\u001a\t\u0007+\u00065t*a\u0004\n\u0007\u0005=dIA\u0005Gk:\u001cG/[8oc\u0005Ia-\u001b7uKJtu\u000e\u001e\u000b\u0005\u00033\t)\bC\u0004\u0002jE\u0001\r!a\u001b\u0002\u0011%$XM]1u_J,\"!a\u001f\u0011\u000b\u0011\fi(!!\n\u0007\u0005}DI\u0001\u0005Ji\u0016\u0014\u0018\r^8s!\u0015)\u00161Q(\\\u0013\r\t)I\u0012\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u0019-,\u0017p]%uKJ\fGo\u001c:\u0016\u0005\u0005-\u0005\u0003\u00023\u0002~=\u000baB^1mk\u0016\u001c\u0018\n^3sCR|\'/\u0006\u0002\u0002\u0012B!A-! \\\u0003=\u0011XM^3sg\u0016LE/\u001a:bi>\u0014\u0018aB:uKB\u0004XM]\u000b\u0005\u00033\u000b\u0019\u000b\u0006\u0003\u0002\u001c\u0006M\'CBAO\u0003C\u000b9L\u0002\u0004\u0002 \u0002\u0001\u00111\u0014\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0004!\u0006\rFaBAS-\t\u0007\u0011q\u0015\u0002\u0002\'F\u0019A+!+1\t\u0005-\u00161\u0017\t\u0006I\u00065\u0016\u0011W\u0005\u0004\u0003_#%aB*uKB\u0004XM\u001d\t\u0004!\u0006MFaCA[\u0003G\u000b\t\u0011!A\u0003\u0002M\u00131a\u0018\u00134!\u0011\tI,!4\u000f\t\u0005m\u0016\u0011\u001a\b\u0005\u0003{\u000b9M\u0004\u0003\u0002@\u0006\u0015WBAAa\u0015\r\t\u0019\rS\u0001\u0007yI|w\u000e\u001e \n\u0003\u001dK!!\u0012$\n\u0007\u0005-G)A\u0004Ti\u0016\u0004\b/\u001a:\n\t\u0005=\u0017\u0011\u001b\u0002\u000f\u000b\u001a4\u0017nY5f]R\u001c\u0006\u000f\\5u\u0015\r\tY\r\u0012\u0005\b\u0003+4\u00029AAl\u0003\u0015\u0019\b.\u00199f!\u001d!\u0017\u0011\\AA\u0003CK1!a7E\u00051\u0019F/\u001a9qKJ\u001c\u0006.\u00199f\u0003)YW-_*uKB\u0004XM]\u000b\u0005\u0003C\fI\u000f\u0006\u0003\u0002d\u0006](CBAs\u0003O\f9L\u0002\u0004\u0002 \u0002\u0001\u00111\u001d\t\u0004!\u0006%HaBAS/\t\u0007\u00111^\t\u0004)\u00065\b\u0007BAx\u0003g\u0004R\u0001ZAW\u0003c\u00042\u0001UAz\t-\t)0!;\u0002\u0002\u0003\u0005)\u0011A*\u0003\u0007}#C\u0007C\u0004\u0002V^\u0001\u001d!!?\u0011\r\u0011\fInTAt\u000311\u0018\r\\;f\'R,\u0007\u000f]3s+\u0011\tyPa\u0002\u0015\t\t\u0005!Q\u0003\n\u0007\u0005\u0007\u0011)!a.\u0007\r\u0005}\u0005\u0001\u0001B\u0001!\r\u0001&q\u0001\u0003\b\u0003KC\"\u0019\u0001B\u0005#\r!&1\u0002\u0019\u0005\u0005\u001b\u0011\t\u0002E\u0003e\u0003[\u0013y\u0001E\u0002Q\u0005#!1Ba\u0005\u0003\b\u0005\u0005\t\u0011!B\u0001\'\n\u0019q\fJ\u001b\t\u000f\u0005U\u0007\u0004q\u0001\u0003\u0018A1A-!7\\\u0005\u000b\t\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003\u001f\u0011i\u0002\u0003\u0004\u0003 e\u0001\raT\u0001\u0004W\u0016L\u0018!B1qa2LHcA.\u0003&!1!q\u0004\u000eA\u0002=\u000b1aZ3u)\u0011\u0011YC!\r\u0011\tU\u0013icW\u0005\u0004\u0005_1%AB(qi&|g\u000e\u0003\u0004\u0003 m\u0001\raT\u0001\nO\u0016$xJ]#mg\u0016,BAa\u000e\u0003<Q1!\u0011\bB!\u0005\u0007\u00022\u0001\u0015B\u001e\t\u001d\u0011i\u0004\bb\u0001\u0005\u007f\u0011!AV\u0019\u0012\u0005mC\u0006B\u0002B\u00109\u0001\u0007q\n\u0003\u0005\u0003Fq!\t\u0019\u0001B$\u0003\u001d!WMZ1vYR\u0004R!\u0016B%\u0005sI1Aa\u0013G\u0005!a$-\u001f8b[\u0016t\u0014\u0001\u00058fo\"\u000b7\u000f[\'ba>\u0013H\u000b[5t+\u0011\u0011\tFa\u0016\u0015\t\tM#\u0011\f\t\u0006\u0019\u0002y%Q\u000b\t\u0004!\n]Ca\u0002B\u001f;\t\u0007!q\b\u0005\b\u0003\u0013j\u0002\u0019\u0001B.!\u0015a5o\u0014B+Q\ri\"q\f\t\u0004+\n\u0005\u0014b\u0001B2\r\n1\u0011N\u001c7j]\u0016\fq!\u001e9eCR,G-\u0006\u0003\u0003j\t=DC\u0002B6\u0005c\u0012\u0019\bE\u0003M\u0001=\u0013i\u0007E\u0002Q\u0005_\"qA!\u0010\u001f\u0005\u0004\u0011y\u0004\u0003\u0004\u0003 y\u0001\ra\u0014\u0005\b\u0005kr\u0002\u0019\u0001B7\u0003\u00151\u0018\r\\;f\u0003-)\b\u000fZ1uK\u0012<\u0016\u000e\u001e5\u0016\t\tm$1\u0011\u000b\u0005\u0005{\u0012i\t\u0006\u0003\u0003\u0000\t\u0015\u0005#\u0002\'\u0001\u001f\n\u0005\u0005c\u0001)\u0003\u0004\u00129!QH\u0010C\u0002\t}\u0002b\u0002BD?\u0001\u0007!\u0011R\u0001\u0012e\u0016l\u0017\r\u001d9j]\u001e4UO\\2uS>t\u0007cB+\u0002n\t-\"1\u0012\t\u0006+\n5\"\u0011\u0011\u0005\u0007\u0005?y\u0002\u0019A(\u0002\u000fI,Wn\u001c<fIR\u0019!Ma%\t\r\t}\u0001\u00051\u0001P\u0003\u0019\u0019wN\\2biV!!\u0011\u0014BP)\u0011\u0011YJ!)\u0011\u000b1\u0003qJ!(\u0011\u0007A\u0013y\nB\u0004\u0003>\u0005\u0012\rAa\u0010\t\u000f\t\r\u0016\u00051\u0001\u0003&\u0006!A\u000f[1u!\u0019\u00119K!,\u00034:!\u0011Q\u0018BU\u0013\r\u0011YKR\u0001\ba\u0006\u001c7.Y4f\u0013\u0011\u0011yK!-\u0003\u0019%#XM]1cY\u0016|enY3\u000b\u0007\t-f\t\u0005\u0004V\u0003\u0007{%QT\u0001\u0005i\u0006LG.F\u0001c\u0003\u0011Ig.\u001b;\u0002\t!,\u0017\rZ\u000b\u0003\u0003\u0003\u000bA\u0001\\1ti\u00069am\u001c:fC\u000eDW\u0003\u0002Bc\u0005+$BAa2\u0003NB\u0019QK!3\n\u0007\t-gI\u0001\u0003V]&$\bb\u0002BhM\u0001\u0007!\u0011[\u0001\u0002MB9Q+!\u001c\u0002\u0002\nM\u0007c\u0001)\u0003V\u00121!q\u001b\u0014C\u0002M\u0013\u0011!V\u0001\rM>\u0014X-Y2i\u000b:$(/_\u000b\u0005\u0005;\u0014I\u000f\u0006\u0003\u0003H\n}\u0007b\u0002BhO\u0001\u0007!\u0011\u001d\t\b+\n\rxj\u0017Bt\u0013\r\u0011)O\u0012\u0002\n\rVt7\r^5p]J\u00022\u0001\u0015Bu\t\u0019\u00119n\nb\u0001\'\u0006yam\u001c:fC\u000eDw+\u001b;i\u0011\u0006\u001c\b\u000e\u0006\u0003\u0003H\n=\bb\u0002BhQ\u0001\u0007!\u0011\u001f\t\n+\nMxjWA\u0002\u0005\u000fL1A!>G\u0005%1UO\\2uS>t7\u0007K\u0002)\u0005?\na!Z9vC2\u001cH\u0003BA\b\u0005{DaAa)*\u0001\u0004A\u0016\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005\r\u0011!C2mCN\u001ch*Y7f+\t\u00199\u0001\u0005\u0003\u0004\n\rMQBAB\u0006\u0015\u0011\u0019iaa\u0004\u0002\t1\fgn\u001a\u0006\u0003\u0007#\tAA[1wC&!1QCB\u0006\u0005\u0019\u0019FO]5oO\u00061Q.\u001a:hK\u0012,Baa\u0007\u0004$Q!1QDB\u0017)\u0011\u0019yb!\n\u0011\u000b1\u0003qj!\t\u0011\u0007A\u001b\u0019\u0003B\u0004\u0003>1\u0012\rAa\u0010\t\u000f\r\u001dB\u00061\u0001\u0004*\u00051Q.\u001a:hK\u001a\u0004\u0012\"\u0016Br\u0003\u0003\u001bYca\u000b\u0011\rU\u000b\u0019iTB\u0011\u0011\u001d\u0011\u0019\u000b\fa\u0001\u0007?\t\u0011\u0002\u001e:b]N4wN]7\u0016\t\rM2\u0011\b\u000b\u0005\u0007k\u0019i\u0004E\u0003M\u0001=\u001b9\u0004E\u0002Q\u0007s!aaa\u000f.\u0005\u0004\u0019&!A,\t\u000f\t=W\u00061\u0001\u0004@A9QKa9P7\u000e]\u0012A\u00034jYR,\'/S7qYR)!m!\u0012\u0004J!9\u0011\u0011\u000e\u0018A\u0002\r\u001d\u0003cB+\u0002n\u0005\u0005\u0015q\u0002\u0005\b\u0007\u0017r\u0003\u0019AA\b\u0003%I7O\u00127jaB,G-\u0001\u0006sK6|g/\u001a3BY2$2AYB)\u0011\u001d\u0019\u0019f\fa\u0001\u0007+\nAa[3zgB)1q\u000bBW\u001f:\u0019QK!+\u0002\u0013A\f\'\u000f^5uS>tG\u0003BB/\u0007?\u0002R!VABE\nDqa!\u00191\u0001\u0004\u00199%A\u0001q\u0003\u0011!\u0018m[3\u0015\u0007\t\u001c9\u0007C\u0004\u0004jE\u0002\r!a\u0001\u0002\u00039\f\u0011\u0002^1lKJKw\r\u001b;\u0015\u0007\t\u001cy\u0007C\u0004\u0004jI\u0002\r!a\u0001\u0002\u0013Q\f7.Z,iS2,Gc\u00012\u0004v!91\u0011M\u001aA\u0002\r\u001d\u0013!\u00033s_B<\u0006.\u001b7f)\r\u001171\u0010\u0005\b\u0007C\"\u0004\u0019AB$\u0003%!\'o\u001c9SS\u001eDG\u000fF\u0002c\u0007\u0003Cqa!\u001b6\u0001\u0004\t\u0019!\u0001\u0003ee>\u0004Hc\u00012\u0004\b\"91\u0011\u000e\u001cA\u0002\u0005\r\u0011\u0001B:qC:$Ba!\u0018\u0004\u000e\"91\u0011M\u001cA\u0002\r\u001d\u0013a\u0002%bg\"l\u0015\r\u001d\t\u0003\u0019f\u001aB!OBKyB\u0019Qka&\n\u0007\reeI\u0001\u0004B]f\u0014VM\u001a\u000b\u0003\u0007#\u000b\u0001\"R7qifl\u0015\r]\u000b\u0003\u0007C\u0003B\u0001\u0014\u0001U)\u0006IQ)\u001c9us6\u000b\u0007\u000f\t\u0015\u0004y\r\u001d\u0006cA+\u0004*&\u001911\u0016$\u0003\u0013Q\u0014\u0018M\\:jK:$\u0018!B3naRLXCBBY\u0007o\u001bY,\u0006\u0002\u00044B1A\nAB[\u0007s\u00032\u0001UB\\\t\u0015\u0011VH1\u0001T!\r\u000161\u0018\u0003\u0006;v\u0012\raU\u0001\u0005MJ|W.\u0006\u0004\u0004B\u000e\u001d71\u001a\u000b\u0005\u0007\u0007\u001ci\r\u0005\u0004M\u0001\r\u00157\u0011\u001a\t\u0004!\u000e\u001dG!\u0002*?\u0005\u0004\u0019\u0006c\u0001)\u0004L\u0012)QL\u0010b\u0001\'\"91q\u001a A\u0002\rE\u0017AB:pkJ\u001cW\rE\u0003e\u0007\'\u001c).C\u0002\u00030\u0012\u0003r!VAB\u0007\u000b\u001cI-\u0001\u0006oK^\u0014U/\u001b7eKJ,baa7\u0004n\u000eEXCABo!!\u0019yn!:\u0004j\u000eMXBABq\u0015\r\u0019\u0019\u000fR\u0001\b[V$\u0018M\u00197f\u0013\u0011\u00199o!9\u0003\u001fI+Wo]1cY\u0016\u0014U/\u001b7eKJ\u0004r!VAB\u0007W\u001cy\u000fE\u0002Q\u0007[$QAU C\u0002M\u00032\u0001UBy\t\u0015ivH1\u0001T!\u0019a\u0005aa;\u0004p\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u00111\u0011 \t\u0005\u0007\u0013\u0019Y0\u0003\u0003\u0004~\u000e-!AB(cU\u0016\u001cG\u000fK\u0004:\t\u0003\u0011)\bb\u0002\u0011\u0007U#\u0019!C\u0002\u0005\u0006\u0019\u0013\u0001cU3sS\u0006dg+\u001a:tS>tW+\u0013#\u001f\u0003\rAs\u0001\u000fC\u0001\u0005k\"9\u0001"
    )
BootstrapMethods:
  0: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #298 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$stepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
      #299 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
      #300 5
      #301 1
      #299 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
  1: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #357 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  2: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #375 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  3: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #392 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  4: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #401 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  5: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #413 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  6: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #418 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  7: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #423 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  8: #308 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #428 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #300 5
      #301 1
      #358 (Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  9: #1128 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #357 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #375 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #392 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #401 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$keyStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #298 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$stepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Lscala/Tuple2;
      #413 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$1$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #418 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$2$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #423 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$3$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
      #428 REF_invokeStatic scala/collection/immutable/HashMap.$anonfun$valueStepper$4$adapted:(Lscala/collection/immutable/MapNode;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x21B (unknown attribute)
   01 01 00 6B 04 27 04 28 01 01 61 01 62 01 04 2C
   04 2D 01 01 74 01 62 01 04 32 04 33 01 01 85 01
   62 01 04 38 04 39 01 01 8E 01 62 01 04 22 04 23
   01 01 26 01 27 01 04 3A 04 28 01 01 9A 01 62 01
   04 3B 04 2D 01 01 9F 01 62 01 04 3C 04 33 01 01
   A4 01 62 01 04 3D 04 39 01 01 A9 01 62 01 00 60
   00 61 01 00 37 00 38 01 00 37 02 07 01 01 35 01
   C7 01 02 CB 02 CC 01 00 58 00 99 01 00 58 00 59
   01 02 22 04 14 01 02 22 00 3C 01 02 22 04 07 01
   01 AE 01 AF 01 03 F3 03 84 01 03 F3 03 D6 01 03
   EF 03 84 01 03 EF 03 D6 01 03 EB 00 7D 01 03 EB
   03 E5 01 01 E8 01 AF 01 00 C7 00 7D 01 03 4D 04
   0A 01 03 4D 03 4E 01 00 CC 00 7D 01 00 54 00 7D
   01 00 54 00 4B 01 00 A4 00 7D 01 02 50 02 51 01
   02 44 02 45 01 02 94 02 95 05 01 CC 01 CD 01 01
   D2 01 D3 01 02 B6 00 E1 01 02 60 00 43 01 02 60
   02 61 01 02 6C 00 43 01 02 6C 02 5E 01 00 E9 00
   EA 01 00 FA 00 FB 01 00 EB 04 1F 01 00 EB 00 EC
   01 01 50 01 1C 01 01 0D 00 FB 01 00 E0 00 E1 01
   02 6D 00 43 01 02 6D 02 61 01 00 4A 00 7D 01 00
   4A 00 4B 01 00 DD 00 DE 01 02 CF 02 D0 01 02 03
   02 04 05 03 CF 00 6C 01 00 D0 00 6C 01 02 1C 02
   1D 01 02 1C 04 18 01 03 B4 00 3C 01 03 B4 04 07
   01 01 17 00 FB 01 00 29 00 D9 01 00 BD 00 BE 01
   00 E6 00 E1 01 03 F7 00 6C 01 01 1B 01 1C 01 00
   9D 00 9E 05 00 91 00 92 05 00 8C 00 82 05 00 A9
   00 82 05 00 81 00 82 05 00 B3 00 92 05 02 5D 00
   43 01 02 5D 02 5E 01 03 D5 03 84 01 03 D5 03 D6
   01 03 DF 03 84 01 03 DF 03 D6 01 03 E4 00 7D 01
   03 E4 03 E5 01 00 D5 00 7D 01 03 30 03 31 01 03
   30 04 0D 01 00 6B 00 6C 01 00 75 00 76 01 02 0A
   02 0B 01 02 0A 04 1C 01 02 12 02 13 01 02 12 04
   19 01 01 98 01 1C 01 01 12 00 FB 01 00 42 00 43
   01 00 AD 00 AE 01 00 B8 00 43 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
