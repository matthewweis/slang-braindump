Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/graph/DependencyTree$.class
  Last modified May 29, 2022; size 3593 bytes
  SHA-256 checksum b3f06b2f3357c39d115219f665b758f5a2ff98537bcde1d013780d76abf709e0
  Compiled from "DependencyTree.scala"
public final class coursier.graph.DependencyTree$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/graph/DependencyTree$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 10, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/DependencyTree$
    #2 = Class              #1            // coursier/graph/DependencyTree$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               DependencyTree.scala
    #6 = Utf8               coursier/graph/DependencyTree$Node
    #7 = Class              #6            // coursier/graph/DependencyTree$Node
    #8 = Utf8               coursier/graph/DependencyTree
    #9 = Class              #8            // coursier/graph/DependencyTree
   #10 = Utf8               Node
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               MODULE$
   #17 = Utf8               Lcoursier/graph/DependencyTree$;
   #18 = Utf8               <clinit>
   #19 = Utf8               ()V
   #20 = Utf8               <init>
   #21 = NameAndType        #20:#19       // "<init>":()V
   #22 = Methodref          #2.#21        // coursier/graph/DependencyTree$."<init>":()V
   #23 = NameAndType        #16:#17       // MODULE$:Lcoursier/graph/DependencyTree$;
   #24 = Fieldref           #2.#23        // coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
   #25 = Utf8               apply
   #26 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
   #27 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Z)Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;
   #28 = Utf8               resolution
   #29 = Utf8               roots
   #30 = Utf8               withExclusions
   #31 = Utf8               scala/Option$
   #32 = Class              #31           // scala/Option$
   #33 = Utf8               Lscala/Option$;
   #34 = NameAndType        #16:#33       // MODULE$:Lscala/Option$;
   #35 = Fieldref           #32.#34       // scala/Option$.MODULE$:Lscala/Option$;
   #36 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #37 = NameAndType        #25:#36       // apply:(Ljava/lang/Object;)Lscala/Option;
   #38 = Methodref          #32.#37       // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
   #39 = Utf8               ()Ljava/lang/Object;
   #40 = MethodType         #39           //  ()Ljava/lang/Object;
   #41 = Utf8               $anonfun$apply$1
   #42 = Utf8               (Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
   #43 = NameAndType        #41:#42       // $anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
   #44 = Methodref          #2.#43        // coursier/graph/DependencyTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
   #45 = MethodHandle       6:#44         // REF_invokeStatic coursier/graph/DependencyTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
   #46 = Utf8               ()Lscala/collection/immutable/Seq;
   #47 = MethodType         #46           //  ()Lscala/collection/immutable/Seq;
   #48 = Integer            5
   #49 = Integer            1
   #50 = Utf8               java/lang/invoke/LambdaMetafactory
   #51 = Class              #50           // java/lang/invoke/LambdaMetafactory
   #52 = Utf8               altMetafactory
   #53 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #54 = NameAndType        #52:#53       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #55 = Methodref          #51.#54       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #56 = MethodHandle       6:#55         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #57 = Utf8               (Lcoursier/core/Resolution;)Lscala/Function0;
   #58 = NameAndType        #25:#57       // apply:(Lcoursier/core/Resolution;)Lscala/Function0;
   #59 = InvokeDynamic      #0:#58        // #0:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
   #60 = Utf8               scala/Option
   #61 = Class              #60           // scala/Option
   #62 = Utf8               getOrElse
   #63 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #64 = NameAndType        #62:#63       // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #65 = Methodref          #61.#64       // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #66 = Utf8               scala/collection/immutable/Seq
   #67 = Class              #66           // scala/collection/immutable/Seq
   #68 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #69 = MethodType         #68           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #70 = Utf8               $anonfun$apply$2
   #71 = Utf8               (Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
   #72 = NameAndType        #70:#71       // $anonfun$apply$2:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
   #73 = Methodref          #2.#72        // coursier/graph/DependencyTree$.$anonfun$apply$2:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
   #74 = MethodHandle       6:#73         // REF_invokeStatic coursier/graph/DependencyTree$.$anonfun$apply$2:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
   #75 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
   #76 = MethodType         #75           //  (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
   #77 = Utf8               (Lcoursier/core/Resolution;Z)Lscala/Function1;
   #78 = NameAndType        #25:#77       // apply:(Lcoursier/core/Resolution;Z)Lscala/Function1;
   #79 = InvokeDynamic      #1:#78        // #1:apply:(Lcoursier/core/Resolution;Z)Lscala/Function1;
   #80 = Utf8               map
   #81 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #82 = NameAndType        #80:#81       // map:(Lscala/Function1;)Ljava/lang/Object;
   #83 = InterfaceMethodref #67.#82       // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
   #84 = Utf8               roots0
   #85 = Utf8               Lscala/collection/immutable/Seq;
   #86 = Utf8               this
   #87 = Utf8               Lcoursier/core/Resolution;
   #88 = Utf8               Z
   #89 = Utf8               apply$default$2
   #90 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
   #91 = Utf8               apply$default$3
   #92 = Utf8               ()Z
   #93 = Utf8               one
   #94 = Utf8               (Lcoursier/core/Resolution;Lcoursier/core/Dependency;Z)Lcoursier/graph/DependencyTree;
   #95 = Utf8               root
   #96 = Utf8               (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
   #97 = NameAndType        #20:#96       // "<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
   #98 = Methodref          #7.#97        // coursier/graph/DependencyTree$Node."<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
   #99 = Utf8               Lcoursier/core/Dependency;
  #100 = Utf8               one$default$3
  #101 = Utf8               resolution$1
  #102 = Utf8               coursier/core/Resolution
  #103 = Class              #102          // coursier/core/Resolution
  #104 = Utf8               rootDependencies
  #105 = NameAndType        #104:#46      // rootDependencies:()Lscala/collection/immutable/Seq;
  #106 = Methodref          #103.#105     // coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
  #107 = Utf8               withExclusions$1
  #108 = Utf8               dep
  #109 = Methodref          #4.#21        // java/lang/Object."<init>":()V
  #110 = Utf8               $deserializeLambda$
  #111 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #112 = Utf8               scala/runtime/LambdaDeserialize
  #113 = Class              #112          // scala/runtime/LambdaDeserialize
  #114 = Utf8               bootstrap
  #115 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #116 = NameAndType        #114:#115     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #117 = Methodref          #113.#116     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #118 = MethodHandle       6:#117        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #119 = Utf8               lambdaDeserialize
  #120 = NameAndType        #119:#111     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #121 = InvokeDynamic      #2:#120       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #122 = Utf8               Code
  #123 = Utf8               LineNumberTable
  #124 = Utf8               LocalVariableTable
  #125 = Utf8               Signature
  #126 = Utf8               MethodParameters
  #127 = Utf8               InnerClasses
  #128 = Utf8               SourceFile
  #129 = Utf8               BootstrapMethods
  #130 = Utf8               ScalaInlineInfo
  #131 = Utf8               Scala
{
  public static final coursier.graph.DependencyTree$ MODULE$;
    descriptor: Lcoursier/graph/DependencyTree$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/graph/DependencyTree$
         3: dup
         4: invokespecial #22                 // Method "<init>":()V
         7: putstatic     #24                 // Field MODULE$:Lcoursier/graph/DependencyTree$;
        10: return
      LineNumberTable:
        line 21: 0

  public scala.collection.immutable.Seq<coursier.graph.DependencyTree> apply(coursier.core.Resolution, scala.collection.immutable.Seq<coursier.core.Dependency>, boolean);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=4
         0: getstatic     #35                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_2
         4: invokevirtual #38                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
         7: aload_1
         8: invokedynamic #59,  0             // InvokeDynamic #0:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
        13: invokevirtual #65                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        16: checkcast     #67                 // class scala/collection/immutable/Seq
        19: astore        4
        21: aload         4
        23: aload_1
        24: iload_3
        25: invokedynamic #79,  0             // InvokeDynamic #1:apply:(Lcoursier/core/Resolution;Z)Lscala/Function1;
        30: invokeinterface #83,  2           // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        35: checkcast     #67                 // class scala/collection/immutable/Seq
        38: areturn
      LineNumberTable:
        line 29: 0
        line 31: 21
        line 32: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      17     4 roots0   Lscala/collection/immutable/Seq;
            0      39     0  this   Lcoursier/graph/DependencyTree$;
            0      39     1 resolution   Lcoursier/core/Resolution;
            0      39     2 roots   Lscala/collection/immutable/Seq;
            0      39     3 withExclusions   Z
    Signature: #27                          // (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Z)Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;
    MethodParameters:
      Name                           Flags
      resolution                     final
      roots                          final
      withExclusions                 final

  public scala.collection.immutable.Seq<coursier.core.Dependency> apply$default$2();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/DependencyTree$;
    Signature: #90                          // ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;

  public boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/DependencyTree$;

  public coursier.graph.DependencyTree one(coursier.core.Resolution, coursier.core.Dependency, boolean);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/core/Dependency;Z)Lcoursier/graph/DependencyTree;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: new           #7                  // class coursier/graph/DependencyTree$Node
         3: dup
         4: aload_2
         5: iconst_0
         6: aload_1
         7: iload_3
         8: invokespecial #98                 // Method coursier/graph/DependencyTree$Node."<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
        11: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/graph/DependencyTree$;
            0      12     1 resolution   Lcoursier/core/Resolution;
            0      12     2  root   Lcoursier/core/Dependency;
            0      12     3 withExclusions   Z
    MethodParameters:
      Name                           Flags
      resolution                     final
      root                           final
      withExclusions                 final

  public boolean one$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/DependencyTree$;

  public static final scala.collection.immutable.Seq $anonfun$apply$1(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #106                // Method coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 resolution$1   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      resolution$1                   final

  public static final coursier.graph.DependencyTree$Node $anonfun$apply$2(coursier.core.Resolution, boolean, coursier.core.Dependency);
    descriptor: (Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=3, args_size=3
         0: new           #7                  // class coursier/graph/DependencyTree$Node
         3: dup
         4: aload_2
         5: iconst_0
         6: aload_0
         7: iload_1
         8: invokespecial #98                 // Method coursier/graph/DependencyTree$Node."<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
        11: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 resolution$1   Lcoursier/core/Resolution;
            0      12     1 withExclusions$1   Z
            0      12     2   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      resolution$1                   final
      withExclusions$1               final
      dep                            final

  private coursier.graph.DependencyTree$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #109                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 104: 0
        line 21: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #121,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #7 of #9;            // Node=class coursier/graph/DependencyTree$Node of class coursier/graph/DependencyTree
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "DependencyTree.scala"
BootstrapMethods:
  0: #56 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #40 ()Ljava/lang/Object;
      #45 REF_invokeStatic coursier/graph/DependencyTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
      #47 ()Lscala/collection/immutable/Seq;
      #48 5
      #49 1
      #47 ()Lscala/collection/immutable/Seq;
  1: #56 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #74 REF_invokeStatic coursier/graph/DependencyTree$.$anonfun$apply$2:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
      #76 (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
      #48 5
      #49 1
      #76 (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  2: #118 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 REF_invokeStatic coursier/graph/DependencyTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
      #74 REF_invokeStatic coursier/graph/DependencyTree$.$anonfun$apply$2:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 01 00 08 00 29 00 2A 01 00 46 00 47 01 00 14
   00 13 01 00 19 00 1A 01 00 59 00 2E 01 00 5B 00
   5C 01 00 5D 00 5E 01 00 64 00 5C 01
  Scala: length = 0x0 (unknown attribute)

