Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/io/github/alexarchambault/windowsansi/WindowsAnsi$Size.class
  Last modified May 29, 2022; size 1428 bytes
  SHA-256 checksum 21bdc70a0568cf7dc790064620d7d3b4d982cf3f74d8df5822b79b367aca8caa
  Compiled from "WindowsAnsi.java"
public final class io.github.alexarchambault.windowsansi.WindowsAnsi$Size
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #4                          // io/github/alexarchambault/windowsansi/WindowsAnsi$Size
  super_class: #7                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 7, attributes: 2
Constant pool:
   #1 = Methodref          #7.#41         // java/lang/Object."<init>":()V
   #2 = Fieldref           #4.#42         // io/github/alexarchambault/windowsansi/WindowsAnsi$Size.width:I
   #3 = Fieldref           #4.#43         // io/github/alexarchambault/windowsansi/WindowsAnsi$Size.height:I
   #4 = Class              #45            // io/github/alexarchambault/windowsansi/WindowsAnsi$Size
   #5 = Methodref          #4.#46         // io/github/alexarchambault/windowsansi/WindowsAnsi$Size."<init>":(II)V
   #6 = Methodref          #7.#47         // java/lang/Object.getClass:()Ljava/lang/Class;
   #7 = Class              #48            // java/lang/Object
   #8 = Methodref          #49.#50        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #9 = Methodref          #51.#52        // java/util/Objects.hash:([Ljava/lang/Object;)I
  #10 = Class              #53            // java/lang/StringBuilder
  #11 = Methodref          #10.#41        // java/lang/StringBuilder."<init>":()V
  #12 = String             #54            // Size{width=
  #13 = Methodref          #10.#55        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #14 = Methodref          #10.#56        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #15 = String             #57            // , height=
  #16 = Methodref          #10.#58        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #17 = Methodref          #10.#59        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #18 = Utf8               width
  #19 = Utf8               I
  #20 = Utf8               height
  #21 = Utf8               <init>
  #22 = Utf8               (II)V
  #23 = Utf8               Code
  #24 = Utf8               LineNumberTable
  #25 = Utf8               of
  #26 = Utf8               Size
  #27 = Utf8               InnerClasses
  #28 = Utf8               (II)Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
  #29 = Utf8               getHeight
  #30 = Utf8               ()I
  #31 = Utf8               getWidth
  #32 = Utf8               equals
  #33 = Utf8               (Ljava/lang/Object;)Z
  #34 = Utf8               StackMapTable
  #35 = Class              #45            // io/github/alexarchambault/windowsansi/WindowsAnsi$Size
  #36 = Utf8               hashCode
  #37 = Utf8               toString
  #38 = Utf8               ()Ljava/lang/String;
  #39 = Utf8               SourceFile
  #40 = Utf8               WindowsAnsi.java
  #41 = NameAndType        #21:#60        // "<init>":()V
  #42 = NameAndType        #18:#19        // width:I
  #43 = NameAndType        #20:#19        // height:I
  #44 = Class              #61            // io/github/alexarchambault/windowsansi/WindowsAnsi
  #45 = Utf8               io/github/alexarchambault/windowsansi/WindowsAnsi$Size
  #46 = NameAndType        #21:#22        // "<init>":(II)V
  #47 = NameAndType        #62:#63        // getClass:()Ljava/lang/Class;
  #48 = Utf8               java/lang/Object
  #49 = Class              #64            // java/lang/Integer
  #50 = NameAndType        #65:#66        // valueOf:(I)Ljava/lang/Integer;
  #51 = Class              #67            // java/util/Objects
  #52 = NameAndType        #68:#69        // hash:([Ljava/lang/Object;)I
  #53 = Utf8               java/lang/StringBuilder
  #54 = Utf8               Size{width=
  #55 = NameAndType        #70:#71        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #56 = NameAndType        #70:#72        // append:(I)Ljava/lang/StringBuilder;
  #57 = Utf8               , height=
  #58 = NameAndType        #70:#73        // append:(C)Ljava/lang/StringBuilder;
  #59 = NameAndType        #37:#38        // toString:()Ljava/lang/String;
  #60 = Utf8               ()V
  #61 = Utf8               io/github/alexarchambault/windowsansi/WindowsAnsi
  #62 = Utf8               getClass
  #63 = Utf8               ()Ljava/lang/Class;
  #64 = Utf8               java/lang/Integer
  #65 = Utf8               valueOf
  #66 = Utf8               (I)Ljava/lang/Integer;
  #67 = Utf8               java/util/Objects
  #68 = Utf8               hash
  #69 = Utf8               ([Ljava/lang/Object;)I
  #70 = Utf8               append
  #71 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #72 = Utf8               (I)Ljava/lang/StringBuilder;
  #73 = Utf8               (C)Ljava/lang/StringBuilder;
{
  private final int width;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int height;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  io.github.alexarchambault.windowsansi.WindowsAnsi$Size(int, int);
    descriptor: (II)V
    flags: (0x0000)
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: iload_1
         6: putfield      #2                  // Field width:I
         9: aload_0
        10: iload_2
        11: putfield      #3                  // Field height:I
        14: return
      LineNumberTable:
        line 43: 0
        line 44: 4
        line 45: 9
        line 46: 14

  public static io.github.alexarchambault.windowsansi.WindowsAnsi$Size of(int, int);
    descriptor: (II)Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #4                  // class io/github/alexarchambault/windowsansi/WindowsAnsi$Size
         3: dup
         4: iload_0
         5: iload_1
         6: invokespecial #5                  // Method "<init>":(II)V
         9: areturn
      LineNumberTable:
        line 49: 0

  public int getHeight();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field height:I
         4: ireturn
      LineNumberTable:
        line 56: 0

  public int getWidth();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field width:I
         4: ireturn
      LineNumberTable:
        line 60: 0

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: ifnull        22
        11: aload_0
        12: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
        15: aload_1
        16: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
        19: if_acmpeq     24
        22: iconst_0
        23: ireturn
        24: aload_1
        25: checkcast     #4                  // class io/github/alexarchambault/windowsansi/WindowsAnsi$Size
        28: astore_2
        29: aload_0
        30: getfield      #2                  // Field width:I
        33: aload_2
        34: getfield      #2                  // Field width:I
        37: if_icmpne     55
        40: aload_0
        41: getfield      #3                  // Field height:I
        44: aload_2
        45: getfield      #3                  // Field height:I
        48: if_icmpne     55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: ireturn
      LineNumberTable:
        line 65: 0
        line 66: 7
        line 67: 24
        line 68: 29
      StackMapTable: number_of_entries = 5
        frame_type = 7 /* same */
        frame_type = 14 /* same */
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ class io/github/alexarchambault/windowsansi/WindowsAnsi$Size ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: iconst_2
         1: anewarray     #7                  // class java/lang/Object
         4: dup
         5: iconst_0
         6: aload_0
         7: getfield      #2                  // Field width:I
        10: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        13: aastore
        14: dup
        15: iconst_1
        16: aload_0
        17: getfield      #3                  // Field height:I
        20: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        23: aastore
        24: invokestatic  #9                  // Method java/util/Objects.hash:([Ljava/lang/Object;)I
        27: ireturn
      LineNumberTable:
        line 74: 0

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: new           #10                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
         7: ldc           #12                 // String Size{width=
         9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        12: aload_0
        13: getfield      #2                  // Field width:I
        16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        19: ldc           #15                 // String , height=
        21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: aload_0
        25: getfield      #3                  // Field height:I
        28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        31: bipush        125
        33: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        36: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        39: areturn
      LineNumberTable:
        line 79: 0
}
SourceFile: "WindowsAnsi.java"
InnerClasses:
  public static final #26= #4 of #44;     // Size=class io/github/alexarchambault/windowsansi/WindowsAnsi$Size of class io/github/alexarchambault/windowsansi/WindowsAnsi
