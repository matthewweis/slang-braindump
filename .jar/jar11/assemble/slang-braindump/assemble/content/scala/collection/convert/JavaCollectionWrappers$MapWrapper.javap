Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/JavaCollectionWrappers$MapWrapper.class
  Last modified May 29, 2022; size 2330 bytes
  SHA-256 checksum 4ca84d19c71ec20b88d2657939d2499b88bfb876dc4b9b79154333f96a824f09
  Compiled from "JavaCollectionWrappers.scala"
public class scala.collection.convert.JavaCollectionWrappers$MapWrapper<K extends java.lang.Object, V extends java.lang.Object> extends java.util.AbstractMap<K, V> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/JavaCollectionWrappers$MapWrapper
  super_class: #5                         // java/util/AbstractMap
  interfaces: 1, fields: 2, methods: 5, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/convert/JavaCollectionWrappers$MapWrapper
   #2 = Class              #1             // scala/collection/convert/JavaCollectionWrappers$MapWrapper
   #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractMap<TK;TV;>;Ljava/io/Serializable;
   #4 = Utf8               java/util/AbstractMap
   #5 = Class              #4             // java/util/AbstractMap
   #6 = Utf8               java/io/Serializable
   #7 = Class              #6             // java/io/Serializable
   #8 = Utf8               JavaCollectionWrappers.scala
   #9 = Utf8               java/util/Map$Entry
  #10 = Class              #9             // java/util/Map$Entry
  #11 = Utf8               java/util/Map
  #12 = Class              #11            // java/util/Map
  #13 = Utf8               Entry
  #14 = Utf8               scala/collection/convert/JavaCollectionWrappers
  #15 = Class              #14            // scala/collection/convert/JavaCollectionWrappers
  #16 = Utf8               MapWrapper
  #17 = Utf8               scala/collection/convert/JavaCollectionWrappers$MapWrapper$$anon$2
  #18 = Class              #17            // scala/collection/convert/JavaCollectionWrappers$MapWrapper$$anon$2
  #19 = Utf8               serialVersionUID
  #20 = Utf8               J
  #21 = Long               3l
  #23 = Utf8               scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying
  #24 = Utf8               Lscala/collection/Map;
  #25 = Utf8               Lscala/collection/Map<TK;TV;>;
  #26 = Utf8               size
  #27 = Utf8               ()I
  #28 = NameAndType        #23:#24        // scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying:Lscala/collection/Map;
  #29 = Fieldref           #2.#28         // scala/collection/convert/JavaCollectionWrappers$MapWrapper.scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying:Lscala/collection/Map;
  #30 = Utf8               scala/collection/Map
  #31 = Class              #30            // scala/collection/Map
  #32 = NameAndType        #26:#27        // size:()I
  #33 = InterfaceMethodref #31.#32        // scala/collection/Map.size:()I
  #34 = Utf8               this
  #35 = Utf8               Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;
  #36 = Utf8               get
  #37 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #38 = Utf8               (Ljava/lang/Object;)TV;
  #39 = Utf8               key
  #40 = Utf8               java/lang/ClassCastException
  #41 = Class              #40            // java/lang/ClassCastException
  #42 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #43 = NameAndType        #36:#42        // get:(Ljava/lang/Object;)Lscala/Option;
  #44 = InterfaceMethodref #31.#43        // scala/collection/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #45 = Utf8               scala/None$
  #46 = Class              #45            // scala/None$
  #47 = Utf8               MODULE$
  #48 = Utf8               Lscala/None$;
  #49 = NameAndType        #47:#48        // MODULE$:Lscala/None$;
  #50 = Fieldref           #46.#49        // scala/None$.MODULE$:Lscala/None$;
  #51 = Utf8               java/lang/Object
  #52 = Class              #51            // java/lang/Object
  #53 = Utf8               equals
  #54 = Utf8               (Ljava/lang/Object;)Z
  #55 = NameAndType        #53:#54        // equals:(Ljava/lang/Object;)Z
  #56 = Methodref          #52.#55        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #57 = Utf8               scala/Some
  #58 = Class              #57            // scala/Some
  #59 = Utf8               value
  #60 = Utf8               ()Ljava/lang/Object;
  #61 = NameAndType        #59:#60        // value:()Ljava/lang/Object;
  #62 = Methodref          #58.#61        // scala/Some.value:()Ljava/lang/Object;
  #63 = Utf8               scala/MatchError
  #64 = Class              #63            // scala/MatchError
  #65 = Utf8               <init>
  #66 = Utf8               (Ljava/lang/Object;)V
  #67 = NameAndType        #65:#66        // "<init>":(Ljava/lang/Object;)V
  #68 = Methodref          #64.#67        // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #69 = Utf8               Ljava/lang/Object;
  #70 = Utf8               scala/Option
  #71 = Class              #70            // scala/Option
  #72 = Utf8               entrySet
  #73 = Utf8               ()Ljava/util/Set;
  #74 = Utf8               ()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;
  #75 = Utf8               (Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;)V
  #76 = NameAndType        #65:#75        // "<init>":(Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;)V
  #77 = Methodref          #18.#76        // scala/collection/convert/JavaCollectionWrappers$MapWrapper$$anon$2."<init>":(Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;)V
  #78 = Utf8               containsKey
  #79 = Utf8               contains
  #80 = NameAndType        #79:#54        // contains:(Ljava/lang/Object;)Z
  #81 = InterfaceMethodref #31.#80        // scala/collection/Map.contains:(Ljava/lang/Object;)Z
  #82 = Utf8               (Lscala/collection/Map;)V
  #83 = Utf8               (Lscala/collection/Map<TK;TV;>;)V
  #84 = Utf8               underlying
  #85 = Utf8               ()V
  #86 = NameAndType        #65:#85        // "<init>":()V
  #87 = Methodref          #5.#86         // java/util/AbstractMap."<init>":()V
  #88 = Utf8               ConstantValue
  #89 = Utf8               Signature
  #90 = Utf8               Code
  #91 = Utf8               LineNumberTable
  #92 = Utf8               LocalVariableTable
  #93 = Utf8               StackMapTable
  #94 = Utf8               MethodParameters
  #95 = Utf8               InnerClasses
  #96 = Utf8               SourceFile
  #97 = Utf8               ScalaInlineInfo
  #98 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  public final scala.collection.Map<K, V> scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying;
    descriptor: Lscala/collection/Map;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Signature: #25                          // Lscala/collection/Map<TK;TV;>;

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying:Lscala/collection/Map;
         4: invokeinterface #33,  1           // InterfaceMethod scala/collection/Map.size:()I
         9: ireturn
      LineNumberTable:
        line 218: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;

  public V get(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: getfield      #29                 // Field scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying:Lscala/collection/Map;
         4: aload_1
         5: invokeinterface #44,  2           // InterfaceMethod scala/collection/Map.get:(Ljava/lang/Object;)Lscala/Option;
        10: astore_3
        11: getstatic     #50                 // Field scala/None$.MODULE$:Lscala/None$;
        14: aload_3
        15: invokevirtual #56                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        18: ifeq          26
        21: aconst_null
        22: astore_2
        23: goto          53
        26: aload_3
        27: instanceof    #58                 // class scala/Some
        30: ifeq          44
        33: aload_3
        34: checkcast     #58                 // class scala/Some
        37: invokevirtual #62                 // Method scala/Some.value:()Ljava/lang/Object;
        40: astore_2
        41: goto          53
        44: new           #64                 // class scala/MatchError
        47: dup
        48: aload_3
        49: invokespecial #68                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        52: athrow
        53: aload_2
        54: areturn
        55: pop
        56: aconst_null
        57: areturn
      Exception table:
         from    to  target type
             0    54    55   Class java/lang/ClassCastException
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 26
          locals = [ top, class scala/Option ]
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/convert/JavaCollectionWrappers$MapWrapper, class java/lang/Object, class java/lang/Object, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/convert/JavaCollectionWrappers$MapWrapper, class java/lang/Object ]
          stack = [ class java/lang/ClassCastException ]
      LineNumberTable:
        line 221: 0
        line 222: 11
        line 223: 26
        line 221: 44
        line 226: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;
            0      58     1   key   Ljava/lang/Object;
    Signature: #38                          // (Ljava/lang/Object;)TV;
    MethodParameters:
      Name                           Flags
      key                            final

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #18                 // class scala/collection/convert/JavaCollectionWrappers$MapWrapper$$anon$2
         3: dup
         4: aload_0
         5: invokespecial #77                 // Method scala/collection/convert/JavaCollectionWrappers$MapWrapper$$anon$2."<init>":(Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;)V
         8: areturn
      LineNumberTable:
        line 229: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;
    Signature: #74                          // ()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;

  public boolean containsKey(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #29                 // Field scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying:Lscala/collection/Map;
         4: aload_1
         5: invokeinterface #81,  2           // InterfaceMethod scala/collection/Map.contains:(Ljava/lang/Object;)Z
        10: ireturn
        11: pop
        12: iconst_0
        13: ireturn
      Exception table:
         from    to  target type
             0    10    11   Class java/lang/ClassCastException
      StackMapTable: number_of_entries = 1
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class java/lang/ClassCastException ]
      LineNumberTable:
        line 283: 0
        line 285: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;
            0      14     1   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.collection.convert.JavaCollectionWrappers$MapWrapper(scala.collection.Map<K, V>);
    descriptor: (Lscala/collection/Map;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #29                 // Field scala$collection$convert$JavaCollectionWrappers$MapWrapper$$underlying:Lscala/collection/Map;
         5: aload_0
         6: invokespecial #87                 // Method java/util/AbstractMap."<init>":()V
         9: return
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/JavaCollectionWrappers$MapWrapper;
            0      10     1 underlying   Lscala/collection/Map;
    Signature: #83                          // (Lscala/collection/Map<TK;TV;>;)V
    MethodParameters:
      Name                           Flags
      underlying                     final
}
InnerClasses:
  public static #13= #10 of #12;          // Entry=class java/util/Map$Entry of class java/util/Map
  public static #16= #2 of #15;           // MapWrapper=class scala/collection/convert/JavaCollectionWrappers$MapWrapper of class scala/collection/convert/JavaCollectionWrappers
  public final #18;                       // class scala/collection/convert/JavaCollectionWrappers$MapWrapper$$anon$2
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractMap<TK;TV;>;Ljava/io/Serializable;
SourceFile: "JavaCollectionWrappers.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 41 00 52 00 00 4E 00 36 00 00 48
   00 49 00 00 24 00 25 00 00 1A 00 1B 00
  Scala: length = 0x0 (unknown attribute)

