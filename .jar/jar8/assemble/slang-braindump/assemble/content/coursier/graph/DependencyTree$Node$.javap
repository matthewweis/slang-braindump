Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/graph/DependencyTree$Node$.class
  Last modified May 29, 2022; size 2800 bytes
  SHA-256 checksum a4ca0e1f12b1a8ccd739e5f2916395669b80c835a7df3fd4ead518a8be8b4609
  Compiled from "DependencyTree.scala"
public class coursier.graph.DependencyTree$Node$ extends scala.runtime.AbstractFunction4<coursier.core.Dependency, java.lang.Object, coursier.core.Resolution, java.lang.Object, coursier.graph.DependencyTree$Node> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/graph/DependencyTree$Node$
  super_class: #5                         // scala/runtime/AbstractFunction4
  interfaces: 1, fields: 1, methods: 7, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/DependencyTree$Node$
    #2 = Class              #1            // coursier/graph/DependencyTree$Node$
    #3 = Utf8               Lscala/runtime/AbstractFunction4<Lcoursier/core/Dependency;Ljava/lang/Object;Lcoursier/core/Resolution;Ljava/lang/Object;Lcoursier/graph/DependencyTree$Node;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractFunction4
    #5 = Class              #4            // scala/runtime/AbstractFunction4
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               DependencyTree.scala
    #9 = Utf8               coursier/graph/DependencyTree$Node
   #10 = Class              #9            // coursier/graph/DependencyTree$Node
   #11 = Utf8               coursier/graph/DependencyTree
   #12 = Class              #11           // coursier/graph/DependencyTree
   #13 = Utf8               Node
   #14 = Utf8
   #15 = Utf8               MODULE$
   #16 = Utf8               Lcoursier/graph/DependencyTree$Node$;
   #17 = Utf8               <clinit>
   #18 = Utf8               ()V
   #19 = Utf8               <init>
   #20 = NameAndType        #19:#18       // "<init>":()V
   #21 = Methodref          #2.#20        // coursier/graph/DependencyTree$Node$."<init>":()V
   #22 = NameAndType        #15:#16       // MODULE$:Lcoursier/graph/DependencyTree$Node$;
   #23 = Fieldref           #2.#22        // coursier/graph/DependencyTree$Node$.MODULE$:Lcoursier/graph/DependencyTree$Node$;
   #24 = Utf8               toString
   #25 = Utf8               ()Ljava/lang/String;
   #26 = String             #13           // Node
   #27 = Utf8               this
   #28 = Utf8               apply
   #29 = Utf8               (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)Lcoursier/graph/DependencyTree$Node;
   #30 = Utf8               dependency
   #31 = Utf8               excluded
   #32 = Utf8               resolution
   #33 = Utf8               withExclusions
   #34 = Utf8               (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
   #35 = NameAndType        #19:#34       // "<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
   #36 = Methodref          #10.#35       // coursier/graph/DependencyTree$Node."<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
   #37 = Utf8               Lcoursier/core/Dependency;
   #38 = Utf8               Z
   #39 = Utf8               Lcoursier/core/Resolution;
   #40 = Utf8               unapply
   #41 = Utf8               (Lcoursier/graph/DependencyTree$Node;)Lscala/Option;
   #42 = Utf8               (Lcoursier/graph/DependencyTree$Node;)Lscala/Option<Lscala/Tuple4<Lcoursier/core/Dependency;Ljava/lang/Object;Lcoursier/core/Resolution;Ljava/lang/Object;>;>;
   #43 = Utf8               x$0
   #44 = Utf8               scala/None$
   #45 = Class              #44           // scala/None$
   #46 = Utf8               Lscala/None$;
   #47 = NameAndType        #15:#46       // MODULE$:Lscala/None$;
   #48 = Fieldref           #45.#47       // scala/None$.MODULE$:Lscala/None$;
   #49 = Utf8               scala/Some
   #50 = Class              #49           // scala/Some
   #51 = Utf8               scala/Tuple4
   #52 = Class              #51           // scala/Tuple4
   #53 = Utf8               ()Lcoursier/core/Dependency;
   #54 = NameAndType        #30:#53       // dependency:()Lcoursier/core/Dependency;
   #55 = Methodref          #10.#54       // coursier/graph/DependencyTree$Node.dependency:()Lcoursier/core/Dependency;
   #56 = Utf8               ()Z
   #57 = NameAndType        #31:#56       // excluded:()Z
   #58 = Methodref          #10.#57       // coursier/graph/DependencyTree$Node.excluded:()Z
   #59 = Utf8               scala/runtime/BoxesRunTime
   #60 = Class              #59           // scala/runtime/BoxesRunTime
   #61 = Utf8               boxToBoolean
   #62 = Utf8               (Z)Ljava/lang/Boolean;
   #63 = NameAndType        #61:#62       // boxToBoolean:(Z)Ljava/lang/Boolean;
   #64 = Methodref          #60.#63       // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #65 = Utf8               ()Lcoursier/core/Resolution;
   #66 = NameAndType        #32:#65       // resolution:()Lcoursier/core/Resolution;
   #67 = Methodref          #10.#66       // coursier/graph/DependencyTree$Node.resolution:()Lcoursier/core/Resolution;
   #68 = NameAndType        #33:#56       // withExclusions:()Z
   #69 = Methodref          #10.#68       // coursier/graph/DependencyTree$Node.withExclusions:()Z
   #70 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #71 = NameAndType        #19:#70       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #72 = Methodref          #52.#71       // scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #73 = Utf8               (Ljava/lang/Object;)V
   #74 = NameAndType        #19:#73       // "<init>":(Ljava/lang/Object;)V
   #75 = Methodref          #50.#74       // scala/Some."<init>":(Ljava/lang/Object;)V
   #76 = Utf8               scala/Option
   #77 = Class              #76           // scala/Option
   #78 = Utf8               Lcoursier/graph/DependencyTree$Node;
   #79 = Utf8               writeReplace
   #80 = Utf8               ()Ljava/lang/Object;
   #81 = Utf8               scala/runtime/ModuleSerializationProxy
   #82 = Class              #81           // scala/runtime/ModuleSerializationProxy
   #83 = Utf8               (Ljava/lang/Class;)V
   #84 = NameAndType        #19:#83       // "<init>":(Ljava/lang/Class;)V
   #85 = Methodref          #82.#84       // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
   #86 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #87 = Utf8               v1
   #88 = Utf8               v2
   #89 = Utf8               v3
   #90 = Utf8               v4
   #91 = Utf8               coursier/core/Dependency
   #92 = Class              #91           // coursier/core/Dependency
   #93 = Utf8               unboxToBoolean
   #94 = Utf8               (Ljava/lang/Object;)Z
   #95 = NameAndType        #93:#94       // unboxToBoolean:(Ljava/lang/Object;)Z
   #96 = Methodref          #60.#95       // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   #97 = Utf8               coursier/core/Resolution
   #98 = Class              #97           // coursier/core/Resolution
   #99 = NameAndType        #28:#29       // apply:(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)Lcoursier/graph/DependencyTree$Node;
  #100 = Methodref          #2.#99        // coursier/graph/DependencyTree$Node$.apply:(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)Lcoursier/graph/DependencyTree$Node;
  #101 = Utf8               Ljava/lang/Object;
  #102 = Methodref          #5.#20        // scala/runtime/AbstractFunction4."<init>":()V
  #103 = Utf8               Code
  #104 = Utf8               LineNumberTable
  #105 = Utf8               LocalVariableTable
  #106 = Utf8               MethodParameters
  #107 = Utf8               StackMapTable
  #108 = Utf8               Signature
  #109 = Utf8               InnerClasses
  #110 = Utf8               SourceFile
  #111 = Utf8               ScalaInlineInfo
  #112 = Utf8               Scala
{
  public static final coursier.graph.DependencyTree$Node$ MODULE$;
    descriptor: Lcoursier/graph/DependencyTree$Node$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/graph/DependencyTree$Node$
         3: dup
         4: invokespecial #21                 // Method "<init>":()V
         7: putstatic     #23                 // Field MODULE$:Lcoursier/graph/DependencyTree$Node$;
        10: return
      LineNumberTable:
        line 45: 0

  public final java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #26                 // String Node
         2: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/graph/DependencyTree$Node$;

  public coursier.graph.DependencyTree$Node apply(coursier.core.Dependency, boolean, coursier.core.Resolution, boolean);
    descriptor: (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)Lcoursier/graph/DependencyTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #10                 // class coursier/graph/DependencyTree$Node
         3: dup
         4: aload_1
         5: iload_2
         6: aload_3
         7: iload         4
         9: invokespecial #36                 // Method coursier/graph/DependencyTree$Node."<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
        12: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/graph/DependencyTree$Node$;
            0      13     1 dependency   Lcoursier/core/Dependency;
            0      13     2 excluded   Z
            0      13     3 resolution   Lcoursier/core/Resolution;
            0      13     4 withExclusions   Z
    MethodParameters:
      Name                           Flags
      dependency                     final
      excluded                       final
      resolution                     final
      withExclusions                 final

  public scala.Option<scala.Tuple4<coursier.core.Dependency, java.lang.Object, coursier.core.Resolution, java.lang.Object>> unapply(coursier.graph.DependencyTree$Node);
    descriptor: (Lcoursier/graph/DependencyTree$Node;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #48                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          46
        10: new           #50                 // class scala/Some
        13: dup
        14: new           #52                 // class scala/Tuple4
        17: dup
        18: aload_1
        19: invokevirtual #55                 // Method coursier/graph/DependencyTree$Node.dependency:()Lcoursier/core/Dependency;
        22: aload_1
        23: invokevirtual #58                 // Method coursier/graph/DependencyTree$Node.excluded:()Z
        26: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        29: aload_1
        30: invokevirtual #67                 // Method coursier/graph/DependencyTree$Node.resolution:()Lcoursier/core/Resolution;
        33: aload_1
        34: invokevirtual #69                 // Method coursier/graph/DependencyTree$Node.withExclusions:()Z
        37: invokestatic  #64                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        40: invokespecial #72                 // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        43: invokespecial #75                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 99 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lcoursier/graph/DependencyTree$Node$;
            0      47     1   x$0   Lcoursier/graph/DependencyTree$Node;
    Signature: #42                          // (Lcoursier/graph/DependencyTree$Node;)Lscala/Option<Lscala/Tuple4<Lcoursier/core/Dependency;Ljava/lang/Object;Lcoursier/core/Resolution;Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #82                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/graph/DependencyTree$Node$
         6: invokespecial #85                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/graph/DependencyTree$Node$;

  public java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: checkcast     #92                 // class coursier/core/Dependency
         5: aload_2
         6: invokestatic  #96                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         9: aload_3
        10: checkcast     #98                 // class coursier/core/Resolution
        13: aload         4
        15: invokestatic  #96                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        18: invokevirtual #100                // Method apply:(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)Lcoursier/graph/DependencyTree$Node;
        21: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lcoursier/graph/DependencyTree$Node$;
            0      22     1    v1   Ljava/lang/Object;
            0      22     2    v2   Ljava/lang/Object;
            0      22     3    v3   Ljava/lang/Object;
            0      22     4    v4   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final
      v2                             final
      v3                             final
      v4                             final

  public coursier.graph.DependencyTree$Node$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #102                // Method scala/runtime/AbstractFunction4."<init>":()V
         4: return
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node$;
}
InnerClasses:
  public static #13= #10 of #12;          // Node=class coursier/graph/DependencyTree$Node of class coursier/graph/DependencyTree
  public static #14= #2 of #12;           // =class coursier/graph/DependencyTree$Node$ of class coursier/graph/DependencyTree
Signature: #3                           // Lscala/runtime/AbstractFunction4<Lcoursier/core/Dependency;Ljava/lang/Object;Lcoursier/core/Resolution;Ljava/lang/Object;Lcoursier/graph/DependencyTree$Node;>;Ljava/io/Serializable;
SourceFile: "DependencyTree.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 13 00 12 01 00 1C 00 1D 01 00 1C
   00 56 01 00 18 00 19 01 00 28 00 29 01 00 4F 00
   50 01
  Scala: length = 0x0 (unknown attribute)

