Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/graph/Conflict.class
  Last modified May 29, 2022; size 9692 bytes
  SHA-256 checksum 59a5b7ee0c2b58c12a63465a8e71647f1ce017ea2b4b3ae3b55c067cc26ad916
  Compiled from "Conflict.scala"
public final class coursier.graph.Conflict implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/graph/Conflict
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 6, methods: 32, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/Conflict
    #2 = Class              #1            // coursier/graph/Conflict
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Conflict.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\tUb\u0001\u0002 @\u0005\u0011C\u0001B\u0017\u0001\u0003\u0006\u0004%\ta\u0017\u0005\tE\u0002\u0011\t\u0011)A\u00059\"A1\r\u0001BC\u0002\u0013\u0005A\r\u0003\u0005n\u0001\t\u0005\t\u0015!\u0003f\u0011!q\u0007A!b\u0001\n\u0003!\u0007\u0002C8\u0001\u0005\u0003\u0005\u000b\u0011B3\t\u0011A\u0004!Q1A\u0005\u0002ED\u0001\"\u001e\u0001\u0003\u0002\u0003\u0006IA\u001d\u0005\tm\u0002\u0011)\u0019!C\u00017\"Aq\u000f\u0001B\u0001B\u0003%A\f\u0003\u0005y\u0001\t\u0015\r\u0011\"\u0001e\u0011!I\bA!A!\u0002\u0013)\u0007\"\u0002>\u0001\t\u0003Y\bBBA\u0005\u0001\u0011\u0005A\rC\u0004\u0002\f\u0001!\t!!\u0004\t\u000f\u0005E\u0001\u0001\"\u0001\u0002\u0014!9\u0011q\u0003\u0001\u0005\u0002\u0005e\u0001bBA\u000f\u0001\u0011\u0005\u0011q\u0004\u0005\b\u0003G\u0001A\u0011AA\u0013\u0011\u001d\tI\u0003\u0001C\u0001\u0003WAq!a\f\u0001\t\u0003\n\t\u0004C\u0004\u0002B\u0001!\t%a\u0011\t\u000f\u0005=\u0003\u0001\"\u0011\u0002R!9\u0011Q\u000b\u0001\u0005B\u0005]\u0003bBA0\u0001\u0011%\u0011\u0011\r\u0005\b\u0003S\u0002A\u0011IA6\u0011\u001d\ti\u0007\u0001C!\u0003_Bq!!\u001d\u0001\t\u0003\n\u0019\bC\u0004\u0002z\u0001!\t%a\u001f\b\u000f\u0005}t\b#\u0001\u0002\u0002\u001a1ah\u0010E\u0001\u0003\u0007CaA_\u0010\u0005\u0002\u0005=\u0005bBAI?\u0011\u0005\u00111\u0013\u0005\n\u0003O|\u0012\u0013!C\u0001\u0003SD\u0011\"a@ #\u0003%\t!!;\t\u000f\t\u0005q\u0004\"\u0001\u0003\u0004!I!QB\u0010\u0012\u0002\u0013\u0005\u0011\u0011\u001e\u0005\n\u0005\u001fy\u0012\u0013!C\u0001\u0003SDqA!\u0001 \t\u0003\u0011\tB\u0002\u0004\u0002 ~\u0011\u0011\u0011\u0015\u0005\u000b\u0003GC#Q1A\u0005\u0002\u0005\u0015\u0006BCAWQ\t\u0005\t\u0015!\u0003\u0002(\"1!\u0010\u000bC\u0001\u0003_Cq!a-)\t\u0003\t)\f\u0003\u0004\u0002\n!\"\t\u0001\u001a\u0005\b\u0003oCC\u0011AA]\u0011\u001d\ty\u0003\u000bC!\u0003cAq!!\u0011)\t\u0003\ni\fC\u0004\u0002P!\"\t%!1\t\u000f\u0005U\u0003\u0006\"\u0011\u0002X!9\u0011q\f\u0015\u0005\n\u0005\u0015\u0007bBA5Q\u0011\u0005\u00131\u000e\u0005\b\u0003[BC\u0011IA8\u0011\u001d\t\t\b\u000bC!\u0003\u001bDq!!\u001f)\t\u0003\n\tnB\u0004\u0003 }A\tA!\t\u0007\u000f\u0005}u\u0004#\u0001\u0003$!1!0\u000fC\u0001\u0005KAqA!\u0001:\t\u0003\u00119\u0003C\u0005\u0003,e\n\t\u0011\"\u0003\u0003.!I!1F\u0010\u0002\u0002\u0013%!Q\u0006\u0002\t\u0007>tg\r\\5di*\u0011\u0001)Q\u0001\u0006OJ\f\u0007\u000f\u001b\u0006\u0002\u0005\u0006A1m\\;sg&,\'o\u0001\u0001\u0014\t\u0001)5J\u0014\t\u0003\r&k\u0011a\u0012\u0006\u0002\u0011\u0006)1oY1mC&\u0011!j\u0012\u0002\u0007\u0003:L(+\u001a4\u0011\u0005\u0019c\u0015BA\'H\u0005\u001d\u0001&o\u001c3vGR\u0004\"aT,\u000f\u0005A+fBA)U\u001b\u0005\u0011&BA*D\u0003\u0019a$o\\8u}%\t\u0001*\u0003\u0002W\u000f\u00069\u0001/Y2lC\u001e,\u0017B\u0001-Z\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\t1v)\u0001\u0004n_\u0012,H.Z\u000b\u00029B\u0011Q\fY\u0007\u0002=*\u0011q,Q\u0001\u0005G>\u0014X-\u0003\u0002b=\n1Qj\u001c3vY\u0016\fq!\\8ek2,\u0007%A\u0004wKJ\u001c\u0018n\u001c8\u0016\u0003\u0015\u0004\"A\u001a6\u000f\u0005\u001dD\u0007CA)H\u0013\tIw)\u0001\u0004Qe\u0016$WMZ\u0005\u0003W2\u0014aa\u0015;sS:<\'BA5H\u0003!1XM]:j_:\u0004\u0013!D<b]R,GMV3sg&|g.\u0001\bxC:$X\r\u001a,feNLwN\u001c\u0011\u0002\u0017]\f7/\u0012=dYV$W\rZ\u000b\u0002eB\u0011ai]\u0005\u0003i\u001e\u0013qAQ8pY\u0016\fg.\u0001\u0007xCN,\u0005p\u00197vI\u0016$\u0007%\u0001\beKB,g\u000eZ3f\u001b>$W\u000f\\3\u0002\u001f\u0011,\u0007/\u001a8eK\u0016lu\u000eZ;mK\u0002\nq\u0002Z3qK:$W-\u001a,feNLwN\\\u0001\u0011I\u0016\u0004XM\u001c3fKZ+\'o]5p]\u0002\na\u0001P5oSRtDc\u0003?\u007f\u007f\u0006\u0005\u00111AA\u0003\u0003\u000f\u0001\"! \u0001\u000e\u0003}BQAW\u0007A\u0002qCQaY\u0007A\u0002\u0015DQA\\\u0007A\u0002\u0015DQ\u0001]\u0007A\u0002IDQA^\u0007A\u0002qCQ\u0001_\u0007A\u0002\u0015\fAA]3qe\u0006Qq/\u001b;i\u001b>$W\u000f\\3\u0015\u0007q\fy\u0001C\u0003[\u001f\u0001\u0007A,A\u0006xSRDg+\u001a:tS>tGc\u0001?\u0002\u0016!)1\r\u0005a\u0001K\u0006\tr/\u001b;i/\u0006tG/\u001a3WKJ\u001c\u0018n\u001c8\u0015\u0007q\fY\u0002C\u0003o#\u0001\u0007Q-A\bxSRDw+Y:Fq\u000edW\u000fZ3e)\ra\u0018\u0011\u0005\u0005\u0006aJ\u0001\rA]\u0001\u0013o&$\b\u000eR3qK:$W-Z\'pIVdW\rF\u0002}\u0003OAQA^\nA\u0002q\u000b1c^5uQ\u0012+\u0007/\u001a8eK\u00164VM]:j_:$2\u0001`A\u0017\u0011\u0015AH\u00031\u0001f\u0003!!xn\u0015;sS:<GCAA\u001a!\u0011\t)$a\u0010\u000e\u0005\u0005]\"\u0002BA\u001d\u0003w\tA\u0001\\1oO*\u0011\u0011QH\u0001\u0005U\u00064\u0018-C\u0002l\u0003o\t\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0004e\u0006\u0015\u0003bBA$-\u0001\u0007\u0011\u0011J\u0001\u0004_\nT\u0007c\u0001$\u0002L%\u0019\u0011QJ$\u0003\u0007\u0005s\u00170\u0001\u0004fcV\fGn\u001d\u000b\u0004e\u0006M\u0003bBA$/\u0001\u0007\u0011\u0011J\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u0011\u0011\f\t\u0004\r\u0006m\u0013bAA/\u000f\n\u0019\u0011J\u001c;\u0002\u000bQ,\b\u000f\\3\u0016\u0005\u0005\r\u0004#\u0003$\u0002fq+WM\u001d/f\u0013\r\t9g\u0012\u0002\u0007)V\u0004H.\u001a\u001c\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\t\u0019$\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0006\u0002\u0002Z\u0005q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BA%\u0003kBq!a\u001e\u001d\u0001\u0004\tI&A\u0001o\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005M\u0012Q\u0010\u0005\b\u0003oj\u0002\u0019AA-\u0003!\u0019uN\u001c4mS\u000e$\bCA? \'\u0011yR)!\"\u0011\t\u0005\u001d\u0015QR\u0007\u0003\u0003\u0013SA!a#\u0002<\u0005\u0011\u0011n\\\u0005\u00041\u0006%ECAAA\u0003)\u0019wN\u001c4mS\u000e$X\r\u001a\u000b\t\u0003+\u000b).a8\u0002dB)q*a&\u0002\u001c&\u0019\u0011\u0011T-\u0003\u0007M+\u0017\u000fE\u0002\u0002\u001e\"j\u0011a\b\u0002\u000b\u0007>tg\r\\5di\u0016$7\u0003\u0002\u0015F\u0017:\u000bA\u0001\u001e:fKV\u0011\u0011q\u0015\t\u0004{\u0006%\u0016bAAV\u007f\t\t\"+\u001a<feN,Wj\u001c3vY\u0016$&/Z3\u0002\u000bQ\u0014X-\u001a\u0011\u0015\t\u0005m\u0015\u0011\u0017\u0005\b\u0003G[\u0003\u0019AAT\u0003!\u0019wN\u001c4mS\u000e$X#\u0001?\u0002\u0011]LG\u000f\u001b+sK\u0016$B!a\'\u0002<\"9\u00111\u0015\u0018A\u0002\u0005\u001dFc\u0001:\u0002@\"9\u0011q\t\u0019A\u0002\u0005%Cc\u0001:\u0002D\"9\u0011qI\u0019A\u0002\u0005%SCAAd!\u00151\u0015\u0011ZAT\u0013\r\tYm\u0012\u0002\u0007)V\u0004H.Z\u0019\u0015\t\u0005%\u0013q\u001a\u0005\b\u0003o2\u0004\u0019AA-)\u0011\t\u0019$a5\t\u000f\u0005]t\u00071\u0001\u0002Z!9\u0011q[\u0011A\u0002\u0005e\u0017A\u0003:fg>dW\u000f^5p]B\u0019Q,a7\n\u0007\u0005ugL\u0001\u0006SKN|G.\u001e;j_:D\u0001\"!9\"!\u0003\u0005\rA]\u0001\u000fo&$\b.\u0012=dYV\u001c\u0018n\u001c8t\u0011!\t)/\tI\u0001\u0002\u0004\u0011\u0018AB:f[Z+\'/\u0001\u000bd_:4G.[2uK\u0012$C-\u001a4bk2$HEM\u000b\u0003\u0003WT3A]AwW\t\ty\u000f\u0005\u0003\u0002r\u0006mXBAAz\u0015\u0011\t)0a>\u0002\u0013Ut7\r[3dW\u0016$\'bAA}\u000f\u0006Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005u\u00181\u001f\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017\u0001F2p]\u001ad\u0017n\u0019;fI\u0012\"WMZ1vYR$3\'A\u0003baBd\u0017\u0010\u0006\u0005\u0003\u0006\t\u001d!\u0011\u0002B\u0006!\u0011y\u0015q\u0013?\t\u000f\u0005]G\u00051\u0001\u0002Z\"A\u0011\u0011\u001d\u0013\u0011\u0002\u0003\u0007!\u000f\u0003\u0005\u0002f\u0012\u0002\n\u00111\u0001s\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012\u0012\u0014aD1qa2LH\u0005Z3gCVdG\u000fJ\u001a\u0015\u001bq\u0014\u0019B!\u0006\u0003\u0018\te!1\u0004B\u000f\u0011\u0015Qv\u00051\u0001]\u0011\u0015\u0019w\u00051\u0001f\u0011\u0015qw\u00051\u0001f\u0011\u0015\u0001x\u00051\u0001s\u0011\u00151x\u00051\u0001]\u0011\u0015Ax\u00051\u0001f\u0003)\u0019uN\u001c4mS\u000e$X\r\u001a\t\u0004\u0003;K4\u0003B\u001dF\u0003\u000b#\"A!\t\u0015\t\u0005m%\u0011\u0006\u0005\b\u0003G[\u0004\u0019AAT\u000319(/\u001b;f%\u0016\u0004H.Y2f)\t\u0011y\u0003\u0005\u0003\u00026\tE\u0012\u0002\u0002B\u001a\u0003o\u0011aa\u00142kK\u000e$\b
   #13 = Utf8               coursier/graph/Conflict$Conflicted
   #14 = Class              #13           // coursier/graph/Conflict$Conflicted
   #15 = Utf8               Conflicted
   #16 = Utf8               coursier/graph/Conflict$Conflicted$
   #17 = Class              #16           // coursier/graph/Conflict$Conflicted$
   #18 = Utf8
   #19 = Utf8               module
   #20 = Utf8               Lcoursier/core/Module;
   #21 = Utf8               version
   #22 = Utf8               Ljava/lang/String;
   #23 = Utf8               wantedVersion
   #24 = Utf8               wasExcluded
   #25 = Utf8               Z
   #26 = Utf8               dependeeModule
   #27 = Utf8               dependeeVersion
   #28 = Utf8               apply
   #29 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
   #30 = Utf8               coursier/graph/Conflict$
   #31 = Class              #30           // coursier/graph/Conflict$
   #32 = Utf8               MODULE$
   #33 = Utf8               Lcoursier/graph/Conflict$;
   #34 = NameAndType        #32:#33       // MODULE$:Lcoursier/graph/Conflict$;
   #35 = Fieldref           #31.#34       // coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
   #36 = NameAndType        #28:#29       // apply:(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
   #37 = Methodref          #31.#36       // coursier/graph/Conflict$.apply:(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
   #38 = Utf8               apply$default$3
   #39 = Utf8               ()Z
   #40 = NameAndType        #38:#39       // apply$default$3:()Z
   #41 = Methodref          #31.#40       // coursier/graph/Conflict$.apply$default$3:()Z
   #42 = Utf8               apply$default$2
   #43 = NameAndType        #42:#39       // apply$default$2:()Z
   #44 = Methodref          #31.#43       // coursier/graph/Conflict$.apply$default$2:()Z
   #45 = Utf8               (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #46 = Utf8               (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict;>;
   #47 = Utf8               resolution
   #48 = Utf8               withExclusions
   #49 = Utf8               semVer
   #50 = NameAndType        #28:#45       // apply:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #51 = Methodref          #31.#50       // coursier/graph/Conflict$.apply:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #52 = Utf8               conflicted$default$3
   #53 = NameAndType        #52:#39       // conflicted$default$3:()Z
   #54 = Methodref          #31.#53       // coursier/graph/Conflict$.conflicted$default$3:()Z
   #55 = Utf8               conflicted$default$2
   #56 = NameAndType        #55:#39       // conflicted$default$2:()Z
   #57 = Methodref          #31.#56       // coursier/graph/Conflict$.conflicted$default$2:()Z
   #58 = Utf8               conflicted
   #59 = Utf8               (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict$Conflicted;>;
   #60 = NameAndType        #58:#45       // conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #61 = Methodref          #31.#60       // coursier/graph/Conflict$.conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #62 = Utf8               productIterator
   #63 = Utf8               ()Lscala/collection/Iterator;
   #64 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #65 = Utf8               productIterator$
   #66 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #67 = NameAndType        #65:#66       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #68 = InterfaceMethodref #6.#67        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #69 = Utf8               this
   #70 = Utf8               Lcoursier/graph/Conflict;
   #71 = Utf8               productElementNames
   #72 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #73 = Utf8               productElementNames$
   #74 = NameAndType        #73:#66       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #75 = InterfaceMethodref #6.#74        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #76 = Utf8               ()Lcoursier/core/Module;
   #77 = NameAndType        #19:#20       // module:Lcoursier/core/Module;
   #78 = Fieldref           #2.#77        // coursier/graph/Conflict.module:Lcoursier/core/Module;
   #79 = Utf8               ()Ljava/lang/String;
   #80 = NameAndType        #21:#22       // version:Ljava/lang/String;
   #81 = Fieldref           #2.#80        // coursier/graph/Conflict.version:Ljava/lang/String;
   #82 = NameAndType        #23:#22       // wantedVersion:Ljava/lang/String;
   #83 = Fieldref           #2.#82        // coursier/graph/Conflict.wantedVersion:Ljava/lang/String;
   #84 = NameAndType        #24:#25       // wasExcluded:Z
   #85 = Fieldref           #2.#84        // coursier/graph/Conflict.wasExcluded:Z
   #86 = NameAndType        #26:#20       // dependeeModule:Lcoursier/core/Module;
   #87 = Fieldref           #2.#86        // coursier/graph/Conflict.dependeeModule:Lcoursier/core/Module;
   #88 = NameAndType        #27:#22       // dependeeVersion:Ljava/lang/String;
   #89 = Fieldref           #2.#88        // coursier/graph/Conflict.dependeeVersion:Ljava/lang/String;
   #90 = Utf8               repr
   #91 = Utf8               java/lang/StringBuilder
   #92 = Class              #91           // java/lang/StringBuilder
   #93 = Integer            25
   #94 = Utf8               <init>
   #95 = Utf8               (I)V
   #96 = NameAndType        #94:#95       // "<init>":(I)V
   #97 = Methodref          #92.#96       // java/lang/StringBuilder."<init>":(I)V
   #98 = NameAndType        #19:#76       // module:()Lcoursier/core/Module;
   #99 = Methodref          #2.#98        // coursier/graph/Conflict.module:()Lcoursier/core/Module;
  #100 = Utf8               append
  #101 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #102 = NameAndType        #100:#101     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #103 = Methodref          #92.#102      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #104 = Utf8               :
  #105 = String             #104          // :
  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #107 = NameAndType        #100:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #108 = Methodref          #92.#107      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #109 = NameAndType        #21:#79       // version:()Ljava/lang/String;
  #110 = Methodref          #2.#109       // coursier/graph/Conflict.version:()Ljava/lang/String;
  #111 = Utf8                selected, but
  #112 = String             #111          //  selected, but
  #113 = NameAndType        #26:#76       // dependeeModule:()Lcoursier/core/Module;
  #114 = Methodref          #2.#113       // coursier/graph/Conflict.dependeeModule:()Lcoursier/core/Module;
  #115 = NameAndType        #27:#79       // dependeeVersion:()Ljava/lang/String;
  #116 = Methodref          #2.#115       // coursier/graph/Conflict.dependeeVersion:()Ljava/lang/String;
  #117 = Utf8                wanted
  #118 = String             #117          //  wanted
  #119 = NameAndType        #23:#79       // wantedVersion:()Ljava/lang/String;
  #120 = Methodref          #2.#119       // coursier/graph/Conflict.wantedVersion:()Ljava/lang/String;
  #121 = Utf8               toString
  #122 = NameAndType        #121:#79      // toString:()Ljava/lang/String;
  #123 = Methodref          #92.#122      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #124 = Utf8               withModule
  #125 = Utf8               (Lcoursier/core/Module;)Lcoursier/graph/Conflict;
  #126 = NameAndType        #24:#39       // wasExcluded:()Z
  #127 = Methodref          #2.#126       // coursier/graph/Conflict.wasExcluded:()Z
  #128 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
  #129 = NameAndType        #94:#128      // "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
  #130 = Methodref          #2.#129       // coursier/graph/Conflict."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
  #131 = Utf8               withVersion
  #132 = Utf8               (Ljava/lang/String;)Lcoursier/graph/Conflict;
  #133 = Utf8               withWantedVersion
  #134 = Utf8               withWasExcluded
  #135 = Utf8               (Z)Lcoursier/graph/Conflict;
  #136 = Utf8               withDependeeModule
  #137 = Utf8               withDependeeVersion
  #138 = Utf8               Conflict(
  #139 = String             #138          // Conflict(
  #140 = Utf8               (Ljava/lang/String;)V
  #141 = NameAndType        #94:#140      // "<init>":(Ljava/lang/String;)V
  #142 = Methodref          #92.#141      // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #143 = Utf8               java/lang/String
  #144 = Class              #143          // java/lang/String
  #145 = Utf8               valueOf
  #146 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #147 = NameAndType        #145:#146     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #148 = Methodref          #144.#147     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #149 = Utf8               ,
  #150 = String             #149          // ,
  #151 = Utf8               (Z)Ljava/lang/String;
  #152 = NameAndType        #145:#151     // valueOf:(Z)Ljava/lang/String;
  #153 = Methodref          #144.#152     // java/lang/String.valueOf:(Z)Ljava/lang/String;
  #154 = Utf8               )
  #155 = String             #154          // )
  #156 = Utf8               b
  #157 = Utf8               Ljava/lang/StringBuilder;
  #158 = Utf8               canEqual
  #159 = Utf8               (Ljava/lang/Object;)Z
  #160 = Utf8               obj
  #161 = Utf8               Ljava/lang/Object;
  #162 = Utf8               equals
  #163 = NameAndType        #158:#159     // canEqual:(Ljava/lang/Object;)Z
  #164 = Methodref          #2.#163       // coursier/graph/Conflict.canEqual:(Ljava/lang/Object;)Z
  #165 = Utf8               coursier/core/Module
  #166 = Class              #165          // coursier/core/Module
  #167 = NameAndType        #162:#159     // equals:(Ljava/lang/Object;)Z
  #168 = Methodref          #4.#167       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #169 = Utf8               other
  #170 = Utf8               hashCode
  #171 = Utf8               ()I
  #172 = Utf8               Conflict
  #173 = String             #172          // Conflict
  #174 = Utf8               scala/runtime/Statics
  #175 = Class              #174          // scala/runtime/Statics
  #176 = Utf8               anyHash
  #177 = Utf8               (Ljava/lang/Object;)I
  #178 = NameAndType        #176:#177     // anyHash:(Ljava/lang/Object;)I
  #179 = Methodref          #175.#178     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #180 = Utf8               code
  #181 = Utf8               I
  #182 = Utf8               tuple
  #183 = Utf8               ()Lscala/Tuple6;
  #184 = Utf8               ()Lscala/Tuple6<Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lcoursier/core/Module;Ljava/lang/String;>;
  #185 = Utf8               scala/Tuple6
  #186 = Class              #185          // scala/Tuple6
  #187 = Utf8               scala/runtime/BoxesRunTime
  #188 = Class              #187          // scala/runtime/BoxesRunTime
  #189 = Utf8               boxToBoolean
  #190 = Utf8               (Z)Ljava/lang/Boolean;
  #191 = NameAndType        #189:#190     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #192 = Methodref          #188.#191     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #193 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #194 = NameAndType        #94:#193      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #195 = Methodref          #186.#194     // scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #196 = Utf8               productPrefix
  #197 = Utf8               productArity
  #198 = Utf8               productElement
  #199 = Utf8               (I)Ljava/lang/Object;
  #200 = Utf8               n
  #201 = Utf8               java/lang/IndexOutOfBoundsException
  #202 = Class              #201          // java/lang/IndexOutOfBoundsException
  #203 = Utf8               boxToInteger
  #204 = Utf8               (I)Ljava/lang/Integer;
  #205 = NameAndType        #203:#204     // boxToInteger:(I)Ljava/lang/Integer;
  #206 = Methodref          #188.#205     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #207 = Methodref          #4.#122       // java/lang/Object.toString:()Ljava/lang/String;
  #208 = Methodref          #202.#141     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #209 = Utf8               productElementName
  #210 = Utf8               (I)Ljava/lang/String;
  #211 = String             #19           // module
  #212 = String             #21           // version
  #213 = String             #23           // wantedVersion
  #214 = String             #24           // wasExcluded
  #215 = String             #26           // dependeeModule
  #216 = String             #27           // dependeeVersion
  #217 = Utf8               ()V
  #218 = NameAndType        #94:#217      // "<init>":()V
  #219 = Methodref          #4.#218       // java/lang/Object."<init>":()V
  #220 = Utf8               $init$
  #221 = Utf8               (Lscala/Product;)V
  #222 = NameAndType        #220:#221     // $init$:(Lscala/Product;)V
  #223 = InterfaceMethodref #6.#222       // scala/Product.$init$:(Lscala/Product;)V
  #224 = Utf8               Code
  #225 = Utf8               MethodParameters
  #226 = Utf8               Signature
  #227 = Utf8               LineNumberTable
  #228 = Utf8               LocalVariableTable
  #229 = Utf8               StackMapTable
  #230 = Utf8               InnerClasses
  #231 = Utf8               SourceFile
  #232 = Utf8               RuntimeVisibleAnnotations
  #233 = Utf8               ScalaInlineInfo
  #234 = Utf8               ScalaSig
{
  private final coursier.core.Module module;
    descriptor: Lcoursier/core/Module;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String version;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String wantedVersion;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean wasExcluded;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final coursier.core.Module dependeeModule;
    descriptor: Lcoursier/core/Module;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String dependeeVersion;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static coursier.graph.Conflict apply(coursier.core.Module, java.lang.String, java.lang.String, boolean, coursier.core.Module, java.lang.String);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=6, args_size=6
         0: getstatic     #35                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: iload_3
         7: aload         4
         9: aload         5
        11: invokevirtual #37                 // Method coursier/graph/Conflict$.apply:(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
        14: areturn
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      wantedVersion                  final
      wasExcluded                    final
      dependeeModule                 final
      dependeeVersion                final

  public static boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #35                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: invokevirtual #41                 // Method coursier/graph/Conflict$.apply$default$3:()Z
         6: ireturn

  public static boolean apply$default$2();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #35                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: invokevirtual #44                 // Method coursier/graph/Conflict$.apply$default$2:()Z
         6: ireturn

  public static scala.collection.immutable.Seq<coursier.graph.Conflict> apply(coursier.core.Resolution, boolean, boolean);
    descriptor: (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #35                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: aload_0
         4: iload_1
         5: iload_2
         6: invokevirtual #51                 // Method coursier/graph/Conflict$.apply:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
         9: areturn
    Signature: #46                          // (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict;>;
    MethodParameters:
      Name                           Flags
      resolution                     final
      withExclusions                 final
      semVer                         final

  public static boolean conflicted$default$3();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #35                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: invokevirtual #54                 // Method coursier/graph/Conflict$.conflicted$default$3:()Z
         6: ireturn

  public static boolean conflicted$default$2();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #35                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: invokevirtual #57                 // Method coursier/graph/Conflict$.conflicted$default$2:()Z
         6: ireturn

  public static scala.collection.immutable.Seq<coursier.graph.Conflict$Conflicted> conflicted(coursier.core.Resolution, boolean, boolean);
    descriptor: (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #35                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: aload_0
         4: iload_1
         5: iload_2
         6: invokevirtual #61                 // Method coursier/graph/Conflict$.conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
         9: areturn
    Signature: #59                          // (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict$Conflicted;>;
    MethodParameters:
      Name                           Flags
      resolution                     final
      withExclusions                 final
      semVer                         final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;
    Signature: #64                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;
    Signature: #72                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.core.Module module();
    descriptor: ()Lcoursier/core/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #78                 // Field module:Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;

  public java.lang.String version();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #81                 // Field version:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;

  public java.lang.String wantedVersion();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #83                 // Field wantedVersion:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;

  public boolean wasExcluded();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #85                 // Field wasExcluded:Z
         4: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;

  public coursier.core.Module dependeeModule();
    descriptor: ()Lcoursier/core/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #87                 // Field dependeeModule:Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;

  public java.lang.String dependeeVersion();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field dependeeVersion:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict;

  public java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #92                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #93                 // int 25
         6: invokespecial #97                 // Method java/lang/StringBuilder."<init>":(I)V
         9: aload_0
        10: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
        13: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        16: ldc           #105                // String :
        18: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: aload_0
        22: invokevirtual #110                // Method version:()Ljava/lang/String;
        25: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: ldc           #112                // String  selected, but
        30: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: aload_0
        34: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        37: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        40: ldc           #105                // String :
        42: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: aload_0
        46: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        49: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        52: ldc           #118                // String  wanted
        54: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: aload_0
        58: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        61: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: invokevirtual #123                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        67: areturn
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lcoursier/graph/Conflict;

  public coursier.graph.Conflict withModule(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/Conflict
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #110                // Method version:()Ljava/lang/String;
         9: aload_0
        10: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        13: aload_0
        14: invokevirtual #127                // Method wasExcluded:()Z
        17: aload_0
        18: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        21: aload_0
        22: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        25: invokespecial #130                // Method "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
        28: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/Conflict;
            0      29     1 module   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      module                         final

  public coursier.graph.Conflict withVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/Conflict
         3: dup
         4: aload_0
         5: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
         8: aload_1
         9: aload_0
        10: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        13: aload_0
        14: invokevirtual #127                // Method wasExcluded:()Z
        17: aload_0
        18: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        21: aload_0
        22: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        25: invokespecial #130                // Method "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
        28: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/Conflict;
            0      29     1 version   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version                        final

  public coursier.graph.Conflict withWantedVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/Conflict
         3: dup
         4: aload_0
         5: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
         8: aload_0
         9: invokevirtual #110                // Method version:()Ljava/lang/String;
        12: aload_1
        13: aload_0
        14: invokevirtual #127                // Method wasExcluded:()Z
        17: aload_0
        18: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        21: aload_0
        22: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        25: invokespecial #130                // Method "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
        28: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/Conflict;
            0      29     1 wantedVersion   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      wantedVersion                  final

  public coursier.graph.Conflict withWasExcluded(boolean);
    descriptor: (Z)Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/Conflict
         3: dup
         4: aload_0
         5: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
         8: aload_0
         9: invokevirtual #110                // Method version:()Ljava/lang/String;
        12: aload_0
        13: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        16: iload_1
        17: aload_0
        18: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        21: aload_0
        22: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        25: invokespecial #130                // Method "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
        28: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/Conflict;
            0      29     1 wasExcluded   Z
    MethodParameters:
      Name                           Flags
      wasExcluded                    final

  public coursier.graph.Conflict withDependeeModule(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/Conflict
         3: dup
         4: aload_0
         5: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
         8: aload_0
         9: invokevirtual #110                // Method version:()Ljava/lang/String;
        12: aload_0
        13: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        16: aload_0
        17: invokevirtual #127                // Method wasExcluded:()Z
        20: aload_1
        21: aload_0
        22: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        25: invokespecial #130                // Method "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
        28: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/Conflict;
            0      29     1 dependeeModule   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      dependeeModule                 final

  public coursier.graph.Conflict withDependeeVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/Conflict
         3: dup
         4: aload_0
         5: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
         8: aload_0
         9: invokevirtual #110                // Method version:()Ljava/lang/String;
        12: aload_0
        13: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        16: aload_0
        17: invokevirtual #127                // Method wasExcluded:()Z
        20: aload_0
        21: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        24: aload_1
        25: invokespecial #130                // Method "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
        28: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/Conflict;
            0      29     1 dependeeVersion   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      dependeeVersion                final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #92                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #139                // String Conflict(
         6: invokespecial #142                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
        15: invokestatic  #148                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        18: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc           #150                // String ,
        25: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: aload_0
        31: invokevirtual #110                // Method version:()Ljava/lang/String;
        34: invokestatic  #148                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        37: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: pop
        41: aload_1
        42: ldc           #150                // String ,
        44: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: pop
        48: aload_1
        49: aload_0
        50: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        53: invokestatic  #148                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        56: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: pop
        60: aload_1
        61: ldc           #150                // String ,
        63: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        66: pop
        67: aload_1
        68: aload_0
        69: invokevirtual #127                // Method wasExcluded:()Z
        72: invokestatic  #153                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
        75: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        78: pop
        79: aload_1
        80: ldc           #150                // String ,
        82: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: pop
        86: aload_1
        87: aload_0
        88: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        91: invokestatic  #148                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        94: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        97: pop
        98: aload_1
        99: ldc           #150                // String ,
       101: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       104: pop
       105: aload_1
       106: aload_0
       107: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
       110: invokestatic  #148                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       113: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       116: pop
       117: aload_1
       118: ldc           #155                // String )
       120: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       123: pop
       124: aload_1
       125: invokevirtual #123                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       128: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10     118     1     b   Ljava/lang/StringBuilder;
            0     129     0  this   Lcoursier/graph/Conflict;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/graph/Conflict
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/graph/Conflict;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     193
         5: aload_0
         6: aload_1
         7: invokevirtual #164                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          197
        13: aload_1
        14: checkcast     #2                  // class coursier/graph/Conflict
        17: astore_2
        18: iconst_1
        19: ifeq          189
        22: aload_0
        23: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
        26: aload_2
        27: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          189
        43: aload_3
        44: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          189
        50: aload_0
        51: invokevirtual #110                // Method version:()Ljava/lang/String;
        54: aload_2
        55: invokevirtual #110                // Method version:()Ljava/lang/String;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          189
        73: aload         4
        75: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          189
        81: aload_0
        82: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        85: aload_2
        86: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        89: astore        5
        91: dup
        92: ifnonnull     104
        95: pop
        96: aload         5
        98: ifnull        112
       101: goto          189
       104: aload         5
       106: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       109: ifeq          189
       112: aload_0
       113: invokevirtual #127                // Method wasExcluded:()Z
       116: aload_2
       117: invokevirtual #127                // Method wasExcluded:()Z
       120: if_icmpne     189
       123: aload_0
       124: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
       127: aload_2
       128: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
       131: astore        6
       133: dup
       134: ifnonnull     146
       137: pop
       138: aload         6
       140: ifnull        154
       143: goto          189
       146: aload         6
       148: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       151: ifeq          189
       154: aload_0
       155: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
       158: aload_2
       159: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
       162: astore        7
       164: dup
       165: ifnonnull     177
       168: pop
       169: aload         7
       171: ifnull        185
       174: goto          189
       177: aload         7
       179: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       182: ifeq          189
       185: iconst_1
       186: goto          190
       189: iconst_0
       190: ifeq          197
       193: iconst_1
       194: goto          198
       197: iconst_0
       198: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/graph/Conflict, class java/lang/Object, class coursier/graph/Conflict, class coursier/core/Module ]
          stack = [ class coursier/core/Module ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/graph/Conflict, class java/lang/Object, class coursier/graph/Conflict, class coursier/core/Module, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/graph/Conflict, class java/lang/Object, class coursier/graph/Conflict, class coursier/core/Module, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class coursier/graph/Conflict, class java/lang/Object, class coursier/graph/Conflict, class coursier/core/Module, class java/lang/String, class java/lang/String, class coursier/core/Module ]
          stack = [ class coursier/core/Module ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/graph/Conflict, class java/lang/Object, class coursier/graph/Conflict, class coursier/core/Module, class java/lang/String, class java/lang/String, class coursier/core/Module, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/graph/Conflict, class java/lang/Object, class coursier/graph/Conflict ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     172     2 other   Lcoursier/graph/Conflict;
            0     199     0  this   Lcoursier/graph/Conflict;
            0     199     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc           #173                // String Conflict
         4: invokestatic  #179                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         7: iadd
         8: istore_1
         9: bipush        37
        11: iload_1
        12: imul
        13: aload_0
        14: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
        17: invokestatic  #179                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        20: iadd
        21: istore_1
        22: bipush        37
        24: iload_1
        25: imul
        26: aload_0
        27: invokevirtual #110                // Method version:()Ljava/lang/String;
        30: invokestatic  #179                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        33: iadd
        34: istore_1
        35: bipush        37
        37: iload_1
        38: imul
        39: aload_0
        40: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        43: invokestatic  #179                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        46: iadd
        47: istore_1
        48: bipush        37
        50: iload_1
        51: imul
        52: aload_0
        53: invokevirtual #127                // Method wasExcluded:()Z
        56: ifeq          65
        59: sipush        1231
        62: goto          68
        65: sipush        1237
        68: iadd
        69: istore_1
        70: bipush        37
        72: iload_1
        73: imul
        74: aload_0
        75: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        78: invokestatic  #179                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        81: iadd
        82: istore_1
        83: bipush        37
        85: iload_1
        86: imul
        87: aload_0
        88: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        91: invokestatic  #179                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        94: iadd
        95: istore_1
        96: bipush        37
        98: iload_1
        99: imul
       100: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 65
          locals = [ class coursier/graph/Conflict, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/graph/Conflict, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      91     1  code   I
            0     101     0  this   Lcoursier/graph/Conflict;

  private scala.Tuple6<coursier.core.Module, java.lang.String, java.lang.String, java.lang.Object, coursier.core.Module, java.lang.String> tuple();
    descriptor: ()Lscala/Tuple6;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=8, locals=1, args_size=1
         0: new           #186                // class scala/Tuple6
         3: dup
         4: aload_0
         5: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
         8: aload_0
         9: invokevirtual #110                // Method version:()Ljava/lang/String;
        12: aload_0
        13: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        16: aload_0
        17: invokevirtual #127                // Method wasExcluded:()Z
        20: invokestatic  #192                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        23: aload_0
        24: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        27: aload_0
        28: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        31: invokespecial #195                // Method scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        34: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lcoursier/graph/Conflict;
    Signature: #184                         // ()Lscala/Tuple6<Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lcoursier/core/Module;Ljava/lang/String;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #173                // String Conflict
         2: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/graph/Conflict;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        6
         2: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/graph/Conflict;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 5
                       0: 40
                       1: 47
                       2: 54
                       3: 61
                       4: 71
                       5: 78
                 default: 85
            }
        40: aload_0
        41: invokevirtual #99                 // Method module:()Lcoursier/core/Module;
        44: goto          100
        47: aload_0
        48: invokevirtual #110                // Method version:()Ljava/lang/String;
        51: goto          100
        54: aload_0
        55: invokevirtual #120                // Method wantedVersion:()Ljava/lang/String;
        58: goto          100
        61: aload_0
        62: invokevirtual #127                // Method wasExcluded:()Z
        65: invokestatic  #192                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        68: goto          100
        71: aload_0
        72: invokevirtual #114                // Method dependeeModule:()Lcoursier/core/Module;
        75: goto          100
        78: aload_0
        79: invokevirtual #116                // Method dependeeVersion:()Ljava/lang/String;
        82: goto          100
        85: new           #202                // class java/lang/IndexOutOfBoundsException
        88: dup
        89: iload_2
        90: invokestatic  #206                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        93: invokevirtual #207                // Method java/lang/Object.toString:()Ljava/lang/String;
        96: invokespecial #208                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        99: athrow
       100: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     101     0  this   Lcoursier/graph/Conflict;
            0     101     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 5
                       0: 40
                       1: 45
                       2: 50
                       3: 55
                       4: 60
                       5: 65
                 default: 70
            }
        40: ldc           #211                // String module
        42: goto          85
        45: ldc           #212                // String version
        47: goto          85
        50: ldc           #213                // String wantedVersion
        52: goto          85
        55: ldc           #214                // String wasExcluded
        57: goto          85
        60: ldc           #215                // String dependeeModule
        62: goto          85
        65: ldc           #216                // String dependeeVersion
        67: goto          85
        70: new           #202                // class java/lang/IndexOutOfBoundsException
        73: dup
        74: iload_2
        75: invokestatic  #206                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        78: invokevirtual #207                // Method java/lang/Object.toString:()Ljava/lang/String;
        81: invokespecial #208                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        84: athrow
        85: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      86     0  this   Lcoursier/graph/Conflict;
            0      86     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public coursier.graph.Conflict(coursier.core.Module, java.lang.String, java.lang.String, boolean, coursier.core.Module, java.lang.String);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=7
         0: aload_0
         1: aload_1
         2: putfield      #78                 // Field module:Lcoursier/core/Module;
         5: aload_0
         6: aload_2
         7: putfield      #81                 // Field version:Ljava/lang/String;
        10: aload_0
        11: aload_3
        12: putfield      #83                 // Field wantedVersion:Ljava/lang/String;
        15: aload_0
        16: iload         4
        18: putfield      #85                 // Field wasExcluded:Z
        21: aload_0
        22: aload         5
        24: putfield      #87                 // Field dependeeModule:Lcoursier/core/Module;
        27: aload_0
        28: aload         6
        30: putfield      #89                 // Field dependeeVersion:Ljava/lang/String;
        33: aload_0
        34: invokespecial #219                // Method java/lang/Object."<init>":()V
        37: aload_0
        38: invokestatic  #223                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        41: return
      LineNumberTable:
        line 9: 0
        line 22: 33
        line 9: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/graph/Conflict;
            0      42     1 module   Lcoursier/core/Module;
            0      42     2 version   Ljava/lang/String;
            0      42     3 wantedVersion   Ljava/lang/String;
            0      42     4 wasExcluded   Z
            0      42     5 dependeeModule   Lcoursier/core/Module;
            0      42     6 dependeeVersion   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      wantedVersion                  final
      wasExcluded                    final
      dependeeModule                 final
      dependeeVersion                final
}
InnerClasses:
  public static final #15= #14 of #2;     // Conflicted=class coursier/graph/Conflict$Conflicted of class coursier/graph/Conflict
  public static #18= #17 of #2;           // =class coursier/graph/Conflict$Conflicted$ of class coursier/graph/Conflict
SourceFile: "Conflict.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\tUb\u0001\u0002 @\u0005\u0011C\u0001B\u0017\u0001\u0003\u0006\u0004%\ta\u0017\u0005\tE\u0002\u0011\t\u0011)A\u00059\"A1\r\u0001BC\u0002\u0013\u0005A\r\u0003\u0005n\u0001\t\u0005\t\u0015!\u0003f\u0011!q\u0007A!b\u0001\n\u0003!\u0007\u0002C8\u0001\u0005\u0003\u0005\u000b\u0011B3\t\u0011A\u0004!Q1A\u0005\u0002ED\u0001\"\u001e\u0001\u0003\u0002\u0003\u0006IA\u001d\u0005\tm\u0002\u0011)\u0019!C\u00017\"Aq\u000f\u0001B\u0001B\u0003%A\f\u0003\u0005y\u0001\t\u0015\r\u0011\"\u0001e\u0011!I\bA!A!\u0002\u0013)\u0007\"\u0002>\u0001\t\u0003Y\bBBA\u0005\u0001\u0011\u0005A\rC\u0004\u0002\f\u0001!\t!!\u0004\t\u000f\u0005E\u0001\u0001\"\u0001\u0002\u0014!9\u0011q\u0003\u0001\u0005\u0002\u0005e\u0001bBA\u000f\u0001\u0011\u0005\u0011q\u0004\u0005\b\u0003G\u0001A\u0011AA\u0013\u0011\u001d\tI\u0003\u0001C\u0001\u0003WAq!a\f\u0001\t\u0003\n\t\u0004C\u0004\u0002B\u0001!\t%a\u0011\t\u000f\u0005=\u0003\u0001\"\u0011\u0002R!9\u0011Q\u000b\u0001\u0005B\u0005]\u0003bBA0\u0001\u0011%\u0011\u0011\r\u0005\b\u0003S\u0002A\u0011IA6\u0011\u001d\ti\u0007\u0001C!\u0003_Bq!!\u001d\u0001\t\u0003\n\u0019\bC\u0004\u0002z\u0001!\t%a\u001f\b\u000f\u0005}t\b#\u0001\u0002\u0002\u001a1ah\u0010E\u0001\u0003\u0007CaA_\u0010\u0005\u0002\u0005=\u0005bBAI?\u0011\u0005\u00111\u0013\u0005\n\u0003O|\u0012\u0013!C\u0001\u0003SD\u0011\"a@ #\u0003%\t!!;\t\u000f\t\u0005q\u0004\"\u0001\u0003\u0004!I!QB\u0010\u0012\u0002\u0013\u0005\u0011\u0011\u001e\u0005\n\u0005\u001fy\u0012\u0013!C\u0001\u0003SDqA!\u0001 \t\u0003\u0011\tB\u0002\u0004\u0002 ~\u0011\u0011\u0011\u0015\u0005\u000b\u0003GC#Q1A\u0005\u0002\u0005\u0015\u0006BCAWQ\t\u0005\t\u0015!\u0003\u0002(\"1!\u0010\u000bC\u0001\u0003_Cq!a-)\t\u0003\t)\f\u0003\u0004\u0002\n!\"\t\u0001\u001a\u0005\b\u0003oCC\u0011AA]\u0011\u001d\ty\u0003\u000bC!\u0003cAq!!\u0011)\t\u0003\ni\fC\u0004\u0002P!\"\t%!1\t\u000f\u0005U\u0003\u0006\"\u0011\u0002X!9\u0011q\f\u0015\u0005\n\u0005\u0015\u0007bBA5Q\u0011\u0005\u00131\u000e\u0005\b\u0003[BC\u0011IA8\u0011\u001d\t\t\b\u000bC!\u0003\u001bDq!!\u001f)\t\u0003\n\tnB\u0004\u0003 }A\tA!\t\u0007\u000f\u0005}u\u0004#\u0001\u0003$!1!0\u000fC\u0001\u0005KAqA!\u0001:\t\u0003\u00119\u0003C\u0005\u0003,e\n\t\u0011\"\u0003\u0003.!I!1F\u0010\u0002\u0002\u0013%!Q\u0006\u0002\t\u0007>tg\r\\5di*\u0011\u0001)Q\u0001\u0006OJ\f\u0007\u000f\u001b\u0006\u0002\u0005\u0006A1m\\;sg&,\'o\u0001\u0001\u0014\t\u0001)5J\u0014\t\u0003\r&k\u0011a\u0012\u0006\u0002\u0011\u0006)1oY1mC&\u0011!j\u0012\u0002\u0007\u0003:L(+\u001a4\u0011\u0005\u0019c\u0015BA\'H\u0005\u001d\u0001&o\u001c3vGR\u0004\"aT,\u000f\u0005A+fBA)U\u001b\u0005\u0011&BA*D\u0003\u0019a$o\\8u}%\t\u0001*\u0003\u0002W\u000f\u00069\u0001/Y2lC\u001e,\u0017B\u0001-Z\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\t1v)\u0001\u0004n_\u0012,H.Z\u000b\u00029B\u0011Q\fY\u0007\u0002=*\u0011q,Q\u0001\u0005G>\u0014X-\u0003\u0002b=\n1Qj\u001c3vY\u0016\fq!\\8ek2,\u0007%A\u0004wKJ\u001c\u0018n\u001c8\u0016\u0003\u0015\u0004\"A\u001a6\u000f\u0005\u001dD\u0007CA)H\u0013\tIw)\u0001\u0004Qe\u0016$WMZ\u0005\u0003W2\u0014aa\u0015;sS:<\'BA5H\u0003!1XM]:j_:\u0004\u0013!D<b]R,GMV3sg&|g.\u0001\bxC:$X\r\u001a,feNLwN\u001c\u0011\u0002\u0017]\f7/\u0012=dYV$W\rZ\u000b\u0002eB\u0011ai]\u0005\u0003i\u001e\u0013qAQ8pY\u0016\fg.\u0001\u0007xCN,\u0005p\u00197vI\u0016$\u0007%\u0001\beKB,g\u000eZ3f\u001b>$W\u000f\\3\u0002\u001f\u0011,\u0007/\u001a8eK\u0016lu\u000eZ;mK\u0002\nq\u0002Z3qK:$W-\u001a,feNLwN\\\u0001\u0011I\u0016\u0004XM\u001c3fKZ+\'o]5p]\u0002\na\u0001P5oSRtDc\u0003?\u007f\u007f\u0006\u0005\u00111AA\u0003\u0003\u000f\u0001\"! \u0001\u000e\u0003}BQAW\u0007A\u0002qCQaY\u0007A\u0002\u0015DQA\\\u0007A\u0002\u0015DQ\u0001]\u0007A\u0002IDQA^\u0007A\u0002qCQ\u0001_\u0007A\u0002\u0015\fAA]3qe\u0006Qq/\u001b;i\u001b>$W\u000f\\3\u0015\u0007q\fy\u0001C\u0003[\u001f\u0001\u0007A,A\u0006xSRDg+\u001a:tS>tGc\u0001?\u0002\u0016!)1\r\u0005a\u0001K\u0006\tr/\u001b;i/\u0006tG/\u001a3WKJ\u001c\u0018n\u001c8\u0015\u0007q\fY\u0002C\u0003o#\u0001\u0007Q-A\bxSRDw+Y:Fq\u000edW\u000fZ3e)\ra\u0018\u0011\u0005\u0005\u0006aJ\u0001\rA]\u0001\u0013o&$\b\u000eR3qK:$W-Z\'pIVdW\rF\u0002}\u0003OAQA^\nA\u0002q\u000b1c^5uQ\u0012+\u0007/\u001a8eK\u00164VM]:j_:$2\u0001`A\u0017\u0011\u0015AH\u00031\u0001f\u0003!!xn\u0015;sS:<GCAA\u001a!\u0011\t)$a\u0010\u000e\u0005\u0005]\"\u0002BA\u001d\u0003w\tA\u0001\\1oO*\u0011\u0011QH\u0001\u0005U\u00064\u0018-C\u0002l\u0003o\t\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0004e\u0006\u0015\u0003bBA$-\u0001\u0007\u0011\u0011J\u0001\u0004_\nT\u0007c\u0001$\u0002L%\u0019\u0011QJ$\u0003\u0007\u0005s\u00170\u0001\u0004fcV\fGn\u001d\u000b\u0004e\u0006M\u0003bBA$/\u0001\u0007\u0011\u0011J\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u0011\u0011\f\t\u0004\r\u0006m\u0013bAA/\u000f\n\u0019\u0011J\u001c;\u0002\u000bQ,\b\u000f\\3\u0016\u0005\u0005\r\u0004#\u0003$\u0002fq+WM\u001d/f\u0013\r\t9g\u0012\u0002\u0007)V\u0004H.\u001a\u001c\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\t\u0019$\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0006\u0002\u0002Z\u0005q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BA%\u0003kBq!a\u001e\u001d\u0001\u0004\tI&A\u0001o\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005M\u0012Q\u0010\u0005\b\u0003oj\u0002\u0019AA-\u0003!\u0019uN\u001c4mS\u000e$\bCA? \'\u0011yR)!\"\u0011\t\u0005\u001d\u0015QR\u0007\u0003\u0003\u0013SA!a#\u0002<\u0005\u0011\u0011n\\\u0005\u00041\u0006%ECAAA\u0003)\u0019wN\u001c4mS\u000e$X\r\u001a\u000b\t\u0003+\u000b).a8\u0002dB)q*a&\u0002\u001c&\u0019\u0011\u0011T-\u0003\u0007M+\u0017\u000fE\u0002\u0002\u001e\"j\u0011a\b\u0002\u000b\u0007>tg\r\\5di\u0016$7\u0003\u0002\u0015F\u0017:\u000bA\u0001\u001e:fKV\u0011\u0011q\u0015\t\u0004{\u0006%\u0016bAAV\u007f\t\t\"+\u001a<feN,Wj\u001c3vY\u0016$&/Z3\u0002\u000bQ\u0014X-\u001a\u0011\u0015\t\u0005m\u0015\u0011\u0017\u0005\b\u0003G[\u0003\u0019AAT\u0003!\u0019wN\u001c4mS\u000e$X#\u0001?\u0002\u0011]LG\u000f\u001b+sK\u0016$B!a\'\u0002<\"9\u00111\u0015\u0018A\u0002\u0005\u001dFc\u0001:\u0002@\"9\u0011q\t\u0019A\u0002\u0005%Cc\u0001:\u0002D\"9\u0011qI\u0019A\u0002\u0005%SCAAd!\u00151\u0015\u0011ZAT\u0013\r\tYm\u0012\u0002\u0007)V\u0004H.Z\u0019\u0015\t\u0005%\u0013q\u001a\u0005\b\u0003o2\u0004\u0019AA-)\u0011\t\u0019$a5\t\u000f\u0005]t\u00071\u0001\u0002Z!9\u0011q[\u0011A\u0002\u0005e\u0017A\u0003:fg>dW\u000f^5p]B\u0019Q,a7\n\u0007\u0005ugL\u0001\u0006SKN|G.\u001e;j_:D\u0001\"!9\"!\u0003\u0005\rA]\u0001\u000fo&$\b.\u0012=dYV\u001c\u0018n\u001c8t\u0011!\t)/\tI\u0001\u0002\u0004\u0011\u0018AB:f[Z+\'/\u0001\u000bd_:4G.[2uK\u0012$C-\u001a4bk2$HEM\u000b\u0003\u0003WT3A]AwW\t\ty\u000f\u0005\u0003\u0002r\u0006mXBAAz\u0015\u0011\t)0a>\u0002\u0013Ut7\r[3dW\u0016$\'bAA}\u000f\u0006Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005u\u00181\u001f\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017\u0001F2p]\u001ad\u0017n\u0019;fI\u0012\"WMZ1vYR$3\'A\u0003baBd\u0017\u0010\u0006\u0005\u0003\u0006\t\u001d!\u0011\u0002B\u0006!\u0011y\u0015q\u0013?\t\u000f\u0005]G\u00051\u0001\u0002Z\"A\u0011\u0011\u001d\u0013\u0011\u0002\u0003\u0007!\u000f\u0003\u0005\u0002f\u0012\u0002\n\u00111\u0001s\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012\u0012\u0014aD1qa2LH\u0005Z3gCVdG\u000fJ\u001a\u0015\u001bq\u0014\u0019B!\u0006\u0003\u0018\te!1\u0004B\u000f\u0011\u0015Qv\u00051\u0001]\u0011\u0015\u0019w\u00051\u0001f\u0011\u0015qw\u00051\u0001f\u0011\u0015\u0001x\u00051\u0001s\u0011\u00151x\u00051\u0001]\u0011\u0015Ax\u00051\u0001f\u0003)\u0019uN\u001c4mS\u000e$X\r\u001a\t\u0004\u0003;K4\u0003B\u001dF\u0003\u000b#\"A!\t\u0015\t\u0005m%\u0011\u0006\u0005\b\u0003G[\u0004\u0019AAT\u000319(/\u001b;f%\u0016\u0004H.Y2f)\t\u0011y\u0003\u0005\u0003\u00026\tE\u0012\u0002\u0002B\u001a\u0003o\u0011aa\u00142kK\u000e$\b"
    )
  ScalaInlineInfo: length = 0x81 (unknown attribute)
   01 01 00 19 00 5E 00 80 01 00 9E 00 9F 01 00 1A
   00 4C 01 00 1B 00 4F 01 00 A2 00 9F 01 00 AA 00
   AB 01 00 13 00 4C 01 00 C5 00 AB 01 00 C6 00 C7
   01 00 D1 00 D2 01 00 47 00 3F 01 00 3E 00 3F 01
   00 C4 00 4F 01 00 5A 00 4F 01 00 79 00 4F 01 00
   B6 00 B7 01 00 15 00 4F 01 00 17 00 4F 01 00 18
   00 27 01 00 88 00 7D 01 00 89 00 84 01 00 7C 00
   7D 01 00 83 00 84 01 00 85 00 84 01 00 86 00 87
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
