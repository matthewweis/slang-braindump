Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/mutable/CollisionProofHashMap$MapIterator.class
  Last modified May 29, 2022; size 3246 bytes
  SHA-256 checksum 68bad7014359a080689c298a14e778bf85374fee45dd2f6c9b3ecf8a1ec63d34
  Compiled from "CollisionProofHashMap.scala"
public abstract class scala.collection.mutable.CollisionProofHashMap$MapIterator<R extends java.lang.Object> extends scala.collection.AbstractIterator<R>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/collection/mutable/CollisionProofHashMap$MapIterator
  super_class: #5                         // scala/collection/AbstractIterator
  interfaces: 0, fields: 4, methods: 6, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/mutable/CollisionProofHashMap$MapIterator
    #2 = Class              #1            // scala/collection/mutable/CollisionProofHashMap$MapIterator
    #3 = Utf8               <R:Ljava/lang/Object;>Lscala/collection/AbstractIterator<TR;>;
    #4 = Utf8               scala/collection/AbstractIterator
    #5 = Class              #4            // scala/collection/AbstractIterator
    #6 = Utf8               CollisionProofHashMap.scala
    #7 = Utf8               scala/collection/mutable/CollisionProofHashMap$LLNode
    #8 = Class              #7            // scala/collection/mutable/CollisionProofHashMap$LLNode
    #9 = Utf8               scala/collection/mutable/CollisionProofHashMap
   #10 = Class              #9            // scala/collection/mutable/CollisionProofHashMap
   #11 = Utf8               LLNode
   #12 = Utf8               MapIterator
   #13 = Utf8               scala/collection/mutable/CollisionProofHashMap$Node
   #14 = Class              #13           // scala/collection/mutable/CollisionProofHashMap$Node
   #15 = Utf8               Node
   #16 = Utf8               scala/collection/mutable/CollisionProofHashMap$RBNode
   #17 = Class              #16           // scala/collection/mutable/CollisionProofHashMap$RBNode
   #18 = Utf8               RBNode
   #19 = Utf8               i
   #20 = Utf8               I
   #21 = Utf8               node
   #22 = Utf8               Lscala/collection/mutable/CollisionProofHashMap$Node;
   #23 = Utf8               len
   #24 = Utf8               $outer
   #25 = Utf8               Lscala/collection/mutable/CollisionProofHashMap;
   #26 = Utf8               extract
   #27 = Utf8               (Lscala/collection/mutable/CollisionProofHashMap$LLNode;)Ljava/lang/Object;
   #28 = Utf8               (Lscala/collection/mutable/CollisionProofHashMap$LLNode<TK;TV;>;)TR;
   #29 = Utf8               (Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Ljava/lang/Object;
   #30 = Utf8               (Lscala/collection/mutable/CollisionProofHashMap$RBNode<TK;TV;>;)TR;
   #31 = Utf8               hasNext
   #32 = Utf8               ()Z
   #33 = NameAndType        #21:#22       // node:Lscala/collection/mutable/CollisionProofHashMap$Node;
   #34 = Fieldref           #2.#33        // scala/collection/mutable/CollisionProofHashMap$MapIterator.node:Lscala/collection/mutable/CollisionProofHashMap$Node;
   #35 = NameAndType        #19:#20       // i:I
   #36 = Fieldref           #2.#35        // scala/collection/mutable/CollisionProofHashMap$MapIterator.i:I
   #37 = NameAndType        #23:#20       // len:I
   #38 = Fieldref           #2.#37        // scala/collection/mutable/CollisionProofHashMap$MapIterator.len:I
   #39 = Utf8               scala$collection$mutable$CollisionProofHashMap$MapIterator$$$outer
   #40 = Utf8               ()Lscala/collection/mutable/CollisionProofHashMap;
   #41 = NameAndType        #39:#40       // scala$collection$mutable$CollisionProofHashMap$MapIterator$$$outer:()Lscala/collection/mutable/CollisionProofHashMap;
   #42 = Methodref          #2.#41        // scala/collection/mutable/CollisionProofHashMap$MapIterator.scala$collection$mutable$CollisionProofHashMap$MapIterator$$$outer:()Lscala/collection/mutable/CollisionProofHashMap;
   #43 = Utf8               scala$collection$mutable$CollisionProofHashMap$$table
   #44 = Utf8               [Lscala/collection/mutable/CollisionProofHashMap$Node;
   #45 = NameAndType        #43:#44       // scala$collection$mutable$CollisionProofHashMap$$table:[Lscala/collection/mutable/CollisionProofHashMap$Node;
   #46 = Fieldref           #10.#45       // scala/collection/mutable/CollisionProofHashMap.scala$collection$mutable$CollisionProofHashMap$$table:[Lscala/collection/mutable/CollisionProofHashMap$Node;
   #47 = Utf8               scala/collection/mutable/CollisionProofHashMap$
   #48 = Class              #47           // scala/collection/mutable/CollisionProofHashMap$
   #49 = Utf8               MODULE$
   #50 = Utf8               Lscala/collection/mutable/CollisionProofHashMap$;
   #51 = NameAndType        #49:#50       // MODULE$:Lscala/collection/mutable/CollisionProofHashMap$;
   #52 = Fieldref           #48.#51       // scala/collection/mutable/CollisionProofHashMap$.MODULE$:Lscala/collection/mutable/CollisionProofHashMap$;
   #53 = Utf8               scala$collection$mutable$CollisionProofHashMap$$minNodeNonNull
   #54 = Utf8               (Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Lscala/collection/mutable/CollisionProofHashMap$RBNode;
   #55 = NameAndType        #53:#54       // scala$collection$mutable$CollisionProofHashMap$$minNodeNonNull:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Lscala/collection/mutable/CollisionProofHashMap$RBNode;
   #56 = Methodref          #48.#55       // scala/collection/mutable/CollisionProofHashMap$.scala$collection$mutable$CollisionProofHashMap$$minNodeNonNull:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Lscala/collection/mutable/CollisionProofHashMap$RBNode;
   #57 = Utf8               scala/MatchError
   #58 = Class              #57           // scala/MatchError
   #59 = Utf8               <init>
   #60 = Utf8               (Ljava/lang/Object;)V
   #61 = NameAndType        #59:#60       // "<init>":(Ljava/lang/Object;)V
   #62 = Methodref          #58.#61       // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #63 = Utf8               n
   #64 = Utf8               this
   #65 = Utf8               Lscala/collection/mutable/CollisionProofHashMap$MapIterator;
   #66 = Utf8               next
   #67 = Utf8               ()Ljava/lang/Object;
   #68 = Utf8               ()TR;
   #69 = NameAndType        #31:#32       // hasNext:()Z
   #70 = Methodref          #2.#69        // scala/collection/mutable/CollisionProofHashMap$MapIterator.hasNext:()Z
   #71 = Utf8               scala/collection/Iterator$
   #72 = Class              #71           // scala/collection/Iterator$
   #73 = Utf8               Lscala/collection/Iterator$;
   #74 = NameAndType        #49:#73       // MODULE$:Lscala/collection/Iterator$;
   #75 = Fieldref           #72.#74       // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
   #76 = Utf8               scala$collection$Iterator$$_empty
   #77 = Utf8               Lscala/collection/Iterator;
   #78 = NameAndType        #76:#77       // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #79 = Fieldref           #72.#78       // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #80 = Utf8               scala/collection/Iterator
   #81 = Class              #80           // scala/collection/Iterator
   #82 = NameAndType        #66:#67       // next:()Ljava/lang/Object;
   #83 = InterfaceMethodref #81.#82       // scala/collection/Iterator.next:()Ljava/lang/Object;
   #84 = NameAndType        #26:#29       // extract:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Ljava/lang/Object;
   #85 = Methodref          #2.#84        // scala/collection/mutable/CollisionProofHashMap$MapIterator.extract:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Ljava/lang/Object;
   #86 = Utf8               scala$collection$mutable$CollisionProofHashMap$$successor
   #87 = NameAndType        #86:#54       // scala$collection$mutable$CollisionProofHashMap$$successor:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Lscala/collection/mutable/CollisionProofHashMap$RBNode;
   #88 = Methodref          #48.#87       // scala/collection/mutable/CollisionProofHashMap$.scala$collection$mutable$CollisionProofHashMap$$successor:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Lscala/collection/mutable/CollisionProofHashMap$RBNode;
   #89 = NameAndType        #26:#27       // extract:(Lscala/collection/mutable/CollisionProofHashMap$LLNode;)Ljava/lang/Object;
   #90 = Methodref          #2.#89        // scala/collection/mutable/CollisionProofHashMap$MapIterator.extract:(Lscala/collection/mutable/CollisionProofHashMap$LLNode;)Ljava/lang/Object;
   #91 = Utf8               ()Lscala/collection/mutable/CollisionProofHashMap$LLNode;
   #92 = NameAndType        #66:#91       // next:()Lscala/collection/mutable/CollisionProofHashMap$LLNode;
   #93 = Methodref          #8.#92        // scala/collection/mutable/CollisionProofHashMap$LLNode.next:()Lscala/collection/mutable/CollisionProofHashMap$LLNode;
   #94 = Utf8               r
   #95 = Utf8               Ljava/lang/Object;
   #96 = Utf8               java/lang/Object
   #97 = Class              #96           // java/lang/Object
   #98 = NameAndType        #24:#25       // $outer:Lscala/collection/mutable/CollisionProofHashMap;
   #99 = Fieldref           #2.#98        // scala/collection/mutable/CollisionProofHashMap$MapIterator.$outer:Lscala/collection/mutable/CollisionProofHashMap;
  #100 = Utf8               (Lscala/collection/mutable/CollisionProofHashMap;)V
  #101 = Utf8               ()V
  #102 = NameAndType        #59:#101      // "<init>":()V
  #103 = Methodref          #5.#102       // scala/collection/AbstractIterator."<init>":()V
  #104 = Utf8               Signature
  #105 = Utf8               MethodParameters
  #106 = Utf8               Code
  #107 = Utf8               StackMapTable
  #108 = Utf8               LineNumberTable
  #109 = Utf8               LocalVariableTable
  #110 = Utf8               InnerClasses
  #111 = Utf8               SourceFile
  #112 = Utf8               ScalaInlineInfo
  #113 = Utf8               Scala
{
  private int i;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.mutable.CollisionProofHashMap$Node node;
    descriptor: Lscala/collection/mutable/CollisionProofHashMap$Node;
    flags: (0x0002) ACC_PRIVATE

  private final int len;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final scala.collection.mutable.CollisionProofHashMap $outer;
    descriptor: Lscala/collection/mutable/CollisionProofHashMap;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public abstract R extract(scala.collection.mutable.CollisionProofHashMap$LLNode<K, V>);
    descriptor: (Lscala/collection/mutable/CollisionProofHashMap$LLNode;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #28                          // (Lscala/collection/mutable/CollisionProofHashMap$LLNode<TK;TV;>;)TR;
    MethodParameters:
      Name                           Flags
      node                           final

  public abstract R extract(scala.collection.mutable.CollisionProofHashMap$RBNode<K, V>);
    descriptor: (Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #30                          // (Lscala/collection/mutable/CollisionProofHashMap$RBNode<TK;TV;>;)TR;
    MethodParameters:
      Name                           Flags
      node                           final

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: getfield      #34                 // Field node:Lscala/collection/mutable/CollisionProofHashMap$Node;
         4: ifnull        9
         7: iconst_1
         8: ireturn
         9: aload_0
        10: getfield      #36                 // Field i:I
        13: aload_0
        14: getfield      #38                 // Field len:I
        17: if_icmpge     100
        20: aload_0
        21: invokevirtual #42                 // Method scala$collection$mutable$CollisionProofHashMap$MapIterator$$$outer:()Lscala/collection/mutable/CollisionProofHashMap;
        24: getfield      #46                 // Field scala/collection/mutable/CollisionProofHashMap.scala$collection$mutable$CollisionProofHashMap$$table:[Lscala/collection/mutable/CollisionProofHashMap$Node;
        27: aload_0
        28: getfield      #36                 // Field i:I
        31: aaload
        32: astore_1
        33: aload_0
        34: aload_0
        35: getfield      #36                 // Field i:I
        38: iconst_1
        39: iadd
        40: putfield      #36                 // Field i:I
        43: aload_1
        44: ifnull        9
        47: aload_1
        48: instanceof    #17                 // class scala/collection/mutable/CollisionProofHashMap$RBNode
        51: ifeq          72
        54: aload_1
        55: checkcast     #17                 // class scala/collection/mutable/CollisionProofHashMap$RBNode
        58: astore_2
        59: aload_0
        60: getstatic     #52                 // Field scala/collection/mutable/CollisionProofHashMap$.MODULE$:Lscala/collection/mutable/CollisionProofHashMap$;
        63: aload_2
        64: invokevirtual #56                 // Method scala/collection/mutable/CollisionProofHashMap$.scala$collection$mutable$CollisionProofHashMap$$minNodeNonNull:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Lscala/collection/mutable/CollisionProofHashMap$RBNode;
        67: putfield      #34                 // Field node:Lscala/collection/mutable/CollisionProofHashMap$Node;
        70: iconst_1
        71: ireturn
        72: aload_1
        73: instanceof    #8                  // class scala/collection/mutable/CollisionProofHashMap$LLNode
        76: ifeq          91
        79: aload_1
        80: checkcast     #8                  // class scala/collection/mutable/CollisionProofHashMap$LLNode
        83: astore_3
        84: aload_0
        85: aload_3
        86: putfield      #34                 // Field node:Lscala/collection/mutable/CollisionProofHashMap$Node;
        89: iconst_1
        90: ireturn
        91: new           #58                 // class scala/MatchError
        94: dup
        95: aload_1
        96: invokespecial #62                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        99: athrow
       100: iconst_0
       101: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 62
          locals = [ class scala/collection/mutable/CollisionProofHashMap$Node ]
        frame_type = 18 /* same */
        frame_type = 250 /* chop */
          offset_delta = 8
      LineNumberTable:
        line 223: 0
        line 225: 9
        line 226: 20
        line 227: 33
        line 229: 43
        line 230: 47
        line 231: 59
        line 232: 70
        line 233: 72
        line 234: 84
        line 235: 89
        line 228: 91
        line 238: 100
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           33      67     1     n   Lscala/collection/mutable/CollisionProofHashMap$Node;
            0     102     0  this   Lscala/collection/mutable/CollisionProofHashMap$MapIterator;

  public R next();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=1
         0: aload_0
         1: invokevirtual #70                 // Method hasNext:()Z
         4: ifne          20
         7: getstatic     #75                 // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #79                 // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: invokeinterface #83,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        19: areturn
        20: aload_0
        21: getfield      #34                 // Field node:Lscala/collection/mutable/CollisionProofHashMap$Node;
        24: astore_2
        25: aload_2
        26: instanceof    #17                 // class scala/collection/mutable/CollisionProofHashMap$RBNode
        29: ifeq          61
        32: aload_2
        33: checkcast     #17                 // class scala/collection/mutable/CollisionProofHashMap$RBNode
        36: astore_3
        37: aload_0
        38: aload_3
        39: invokevirtual #85                 // Method extract:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Ljava/lang/Object;
        42: astore        4
        44: aload_0
        45: getstatic     #52                 // Field scala/collection/mutable/CollisionProofHashMap$.MODULE$:Lscala/collection/mutable/CollisionProofHashMap$;
        48: aload_3
        49: invokevirtual #88                 // Method scala/collection/mutable/CollisionProofHashMap$.scala$collection$mutable$CollisionProofHashMap$$successor:(Lscala/collection/mutable/CollisionProofHashMap$RBNode;)Lscala/collection/mutable/CollisionProofHashMap$RBNode;
        52: putfield      #34                 // Field node:Lscala/collection/mutable/CollisionProofHashMap$Node;
        55: aload         4
        57: astore_1
        58: goto          106
        61: aload_2
        62: instanceof    #8                  // class scala/collection/mutable/CollisionProofHashMap$LLNode
        65: ifeq          97
        68: aload_2
        69: checkcast     #8                  // class scala/collection/mutable/CollisionProofHashMap$LLNode
        72: astore        5
        74: aload_0
        75: aload         5
        77: invokevirtual #90                 // Method extract:(Lscala/collection/mutable/CollisionProofHashMap$LLNode;)Ljava/lang/Object;
        80: astore        6
        82: aload_0
        83: aload         5
        85: invokevirtual #93                 // Method scala/collection/mutable/CollisionProofHashMap$LLNode.next:()Lscala/collection/mutable/CollisionProofHashMap$LLNode;
        88: putfield      #34                 // Field node:Lscala/collection/mutable/CollisionProofHashMap$Node;
        91: aload         6
        93: astore_1
        94: goto          106
        97: new           #58                 // class scala/MatchError
       100: dup
       101: aload_2
       102: invokespecial #62                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       105: athrow
       106: aload_1
       107: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 20 /* same */
        frame_type = 253 /* append */
          offset_delta = 40
          locals = [ top, class scala/collection/mutable/CollisionProofHashMap$Node ]
        frame_type = 35 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/mutable/CollisionProofHashMap$MapIterator, class java/lang/Object, class scala/collection/mutable/CollisionProofHashMap$Node ]
          stack = []
      LineNumberTable:
        line 243: 0
        line 244: 20
        line 245: 25
        line 246: 37
        line 247: 44
        line 248: 55
        line 249: 61
        line 250: 74
        line 251: 82
        line 252: 91
        line 244: 97
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           44      13     4     r   Ljava/lang/Object;
           82      11     6     r   Ljava/lang/Object;
            0     108     0  this   Lscala/collection/mutable/CollisionProofHashMap$MapIterator;
    Signature: #68                          // ()TR;

  public scala.collection.mutable.CollisionProofHashMap scala$collection$mutable$CollisionProofHashMap$MapIterator$$$outer();
    descriptor: ()Lscala/collection/mutable/CollisionProofHashMap;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #99                 // Field $outer:Lscala/collection/mutable/CollisionProofHashMap;
         4: areturn
      LineNumberTable:
        line 214: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/CollisionProofHashMap$MapIterator;

  public scala.collection.mutable.CollisionProofHashMap$MapIterator(scala.collection.mutable.CollisionProofHashMap);
    descriptor: (Lscala/collection/mutable/CollisionProofHashMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #99                 // Field $outer:Lscala/collection/mutable/CollisionProofHashMap;
        11: aload_0
        12: invokespecial #103                // Method scala/collection/AbstractIterator."<init>":()V
        15: aload_0
        16: iconst_0
        17: putfield      #36                 // Field i:I
        20: aload_0
        21: aconst_null
        22: putfield      #34                 // Field node:Lscala/collection/mutable/CollisionProofHashMap$Node;
        25: aload_0
        26: aload_1
        27: getfield      #46                 // Field scala/collection/mutable/CollisionProofHashMap.scala$collection$mutable$CollisionProofHashMap$$table:[Lscala/collection/mutable/CollisionProofHashMap$Node;
        30: arraylength
        31: putfield      #38                 // Field len:I
        34: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 214: 0
        line 218: 15
        line 219: 20
        line 220: 25
        line 214: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lscala/collection/mutable/CollisionProofHashMap$MapIterator;
            0      35     1 $outer   Lscala/collection/mutable/CollisionProofHashMap;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  private static final #11= #8 of #10;    // LLNode=class scala/collection/mutable/CollisionProofHashMap$LLNode of class scala/collection/mutable/CollisionProofHashMap
  private abstract #12= #2 of #10;        // MapIterator=class scala/collection/mutable/CollisionProofHashMap$MapIterator of class scala/collection/mutable/CollisionProofHashMap
  public static abstract #15= #14 of #10; // Node=class scala/collection/mutable/CollisionProofHashMap$Node of class scala/collection/mutable/CollisionProofHashMap
  public static final #18= #17 of #10;    // RBNode=class scala/collection/mutable/CollisionProofHashMap$RBNode of class scala/collection/mutable/CollisionProofHashMap
Signature: #3                           // <R:Ljava/lang/Object;>Lscala/collection/AbstractIterator<TR;>;
SourceFile: "CollisionProofHashMap.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 00 00 06 00 3B 00 64 00 00 1A 00 1B 00 00 1A
   00 1D 00 00 1F 00 20 00 00 42 00 43 00 00 27 00
   28 00
  Scala: length = 0x0 (unknown attribute)

