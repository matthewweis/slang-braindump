Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/params/rule/SameVersion$.class
  Last modified May 29, 2022; size 2916 bytes
  SHA-256 checksum a6bd185995a12353720fc8ba15a09a11f19cb0ac2d270da7572eccb541f82127
  Compiled from "SameVersion.scala"
public final class coursier.params.rule.SameVersion$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/params/rule/SameVersion$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 7, attributes: 5
Constant pool:
    #1 = Utf8               coursier/params/rule/SameVersion$
    #2 = Class              #1            // coursier/params/rule/SameVersion$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               SameVersion.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               MODULE$
   #14 = Utf8               Lcoursier/params/rule/SameVersion$;
   #15 = Utf8               <clinit>
   #16 = Utf8               ()V
   #17 = Utf8               <init>
   #18 = NameAndType        #17:#16       // "<init>":()V
   #19 = Methodref          #2.#18        // coursier/params/rule/SameVersion$."<init>":()V
   #20 = NameAndType        #13:#14       // MODULE$:Lcoursier/params/rule/SameVersion$;
   #21 = Fieldref           #2.#20        // coursier/params/rule/SameVersion$.MODULE$:Lcoursier/params/rule/SameVersion$;
   #22 = Utf8               apply
   #23 = Utf8               (Lcoursier/core/Module;Lscala/collection/immutable/Seq;)Lcoursier/params/rule/SameVersion;
   #24 = Utf8               (Lcoursier/core/Module;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;)Lcoursier/params/rule/SameVersion;
   #25 = Utf8               module
   #26 = Utf8               other
   #27 = Utf8               scala/collection/immutable/Seq
   #28 = Class              #27           // scala/collection/immutable/Seq
   #29 = Utf8               toSet
   #30 = Utf8               ()Lscala/collection/immutable/Set;
   #31 = NameAndType        #29:#30       // toSet:()Lscala/collection/immutable/Set;
   #32 = InterfaceMethodref #28.#31       // scala/collection/immutable/Seq.toSet:()Lscala/collection/immutable/Set;
   #33 = Utf8               scala/collection/immutable/Set
   #34 = Class              #33           // scala/collection/immutable/Set
   #35 = Utf8               $plus
   #36 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/SetOps;
   #37 = NameAndType        #35:#36       // $plus:(Ljava/lang/Object;)Lscala/collection/immutable/SetOps;
   #38 = InterfaceMethodref #34.#37       // scala/collection/immutable/Set.$plus:(Ljava/lang/Object;)Lscala/collection/immutable/SetOps;
   #39 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #40 = MethodType         #39           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #41 = Utf8               $anonfun$apply$1
   #42 = Utf8               (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #43 = NameAndType        #41:#42       // $anonfun$apply$1:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #44 = Methodref          #2.#43        // coursier/params/rule/SameVersion$.$anonfun$apply$1:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #45 = MethodHandle       6:#44         // REF_invokeStatic coursier/params/rule/SameVersion$.$anonfun$apply$1:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #46 = MethodType         #42           //  (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #47 = Integer            5
   #48 = Integer            1
   #49 = Utf8               java/lang/invoke/LambdaMetafactory
   #50 = Class              #49           // java/lang/invoke/LambdaMetafactory
   #51 = Utf8               altMetafactory
   #52 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #53 = NameAndType        #51:#52       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #54 = Methodref          #50.#53       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #55 = MethodHandle       6:#54         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #56 = Utf8               ()Lscala/Function1;
   #57 = NameAndType        #22:#56       // apply:()Lscala/Function1;
   #58 = InvokeDynamic      #0:#57        // #0:apply:()Lscala/Function1;
   #59 = Utf8               scala/collection/immutable/SetOps
   #60 = Class              #59           // scala/collection/immutable/SetOps
   #61 = Utf8               map
   #62 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #63 = NameAndType        #61:#62       // map:(Lscala/Function1;)Ljava/lang/Object;
   #64 = InterfaceMethodref #60.#63       // scala/collection/immutable/SetOps.map:(Lscala/Function1;)Ljava/lang/Object;
   #65 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
   #66 = NameAndType        #22:#65       // apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
   #67 = Methodref          #2.#66        // coursier/params/rule/SameVersion$.apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
   #68 = Utf8               this
   #69 = Utf8               Lcoursier/core/Module;
   #70 = Utf8               Lscala/collection/immutable/Seq;
   #71 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/SameVersion;
   #72 = Utf8               matchers
   #73 = Utf8               coursier/params/rule/SameVersion
   #74 = Class              #73           // coursier/params/rule/SameVersion
   #75 = Utf8               (Lscala/collection/immutable/Set;)V
   #76 = NameAndType        #17:#75       // "<init>":(Lscala/collection/immutable/Set;)V
   #77 = Methodref          #74.#76       // coursier/params/rule/SameVersion."<init>":(Lscala/collection/immutable/Set;)V
   #78 = Utf8               Lscala/collection/immutable/Set;
   #79 = Utf8               writeReplace
   #80 = Utf8               ()Ljava/lang/Object;
   #81 = Utf8               scala/runtime/ModuleSerializationProxy
   #82 = Class              #81           // scala/runtime/ModuleSerializationProxy
   #83 = Utf8               (Ljava/lang/Class;)V
   #84 = NameAndType        #17:#83       // "<init>":(Ljava/lang/Class;)V
   #85 = Methodref          #82.#84       // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
   #86 = Utf8               x$8
   #87 = Utf8               coursier/util/ModuleMatcher$
   #88 = Class              #87           // coursier/util/ModuleMatcher$
   #89 = Utf8               Lcoursier/util/ModuleMatcher$;
   #90 = NameAndType        #13:#89       // MODULE$:Lcoursier/util/ModuleMatcher$;
   #91 = Fieldref           #88.#90       // coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
   #92 = NameAndType        #22:#42       // apply:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #93 = Methodref          #88.#92       // coursier/util/ModuleMatcher$.apply:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #94 = Methodref          #4.#18        // java/lang/Object."<init>":()V
   #95 = Utf8               $deserializeLambda$
   #96 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #97 = Utf8               scala/runtime/LambdaDeserialize
   #98 = Class              #97           // scala/runtime/LambdaDeserialize
   #99 = Utf8               bootstrap
  #100 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #101 = NameAndType        #99:#100      // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #102 = Methodref          #98.#101      // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #103 = MethodHandle       6:#102        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #104 = Utf8               lambdaDeserialize
  #105 = NameAndType        #104:#96      // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #106 = InvokeDynamic      #1:#105       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #107 = Utf8               Code
  #108 = Utf8               LineNumberTable
  #109 = Utf8               LocalVariableTable
  #110 = Utf8               Signature
  #111 = Utf8               MethodParameters
  #112 = Utf8               InnerClasses
  #113 = Utf8               SourceFile
  #114 = Utf8               BootstrapMethods
  #115 = Utf8               ScalaInlineInfo
  #116 = Utf8               Scala
{
  public static final coursier.params.rule.SameVersion$ MODULE$;
    descriptor: Lcoursier/params/rule/SameVersion$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/params/rule/SameVersion$
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #21                 // Field MODULE$:Lcoursier/params/rule/SameVersion$;
        10: return
      LineNumberTable:
        line 16: 0

  public coursier.params.rule.SameVersion apply(coursier.core.Module, scala.collection.immutable.Seq<coursier.core.Module>);
    descriptor: (Lcoursier/core/Module;Lscala/collection/immutable/Seq;)Lcoursier/params/rule/SameVersion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: invokeinterface #32,  1           // InterfaceMethod scala/collection/immutable/Seq.toSet:()Lscala/collection/immutable/Set;
         7: aload_1
         8: invokeinterface #38,  2           // InterfaceMethod scala/collection/immutable/Set.$plus:(Ljava/lang/Object;)Lscala/collection/immutable/SetOps;
        13: invokedynamic #58,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        18: invokeinterface #64,  2           // InterfaceMethod scala/collection/immutable/SetOps.map:(Lscala/Function1;)Ljava/lang/Object;
        23: checkcast     #34                 // class scala/collection/immutable/Set
        26: invokevirtual #67                 // Method apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
        29: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/params/rule/SameVersion$;
            0      30     1 module   Lcoursier/core/Module;
            0      30     2 other   Lscala/collection/immutable/Seq;
    Signature: #24                          // (Lcoursier/core/Module;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;)Lcoursier/params/rule/SameVersion;
    MethodParameters:
      Name                           Flags
      module                         final
      other                          final

  public coursier.params.rule.SameVersion apply(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #74                 // class coursier/params/rule/SameVersion
         3: dup
         4: aload_1
         5: invokespecial #77                 // Method coursier/params/rule/SameVersion."<init>":(Lscala/collection/immutable/Set;)V
         8: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/params/rule/SameVersion$;
            0       9     1 matchers   Lscala/collection/immutable/Set;
    Signature: #71                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/SameVersion;
    MethodParameters:
      Name                           Flags
      matchers                       final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #82                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/params/rule/SameVersion$
         6: invokespecial #85                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/SameVersion$;

  public static final coursier.util.ModuleMatcher $anonfun$apply$1(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #91                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
         3: aload_0
         4: invokevirtual #93                 // Method coursier/util/ModuleMatcher$.apply:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
         7: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$8   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      x$8                            final

  private coursier.params.rule.SameVersion$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #94                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 106: 0
        line 16: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/SameVersion$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #106,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "SameVersion.scala"
BootstrapMethods:
  0: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #40 (Ljava/lang/Object;)Ljava/lang/Object;
      #45 REF_invokeStatic coursier/params/rule/SameVersion$.$anonfun$apply$1:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
      #46 (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
      #47 5
      #48 1
      #46 (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
  1: #103 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #45 REF_invokeStatic coursier/params/rule/SameVersion$.$anonfun$apply$1:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 29 00 2A 01 00 11 00 10 01 00 16
   00 17 01 00 16 00 41 01 00 4F 00 50 01
  Scala: length = 0x0 (unknown attribute)

