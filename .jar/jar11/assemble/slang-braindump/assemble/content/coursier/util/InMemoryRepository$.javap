Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/util/InMemoryRepository$.class
  Last modified May 29, 2022; size 9640 bytes
  SHA-256 checksum f68a0b091e207d4ac511043457f597e719a1abff1136324604f4d8c22ac4b17d
  Compiled from "InMemoryRepository.scala"
public final class coursier.util.InMemoryRepository$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/util/InMemoryRepository$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 27, attributes: 5
Constant pool:
    #1 = Utf8               coursier/util/InMemoryRepository$
    #2 = Class              #1            // coursier/util/InMemoryRepository$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               InMemoryRepository.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               MODULE$
   #14 = Utf8               Lcoursier/util/InMemoryRepository$;
   #15 = Utf8               <clinit>
   #16 = Utf8               ()V
   #17 = Utf8               <init>
   #18 = NameAndType        #17:#16       // "<init>":()V
   #19 = Methodref          #2.#18        // coursier/util/InMemoryRepository$."<init>":()V
   #20 = NameAndType        #13:#14       // MODULE$:Lcoursier/util/InMemoryRepository$;
   #21 = Fieldref           #2.#20        // coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
   #22 = Utf8               exists
   #23 = Utf8               (Ljava/net/URL;Z)Z
   #24 = Utf8               url
   #25 = Utf8               localArtifactsShouldBeCached
   #26 = Utf8               scala/None$
   #27 = Class              #26           // scala/None$
   #28 = Utf8               Lscala/None$;
   #29 = NameAndType        #13:#28       // MODULE$:Lscala/None$;
   #30 = Fieldref           #27.#29       // scala/None$.MODULE$:Lscala/None$;
   #31 = Utf8               (Ljava/net/URL;ZLscala/Option;)Z
   #32 = NameAndType        #22:#31       // exists:(Ljava/net/URL;ZLscala/Option;)Z
   #33 = Methodref          #2.#32        // coursier/util/InMemoryRepository$.exists:(Ljava/net/URL;ZLscala/Option;)Z
   #34 = Utf8               this
   #35 = Utf8               Ljava/net/URL;
   #36 = Utf8               Z
   #37 = Utf8               (Ljava/net/URL;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Z
   #38 = Utf8               cacheOpt
   #39 = Utf8               java/net/URL
   #40 = Class              #39           // java/net/URL
   #41 = Utf8               getProtocol
   #42 = Utf8               ()Ljava/lang/String;
   #43 = NameAndType        #41:#42       // getProtocol:()Ljava/lang/String;
   #44 = Methodref          #40.#43       // java/net/URL.getProtocol:()Ljava/lang/String;
   #45 = Utf8               java/lang/String
   #46 = Class              #45           // java/lang/String
   #47 = Utf8               hashCode
   #48 = Utf8               ()I
   #49 = NameAndType        #47:#48       // hashCode:()I
   #50 = Methodref          #46.#49       // java/lang/String.hashCode:()I
   #51 = Utf8               file
   #52 = String             #51           // file
   #53 = Utf8               equals
   #54 = Utf8               (Ljava/lang/Object;)Z
   #55 = NameAndType        #53:#54       // equals:(Ljava/lang/Object;)Z
   #56 = Methodref          #46.#55       // java/lang/String.equals:(Ljava/lang/Object;)Z
   #57 = Utf8               http
   #58 = String             #57           // http
   #59 = Utf8               https
   #60 = String             #59           // https
   #61 = Utf8               ifFile$1
   #62 = Utf8               (ZLjava/net/URL;Lscala/Option;)Lscala/Option;
   #63 = NameAndType        #61:#62       // ifFile$1:(ZLjava/net/URL;Lscala/Option;)Lscala/Option;
   #64 = Methodref          #2.#63        // coursier/util/InMemoryRepository$.ifFile$1:(ZLjava/net/URL;Lscala/Option;)Lscala/Option;
   #65 = Utf8               ifHttp$1
   #66 = Utf8               (Ljava/net/URL;Lscala/Option;)Lscala/Option;
   #67 = NameAndType        #65:#66       // ifHttp$1:(Ljava/net/URL;Lscala/Option;)Lscala/Option;
   #68 = Methodref          #2.#67        // coursier/util/InMemoryRepository$.ifHttp$1:(Ljava/net/URL;Lscala/Option;)Lscala/Option;
   #69 = Utf8               scala/Option
   #70 = Class              #69           // scala/Option
   #71 = Utf8               ()Z
   #72 = MethodType         #71           //  ()Z
   #73 = Utf8               $anonfun$exists$10
   #74 = Utf8               (Ljava/net/URL;)Z
   #75 = NameAndType        #73:#74       // $anonfun$exists$10:(Ljava/net/URL;)Z
   #76 = Methodref          #2.#75        // coursier/util/InMemoryRepository$.$anonfun$exists$10:(Ljava/net/URL;)Z
   #77 = MethodHandle       6:#76         // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$10:(Ljava/net/URL;)Z
   #78 = Integer            1
   #79 = Utf8               java/lang/invoke/LambdaMetafactory
   #80 = Class              #79           // java/lang/invoke/LambdaMetafactory
   #81 = Utf8               altMetafactory
   #82 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = NameAndType        #81:#82       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #84 = Methodref          #80.#83       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #85 = MethodHandle       6:#84         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #86 = Utf8               apply$mcZ$sp
   #87 = Utf8               (Ljava/net/URL;)Lscala/runtime/java8/JFunction0$mcZ$sp;
   #88 = NameAndType        #86:#87       // apply$mcZ$sp:(Ljava/net/URL;)Lscala/runtime/java8/JFunction0$mcZ$sp;
   #89 = InvokeDynamic      #0:#88        // #0:apply$mcZ$sp:(Ljava/net/URL;)Lscala/runtime/java8/JFunction0$mcZ$sp;
   #90 = Utf8               getOrElse
   #91 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #92 = NameAndType        #90:#91       // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #93 = Methodref          #70.#92       // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #94 = Utf8               scala/runtime/BoxesRunTime
   #95 = Class              #94           // scala/runtime/BoxesRunTime
   #96 = Utf8               unboxToBoolean
   #97 = NameAndType        #96:#54       // unboxToBoolean:(Ljava/lang/Object;)Z
   #98 = Methodref          #95.#97       // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   #99 = Utf8               protocolSpecificAttemptOpt
  #100 = Utf8               Lscala/Option;
  #101 = Utf8               apply
  #102 = Utf8               (Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
  #103 = Utf8               (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;)Lcoursier/util/InMemoryRepository;
  #104 = Utf8               fallbacks
  #105 = Utf8               privateApply
  #106 = NameAndType        #105:#102     // privateApply:(Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
  #107 = Methodref          #2.#106       // coursier/util/InMemoryRepository$.privateApply:(Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
  #108 = Utf8               Lscala/collection/immutable/Map;
  #109 = Utf8               coursier/util/InMemoryRepository
  #110 = Class              #109          // coursier/util/InMemoryRepository
  #111 = Utf8               (Lscala/collection/immutable/Map;ZLscala/Option;)V
  #112 = NameAndType        #17:#111      // "<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
  #113 = Methodref          #110.#112     // coursier/util/InMemoryRepository."<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
  #114 = Utf8               (Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
  #115 = Utf8               (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Z)Lcoursier/util/InMemoryRepository;
  #116 = NameAndType        #105:#114     // privateApply:(Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
  #117 = Methodref          #2.#116       // coursier/util/InMemoryRepository$.privateApply:(Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
  #118 = Utf8               (Lscala/collection/immutable/Map;Lcoursier/cache/FileCache;)Lcoursier/util/InMemoryRepository;
  #119 = Utf8               <F:Ljava/lang/Object;>(Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Lcoursier/cache/FileCache<TF;>;)Lcoursier/util/InMemoryRepository;
  #120 = Utf8               cache
  #121 = Utf8               coursier/cache/FileCache
  #122 = Class              #121          // coursier/cache/FileCache
  #123 = NameAndType        #25:#71       // localArtifactsShouldBeCached:()Z
  #124 = Methodref          #122.#123     // coursier/cache/FileCache.localArtifactsShouldBeCached:()Z
  #125 = Utf8               scala/Some
  #126 = Class              #125          // scala/Some
  #127 = Utf8               (Ljava/lang/Object;)V
  #128 = NameAndType        #17:#127      // "<init>":(Ljava/lang/Object;)V
  #129 = Methodref          #126.#128     // scala/Some."<init>":(Ljava/lang/Object;)V
  #130 = Utf8               Lcoursier/cache/FileCache;
  #131 = Utf8               (Lscala/collection/immutable/Map;ZLscala/Option;)Lcoursier/util/InMemoryRepository;
  #132 = Utf8               (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Lcoursier/util/InMemoryRepository;
  #133 = Utf8               writeReplace
  #134 = Utf8               ()Ljava/lang/Object;
  #135 = Utf8               scala/runtime/ModuleSerializationProxy
  #136 = Class              #135          // scala/runtime/ModuleSerializationProxy
  #137 = Utf8               (Ljava/lang/Class;)V
  #138 = NameAndType        #17:#137      // "<init>":(Ljava/lang/Class;)V
  #139 = Methodref          #136.#138     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #140 = Utf8               $anonfun$exists$1
  #141 = Utf8               ()Ljava/io/File;
  #142 = Utf8               coursier/cache/CacheDefaults$
  #143 = Class              #142          // coursier/cache/CacheDefaults$
  #144 = Utf8               Lcoursier/cache/CacheDefaults$;
  #145 = NameAndType        #13:#144      // MODULE$:Lcoursier/cache/CacheDefaults$;
  #146 = Fieldref           #143.#145     // coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
  #147 = Utf8               location
  #148 = NameAndType        #147:#141     // location:()Ljava/io/File;
  #149 = Methodref          #143.#148     // coursier/cache/CacheDefaults$.location:()Ljava/io/File;
  #150 = Utf8               $anonfun$exists$2
  #151 = Utf8               (Lcoursier/cache/FileCache;)Ljava/io/File;
  #152 = Utf8               x$1
  #153 = Methodref          #122.#148     // coursier/cache/FileCache.location:()Ljava/io/File;
  #154 = Utf8               localArtifactsShouldBeCached$1
  #155 = Utf8               url$1
  #156 = Utf8               cacheOpt$1
  #157 = Utf8               java/io/File
  #158 = Class              #157          // java/io/File
  #159 = Utf8               toURI
  #160 = Utf8               ()Ljava/net/URI;
  #161 = NameAndType        #159:#160     // toURI:()Ljava/net/URI;
  #162 = Methodref          #40.#161      // java/net/URL.toURI:()Ljava/net/URI;
  #163 = Utf8               (Ljava/net/URI;)V
  #164 = NameAndType        #17:#163      // "<init>":(Ljava/net/URI;)V
  #165 = Methodref          #158.#164     // java/io/File."<init>":(Ljava/net/URI;)V
  #166 = NameAndType        #22:#71       // exists:()Z
  #167 = Methodref          #158.#166     // java/io/File.exists:()Z
  #168 = MethodType         #134          //  ()Ljava/lang/Object;
  #169 = NameAndType        #140:#141     // $anonfun$exists$1:()Ljava/io/File;
  #170 = Methodref          #2.#169       // coursier/util/InMemoryRepository$.$anonfun$exists$1:()Ljava/io/File;
  #171 = MethodHandle       6:#170        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$1:()Ljava/io/File;
  #172 = MethodType         #141          //  ()Ljava/io/File;
  #173 = Integer            5
  #174 = Utf8               ()Lscala/Function0;
  #175 = NameAndType        #101:#174     // apply:()Lscala/Function0;
  #176 = InvokeDynamic      #1:#175       // #1:apply:()Lscala/Function0;
  #177 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #178 = MethodType         #177          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #179 = NameAndType        #150:#151     // $anonfun$exists$2:(Lcoursier/cache/FileCache;)Ljava/io/File;
  #180 = Methodref          #2.#179       // coursier/util/InMemoryRepository$.$anonfun$exists$2:(Lcoursier/cache/FileCache;)Ljava/io/File;
  #181 = MethodHandle       6:#180        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$2:(Lcoursier/cache/FileCache;)Ljava/io/File;
  #182 = MethodType         #151          //  (Lcoursier/cache/FileCache;)Ljava/io/File;
  #183 = Utf8               ()Lscala/Function1;
  #184 = NameAndType        #101:#183     // apply:()Lscala/Function1;
  #185 = InvokeDynamic      #2:#184       // #2:apply:()Lscala/Function1;
  #186 = Utf8               fold
  #187 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #188 = NameAndType        #186:#187     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #189 = Methodref          #70.#188      // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #190 = Utf8               java/lang/StringBuilder
  #191 = Class              #190          // java/lang/StringBuilder
  #192 = Utf8               (I)V
  #193 = NameAndType        #17:#192      // "<init>":(I)V
  #194 = Methodref          #191.#193     // java/lang/StringBuilder."<init>":(I)V
  #195 = Utf8               file/
  #196 = String             #195          // file/
  #197 = Utf8               append
  #198 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #199 = NameAndType        #197:#198     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #200 = Methodref          #191.#199     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #201 = Utf8               getPath
  #202 = NameAndType        #201:#42      // getPath:()Ljava/lang/String;
  #203 = Methodref          #40.#202      // java/net/URL.getPath:()Ljava/lang/String;
  #204 = Utf8               toString
  #205 = NameAndType        #204:#42      // toString:()Ljava/lang/String;
  #206 = Methodref          #191.#205     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #207 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
  #208 = NameAndType        #17:#207      // "<init>":(Ljava/io/File;Ljava/lang/String;)V
  #209 = Methodref          #158.#208     // java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
  #210 = Utf8               boxToBoolean
  #211 = Utf8               (Z)Ljava/lang/Boolean;
  #212 = NameAndType        #210:#211     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #213 = Methodref          #95.#212      // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #214 = Utf8               cachePath
  #215 = Utf8               Ljava/io/File;
  #216 = Utf8               $anonfun$exists$3
  #217 = Utf8               $anonfun$exists$4
  #218 = Utf8               (Lcoursier/cache/FileCache;)Z
  #219 = Utf8               x$2
  #220 = Utf8               followHttpToHttpsRedirections
  #221 = NameAndType        #220:#71      // followHttpToHttpsRedirections:()Z
  #222 = Methodref          #122.#221     // coursier/cache/FileCache.followHttpToHttpsRedirections:()Z
  #223 = Utf8               $anonfun$exists$5
  #224 = Utf8               $anonfun$exists$6
  #225 = Utf8               x$3
  #226 = Utf8               followHttpsToHttpRedirections
  #227 = NameAndType        #226:#71      // followHttpsToHttpRedirections:()Z
  #228 = Methodref          #122.#227     // coursier/cache/FileCache.followHttpsToHttpRedirections:()Z
  #229 = Utf8               $anonfun$exists$7
  #230 = Utf8               (Lcoursier/cache/FileCache;)Lscala/Option;
  #231 = Utf8               x$4
  #232 = Utf8               sslSocketFactoryOpt
  #233 = Utf8               ()Lscala/Option;
  #234 = NameAndType        #232:#233     // sslSocketFactoryOpt:()Lscala/Option;
  #235 = Methodref          #122.#234     // coursier/cache/FileCache.sslSocketFactoryOpt:()Lscala/Option;
  #236 = Utf8               $anonfun$exists$8
  #237 = Utf8               x$5
  #238 = Utf8               hostnameVerifierOpt
  #239 = NameAndType        #238:#233     // hostnameVerifierOpt:()Lscala/Option;
  #240 = Methodref          #122.#239     // coursier/cache/FileCache.hostnameVerifierOpt:()Lscala/Option;
  #241 = Utf8               $anonfun$exists$9
  #242 = Utf8               x$6
  #243 = Utf8               maxRedirections
  #244 = NameAndType        #243:#233     // maxRedirections:()Lscala/Option;
  #245 = Methodref          #122.#244     // coursier/cache/FileCache.maxRedirections:()Lscala/Option;
  #246 = Utf8               java/io/FileNotFoundException
  #247 = Class              #246          // java/io/FileNotFoundException
  #248 = Utf8               java/io/IOException
  #249 = Class              #248          // java/io/IOException
  #250 = Utf8               coursier/cache/ConnectionBuilder$
  #251 = Class              #250          // coursier/cache/ConnectionBuilder$
  #252 = Utf8               Lcoursier/cache/ConnectionBuilder$;
  #253 = NameAndType        #13:#252      // MODULE$:Lcoursier/cache/ConnectionBuilder$;
  #254 = Fieldref           #251.#253     // coursier/cache/ConnectionBuilder$.MODULE$:Lcoursier/cache/ConnectionBuilder$;
  #255 = Methodref          #40.#205      // java/net/URL.toString:()Ljava/lang/String;
  #256 = Utf8               (Ljava/lang/String;)Lcoursier/cache/ConnectionBuilder;
  #257 = NameAndType        #101:#256     // apply:(Ljava/lang/String;)Lcoursier/cache/ConnectionBuilder;
  #258 = Methodref          #251.#257     // coursier/cache/ConnectionBuilder$.apply:(Ljava/lang/String;)Lcoursier/cache/ConnectionBuilder;
  #259 = NameAndType        #216:#71      // $anonfun$exists$3:()Z
  #260 = Methodref          #2.#259       // coursier/util/InMemoryRepository$.$anonfun$exists$3:()Z
  #261 = MethodHandle       6:#260        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$3:()Z
  #262 = Utf8               ()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #263 = NameAndType        #86:#262      // apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #264 = InvokeDynamic      #3:#263       // #3:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #265 = Utf8               $anonfun$exists$4$adapted
  #266 = Utf8               (Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #267 = NameAndType        #265:#266     // $anonfun$exists$4$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #268 = Methodref          #2.#267       // coursier/util/InMemoryRepository$.$anonfun$exists$4$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #269 = MethodHandle       6:#268        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$4$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #270 = MethodType         #266          //  (Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #271 = InvokeDynamic      #4:#184       // #4:apply:()Lscala/Function1;
  #272 = Utf8               coursier/cache/ConnectionBuilder
  #273 = Class              #272          // coursier/cache/ConnectionBuilder
  #274 = Utf8               withFollowHttpToHttpsRedirections
  #275 = Utf8               (Z)Lcoursier/cache/ConnectionBuilder;
  #276 = NameAndType        #274:#275     // withFollowHttpToHttpsRedirections:(Z)Lcoursier/cache/ConnectionBuilder;
  #277 = Methodref          #273.#276     // coursier/cache/ConnectionBuilder.withFollowHttpToHttpsRedirections:(Z)Lcoursier/cache/ConnectionBuilder;
  #278 = NameAndType        #223:#71      // $anonfun$exists$5:()Z
  #279 = Methodref          #2.#278       // coursier/util/InMemoryRepository$.$anonfun$exists$5:()Z
  #280 = MethodHandle       6:#279        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$5:()Z
  #281 = InvokeDynamic      #5:#263       // #5:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #282 = Utf8               $anonfun$exists$6$adapted
  #283 = NameAndType        #282:#266     // $anonfun$exists$6$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #284 = Methodref          #2.#283       // coursier/util/InMemoryRepository$.$anonfun$exists$6$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #285 = MethodHandle       6:#284        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$6$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
  #286 = InvokeDynamic      #6:#184       // #6:apply:()Lscala/Function1;
  #287 = Utf8               withFollowHttpsToHttpRedirections
  #288 = NameAndType        #287:#275     // withFollowHttpsToHttpRedirections:(Z)Lcoursier/cache/ConnectionBuilder;
  #289 = Methodref          #273.#288     // coursier/cache/ConnectionBuilder.withFollowHttpsToHttpRedirections:(Z)Lcoursier/cache/ConnectionBuilder;
  #290 = NameAndType        #229:#230     // $anonfun$exists$7:(Lcoursier/cache/FileCache;)Lscala/Option;
  #291 = Methodref          #2.#290       // coursier/util/InMemoryRepository$.$anonfun$exists$7:(Lcoursier/cache/FileCache;)Lscala/Option;
  #292 = MethodHandle       6:#291        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$7:(Lcoursier/cache/FileCache;)Lscala/Option;
  #293 = MethodType         #230          //  (Lcoursier/cache/FileCache;)Lscala/Option;
  #294 = InvokeDynamic      #7:#184       // #7:apply:()Lscala/Function1;
  #295 = Utf8               flatMap
  #296 = Utf8               (Lscala/Function1;)Lscala/Option;
  #297 = NameAndType        #295:#296     // flatMap:(Lscala/Function1;)Lscala/Option;
  #298 = Methodref          #70.#297      // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
  #299 = Utf8               withSslSocketFactoryOpt
  #300 = Utf8               (Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
  #301 = NameAndType        #299:#300     // withSslSocketFactoryOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
  #302 = Methodref          #273.#301     // coursier/cache/ConnectionBuilder.withSslSocketFactoryOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
  #303 = NameAndType        #236:#230     // $anonfun$exists$8:(Lcoursier/cache/FileCache;)Lscala/Option;
  #304 = Methodref          #2.#303       // coursier/util/InMemoryRepository$.$anonfun$exists$8:(Lcoursier/cache/FileCache;)Lscala/Option;
  #305 = MethodHandle       6:#304        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$8:(Lcoursier/cache/FileCache;)Lscala/Option;
  #306 = InvokeDynamic      #8:#184       // #8:apply:()Lscala/Function1;
  #307 = Utf8               withHostnameVerifierOpt
  #308 = NameAndType        #307:#300     // withHostnameVerifierOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
  #309 = Methodref          #273.#308     // coursier/cache/ConnectionBuilder.withHostnameVerifierOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
  #310 = Utf8               HEAD
  #311 = String             #310          // HEAD
  #312 = Utf8               withMethod
  #313 = NameAndType        #312:#256     // withMethod:(Ljava/lang/String;)Lcoursier/cache/ConnectionBuilder;
  #314 = Methodref          #273.#313     // coursier/cache/ConnectionBuilder.withMethod:(Ljava/lang/String;)Lcoursier/cache/ConnectionBuilder;
  #315 = NameAndType        #241:#230     // $anonfun$exists$9:(Lcoursier/cache/FileCache;)Lscala/Option;
  #316 = Methodref          #2.#315       // coursier/util/InMemoryRepository$.$anonfun$exists$9:(Lcoursier/cache/FileCache;)Lscala/Option;
  #317 = MethodHandle       6:#316        // REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$9:(Lcoursier/cache/FileCache;)Lscala/Option;
  #318 = InvokeDynamic      #9:#184       // #9:apply:()Lscala/Function1;
  #319 = Utf8               withMaxRedirectionsOpt
  #320 = NameAndType        #319:#300     // withMaxRedirectionsOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
  #321 = Methodref          #273.#320     // coursier/cache/ConnectionBuilder.withMaxRedirectionsOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
  #322 = Utf8               connection
  #323 = Utf8               ()Ljava/net/URLConnection;
  #324 = NameAndType        #322:#323     // connection:()Ljava/net/URLConnection;
  #325 = Methodref          #273.#324     // coursier/cache/ConnectionBuilder.connection:()Ljava/net/URLConnection;
  #326 = Utf8               java/net/URLConnection
  #327 = Class              #326          // java/net/URLConnection
  #328 = Utf8               getInputStream
  #329 = Utf8               ()Ljava/io/InputStream;
  #330 = NameAndType        #328:#329     // getInputStream:()Ljava/io/InputStream;
  #331 = Methodref          #327.#330     // java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
  #332 = Utf8               java/io/InputStream
  #333 = Class              #332          // java/io/InputStream
  #334 = Utf8               close
  #335 = NameAndType        #334:#16      // close:()V
  #336 = Methodref          #333.#335     // java/io/InputStream.close:()V
  #337 = Utf8               java/lang/Throwable
  #338 = Class              #337          // java/lang/Throwable
  #339 = Utf8               coursier/cache/CacheUrl$
  #340 = Class              #339          // coursier/cache/CacheUrl$
  #341 = Utf8               Lcoursier/cache/CacheUrl$;
  #342 = NameAndType        #13:#341      // MODULE$:Lcoursier/cache/CacheUrl$;
  #343 = Fieldref           #340.#342     // coursier/cache/CacheUrl$.MODULE$:Lcoursier/cache/CacheUrl$;
  #344 = Utf8               closeConn
  #345 = Utf8               (Ljava/net/URLConnection;)V
  #346 = NameAndType        #344:#345     // closeConn:(Ljava/net/URLConnection;)V
  #347 = Methodref          #340.#346     // coursier/cache/CacheUrl$.closeConn:(Ljava/net/URLConnection;)V
  #348 = Utf8               conn
  #349 = Utf8               Ljava/net/URLConnection;
  #350 = Utf8               genericAttempt$1
  #351 = Utf8               openConnection
  #352 = NameAndType        #351:#323     // openConnection:()Ljava/net/URLConnection;
  #353 = Methodref          #40.#352      // java/net/URL.openConnection:()Ljava/net/URLConnection;
  #354 = NameAndType        #350:#74      // genericAttempt$1:(Ljava/net/URL;)Z
  #355 = Methodref          #2.#354       // coursier/util/InMemoryRepository$.genericAttempt$1:(Ljava/net/URL;)Z
  #356 = Methodref          #4.#18        // java/lang/Object."<init>":()V
  #357 = NameAndType        #217:#218     // $anonfun$exists$4:(Lcoursier/cache/FileCache;)Z
  #358 = Methodref          #2.#357       // coursier/util/InMemoryRepository$.$anonfun$exists$4:(Lcoursier/cache/FileCache;)Z
  #359 = NameAndType        #224:#218     // $anonfun$exists$6:(Lcoursier/cache/FileCache;)Z
  #360 = Methodref          #2.#359       // coursier/util/InMemoryRepository$.$anonfun$exists$6:(Lcoursier/cache/FileCache;)Z
  #361 = Utf8               $deserializeLambda$
  #362 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #363 = Utf8               scala/runtime/LambdaDeserialize
  #364 = Class              #363          // scala/runtime/LambdaDeserialize
  #365 = Utf8               bootstrap
  #366 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #367 = NameAndType        #365:#366     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #368 = Methodref          #364.#367     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #369 = MethodHandle       6:#368        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #370 = Utf8               lambdaDeserialize
  #371 = NameAndType        #370:#362     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #372 = InvokeDynamic      #10:#371      // #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #373 = Utf8               Code
  #374 = Utf8               LineNumberTable
  #375 = Utf8               LocalVariableTable
  #376 = Utf8               Deprecated
  #377 = Utf8               MethodParameters
  #378 = Utf8               StackMapTable
  #379 = Utf8               Signature
  #380 = Utf8               InnerClasses
  #381 = Utf8               SourceFile
  #382 = Utf8               BootstrapMethods
  #383 = Utf8               ScalaInlineInfo
  #384 = Utf8               Scala
{
  public static final coursier.util.InMemoryRepository$ MODULE$;
    descriptor: Lcoursier/util/InMemoryRepository$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/util/InMemoryRepository$
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #21                 // Field MODULE$:Lcoursier/util/InMemoryRepository$;
        10: return
      LineNumberTable:
        line 133: 0

  public boolean exists(java.net.URL, boolean);
    descriptor: (Ljava/net/URL;Z)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: getstatic     #30                 // Field scala/None$.MODULE$:Lscala/None$;
         6: invokevirtual #33                 // Method exists:(Ljava/net/URL;ZLscala/Option;)Z
         9: ireturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/util/InMemoryRepository$;
            0      10     1   url   Ljava/net/URL;
            0      10     2 localArtifactsShouldBeCached   Z
    Deprecated: true
    MethodParameters:
      Name                           Flags
      url                            final
      localArtifactsShouldBeCached   final

  public boolean exists(java.net.URL, boolean, scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>>);
    descriptor: (Ljava/net/URL;ZLscala/Option;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=4
         0: aload_1
         1: invokevirtual #44                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
         4: astore        6
         6: aload         6
         8: ifnonnull     15
        11: iconst_0
        12: goto          20
        15: aload         6
        17: invokevirtual #50                 // Method java/lang/String.hashCode:()I
        20: lookupswitch  { // 3
                 3143036: 56
                 3213448: 72
                99617003: 88
                 default: 104
            }
        56: ldc           #52                 // String file
        58: aload         6
        60: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        63: ifeq          69
        66: goto          107
        69: goto          128
        72: ldc           #58                 // String http
        74: aload         6
        76: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        79: ifeq          85
        82: goto          118
        85: goto          128
        88: ldc           #60                 // String https
        90: aload         6
        92: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        95: ifeq          101
        98: goto          118
       101: goto          128
       104: goto          128
       107: iload_2
       108: aload_1
       109: aload_3
       110: invokestatic  #64                 // Method ifFile$1:(ZLjava/net/URL;Lscala/Option;)Lscala/Option;
       113: astore        4
       115: goto          136
       118: aload_1
       119: aload_3
       120: invokestatic  #68                 // Method ifHttp$1:(Ljava/net/URL;Lscala/Option;)Lscala/Option;
       123: astore        4
       125: goto          136
       128: getstatic     #30                 // Field scala/None$.MODULE$:Lscala/None$;
       131: astore        4
       133: goto          136
       136: aload         4
       138: astore        5
       140: aload         5
       142: aload_1
       143: invokedynamic #89,  0             // InvokeDynamic #0:apply$mcZ$sp:(Ljava/net/URL;)Lscala/runtime/java8/JFunction0$mcZ$sp;
       148: invokevirtual #93                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       151: invokestatic  #98                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       154: ireturn
      StackMapTable: number_of_entries = 13
        frame_type = 254 /* append */
          offset_delta = 15
          locals = [ top, top, class java/lang/String ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 35 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 2 /* same */
        frame_type = 10 /* same */
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class coursier/util/InMemoryRepository$, class java/net/URL, int, class scala/Option, class scala/Option, top, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 69: 0
        line 70: 56
        line 69: 69
        line 70: 107
        line 71: 118
        line 72: 128
        line 69: 136
        line 93: 140
        line 94: 142
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          140      14     5 protocolSpecificAttemptOpt   Lscala/Option;
            0     155     0  this   Lcoursier/util/InMemoryRepository$;
            0     155     1   url   Ljava/net/URL;
            0     155     2 localArtifactsShouldBeCached   Z
            0     155     3 cacheOpt   Lscala/Option;
    Signature: #37                          // (Ljava/net/URL;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Z
    MethodParameters:
      Name                           Flags
      url                            final
      localArtifactsShouldBeCached   final
      cacheOpt                       final

  public coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>);
    descriptor: (Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #107                // Method privateApply:(Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
         5: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/util/InMemoryRepository$;
            0       6     1 fallbacks   Lscala/collection/immutable/Map;
    Signature: #103                         // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;)Lcoursier/util/InMemoryRepository;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      fallbacks                      final

  public coursier.util.InMemoryRepository privateApply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>);
    descriptor: (Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #110                // class coursier/util/InMemoryRepository
         3: dup
         4: aload_1
         5: iconst_0
         6: getstatic     #30                 // Field scala/None$.MODULE$:Lscala/None$;
         9: invokespecial #113                // Method coursier/util/InMemoryRepository."<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
        12: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/util/InMemoryRepository$;
            0      13     1 fallbacks   Lscala/collection/immutable/Map;
    Signature: #103                         // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      fallbacks                      final

  public coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, boolean);
    descriptor: (Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokevirtual #117                // Method privateApply:(Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
         6: areturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/util/InMemoryRepository$;
            0       7     1 fallbacks   Lscala/collection/immutable/Map;
            0       7     2 localArtifactsShouldBeCached   Z
    Signature: #115                         // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Z)Lcoursier/util/InMemoryRepository;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      localArtifactsShouldBeCached   final

  public coursier.util.InMemoryRepository privateApply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, boolean);
    descriptor: (Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #110                // class coursier/util/InMemoryRepository
         3: dup
         4: aload_1
         5: iload_2
         6: getstatic     #30                 // Field scala/None$.MODULE$:Lscala/None$;
         9: invokespecial #113                // Method coursier/util/InMemoryRepository."<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
        12: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/util/InMemoryRepository$;
            0      13     1 fallbacks   Lscala/collection/immutable/Map;
            0      13     2 localArtifactsShouldBeCached   Z
    Signature: #115                         // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Z)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      localArtifactsShouldBeCached   final

  public <F extends java.lang.Object> coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, coursier.cache.FileCache<F>);
    descriptor: (Lscala/collection/immutable/Map;Lcoursier/cache/FileCache;)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=3
         0: new           #110                // class coursier/util/InMemoryRepository
         3: dup
         4: aload_1
         5: aload_2
         6: invokevirtual #124                // Method coursier/cache/FileCache.localArtifactsShouldBeCached:()Z
         9: new           #126                // class scala/Some
        12: dup
        13: aload_2
        14: invokespecial #129                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        17: invokespecial #113                // Method coursier/util/InMemoryRepository."<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
        20: areturn
      LineNumberTable:
        line 125: 0
        line 126: 4
        line 127: 5
        line 128: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/util/InMemoryRepository$;
            0      21     1 fallbacks   Lscala/collection/immutable/Map;
            0      21     2 cache   Lcoursier/cache/FileCache;
    Signature: #119                         // <F:Ljava/lang/Object;>(Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Lcoursier/cache/FileCache<TF;>;)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      cache                          final

  public coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, boolean, scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>>);
    descriptor: (Lscala/collection/immutable/Map;ZLscala/Option;)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #110                // class coursier/util/InMemoryRepository
         3: dup
         4: aload_1
         5: iload_2
         6: aload_3
         7: invokespecial #113                // Method coursier/util/InMemoryRepository."<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
        10: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcoursier/util/InMemoryRepository$;
            0      11     1 fallbacks   Lscala/collection/immutable/Map;
            0      11     2 localArtifactsShouldBeCached   Z
            0      11     3 cacheOpt   Lscala/Option;
    Signature: #132                         // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      localArtifactsShouldBeCached   final
      cacheOpt                       final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #136                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/util/InMemoryRepository$
         6: invokespecial #139                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/util/InMemoryRepository$;

  public static final java.io.File $anonfun$exists$1();
    descriptor: ()Ljava/io/File;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #146                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
         3: invokevirtual #149                // Method coursier/cache/CacheDefaults$.location:()Ljava/io/File;
         6: areturn
      LineNumberTable:
        line 33: 0

  public static final java.io.File $anonfun$exists$2(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Ljava/io/File;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #153                // Method coursier/cache/FileCache.location:()Ljava/io/File;
         4: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static final scala.Option ifFile$1(boolean, java.net.URL, scala.Option);
    descriptor: (ZLjava/net/URL;Lscala/Option;)Lscala/Option;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=8, locals=4, args_size=3
         0: iload_0
         1: ifeq          87
         4: new           #158                // class java/io/File
         7: dup
         8: aload_1
         9: invokevirtual #162                // Method java/net/URL.toURI:()Ljava/net/URI;
        12: invokespecial #165                // Method java/io/File."<init>":(Ljava/net/URI;)V
        15: invokevirtual #167                // Method java/io/File.exists:()Z
        18: ifne          87
        21: aload_2
        22: invokedynamic #176,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        27: invokedynamic #185,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        32: invokevirtual #189                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        35: checkcast     #158                // class java/io/File
        38: astore_3
        39: new           #126                // class scala/Some
        42: dup
        43: new           #158                // class java/io/File
        46: dup
        47: aload_3
        48: new           #191                // class java/lang/StringBuilder
        51: dup
        52: ldc           #173                // int 5
        54: invokespecial #194                // Method java/lang/StringBuilder."<init>":(I)V
        57: ldc           #196                // String file/
        59: invokevirtual #200                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: aload_1
        63: invokevirtual #203                // Method java/net/URL.getPath:()Ljava/lang/String;
        66: invokevirtual #200                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        69: invokevirtual #206                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        72: invokespecial #209                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
        75: invokevirtual #167                // Method java/io/File.exists:()Z
        78: invokestatic  #213                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        81: invokespecial #129                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        84: goto          111
        87: new           #126                // class scala/Some
        90: dup
        91: new           #158                // class java/io/File
        94: dup
        95: aload_1
        96: invokevirtual #162                // Method java/net/URL.toURI:()Ljava/net/URI;
        99: invokespecial #165                // Method java/io/File."<init>":(Ljava/net/URI;)V
       102: invokevirtual #167                // Method java/io/File.exists:()Z
       105: invokestatic  #213                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       108: invokespecial #129                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       111: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 87
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class scala/Some ]
      LineNumberTable:
        line 32: 0
        line 33: 21
        line 35: 39
        line 37: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      45     3 cachePath   Ljava/io/File;
            0     112     0 localArtifactsShouldBeCached$1   Z
            0     112     1 url$1   Ljava/net/URL;
            0     112     2 cacheOpt$1   Lscala/Option;
    MethodParameters:
      Name                           Flags
      localArtifactsShouldBeCached$1 final
      url$1                          final
      cacheOpt$1                     final

  public static final boolean $anonfun$exists$3();
    descriptor: ()Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 47: 0

  public static final boolean $anonfun$exists$4(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #222                // Method coursier/cache/FileCache.followHttpToHttpsRedirections:()Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final boolean $anonfun$exists$5();
    descriptor: ()Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 48: 0

  public static final boolean $anonfun$exists$6(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #228                // Method coursier/cache/FileCache.followHttpsToHttpRedirections:()Z
         4: ireturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$3   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final scala.Option $anonfun$exists$7(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #235                // Method coursier/cache/FileCache.sslSocketFactoryOpt:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final scala.Option $anonfun$exists$8(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #240                // Method coursier/cache/FileCache.hostnameVerifierOpt:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final scala.Option $anonfun$exists$9(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #245                // Method coursier/cache/FileCache.maxRedirections:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$6                            final

  private static final scala.Option ifHttp$1(java.net.URL, scala.Option);
    descriptor: (Ljava/net/URL;Lscala/Option;)Lscala/Option;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=4, args_size=2
         0: aconst_null
         1: astore_2
         2: getstatic     #254                // Field coursier/cache/ConnectionBuilder$.MODULE$:Lcoursier/cache/ConnectionBuilder$;
         5: aload_0
         6: invokevirtual #255                // Method java/net/URL.toString:()Ljava/lang/String;
         9: invokevirtual #258                // Method coursier/cache/ConnectionBuilder$.apply:(Ljava/lang/String;)Lcoursier/cache/ConnectionBuilder;
        12: aload_1
        13: invokedynamic #264,  0            // InvokeDynamic #3:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
        18: invokedynamic #271,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        23: invokevirtual #189                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        26: invokestatic  #98                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        29: invokevirtual #277                // Method coursier/cache/ConnectionBuilder.withFollowHttpToHttpsRedirections:(Z)Lcoursier/cache/ConnectionBuilder;
        32: aload_1
        33: invokedynamic #281,  0            // InvokeDynamic #5:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
        38: invokedynamic #286,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        43: invokevirtual #189                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        46: invokestatic  #98                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        49: invokevirtual #289                // Method coursier/cache/ConnectionBuilder.withFollowHttpsToHttpRedirections:(Z)Lcoursier/cache/ConnectionBuilder;
        52: aload_1
        53: invokedynamic #294,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        58: invokevirtual #298                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        61: invokevirtual #302                // Method coursier/cache/ConnectionBuilder.withSslSocketFactoryOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
        64: aload_1
        65: invokedynamic #306,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
        70: invokevirtual #298                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        73: invokevirtual #309                // Method coursier/cache/ConnectionBuilder.withHostnameVerifierOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
        76: ldc_w         #311                // String HEAD
        79: invokevirtual #314                // Method coursier/cache/ConnectionBuilder.withMethod:(Ljava/lang/String;)Lcoursier/cache/ConnectionBuilder;
        82: aload_1
        83: invokedynamic #318,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
        88: invokevirtual #298                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        91: invokevirtual #321                // Method coursier/cache/ConnectionBuilder.withMaxRedirectionsOpt:(Lscala/Option;)Lcoursier/cache/ConnectionBuilder;
        94: invokevirtual #325                // Method coursier/cache/ConnectionBuilder.connection:()Ljava/net/URLConnection;
        97: astore_2
        98: aload_2
        99: invokevirtual #331                // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
       102: invokevirtual #336                // Method java/io/InputStream.close:()V
       105: new           #126                // class scala/Some
       108: dup
       109: iconst_1
       110: invokestatic  #213                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       113: invokespecial #129                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       116: goto          158
       119: pop
       120: new           #126                // class scala/Some
       123: dup
       124: iconst_0
       125: invokestatic  #213                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       128: invokespecial #129                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       131: goto          158
       134: pop
       135: getstatic     #30                 // Field scala/None$.MODULE$:Lscala/None$;
       138: goto          158
       141: astore_3
       142: aload_2
       143: ifnull        156
       146: getstatic     #343                // Field coursier/cache/CacheUrl$.MODULE$:Lcoursier/cache/CacheUrl$;
       149: aload_2
       150: invokevirtual #347                // Method coursier/cache/CacheUrl$.closeConn:(Ljava/net/URLConnection;)V
       153: goto          156
       156: aload_3
       157: athrow
       158: aload_2
       159: ifnull        172
       162: getstatic     #343                // Field coursier/cache/CacheUrl$.MODULE$:Lcoursier/cache/CacheUrl$;
       165: aload_2
       166: invokevirtual #347                // Method coursier/cache/CacheUrl$.closeConn:(Ljava/net/URLConnection;)V
       169: goto          172
       172: areturn
      Exception table:
         from    to  target type
             2   116   119   Class java/io/FileNotFoundException
             2   116   134   Class java/io/IOException
             2   141   141   any
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 119
          locals = [ class java/net/URL, class scala/Option, class java/net/URLConnection ]
          stack = [ class java/io/FileNotFoundException ]
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class java/net/URL, class scala/Option, class java/net/URLConnection ]
          stack = [ class scala/Option ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 44: 0
        line 46: 2
        line 47: 12
        line 48: 32
        line 49: 52
        line 50: 64
        line 51: 76
        line 52: 82
        line 46: 97
        line 56: 98
        line 57: 105
        line 60: 120
        line 61: 135
        line 64: 142
        line 65: 146
        line 64: 156
        line 65: 162
        line 64: 172
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2     170     2  conn   Ljava/net/URLConnection;
            0     173     0 url$1   Ljava/net/URL;
            0     173     1 cacheOpt$1   Lscala/Option;
    MethodParameters:
      Name                           Flags
      url$1                          final
      cacheOpt$1                     final

  private static final boolean genericAttempt$1(java.net.URL);
    descriptor: (Ljava/net/URL;)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=1
         0: aconst_null
         1: astore_1
         2: aload_0
         3: invokevirtual #353                // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
         6: astore_1
         7: aload_1
         8: invokevirtual #331                // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
        11: invokevirtual #336                // Method java/io/InputStream.close:()V
        14: iconst_1
        15: goto          40
        18: pop
        19: iconst_0
        20: goto          40
        23: astore_2
        24: aload_1
        25: ifnull        38
        28: getstatic     #343                // Field coursier/cache/CacheUrl$.MODULE$:Lcoursier/cache/CacheUrl$;
        31: aload_1
        32: invokevirtual #347                // Method coursier/cache/CacheUrl$.closeConn:(Ljava/net/URLConnection;)V
        35: goto          38
        38: aload_2
        39: athrow
        40: aload_1
        41: ifnull        54
        44: getstatic     #343                // Field coursier/cache/CacheUrl$.MODULE$:Lcoursier/cache/CacheUrl$;
        47: aload_1
        48: invokevirtual #347                // Method coursier/cache/CacheUrl$.closeConn:(Ljava/net/URLConnection;)V
        51: goto          54
        54: ireturn
      Exception table:
         from    to  target type
             2    15    18   Class java/io/IOException
             2    23    23   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/net/URL, class java/net/URLConnection ]
          stack = [ class java/io/IOException ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class java/net/URL, class java/net/URLConnection ]
          stack = [ int ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 77: 0
        line 79: 2
        line 81: 7
        line 82: 14
        line 85: 19
        line 88: 24
        line 89: 28
        line 88: 38
        line 89: 44
        line 88: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      52     1  conn   Ljava/net/URLConnection;
            0      55     0 url$1   Ljava/net/URL;
    MethodParameters:
      Name                           Flags
      url$1                          final

  public static final boolean $anonfun$exists$10(java.net.URL);
    descriptor: (Ljava/net/URL;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #355                // Method genericAttempt$1:(Ljava/net/URL;)Z
         4: ireturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 url$1   Ljava/net/URL;
    MethodParameters:
      Name                           Flags
      url$1                          final

  private coursier.util.InMemoryRepository$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #356                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository$;

  public static final java.lang.Object $anonfun$exists$4$adapted(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #358                // Method $anonfun$exists$4:(Lcoursier/cache/FileCache;)Z
         4: invokestatic  #213                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$2   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.lang.Object $anonfun$exists$6$adapted(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #360                // Method $anonfun$exists$6:(Lcoursier/cache/FileCache;)Z
         4: invokestatic  #213                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$3   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      x$3                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #372,  0            // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "InMemoryRepository.scala"
BootstrapMethods:
  0: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #72 ()Z
      #77 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$10:(Ljava/net/URL;)Z
      #72 ()Z
      #78 1
  1: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 ()Ljava/lang/Object;
      #171 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$1:()Ljava/io/File;
      #172 ()Ljava/io/File;
      #173 5
      #78 1
      #172 ()Ljava/io/File;
  2: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #181 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$2:(Lcoursier/cache/FileCache;)Ljava/io/File;
      #182 (Lcoursier/cache/FileCache;)Ljava/io/File;
      #173 5
      #78 1
      #182 (Lcoursier/cache/FileCache;)Ljava/io/File;
  3: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #72 ()Z
      #261 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$3:()Z
      #72 ()Z
      #78 1
  4: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #269 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$4$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
      #270 (Lcoursier/cache/FileCache;)Ljava/lang/Object;
      #173 5
      #78 1
      #270 (Lcoursier/cache/FileCache;)Ljava/lang/Object;
  5: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #72 ()Z
      #280 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$5:()Z
      #72 ()Z
      #78 1
  6: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #285 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$6$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
      #270 (Lcoursier/cache/FileCache;)Ljava/lang/Object;
      #173 5
      #78 1
      #270 (Lcoursier/cache/FileCache;)Ljava/lang/Object;
  7: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #292 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$7:(Lcoursier/cache/FileCache;)Lscala/Option;
      #293 (Lcoursier/cache/FileCache;)Lscala/Option;
      #173 5
      #78 1
      #293 (Lcoursier/cache/FileCache;)Lscala/Option;
  8: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #305 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$8:(Lcoursier/cache/FileCache;)Lscala/Option;
      #293 (Lcoursier/cache/FileCache;)Lscala/Option;
      #173 5
      #78 1
      #293 (Lcoursier/cache/FileCache;)Lscala/Option;
  9: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #317 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$9:(Lcoursier/cache/FileCache;)Lscala/Option;
      #293 (Lcoursier/cache/FileCache;)Lscala/Option;
      #173 5
      #78 1
      #293 (Lcoursier/cache/FileCache;)Lscala/Option;
  10: #369 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #171 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$1:()Ljava/io/File;
      #77 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$10:(Ljava/net/URL;)Z
      #181 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$2:(Lcoursier/cache/FileCache;)Ljava/io/File;
      #261 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$3:()Z
      #269 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$4$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
      #280 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$5:()Z
      #285 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$6$adapted:(Lcoursier/cache/FileCache;)Ljava/lang/Object;
      #292 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$7:(Lcoursier/cache/FileCache;)Lscala/Option;
      #305 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$8:(Lcoursier/cache/FileCache;)Lscala/Option;
      #317 REF_invokeStatic coursier/util/InMemoryRepository$.$anonfun$exists$9:(Lcoursier/cache/FileCache;)Lscala/Option;
  ScalaInlineInfo: length = 0x81 (unknown attribute)
   01 01 00 19 00 8C 00 8D 01 00 47 00 48 01 00 96
   00 97 01 00 D8 00 45 01 00 D9 00 DA 01 01 09 01
   0A 01 00 DF 00 45 01 00 E0 00 DA 01 01 1A 01 0A
   01 00 E5 00 E6 01 00 EC 00 E6 01 00 F1 00 E6 01
   00 11 00 10 01 00 65 00 66 01 00 65 00 76 01 00
   65 00 72 01 00 65 00 83 01 00 16 00 17 01 00 16
   00 1F 01 01 5E 00 48 01 00 3D 00 3E 01 00 41 00
   42 01 00 69 00 66 01 00 69 00 72 01 00 85 00 86
   01
  Scala: length = 0x0 (unknown attribute)

