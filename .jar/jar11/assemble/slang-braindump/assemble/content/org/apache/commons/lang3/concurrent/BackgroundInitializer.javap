Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/concurrent/BackgroundInitializer.class
  Last modified May 29, 2022; size 4027 bytes
  SHA-256 checksum 45e4195fd6b5cbeaa3f8535cb4d15c6150edf79d5611dd05e090754ff9608021
  Compiled from "BackgroundInitializer.java"
public abstract class org.apache.commons.lang3.concurrent.BackgroundInitializer<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #29                         // org/apache/commons/lang3/concurrent/BackgroundInitializer
  super_class: #30                        // java/lang/Object
  interfaces: 1, fields: 3, methods: 13, attributes: 3
Constant pool:
    #1 = Methodref          #29.#85       // org/apache/commons/lang3/concurrent/BackgroundInitializer."<init>":(Ljava/util/concurrent/ExecutorService;)V
    #2 = Methodref          #30.#86       // java/lang/Object."<init>":()V
    #3 = Methodref          #29.#87       // org/apache/commons/lang3/concurrent/BackgroundInitializer.setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V
    #4 = Fieldref           #29.#88       // org/apache/commons/lang3/concurrent/BackgroundInitializer.externalExecutor:Ljava/util/concurrent/ExecutorService;
    #5 = Fieldref           #29.#89       // org/apache/commons/lang3/concurrent/BackgroundInitializer.future:Ljava/util/concurrent/Future;
    #6 = Methodref          #29.#90       // org/apache/commons/lang3/concurrent/BackgroundInitializer.isStarted:()Z
    #7 = Class              #91           // java/lang/IllegalStateException
    #8 = String             #92           // Cannot set ExecutorService after start()!
    #9 = Methodref          #7.#93        // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #10 = Methodref          #29.#94       // org/apache/commons/lang3/concurrent/BackgroundInitializer.getExternalExecutor:()Ljava/util/concurrent/ExecutorService;
   #11 = Fieldref           #29.#95       // org/apache/commons/lang3/concurrent/BackgroundInitializer.executor:Ljava/util/concurrent/ExecutorService;
   #12 = Methodref          #29.#96       // org/apache/commons/lang3/concurrent/BackgroundInitializer.createExecutor:()Ljava/util/concurrent/ExecutorService;
   #13 = Methodref          #29.#97       // org/apache/commons/lang3/concurrent/BackgroundInitializer.createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;
   #14 = InterfaceMethodref #60.#98       // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   #15 = Methodref          #29.#99       // org/apache/commons/lang3/concurrent/BackgroundInitializer.getFuture:()Ljava/util/concurrent/Future;
   #16 = InterfaceMethodref #100.#101     // java/util/concurrent/Future.get:()Ljava/lang/Object;
   #17 = Class              #102          // java/util/concurrent/ExecutionException
   #18 = Methodref          #103.#104     // org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V
   #19 = Class              #105          // java/lang/InterruptedException
   #20 = Methodref          #106.#107     // java/lang/Thread.currentThread:()Ljava/lang/Thread;
   #21 = Methodref          #106.#108     // java/lang/Thread.interrupt:()V
   #22 = Class              #109          // org/apache/commons/lang3/concurrent/ConcurrentException
   #23 = Methodref          #22.#110      // org/apache/commons/lang3/concurrent/ConcurrentException."<init>":(Ljava/lang/Throwable;)V
   #24 = String             #111          // start() must be called first!
   #25 = Class              #112          // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask
   #26 = Methodref          #25.#113      // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask."<init>":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V
   #27 = Methodref          #29.#114      // org/apache/commons/lang3/concurrent/BackgroundInitializer.getTaskCount:()I
   #28 = Methodref          #115.#116     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
   #29 = Class              #117          // org/apache/commons/lang3/concurrent/BackgroundInitializer
   #30 = Class              #118          // java/lang/Object
   #31 = Class              #119          // org/apache/commons/lang3/concurrent/ConcurrentInitializer
   #32 = Utf8               InitializationTask
   #33 = Utf8               InnerClasses
   #34 = Utf8               externalExecutor
   #35 = Utf8               Ljava/util/concurrent/ExecutorService;
   #36 = Utf8               executor
   #37 = Utf8               future
   #38 = Utf8               Ljava/util/concurrent/Future;
   #39 = Utf8               Signature
   #40 = Utf8               Ljava/util/concurrent/Future<TT;>;
   #41 = Utf8               <init>
   #42 = Utf8               ()V
   #43 = Utf8               Code
   #44 = Utf8               LineNumberTable
   #45 = Utf8               LocalVariableTable
   #46 = Utf8               this
   #47 = Utf8               Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
   #48 = Utf8               LocalVariableTypeTable
   #49 = Utf8               Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
   #50 = Utf8               (Ljava/util/concurrent/ExecutorService;)V
   #51 = Utf8               exec
   #52 = Utf8               getExternalExecutor
   #53 = Utf8               ()Ljava/util/concurrent/ExecutorService;
   #54 = Utf8               isStarted
   #55 = Utf8               ()Z
   #56 = Utf8               StackMapTable
   #57 = Utf8               setExternalExecutor
   #58 = Utf8               start
   #59 = Utf8               tempExec
   #60 = Class              #120          // java/util/concurrent/ExecutorService
   #61 = Utf8               get
   #62 = Utf8               ()Ljava/lang/Object;
   #63 = Utf8               execex
   #64 = Utf8               Ljava/util/concurrent/ExecutionException;
   #65 = Utf8               iex
   #66 = Utf8               Ljava/lang/InterruptedException;
   #67 = Utf8               Exceptions
   #68 = Utf8               ()TT;
   #69 = Utf8               getFuture
   #70 = Utf8               ()Ljava/util/concurrent/Future;
   #71 = Utf8               ()Ljava/util/concurrent/Future<TT;>;
   #72 = Utf8               getActiveExecutor
   #73 = Utf8               getTaskCount
   #74 = Utf8               ()I
   #75 = Utf8               initialize
   #76 = Class              #121          // java/lang/Exception
   #77 = Utf8               createTask
   #78 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;
   #79 = Utf8               execDestroy
   #80 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;
   #81 = Utf8               createExecutor
   #82 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;
   #83 = Utf8               SourceFile
   #84 = Utf8               BackgroundInitializer.java
   #85 = NameAndType        #41:#50       // "<init>":(Ljava/util/concurrent/ExecutorService;)V
   #86 = NameAndType        #41:#42       // "<init>":()V
   #87 = NameAndType        #57:#50       // setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V
   #88 = NameAndType        #34:#35       // externalExecutor:Ljava/util/concurrent/ExecutorService;
   #89 = NameAndType        #37:#38       // future:Ljava/util/concurrent/Future;
   #90 = NameAndType        #54:#55       // isStarted:()Z
   #91 = Utf8               java/lang/IllegalStateException
   #92 = Utf8               Cannot set ExecutorService after start()!
   #93 = NameAndType        #41:#122      // "<init>":(Ljava/lang/String;)V
   #94 = NameAndType        #52:#53       // getExternalExecutor:()Ljava/util/concurrent/ExecutorService;
   #95 = NameAndType        #36:#35       // executor:Ljava/util/concurrent/ExecutorService;
   #96 = NameAndType        #81:#53       // createExecutor:()Ljava/util/concurrent/ExecutorService;
   #97 = NameAndType        #77:#78       // createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;
   #98 = NameAndType        #123:#124     // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
   #99 = NameAndType        #69:#70       // getFuture:()Ljava/util/concurrent/Future;
  #100 = Class              #125          // java/util/concurrent/Future
  #101 = NameAndType        #61:#62       // get:()Ljava/lang/Object;
  #102 = Utf8               java/util/concurrent/ExecutionException
  #103 = Class              #126          // org/apache/commons/lang3/concurrent/ConcurrentUtils
  #104 = NameAndType        #127:#128     // handleCause:(Ljava/util/concurrent/ExecutionException;)V
  #105 = Utf8               java/lang/InterruptedException
  #106 = Class              #129          // java/lang/Thread
  #107 = NameAndType        #130:#131     // currentThread:()Ljava/lang/Thread;
  #108 = NameAndType        #132:#42      // interrupt:()V
  #109 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException
  #110 = NameAndType        #41:#133      // "<init>":(Ljava/lang/Throwable;)V
  #111 = Utf8               start() must be called first!
  #112 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask
  #113 = NameAndType        #41:#134      // "<init>":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V
  #114 = NameAndType        #73:#74       // getTaskCount:()I
  #115 = Class              #135          // java/util/concurrent/Executors
  #116 = NameAndType        #136:#137     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
  #117 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer
  #118 = Utf8               java/lang/Object
  #119 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer
  #120 = Utf8               java/util/concurrent/ExecutorService
  #121 = Utf8               java/lang/Exception
  #122 = Utf8               (Ljava/lang/String;)V
  #123 = Utf8               submit
  #124 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
  #125 = Utf8               java/util/concurrent/Future
  #126 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils
  #127 = Utf8               handleCause
  #128 = Utf8               (Ljava/util/concurrent/ExecutionException;)V
  #129 = Utf8               java/lang/Thread
  #130 = Utf8               currentThread
  #131 = Utf8               ()Ljava/lang/Thread;
  #132 = Utf8               interrupt
  #133 = Utf8               (Ljava/lang/Throwable;)V
  #134 = Utf8               (Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V
  #135 = Utf8               java/util/concurrent/Executors
  #136 = Utf8               newFixedThreadPool
  #137 = Utf8               (I)Ljava/util/concurrent/ExecutorService;
{
  private java.util.concurrent.ExecutorService externalExecutor;
    descriptor: Ljava/util/concurrent/ExecutorService;
    flags: (0x0002) ACC_PRIVATE

  private java.util.concurrent.ExecutorService executor;
    descriptor: Ljava/util/concurrent/ExecutorService;
    flags: (0x0002) ACC_PRIVATE

  private java.util.concurrent.Future<T> future;
    descriptor: Ljava/util/concurrent/Future;
    flags: (0x0002) ACC_PRIVATE
    Signature: #40                          // Ljava/util/concurrent/Future<TT;>;

  protected org.apache.commons.lang3.concurrent.BackgroundInitializer();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aconst_null
         2: invokespecial #1                  // Method "<init>":(Ljava/util/concurrent/ExecutorService;)V
         5: return
      LineNumberTable:
        line 101: 0
        line 102: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;

  protected org.apache.commons.lang3.concurrent.BackgroundInitializer(java.util.concurrent.ExecutorService);
    descriptor: (Ljava/util/concurrent/ExecutorService;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: invokevirtual #3                  // Method setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V
         9: return
      LineNumberTable:
        line 114: 0
        line 115: 4
        line 116: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
            0      10     1  exec   Ljava/util/concurrent/ExecutorService;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;

  public final synchronized java.util.concurrent.ExecutorService getExternalExecutor();
    descriptor: ()Ljava/util/concurrent/ExecutorService;
    flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field externalExecutor:Ljava/util/concurrent/ExecutorService;
         4: areturn
      LineNumberTable:
        line 124: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;

  public synchronized boolean isStarted();
    descriptor: ()Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
         4: ifnull        11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 135: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public final synchronized void setExternalExecutor(java.util.concurrent.ExecutorService);
    descriptor: (Ljava/util/concurrent/ExecutorService;)V
    flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #6                  // Method isStarted:()Z
         4: ifeq          17
         7: new           #7                  // class java/lang/IllegalStateException
        10: dup
        11: ldc           #8                  // String Cannot set ExecutorService after start()!
        13: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: aload_1
        19: putfield      #4                  // Field externalExecutor:Ljava/util/concurrent/ExecutorService;
        22: return
      LineNumberTable:
        line 154: 0
        line 155: 7
        line 159: 17
        line 160: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
            0      23     1 externalExecutor   Ljava/util/concurrent/ExecutorService;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */

  public synchronized boolean start();
    descriptor: ()Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #6                  // Method isStarted:()Z
         4: ifne          57
         7: aload_0
         8: aload_0
         9: invokevirtual #10                 // Method getExternalExecutor:()Ljava/util/concurrent/ExecutorService;
        12: putfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;
        15: aload_0
        16: getfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;
        19: ifnonnull     35
        22: aload_0
        23: aload_0
        24: invokespecial #12                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;
        27: dup
        28: astore_1
        29: putfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;
        32: goto          37
        35: aconst_null
        36: astore_1
        37: aload_0
        38: aload_0
        39: getfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;
        42: aload_0
        43: aload_1
        44: invokespecial #13                 // Method createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;
        47: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
        52: putfield      #5                  // Field future:Ljava/util/concurrent/Future;
        55: iconst_1
        56: ireturn
        57: iconst_0
        58: ireturn
      LineNumberTable:
        line 174: 0
        line 179: 7
        line 180: 15
        line 181: 22
        line 183: 35
        line 186: 37
        line 188: 55
        line 191: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29       6     1 tempExec   Ljava/util/concurrent/ExecutorService;
           37      20     1 tempExec   Ljava/util/concurrent/ExecutorService;
            0      59     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
      StackMapTable: number_of_entries = 3
        frame_type = 35 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ class java/util/concurrent/ExecutorService ]
        frame_type = 250 /* chop */
          offset_delta = 19

  public T get() throws org.apache.commons.lang3.concurrent.ConcurrentException;
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #15                 // Method getFuture:()Ljava/util/concurrent/Future;
         4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
         9: areturn
        10: astore_1
        11: aload_1
        12: invokestatic  #18                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V
        15: aconst_null
        16: areturn
        17: astore_1
        18: invokestatic  #20                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
        21: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V
        24: new           #22                 // class org/apache/commons/lang3/concurrent/ConcurrentException
        27: dup
        28: aload_1
        29: invokespecial #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException."<init>":(Ljava/lang/Throwable;)V
        32: athrow
      Exception table:
         from    to  target type
             0     9    10   Class java/util/concurrent/ExecutionException
             0     9    17   Class java/lang/InterruptedException
      LineNumberTable:
        line 211: 0
        line 212: 10
        line 213: 11
        line 214: 15
        line 215: 17
        line 217: 18
        line 218: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       6     1 execex   Ljava/util/concurrent/ExecutionException;
           18      15     1   iex   Ljava/lang/InterruptedException;
            0      33     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/util/concurrent/ExecutionException ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/InterruptedException ]
    Exceptions:
      throws org.apache.commons.lang3.concurrent.ConcurrentException
    Signature: #68                          // ()TT;

  public synchronized java.util.concurrent.Future<T> getFuture();
    descriptor: ()Ljava/util/concurrent/Future;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
         4: ifnonnull     17
         7: new           #7                  // class java/lang/IllegalStateException
        10: dup
        11: ldc           #24                 // String start() must be called first!
        13: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: getfield      #5                  // Field future:Ljava/util/concurrent/Future;
        21: areturn
      LineNumberTable:
        line 231: 0
        line 232: 7
        line 235: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
    Signature: #71                          // ()Ljava/util/concurrent/Future<TT;>;

  protected final synchronized java.util.concurrent.ExecutorService getActiveExecutor();
    descriptor: ()Ljava/util/concurrent/ExecutorService;
    flags: (0x0034) ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #11                 // Field executor:Ljava/util/concurrent/ExecutorService;
         4: areturn
      LineNumberTable:
        line 248: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;

  protected int getTaskCount();
    descriptor: ()I
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;

  protected abstract T initialize() throws java.lang.Exception;
    descriptor: ()Ljava/lang/Object;
    flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT
    Exceptions:
      throws java.lang.Exception
    Signature: #68                          // ()TT;

  private java.util.concurrent.Callable<T> createTask(java.util.concurrent.ExecutorService);
    descriptor: (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=2
         0: new           #25                 // class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #26                 // Method org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask."<init>":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V
         9: areturn
      LineNumberTable:
        line 290: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
            0      10     1 execDestroy   Ljava/util/concurrent/ExecutorService;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
    Signature: #80                          // (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;

  private java.util.concurrent.ExecutorService createExecutor();
    descriptor: ()Ljava/util/concurrent/ExecutorService;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #27                 // Method getTaskCount:()I
         4: invokestatic  #28                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
         7: areturn
      LineNumberTable:
        line 300: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;
}
Signature: #82                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;
SourceFile: "BackgroundInitializer.java"
InnerClasses:
  private #32= #25 of #29;                // InitializationTask=class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask of class org/apache/commons/lang3/concurrent/BackgroundInitializer
