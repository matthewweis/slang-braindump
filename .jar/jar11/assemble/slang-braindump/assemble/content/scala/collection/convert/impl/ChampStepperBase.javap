Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/ChampStepperBase.class
  Last modified May 29, 2022; size 7334 bytes
  SHA-256 checksum 11204544421f618da204bf133a7b7f4c09e8b95be0e4ff3d4226593f21e10fc4
  Compiled from "ChampStepper.scala"
public abstract class scala.collection.convert.impl.ChampStepperBase<A extends java.lang.Object, T extends scala.collection.immutable.Node<T>, Sub extends java.lang.Object, Semi extends Sub> extends java.lang.Object implements scala.collection.Stepper$EfficientSplit
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/collection/convert/impl/ChampStepperBase
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 26, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/ChampStepperBase
    #2 = Class              #1            // scala/collection/convert/impl/ChampStepperBase
    #3 = Utf8               <A:Ljava/lang/Object;T:Lscala/collection/immutable/Node<TT;>;Sub:Ljava/lang/Object;Semi:TSub;>Ljava/lang/Object;Lscala/collection/Stepper$EfficientSplit;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/Stepper$EfficientSplit
    #7 = Class              #6            // scala/collection/Stepper$EfficientSplit
    #8 = Utf8               ChampStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u0005\reA\u0002\u0012$\u0003\u000393\u0006\u0003\u0005A\u0001\t\u0005\r\u0011\"\u0005B\u0011!)\u0005A!a\u0001\n#1\u0005\u0002\u0003\'\u0001\u0005\u0003\u0005\u000b\u0015\u0002\"\t\u000b5\u0003A\u0011\u0001(\t\u000fu\u0004\u0001\u0019!C\t\u0003\"9a\u0010\u0001a\u0001\n#y\bbBA\u0002\u0001\u0001\u0006KA\u0011\u0005\t\u0003\u000b\u0001\u0001\u0019!C\t\u0003\"I\u0011q\u0001\u0001A\u0002\u0013E\u0011\u0011\u0002\u0005\b\u0003\u001b\u0001\u0001\u0015)\u0003C\u0011-\ty\u0001\u0001a\u0001\u0002\u0004%\t\"!\u0005\t\u0017\u0005M\u0001\u00011AA\u0002\u0013E\u0011Q\u0003\u0005\u000b\u00033\u0001\u0001\u0019!A!B\u0013a\u0006\u0002CA\u000e\u0001\u0001\u0007I\u0011B!\t\u0013\u0005u\u0001\u00011A\u0005\n\u0005}\u0001bBA\u0012\u0001\u0001\u0006KA\u0011\u0005\f\u0003K\u0001\u0001\u0019!a\u0001\n\u0013\t9\u0003C\u0006\u00020\u0001\u0001\r\u00111A\u0005\n\u0005E\u0002bCA\u001b\u0001\u0001\u0007\t\u0011)Q\u0005\u0003SA1\"a\u000e\u0001\u0001\u0004\u0005\r\u0011\"\u0003\u0002:!Y\u0011Q\b\u0001A\u0002\u0003\u0007I\u0011BA \u0011-\t\u0019\u0005\u0001a\u0001\u0002\u0003\u0006K!a\u000f\t\u000f\u0005\u0015\u0003\u0001\"\u0003\u0002H!9\u0011\u0011\n\u0001\u0005\u0002\u0005-\u0003bBA)\u0001\u00115\u00111\u000b\u0005\b\u00033\u0002AQBA.\u0011\u001d\ty\u0006\u0001C\u0007\u0003\u000fBq!!\u0019\u0001\t\u001b\t\u0019\u0007\u0003\u0004\u0002l\u0001!\t!\u0011\u0005\b\u0003[\u0002A\u0011AA8\u0011\u001d\t9\b\u0001D\u0001\u0003sBq!a\u001f\u0001\t\u000b\ti\bC\u0004\u0002\u0000\u0001!)!!!\u0003!\rC\u0017-\u001c9Ti\u0016\u0004\b/\u001a:CCN,\'B\u0001\u0013&\u0003\u0011IW\u000e\u001d7\u000b\u0005\u0019:\u0013aB2p]Z,\'\u000f\u001e\u0006\u0003Q%\n!bY8mY\u0016\u001cG/[8o\u0015\u0005Q\u0013!B:dC2\fW#\u0002\u0017T;\u001et7c\u0001\u0001.cA\u0011afL\u0007\u0002S%\u0011\u0001\'\u000b\u0002\u0007\u0003:L(+\u001a4\u0011\u0005IjdBA\u001a<\u001d\t!$H\u0004\u00026s5\taG\u0003\u00028q\u00051AH]8piz\u001a\u0001!C\u0001+\u0013\tA\u0013&\u0003\u0002=O\u000591\u000b^3qa\u0016\u0014\u0018B\u0001 @\u00059)eMZ5dS\u0016tGo\u00159mSRT!\u0001P\u0014\u0002\u000f5\f\u0007pU5{KV\t!\t\u0005\u0002/\u0007&\u0011A)\u000b\u0002\u0004\u0013:$\u0018aC7bqNK\'0Z0%KF$\"a\u0012&\u0011\u00059B\u0015BA%*\u0005\u0011)f.\u001b;\t\u000f-\u0013\u0011\u0011!a\u0001\u0005\u0006\u0019\u0001\u0010J\u0019\u0002\u00115\f\u0007pU5{K\u0002\na\u0001P5oSRtDCA(}!\u0019\u0001\u0006!\u0015/g[6\t1\u0005\u0005\u0002S\'2\u0001A!\u0002+\u0001\u0005\u0004)&!A!\u0012\u0005YK\u0006C\u0001\u0018X\u0013\tA\u0016FA\u0004O_RD\u0017N\\4\u0011\u00059R\u0016BA.*\u0005\r\te.\u001f\t\u0003%v#QA\u0018\u0001C\u0002}\u0013\u0011\u0001V\t\u0003-\u0002\u00042!\u00193]\u001b\u0005\u0011\'BA2(\u0003%IW.\\;uC\ndW-\u0003\u0002fE\n!aj\u001c3f!\t\u0011v\rB\u0003i\u0001\t\u0007\u0011NA\u0002Tk\n\f\"A[-\u0011\u00059Z\u0017B\u00017*\u0005\u0011qU\u000f\u001c7\u0011\u0005IsG!B8\u0001\u0005\u0004\u0001(\u0001B*f[&\f\"AV9\u0013\u0007I4GO\u0002\u0003t\u0001\u0001\t(\u0001\u0004\u001fsK\u001aLg.Z7f]Rt\u0004gA;xuB1\u0001\u000bA)]mf\u0004\"AU<\u0005\u0013at\u0017\u0011!A\u0001\u0006\u0003)&aA0%cA\u0011!K\u001f\u0003\nw:\f\t\u0011!A\u0003\u0002U\u00131a\u0018\u00133\u0011\u0015\u0001E\u00011\u0001C\u0003I\u0019WO\u001d:f]R4\u0016\r\\;f\u0007V\u00148o\u001c:\u0002-\r,(O]3oiZ\u000bG.^3DkJ\u001cxN]0%KF$2aRA\u0001\u0011\u001dYe!!AA\u0002\t\u000b1cY;se\u0016tGOV1mk\u0016\u001cUO]:pe\u0002\n!cY;se\u0016tGOV1mk\u0016dUM\\4uQ\u000612-\u001e:sK:$h+\u00197vK2+gn\u001a;i?\u0012*\u0017\u000fF\u0002H\u0003\u0017AqaS\u0005\u0002\u0002\u0003\u0007!)A\ndkJ\u0014XM\u001c;WC2,X\rT3oORD\u0007%\u0001\tdkJ\u0014XM\u001c;WC2,XMT8eKV\tA,\u0001\u000bdkJ\u0014XM\u001c;WC2,XMT8eK~#S-\u001d\u000b\u0004\u000f\u0006]\u0001bB&\r\u0003\u0003\u0005\r\u0001X\u0001\u0012GV\u0014(/\u001a8u-\u0006dW/\u001a(pI\u0016\u0004\u0013!E2veJ,g\u000e^*uC\u000e\\G*\u001a<fY\u0006)2-\u001e:sK:$8\u000b^1dW2+g/\u001a7`I\u0015\fHcA$\u0002\"!91jDA\u0001\u0002\u0004\u0011\u0015AE2veJ,g\u000e^*uC\u000e\\G*\u001a<fY\u0002\nQC\\8eK\u000e+(o]8sg\u0006sG\rT3oORD7/\u0006\u0002\u0002*A!a&a\u000bC\u0013\r\ti#\u000b\u0002\u0006\u0003J\u0014\u0018-_\u0001\u001a]>$WmQ;sg>\u00148/\u00118e\u0019\u0016tw\r\u001e5t?\u0012*\u0017\u000fF\u0002H\u0003gA\u0001b\u0013\n\u0002\u0002\u0003\u0007\u0011\u0011F\u0001\u0017]>$WmQ;sg>\u00148/\u00118e\u0019\u0016tw\r\u001e5tA\u0005)an\u001c3fgV\u0011\u00111\b\t\u0005]\u0005-B,A\u0005o_\u0012,7o\u0018\u0013fcR\u0019q)!\u0011\t\u0011-+\u0012\u0011!a\u0001\u0003w\taA\\8eKN\u0004\u0013!C5oSRtu\u000eZ3t)\u00059\u0015\u0001C5oSR\u0014vn\u001c;\u0015\u0007\u001d\u000bi\u0005\u0003\u0004\u0002Pa\u0001\r\u0001X\u0001\te>|GOT8eK\u0006\u00012/\u001a;vaB\u000b\u0017\u0010\\8bI:{G-\u001a\u000b\u0004\u000f\u0006U\u0003BBA,3\u0001\u0007A,\u0001\u0003o_\u0012,\u0017\u0001\u00039vg\"tu\u000eZ3\u0015\u0007\u001d\u000bi\u0006\u0003\u0004\u0002Xi\u0001\r\u0001X\u0001\ba>\u0004hj\u001c3f\u0003M\u0019X-\u0019:dQ:+\u0007\u0010\u001e,bYV,gj\u001c3f)\t\t)\u0007E\u0002/\u0003OJ1!!\u001b*\u0005\u001d\u0011un\u001c7fC:\fqb\u00195be\u0006\u001cG/\u001a:jgRL7m]\u0001\rKN$\u0018.\\1uKNK\'0Z\u000b\u0003\u0003c\u00022ALA:\u0013\r\t)(\u000b\u0002\u0005\u0019>tw-A\u0005tK6L7\r\\8oKR\tQ.A\u0004iCN\u001cF/\u001a9\u0016\u0005\u0005\u0015\u0014\u0001\u0003;ssN\u0003H.\u001b;\u0015\u0003\u0019\u0004
   #12 = Utf8               scala/collection/Stepper
   #13 = Class              #12           // scala/collection/Stepper
   #14 = Utf8               EfficientSplit
   #15 = Utf8               maxSize
   #16 = Utf8               I
   #17 = Utf8               currentValueCursor
   #18 = Utf8               currentValueLength
   #19 = Utf8               currentValueNode
   #20 = Utf8               Lscala/collection/immutable/Node;
   #21 = Utf8               TT;
   #22 = Utf8               currentStackLevel
   #23 = Utf8               nodeCursorsAndLengths
   #24 = Utf8               [I
   #25 = Utf8               nodes
   #26 = Utf8               [Lscala/collection/immutable/Node;
   #27 = Utf8               [TT;
   #28 = Utf8               ()I
   #29 = NameAndType        #15:#16       // maxSize:I
   #30 = Fieldref           #2.#29        // scala/collection/convert/impl/ChampStepperBase.maxSize:I
   #31 = Utf8               this
   #32 = Utf8               Lscala/collection/convert/impl/ChampStepperBase;
   #33 = Utf8               maxSize_$eq
   #34 = Utf8               (I)V
   #35 = Utf8               x$1
   #36 = NameAndType        #17:#16       // currentValueCursor:I
   #37 = Fieldref           #2.#36        // scala/collection/convert/impl/ChampStepperBase.currentValueCursor:I
   #38 = Utf8               currentValueCursor_$eq
   #39 = NameAndType        #18:#16       // currentValueLength:I
   #40 = Fieldref           #2.#39        // scala/collection/convert/impl/ChampStepperBase.currentValueLength:I
   #41 = Utf8               currentValueLength_$eq
   #42 = Utf8               ()Lscala/collection/immutable/Node;
   #43 = Utf8               ()TT;
   #44 = NameAndType        #19:#20       // currentValueNode:Lscala/collection/immutable/Node;
   #45 = Fieldref           #2.#44        // scala/collection/convert/impl/ChampStepperBase.currentValueNode:Lscala/collection/immutable/Node;
   #46 = Utf8               currentValueNode_$eq
   #47 = Utf8               (Lscala/collection/immutable/Node;)V
   #48 = Utf8               (TT;)V
   #49 = NameAndType        #22:#16       // currentStackLevel:I
   #50 = Fieldref           #2.#49        // scala/collection/convert/impl/ChampStepperBase.currentStackLevel:I
   #51 = Utf8               currentStackLevel_$eq
   #52 = Utf8               ()[I
   #53 = NameAndType        #23:#24       // nodeCursorsAndLengths:[I
   #54 = Fieldref           #2.#53        // scala/collection/convert/impl/ChampStepperBase.nodeCursorsAndLengths:[I
   #55 = Utf8               nodeCursorsAndLengths_$eq
   #56 = Utf8               ([I)V
   #57 = Utf8               ()[Lscala/collection/immutable/Node;
   #58 = Utf8               ()[TT;
   #59 = NameAndType        #25:#26       // nodes:[Lscala/collection/immutable/Node;
   #60 = Fieldref           #2.#59        // scala/collection/convert/impl/ChampStepperBase.nodes:[Lscala/collection/immutable/Node;
   #61 = Utf8               nodes_$eq
   #62 = Utf8               ([Lscala/collection/immutable/Node;)V
   #63 = Utf8               ([TT;)V
   #64 = Utf8               initNodes
   #65 = Utf8               ()V
   #66 = NameAndType        #23:#52       // nodeCursorsAndLengths:()[I
   #67 = Methodref          #2.#66        // scala/collection/convert/impl/ChampStepperBase.nodeCursorsAndLengths:()[I
   #68 = Utf8               scala/collection/immutable/Node$
   #69 = Class              #68           // scala/collection/immutable/Node$
   #70 = Utf8               MODULE$
   #71 = Utf8               Lscala/collection/immutable/Node$;
   #72 = NameAndType        #70:#71       // MODULE$:Lscala/collection/immutable/Node$;
   #73 = Fieldref           #69.#72       // scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
   #74 = Utf8               MaxDepth
   #75 = NameAndType        #74:#28       // MaxDepth:()I
   #76 = Methodref          #69.#75       // scala/collection/immutable/Node$.MaxDepth:()I
   #77 = NameAndType        #55:#56       // nodeCursorsAndLengths_$eq:([I)V
   #78 = Methodref          #2.#77        // scala/collection/convert/impl/ChampStepperBase.nodeCursorsAndLengths_$eq:([I)V
   #79 = Utf8               scala/collection/immutable/Node
   #80 = Class              #79           // scala/collection/immutable/Node
   #81 = NameAndType        #61:#62       // nodes_$eq:([Lscala/collection/immutable/Node;)V
   #82 = Methodref          #2.#81        // scala/collection/convert/impl/ChampStepperBase.nodes_$eq:([Lscala/collection/immutable/Node;)V
   #83 = Utf8               initRoot
   #84 = Utf8               rootNode
   #85 = Utf8               hasNodes
   #86 = Utf8               ()Z
   #87 = NameAndType        #85:#86       // hasNodes:()Z
   #88 = Methodref          #80.#87       // scala/collection/immutable/Node.hasNodes:()Z
   #89 = Utf8               pushNode
   #90 = NameAndType        #89:#47       // pushNode:(Lscala/collection/immutable/Node;)V
   #91 = Methodref          #2.#90        // scala/collection/convert/impl/ChampStepperBase.pushNode:(Lscala/collection/immutable/Node;)V
   #92 = Utf8               hasPayload
   #93 = NameAndType        #92:#86       // hasPayload:()Z
   #94 = Methodref          #80.#93       // scala/collection/immutable/Node.hasPayload:()Z
   #95 = Utf8               setupPayloadNode
   #96 = NameAndType        #95:#47       // setupPayloadNode:(Lscala/collection/immutable/Node;)V
   #97 = Methodref          #2.#96        // scala/collection/convert/impl/ChampStepperBase.setupPayloadNode:(Lscala/collection/immutable/Node;)V
   #98 = Utf8               node
   #99 = NameAndType        #46:#47       // currentValueNode_$eq:(Lscala/collection/immutable/Node;)V
  #100 = Methodref          #2.#99        // scala/collection/convert/impl/ChampStepperBase.currentValueNode_$eq:(Lscala/collection/immutable/Node;)V
  #101 = NameAndType        #38:#34       // currentValueCursor_$eq:(I)V
  #102 = Methodref          #2.#101       // scala/collection/convert/impl/ChampStepperBase.currentValueCursor_$eq:(I)V
  #103 = Utf8               payloadArity
  #104 = NameAndType        #103:#28      // payloadArity:()I
  #105 = Methodref          #80.#104      // scala/collection/immutable/Node.payloadArity:()I
  #106 = NameAndType        #41:#34       // currentValueLength_$eq:(I)V
  #107 = Methodref          #2.#106       // scala/collection/convert/impl/ChampStepperBase.currentValueLength_$eq:(I)V
  #108 = NameAndType        #64:#65       // initNodes:()V
  #109 = Methodref          #2.#108       // scala/collection/convert/impl/ChampStepperBase.initNodes:()V
  #110 = NameAndType        #22:#28       // currentStackLevel:()I
  #111 = Methodref          #2.#110       // scala/collection/convert/impl/ChampStepperBase.currentStackLevel:()I
  #112 = NameAndType        #51:#34       // currentStackLevel_$eq:(I)V
  #113 = Methodref          #2.#112       // scala/collection/convert/impl/ChampStepperBase.currentStackLevel_$eq:(I)V
  #114 = NameAndType        #25:#57       // nodes:()[Lscala/collection/immutable/Node;
  #115 = Methodref          #2.#114       // scala/collection/convert/impl/ChampStepperBase.nodes:()[Lscala/collection/immutable/Node;
  #116 = Utf8               nodeArity
  #117 = NameAndType        #116:#28      // nodeArity:()I
  #118 = Methodref          #80.#117      // scala/collection/immutable/Node.nodeArity:()I
  #119 = Utf8               cursorIndex
  #120 = Utf8               lengthIndex
  #121 = Utf8               popNode
  #122 = Utf8               searchNextValueNode
  #123 = Utf8               getNode
  #124 = Utf8               (I)Lscala/collection/immutable/Node;
  #125 = NameAndType        #123:#124     // getNode:(I)Lscala/collection/immutable/Node;
  #126 = Methodref          #80.#125      // scala/collection/immutable/Node.getNode:(I)Lscala/collection/immutable/Node;
  #127 = NameAndType        #121:#65      // popNode:()V
  #128 = Methodref          #2.#127       // scala/collection/convert/impl/ChampStepperBase.popNode:()V
  #129 = Utf8               nextNode
  #130 = Utf8               nodeCursor
  #131 = Utf8               nodeLength
  #132 = Class              #24           // "[I"
  #133 = Utf8               characteristics
  #134 = Utf8               estimateSize
  #135 = Utf8               ()J
  #136 = Utf8               hasStep
  #137 = NameAndType        #136:#86      // hasStep:()Z
  #138 = Methodref          #2.#137       // scala/collection/convert/impl/ChampStepperBase.hasStep:()Z
  #139 = NameAndType        #15:#28       // maxSize:()I
  #140 = Methodref          #2.#139       // scala/collection/convert/impl/ChampStepperBase.maxSize:()I
  #141 = Utf8               semiclone
  #142 = Utf8               ()Lscala/collection/convert/impl/ChampStepperBase;
  #143 = Utf8               ()TSemi;
  #144 = NameAndType        #17:#28       // currentValueCursor:()I
  #145 = Methodref          #2.#144       // scala/collection/convert/impl/ChampStepperBase.currentValueCursor:()I
  #146 = NameAndType        #18:#28       // currentValueLength:()I
  #147 = Methodref          #2.#146       // scala/collection/convert/impl/ChampStepperBase.currentValueLength:()I
  #148 = NameAndType        #122:#86      // searchNextValueNode:()Z
  #149 = Methodref          #2.#148       // scala/collection/convert/impl/ChampStepperBase.searchNextValueNode:()Z
  #150 = NameAndType        #33:#34       // maxSize_$eq:(I)V
  #151 = Methodref          #2.#150       // scala/collection/convert/impl/ChampStepperBase.maxSize_$eq:(I)V
  #152 = Utf8               ans
  #153 = Utf8               Z
  #154 = Utf8               trySplit
  #155 = Utf8               ()Ljava/lang/Object;
  #156 = Utf8               ()TSub;
  #157 = NameAndType        #141:#142     // semiclone:()Lscala/collection/convert/impl/ChampStepperBase;
  #158 = Methodref          #2.#157       // scala/collection/convert/impl/ChampStepperBase.semiclone:()Lscala/collection/convert/impl/ChampStepperBase;
  #159 = NameAndType        #19:#42       // currentValueNode:()Lscala/collection/immutable/Node;
  #160 = Methodref          #2.#159       // scala/collection/convert/impl/ChampStepperBase.currentValueNode:()Lscala/collection/immutable/Node;
  #161 = Utf8               java/util/Arrays
  #162 = Class              #161          // java/util/Arrays
  #163 = Utf8               copyOf
  #164 = Utf8               ([II)[I
  #165 = NameAndType        #163:#164     // copyOf:([II)[I
  #166 = Methodref          #162.#165     // java/util/Arrays.copyOf:([II)[I
  #167 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;
  #168 = NameAndType        #163:#167     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
  #169 = Methodref          #162.#168     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
  #170 = Class              #26           // "[Lscala/collection/immutable/Node;"
  #171 = Utf8               i
  #172 = Utf8               j
  #173 = Utf8               semi
  #174 = Utf8               fork
  #175 = Utf8               <init>
  #176 = NameAndType        #175:#65      // "<init>":()V
  #177 = Methodref          #5.#176       // java/lang/Object."<init>":()V
  #178 = Utf8               Signature
  #179 = Utf8               Code
  #180 = Utf8               LineNumberTable
  #181 = Utf8               LocalVariableTable
  #182 = Utf8               MethodParameters
  #183 = Utf8               StackMapTable
  #184 = Utf8               InnerClasses
  #185 = Utf8               SourceFile
  #186 = Utf8               RuntimeVisibleAnnotations
  #187 = Utf8               ScalaInlineInfo
  #188 = Utf8               ScalaSig
{
  private int maxSize;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int currentValueCursor;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int currentValueLength;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private T currentValueNode;
    descriptor: Lscala/collection/immutable/Node;
    flags: (0x0002) ACC_PRIVATE
    Signature: #21                          // TT;

  private int currentStackLevel;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int[] nodeCursorsAndLengths;
    descriptor: [I
    flags: (0x0002) ACC_PRIVATE

  private T[] nodes;
    descriptor: [Lscala/collection/immutable/Node;
    flags: (0x0002) ACC_PRIVATE
    Signature: #27                          // [TT;

  public int maxSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #30                 // Field maxSize:I
         4: ireturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public void maxSize_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #30                 // Field maxSize:I
         5: return
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int currentValueCursor();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field currentValueCursor:I
         4: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public void currentValueCursor_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #37                 // Field currentValueCursor:I
         5: return
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int currentValueLength();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field currentValueLength:I
         4: ireturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public void currentValueLength_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #40                 // Field currentValueLength:I
         5: return
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public T currentValueNode();
    descriptor: ()Lscala/collection/immutable/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #45                 // Field currentValueNode:Lscala/collection/immutable/Node;
         4: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/ChampStepperBase;
    Signature: #43                          // ()TT;

  public void currentValueNode_$eq(T);
    descriptor: (Lscala/collection/immutable/Node;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #45                 // Field currentValueNode:Lscala/collection/immutable/Node;
         5: return
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0       6     1   x$1   Lscala/collection/immutable/Node;
    Signature: #48                          // (TT;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  private int currentStackLevel();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #50                 // Field currentStackLevel:I
         4: ireturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  private void currentStackLevel_$eq(int);
    descriptor: (I)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #50                 // Field currentStackLevel:I
         5: return
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  private int[] nodeCursorsAndLengths();
    descriptor: ()[I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #54                 // Field nodeCursorsAndLengths:[I
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  private void nodeCursorsAndLengths_$eq(int[]);
    descriptor: ([I)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #54                 // Field nodeCursorsAndLengths:[I
         5: return
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0       6     1   x$1   [I
    MethodParameters:
      Name                           Flags
      x$1                            final

  private T[] nodes();
    descriptor: ()[Lscala/collection/immutable/Node;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #60                 // Field nodes:[Lscala/collection/immutable/Node;
         4: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/ChampStepperBase;
    Signature: #58                          // ()[TT;

  private void nodes_$eq(T[]);
    descriptor: ([Lscala/collection/immutable/Node;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #60                 // Field nodes:[Lscala/collection/immutable/Node;
         5: return
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0       6     1   x$1   [Lscala/collection/immutable/Node;
    Signature: #63                          // ([TT;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  private void initNodes();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
         4: ifnonnull     34
         7: aload_0
         8: getstatic     #73                 // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
        11: invokevirtual #76                 // Method scala/collection/immutable/Node$.MaxDepth:()I
        14: iconst_2
        15: imul
        16: newarray       int
        18: invokespecial #78                 // Method nodeCursorsAndLengths_$eq:([I)V
        21: aload_0
        22: getstatic     #73                 // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
        25: invokevirtual #76                 // Method scala/collection/immutable/Node$.MaxDepth:()I
        28: anewarray     #80                 // class scala/collection/immutable/Node
        31: invokespecial #82                 // Method nodes_$eq:([Lscala/collection/immutable/Node;)V
        34: return
      StackMapTable: number_of_entries = 1
        frame_type = 34 /* same */
      LineNumberTable:
        line 41: 0
        line 42: 7
        line 43: 21
        line 41: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public void initRoot(T);
    descriptor: (Lscala/collection/immutable/Node;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #88                 // Method scala/collection/immutable/Node.hasNodes:()Z
         4: ifeq          12
         7: aload_0
         8: aload_1
         9: invokespecial #91                 // Method pushNode:(Lscala/collection/immutable/Node;)V
        12: aload_1
        13: invokevirtual #94                 // Method scala/collection/immutable/Node.hasPayload:()Z
        16: ifeq          24
        19: aload_0
        20: aload_1
        21: invokespecial #97                 // Method setupPayloadNode:(Lscala/collection/immutable/Node;)V
        24: return
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 11 /* same */
      LineNumberTable:
        line 47: 0
        line 48: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0      25     1 rootNode   Lscala/collection/immutable/Node;
    Signature: #48                          // (TT;)V
    MethodParameters:
      Name                           Flags
      rootNode                       final

  private final void setupPayloadNode(T);
    descriptor: (Lscala/collection/immutable/Node;)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #100                // Method currentValueNode_$eq:(Lscala/collection/immutable/Node;)V
         5: aload_0
         6: iconst_0
         7: invokevirtual #102                // Method currentValueCursor_$eq:(I)V
        10: aload_0
        11: aload_1
        12: invokevirtual #105                // Method scala/collection/immutable/Node.payloadArity:()I
        15: invokevirtual #107                // Method currentValueLength_$eq:(I)V
        18: return
      LineNumberTable:
        line 52: 0
        line 53: 5
        line 54: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0      19     1  node   Lscala/collection/immutable/Node;
    Signature: #48                          // (TT;)V
    MethodParameters:
      Name                           Flags
      node                           final

  private final void pushNode(T);
    descriptor: (Lscala/collection/immutable/Node;)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: invokespecial #109                // Method initNodes:()V
         4: aload_0
         5: aload_0
         6: invokespecial #111                // Method currentStackLevel:()I
         9: iconst_1
        10: iadd
        11: invokespecial #113                // Method currentStackLevel_$eq:(I)V
        14: aload_0
        15: invokespecial #111                // Method currentStackLevel:()I
        18: iconst_2
        19: imul
        20: istore_2
        21: aload_0
        22: invokespecial #111                // Method currentStackLevel:()I
        25: iconst_2
        26: imul
        27: iconst_1
        28: iadd
        29: istore_3
        30: aload_0
        31: invokespecial #115                // Method nodes:()[Lscala/collection/immutable/Node;
        34: aload_0
        35: invokespecial #111                // Method currentStackLevel:()I
        38: aload_1
        39: aastore
        40: aload_0
        41: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
        44: iload_2
        45: iconst_0
        46: iastore
        47: aload_0
        48: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
        51: iload_3
        52: aload_1
        53: invokevirtual #118                // Method scala/collection/immutable/Node.nodeArity:()I
        56: iastore
        57: return
      LineNumberTable:
        line 58: 0
        line 59: 4
        line 61: 14
        line 62: 21
        line 64: 30
        line 65: 40
        line 66: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      36     2 cursorIndex   I
           30      27     3 lengthIndex   I
            0      58     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0      58     1  node   Lscala/collection/immutable/Node;
    Signature: #48                          // (TT;)V
    MethodParameters:
      Name                           Flags
      node                           final

  private final void popNode();
    descriptor: ()V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokespecial #111                // Method currentStackLevel:()I
         5: iconst_1
         6: isub
         7: invokespecial #113                // Method currentStackLevel_$eq:(I)V
        10: return
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  private final boolean searchNextValueNode();
    descriptor: ()Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=7, args_size=1
         0: aload_0
         1: invokespecial #111                // Method currentStackLevel:()I
         4: iconst_0
         5: if_icmplt     113
         8: aload_0
         9: invokespecial #111                // Method currentStackLevel:()I
        12: iconst_2
        13: imul
        14: istore_1
        15: aload_0
        16: invokespecial #111                // Method currentStackLevel:()I
        19: iconst_2
        20: imul
        21: iconst_1
        22: iadd
        23: istore_2
        24: aload_0
        25: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
        28: iload_1
        29: iaload
        30: istore_3
        31: aload_0
        32: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
        35: iload_2
        36: iaload
        37: istore        4
        39: iload_3
        40: iload         4
        42: if_icmpge     106
        45: aload_0
        46: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
        49: astore        5
        51: aload         5
        53: iload_1
        54: aload         5
        56: iload_1
        57: iaload
        58: iconst_1
        59: iadd
        60: iastore
        61: aload_0
        62: invokespecial #115                // Method nodes:()[Lscala/collection/immutable/Node;
        65: aload_0
        66: invokespecial #111                // Method currentStackLevel:()I
        69: aaload
        70: iload_3
        71: invokevirtual #126                // Method scala/collection/immutable/Node.getNode:(I)Lscala/collection/immutable/Node;
        74: astore        6
        76: aload         6
        78: invokevirtual #88                 // Method scala/collection/immutable/Node.hasNodes:()Z
        81: ifeq          90
        84: aload_0
        85: aload         6
        87: invokespecial #91                 // Method pushNode:(Lscala/collection/immutable/Node;)V
        90: aload         6
        92: invokevirtual #94                 // Method scala/collection/immutable/Node.hasPayload:()Z
        95: ifeq          0
        98: aload_0
        99: aload         6
       101: invokespecial #97                 // Method setupPayloadNode:(Lscala/collection/immutable/Node;)V
       104: iconst_1
       105: ireturn
       106: aload_0
       107: invokespecial #128                // Method popNode:()V
       110: goto          0
       113: iconst_0
       114: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 0 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 89
          locals = [ class scala/collection/convert/impl/ChampStepperBase, int, int, int, int, class "[I", class scala/collection/immutable/Node ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 15
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/collection/convert/impl/ChampStepperBase ]
          stack = []
      LineNumberTable:
        line 78: 0
        line 79: 8
        line 80: 15
        line 82: 24
        line 83: 31
        line 85: 39
        line 86: 45
        line 88: 61
        line 90: 76
        line 91: 90
        line 93: 106
        line 78: 110
        line 96: 113
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           76      30     6 nextNode   Lscala/collection/immutable/Node;
           15      95     1 cursorIndex   I
           24      86     2 lengthIndex   I
           31      79     3 nodeCursor   I
           39      71     4 nodeLength   I
            0     115     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public int characteristics();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public long estimateSize();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method hasStep:()Z
         4: ifeq          13
         7: aload_0
         8: invokevirtual #140                // Method maxSize:()I
        11: i2l
        12: lreturn
        13: lconst_0
        14: lreturn
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public abstract Semi semiclone();
    descriptor: ()Lscala/collection/convert/impl/ChampStepperBase;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #143                         // ()TSemi;

  public final boolean hasStep();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #140                // Method maxSize:()I
         4: iconst_0
         5: if_icmple     47
         8: aload_0
         9: invokevirtual #145                // Method currentValueCursor:()I
        12: aload_0
        13: invokevirtual #147                // Method currentValueLength:()I
        16: if_icmplt     26
        19: aload_0
        20: invokespecial #149                // Method searchNextValueNode:()Z
        23: ifeq          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: istore_1
        32: iload_1
        33: ifne          41
        36: aload_0
        37: iconst_0
        38: invokevirtual #151                // Method maxSize_$eq:(I)V
        41: iload_1
        42: ifeq          47
        45: iconst_1
        46: ireturn
        47: iconst_0
        48: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 26 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 5
      LineNumberTable:
        line 105: 0
        line 106: 8
        line 107: 32
        line 108: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           32      10     1   ans   Z
            0      49     0  this   Lscala/collection/convert/impl/ChampStepperBase;

  public final Sub trySplit();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=6, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method hasStep:()Z
         4: ifne          9
         7: aconst_null
         8: areturn
         9: iconst_0
        10: istore_1
        11: iload_1
        12: aload_0
        13: invokespecial #111                // Method currentStackLevel:()I
        16: if_icmpgt     46
        19: aload_0
        20: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
        23: iconst_2
        24: iload_1
        25: imul
        26: iaload
        27: aload_0
        28: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
        31: iconst_2
        32: iload_1
        33: imul
        34: iconst_1
        35: iadd
        36: iaload
        37: if_icmplt     46
        40: iinc          1, 1
        43: goto          11
        46: iload_1
        47: aload_0
        48: invokespecial #111                // Method currentStackLevel:()I
        51: if_icmple     69
        54: aload_0
        55: invokevirtual #145                // Method currentValueCursor:()I
        58: aload_0
        59: invokevirtual #147                // Method currentValueLength:()I
        62: iconst_2
        63: isub
        64: if_icmple     69
        67: aconst_null
        68: areturn
        69: aload_0
        70: invokevirtual #158                // Method semiclone:()Lscala/collection/convert/impl/ChampStepperBase;
        73: astore_2
        74: aload_2
        75: aload_0
        76: invokevirtual #140                // Method maxSize:()I
        79: invokevirtual #151                // Method maxSize_$eq:(I)V
        82: aload_2
        83: aload_0
        84: invokevirtual #145                // Method currentValueCursor:()I
        87: invokevirtual #102                // Method currentValueCursor_$eq:(I)V
        90: aload_2
        91: aload_0
        92: invokevirtual #160                // Method currentValueNode:()Lscala/collection/immutable/Node;
        95: invokevirtual #100                // Method currentValueNode_$eq:(Lscala/collection/immutable/Node;)V
        98: iload_1
        99: aload_0
       100: invokespecial #111                // Method currentStackLevel:()I
       103: if_icmple     136
       106: aload_2
       107: iconst_m1
       108: invokespecial #113                // Method currentStackLevel_$eq:(I)V
       111: aload_0
       112: invokevirtual #145                // Method currentValueCursor:()I
       115: aload_0
       116: invokevirtual #147                // Method currentValueLength:()I
       119: iadd
       120: iconst_1
       121: iushr
       122: istore_3
       123: aload_2
       124: iload_3
       125: invokevirtual #107                // Method currentValueLength_$eq:(I)V
       128: aload_0
       129: iload_3
       130: invokevirtual #102                // Method currentValueCursor_$eq:(I)V
       133: goto          275
       136: aload_2
       137: aload_0
       138: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       141: aload_0
       142: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       145: arraylength
       146: invokestatic  #166                // Method java/util/Arrays.copyOf:([II)[I
       149: invokespecial #78                 // Method nodeCursorsAndLengths_$eq:([I)V
       152: aload_2
       153: aload_0
       154: invokespecial #115                // Method nodes:()[Lscala/collection/immutable/Node;
       157: aload_0
       158: invokespecial #115                // Method nodes:()[Lscala/collection/immutable/Node;
       161: arraylength
       162: invokestatic  #169                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
       165: checkcast     #170                // class "[Lscala/collection/immutable/Node;"
       168: invokespecial #82                 // Method nodes_$eq:([Lscala/collection/immutable/Node;)V
       171: aload_2
       172: aload_0
       173: invokespecial #111                // Method currentStackLevel:()I
       176: invokespecial #113                // Method currentStackLevel_$eq:(I)V
       179: aload_2
       180: aload_0
       181: invokevirtual #147                // Method currentValueLength:()I
       184: invokevirtual #107                // Method currentValueLength_$eq:(I)V
       187: aload_0
       188: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       191: iconst_2
       192: iload_1
       193: imul
       194: iaload
       195: aload_0
       196: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       199: iconst_2
       200: iload_1
       201: imul
       202: iconst_1
       203: iadd
       204: iaload
       205: iadd
       206: iconst_1
       207: iushr
       208: istore        4
       210: aload_2
       211: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       214: iconst_2
       215: iload_1
       216: imul
       217: iconst_1
       218: iadd
       219: iload         4
       221: iastore
       222: aload_0
       223: invokespecial #111                // Method currentStackLevel:()I
       226: istore        5
       228: iload         5
       230: iload_1
       231: if_icmple     260
       234: aload_0
       235: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       238: iconst_2
       239: iload         5
       241: imul
       242: aload_0
       243: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       246: iconst_2
       247: iload         5
       249: imul
       250: iconst_1
       251: iadd
       252: iaload
       253: iastore
       254: iinc          5, -1
       257: goto          228
       260: aload_0
       261: invokespecial #67                 // Method nodeCursorsAndLengths:()[I
       264: iconst_2
       265: iload_1
       266: imul
       267: iload         4
       269: iastore
       270: aload_0
       271: invokespecial #149                // Method searchNextValueNode:()Z
       274: pop
       275: aload_2
       276: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 34 /* same */
        frame_type = 22 /* same */
        frame_type = 252 /* append */
          offset_delta = 66
          locals = [ class scala/collection/convert/impl/ChampStepperBase ]
        frame_type = 254 /* append */
          offset_delta = 91
          locals = [ top, int, int ]
        frame_type = 31 /* same */
        frame_type = 248 /* chop */
          offset_delta = 14
      LineNumberTable:
        line 112: 0
        line 114: 9
        line 115: 11
        line 116: 46
        line 118: 69
        line 119: 74
        line 120: 82
        line 121: 90
        line 122: 98
        line 124: 106
        line 125: 111
        line 126: 123
        line 127: 128
        line 122: 133
        line 131: 136
        line 132: 152
        line 133: 171
        line 134: 179
        line 143: 187
        line 144: 210
        line 145: 222
        line 146: 228
        line 147: 234
        line 148: 254
        line 146: 257
        line 150: 260
        line 151: 270
        line 153: 275
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          123      10     3     i   I
          210      65     4     i   I
          228      47     5     j   I
           74     202     2  semi   Lscala/collection/convert/impl/ChampStepperBase;
           11     265     1  fork   I
            0     277     0  this   Lscala/collection/convert/impl/ChampStepperBase;
    Signature: #156                         // ()TSub;

  public scala.collection.convert.impl.ChampStepperBase(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #30                 // Field maxSize:I
         5: aload_0
         6: invokespecial #177                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: iconst_0
        11: putfield      #37                 // Field currentValueCursor:I
        14: aload_0
        15: iconst_0
        16: putfield      #40                 // Field currentValueLength:I
        19: aload_0
        20: iconst_m1
        21: putfield      #50                 // Field currentStackLevel:I
        24: return
      LineNumberTable:
        line 26: 0
        line 27: 5
        line 32: 9
        line 33: 14
        line 36: 19
        line 26: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/collection/convert/impl/ChampStepperBase;
            0      25     1 maxSize   I
    MethodParameters:
      Name                           Flags
      maxSize                        final
}
InnerClasses:
  public static #14= #7 of #13;           // EfficientSplit=class scala/collection/Stepper$EfficientSplit of class scala/collection/Stepper
Signature: #3                           // <A:Ljava/lang/Object;T:Lscala/collection/immutable/Node<TT;>;Sub:Ljava/lang/Object;Semi:TSub;>Ljava/lang/Object;Lscala/collection/Stepper$EfficientSplit;
SourceFile: "ChampStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\reA\u0002\u0012$\u0003\u000393\u0006\u0003\u0005A\u0001\t\u0005\r\u0011\"\u0005B\u0011!)\u0005A!a\u0001\n#1\u0005\u0002\u0003\'\u0001\u0005\u0003\u0005\u000b\u0015\u0002\"\t\u000b5\u0003A\u0011\u0001(\t\u000fu\u0004\u0001\u0019!C\t\u0003\"9a\u0010\u0001a\u0001\n#y\bbBA\u0002\u0001\u0001\u0006KA\u0011\u0005\t\u0003\u000b\u0001\u0001\u0019!C\t\u0003\"I\u0011q\u0001\u0001A\u0002\u0013E\u0011\u0011\u0002\u0005\b\u0003\u001b\u0001\u0001\u0015)\u0003C\u0011-\ty\u0001\u0001a\u0001\u0002\u0004%\t\"!\u0005\t\u0017\u0005M\u0001\u00011AA\u0002\u0013E\u0011Q\u0003\u0005\u000b\u00033\u0001\u0001\u0019!A!B\u0013a\u0006\u0002CA\u000e\u0001\u0001\u0007I\u0011B!\t\u0013\u0005u\u0001\u00011A\u0005\n\u0005}\u0001bBA\u0012\u0001\u0001\u0006KA\u0011\u0005\f\u0003K\u0001\u0001\u0019!a\u0001\n\u0013\t9\u0003C\u0006\u00020\u0001\u0001\r\u00111A\u0005\n\u0005E\u0002bCA\u001b\u0001\u0001\u0007\t\u0011)Q\u0005\u0003SA1\"a\u000e\u0001\u0001\u0004\u0005\r\u0011\"\u0003\u0002:!Y\u0011Q\b\u0001A\u0002\u0003\u0007I\u0011BA \u0011-\t\u0019\u0005\u0001a\u0001\u0002\u0003\u0006K!a\u000f\t\u000f\u0005\u0015\u0003\u0001\"\u0003\u0002H!9\u0011\u0011\n\u0001\u0005\u0002\u0005-\u0003bBA)\u0001\u00115\u00111\u000b\u0005\b\u00033\u0002AQBA.\u0011\u001d\ty\u0006\u0001C\u0007\u0003\u000fBq!!\u0019\u0001\t\u001b\t\u0019\u0007\u0003\u0004\u0002l\u0001!\t!\u0011\u0005\b\u0003[\u0002A\u0011AA8\u0011\u001d\t9\b\u0001D\u0001\u0003sBq!a\u001f\u0001\t\u000b\ti\bC\u0004\u0002\u0000\u0001!)!!!\u0003!\rC\u0017-\u001c9Ti\u0016\u0004\b/\u001a:CCN,\'B\u0001\u0013&\u0003\u0011IW\u000e\u001d7\u000b\u0005\u0019:\u0013aB2p]Z,\'\u000f\u001e\u0006\u0003Q%\n!bY8mY\u0016\u001cG/[8o\u0015\u0005Q\u0013!B:dC2\fW#\u0002\u0017T;\u001et7c\u0001\u0001.cA\u0011afL\u0007\u0002S%\u0011\u0001\'\u000b\u0002\u0007\u0003:L(+\u001a4\u0011\u0005IjdBA\u001a<\u001d\t!$H\u0004\u00026s5\taG\u0003\u00028q\u00051AH]8piz\u001a\u0001!C\u0001+\u0013\tA\u0013&\u0003\u0002=O\u000591\u000b^3qa\u0016\u0014\u0018B\u0001 @\u00059)eMZ5dS\u0016tGo\u00159mSRT!\u0001P\u0014\u0002\u000f5\f\u0007pU5{KV\t!\t\u0005\u0002/\u0007&\u0011A)\u000b\u0002\u0004\u0013:$\u0018aC7bqNK\'0Z0%KF$\"a\u0012&\u0011\u00059B\u0015BA%*\u0005\u0011)f.\u001b;\t\u000f-\u0013\u0011\u0011!a\u0001\u0005\u0006\u0019\u0001\u0010J\u0019\u0002\u00115\f\u0007pU5{K\u0002\na\u0001P5oSRtDCA(}!\u0019\u0001\u0006!\u0015/g[6\t1\u0005\u0005\u0002S\'2\u0001A!\u0002+\u0001\u0005\u0004)&!A!\u0012\u0005YK\u0006C\u0001\u0018X\u0013\tA\u0016FA\u0004O_RD\u0017N\\4\u0011\u00059R\u0016BA.*\u0005\r\te.\u001f\t\u0003%v#QA\u0018\u0001C\u0002}\u0013\u0011\u0001V\t\u0003-\u0002\u00042!\u00193]\u001b\u0005\u0011\'BA2(\u0003%IW.\\;uC\ndW-\u0003\u0002fE\n!aj\u001c3f!\t\u0011v\rB\u0003i\u0001\t\u0007\u0011NA\u0002Tk\n\f\"A[-\u0011\u00059Z\u0017B\u00017*\u0005\u0011qU\u000f\u001c7\u0011\u0005IsG!B8\u0001\u0005\u0004\u0001(\u0001B*f[&\f\"AV9\u0013\u0007I4GO\u0002\u0003t\u0001\u0001\t(\u0001\u0004\u001fsK\u001aLg.Z7f]Rt\u0004gA;xuB1\u0001\u000bA)]mf\u0004\"AU<\u0005\u0013at\u0017\u0011!A\u0001\u0006\u0003)&aA0%cA\u0011!K\u001f\u0003\nw:\f\t\u0011!A\u0003\u0002U\u00131a\u0018\u00133\u0011\u0015\u0001E\u00011\u0001C\u0003I\u0019WO\u001d:f]R4\u0016\r\\;f\u0007V\u00148o\u001c:\u0002-\r,(O]3oiZ\u000bG.^3DkJ\u001cxN]0%KF$2aRA\u0001\u0011\u001dYe!!AA\u0002\t\u000b1cY;se\u0016tGOV1mk\u0016\u001cUO]:pe\u0002\n!cY;se\u0016tGOV1mk\u0016dUM\\4uQ\u000612-\u001e:sK:$h+\u00197vK2+gn\u001a;i?\u0012*\u0017\u000fF\u0002H\u0003\u0017AqaS\u0005\u0002\u0002\u0003\u0007!)A\ndkJ\u0014XM\u001c;WC2,X\rT3oORD\u0007%\u0001\tdkJ\u0014XM\u001c;WC2,XMT8eKV\tA,\u0001\u000bdkJ\u0014XM\u001c;WC2,XMT8eK~#S-\u001d\u000b\u0004\u000f\u0006]\u0001bB&\r\u0003\u0003\u0005\r\u0001X\u0001\u0012GV\u0014(/\u001a8u-\u0006dW/\u001a(pI\u0016\u0004\u0013!E2veJ,g\u000e^*uC\u000e\\G*\u001a<fY\u0006)2-\u001e:sK:$8\u000b^1dW2+g/\u001a7`I\u0015\fHcA$\u0002\"!91jDA\u0001\u0002\u0004\u0011\u0015AE2veJ,g\u000e^*uC\u000e\\G*\u001a<fY\u0002\nQC\\8eK\u000e+(o]8sg\u0006sG\rT3oORD7/\u0006\u0002\u0002*A!a&a\u000bC\u0013\r\ti#\u000b\u0002\u0006\u0003J\u0014\u0018-_\u0001\u001a]>$WmQ;sg>\u00148/\u00118e\u0019\u0016tw\r\u001e5t?\u0012*\u0017\u000fF\u0002H\u0003gA\u0001b\u0013\n\u0002\u0002\u0003\u0007\u0011\u0011F\u0001\u0017]>$WmQ;sg>\u00148/\u00118e\u0019\u0016tw\r\u001e5tA\u0005)an\u001c3fgV\u0011\u00111\b\t\u0005]\u0005-B,A\u0005o_\u0012,7o\u0018\u0013fcR\u0019q)!\u0011\t\u0011-+\u0012\u0011!a\u0001\u0003w\taA\\8eKN\u0004\u0013!C5oSRtu\u000eZ3t)\u00059\u0015\u0001C5oSR\u0014vn\u001c;\u0015\u0007\u001d\u000bi\u0005\u0003\u0004\u0002Pa\u0001\r\u0001X\u0001\te>|GOT8eK\u0006\u00012/\u001a;vaB\u000b\u0017\u0010\\8bI:{G-\u001a\u000b\u0004\u000f\u0006U\u0003BBA,3\u0001\u0007A,\u0001\u0003o_\u0012,\u0017\u0001\u00039vg\"tu\u000eZ3\u0015\u0007\u001d\u000bi\u0006\u0003\u0004\u0002Xi\u0001\r\u0001X\u0001\ba>\u0004hj\u001c3f\u0003M\u0019X-\u0019:dQ:+\u0007\u0010\u001e,bYV,gj\u001c3f)\t\t)\u0007E\u0002/\u0003OJ1!!\u001b*\u0005\u001d\u0011un\u001c7fC:\fqb\u00195be\u0006\u001cG/\u001a:jgRL7m]\u0001\rKN$\u0018.\\1uKNK\'0Z\u000b\u0003\u0003c\u00022ALA:\u0013\r\t)(\u000b\u0002\u0005\u0019>tw-A\u0005tK6L7\r\\8oKR\tQ.A\u0004iCN\u001cF/\u001a9\u0016\u0005\u0005\u0015\u0014\u0001\u0003;ssN\u0003H.\u001b;\u0015\u0003\u0019\u0004"
    )
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 00 00 1A 00 AF 00 22 00 00 85 00 1C 00 00 16
   00 1C 01 00 33 00 22 01 00 11 00 1C 00 00 26 00
   22 00 00 12 00 1C 00 00 29 00 22 00 00 13 00 2A
   00 00 2E 00 2F 00 00 86 00 87 00 00 88 00 56 01
   00 40 00 41 01 00 53 00 2F 00 00 0F 00 1C 00 00
   21 00 22 00 00 17 00 34 01 00 37 00 38 01 00 19
   00 39 01 00 3D 00 3E 01 00 79 00 41 01 00 59 00
   2F 01 00 7A 00 56 01 00 8D 00 8E 00 00 5F 00 2F
   01 00 9A 00 9B 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
