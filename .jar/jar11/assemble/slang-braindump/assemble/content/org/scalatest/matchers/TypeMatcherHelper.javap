Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/matchers/TypeMatcherHelper.class
  Last modified May 29, 2022; size 4932 bytes
  SHA-256 checksum a1fd9dd887bfce7823a4514651f3f050a5da4656c6c59be18e194003bf6399cb
  Compiled from "TypeMatcherHelper.scala"
public final class org.scalatest.matchers.TypeMatcherHelper
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/matchers/TypeMatcherHelper
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 8, attributes: 3
Constant pool:
   #1 = Utf8               org/scalatest/matchers/TypeMatcherHelper
   #2 = Class              #1             // org/scalatest/matchers/TypeMatcherHelper
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               TypeMatcherHelper.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005\u0005\u001dt!\u0002\u0007\u000e\u0011\u0003!b!\u0002\f\u000e\u0011\u00039\u0002\"\u0002\u0010\u0002\t\u0003y\u0002\"\u0002\u0011\u0002\t\u0003\t\u0003\"B\u001d\u0002\t\u0003Q\u0004\"\u0002#\u0002\t\u0003)\u0005\"\u0002\'\u0002\t\u0003i\u0005\"\u0002+\u0002\t\u0013)\u0006\"B4\u0002\t\u0003A\u0007bBA\u0010\u0003\u0011\u0005\u0011\u0011\u0005\u0005\b\u0003k\tA\u0011AA\u001c\u0011\u001d\ty%\u0001C\u0001\u0003#\n\u0011\u0003V=qK6\u000bGo\u00195fe\"+G\u000e]3s\u0015\tqq\"\u0001\u0005nCR\u001c\u0007.\u001a:t\u0015\t\u0001\u0012#A\u0005tG\u0006d\u0017\r^3ti*\t!#A\u0002pe\u001e\u001c\u0001\u0001\u0005\u0002\u0016\u00035\tQBA\tUsB,W*\u0019;dQ\u0016\u0014\b*\u001a7qKJ\u001c\"!\u0001\r\u0011\u0005eaR\"\u0001\u000e\u000b\u0003m\tQa]2bY\u0006L!!\b\u000e\u0003\r\u0005s\u0017PU3g\u0003\u0019a\u0014N\\5u}Q\tA#\u0001\u0007b)f\u0004X-T1uG\",\'\u000f\u0006\u0002#QA\u0019QcI\u0013\n\u0005\u0011j!aB\'bi\u000eDWM\u001d\t\u00033\u0019J!a\n\u000e\u0003\u0007\u0005s\u0017\u0010C\u0003*\u0007\u0001\u0007!&A\u0003b)f\u0004X\r\r\u0002,gA\u0019AfL\u0019\u000e\u00035R!AL\u0007\u0002\u0007\u0011\u001cH.\u0003\u00021[\t9\"+Z:vYR|e-\u0011+za\u0016LeN^8dCRLwN\u001c\t\u0003eMb\u0001\u0001B\u00055Q\u0005\u0005\t\u0011!B\u0001k\t\u0019q\fJ\u0019\u0012\u0005Y*\u0003CA\r8\u0013\tA$DA\u0004O_RD\u0017N\\4\u0002\u001b\u0005tG+\u001f9f\u001b\u0006$8\r[3s)\t\u00113\bC\u0003=\t\u0001\u0007Q(\u0001\u0004b]RK\b/\u001a\u0019\u0003}\t\u00032\u0001L B\u0013\t\u0001UF\u0001\rSKN,H\u000e^(g\u0003:$\u0016\u0010]3J]Z|7-\u0019;j_:\u0004\"A\r\"\u0005\u0013\r[\u0014\u0011!A\u0001\u0006\u0003)$aA0%e\u0005yan\u001c;B)f\u0004X-T1uG\",\'\u000f\u0006\u0002#\r\")\u0011&\u0002a\u0001\u000fB\u0012\u0001J\u0013\t\u0004Y=J\u0005C\u0001\u001aK\t%Ye)!A\u0001\u0002\u000b\u0005QGA\u0002`IM\n\u0001C\\8u\u0003:$\u0016\u0010]3NCR\u001c\u0007.\u001a:\u0015\u0005\tr\u0005\"\u0002\u001f\u0007\u0001\u0004y\u0005G\u0001)S!\ras(\u0015\t\u0003eI#\u0011b\u0015(\u0002\u0002\u0003\u0005)\u0011A\u001b\u0003\u0007}#C\'A\u0004d_:4wN]7\u0016\u0005Y\u001bGcA,[KB\u0011\u0011\u0004W\u0005\u00033j\u0011qAQ8pY\u0016\fg\u000eC\u0003\\\u000f\u0001\u0007A,\u0001\u0005dY\u0006\u001c8\u000fV1h!\ri\u0006MY\u0007\u0002=*\u0011qLG\u0001\be\u00164G.Z2u\u0013\t\tgL\u0001\u0005DY\u0006\u001c8\u000fV1h!\t\u00114\rB\u0003e\u000f\t\u0007QGA\u0001U\u0011\u00151w\u00011\u0001&\u0003\u0005A\u0018aC1tg\u0016\u0014H/\u0011+za\u0016$b![<z\u007f\u0006=\u0001C\u00016u\u001d\tY\'O\u0004\u0002mc:\u0011Q\u000e]\u0007\u0002]*\u0011qnE\u0001\u0007yI|w\u000e\u001e \n\u0003II!\u0001E\t\n\u0005M|\u0011a\u00029bG.\fw-Z\u0005\u0003kZ\u0014\u0011\"Q:tKJ$\u0018n\u001c8\u000b\u0005M|\u0001\"\u0002=\t\u0001\u0004)\u0013\u0001\u00027fMRDQ!\u000b\u0005A\u0002i\u0004$a_?\u0011\u00071zC\u0010\u0005\u00023{\u0012Ia0_A\u0001\u0002\u0003\u0015\t!\u000e\u0002\u0004?\u0012*\u0004bBA\u0001\u0011\u0001\u0007\u00111A\u0001\u000baJ,G\u000f^5gS\u0016\u0014\b\u0003BA\u0003\u0003\u0017i!!a\u0002\u000b\u0007\u0005%\u0011#A\u0005tG\u0006d\u0017m\u0019;jG&!\u0011QBA\u0004\u0005)\u0001&/\u001a;uS\u001aLWM\u001d\u0005\b\u0003#A\u0001\u0019AA\n\u0003\r\u0001xn\u001d\t\u0005\u0003+\tY\"\u0004\u0002\u0002\u0018)!\u0011\u0011DA\u0004\u0003\u0019\u0019x.\u001e:dK&!\u0011QDA\f\u0005!\u0001vn]5uS>t\u0017\u0001D1tg\u0016\u0014H/\u00118UsB,G#C5\u0002$\u0005\u0015\u0012\u0011GA\u001a\u0011\u0015A\u0018\u00021\u0001&\u0011\u0019a\u0014\u00021\u0001\u0002(A\"\u0011\u0011FA\u0017!\u0011as(a\u000b\u0011\u0007I\ni\u0003B\u0006\u00020\u0005\u0015\u0012\u0011!A\u0001\u0006\u0003)$aA0%m!9\u0011\u0011A\u0005A\u0002\u0005\r\u0001bBA\t\u0013\u0001\u0007\u00111C\u0001\u0018CN\u001cXM\u001d;B)f\u0004Xm\u00155pk2$\')\u001a+sk\u0016$2\"[A\u001d\u0003w\t9%a\u0013\u0002N!)\u0001P\u0003a\u0001K!1\u0011F\u0003a\u0001\u0003{\u0001D!a\u0010\u0002DA!AfLA!!\r\u0011\u00141\t\u0003\f\u0003\u000b\nY$!A\u0001\u0002\u000b\u0005QGA\u0002`I]Ba!!\u0013\u000b\u0001\u00049\u0016\u0001D:i_VdGMQ3UeV,\u0007bBA\u0001\u0015\u0001\u0007\u00111\u0001\u0005\b\u0003#Q\u0001\u0019AA\n\u0003a\t7o]3si\u0006sG+\u001f9f\'\"|W\u000f\u001c3CKR\u0013X/\u001a\u000b\fS\u0006M\u0013QKA1\u0003G\n)\u0007C\u0003y\u0017\u0001\u0007Q\u0005\u0003\u0004=\u0017\u0001\u0007\u0011q\u000b\u0019\u0005\u00033\ni\u0006\u0005\u0003-\u007f\u0005m\u0003c\u0001\u001a\u0002^\u0011Y\u0011qLA+\u0003\u0003\u0005\tQ!\u00016\u0005\ryF\u0005\u000f\u0005\u0007\u0003\u0013Z\u0001\u0019A,\t\u000f\u0005\u00051\u00021\u0001\u0002\u0004!9\u0011\u0011C\u0006A\u0002\u0005M\u0001
   #9 = Utf8               assertAnTypeShouldBeTrue
  #10 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #11 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #12 = Utf8               left
  #13 = Utf8               anType
  #14 = Utf8               shouldBeTrue
  #15 = Utf8               prettifier
  #16 = Utf8               pos
  #17 = Utf8               org/scalatest/matchers/TypeMatcherHelper$
  #18 = Class              #17            // org/scalatest/matchers/TypeMatcherHelper$
  #19 = Utf8               MODULE$
  #20 = Utf8               Lorg/scalatest/matchers/TypeMatcherHelper$;
  #21 = NameAndType        #19:#20        // MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
  #22 = Fieldref           #18.#21        // org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
  #23 = NameAndType        #9:#10         // assertAnTypeShouldBeTrue:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #24 = Methodref          #18.#23        // org/scalatest/matchers/TypeMatcherHelper$.assertAnTypeShouldBeTrue:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #25 = Utf8               Ljava/lang/Object;
  #26 = Utf8               Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
  #27 = Utf8               Z
  #28 = Utf8               Lorg/scalactic/Prettifier;
  #29 = Utf8               Lorg/scalactic/source/Position;
  #30 = Utf8               assertATypeShouldBeTrue
  #31 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #32 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #33 = Utf8               aType
  #34 = NameAndType        #30:#31        // assertATypeShouldBeTrue:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #35 = Methodref          #18.#34        // org/scalatest/matchers/TypeMatcherHelper$.assertATypeShouldBeTrue:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #36 = Utf8               Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;
  #37 = Utf8               assertAnType
  #38 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #39 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #40 = NameAndType        #37:#38        // assertAnType:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #41 = Methodref          #18.#40        // org/scalatest/matchers/TypeMatcherHelper$.assertAnType:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #42 = Utf8               assertAType
  #43 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #44 = Utf8               (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #45 = NameAndType        #42:#43        // assertAType:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #46 = Methodref          #18.#45        // org/scalatest/matchers/TypeMatcherHelper$.assertAType:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #47 = Utf8               notAnTypeMatcher
  #48 = Utf8               (Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #49 = Utf8               (Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;)Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;
  #50 = NameAndType        #47:#48        // notAnTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #51 = Methodref          #18.#50        // org/scalatest/matchers/TypeMatcherHelper$.notAnTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #52 = Utf8               notATypeMatcher
  #53 = Utf8               (Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #54 = Utf8               (Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;)Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;
  #55 = NameAndType        #52:#53        // notATypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #56 = Methodref          #18.#55        // org/scalatest/matchers/TypeMatcherHelper$.notATypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #57 = Utf8               anTypeMatcher
  #58 = NameAndType        #57:#48        // anTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #59 = Methodref          #18.#58        // org/scalatest/matchers/TypeMatcherHelper$.anTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #60 = Utf8               aTypeMatcher
  #61 = NameAndType        #60:#53        // aTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #62 = Methodref          #18.#61        // org/scalatest/matchers/TypeMatcherHelper$.aTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
  #63 = Utf8               Code
  #64 = Utf8               LocalVariableTable
  #65 = Utf8               Signature
  #66 = Utf8               MethodParameters
  #67 = Utf8               SourceFile
  #68 = Utf8               RuntimeVisibleAnnotations
  #69 = Utf8               ScalaSig
{
  public static org.scalatest.compatible.Assertion assertAnTypeShouldBeTrue(java.lang.Object, org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>, boolean, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: aload_3
         7: aload         4
         9: invokevirtual #24                 // Method org/scalatest/matchers/TypeMatcherHelper$.assertAnTypeShouldBeTrue:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        12: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  left   Ljava/lang/Object;
            0      13     1 anType   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      13     2 shouldBeTrue   Z
            0      13     3 prettifier   Lorg/scalactic/Prettifier;
            0      13     4   pos   Lorg/scalactic/source/Position;
    Signature: #11                          // (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    MethodParameters:
      Name                           Flags
      left                           final
      anType                         final
      shouldBeTrue                   final
      prettifier                     final
      pos                            final

  public static org.scalatest.compatible.Assertion assertATypeShouldBeTrue(java.lang.Object, org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>, boolean, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: aload_3
         7: aload         4
         9: invokevirtual #35                 // Method org/scalatest/matchers/TypeMatcherHelper$.assertATypeShouldBeTrue:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        12: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  left   Ljava/lang/Object;
            0      13     1 aType   Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;
            0      13     2 shouldBeTrue   Z
            0      13     3 prettifier   Lorg/scalactic/Prettifier;
            0      13     4   pos   Lorg/scalactic/source/Position;
    Signature: #32                          // (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;ZLorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    MethodParameters:
      Name                           Flags
      left                           final
      aType                          final
      shouldBeTrue                   final
      prettifier                     final
      pos                            final

  public static org.scalatest.compatible.Assertion assertAnType(java.lang.Object, org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #41                 // Method org/scalatest/matchers/TypeMatcherHelper$.assertAnType:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  left   Ljava/lang/Object;
            0      11     1 anType   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      11     2 prettifier   Lorg/scalactic/Prettifier;
            0      11     3   pos   Lorg/scalactic/source/Position;
    Signature: #39                          // (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    MethodParameters:
      Name                           Flags
      left                           final
      anType                         final
      prettifier                     final
      pos                            final

  public static org.scalatest.compatible.Assertion assertAType(java.lang.Object, org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #46                 // Method org/scalatest/matchers/TypeMatcherHelper$.assertAType:(Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  left   Ljava/lang/Object;
            0      11     1 aType   Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;
            0      11     2 prettifier   Lorg/scalactic/Prettifier;
            0      11     3   pos   Lorg/scalactic/source/Position;
    Signature: #44                          // (Ljava/lang/Object;Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    MethodParameters:
      Name                           Flags
      left                           final
      aType                          final
      prettifier                     final
      pos                            final

  public static org.scalatest.matchers.Matcher<java.lang.Object> notAnTypeMatcher(org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: invokevirtual #51                 // Method org/scalatest/matchers/TypeMatcherHelper$.notAnTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 anType   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
    Signature: #49                          // (Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;)Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      anType                         final

  public static org.scalatest.matchers.Matcher<java.lang.Object> notATypeMatcher(org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: invokevirtual #56                 // Method org/scalatest/matchers/TypeMatcherHelper$.notATypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 aType   Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;
    Signature: #54                          // (Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;)Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      aType                          final

  public static org.scalatest.matchers.Matcher<java.lang.Object> anTypeMatcher(org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: invokevirtual #59                 // Method org/scalatest/matchers/TypeMatcherHelper$.anTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;)Lorg/scalatest/matchers/Matcher;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 anType   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
    Signature: #49                          // (Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;)Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      anType                         final

  public static org.scalatest.matchers.Matcher<java.lang.Object> aTypeMatcher(org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #22                 // Field org/scalatest/matchers/TypeMatcherHelper$.MODULE$:Lorg/scalatest/matchers/TypeMatcherHelper$;
         3: aload_0
         4: invokevirtual #62                 // Method org/scalatest/matchers/TypeMatcherHelper$.aTypeMatcher:(Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;)Lorg/scalatest/matchers/Matcher;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 aType   Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation;
    Signature: #54                          // (Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;)Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      aType                          final
}
SourceFile: "TypeMatcherHelper.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u001dt!\u0002\u0007\u000e\u0011\u0003!b!\u0002\f\u000e\u0011\u00039\u0002\"\u0002\u0010\u0002\t\u0003y\u0002\"\u0002\u0011\u0002\t\u0003\t\u0003\"B\u001d\u0002\t\u0003Q\u0004\"\u0002#\u0002\t\u0003)\u0005\"\u0002\'\u0002\t\u0003i\u0005\"\u0002+\u0002\t\u0013)\u0006\"B4\u0002\t\u0003A\u0007bBA\u0010\u0003\u0011\u0005\u0011\u0011\u0005\u0005\b\u0003k\tA\u0011AA\u001c\u0011\u001d\ty%\u0001C\u0001\u0003#\n\u0011\u0003V=qK6\u000bGo\u00195fe\"+G\u000e]3s\u0015\tqq\"\u0001\u0005nCR\u001c\u0007.\u001a:t\u0015\t\u0001\u0012#A\u0005tG\u0006d\u0017\r^3ti*\t!#A\u0002pe\u001e\u001c\u0001\u0001\u0005\u0002\u0016\u00035\tQBA\tUsB,W*\u0019;dQ\u0016\u0014\b*\u001a7qKJ\u001c\"!\u0001\r\u0011\u0005eaR\"\u0001\u000e\u000b\u0003m\tQa]2bY\u0006L!!\b\u000e\u0003\r\u0005s\u0017PU3g\u0003\u0019a\u0014N\\5u}Q\tA#\u0001\u0007b)f\u0004X-T1uG\",\'\u000f\u0006\u0002#QA\u0019QcI\u0013\n\u0005\u0011j!aB\'bi\u000eDWM\u001d\t\u00033\u0019J!a\n\u000e\u0003\u0007\u0005s\u0017\u0010C\u0003*\u0007\u0001\u0007!&A\u0003b)f\u0004X\r\r\u0002,gA\u0019AfL\u0019\u000e\u00035R!AL\u0007\u0002\u0007\u0011\u001cH.\u0003\u00021[\t9\"+Z:vYR|e-\u0011+za\u0016LeN^8dCRLwN\u001c\t\u0003eMb\u0001\u0001B\u00055Q\u0005\u0005\t\u0011!B\u0001k\t\u0019q\fJ\u0019\u0012\u0005Y*\u0003CA\r8\u0013\tA$DA\u0004O_RD\u0017N\\4\u0002\u001b\u0005tG+\u001f9f\u001b\u0006$8\r[3s)\t\u00113\bC\u0003=\t\u0001\u0007Q(\u0001\u0004b]RK\b/\u001a\u0019\u0003}\t\u00032\u0001L B\u0013\t\u0001UF\u0001\rSKN,H\u000e^(g\u0003:$\u0016\u0010]3J]Z|7-\u0019;j_:\u0004\"A\r\"\u0005\u0013\r[\u0014\u0011!A\u0001\u0006\u0003)$aA0%e\u0005yan\u001c;B)f\u0004X-T1uG\",\'\u000f\u0006\u0002#\r\")\u0011&\u0002a\u0001\u000fB\u0012\u0001J\u0013\t\u0004Y=J\u0005C\u0001\u001aK\t%Ye)!A\u0001\u0002\u000b\u0005QGA\u0002`IM\n\u0001C\\8u\u0003:$\u0016\u0010]3NCR\u001c\u0007.\u001a:\u0015\u0005\tr\u0005\"\u0002\u001f\u0007\u0001\u0004y\u0005G\u0001)S!\ras(\u0015\t\u0003eI#\u0011b\u0015(\u0002\u0002\u0003\u0005)\u0011A\u001b\u0003\u0007}#C\'A\u0004d_:4wN]7\u0016\u0005Y\u001bGcA,[KB\u0011\u0011\u0004W\u0005\u00033j\u0011qAQ8pY\u0016\fg\u000eC\u0003\\\u000f\u0001\u0007A,\u0001\u0005dY\u0006\u001c8\u000fV1h!\ri\u0006MY\u0007\u0002=*\u0011qLG\u0001\be\u00164G.Z2u\u0013\t\tgL\u0001\u0005DY\u0006\u001c8\u000fV1h!\t\u00114\rB\u0003e\u000f\t\u0007QGA\u0001U\u0011\u00151w\u00011\u0001&\u0003\u0005A\u0018aC1tg\u0016\u0014H/\u0011+za\u0016$b![<z\u007f\u0006=\u0001C\u00016u\u001d\tY\'O\u0004\u0002mc:\u0011Q\u000e]\u0007\u0002]*\u0011qnE\u0001\u0007yI|w\u000e\u001e \n\u0003II!\u0001E\t\n\u0005M|\u0011a\u00029bG.\fw-Z\u0005\u0003kZ\u0014\u0011\"Q:tKJ$\u0018n\u001c8\u000b\u0005M|\u0001\"\u0002=\t\u0001\u0004)\u0013\u0001\u00027fMRDQ!\u000b\u0005A\u0002i\u0004$a_?\u0011\u00071zC\u0010\u0005\u00023{\u0012Ia0_A\u0001\u0002\u0003\u0015\t!\u000e\u0002\u0004?\u0012*\u0004bBA\u0001\u0011\u0001\u0007\u00111A\u0001\u000baJ,G\u000f^5gS\u0016\u0014\b\u0003BA\u0003\u0003\u0017i!!a\u0002\u000b\u0007\u0005%\u0011#A\u0005tG\u0006d\u0017m\u0019;jG&!\u0011QBA\u0004\u0005)\u0001&/\u001a;uS\u001aLWM\u001d\u0005\b\u0003#A\u0001\u0019AA\n\u0003\r\u0001xn\u001d\t\u0005\u0003+\tY\"\u0004\u0002\u0002\u0018)!\u0011\u0011DA\u0004\u0003\u0019\u0019x.\u001e:dK&!\u0011QDA\f\u0005!\u0001vn]5uS>t\u0017\u0001D1tg\u0016\u0014H/\u00118UsB,G#C5\u0002$\u0005\u0015\u0012\u0011GA\u001a\u0011\u0015A\u0018\u00021\u0001&\u0011\u0019a\u0014\u00021\u0001\u0002(A\"\u0011\u0011FA\u0017!\u0011as(a\u000b\u0011\u0007I\ni\u0003B\u0006\u00020\u0005\u0015\u0012\u0011!A\u0001\u0006\u0003)$aA0%m!9\u0011\u0011A\u0005A\u0002\u0005\r\u0001bBA\t\u0013\u0001\u0007\u00111C\u0001\u0018CN\u001cXM\u001d;B)f\u0004Xm\u00155pk2$\')\u001a+sk\u0016$2\"[A\u001d\u0003w\t9%a\u0013\u0002N!)\u0001P\u0003a\u0001K!1\u0011F\u0003a\u0001\u0003{\u0001D!a\u0010\u0002DA!AfLA!!\r\u0011\u00141\t\u0003\f\u0003\u000b\nY$!A\u0001\u0002\u000b\u0005QGA\u0002`I]Ba!!\u0013\u000b\u0001\u00049\u0016\u0001D:i_VdGMQ3UeV,\u0007bBA\u0001\u0015\u0001\u0007\u00111\u0001\u0005\b\u0003#Q\u0001\u0019AA\n\u0003a\t7o]3si\u0006sG+\u001f9f\'\"|W\u000f\u001c3CKR\u0013X/\u001a\u000b\fS\u0006M\u0013QKA1\u0003G\n)\u0007C\u0003y\u0017\u0001\u0007Q\u0005\u0003\u0004=\u0017\u0001\u0007\u0011q\u000b\u0019\u0005\u00033\ni\u0006\u0005\u0003-\u007f\u0005m\u0003c\u0001\u001a\u0002^\u0011Y\u0011qLA+\u0003\u0003\u0005\tQ!\u00016\u0005\ryF\u0005\u000f\u0005\u0007\u0003\u0013Z\u0001\u0019A,\t\u000f\u0005\u00051\u00021\u0001\u0002\u0004!9\u0011\u0011C\u0006A\u0002\u0005M\u0001"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
