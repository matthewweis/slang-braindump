Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/builder/ReflectionDiffBuilder.class
  Last modified May 29, 2022; size 3146 bytes
  SHA-256 checksum fb84f02e54f17a1166def1cbbb3c3dbc92a8b273069322932def80ca84e2245d
  Compiled from "ReflectionDiffBuilder.java"
public class org.apache.commons.lang3.builder.ReflectionDiffBuilder extends java.lang.Object implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.builder.DiffResult>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #31                         // org/apache/commons/lang3/builder/ReflectionDiffBuilder
  super_class: #32                        // java/lang/Object
  interfaces: 1, fields: 3, methods: 5, attributes: 2
Constant pool:
    #1 = Methodref          #32.#76       // java/lang/Object."<init>":()V
    #2 = Fieldref           #31.#77       // org/apache/commons/lang3/builder/ReflectionDiffBuilder.left:Ljava/lang/Object;
    #3 = Fieldref           #31.#78       // org/apache/commons/lang3/builder/ReflectionDiffBuilder.right:Ljava/lang/Object;
    #4 = Class              #79           // org/apache/commons/lang3/builder/DiffBuilder
    #5 = Methodref          #4.#80        // org/apache/commons/lang3/builder/DiffBuilder."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
    #6 = Fieldref           #31.#81       // org/apache/commons/lang3/builder/ReflectionDiffBuilder.diffBuilder:Lorg/apache/commons/lang3/builder/DiffBuilder;
    #7 = Methodref          #32.#82       // java/lang/Object.equals:(Ljava/lang/Object;)Z
    #8 = Methodref          #4.#83        // org/apache/commons/lang3/builder/DiffBuilder.build:()Lorg/apache/commons/lang3/builder/DiffResult;
    #9 = Methodref          #32.#84       // java/lang/Object.getClass:()Ljava/lang/Class;
   #10 = Methodref          #31.#85       // org/apache/commons/lang3/builder/ReflectionDiffBuilder.appendFields:(Ljava/lang/Class;)V
   #11 = Methodref          #86.#87       // org/apache/commons/lang3/reflect/FieldUtils.getAllFields:(Ljava/lang/Class;)[Ljava/lang/reflect/Field;
   #12 = Methodref          #31.#88       // org/apache/commons/lang3/builder/ReflectionDiffBuilder.accept:(Ljava/lang/reflect/Field;)Z
   #13 = Methodref          #68.#89       // java/lang/reflect/Field.getName:()Ljava/lang/String;
   #14 = Methodref          #86.#90       // org/apache/commons/lang3/reflect/FieldUtils.readField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;
   #15 = Methodref          #4.#91        // org/apache/commons/lang3/builder/DiffBuilder.append:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
   #16 = Class              #92           // java/lang/IllegalAccessException
   #17 = Class              #93           // java/lang/InternalError
   #18 = Class              #94           // java/lang/StringBuilder
   #19 = Methodref          #18.#76       // java/lang/StringBuilder."<init>":()V
   #20 = String             #95           // Unexpected IllegalAccessException:
   #21 = Methodref          #18.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #22 = Methodref          #16.#97       // java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
   #23 = Methodref          #18.#98       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #24 = Methodref          #17.#99       // java/lang/InternalError."<init>":(Ljava/lang/String;)V
   #25 = Class              #100          // org/apache/commons/lang3/ClassUtils
   #26 = Methodref          #101.#102     // java/lang/String.indexOf:(I)I
   #27 = Methodref          #68.#103      // java/lang/reflect/Field.getModifiers:()I
   #28 = Methodref          #104.#105     // java/lang/reflect/Modifier.isTransient:(I)Z
   #29 = Methodref          #104.#106     // java/lang/reflect/Modifier.isStatic:(I)Z
   #30 = Methodref          #31.#83       // org/apache/commons/lang3/builder/ReflectionDiffBuilder.build:()Lorg/apache/commons/lang3/builder/DiffResult;
   #31 = Class              #107          // org/apache/commons/lang3/builder/ReflectionDiffBuilder
   #32 = Class              #108          // java/lang/Object
   #33 = Class              #109          // org/apache/commons/lang3/builder/Builder
   #34 = Utf8               left
   #35 = Utf8               Ljava/lang/Object;
   #36 = Utf8               right
   #37 = Utf8               diffBuilder
   #38 = Utf8               Lorg/apache/commons/lang3/builder/DiffBuilder;
   #39 = Utf8               <init>
   #40 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
   #41 = Utf8               Code
   #42 = Utf8               LineNumberTable
   #43 = Utf8               LocalVariableTable
   #44 = Utf8               this
   #45 = Utf8               Lorg/apache/commons/lang3/builder/ReflectionDiffBuilder;
   #46 = Utf8               lhs
   #47 = Utf8               rhs
   #48 = Utf8               style
   #49 = Utf8               Lorg/apache/commons/lang3/builder/ToStringStyle;
   #50 = Utf8               LocalVariableTypeTable
   #51 = Utf8               TT;
   #52 = Utf8               Signature
   #53 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
   #54 = Utf8               build
   #55 = Utf8               ()Lorg/apache/commons/lang3/builder/DiffResult;
   #56 = Utf8               StackMapTable
   #57 = Utf8               appendFields
   #58 = Utf8               (Ljava/lang/Class;)V
   #59 = Utf8               ex
   #60 = Utf8               Ljava/lang/IllegalAccessException;
   #61 = Utf8               field
   #62 = Utf8               Ljava/lang/reflect/Field;
   #63 = Utf8               clazz
   #64 = Utf8               Ljava/lang/Class;
   #65 = Utf8               Ljava/lang/Class<*>;
   #66 = Class              #110          // "[Ljava/lang/reflect/Field;"
   #67 = Class              #111          // java/lang/Class
   #68 = Class              #112          // java/lang/reflect/Field
   #69 = Utf8               (Ljava/lang/Class<*>;)V
   #70 = Utf8               accept
   #71 = Utf8               (Ljava/lang/reflect/Field;)Z
   #72 = Utf8               ()Ljava/lang/Object;
   #73 = Utf8               Ljava/lang/Object;Lorg/apache/commons/lang3/builder/Builder<Lorg/apache/commons/lang3/builder/DiffResult;>;
   #74 = Utf8               SourceFile
   #75 = Utf8               ReflectionDiffBuilder.java
   #76 = NameAndType        #39:#113      // "<init>":()V
   #77 = NameAndType        #34:#35       // left:Ljava/lang/Object;
   #78 = NameAndType        #36:#35       // right:Ljava/lang/Object;
   #79 = Utf8               org/apache/commons/lang3/builder/DiffBuilder
   #80 = NameAndType        #39:#40       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
   #81 = NameAndType        #37:#38       // diffBuilder:Lorg/apache/commons/lang3/builder/DiffBuilder;
   #82 = NameAndType        #114:#115     // equals:(Ljava/lang/Object;)Z
   #83 = NameAndType        #54:#55       // build:()Lorg/apache/commons/lang3/builder/DiffResult;
   #84 = NameAndType        #116:#117     // getClass:()Ljava/lang/Class;
   #85 = NameAndType        #57:#58       // appendFields:(Ljava/lang/Class;)V
   #86 = Class              #118          // org/apache/commons/lang3/reflect/FieldUtils
   #87 = NameAndType        #119:#120     // getAllFields:(Ljava/lang/Class;)[Ljava/lang/reflect/Field;
   #88 = NameAndType        #70:#71       // accept:(Ljava/lang/reflect/Field;)Z
   #89 = NameAndType        #121:#122     // getName:()Ljava/lang/String;
   #90 = NameAndType        #123:#124     // readField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;
   #91 = NameAndType        #125:#126     // append:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
   #92 = Utf8               java/lang/IllegalAccessException
   #93 = Utf8               java/lang/InternalError
   #94 = Utf8               java/lang/StringBuilder
   #95 = Utf8               Unexpected IllegalAccessException:
   #96 = NameAndType        #125:#127     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #97 = NameAndType        #128:#122     // getMessage:()Ljava/lang/String;
   #98 = NameAndType        #129:#122     // toString:()Ljava/lang/String;
   #99 = NameAndType        #39:#130      // "<init>":(Ljava/lang/String;)V
  #100 = Utf8               org/apache/commons/lang3/ClassUtils
  #101 = Class              #131          // java/lang/String
  #102 = NameAndType        #132:#133     // indexOf:(I)I
  #103 = NameAndType        #134:#135     // getModifiers:()I
  #104 = Class              #136          // java/lang/reflect/Modifier
  #105 = NameAndType        #137:#138     // isTransient:(I)Z
  #106 = NameAndType        #139:#138     // isStatic:(I)Z
  #107 = Utf8               org/apache/commons/lang3/builder/ReflectionDiffBuilder
  #108 = Utf8               java/lang/Object
  #109 = Utf8               org/apache/commons/lang3/builder/Builder
  #110 = Utf8               [Ljava/lang/reflect/Field;
  #111 = Utf8               java/lang/Class
  #112 = Utf8               java/lang/reflect/Field
  #113 = Utf8               ()V
  #114 = Utf8               equals
  #115 = Utf8               (Ljava/lang/Object;)Z
  #116 = Utf8               getClass
  #117 = Utf8               ()Ljava/lang/Class;
  #118 = Utf8               org/apache/commons/lang3/reflect/FieldUtils
  #119 = Utf8               getAllFields
  #120 = Utf8               (Ljava/lang/Class;)[Ljava/lang/reflect/Field;
  #121 = Utf8               getName
  #122 = Utf8               ()Ljava/lang/String;
  #123 = Utf8               readField
  #124 = Utf8               (Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;
  #125 = Utf8               append
  #126 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
  #127 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #128 = Utf8               getMessage
  #129 = Utf8               toString
  #130 = Utf8               (Ljava/lang/String;)V
  #131 = Utf8               java/lang/String
  #132 = Utf8               indexOf
  #133 = Utf8               (I)I
  #134 = Utf8               getModifiers
  #135 = Utf8               ()I
  #136 = Utf8               java/lang/reflect/Modifier
  #137 = Utf8               isTransient
  #138 = Utf8               (I)Z
  #139 = Utf8               isStatic
{
  private final java.lang.Object left;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Object right;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.apache.commons.lang3.builder.DiffBuilder diffBuilder;
    descriptor: Lorg/apache/commons/lang3/builder/DiffBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public <T extends java.lang.Object> org.apache.commons.lang3.builder.ReflectionDiffBuilder(T, T, org.apache.commons.lang3.builder.ToStringStyle);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #2                  // Field left:Ljava/lang/Object;
         9: aload_0
        10: aload_2
        11: putfield      #3                  // Field right:Ljava/lang/Object;
        14: aload_0
        15: new           #4                  // class org/apache/commons/lang3/builder/DiffBuilder
        18: dup
        19: aload_1
        20: aload_2
        21: aload_3
        22: invokespecial #5                  // Method org/apache/commons/lang3/builder/DiffBuilder."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
        25: putfield      #6                  // Field diffBuilder:Lorg/apache/commons/lang3/builder/DiffBuilder;
        28: return
      LineNumberTable:
        line 96: 0
        line 97: 4
        line 98: 9
        line 99: 14
        line 100: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/apache/commons/lang3/builder/ReflectionDiffBuilder;
            0      29     1   lhs   Ljava/lang/Object;
            0      29     2   rhs   Ljava/lang/Object;
            0      29     3 style   Lorg/apache/commons/lang3/builder/ToStringStyle;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      29     1   lhs   TT;
            0      29     2   rhs   TT;
    Signature: #53                          // <T:Ljava/lang/Object;>(TT;TT;Lorg/apache/commons/lang3/builder/ToStringStyle;)V

  public org.apache.commons.lang3.builder.DiffResult build();
    descriptor: ()Lorg/apache/commons/lang3/builder/DiffResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field left:Ljava/lang/Object;
         4: aload_0
         5: getfield      #3                  // Field right:Ljava/lang/Object;
         8: invokevirtual #7                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        11: ifeq          22
        14: aload_0
        15: getfield      #6                  // Field diffBuilder:Lorg/apache/commons/lang3/builder/DiffBuilder;
        18: invokevirtual #8                  // Method org/apache/commons/lang3/builder/DiffBuilder.build:()Lorg/apache/commons/lang3/builder/DiffResult;
        21: areturn
        22: aload_0
        23: aload_0
        24: getfield      #2                  // Field left:Ljava/lang/Object;
        27: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
        30: invokespecial #10                 // Method appendFields:(Ljava/lang/Class;)V
        33: aload_0
        34: getfield      #6                  // Field diffBuilder:Lorg/apache/commons/lang3/builder/DiffBuilder;
        37: invokevirtual #8                  // Method org/apache/commons/lang3/builder/DiffBuilder.build:()Lorg/apache/commons/lang3/builder/DiffResult;
        40: areturn
      LineNumberTable:
        line 104: 0
        line 105: 14
        line 108: 22
        line 109: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/apache/commons/lang3/builder/ReflectionDiffBuilder;
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */

  private void appendFields(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=7, args_size=2
         0: aload_1
         1: invokestatic  #11                 // Method org/apache/commons/lang3/reflect/FieldUtils.getAllFields:(Ljava/lang/Class;)[Ljava/lang/reflect/Field;
         4: astore_2
         5: aload_2
         6: arraylength
         7: istore_3
         8: iconst_0
         9: istore        4
        11: iload         4
        13: iload_3
        14: if_icmpge     107
        17: aload_2
        18: iload         4
        20: aaload
        21: astore        5
        23: aload_0
        24: aload         5
        26: invokespecial #12                 // Method accept:(Ljava/lang/reflect/Field;)Z
        29: ifeq          101
        32: aload_0
        33: getfield      #6                  // Field diffBuilder:Lorg/apache/commons/lang3/builder/DiffBuilder;
        36: aload         5
        38: invokevirtual #13                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
        41: aload         5
        43: aload_0
        44: getfield      #2                  // Field left:Ljava/lang/Object;
        47: iconst_1
        48: invokestatic  #14                 // Method org/apache/commons/lang3/reflect/FieldUtils.readField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;
        51: aload         5
        53: aload_0
        54: getfield      #3                  // Field right:Ljava/lang/Object;
        57: iconst_1
        58: invokestatic  #14                 // Method org/apache/commons/lang3/reflect/FieldUtils.readField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Z)Ljava/lang/Object;
        61: invokevirtual #15                 // Method org/apache/commons/lang3/builder/DiffBuilder.append:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
        64: pop
        65: goto          101
        68: astore        6
        70: new           #17                 // class java/lang/InternalError
        73: dup
        74: new           #18                 // class java/lang/StringBuilder
        77: dup
        78: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        81: ldc           #20                 // String Unexpected IllegalAccessException:
        83: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: aload         6
        88: invokevirtual #22                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
        91: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        94: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        97: invokespecial #24                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
       100: athrow
       101: iinc          4, 1
       104: goto          11
       107: return
      Exception table:
         from    to  target type
            32    65    68   Class java/lang/IllegalAccessException
      LineNumberTable:
        line 113: 0
        line 114: 23
        line 116: 32
        line 117: 58
        line 116: 61
        line 122: 65
        line 118: 68
        line 121: 70
        line 113: 101
        line 125: 107
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           70      31     6    ex   Ljava/lang/IllegalAccessException;
           23      78     5 field   Ljava/lang/reflect/Field;
            0     108     0  this   Lorg/apache/commons/lang3/builder/ReflectionDiffBuilder;
            0     108     1 clazz   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0     108     1 clazz   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 11
          locals = [ class "[Ljava/lang/reflect/Field;", int, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class org/apache/commons/lang3/builder/ReflectionDiffBuilder, class java/lang/Class, class "[Ljava/lang/reflect/Field;", int, int, class java/lang/reflect/Field ]
          stack = [ class java/lang/IllegalAccessException ]
        frame_type = 250 /* chop */
          offset_delta = 32
        frame_type = 248 /* chop */
          offset_delta = 5
    Signature: #69                          // (Ljava/lang/Class<*>;)V

  private boolean accept(java.lang.reflect.Field);
    descriptor: (Ljava/lang/reflect/Field;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #13                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
         4: bipush        36
         6: invokevirtual #26                 // Method java/lang/String.indexOf:(I)I
         9: iconst_m1
        10: if_icmpeq     15
        13: iconst_0
        14: ireturn
        15: aload_1
        16: invokevirtual #27                 // Method java/lang/reflect/Field.getModifiers:()I
        19: invokestatic  #28                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
        22: ifeq          27
        25: iconst_0
        26: ireturn
        27: aload_1
        28: invokevirtual #27                 // Method java/lang/reflect/Field.getModifiers:()I
        31: invokestatic  #29                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
        34: ifne          41
        37: iconst_1
        38: goto          42
        41: iconst_0
        42: ireturn
      LineNumberTable:
        line 128: 0
        line 129: 13
        line 131: 15
        line 132: 25
        line 134: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/apache/commons/lang3/builder/ReflectionDiffBuilder;
            0      43     1 field   Ljava/lang/reflect/Field;
      StackMapTable: number_of_entries = 4
        frame_type = 15 /* same */
        frame_type = 11 /* same */
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public java.lang.Object build();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #30                 // Method build:()Lorg/apache/commons/lang3/builder/DiffResult;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/builder/ReflectionDiffBuilder;
}
Signature: #73                          // Ljava/lang/Object;Lorg/apache/commons/lang3/builder/Builder<Lorg/apache/commons/lang3/builder/DiffResult;>;
SourceFile: "ReflectionDiffBuilder.java"
