Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/math/Equiv$Tuple9Equiv.class
  Last modified May 29, 2022; size 5175 bytes
  SHA-256 checksum 3c60d3e7e01e611f8a008d5d1610ee79e8ff565d0935fbbdc63589cada64928c
  Compiled from "Equiv.scala"
public final class scala.math.Equiv$Tuple9Equiv<T1 extends java.lang.Object, T2 extends java.lang.Object, T3 extends java.lang.Object, T4 extends java.lang.Object, T5 extends java.lang.Object, T6 extends java.lang.Object, T7 extends java.lang.Object, T8 extends java.lang.Object, T9 extends java.lang.Object> extends java.lang.Object implements scala.math.Equiv<scala.Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/Equiv$Tuple9Equiv
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 9, methods: 14, attributes: 5
Constant pool:
    #1 = Utf8               scala/math/Equiv$Tuple9Equiv
    #2 = Class              #1            // scala/math/Equiv$Tuple9Equiv
    #3 = Utf8               <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;T8:Ljava/lang/Object;T9:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple9<TT1;TT2;TT3;TT4;TT5;TT6;TT7;TT8;TT9;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Equiv
    #7 = Class              #6            // scala/math/Equiv
    #8 = Utf8               Equiv.scala
    #9 = Utf8               Tuple9Equiv
   #10 = Utf8               eqv1
   #11 = Utf8               Lscala/math/Equiv;
   #12 = Utf8               Lscala/math/Equiv<TT1;>;
   #13 = Utf8               eqv2
   #14 = Utf8               Lscala/math/Equiv<TT2;>;
   #15 = Utf8               eqv3
   #16 = Utf8               Lscala/math/Equiv<TT3;>;
   #17 = Utf8               eqv4
   #18 = Utf8               Lscala/math/Equiv<TT4;>;
   #19 = Utf8               eqv5
   #20 = Utf8               Lscala/math/Equiv<TT5;>;
   #21 = Utf8               eqv6
   #22 = Utf8               Lscala/math/Equiv<TT6;>;
   #23 = Utf8               eqv7
   #24 = Utf8               Lscala/math/Equiv<TT7;>;
   #25 = Utf8               eqv8
   #26 = Utf8               Lscala/math/Equiv<TT8;>;
   #27 = Utf8               eqv9
   #28 = Utf8               Lscala/math/Equiv<TT9;>;
   #29 = Utf8               ()Lscala/math/Equiv;
   #30 = Utf8               ()Lscala/math/Equiv<TT1;>;
   #31 = NameAndType        #10:#11       // eqv1:Lscala/math/Equiv;
   #32 = Fieldref           #2.#31        // scala/math/Equiv$Tuple9Equiv.eqv1:Lscala/math/Equiv;
   #33 = Utf8               this
   #34 = Utf8               Lscala/math/Equiv$Tuple9Equiv;
   #35 = Utf8               ()Lscala/math/Equiv<TT2;>;
   #36 = NameAndType        #13:#11       // eqv2:Lscala/math/Equiv;
   #37 = Fieldref           #2.#36        // scala/math/Equiv$Tuple9Equiv.eqv2:Lscala/math/Equiv;
   #38 = Utf8               ()Lscala/math/Equiv<TT3;>;
   #39 = NameAndType        #15:#11       // eqv3:Lscala/math/Equiv;
   #40 = Fieldref           #2.#39        // scala/math/Equiv$Tuple9Equiv.eqv3:Lscala/math/Equiv;
   #41 = Utf8               ()Lscala/math/Equiv<TT4;>;
   #42 = NameAndType        #17:#11       // eqv4:Lscala/math/Equiv;
   #43 = Fieldref           #2.#42        // scala/math/Equiv$Tuple9Equiv.eqv4:Lscala/math/Equiv;
   #44 = Utf8               ()Lscala/math/Equiv<TT5;>;
   #45 = NameAndType        #19:#11       // eqv5:Lscala/math/Equiv;
   #46 = Fieldref           #2.#45        // scala/math/Equiv$Tuple9Equiv.eqv5:Lscala/math/Equiv;
   #47 = Utf8               ()Lscala/math/Equiv<TT6;>;
   #48 = NameAndType        #21:#11       // eqv6:Lscala/math/Equiv;
   #49 = Fieldref           #2.#48        // scala/math/Equiv$Tuple9Equiv.eqv6:Lscala/math/Equiv;
   #50 = Utf8               ()Lscala/math/Equiv<TT7;>;
   #51 = NameAndType        #23:#11       // eqv7:Lscala/math/Equiv;
   #52 = Fieldref           #2.#51        // scala/math/Equiv$Tuple9Equiv.eqv7:Lscala/math/Equiv;
   #53 = Utf8               ()Lscala/math/Equiv<TT8;>;
   #54 = NameAndType        #25:#11       // eqv8:Lscala/math/Equiv;
   #55 = Fieldref           #2.#54        // scala/math/Equiv$Tuple9Equiv.eqv8:Lscala/math/Equiv;
   #56 = Utf8               ()Lscala/math/Equiv<TT9;>;
   #57 = NameAndType        #27:#11       // eqv9:Lscala/math/Equiv;
   #58 = Fieldref           #2.#57        // scala/math/Equiv$Tuple9Equiv.eqv9:Lscala/math/Equiv;
   #59 = Utf8               equiv
   #60 = Utf8               (Lscala/Tuple9;Lscala/Tuple9;)Z
   #61 = Utf8               (Lscala/Tuple9<TT1;TT2;TT3;TT4;TT5;TT6;TT7;TT8;TT9;>;Lscala/Tuple9<TT1;TT2;TT3;TT4;TT5;TT6;TT7;TT8;TT9;>;)Z
   #62 = Utf8               x
   #63 = Utf8               y
   #64 = NameAndType        #10:#29       // eqv1:()Lscala/math/Equiv;
   #65 = Methodref          #2.#64        // scala/math/Equiv$Tuple9Equiv.eqv1:()Lscala/math/Equiv;
   #66 = Utf8               scala/Tuple9
   #67 = Class              #66           // scala/Tuple9
   #68 = Utf8               _1
   #69 = Utf8               ()Ljava/lang/Object;
   #70 = NameAndType        #68:#69       // _1:()Ljava/lang/Object;
   #71 = Methodref          #67.#70       // scala/Tuple9._1:()Ljava/lang/Object;
   #72 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #73 = NameAndType        #59:#72       // equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #74 = InterfaceMethodref #7.#73        // scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #75 = NameAndType        #13:#29       // eqv2:()Lscala/math/Equiv;
   #76 = Methodref          #2.#75        // scala/math/Equiv$Tuple9Equiv.eqv2:()Lscala/math/Equiv;
   #77 = Utf8               _2
   #78 = NameAndType        #77:#69       // _2:()Ljava/lang/Object;
   #79 = Methodref          #67.#78       // scala/Tuple9._2:()Ljava/lang/Object;
   #80 = NameAndType        #15:#29       // eqv3:()Lscala/math/Equiv;
   #81 = Methodref          #2.#80        // scala/math/Equiv$Tuple9Equiv.eqv3:()Lscala/math/Equiv;
   #82 = Utf8               _3
   #83 = NameAndType        #82:#69       // _3:()Ljava/lang/Object;
   #84 = Methodref          #67.#83       // scala/Tuple9._3:()Ljava/lang/Object;
   #85 = NameAndType        #17:#29       // eqv4:()Lscala/math/Equiv;
   #86 = Methodref          #2.#85        // scala/math/Equiv$Tuple9Equiv.eqv4:()Lscala/math/Equiv;
   #87 = Utf8               _4
   #88 = NameAndType        #87:#69       // _4:()Ljava/lang/Object;
   #89 = Methodref          #67.#88       // scala/Tuple9._4:()Ljava/lang/Object;
   #90 = NameAndType        #19:#29       // eqv5:()Lscala/math/Equiv;
   #91 = Methodref          #2.#90        // scala/math/Equiv$Tuple9Equiv.eqv5:()Lscala/math/Equiv;
   #92 = Utf8               _5
   #93 = NameAndType        #92:#69       // _5:()Ljava/lang/Object;
   #94 = Methodref          #67.#93       // scala/Tuple9._5:()Ljava/lang/Object;
   #95 = NameAndType        #21:#29       // eqv6:()Lscala/math/Equiv;
   #96 = Methodref          #2.#95        // scala/math/Equiv$Tuple9Equiv.eqv6:()Lscala/math/Equiv;
   #97 = Utf8               _6
   #98 = NameAndType        #97:#69       // _6:()Ljava/lang/Object;
   #99 = Methodref          #67.#98       // scala/Tuple9._6:()Ljava/lang/Object;
  #100 = NameAndType        #23:#29       // eqv7:()Lscala/math/Equiv;
  #101 = Methodref          #2.#100       // scala/math/Equiv$Tuple9Equiv.eqv7:()Lscala/math/Equiv;
  #102 = Utf8               _7
  #103 = NameAndType        #102:#69      // _7:()Ljava/lang/Object;
  #104 = Methodref          #67.#103      // scala/Tuple9._7:()Ljava/lang/Object;
  #105 = NameAndType        #25:#29       // eqv8:()Lscala/math/Equiv;
  #106 = Methodref          #2.#105       // scala/math/Equiv$Tuple9Equiv.eqv8:()Lscala/math/Equiv;
  #107 = Utf8               _8
  #108 = NameAndType        #107:#69      // _8:()Ljava/lang/Object;
  #109 = Methodref          #67.#108      // scala/Tuple9._8:()Ljava/lang/Object;
  #110 = NameAndType        #27:#29       // eqv9:()Lscala/math/Equiv;
  #111 = Methodref          #2.#110       // scala/math/Equiv$Tuple9Equiv.eqv9:()Lscala/math/Equiv;
  #112 = Utf8               _9
  #113 = NameAndType        #112:#69      // _9:()Ljava/lang/Object;
  #114 = Methodref          #67.#113      // scala/Tuple9._9:()Ljava/lang/Object;
  #115 = Utf8               Lscala/Tuple9;
  #116 = Utf8               equals
  #117 = Utf8               (Ljava/lang/Object;)Z
  #118 = Utf8               obj
  #119 = NameAndType        #116:#117     // equals:(Ljava/lang/Object;)Z
  #120 = Methodref          #5.#119       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #121 = Utf8               Ljava/lang/Object;
  #122 = Utf8               hashCode
  #123 = Utf8               ()I
  #124 = Utf8               <init>
  #125 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #126 = NameAndType        #124:#125     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #127 = Methodref          #67.#126      // scala/Tuple9."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #128 = Utf8               scala/util/hashing/MurmurHash3$
  #129 = Class              #128          // scala/util/hashing/MurmurHash3$
  #130 = Utf8               MODULE$
  #131 = Utf8               Lscala/util/hashing/MurmurHash3$;
  #132 = NameAndType        #130:#131     // MODULE$:Lscala/util/hashing/MurmurHash3$;
  #133 = Fieldref           #129.#132     // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
  #134 = Utf8               productHash
  #135 = Utf8               (Lscala/Product;)I
  #136 = NameAndType        #134:#135     // productHash:(Lscala/Product;)I
  #137 = Methodref          #129.#136     // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
  #138 = Utf8               hashCode_this
  #139 = NameAndType        #59:#60       // equiv:(Lscala/Tuple9;Lscala/Tuple9;)Z
  #140 = Methodref          #2.#139       // scala/math/Equiv$Tuple9Equiv.equiv:(Lscala/Tuple9;Lscala/Tuple9;)Z
  #141 = Utf8               (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
  #142 = Utf8               (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;Lscala/math/Equiv<TT6;>;Lscala/math/Equiv<TT7;>;Lscala/math/Equiv<TT8;>;Lscala/math/Equiv<TT9;>;)V
  #143 = Utf8               ()V
  #144 = NameAndType        #124:#143     // "<init>":()V
  #145 = Methodref          #5.#144       // java/lang/Object."<init>":()V
  #146 = Utf8               Signature
  #147 = Utf8               Code
  #148 = Utf8               LineNumberTable
  #149 = Utf8               LocalVariableTable
  #150 = Utf8               StackMapTable
  #151 = Utf8               MethodParameters
  #152 = Utf8               InnerClasses
  #153 = Utf8               SourceFile
  #154 = Utf8               ScalaInlineInfo
  #155 = Utf8               Scala
{
  private final scala.math.Equiv<T1> eqv1;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/math/Equiv<TT1;>;

  private final scala.math.Equiv<T2> eqv2;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/math/Equiv<TT2;>;

  private final scala.math.Equiv<T3> eqv3;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/math/Equiv<TT3;>;

  private final scala.math.Equiv<T4> eqv4;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/math/Equiv<TT4;>;

  private final scala.math.Equiv<T5> eqv5;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/math/Equiv<TT5;>;

  private final scala.math.Equiv<T6> eqv6;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #22                          // Lscala/math/Equiv<TT6;>;

  private final scala.math.Equiv<T7> eqv7;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #24                          // Lscala/math/Equiv<TT7;>;

  private final scala.math.Equiv<T8> eqv8;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #26                          // Lscala/math/Equiv<TT8;>;

  private final scala.math.Equiv<T9> eqv9;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/math/Equiv<TT9;>;

  private scala.math.Equiv<T1> eqv1();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #32                 // Field eqv1:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 469: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #30                          // ()Lscala/math/Equiv<TT1;>;

  private scala.math.Equiv<T2> eqv2();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field eqv2:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 470: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #35                          // ()Lscala/math/Equiv<TT2;>;

  private scala.math.Equiv<T3> eqv3();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field eqv3:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 471: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #38                          // ()Lscala/math/Equiv<TT3;>;

  private scala.math.Equiv<T4> eqv4();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #43                 // Field eqv4:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 472: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #41                          // ()Lscala/math/Equiv<TT4;>;

  private scala.math.Equiv<T5> eqv5();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field eqv5:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 473: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #44                          // ()Lscala/math/Equiv<TT5;>;

  private scala.math.Equiv<T6> eqv6();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #49                 // Field eqv6:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 474: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #47                          // ()Lscala/math/Equiv<TT6;>;

  private scala.math.Equiv<T7> eqv7();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #52                 // Field eqv7:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 475: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #50                          // ()Lscala/math/Equiv<TT7;>;

  private scala.math.Equiv<T8> eqv8();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #55                 // Field eqv8:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 476: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #53                          // ()Lscala/math/Equiv<TT8;>;

  private scala.math.Equiv<T9> eqv9();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #58                 // Field eqv9:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 477: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple9Equiv;
    Signature: #56                          // ()Lscala/math/Equiv<TT9;>;

  public boolean equiv(scala.Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>, scala.Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>);
    descriptor: (Lscala/Tuple9;Lscala/Tuple9;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #65                 // Method eqv1:()Lscala/math/Equiv;
         4: aload_1
         5: invokevirtual #71                 // Method scala/Tuple9._1:()Ljava/lang/Object;
         8: aload_2
         9: invokevirtual #71                 // Method scala/Tuple9._1:()Ljava/lang/Object;
        12: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        17: ifeq          182
        20: aload_0
        21: invokespecial #76                 // Method eqv2:()Lscala/math/Equiv;
        24: aload_1
        25: invokevirtual #79                 // Method scala/Tuple9._2:()Ljava/lang/Object;
        28: aload_2
        29: invokevirtual #79                 // Method scala/Tuple9._2:()Ljava/lang/Object;
        32: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        37: ifeq          182
        40: aload_0
        41: invokespecial #81                 // Method eqv3:()Lscala/math/Equiv;
        44: aload_1
        45: invokevirtual #84                 // Method scala/Tuple9._3:()Ljava/lang/Object;
        48: aload_2
        49: invokevirtual #84                 // Method scala/Tuple9._3:()Ljava/lang/Object;
        52: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        57: ifeq          182
        60: aload_0
        61: invokespecial #86                 // Method eqv4:()Lscala/math/Equiv;
        64: aload_1
        65: invokevirtual #89                 // Method scala/Tuple9._4:()Ljava/lang/Object;
        68: aload_2
        69: invokevirtual #89                 // Method scala/Tuple9._4:()Ljava/lang/Object;
        72: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        77: ifeq          182
        80: aload_0
        81: invokespecial #91                 // Method eqv5:()Lscala/math/Equiv;
        84: aload_1
        85: invokevirtual #94                 // Method scala/Tuple9._5:()Ljava/lang/Object;
        88: aload_2
        89: invokevirtual #94                 // Method scala/Tuple9._5:()Ljava/lang/Object;
        92: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        97: ifeq          182
       100: aload_0
       101: invokespecial #96                 // Method eqv6:()Lscala/math/Equiv;
       104: aload_1
       105: invokevirtual #99                 // Method scala/Tuple9._6:()Ljava/lang/Object;
       108: aload_2
       109: invokevirtual #99                 // Method scala/Tuple9._6:()Ljava/lang/Object;
       112: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       117: ifeq          182
       120: aload_0
       121: invokespecial #101                // Method eqv7:()Lscala/math/Equiv;
       124: aload_1
       125: invokevirtual #104                // Method scala/Tuple9._7:()Ljava/lang/Object;
       128: aload_2
       129: invokevirtual #104                // Method scala/Tuple9._7:()Ljava/lang/Object;
       132: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       137: ifeq          182
       140: aload_0
       141: invokespecial #106                // Method eqv8:()Lscala/math/Equiv;
       144: aload_1
       145: invokevirtual #109                // Method scala/Tuple9._8:()Ljava/lang/Object;
       148: aload_2
       149: invokevirtual #109                // Method scala/Tuple9._8:()Ljava/lang/Object;
       152: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       157: ifeq          182
       160: aload_0
       161: invokespecial #111                // Method eqv9:()Lscala/math/Equiv;
       164: aload_1
       165: invokevirtual #114                // Method scala/Tuple9._9:()Ljava/lang/Object;
       168: aload_2
       169: invokevirtual #114                // Method scala/Tuple9._9:()Ljava/lang/Object;
       172: invokeinterface #74,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       177: ifeq          182
       180: iconst_1
       181: ireturn
       182: iconst_0
       183: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 182
      LineNumberTable:
        line 480: 0
        line 481: 20
        line 482: 40
        line 483: 60
        line 484: 80
        line 485: 100
        line 486: 120
        line 487: 140
        line 488: 160
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     184     0  this   Lscala/math/Equiv$Tuple9Equiv;
            0     184     1     x   Lscala/Tuple9;
            0     184     2     y   Lscala/Tuple9;
    Signature: #61                          // (Lscala/Tuple9<TT1;TT2;TT3;TT4;TT5;TT6;TT7;TT8;TT9;>;Lscala/Tuple9<TT1;TT2;TT3;TT4;TT5;TT6;TT7;TT8;TT9;>;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=13, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/lang/Object
         4: ifeq          17
         7: aload_0
         8: aload_1
         9: if_acmpne     17
        12: iconst_1
        13: istore_2
        14: goto          319
        17: aload_1
        18: instanceof    #2                  // class scala/math/Equiv$Tuple9Equiv
        21: ifeq          317
        24: aload_1
        25: checkcast     #2                  // class scala/math/Equiv$Tuple9Equiv
        28: astore_3
        29: aload_0
        30: invokespecial #65                 // Method eqv1:()Lscala/math/Equiv;
        33: aload_3
        34: invokespecial #65                 // Method eqv1:()Lscala/math/Equiv;
        37: astore        4
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         4
        46: ifnull        60
        49: goto          312
        52: aload         4
        54: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          312
        60: aload_0
        61: invokespecial #76                 // Method eqv2:()Lscala/math/Equiv;
        64: aload_3
        65: invokespecial #76                 // Method eqv2:()Lscala/math/Equiv;
        68: astore        5
        70: dup
        71: ifnonnull     83
        74: pop
        75: aload         5
        77: ifnull        91
        80: goto          312
        83: aload         5
        85: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        88: ifeq          312
        91: aload_0
        92: invokespecial #81                 // Method eqv3:()Lscala/math/Equiv;
        95: aload_3
        96: invokespecial #81                 // Method eqv3:()Lscala/math/Equiv;
        99: astore        6
       101: dup
       102: ifnonnull     114
       105: pop
       106: aload         6
       108: ifnull        122
       111: goto          312
       114: aload         6
       116: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       119: ifeq          312
       122: aload_0
       123: invokespecial #86                 // Method eqv4:()Lscala/math/Equiv;
       126: aload_3
       127: invokespecial #86                 // Method eqv4:()Lscala/math/Equiv;
       130: astore        7
       132: dup
       133: ifnonnull     145
       136: pop
       137: aload         7
       139: ifnull        153
       142: goto          312
       145: aload         7
       147: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       150: ifeq          312
       153: aload_0
       154: invokespecial #91                 // Method eqv5:()Lscala/math/Equiv;
       157: aload_3
       158: invokespecial #91                 // Method eqv5:()Lscala/math/Equiv;
       161: astore        8
       163: dup
       164: ifnonnull     176
       167: pop
       168: aload         8
       170: ifnull        184
       173: goto          312
       176: aload         8
       178: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       181: ifeq          312
       184: aload_0
       185: invokespecial #96                 // Method eqv6:()Lscala/math/Equiv;
       188: aload_3
       189: invokespecial #96                 // Method eqv6:()Lscala/math/Equiv;
       192: astore        9
       194: dup
       195: ifnonnull     207
       198: pop
       199: aload         9
       201: ifnull        215
       204: goto          312
       207: aload         9
       209: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       212: ifeq          312
       215: aload_0
       216: invokespecial #101                // Method eqv7:()Lscala/math/Equiv;
       219: aload_3
       220: invokespecial #101                // Method eqv7:()Lscala/math/Equiv;
       223: astore        10
       225: dup
       226: ifnonnull     238
       229: pop
       230: aload         10
       232: ifnull        246
       235: goto          312
       238: aload         10
       240: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       243: ifeq          312
       246: aload_0
       247: invokespecial #106                // Method eqv8:()Lscala/math/Equiv;
       250: aload_3
       251: invokespecial #106                // Method eqv8:()Lscala/math/Equiv;
       254: astore        11
       256: dup
       257: ifnonnull     269
       260: pop
       261: aload         11
       263: ifnull        277
       266: goto          312
       269: aload         11
       271: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       274: ifeq          312
       277: aload_0
       278: invokespecial #111                // Method eqv9:()Lscala/math/Equiv;
       281: aload_3
       282: invokespecial #111                // Method eqv9:()Lscala/math/Equiv;
       285: astore        12
       287: dup
       288: ifnonnull     300
       291: pop
       292: aload         12
       294: ifnull        308
       297: goto          312
       300: aload         12
       302: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       305: ifeq          312
       308: iconst_1
       309: goto          313
       312: iconst_0
       313: istore_2
       314: goto          319
       317: iconst_0
       318: istore_2
       319: iload_2
       320: ireturn
      StackMapTable: number_of_entries = 23
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/math/Equiv$Tuple9Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple9Equiv, class scala/math/Equiv ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 491: 0
        line 492: 17
        line 493: 29
        line 494: 60
        line 495: 91
        line 496: 122
        line 497: 153
        line 498: 184
        line 499: 215
        line 500: 246
        line 501: 277
        line 502: 317
        line 490: 319
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     321     0  this   Lscala/math/Equiv$Tuple9Equiv;
            0     321     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=2, args_size=1
         0: new           #67                 // class scala/Tuple9
         3: dup
         4: aload_0
         5: invokespecial #65                 // Method eqv1:()Lscala/math/Equiv;
         8: aload_0
         9: invokespecial #76                 // Method eqv2:()Lscala/math/Equiv;
        12: aload_0
        13: invokespecial #81                 // Method eqv3:()Lscala/math/Equiv;
        16: aload_0
        17: invokespecial #86                 // Method eqv4:()Lscala/math/Equiv;
        20: aload_0
        21: invokespecial #91                 // Method eqv5:()Lscala/math/Equiv;
        24: aload_0
        25: invokespecial #96                 // Method eqv6:()Lscala/math/Equiv;
        28: aload_0
        29: invokespecial #101                // Method eqv7:()Lscala/math/Equiv;
        32: aload_0
        33: invokespecial #106                // Method eqv8:()Lscala/math/Equiv;
        36: aload_0
        37: invokespecial #111                // Method eqv9:()Lscala/math/Equiv;
        40: invokespecial #127                // Method scala/Tuple9."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        43: astore_1
        44: getstatic     #133                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        47: aload_1
        48: invokevirtual #137                // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
        51: ireturn
      LineNumberTable:
        line 504: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lscala/math/Equiv$Tuple9Equiv;
           44       7     1 hashCode_this   Lscala/Tuple9;

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #67                 // class scala/Tuple9
         5: aload_2
         6: checkcast     #67                 // class scala/Tuple9
         9: invokevirtual #140                // Method equiv:(Lscala/Tuple9;Lscala/Tuple9;)Z
        12: ireturn
      LineNumberTable:
        line 469: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Equiv$Tuple9Equiv;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Equiv$Tuple9Equiv(scala.math.Equiv<T1>, scala.math.Equiv<T2>, scala.math.Equiv<T3>, scala.math.Equiv<T4>, scala.math.Equiv<T5>, scala.math.Equiv<T6>, scala.math.Equiv<T7>, scala.math.Equiv<T8>, scala.math.Equiv<T9>);
    descriptor: (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=10, args_size=10
         0: aload_0
         1: aload_1
         2: putfield      #32                 // Field eqv1:Lscala/math/Equiv;
         5: aload_0
         6: aload_2
         7: putfield      #37                 // Field eqv2:Lscala/math/Equiv;
        10: aload_0
        11: aload_3
        12: putfield      #40                 // Field eqv3:Lscala/math/Equiv;
        15: aload_0
        16: aload         4
        18: putfield      #43                 // Field eqv4:Lscala/math/Equiv;
        21: aload_0
        22: aload         5
        24: putfield      #46                 // Field eqv5:Lscala/math/Equiv;
        27: aload_0
        28: aload         6
        30: putfield      #49                 // Field eqv6:Lscala/math/Equiv;
        33: aload_0
        34: aload         7
        36: putfield      #52                 // Field eqv7:Lscala/math/Equiv;
        39: aload_0
        40: aload         8
        42: putfield      #55                 // Field eqv8:Lscala/math/Equiv;
        45: aload_0
        46: aload         9
        48: putfield      #58                 // Field eqv9:Lscala/math/Equiv;
        51: aload_0
        52: invokespecial #145                // Method java/lang/Object."<init>":()V
        55: return
      LineNumberTable:
        line 469: 0
        line 470: 5
        line 471: 10
        line 472: 15
        line 473: 21
        line 474: 27
        line 475: 33
        line 476: 39
        line 477: 45
        line 478: 51
        line 469: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lscala/math/Equiv$Tuple9Equiv;
            0      56     1  eqv1   Lscala/math/Equiv;
            0      56     2  eqv2   Lscala/math/Equiv;
            0      56     3  eqv3   Lscala/math/Equiv;
            0      56     4  eqv4   Lscala/math/Equiv;
            0      56     5  eqv5   Lscala/math/Equiv;
            0      56     6  eqv6   Lscala/math/Equiv;
            0      56     7  eqv7   Lscala/math/Equiv;
            0      56     8  eqv8   Lscala/math/Equiv;
            0      56     9  eqv9   Lscala/math/Equiv;
    Signature: #142                         // (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;Lscala/math/Equiv<TT6;>;Lscala/math/Equiv<TT7;>;Lscala/math/Equiv<TT8;>;Lscala/math/Equiv<TT9;>;)V
    MethodParameters:
      Name                           Flags
      eqv1                           final
      eqv2                           final
      eqv3                           final
      eqv4                           final
      eqv5                           final
      eqv6                           final
      eqv7                           final
      eqv8                           final
      eqv9                           final
}
InnerClasses:
  private static final #9= #2 of #7;      // Tuple9Equiv=class scala/math/Equiv$Tuple9Equiv of class scala/math/Equiv
Signature: #3                           // <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;T8:Ljava/lang/Object;T9:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple9<TT1;TT2;TT3;TT4;TT5;TT6;TT7;TT8;TT9;>;>;
SourceFile: "Equiv.scala"
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 01 00 0E 00 7C 00 8D 01 00 74 00 75 01 00 3B
   00 48 01 00 3B 00 3C 01 00 0A 00 1D 01 00 0D 00
   1D 01 00 0F 00 1D 01 00 11 00 1D 01 00 13 00 1D
   01 00 15 00 1D 01 00 17 00 1D 01 00 19 00 1D 01
   00 1B 00 1D 01 00 7A 00 7B 01
  Scala: length = 0x0 (unknown attribute)

