Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/compat/java8/OptionConverters$$anon$2.class
  Last modified May 29, 2022; size 1965 bytes
  SHA-256 checksum 61c5fb8df289519e342134da2371bdec3eb81c0ecf5db0c58ba7ca0cc627a602
  Compiled from "OptionConverters.scala"
public final class scala.compat.java8.OptionConverters$$anon$2 extends scala.compat.java8.OptionConverters$SpecializerOfOptions<java.lang.Object, java.util.OptionalInt>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/compat/java8/OptionConverters$$anon$2
  super_class: #5                         // scala/compat/java8/OptionConverters$SpecializerOfOptions
  interfaces: 0, fields: 0, methods: 5, attributes: 6
Constant pool:
   #1 = Utf8               scala/compat/java8/OptionConverters$$anon$2
   #2 = Class              #1             // scala/compat/java8/OptionConverters$$anon$2
   #3 = Utf8               Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalInt;>;
   #4 = Utf8               scala/compat/java8/OptionConverters$SpecializerOfOptions
   #5 = Class              #4             // scala/compat/java8/OptionConverters$SpecializerOfOptions
   #6 = Utf8               OptionConverters.scala
   #7 = Utf8               scala/compat/java8/OptionConverters$
   #8 = Class              #7             // scala/compat/java8/OptionConverters$
   #9 = Utf8               scala/compat/java8/OptionConverters
  #10 = Class              #9             // scala/compat/java8/OptionConverters
  #11 = Utf8               SpecializerOfOptions
  #12 = Utf8               fromJava
  #13 = Utf8               (Ljava/util/Optional;)Ljava/util/OptionalInt;
  #14 = Utf8               (Ljava/util/Optional<Ljava/lang/Object;>;)Ljava/util/OptionalInt;
  #15 = Utf8               o
  #16 = Utf8               java/util/Optional
  #17 = Class              #16            // java/util/Optional
  #18 = Utf8               isPresent
  #19 = Utf8               ()Z
  #20 = NameAndType        #18:#19        // isPresent:()Z
  #21 = Methodref          #17.#20        // java/util/Optional.isPresent:()Z
  #22 = Utf8               get
  #23 = Utf8               ()Ljava/lang/Object;
  #24 = NameAndType        #22:#23        // get:()Ljava/lang/Object;
  #25 = Methodref          #17.#24        // java/util/Optional.get:()Ljava/lang/Object;
  #26 = Utf8               scala/runtime/BoxesRunTime
  #27 = Class              #26            // scala/runtime/BoxesRunTime
  #28 = Utf8               unboxToInt
  #29 = Utf8               (Ljava/lang/Object;)I
  #30 = NameAndType        #28:#29        // unboxToInt:(Ljava/lang/Object;)I
  #31 = Methodref          #27.#30        // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #32 = Utf8               java/util/OptionalInt
  #33 = Class              #32            // java/util/OptionalInt
  #34 = Utf8               of
  #35 = Utf8               (I)Ljava/util/OptionalInt;
  #36 = NameAndType        #34:#35        // of:(I)Ljava/util/OptionalInt;
  #37 = Methodref          #33.#36        // java/util/OptionalInt.of:(I)Ljava/util/OptionalInt;
  #38 = Utf8               empty
  #39 = Utf8               ()Ljava/util/OptionalInt;
  #40 = NameAndType        #38:#39        // empty:()Ljava/util/OptionalInt;
  #41 = Methodref          #33.#40        // java/util/OptionalInt.empty:()Ljava/util/OptionalInt;
  #42 = Utf8               this
  #43 = Utf8               Lscala/compat/java8/OptionConverters$$anon$2;
  #44 = Utf8               Ljava/util/Optional;
  #45 = Utf8               fromScala
  #46 = Utf8               (Lscala/Option;)Ljava/util/OptionalInt;
  #47 = Utf8               (Lscala/Option<Ljava/lang/Object;>;)Ljava/util/OptionalInt;
  #48 = Utf8               scala/Some
  #49 = Class              #48            // scala/Some
  #50 = Utf8               value
  #51 = NameAndType        #50:#23        // value:()Ljava/lang/Object;
  #52 = Methodref          #49.#51        // scala/Some.value:()Ljava/lang/Object;
  #53 = Utf8               d
  #54 = Utf8               I
  #55 = Utf8               Lscala/Option;
  #56 = Utf8               scala/Option
  #57 = Class              #56            // scala/Option
  #58 = Utf8               (Lscala/Option;)Ljava/lang/Object;
  #59 = NameAndType        #45:#46        // fromScala:(Lscala/Option;)Ljava/util/OptionalInt;
  #60 = Methodref          #2.#59         // scala/compat/java8/OptionConverters$$anon$2.fromScala:(Lscala/Option;)Ljava/util/OptionalInt;
  #61 = Utf8               (Ljava/util/Optional;)Ljava/lang/Object;
  #62 = NameAndType        #12:#13        // fromJava:(Ljava/util/Optional;)Ljava/util/OptionalInt;
  #63 = Methodref          #2.#62         // scala/compat/java8/OptionConverters$$anon$2.fromJava:(Ljava/util/Optional;)Ljava/util/OptionalInt;
  #64 = Utf8               <init>
  #65 = Utf8               ()V
  #66 = NameAndType        #64:#65        // "<init>":()V
  #67 = Methodref          #5.#66         // scala/compat/java8/OptionConverters$SpecializerOfOptions."<init>":()V
  #68 = Utf8               Code
  #69 = Utf8               StackMapTable
  #70 = Utf8               LineNumberTable
  #71 = Utf8               LocalVariableTable
  #72 = Utf8               Signature
  #73 = Utf8               MethodParameters
  #74 = Utf8               InnerClasses
  #75 = Utf8               EnclosingMethod
  #76 = Utf8               SourceFile
  #77 = Utf8               ScalaInlineInfo
  #78 = Utf8               Scala
{
  public java.util.OptionalInt fromJava(java.util.Optional<java.lang.Object>);
    descriptor: (Ljava/util/Optional;)Ljava/util/OptionalInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #21                 // Method java/util/Optional.isPresent:()Z
         4: ifeq          20
         7: aload_1
         8: invokevirtual #25                 // Method java/util/Optional.get:()Ljava/lang/Object;
        11: invokestatic  #31                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        14: invokestatic  #37                 // Method java/util/OptionalInt.of:(I)Ljava/util/OptionalInt;
        17: goto          23
        20: invokestatic  #41                 // Method java/util/OptionalInt.empty:()Ljava/util/OptionalInt;
        23: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/util/OptionalInt ]
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lscala/compat/java8/OptionConverters$$anon$2;
            0      24     1     o   Ljava/util/Optional;
    Signature: #14                          // (Ljava/util/Optional<Ljava/lang/Object;>;)Ljava/util/OptionalInt;
    MethodParameters:
      Name                           Flags
      o                              final

  public java.util.OptionalInt fromScala(scala.Option<java.lang.Object>);
    descriptor: (Lscala/Option;)Ljava/util/OptionalInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #49                 // class scala/Some
         6: ifeq          34
         9: aload_3
        10: checkcast     #49                 // class scala/Some
        13: astore        4
        15: aload         4
        17: invokevirtual #52                 // Method scala/Some.value:()Ljava/lang/Object;
        20: invokestatic  #31                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        23: istore        5
        25: iload         5
        27: invokestatic  #37                 // Method java/util/OptionalInt.of:(I)Ljava/util/OptionalInt;
        30: astore_2
        31: goto          44
        34: goto          37
        37: invokestatic  #41                 // Method java/util/OptionalInt.empty:()Ljava/util/OptionalInt;
        40: astore_2
        41: goto          44
        44: aload_2
        45: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 34
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/compat/java8/OptionConverters$$anon$2, class scala/Option, class java/util/OptionalInt, class scala/Option ]
          stack = []
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25       9     5     d   I
            0      46     0  this   Lscala/compat/java8/OptionConverters$$anon$2;
            0      46     1     o   Lscala/Option;
    Signature: #47                          // (Lscala/Option<Ljava/lang/Object;>;)Ljava/util/OptionalInt;
    MethodParameters:
      Name                           Flags
      o                              final

  public java.lang.Object fromScala(scala.Option);
    descriptor: (Lscala/Option;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #60                 // Method fromScala:(Lscala/Option;)Ljava/util/OptionalInt;
         5: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/OptionConverters$$anon$2;
            0       6     1     o   Lscala/Option;
    MethodParameters:
      Name                           Flags
      o                              final

  public java.lang.Object fromJava(java.util.Optional);
    descriptor: (Ljava/util/Optional;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #63                 // Method fromJava:(Ljava/util/Optional;)Ljava/util/OptionalInt;
         5: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/OptionConverters$$anon$2;
            0       6     1     o   Ljava/util/Optional;
    MethodParameters:
      Name                           Flags
      o                              final

  public scala.compat.java8.OptionConverters$$anon$2();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #67                 // Method scala/compat/java8/OptionConverters$SpecializerOfOptions."<init>":()V
         4: return
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$$anon$2;
}
InnerClasses:
  public final #2;                        // class scala/compat/java8/OptionConverters$$anon$2
  public static abstract #11= #5 of #10;  // SpecializerOfOptions=class scala/compat/java8/OptionConverters$SpecializerOfOptions of class scala/compat/java8/OptionConverters
EnclosingMethod: #8.#0                  // scala.compat.java8.OptionConverters$
Signature: #3                           // Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalInt;>;
SourceFile: "OptionConverters.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 40 00 41 01 00 0C 00 3D 01 00 0C
   00 0D 01 00 2D 00 3A 01 00 2D 00 2E 01
  Scala: length = 0x0 (unknown attribute)

