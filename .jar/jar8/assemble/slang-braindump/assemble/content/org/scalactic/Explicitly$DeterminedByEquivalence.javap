Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/Explicitly$DeterminedByEquivalence.class
  Last modified May 29, 2022; size 1776 bytes
  SHA-256 checksum 40cb886b29987a8d9bb7c3076924b05cb9eaaa4e757d223147d61059dfac796e
  Compiled from "Explicitly.scala"
public class org.scalactic.Explicitly$DeterminedByEquivalence<T extends java.lang.Object> extends java.lang.Object implements org.scalactic.Equivalence<T>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalactic/Explicitly$DeterminedByEquivalence
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 4, attributes: 5
Constant pool:
   #1 = Utf8               org/scalactic/Explicitly$DeterminedByEquivalence
   #2 = Class              #1             // org/scalactic/Explicitly$DeterminedByEquivalence
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/scalactic/Equivalence<TT;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               org/scalactic/Equivalence
   #7 = Class              #6             // org/scalactic/Equivalence
   #8 = Utf8               Explicitly.scala
   #9 = Utf8               org/scalactic/Explicitly
  #10 = Class              #9             // org/scalactic/Explicitly
  #11 = Utf8               DeterminedByEquivalence
  #12 = Utf8               equivalence
  #13 = Utf8               Lorg/scalactic/Equivalence;
  #14 = Utf8               Lorg/scalactic/Equivalence<TT;>;
  #15 = Utf8               $outer
  #16 = Utf8               Lorg/scalactic/Explicitly;
  #17 = Utf8               areEquivalent
  #18 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #19 = Utf8               (TT;TT;)Z
  #20 = Utf8               a
  #21 = Utf8               b
  #22 = NameAndType        #12:#13        // equivalence:Lorg/scalactic/Equivalence;
  #23 = Fieldref           #2.#22         // org/scalactic/Explicitly$DeterminedByEquivalence.equivalence:Lorg/scalactic/Equivalence;
  #24 = NameAndType        #17:#18        // areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #25 = InterfaceMethodref #7.#24         // org/scalactic/Equivalence.areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #26 = Utf8               this
  #27 = Utf8               Lorg/scalactic/Explicitly$DeterminedByEquivalence;
  #28 = Utf8               Ljava/lang/Object;
  #29 = Utf8               afterBeing
  #30 = Utf8               (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #31 = Utf8               (Lorg/scalactic/Normalization<TT;>;)Lorg/scalactic/NormalizingEquivalence<TT;>;
  #32 = Utf8               normalization
  #33 = Utf8               org/scalactic/ComposedNormalizingEquivalence
  #34 = Class              #33            // org/scalactic/ComposedNormalizingEquivalence
  #35 = Utf8               <init>
  #36 = Utf8               (Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
  #37 = NameAndType        #35:#36        // "<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
  #38 = Methodref          #34.#37        // org/scalactic/ComposedNormalizingEquivalence."<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
  #39 = Utf8               Lorg/scalactic/Normalization;
  #40 = Utf8               org$scalactic$Explicitly$DeterminedByEquivalence$$$outer
  #41 = Utf8               ()Lorg/scalactic/Explicitly;
  #42 = NameAndType        #15:#16        // $outer:Lorg/scalactic/Explicitly;
  #43 = Fieldref           #2.#42         // org/scalactic/Explicitly$DeterminedByEquivalence.$outer:Lorg/scalactic/Explicitly;
  #44 = Utf8               (Lorg/scalactic/Explicitly;Lorg/scalactic/Equivalence;)V
  #45 = Utf8               (Lorg/scalactic/Equivalence<TT;>;)V
  #46 = Utf8               ()V
  #47 = NameAndType        #35:#46        // "<init>":()V
  #48 = Methodref          #5.#47         // java/lang/Object."<init>":()V
  #49 = Utf8               Signature
  #50 = Utf8               Code
  #51 = Utf8               LineNumberTable
  #52 = Utf8               LocalVariableTable
  #53 = Utf8               MethodParameters
  #54 = Utf8               StackMapTable
  #55 = Utf8               InnerClasses
  #56 = Utf8               SourceFile
  #57 = Utf8               ScalaInlineInfo
  #58 = Utf8               Scala
{
  private final org.scalactic.Equivalence<T> equivalence;
    descriptor: Lorg/scalactic/Equivalence;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lorg/scalactic/Equivalence<TT;>;

  public final org.scalactic.Explicitly $outer;
    descriptor: Lorg/scalactic/Explicitly;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public boolean areEquivalent(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #23                 // Field equivalence:Lorg/scalactic/Equivalence;
         4: aload_1
         5: aload_2
         6: invokeinterface #25,  3           // InterfaceMethod org/scalactic/Equivalence.areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/scalactic/Explicitly$DeterminedByEquivalence;
            0      12     1     a   Ljava/lang/Object;
            0      12     2     b   Ljava/lang/Object;
    Signature: #19                          // (TT;TT;)Z
    MethodParameters:
      Name                           Flags
      a                              final
      b                              final

  public org.scalactic.NormalizingEquivalence<T> afterBeing(org.scalactic.Normalization<T>);
    descriptor: (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #34                 // class org/scalactic/ComposedNormalizingEquivalence
         3: dup
         4: aload_0
         5: getfield      #23                 // Field equivalence:Lorg/scalactic/Equivalence;
         8: aload_1
         9: invokespecial #38                 // Method org/scalactic/ComposedNormalizingEquivalence."<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
        12: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/scalactic/Explicitly$DeterminedByEquivalence;
            0      13     1 normalization   Lorg/scalactic/Normalization;
    Signature: #31                          // (Lorg/scalactic/Normalization<TT;>;)Lorg/scalactic/NormalizingEquivalence<TT;>;
    MethodParameters:
      Name                           Flags
      normalization                  final

  public org.scalactic.Explicitly org$scalactic$Explicitly$DeterminedByEquivalence$$$outer();
    descriptor: ()Lorg/scalactic/Explicitly;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #43                 // Field $outer:Lorg/scalactic/Explicitly;
         4: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/Explicitly$DeterminedByEquivalence;

  public org.scalactic.Explicitly$DeterminedByEquivalence(org.scalactic.Equivalence<T>);
    descriptor: (Lorg/scalactic/Explicitly;Lorg/scalactic/Equivalence;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #23                 // Field equivalence:Lorg/scalactic/Equivalence;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #43                 // Field $outer:Lorg/scalactic/Explicitly;
        16: aload_0
        17: invokespecial #48                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/scalactic/Explicitly$DeterminedByEquivalence;
            0      21     1 $outer   Lorg/scalactic/Explicitly;
            0      21     2 equivalence   Lorg/scalactic/Equivalence;
    Signature: #45                          // (Lorg/scalactic/Equivalence<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      equivalence                    final
}
InnerClasses:
  public #11= #2 of #10;                  // DeterminedByEquivalence=class org/scalactic/Explicitly$DeterminedByEquivalence of class org/scalactic/Explicitly
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/scalactic/Equivalence<TT;>;
SourceFile: "Explicitly.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 23 00 2C 00 00 1D 00 1E 00 00 11
   00 12 00 00 28 00 29 00
  Scala: length = 0x0 (unknown attribute)

