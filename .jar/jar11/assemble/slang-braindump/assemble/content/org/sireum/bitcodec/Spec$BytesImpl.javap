Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/bitcodec/Spec$BytesImpl.class
  Last modified May 29, 2022; size 10720 bytes
  SHA-256 checksum 0395fc30fcf5a16d4d3b8ff6d5754e3f2a688b706e6b0c4e99dd40c4eea1c65a
  Compiled from "Spec.scala"
public final class org.sireum.bitcodec.Spec$BytesImpl implements org.sireum.bitcodec.Spec$Base
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/bitcodec/Spec$BytesImpl
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 11, methods: 38, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/bitcodec/Spec$BytesImpl
    #2 = Class              #1            // org/sireum/bitcodec/Spec$BytesImpl
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/bitcodec/Spec$Base
    #6 = Class              #5            // org/sireum/bitcodec/Spec$Base
    #7 = Utf8               Spec.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/bitcodec/Spec
   #14 = Class              #13           // org/sireum/bitcodec/Spec
   #15 = Utf8               Base
   #16 = Utf8               BytesImpl
   #17 = Utf8               hashCode
   #18 = Utf8               I
   #19 = Utf8               $content
   #20 = Utf8               Lscala/collection/immutable/Seq;
   #21 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #22 = Utf8               _name
   #23 = Utf8               Ljava/lang/String;
   #24 = Utf8               _size
   #25 = Utf8               Lorg/sireum/Z;
   #26 = Utf8               _signed
   #27 = Utf8               Z
   #28 = Utf8               _bminOpt
   #29 = Utf8               _minOpt
   #30 = Utf8               _bmaxOpt
   #31 = Utf8               _maxOpt
   #32 = Utf8               maxSizeOpt
   #33 = Utf8               Lscala/Function1;
   #34 = Utf8               Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;
   #35 = Utf8               bitmap$0
   #36 = Utf8               B
   #37 = Utf8               toJSON
   #38 = Utf8               (Z)Ljava/lang/String;
   #39 = Utf8               isCompact
   #40 = Utf8               toJSON$
   #41 = Utf8               (Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #42 = NameAndType        #40:#41       // toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #43 = InterfaceMethodref #14.#42       // org/sireum/bitcodec/Spec.toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #44 = Utf8               this
   #45 = Utf8               Lorg/sireum/bitcodec/Spec$BytesImpl;
   #46 = Utf8               hash
   #47 = Utf8               ()Lorg/sireum/Z;
   #48 = Utf8               org/sireum/DatatypeSig
   #49 = Class              #48           // org/sireum/DatatypeSig
   #50 = Utf8               hash$
   #51 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #52 = NameAndType        #50:#51       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #53 = InterfaceMethodref #49.#52       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #54 = Utf8               $cannotMixImmutableAndMutable
   #55 = Utf8               ()Lscala/runtime/Nothing$;
   #56 = Utf8               org/sireum/Immutable
   #57 = Class              #56           // org/sireum/Immutable
   #58 = Utf8               $cannotMixImmutableAndMutable$
   #59 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #60 = NameAndType        #58:#59       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #61 = InterfaceMethodref #57.#60       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #62 = Utf8               $hasEquals
   #63 = Utf8               ()Z
   #64 = Utf8               $hasEquals$
   #65 = Utf8               (Lorg/sireum/Immutable;)Z
   #66 = NameAndType        #64:#65       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #67 = InterfaceMethodref #57.#66       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #68 = Utf8               $hasString
   #69 = Utf8               $hasString$
   #70 = NameAndType        #69:#65       // $hasString$:(Lorg/sireum/Immutable;)Z
   #71 = InterfaceMethodref #57.#70       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #72 = Utf8               $clone
   #73 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #74 = Utf8               org/sireum/$internal/ImmutableMarker
   #75 = Class              #74           // org/sireum/$internal/ImmutableMarker
   #76 = Utf8               $clone$
   #77 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #78 = NameAndType        #76:#77       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #79 = InterfaceMethodref #75.#78       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #80 = Utf8               maxSizeOpt$lzycompute
   #81 = Utf8               ()Lscala/Function1;
   #82 = Utf8               ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;
   #83 = NameAndType        #35:#36       // bitmap$0:B
   #84 = Fieldref           #2.#83        // org/sireum/bitcodec/Spec$BytesImpl.bitmap$0:B
   #85 = Utf8               maxSizeOpt$
   #86 = Utf8               (Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #87 = NameAndType        #85:#86       // maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #88 = InterfaceMethodref #14.#87       // org/sireum/bitcodec/Spec.maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #89 = NameAndType        #32:#33       // maxSizeOpt:Lscala/Function1;
   #90 = Fieldref           #2.#89        // org/sireum/bitcodec/Spec$BytesImpl.maxSizeOpt:Lscala/Function1;
   #91 = Utf8               java/lang/Throwable
   #92 = Class              #91           // java/lang/Throwable
   #93 = NameAndType        #80:#81       // maxSizeOpt$lzycompute:()Lscala/Function1;
   #94 = Methodref          #2.#93        // org/sireum/bitcodec/Spec$BytesImpl.maxSizeOpt$lzycompute:()Lscala/Function1;
   #95 = Utf8               scala/Function1
   #96 = Class              #95           // scala/Function1
   #97 = Utf8               name
   #98 = Utf8               ()Ljava/lang/String;
   #99 = NameAndType        #22:#23       // _name:Ljava/lang/String;
  #100 = Fieldref           #2.#99        // org/sireum/bitcodec/Spec$BytesImpl._name:Ljava/lang/String;
  #101 = Utf8               getName
  #102 = Utf8               size
  #103 = NameAndType        #24:#25       // _size:Lorg/sireum/Z;
  #104 = Fieldref           #2.#103       // org/sireum/bitcodec/Spec$BytesImpl._size:Lorg/sireum/Z;
  #105 = Utf8               getSize
  #106 = Utf8               signed
  #107 = NameAndType        #26:#27       // _signed:Z
  #108 = Fieldref           #2.#107       // org/sireum/bitcodec/Spec$BytesImpl._signed:Z
  #109 = Utf8               getSigned
  #110 = Utf8               minOpt
  #111 = Utf8               ()Lorg/sireum/Option;
  #112 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/Z;>;
  #113 = NameAndType        #28:#27       // _bminOpt:Z
  #114 = Fieldref           #2.#113       // org/sireum/bitcodec/Spec$BytesImpl._bminOpt:Z
  #115 = Utf8               org/sireum/None$
  #116 = Class              #115          // org/sireum/None$
  #117 = Utf8               MODULE$
  #118 = Utf8               Lorg/sireum/None$;
  #119 = NameAndType        #117:#118     // MODULE$:Lorg/sireum/None$;
  #120 = Fieldref           #116.#119     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #121 = Utf8               apply
  #122 = Utf8               ()Lorg/sireum/None;
  #123 = NameAndType        #121:#122     // apply:()Lorg/sireum/None;
  #124 = Methodref          #116.#123     // org/sireum/None$.apply:()Lorg/sireum/None;
  #125 = Utf8               org/sireum/Some$
  #126 = Class              #125          // org/sireum/Some$
  #127 = Utf8               Lorg/sireum/Some$;
  #128 = NameAndType        #117:#127     // MODULE$:Lorg/sireum/Some$;
  #129 = Fieldref           #126.#128     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #130 = NameAndType        #29:#25       // _minOpt:Lorg/sireum/Z;
  #131 = Fieldref           #2.#130       // org/sireum/bitcodec/Spec$BytesImpl._minOpt:Lorg/sireum/Z;
  #132 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #133 = NameAndType        #121:#132     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #134 = Methodref          #126.#133     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #135 = Utf8               getMinOpt
  #136 = NameAndType        #110:#111     // minOpt:()Lorg/sireum/Option;
  #137 = Methodref          #2.#136       // org/sireum/bitcodec/Spec$BytesImpl.minOpt:()Lorg/sireum/Option;
  #138 = Utf8               maxOpt
  #139 = NameAndType        #30:#27       // _bmaxOpt:Z
  #140 = Fieldref           #2.#139       // org/sireum/bitcodec/Spec$BytesImpl._bmaxOpt:Z
  #141 = NameAndType        #31:#25       // _maxOpt:Lorg/sireum/Z;
  #142 = Fieldref           #2.#141       // org/sireum/bitcodec/Spec$BytesImpl._maxOpt:Lorg/sireum/Z;
  #143 = Utf8               getMaxOpt
  #144 = NameAndType        #138:#111     // maxOpt:()Lorg/sireum/Option;
  #145 = Methodref          #2.#144       // org/sireum/bitcodec/Spec$BytesImpl.maxOpt:()Lorg/sireum/Option;
  #146 = Utf8               toString
  #147 = NameAndType        #68:#63       // $hasString:()Z
  #148 = Methodref          #2.#147       // org/sireum/bitcodec/Spec$BytesImpl.$hasString:()Z
  #149 = Utf8               string$
  #150 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #151 = NameAndType        #149:#150     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #152 = InterfaceMethodref #49.#151      // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #153 = Utf8               java/lang/StringBuilder
  #154 = Class              #153          // java/lang/StringBuilder
  #155 = Utf8               <init>
  #156 = Utf8               ()V
  #157 = NameAndType        #155:#156     // "<init>":()V
  #158 = Methodref          #154.#157     // java/lang/StringBuilder."<init>":()V
  #159 = String             #16           // BytesImpl
  #160 = Utf8               append
  #161 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #162 = NameAndType        #160:#161     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #163 = Methodref          #154.#162     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #164 = Utf8               (C)Ljava/lang/StringBuilder;
  #165 = NameAndType        #160:#164     // append:(C)Ljava/lang/StringBuilder;
  #166 = Methodref          #154.#165     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #167 = Utf8               org/sireum/String$
  #168 = Class              #167          // org/sireum/String$
  #169 = Utf8               Lorg/sireum/String$;
  #170 = NameAndType        #117:#169     // MODULE$:Lorg/sireum/String$;
  #171 = Fieldref           #168.#170     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #172 = Utf8               org/sireum/String
  #173 = Class              #172          // org/sireum/String
  #174 = NameAndType        #97:#98       // name:()Ljava/lang/String;
  #175 = Methodref          #2.#174       // org/sireum/bitcodec/Spec$BytesImpl.name:()Ljava/lang/String;
  #176 = Utf8               (Ljava/lang/String;)V
  #177 = NameAndType        #155:#176     // "<init>":(Ljava/lang/String;)V
  #178 = Methodref          #173.#177     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #179 = Utf8               escape
  #180 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #181 = NameAndType        #179:#180     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #182 = Methodref          #168.#181     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #183 = Utf8               ,
  #184 = String             #183          // ,
  #185 = NameAndType        #102:#47      // size:()Lorg/sireum/Z;
  #186 = Methodref          #2.#185       // org/sireum/bitcodec/Spec$BytesImpl.size:()Lorg/sireum/Z;
  #187 = Utf8               org/sireum/B
  #188 = Class              #187          // org/sireum/B
  #189 = NameAndType        #106:#63      // signed:()Z
  #190 = Methodref          #2.#189       // org/sireum/bitcodec/Spec$BytesImpl.signed:()Z
  #191 = Utf8               (Z)V
  #192 = NameAndType        #155:#191     // "<init>":(Z)V
  #193 = Methodref          #188.#192     // org/sireum/B."<init>":(Z)V
  #194 = NameAndType        #146:#98      // toString:()Ljava/lang/String;
  #195 = Methodref          #154.#194     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #196 = Utf8               sb
  #197 = Utf8               Ljava/lang/StringBuilder;
  #198 = Utf8               java/lang/String
  #199 = Class              #198          // java/lang/String
  #200 = Utf8               string
  #201 = Methodref          #2.#194       // org/sireum/bitcodec/Spec$BytesImpl.toString:()Ljava/lang/String;
  #202 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #203 = NameAndType        #121:#202     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #204 = Methodref          #168.#203     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #205 = Utf8               hashCode$lzycompute
  #206 = Utf8               ()I
  #207 = NameAndType        #62:#63       // $hasEquals:()Z
  #208 = Methodref          #2.#207       // org/sireum/bitcodec/Spec$BytesImpl.$hasEquals:()Z
  #209 = NameAndType        #17:#206      // hashCode:()I
  #210 = Methodref          #4.#209       // java/lang/Object.hashCode:()I
  #211 = Utf8               scala/package$
  #212 = Class              #211          // scala/package$
  #213 = Utf8               Lscala/package$;
  #214 = NameAndType        #117:#213     // MODULE$:Lscala/package$;
  #215 = Fieldref           #212.#214     // scala/package$.MODULE$:Lscala/package$;
  #216 = Utf8               Seq
  #217 = Utf8               ()Lscala/collection/immutable/Seq$;
  #218 = NameAndType        #216:#217     // Seq:()Lscala/collection/immutable/Seq$;
  #219 = Methodref          #212.#218     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #220 = Utf8               scala/runtime/ScalaRunTime$
  #221 = Class              #220          // scala/runtime/ScalaRunTime$
  #222 = Utf8               Lscala/runtime/ScalaRunTime$;
  #223 = NameAndType        #117:#222     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #224 = Fieldref           #221.#223     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #225 = Utf8               getClass
  #226 = Utf8               ()Ljava/lang/Class;
  #227 = NameAndType        #225:#226     // getClass:()Ljava/lang/Class;
  #228 = Methodref          #2.#227       // org/sireum/bitcodec/Spec$BytesImpl.getClass:()Ljava/lang/Class;
  #229 = Utf8               java/lang/Class
  #230 = Class              #229          // java/lang/Class
  #231 = NameAndType        #101:#98      // getName:()Ljava/lang/String;
  #232 = Methodref          #230.#231     // java/lang/Class.getName:()Ljava/lang/String;
  #233 = Utf8               genericWrapArray
  #234 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #235 = NameAndType        #233:#234     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #236 = Methodref          #221.#235     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #237 = Utf8               scala/collection/immutable/Seq$
  #238 = Class              #237          // scala/collection/immutable/Seq$
  #239 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #240 = NameAndType        #121:#239     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #241 = Methodref          #238.#240     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #242 = Utf8               scala/collection/Seq
  #243 = Class              #242          // scala/collection/Seq
  #244 = InterfaceMethodref #243.#209     // scala/collection/Seq.hashCode:()I
  #245 = NameAndType        #17:#18       // hashCode:I
  #246 = Fieldref           #2.#245       // org/sireum/bitcodec/Spec$BytesImpl.hashCode:I
  #247 = NameAndType        #205:#206     // hashCode$lzycompute:()I
  #248 = Methodref          #2.#247       // org/sireum/bitcodec/Spec$BytesImpl.hashCode$lzycompute:()I
  #249 = Utf8               equals
  #250 = Utf8               (Ljava/lang/Object;)Z
  #251 = Utf8               o
  #252 = NameAndType        #249:#250     // equals:(Ljava/lang/Object;)Z
  #253 = Methodref          #4.#252       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #254 = Methodref          #2.#209       // org/sireum/bitcodec/Spec$BytesImpl.hashCode:()I
  #255 = Utf8               Ljava/lang/Object;
  #256 = Utf8               org/sireum/Z
  #257 = Class              #256          // org/sireum/Z
  #258 = Utf8               org/sireum/Option
  #259 = Class              #258          // org/sireum/Option
  #260 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$BytesImpl;
  #261 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)Lorg/sireum/bitcodec/Spec$BytesImpl;
  #262 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option;Lorg/sireum/Option;)V
  #263 = NameAndType        #155:#262     // "<init>":(Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option;Lorg/sireum/Option;)V
  #264 = Methodref          #2.#263       // org/sireum/bitcodec/Spec$BytesImpl."<init>":(Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option;Lorg/sireum/Option;)V
  #265 = Utf8               Lorg/sireum/Option;
  #266 = Utf8               apply$default$1
  #267 = Utf8               apply$default$2
  #268 = Utf8               apply$default$3
  #269 = Utf8               apply$default$4
  #270 = Utf8               apply$default$5
  #271 = Utf8               $content$lzycompute
  #272 = Utf8               ()Lscala/collection/immutable/Seq;
  #273 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #274 = Utf8               scala/Tuple2
  #275 = Class              #274          // scala/Tuple2
  #276 = Utf8               type
  #277 = String             #276          // type
  #278 = Utf8               List
  #279 = Utf8               ()Lscala/collection/immutable/List$;
  #280 = NameAndType        #278:#279     // List:()Lscala/collection/immutable/List$;
  #281 = Methodref          #212.#280     // scala/package$.List:()Lscala/collection/immutable/List$;
  #282 = Utf8               org
  #283 = String             #282          // org
  #284 = Utf8               sireum
  #285 = String             #284          // sireum
  #286 = Utf8               bitcodec
  #287 = String             #286          // bitcodec
  #288 = Utf8               [Ljava/lang/Object;
  #289 = Class              #288          // "[Ljava/lang/Object;"
  #290 = Utf8               wrapRefArray
  #291 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #292 = NameAndType        #290:#291     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #293 = Methodref          #221.#292     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #294 = Utf8               scala/collection/immutable/List$
  #295 = Class              #294          // scala/collection/immutable/List$
  #296 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #297 = NameAndType        #121:#296     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #298 = Methodref          #295.#297     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #299 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #300 = NameAndType        #155:#299     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #301 = Methodref          #275.#300     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #302 = String             #97           // name
  #303 = String             #102          // size
  #304 = String             #106          // signed
  #305 = String             #110          // minOpt
  #306 = String             #138          // maxOpt
  #307 = Utf8               scala/collection/immutable/Seq
  #308 = Class              #307          // scala/collection/immutable/Seq
  #309 = NameAndType        #19:#20       // $content:Lscala/collection/immutable/Seq;
  #310 = Fieldref           #2.#309       // org/sireum/bitcodec/Spec$BytesImpl.$content:Lscala/collection/immutable/Seq;
  #311 = NameAndType        #271:#272     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #312 = Methodref          #2.#311       // org/sireum/bitcodec/Spec$BytesImpl.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #313 = Utf8               computeMaxSizeOpt
  #314 = Utf8               (Lscala/Function1;)Lorg/sireum/Option;
  #315 = Utf8               (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;)Lorg/sireum/Option<Lorg/sireum/Z;>;
  #316 = Utf8               enumMaxSize
  #317 = Utf8               org/sireum/Z$
  #318 = Class              #317          // org/sireum/Z$
  #319 = Utf8               Lorg/sireum/Z$;
  #320 = NameAndType        #117:#319     // MODULE$:Lorg/sireum/Z$;
  #321 = Fieldref           #318.#320     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #322 = Utf8               (I)Lorg/sireum/Z;
  #323 = NameAndType        #121:#322     // apply:(I)Lorg/sireum/Z;
  #324 = Methodref          #318.#323     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #325 = Utf8               $times
  #326 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #327 = NameAndType        #325:#326     // $times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #328 = InterfaceMethodref #257.#327     // org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #329 = Utf8               isScalar
  #330 = Utf8               org/sireum/B$
  #331 = Class              #330          // org/sireum/B$
  #332 = Utf8               Lorg/sireum/B$;
  #333 = NameAndType        #117:#332     // MODULE$:Lorg/sireum/B$;
  #334 = Fieldref           #331.#333     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #335 = Utf8               (Z)Z
  #336 = NameAndType        #121:#335     // apply:(Z)Z
  #337 = Methodref          #331.#336     // org/sireum/B$.apply:(Z)Z
  #338 = Utf8               ()Ljava/lang/Object;
  #339 = NameAndType        #72:#73       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #340 = Methodref          #2.#339       // org/sireum/bitcodec/Spec$BytesImpl.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #341 = Utf8               $anonfun$_minOpt$1
  #342 = Utf8               $anonfun$_maxOpt$1
  #343 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)V
  #344 = Utf8               __name
  #345 = Utf8               __size
  #346 = Utf8               __signed
  #347 = Utf8               __minOpt
  #348 = Utf8               __maxOpt
  #349 = Methodref          #4.#157       // java/lang/Object."<init>":()V
  #350 = Utf8               $init$
  #351 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #352 = NameAndType        #350:#351     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #353 = InterfaceMethodref #75.#352      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #354 = Utf8               (Lorg/sireum/Immutable;)V
  #355 = NameAndType        #350:#354     // $init$:(Lorg/sireum/Immutable;)V
  #356 = InterfaceMethodref #57.#355      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #357 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #358 = NameAndType        #350:#357     // $init$:(Lorg/sireum/DatatypeSig;)V
  #359 = InterfaceMethodref #49.#358      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #360 = Utf8               (Lorg/sireum/bitcodec/Spec;)V
  #361 = NameAndType        #350:#360     // $init$:(Lorg/sireum/bitcodec/Spec;)V
  #362 = InterfaceMethodref #14.#361      // org/sireum/bitcodec/Spec.$init$:(Lorg/sireum/bitcodec/Spec;)V
  #363 = Utf8               isEmpty
  #364 = NameAndType        #363:#63      // isEmpty:()Z
  #365 = InterfaceMethodref #259.#364     // org/sireum/Option.isEmpty:()Z
  #366 = MethodType         #338          //  ()Ljava/lang/Object;
  #367 = NameAndType        #341:#47      // $anonfun$_minOpt$1:()Lorg/sireum/Z;
  #368 = Methodref          #2.#367       // org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_minOpt$1:()Lorg/sireum/Z;
  #369 = MethodHandle       6:#368        // REF_invokeStatic org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_minOpt$1:()Lorg/sireum/Z;
  #370 = MethodType         #47           //  ()Lorg/sireum/Z;
  #371 = Integer            5
  #372 = Integer            1
  #373 = Utf8               java/lang/invoke/LambdaMetafactory
  #374 = Class              #373          // java/lang/invoke/LambdaMetafactory
  #375 = Utf8               altMetafactory
  #376 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #377 = NameAndType        #375:#376     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #378 = Methodref          #374.#377     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #379 = MethodHandle       6:#378        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #380 = Utf8               ()Lscala/Function0;
  #381 = NameAndType        #121:#380     // apply:()Lscala/Function0;
  #382 = InvokeDynamic      #0:#381       // #0:apply:()Lscala/Function0;
  #383 = Utf8               getOrElse
  #384 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #385 = NameAndType        #383:#384     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #386 = InterfaceMethodref #259.#385     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #387 = NameAndType        #342:#47      // $anonfun$_maxOpt$1:()Lorg/sireum/Z;
  #388 = Methodref          #2.#387       // org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_maxOpt$1:()Lorg/sireum/Z;
  #389 = MethodHandle       6:#388        // REF_invokeStatic org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_maxOpt$1:()Lorg/sireum/Z;
  #390 = InvokeDynamic      #1:#381       // #1:apply:()Lscala/Function0;
  #391 = Utf8               $deserializeLambda$
  #392 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #393 = Utf8               scala/runtime/LambdaDeserialize
  #394 = Class              #393          // scala/runtime/LambdaDeserialize
  #395 = Utf8               bootstrap
  #396 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #397 = NameAndType        #395:#396     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #398 = Methodref          #394.#397     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #399 = MethodHandle       6:#398        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #400 = Utf8               lambdaDeserialize
  #401 = NameAndType        #400:#392     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #402 = InvokeDynamic      #2:#401       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #403 = Utf8               Signature
  #404 = Utf8               Code
  #405 = Utf8               LineNumberTable
  #406 = Utf8               LocalVariableTable
  #407 = Utf8               MethodParameters
  #408 = Utf8               StackMapTable
  #409 = Utf8               InnerClasses
  #410 = Utf8               SourceFile
  #411 = Utf8               BootstrapMethods
  #412 = Utf8               ScalaInlineInfo
  #413 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #21                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final java.lang.String _name;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _size;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _signed;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bminOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _minOpt;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bmaxOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _maxOpt;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt;
    descriptor: Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Signature: #34                          // Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public java.lang.String toJSON(boolean);
    descriptor: (Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #43                 // InterfaceMethod org/sireum/bitcodec/Spec.toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
            0       6     1 isCompact   Z
    MethodParameters:
      Name                           Flags
      isCompact                      final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  private scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt$lzycompute();
    descriptor: ()Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #84                 // Field bitmap$0:B
         8: iconst_4
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     34
        15: aload_0
        16: aload_0
        17: invokestatic  #88                 // InterfaceMethod org/sireum/bitcodec/Spec.maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
        20: putfield      #90                 // Field maxSizeOpt:Lscala/Function1;
        23: aload_0
        24: aload_0
        25: getfield      #84                 // Field bitmap$0:B
        28: iconst_4
        29: ior
        30: i2b
        31: putfield      #84                 // Field bitmap$0:B
        34: aload_1
        35: monitorexit
        36: goto          42
        39: aload_1
        40: monitorexit
        41: athrow
        42: aload_0
        43: getfield      #90                 // Field maxSizeOpt:Lscala/Function1;
        46: areturn
      Exception table:
         from    to  target type
             4    34    39   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #82                          // ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  public scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field bitmap$0:B
         4: iconst_4
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #94                 // Method maxSizeOpt$lzycompute:()Lscala/Function1;
        15: goto          22
        18: aload_0
        19: getfield      #90                 // Field maxSizeOpt:Lscala/Function1;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Function1 ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #82                          // ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #100                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #100                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _size:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public org.sireum.Z getSize();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _size:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public boolean signed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _signed:Z
         4: ireturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public boolean getSigned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _signed:Z
         4: ireturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public org.sireum.Option<org.sireum.Z> minOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field _bminOpt:Z
         4: ifeq          16
         7: getstatic     #120                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #124                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #129                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #131                // Field _minOpt:Lorg/sireum/Z;
        23: invokevirtual #134                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #112                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> getMinOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #137                // Method minOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #112                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> maxOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #140                // Field _bmaxOpt:Z
         4: ifeq          16
         7: getstatic     #120                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #124                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #129                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #142                // Field _maxOpt:Lorg/sireum/Z;
        23: invokevirtual #134                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #112                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> getMaxOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #145                // Method maxOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #112                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #148                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #152                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          164
        14: new           #154                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #158                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #159                // String BytesImpl
        25: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #166                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #171                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #173                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #175                // Method name:()Ljava/lang/String;
        48: invokespecial #178                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #182                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: ldc           #184                // String ,
        61: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: getstatic     #171                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        69: aload_0
        70: invokevirtual #186                // Method size:()Lorg/sireum/Z;
        73: invokevirtual #182                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: ldc           #184                // String ,
        83: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: getstatic     #171                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        91: new           #188                // class org/sireum/B
        94: dup
        95: aload_0
        96: invokevirtual #190                // Method signed:()Z
        99: invokespecial #193                // Method org/sireum/B."<init>":(Z)V
       102: invokevirtual #182                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       105: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: ldc           #184                // String ,
       112: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       115: pop
       116: aload_1
       117: getstatic     #171                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       120: aload_0
       121: invokevirtual #137                // Method minOpt:()Lorg/sireum/Option;
       124: invokevirtual #182                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       127: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: ldc           #184                // String ,
       134: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       137: pop
       138: aload_1
       139: getstatic     #171                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       142: aload_0
       143: invokevirtual #145                // Method maxOpt:()Lorg/sireum/Option;
       146: invokevirtual #182                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       149: invokevirtual #163                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       152: pop
       153: aload_1
       154: bipush        41
       156: invokevirtual #166                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       159: pop
       160: aload_1
       161: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       164: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 149
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     142     1    sb   Ljava/lang/StringBuilder;
            0     165     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #148                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #152                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #171                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #201                // Method toString:()Ljava/lang/String;
        21: invokevirtual #204                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #84                 // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     131
        15: aload_0
        16: aload_0
        17: invokevirtual #208                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #210                // Method java/lang/Object.hashCode:()I
        27: goto          117
        30: getstatic     #215                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #219                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #224                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: bipush        6
        41: anewarray     #4                  // class java/lang/Object
        44: dup
        45: iconst_0
        46: aload_0
        47: invokevirtual #228                // Method getClass:()Ljava/lang/Class;
        50: invokevirtual #232                // Method java/lang/Class.getName:()Ljava/lang/String;
        53: aastore
        54: dup
        55: iconst_1
        56: new           #173                // class org/sireum/String
        59: dup
        60: aload_0
        61: invokevirtual #175                // Method name:()Ljava/lang/String;
        64: invokespecial #178                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        67: aastore
        68: dup
        69: iconst_2
        70: aload_0
        71: invokevirtual #186                // Method size:()Lorg/sireum/Z;
        74: aastore
        75: dup
        76: iconst_3
        77: new           #188                // class org/sireum/B
        80: dup
        81: aload_0
        82: invokevirtual #190                // Method signed:()Z
        85: invokespecial #193                // Method org/sireum/B."<init>":(Z)V
        88: aastore
        89: dup
        90: iconst_4
        91: aload_0
        92: invokevirtual #137                // Method minOpt:()Lorg/sireum/Option;
        95: aastore
        96: dup
        97: iconst_5
        98: aload_0
        99: invokevirtual #145                // Method maxOpt:()Lorg/sireum/Option;
       102: aastore
       103: invokevirtual #236                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       106: invokevirtual #241                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       109: checkcast     #243                // class scala/collection/Seq
       112: invokeinterface #244,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       117: putfield      #246                // Field hashCode:I
       120: aload_0
       121: aload_0
       122: getfield      #84                 // Field bitmap$0:B
       125: iconst_1
       126: ior
       127: i2b
       128: putfield      #84                 // Field bitmap$0:B
       131: aload_1
       132: monitorexit
       133: goto          139
       136: aload_1
       137: monitorexit
       138: athrow
       139: aload_0
       140: getfield      #246                // Field hashCode:I
       143: ireturn
      Exception table:
         from    to  target type
             4   131   136   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class org/sireum/bitcodec/Spec$BytesImpl ]
          stack = [ class org/sireum/bitcodec/Spec$BytesImpl ]
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class org/sireum/bitcodec/Spec$BytesImpl ]
          stack = [ class org/sireum/bitcodec/Spec$BytesImpl, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     144     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #248                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #246                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: aload_0
         1: invokevirtual #208                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          213
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          213
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/bitcodec/Spec$BytesImpl
        30: ifeq          204
        33: aload_3
        34: checkcast     #2                  // class org/sireum/bitcodec/Spec$BytesImpl
        37: astore        4
        39: aload_0
        40: invokevirtual #254                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #254                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          200
        55: aload_0
        56: invokevirtual #175                // Method name:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #175                // Method name:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          199
        79: aload         5
        81: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          199
        87: aload_0
        88: invokevirtual #186                // Method size:()Lorg/sireum/Z;
        91: aload         4
        93: invokevirtual #186                // Method size:()Lorg/sireum/Z;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          199
       111: aload         6
       113: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          199
       119: aload_0
       120: invokevirtual #190                // Method signed:()Z
       123: aload         4
       125: invokevirtual #190                // Method signed:()Z
       128: if_icmpne     199
       131: aload_0
       132: invokevirtual #137                // Method minOpt:()Lorg/sireum/Option;
       135: aload         4
       137: invokevirtual #137                // Method minOpt:()Lorg/sireum/Option;
       140: astore        7
       142: dup
       143: ifnonnull     155
       146: pop
       147: aload         7
       149: ifnull        163
       152: goto          199
       155: aload         7
       157: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       160: ifeq          199
       163: aload_0
       164: invokevirtual #145                // Method maxOpt:()Lorg/sireum/Option;
       167: aload         4
       169: invokevirtual #145                // Method maxOpt:()Lorg/sireum/Option;
       172: astore        8
       174: dup
       175: ifnonnull     187
       178: pop
       179: aload         8
       181: ifnull        195
       184: goto          199
       187: aload         8
       189: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       192: ifeq          199
       195: iconst_1
       196: goto          200
       199: iconst_0
       200: istore_2
       201: goto          212
       204: goto          207
       207: iconst_0
       208: istore_2
       209: goto          212
       212: iload_2
       213: ireturn
      StackMapTable: number_of_entries = 17
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/bitcodec/Spec$BytesImpl ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/String, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/String, class org/sireum/Z, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/String, class org/sireum/Z, class org/sireum/Option, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$BytesImpl ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     214     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
            0     214     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.bitcodec.Spec$BytesImpl apply(java.lang.String, org.sireum.Z, boolean, org.sireum.Option<org.sireum.Z>, org.sireum.Option<org.sireum.Z>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$BytesImpl;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=6
         0: new           #2                  // class org/sireum/bitcodec/Spec$BytesImpl
         3: dup
         4: aload_1
         5: aload_2
         6: iload_3
         7: aload         4
         9: aload         5
        11: invokespecial #264                // Method "<init>":(Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option;Lorg/sireum/Option;)V
        14: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
            0      15     1  name   Ljava/lang/String;
            0      15     2  size   Lorg/sireum/Z;
            0      15     3 signed   Z
            0      15     4 minOpt   Lorg/sireum/Option;
            0      15     5 maxOpt   Lorg/sireum/Option;
    Signature: #261                         // (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)Lorg/sireum/bitcodec/Spec$BytesImpl;
    MethodParameters:
      Name                           Flags
      name                           final
      size                           final
      signed                         final
      minOpt                         final
      maxOpt                         final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #175                // Method name:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #186                // Method size:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #190                // Method signed:()Z
         4: ireturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public org.sireum.Option<org.sireum.Z> apply$default$4();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #137                // Method minOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #112                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> apply$default$5();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #145                // Method maxOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #112                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #84                 // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     213
        15: aload_0
        16: getstatic     #215                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #219                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #224                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: bipush        6
        27: anewarray     #275                // class scala/Tuple2
        30: dup
        31: iconst_0
        32: new           #275                // class scala/Tuple2
        35: dup
        36: ldc_w         #277                // String type
        39: getstatic     #215                // Field scala/package$.MODULE$:Lscala/package$;
        42: invokevirtual #281                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        45: getstatic     #224                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        48: iconst_4
        49: anewarray     #199                // class java/lang/String
        52: dup
        53: iconst_0
        54: ldc_w         #283                // String org
        57: aastore
        58: dup
        59: iconst_1
        60: ldc_w         #285                // String sireum
        63: aastore
        64: dup
        65: iconst_2
        66: ldc_w         #287                // String bitcodec
        69: aastore
        70: dup
        71: iconst_3
        72: ldc           #159                // String BytesImpl
        74: aastore
        75: checkcast     #289                // class "[Ljava/lang/Object;"
        78: invokevirtual #293                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        81: invokevirtual #298                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        84: invokespecial #301                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        87: aastore
        88: dup
        89: iconst_1
        90: new           #275                // class scala/Tuple2
        93: dup
        94: ldc_w         #302                // String name
        97: new           #173                // class org/sireum/String
       100: dup
       101: aload_0
       102: invokevirtual #175                // Method name:()Ljava/lang/String;
       105: invokespecial #178                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       108: invokespecial #301                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       111: aastore
       112: dup
       113: iconst_2
       114: new           #275                // class scala/Tuple2
       117: dup
       118: ldc_w         #303                // String size
       121: aload_0
       122: invokevirtual #186                // Method size:()Lorg/sireum/Z;
       125: invokespecial #301                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       128: aastore
       129: dup
       130: iconst_3
       131: new           #275                // class scala/Tuple2
       134: dup
       135: ldc_w         #304                // String signed
       138: new           #188                // class org/sireum/B
       141: dup
       142: aload_0
       143: invokevirtual #190                // Method signed:()Z
       146: invokespecial #193                // Method org/sireum/B."<init>":(Z)V
       149: invokespecial #301                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       152: aastore
       153: dup
       154: iconst_4
       155: new           #275                // class scala/Tuple2
       158: dup
       159: ldc_w         #305                // String minOpt
       162: aload_0
       163: invokevirtual #137                // Method minOpt:()Lorg/sireum/Option;
       166: invokespecial #301                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       169: aastore
       170: dup
       171: iconst_5
       172: new           #275                // class scala/Tuple2
       175: dup
       176: ldc_w         #306                // String maxOpt
       179: aload_0
       180: invokevirtual #145                // Method maxOpt:()Lorg/sireum/Option;
       183: invokespecial #301                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       186: aastore
       187: checkcast     #289                // class "[Ljava/lang/Object;"
       190: invokevirtual #293                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       193: invokevirtual #241                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       196: checkcast     #308                // class scala/collection/immutable/Seq
       199: putfield      #310                // Field $content:Lscala/collection/immutable/Seq;
       202: aload_0
       203: aload_0
       204: getfield      #84                 // Field bitmap$0:B
       207: iconst_2
       208: ior
       209: i2b
       210: putfield      #84                 // Field bitmap$0:B
       213: aload_1
       214: monitorexit
       215: goto          221
       218: aload_1
       219: monitorexit
       220: athrow
       221: aload_0
       222: getfield      #310                // Field $content:Lscala/collection/immutable/Seq;
       225: areturn
      Exception table:
         from    to  target type
             4   213   218   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 213
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     226     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #273                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #312                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #310                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
    Signature: #273                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.Option<org.sireum.Z> computeMaxSizeOpt(scala.Function1<org.sireum.String, org.sireum.Z>);
    descriptor: (Lscala/Function1;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #129                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         3: aload_0
         4: invokevirtual #186                // Method size:()Lorg/sireum/Z;
         7: getstatic     #321                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: bipush        8
        12: invokevirtual #324                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        15: invokeinterface #328,  2          // InterfaceMethod org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
        20: invokevirtual #134                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        23: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
            0      24     1 enumMaxSize   Lscala/Function1;
    Signature: #315                         // (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;)Lorg/sireum/Option<Lorg/sireum/Z;>;
    MethodParameters:
      Name                           Flags
      enumMaxSize                    final

  public boolean isScalar();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #334                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #186                // Method size:()Lorg/sireum/Z;
         7: getstatic     #321                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: iconst_1
        11: invokevirtual #324                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: astore_1
        15: dup
        16: ifnonnull     27
        19: pop
        20: aload_1
        21: ifnull        34
        24: goto          38
        27: aload_1
        28: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: invokevirtual #337                // Method org/sireum/B$.apply:(Z)Z
        42: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$BytesImpl, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #340                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;

  public static final org.sireum.Z $anonfun$_minOpt$1();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 80: 0

  public static final org.sireum.Z $anonfun$_maxOpt$1();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 80: 0

  public org.sireum.bitcodec.Spec$BytesImpl(java.lang.String, org.sireum.Z, boolean, org.sireum.Option<org.sireum.Z>, org.sireum.Option<org.sireum.Z>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option;Lorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=6
         0: aload_0
         1: invokespecial #349                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #353                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #356                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #359                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: invokestatic  #362                // InterfaceMethod org/sireum/bitcodec/Spec.$init$:(Lorg/sireum/bitcodec/Spec;)V
        20: aload_0
        21: aload_1
        22: putfield      #100                // Field _name:Ljava/lang/String;
        25: aload_0
        26: aload_2
        27: putfield      #104                // Field _size:Lorg/sireum/Z;
        30: aload_0
        31: iload_3
        32: putfield      #108                // Field _signed:Z
        35: aload_0
        36: aload         4
        38: invokeinterface #365,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        43: putfield      #114                // Field _bminOpt:Z
        46: aload_0
        47: aload         4
        49: invokedynamic #382,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        54: invokeinterface #386,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        59: checkcast     #257                // class org/sireum/Z
        62: putfield      #131                // Field _minOpt:Lorg/sireum/Z;
        65: aload_0
        66: aload         5
        68: invokeinterface #365,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        73: putfield      #140                // Field _bmaxOpt:Z
        76: aload_0
        77: aload         5
        79: invokedynamic #390,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        84: invokeinterface #386,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        89: checkcast     #257                // class org/sireum/Z
        92: putfield      #142                // Field _maxOpt:Lorg/sireum/Z;
        95: return
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      96     0  this   Lorg/sireum/bitcodec/Spec$BytesImpl;
            0      96     1 __name   Ljava/lang/String;
            0      96     2 __size   Lorg/sireum/Z;
            0      96     3 __signed   Z
            0      96     4 __minOpt   Lorg/sireum/Option;
            0      96     5 __maxOpt   Lorg/sireum/Option;
    Signature: #343                         // (Ljava/lang/String;Lorg/sireum/Z;ZLorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)V
    MethodParameters:
      Name                           Flags
      __name                         final
      __size                         final
      __signed                       final
      __minOpt                       final
      __maxOpt                       final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #402,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #6 of #14;           // Base=class org/sireum/bitcodec/Spec$Base of class org/sireum/bitcodec/Spec
  public static final #16= #2 of #14;     // BytesImpl=class org/sireum/bitcodec/Spec$BytesImpl of class org/sireum/bitcodec/Spec
SourceFile: "Spec.scala"
BootstrapMethods:
  0: #379 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #366 ()Ljava/lang/Object;
      #369 REF_invokeStatic org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_minOpt$1:()Lorg/sireum/Z;
      #370 ()Lorg/sireum/Z;
      #371 5
      #372 1
      #370 ()Lorg/sireum/Z;
  1: #379 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #366 ()Ljava/lang/Object;
      #389 REF_invokeStatic org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_maxOpt$1:()Lorg/sireum/Z;
      #370 ()Lorg/sireum/Z;
      #371 5
      #372 1
      #370 ()Lorg/sireum/Z;
  2: #399 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #389 REF_invokeStatic org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_maxOpt$1:()Lorg/sireum/Z;
      #369 REF_invokeStatic org/sireum/bitcodec/Spec$BytesImpl.$anonfun$_minOpt$1:()Lorg/sireum/Z;
  ScalaInlineInfo: length = 0xBD (unknown attribute)
   01 01 00 25 01 56 00 2F 01 01 55 00 2F 01 00 36
   00 37 01 00 48 01 52 01 00 48 00 49 01 00 13 01
   10 01 01 0F 01 10 01 00 3E 00 3F 01 00 44 00 3F
   01 00 9B 01 06 01 00 79 01 04 01 01 0A 00 62 01
   01 0B 00 2F 01 01 0C 00 3F 01 01 0D 00 6F 01 01
   0E 00 6F 01 01 39 01 3A 01 00 F9 00 FA 01 00 8F
   00 6F 01 00 87 00 6F 01 00 65 00 62 01 00 6D 00
   3F 01 00 69 00 2F 01 00 2E 00 2F 01 00 11 00 CE
   01 00 CD 00 CE 01 01 49 00 3F 01 00 8A 00 6F 01
   00 20 00 51 01 00 50 00 51 01 00 6E 00 6F 01 00
   61 00 62 01 00 6A 00 3F 01 00 66 00 2F 01 00 C8
   00 62 01 00 25 00 26 01 00 92 00 62 01
  Scala: length = 0x0 (unknown attribute)

