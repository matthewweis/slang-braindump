Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/time/StopWatch.class
  Last modified May 29, 2022; size 4080 bytes
  SHA-256 checksum 17d26832bb31bdc18b05878e291a2ea641f14cb049e62870455208a41cfae4a3
  Compiled from "StopWatch.java"
public class org.apache.commons.lang3.time.StopWatch
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #1                          // org/apache/commons/lang3/time/StopWatch
  super_class: #43                        // java/lang/Object
  interfaces: 0, fields: 6, methods: 20, attributes: 2
Constant pool:
    #1 = Class              #96           // org/apache/commons/lang3/time/StopWatch
    #2 = Methodref          #1.#97        // org/apache/commons/lang3/time/StopWatch."<init>":()V
    #3 = Methodref          #1.#98        // org/apache/commons/lang3/time/StopWatch.start:()V
    #4 = Methodref          #43.#97       // java/lang/Object."<init>":()V
    #5 = Fieldref           #48.#99       // org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;
    #6 = Fieldref           #1.#100       // org/apache/commons/lang3/time/StopWatch.runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
    #7 = Fieldref           #46.#101      // org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
    #8 = Fieldref           #1.#102       // org/apache/commons/lang3/time/StopWatch.splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
    #9 = Fieldref           #48.#103      // org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;
   #10 = Class              #104          // java/lang/IllegalStateException
   #11 = String             #105          // Stopwatch must be reset before being restarted.
   #12 = Methodref          #10.#106      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #13 = String             #107          // Stopwatch already started.
   #14 = Methodref          #108.#109     // java/lang/System.nanoTime:()J
   #15 = Fieldref           #1.#110       // org/apache/commons/lang3/time/StopWatch.startTime:J
   #16 = Methodref          #108.#111     // java/lang/System.currentTimeMillis:()J
   #17 = Fieldref           #1.#112       // org/apache/commons/lang3/time/StopWatch.startTimeMillis:J
   #18 = Fieldref           #48.#113      // org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
   #19 = Fieldref           #48.#114      // org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;
   #20 = String             #115          // Stopwatch is not running.
   #21 = Fieldref           #1.#116       // org/apache/commons/lang3/time/StopWatch.stopTime:J
   #22 = Fieldref           #46.#117      // org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
   #23 = String             #118          // Stopwatch has not been split.
   #24 = String             #119          // Stopwatch must be running to suspend.
   #25 = String             #120          // Stopwatch must be suspended to resume.
   #26 = Methodref          #1.#121       // org/apache/commons/lang3/time/StopWatch.getNanoTime:()J
   #27 = Long               1000000l
   #29 = Fieldref           #122.#123     // java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
   #30 = Methodref          #122.#124     // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
   #31 = Class              #125          // java/lang/RuntimeException
   #32 = String             #126          // Illegal running state has occurred.
   #33 = Methodref          #31.#106      // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #34 = Methodref          #1.#127       // org/apache/commons/lang3/time/StopWatch.getSplitNanoTime:()J
   #35 = String             #128          // Stopwatch must be split to get the split time.
   #36 = String             #129          // Stopwatch has not been started
   #37 = Methodref          #1.#130       // org/apache/commons/lang3/time/StopWatch.getTime:()J
   #38 = Methodref          #131.#132     // org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;
   #39 = Methodref          #1.#133       // org/apache/commons/lang3/time/StopWatch.getSplitTime:()J
   #40 = Methodref          #48.#134      // org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z
   #41 = Methodref          #48.#135      // org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z
   #42 = Methodref          #48.#136      // org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z
   #43 = Class              #137          // java/lang/Object
   #44 = Class              #138          // org/apache/commons/lang3/time/StopWatch$1
   #45 = Utf8               InnerClasses
   #46 = Class              #139          // org/apache/commons/lang3/time/StopWatch$SplitState
   #47 = Utf8               SplitState
   #48 = Class              #140          // org/apache/commons/lang3/time/StopWatch$State
   #49 = Utf8               State
   #50 = Utf8               NANO_2_MILLIS
   #51 = Utf8               J
   #52 = Utf8               ConstantValue
   #53 = Utf8               runningState
   #54 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$State;
   #55 = Utf8               splitState
   #56 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$SplitState;
   #57 = Utf8               startTime
   #58 = Utf8               startTimeMillis
   #59 = Utf8               stopTime
   #60 = Utf8               createStarted
   #61 = Utf8               ()Lorg/apache/commons/lang3/time/StopWatch;
   #62 = Utf8               Code
   #63 = Utf8               LineNumberTable
   #64 = Utf8               LocalVariableTable
   #65 = Utf8               sw
   #66 = Utf8               Lorg/apache/commons/lang3/time/StopWatch;
   #67 = Utf8               <init>
   #68 = Utf8               ()V
   #69 = Utf8               this
   #70 = Utf8               start
   #71 = Utf8               StackMapTable
   #72 = Utf8               stop
   #73 = Utf8               reset
   #74 = Utf8               split
   #75 = Utf8               unsplit
   #76 = Utf8               suspend
   #77 = Utf8               resume
   #78 = Utf8               getTime
   #79 = Utf8               ()J
   #80 = Utf8               (Ljava/util/concurrent/TimeUnit;)J
   #81 = Utf8               timeUnit
   #82 = Utf8               Ljava/util/concurrent/TimeUnit;
   #83 = Utf8               getNanoTime
   #84 = Utf8               getSplitTime
   #85 = Utf8               getSplitNanoTime
   #86 = Utf8               getStartTime
   #87 = Utf8               toString
   #88 = Utf8               ()Ljava/lang/String;
   #89 = Utf8               toSplitString
   #90 = Utf8               isStarted
   #91 = Utf8               ()Z
   #92 = Utf8               isSuspended
   #93 = Utf8               isStopped
   #94 = Utf8               SourceFile
   #95 = Utf8               StopWatch.java
   #96 = Utf8               org/apache/commons/lang3/time/StopWatch
   #97 = NameAndType        #67:#68       // "<init>":()V
   #98 = NameAndType        #70:#68       // start:()V
   #99 = NameAndType        #141:#54      // UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;
  #100 = NameAndType        #53:#54       // runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
  #101 = NameAndType        #142:#56      // UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
  #102 = NameAndType        #55:#56       // splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
  #103 = NameAndType        #143:#54      // STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;
  #104 = Utf8               java/lang/IllegalStateException
  #105 = Utf8               Stopwatch must be reset before being restarted.
  #106 = NameAndType        #67:#144      // "<init>":(Ljava/lang/String;)V
  #107 = Utf8               Stopwatch already started.
  #108 = Class              #145          // java/lang/System
  #109 = NameAndType        #146:#79      // nanoTime:()J
  #110 = NameAndType        #57:#51       // startTime:J
  #111 = NameAndType        #147:#79      // currentTimeMillis:()J
  #112 = NameAndType        #58:#51       // startTimeMillis:J
  #113 = NameAndType        #148:#54      // RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
  #114 = NameAndType        #149:#54      // SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;
  #115 = Utf8               Stopwatch is not running.
  #116 = NameAndType        #59:#51       // stopTime:J
  #117 = NameAndType        #150:#56      // SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
  #118 = Utf8               Stopwatch has not been split.
  #119 = Utf8               Stopwatch must be running to suspend.
  #120 = Utf8               Stopwatch must be suspended to resume.
  #121 = NameAndType        #83:#79       // getNanoTime:()J
  #122 = Class              #151          // java/util/concurrent/TimeUnit
  #123 = NameAndType        #152:#82      // NANOSECONDS:Ljava/util/concurrent/TimeUnit;
  #124 = NameAndType        #153:#154     // convert:(JLjava/util/concurrent/TimeUnit;)J
  #125 = Utf8               java/lang/RuntimeException
  #126 = Utf8               Illegal running state has occurred.
  #127 = NameAndType        #85:#79       // getSplitNanoTime:()J
  #128 = Utf8               Stopwatch must be split to get the split time.
  #129 = Utf8               Stopwatch has not been started
  #130 = NameAndType        #78:#79       // getTime:()J
  #131 = Class              #155          // org/apache/commons/lang3/time/DurationFormatUtils
  #132 = NameAndType        #156:#157     // formatDurationHMS:(J)Ljava/lang/String;
  #133 = NameAndType        #84:#79       // getSplitTime:()J
  #134 = NameAndType        #90:#91       // isStarted:()Z
  #135 = NameAndType        #92:#91       // isSuspended:()Z
  #136 = NameAndType        #93:#91       // isStopped:()Z
  #137 = Utf8               java/lang/Object
  #138 = Utf8               org/apache/commons/lang3/time/StopWatch$1
  #139 = Utf8               org/apache/commons/lang3/time/StopWatch$SplitState
  #140 = Utf8               org/apache/commons/lang3/time/StopWatch$State
  #141 = Utf8               UNSTARTED
  #142 = Utf8               UNSPLIT
  #143 = Utf8               STOPPED
  #144 = Utf8               (Ljava/lang/String;)V
  #145 = Utf8               java/lang/System
  #146 = Utf8               nanoTime
  #147 = Utf8               currentTimeMillis
  #148 = Utf8               RUNNING
  #149 = Utf8               SUSPENDED
  #150 = Utf8               SPLIT
  #151 = Utf8               java/util/concurrent/TimeUnit
  #152 = Utf8               NANOSECONDS
  #153 = Utf8               convert
  #154 = Utf8               (JLjava/util/concurrent/TimeUnit;)J
  #155 = Utf8               org/apache/commons/lang3/time/DurationFormatUtils
  #156 = Utf8               formatDurationHMS
  #157 = Utf8               (J)Ljava/lang/String;
{
  private static final long NANO_2_MILLIS;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 1000000l

  private org.apache.commons.lang3.time.StopWatch$State runningState;
    descriptor: Lorg/apache/commons/lang3/time/StopWatch$State;
    flags: (0x0002) ACC_PRIVATE

  private org.apache.commons.lang3.time.StopWatch$SplitState splitState;
    descriptor: Lorg/apache/commons/lang3/time/StopWatch$SplitState;
    flags: (0x0002) ACC_PRIVATE

  private long startTime;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  private long startTimeMillis;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  private long stopTime;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  public static org.apache.commons.lang3.time.StopWatch createStarted();
    descriptor: ()Lorg/apache/commons/lang3/time/StopWatch;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=0
         0: new           #1                  // class org/apache/commons/lang3/time/StopWatch
         3: dup
         4: invokespecial #2                  // Method "<init>":()V
         7: astore_0
         8: aload_0
         9: invokevirtual #3                  // Method start:()V
        12: aload_0
        13: areturn
      LineNumberTable:
        line 72: 0
        line 73: 8
        line 74: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8       6     0    sw   Lorg/apache/commons/lang3/time/StopWatch;

  public org.apache.commons.lang3.time.StopWatch();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #4                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;
         8: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        11: aload_0
        12: getstatic     #7                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        15: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        18: return
      LineNumberTable:
        line 213: 0
        line 183: 4
        line 188: 11
        line 214: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public void start();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: getstatic     #9                  // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: if_acmpne     20
        10: new           #10                 // class java/lang/IllegalStateException
        13: dup
        14: ldc           #11                 // String Stopwatch must be reset before being restarted.
        16: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        24: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;
        27: if_acmpeq     40
        30: new           #10                 // class java/lang/IllegalStateException
        33: dup
        34: ldc           #13                 // String Stopwatch already started.
        36: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        39: athrow
        40: aload_0
        41: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
        44: putfield      #15                 // Field startTime:J
        47: aload_0
        48: invokestatic  #16                 // Method java/lang/System.currentTimeMillis:()J
        51: putfield      #17                 // Field startTimeMillis:J
        54: aload_0
        55: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
        58: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        61: return
      LineNumberTable:
        line 229: 0
        line 230: 10
        line 232: 20
        line 233: 30
        line 235: 40
        line 236: 47
        line 237: 54
        line 238: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 19 /* same */

  public void stop();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: if_acmpeq     30
        10: aload_0
        11: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        14: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;
        17: if_acmpeq     30
        20: new           #10                 // class java/lang/IllegalStateException
        23: dup
        24: ldc           #20                 // String Stopwatch is not running.
        26: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        29: athrow
        30: aload_0
        31: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        34: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
        37: if_acmpne     47
        40: aload_0
        41: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
        44: putfield      #21                 // Field stopTime:J
        47: aload_0
        48: getstatic     #9                  // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;
        51: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        54: return
      LineNumberTable:
        line 254: 0
        line 255: 20
        line 257: 30
        line 258: 40
        line 260: 47
        line 261: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 16 /* same */

  public void reset();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: aload_0
         8: getstatic     #7                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        11: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        14: return
      LineNumberTable:
        line 273: 0
        line 274: 7
        line 275: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public void split();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: if_acmpeq     20
        10: new           #10                 // class java/lang/IllegalStateException
        13: dup
        14: ldc           #20                 // String Stopwatch is not running.
        16: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
        24: putfield      #21                 // Field stopTime:J
        27: aload_0
        28: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        31: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        34: return
      LineNumberTable:
        line 291: 0
        line 292: 10
        line 294: 20
        line 295: 27
        line 296: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */

  public void unsplit();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
         4: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
         7: if_acmpeq     20
        10: new           #10                 // class java/lang/IllegalStateException
        13: dup
        14: ldc           #23                 // String Stopwatch has not been split.
        16: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: getstatic     #7                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        24: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
        27: return
      LineNumberTable:
        line 312: 0
        line 313: 10
        line 315: 20
        line 316: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */

  public void suspend();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: if_acmpeq     20
        10: new           #10                 // class java/lang/IllegalStateException
        13: dup
        14: ldc           #24                 // String Stopwatch must be running to suspend.
        16: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
        24: putfield      #21                 // Field stopTime:J
        27: aload_0
        28: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;
        31: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        34: return
      LineNumberTable:
        line 332: 0
        line 333: 10
        line 335: 20
        line 336: 27
        line 337: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */

  public void resume();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: if_acmpeq     20
        10: new           #10                 // class java/lang/IllegalStateException
        13: dup
        14: ldc           #25                 // String Stopwatch must be suspended to resume.
        16: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: dup
        22: getfield      #15                 // Field startTime:J
        25: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
        28: aload_0
        29: getfield      #21                 // Field stopTime:J
        32: lsub
        33: ladd
        34: putfield      #15                 // Field startTime:J
        37: aload_0
        38: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
        41: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        44: return
      LineNumberTable:
        line 353: 0
        line 354: 10
        line 356: 20
        line 357: 37
        line 358: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */

  public long getTime();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #26                 // Method getNanoTime:()J
         4: ldc2_w        #27                 // long 1000000l
         7: ldiv
         8: lreturn
      LineNumberTable:
        line 373: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public long getTime(java.util.concurrent.TimeUnit);
    descriptor: (Ljava/util/concurrent/TimeUnit;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #26                 // Method getNanoTime:()J
         5: getstatic     #29                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
         8: invokevirtual #30                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
        11: lreturn
      LineNumberTable:
        line 393: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/lang3/time/StopWatch;
            0      12     1 timeUnit   Ljava/util/concurrent/TimeUnit;

  public long getNanoTime();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: getstatic     #9                  // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: if_acmpeq     20
        10: aload_0
        11: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        14: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;
        17: if_acmpne     30
        20: aload_0
        21: getfield      #21                 // Field stopTime:J
        24: aload_0
        25: getfield      #15                 // Field startTime:J
        28: lsub
        29: lreturn
        30: aload_0
        31: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        34: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;
        37: if_acmpne     42
        40: lconst_0
        41: lreturn
        42: aload_0
        43: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
        46: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;
        49: if_acmpne     61
        52: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
        55: aload_0
        56: getfield      #15                 // Field startTime:J
        59: lsub
        60: lreturn
        61: new           #31                 // class java/lang/RuntimeException
        64: dup
        65: ldc           #32                 // String Illegal running state has occurred.
        67: invokespecial #33                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        70: athrow
      LineNumberTable:
        line 410: 0
        line 411: 20
        line 412: 30
        line 413: 40
        line 414: 42
        line 415: 52
        line 417: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 4
        frame_type = 20 /* same */
        frame_type = 9 /* same */
        frame_type = 11 /* same */
        frame_type = 18 /* same */

  public long getSplitTime();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #34                 // Method getSplitNanoTime:()J
         4: ldc2_w        #27                 // long 1000000l
         7: ldiv
         8: lreturn
      LineNumberTable:
        line 436: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public long getSplitNanoTime();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
         4: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;
         7: if_acmpeq     20
        10: new           #10                 // class java/lang/IllegalStateException
        13: dup
        14: ldc           #35                 // String Stopwatch must be split to get the split time.
        16: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: getfield      #21                 // Field stopTime:J
        24: aload_0
        25: getfield      #15                 // Field startTime:J
        28: lsub
        29: lreturn
      LineNumberTable:
        line 454: 0
        line 455: 10
        line 457: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */

  public long getStartTime();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;
         7: if_acmpne     20
        10: new           #10                 // class java/lang/IllegalStateException
        13: dup
        14: ldc           #36                 // String Stopwatch has not been started
        16: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: aload_0
        21: getfield      #17                 // Field startTimeMillis:J
        24: lreturn
      LineNumberTable:
        line 469: 0
        line 470: 10
        line 473: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/apache/commons/lang3/time/StopWatch;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #37                 // Method getTime:()J
         4: invokestatic  #38                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 489: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public java.lang.String toSplitString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #39                 // Method getSplitTime:()J
         4: invokestatic  #38                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 505: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public boolean isStarted();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: invokevirtual #40                 // Method org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z
         7: ireturn
      LineNumberTable:
        line 519: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public boolean isSuspended();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: invokevirtual #41                 // Method org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z
         7: ireturn
      LineNumberTable:
        line 532: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/time/StopWatch;

  public boolean isStopped();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;
         4: invokevirtual #42                 // Method org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z
         7: ireturn
      LineNumberTable:
        line 547: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/time/StopWatch;
}
SourceFile: "StopWatch.java"
InnerClasses:
  static #44;                             // class org/apache/commons/lang3/time/StopWatch$1
  private static final #47= #46 of #1;    // SplitState=class org/apache/commons/lang3/time/StopWatch$SplitState of class org/apache/commons/lang3/time/StopWatch
  private static abstract #49= #48 of #1; // State=class org/apache/commons/lang3/time/StopWatch$State of class org/apache/commons/lang3/time/StopWatch
