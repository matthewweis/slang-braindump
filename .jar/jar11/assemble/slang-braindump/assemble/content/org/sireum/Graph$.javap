Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Graph$.class
  Last modified May 29, 2022; size 3266 bytes
  SHA-256 checksum 4b712c7235daa638a6b7bf973b409737f5ed782f46109cefc6d0da00ee040396
  Compiled from "Graph.scala"
public final class org.sireum.Graph$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Graph$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/Graph$
    #2 = Class              #1            // org/sireum/Graph$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Graph.scala
    #6 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
    #7 = Class              #6            // org/sireum/$internal/PackageTrait$ISZ$
    #8 = Utf8               org/sireum/$internal/PackageTrait
    #9 = Class              #8            // org/sireum/$internal/PackageTrait
   #10 = Utf8               ISZ$
   #11 = Utf8               org/sireum/Graph$Internal$
   #12 = Class              #11           // org/sireum/Graph$Internal$
   #13 = Utf8               org/sireum/Graph
   #14 = Class              #13           // org/sireum/Graph
   #15 = Utf8               Internal$
   #16 = Utf8               org/sireum/Graph$Internal$Edges
   #17 = Class              #16           // org/sireum/Graph$Internal$Edges
   #18 = Utf8               Edges
   #19 = Utf8               MODULE$
   #20 = Utf8               Lorg/sireum/Graph$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // org/sireum/Graph$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Lorg/sireum/Graph$;
   #27 = Fieldref           #2.#26        // org/sireum/Graph$.MODULE$:Lorg/sireum/Graph$;
   #28 = Utf8               empty
   #29 = Utf8               ()Lorg/sireum/Graph;
   #30 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>()Lorg/sireum/Graph<TW;TE;>;
   #31 = Utf8               org/sireum/HashSMap$
   #32 = Class              #31           // org/sireum/HashSMap$
   #33 = Utf8               Lorg/sireum/HashSMap$;
   #34 = NameAndType        #19:#33       // MODULE$:Lorg/sireum/HashSMap$;
   #35 = Fieldref           #32.#34       // org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
   #36 = Utf8               ()Lorg/sireum/HashSMap;
   #37 = NameAndType        #28:#36       // empty:()Lorg/sireum/HashSMap;
   #38 = Methodref          #32.#37       // org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
   #39 = Utf8               org/sireum/package$
   #40 = Class              #39           // org/sireum/package$
   #41 = Utf8               Lorg/sireum/package$;
   #42 = NameAndType        #19:#41       // MODULE$:Lorg/sireum/package$;
   #43 = Fieldref           #40.#42       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #44 = Utf8               ISZ
   #45 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #46 = NameAndType        #44:#45       // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #47 = Methodref          #40.#46       // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #48 = Utf8               scala/collection/immutable/Nil$
   #49 = Class              #48           // scala/collection/immutable/Nil$
   #50 = Utf8               Lscala/collection/immutable/Nil$;
   #51 = NameAndType        #19:#50       // MODULE$:Lscala/collection/immutable/Nil$;
   #52 = Fieldref           #49.#51       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #53 = Utf8               apply
   #54 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #55 = NameAndType        #53:#54       // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #56 = Methodref          #7.#55        // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #57 = Utf8               org/sireum/Z$
   #58 = Class              #57           // org/sireum/Z$
   #59 = Utf8               Lorg/sireum/Z$;
   #60 = NameAndType        #19:#59       // MODULE$:Lorg/sireum/Z$;
   #61 = Fieldref           #58.#60       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #62 = Utf8               (I)Lorg/sireum/Z;
   #63 = NameAndType        #53:#62       // apply:(I)Lorg/sireum/Z;
   #64 = Methodref          #58.#63       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #65 = Utf8               F
   #66 = Utf8               ()Z
   #67 = NameAndType        #65:#66       // F:()Z
   #68 = Methodref          #40.#67       // org/sireum/package$.F:()Z
   #69 = Utf8               (Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
   #70 = NameAndType        #53:#69       // apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
   #71 = Methodref          #2.#70        // org/sireum/Graph$.apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
   #72 = Utf8               this
   #73 = Utf8               emptyMulti
   #74 = Utf8               T
   #75 = NameAndType        #74:#66       // T:()Z
   #76 = Methodref          #40.#75       // org/sireum/package$.T:()Z
   #77 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TW;Lorg/sireum/Z;>;Lorg/sireum/IS<Lorg/sireum/Z;TW;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/Z;Z)Lorg/sireum/Graph<TW;TE;>;
   #78 = Utf8               nodes
   #79 = Utf8               nodesInverse
   #80 = Utf8               incomingEdges
   #81 = Utf8               outgoingEdges
   #82 = Utf8               nextNodeId
   #83 = Utf8               multi
   #84 = Utf8               (Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)V
   #85 = NameAndType        #23:#84       // "<init>":(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)V
   #86 = Methodref          #14.#85       // org/sireum/Graph."<init>":(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)V
   #87 = Utf8               Lorg/sireum/HashSMap;
   #88 = Utf8               Lorg/sireum/IS;
   #89 = Utf8               Lorg/sireum/Z;
   #90 = Utf8               Z
   #91 = Utf8               unapply
   #92 = Utf8               (Lorg/sireum/Graph;)Lscala/Some;
   #93 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;)Lscala/Some<Lscala/Tuple6<Lorg/sireum/HashSMap<TW;Lorg/sireum/Z;>;Lorg/sireum/IS<Lorg/sireum/Z;TW;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/Z;Lorg/sireum/B;>;>;
   #94 = Utf8               o
   #95 = Utf8               scala/Some
   #96 = Class              #95           // scala/Some
   #97 = Utf8               scala/Tuple6
   #98 = Class              #97           // scala/Tuple6
   #99 = NameAndType        #78:#36       // nodes:()Lorg/sireum/HashSMap;
  #100 = Methodref          #14.#99       // org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
  #101 = Utf8               ()Lorg/sireum/IS;
  #102 = NameAndType        #79:#101      // nodesInverse:()Lorg/sireum/IS;
  #103 = Methodref          #14.#102      // org/sireum/Graph.nodesInverse:()Lorg/sireum/IS;
  #104 = NameAndType        #80:#36       // incomingEdges:()Lorg/sireum/HashSMap;
  #105 = Methodref          #14.#104      // org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
  #106 = NameAndType        #81:#36       // outgoingEdges:()Lorg/sireum/HashSMap;
  #107 = Methodref          #14.#106      // org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
  #108 = Utf8               ()Lorg/sireum/Z;
  #109 = NameAndType        #82:#108      // nextNodeId:()Lorg/sireum/Z;
  #110 = Methodref          #14.#109      // org/sireum/Graph.nextNodeId:()Lorg/sireum/Z;
  #111 = Utf8               org/sireum/B
  #112 = Class              #111          // org/sireum/B
  #113 = NameAndType        #83:#66       // multi:()Z
  #114 = Methodref          #14.#113      // org/sireum/Graph.multi:()Z
  #115 = Utf8               (Z)V
  #116 = NameAndType        #23:#115      // "<init>":(Z)V
  #117 = Methodref          #112.#116     // org/sireum/B."<init>":(Z)V
  #118 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #119 = NameAndType        #23:#118      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #120 = Methodref          #98.#119      // scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #121 = Utf8               (Ljava/lang/Object;)V
  #122 = NameAndType        #23:#121      // "<init>":(Ljava/lang/Object;)V
  #123 = Methodref          #96.#122      // scala/Some."<init>":(Ljava/lang/Object;)V
  #124 = Utf8               Lorg/sireum/Graph;
  #125 = Methodref          #4.#24        // java/lang/Object."<init>":()V
  #126 = Utf8               Code
  #127 = Utf8               LineNumberTable
  #128 = Utf8               LocalVariableTable
  #129 = Utf8               Signature
  #130 = Utf8               MethodParameters
  #131 = Utf8               InnerClasses
  #132 = Utf8               SourceFile
  #133 = Utf8               ScalaInlineInfo
  #134 = Utf8               Scala
{
  public static final org.sireum.Graph$ MODULE$;
    descriptor: Lorg/sireum/Graph$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/Graph$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Lorg/sireum/Graph$;
        10: return
      LineNumberTable:
        line 29: 0

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.Graph<W, E> empty();
    descriptor: ()Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: getstatic     #35                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         4: invokevirtual #38                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
         7: getstatic     #43                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        10: invokevirtual #47                 // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        13: getstatic     #52                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        16: invokevirtual #56                 // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        19: getstatic     #35                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        22: invokevirtual #38                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        25: getstatic     #35                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        28: invokevirtual #38                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        31: getstatic     #61                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        34: iconst_0
        35: invokevirtual #64                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        38: getstatic     #43                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        41: invokevirtual #68                 // Method org/sireum/package$.F:()Z
        44: invokevirtual #71                 // Method apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
        47: areturn
      LineNumberTable:
        line 195: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/sireum/Graph$;
    Signature: #30                          // <W:Ljava/lang/Object;E:Ljava/lang/Object;>()Lorg/sireum/Graph<TW;TE;>;

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.Graph<W, E> emptyMulti();
    descriptor: ()Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: getstatic     #35                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         4: invokevirtual #38                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
         7: getstatic     #43                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        10: invokevirtual #47                 // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        13: getstatic     #52                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        16: invokevirtual #56                 // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        19: getstatic     #35                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        22: invokevirtual #38                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        25: getstatic     #35                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        28: invokevirtual #38                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        31: getstatic     #61                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        34: iconst_0
        35: invokevirtual #64                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        38: getstatic     #43                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        41: invokevirtual #76                 // Method org/sireum/package$.T:()Z
        44: invokevirtual #71                 // Method apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
        47: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/sireum/Graph$;
    Signature: #30                          // <W:Ljava/lang/Object;E:Ljava/lang/Object;>()Lorg/sireum/Graph<TW;TE;>;

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.Graph<W, E> apply(org.sireum.HashSMap<W, org.sireum.Z>, org.sireum.IS<org.sireum.Z, W>, org.sireum.HashSMap<org.sireum.Z, org.sireum.Graph$Internal$Edges<E>>, org.sireum.HashSMap<org.sireum.Z, org.sireum.Graph$Internal$Edges<E>>, org.sireum.Z, boolean);
    descriptor: (Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=7
         0: new           #14                 // class org/sireum/Graph
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: iload         6
        13: invokespecial #86                 // Method org/sireum/Graph."<init>":(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)V
        16: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/Graph$;
            0      17     1 nodes   Lorg/sireum/HashSMap;
            0      17     2 nodesInverse   Lorg/sireum/IS;
            0      17     3 incomingEdges   Lorg/sireum/HashSMap;
            0      17     4 outgoingEdges   Lorg/sireum/HashSMap;
            0      17     5 nextNodeId   Lorg/sireum/Z;
            0      17     6 multi   Z
    Signature: #77                          // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TW;Lorg/sireum/Z;>;Lorg/sireum/IS<Lorg/sireum/Z;TW;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/Z;Z)Lorg/sireum/Graph<TW;TE;>;
    MethodParameters:
      Name                           Flags
      nodes                          final
      nodesInverse                   final
      incomingEdges                  final
      outgoingEdges                  final
      nextNodeId                     final
      multi                          final

  public <W extends java.lang.Object, E extends java.lang.Object> scala.Some<scala.Tuple6<org.sireum.HashSMap<W, org.sireum.Z>, org.sireum.IS<org.sireum.Z, W>, org.sireum.HashSMap<org.sireum.Z, org.sireum.Graph$Internal$Edges<E>>, org.sireum.HashSMap<org.sireum.Z, org.sireum.Graph$Internal$Edges<E>>, org.sireum.Z, org.sireum.B>> unapply(org.sireum.Graph<W, E>);
    descriptor: (Lorg/sireum/Graph;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #96                 // class scala/Some
         3: dup
         4: new           #98                 // class scala/Tuple6
         7: dup
         8: aload_1
         9: invokevirtual #100                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        12: aload_1
        13: invokevirtual #103                // Method org/sireum/Graph.nodesInverse:()Lorg/sireum/IS;
        16: aload_1
        17: invokevirtual #105                // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
        20: aload_1
        21: invokevirtual #107                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
        24: aload_1
        25: invokevirtual #110                // Method org/sireum/Graph.nextNodeId:()Lorg/sireum/Z;
        28: new           #112                // class org/sireum/B
        31: dup
        32: aload_1
        33: invokevirtual #114                // Method org/sireum/Graph.multi:()Z
        36: invokespecial #117                // Method org/sireum/B."<init>":(Z)V
        39: invokespecial #120                // Method scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        42: invokespecial #123                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        45: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lorg/sireum/Graph$;
            0      46     1     o   Lorg/sireum/Graph;
    Signature: #93                          // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;)Lscala/Some<Lscala/Tuple6<Lorg/sireum/HashSMap<TW;Lorg/sireum/Z;>;Lorg/sireum/IS<Lorg/sireum/Z;TW;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/HashSMap<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edges<TE;>;>;Lorg/sireum/Z;Lorg/sireum/B;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  private org.sireum.Graph$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #125                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$;
}
InnerClasses:
  public #10= #7 of #9;                   // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static #15= #12 of #14;          // Internal$=class org/sireum/Graph$Internal$ of class org/sireum/Graph
  public static #18= #17 of #12;          // Edges=class org/sireum/Graph$Internal$Edges of class org/sireum/Graph$Internal$
SourceFile: "Graph.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 17 00 16 01 00 35 00 45 01 00 1C
   00 1D 01 00 49 00 1D 01 00 5B 00 5C 01
  Scala: length = 0x0 (unknown attribute)

