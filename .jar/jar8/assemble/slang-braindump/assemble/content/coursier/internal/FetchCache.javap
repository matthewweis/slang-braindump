Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/internal/FetchCache.class
  Last modified May 29, 2022; size 14296 bytes
  SHA-256 checksum 74c9c59e7e1f410d6b6bd32dd52429a51af79c24efd6b8e39b7e5e24053dd329
  Compiled from "FetchCache.scala"
public final class coursier.internal.FetchCache implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/internal/FetchCache
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 32, attributes: 6
Constant pool:
    #1 = Utf8               coursier/internal/FetchCache
    #2 = Class              #1            // coursier/internal/FetchCache
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               FetchCache.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\rMb\u0001\u0002(P\u0005QC\u0001B\u001b\u0001\u0003\u0006\u0004%\ta\u001b\u0005\tm\u0002\u0011\t\u0011)A\u0005Y\")q\u000f\u0001C\u0001q\")A\u0010\u0001C\u0001{\"9!\u0011\u001e\u0001\u0005\u0002\t-\bb\u0002Bx\u0001\u0011\u0005!\u0011\u001f\u0005\b\u0005k\u0004A\u0011\u0001B|\u0011\u001d\u0019)\u0001\u0001C\u0001\u0007\u000fAqaa\u0004\u0001\t\u0003\u0019\t\u0002C\u0004\u0003\u0014\u0002!\tE!&\t\u000f\t\r\u0005\u0001\"\u0011\u0004\u0016!9!q\u0013\u0001\u0005B\rm\u0001b\u0002BH\u0001\u0011\u0005#\u0011\u0013\u0005\b\u0007?\u0001A\u0011BB\u0011\u0011\u001d\u0011i\u0005\u0001C!\u0005\u001fBqAa\u0017\u0001\t\u0003\u0012i\u0006C\u0004\u0003f\u0001!\te!\u000b\t\u000f\t%\u0005\u0001\"\u0011\u00040\u001d9\u0011QA(\t\u0002\u0005\u001daA\u0002(P\u0011\u0003\tI\u0001\u0003\u0004x)\u0011\u0005\u0011Q\u0003\u0004\b\u0003/!\")UA\r\u0011)\tYB\u0006BK\u0002\u0013\u0005\u0011Q\u0004\u0005\u000b\u0003c1\"\u0011#Q\u0001\n\u0005}\u0001BCA\u001a-\tU\r\u0011\"\u0001\u00026!Q\u0011q\b\f\u0003\u0012\u0003\u0006I!a\u000e\t\u0015\u0005\u0005cC!f\u0001\n\u0003\t\u0019\u0005\u0003\u0006\u0002RY\u0011\t\u0012)A\u0005\u0003\u000bB!\"a\u0015\u0017\u0005+\u0007I\u0011AA+\u0011)\t)H\u0006B\tB\u0003%\u0011q\u000b\u0005\u000b\u0003o2\"Q3A\u0005\u0002\u0005e\u0004BCA@-\tE\t\u0015!\u0003\u0002|!Q\u0011\u0011\u0011\f\u0003\u0016\u0004%\t!!\u001f\t\u0015\u0005\reC!E!\u0002\u0013\tY\b\u0003\u0006\u0002\u0006Z\u0011)\u001a!C\u0001\u0003\u000fC!\"a#\u0017\u0005#\u0005\u000b\u0011BAE\u0011)\tiI\u0006BK\u0002\u0013\u0005\u0011q\u0012\u0005\u000b\u0003#3\"\u0011#Q\u0001\n\u0005\u0015\u0004BCAJ-\tU\r\u0011\"\u0001\u0002\u0016\"Q\u0011q\u0014\f\u0003\u0012\u0003\u0006I!a&\t\u0015\u0005\u0005fC!f\u0001\n\u0003\t\u0019\u000b\u0003\u0006\u00022Z\u0011\t\u0012)A\u0005\u0003KC!\"a-\u0017\u0005+\u0007I\u0011AA[\u0011)\t\tM\u0006B\tB\u0003%\u0011q\u0017\u0005\u0007oZ!\t!a1\t\u0015\u0005}g\u0003#b\u0001\n\u0003\ty\t\u0003\u0006\u0002bZA)\u0019!C\u0001\u0003\u001fC\u0011\"a9\u0017\u0003\u0003%\t!!:\t\u0013\u0005uh#%A\u0005\u0002\u0005}\b\"\u0003B\u000b-E\u0005I\u0011\u0001B\f\u0011%\u0011YBFI\u0001\n\u0003\u0011i\u0002C\u0005\u0003\"Y\t\n\u0011\"\u0001\u0003$!I!q\u0005\f\u0012\u0002\u0013\u0005!\u0011\u0006\u0005\n\u0005[1\u0012\u0013!C\u0001\u0005SA\u0011Ba\f\u0017#\u0003%\tA!\r\t\u0013\tUb#%A\u0005\u0002\t]\u0002\"\u0003B\u001e-E\u0005I\u0011\u0001B\u001f\u0011%\u0011\tEFI\u0001\n\u0003\u0011\u0019\u0005C\u0005\u0003HY\t\n\u0011\"\u0001\u0003J!I!Q\n\f\u0002\u0002\u0013\u0005#q\n\u0005\n\u000572\u0012\u0011!C\u0001\u0005;B\u0011B!\u001a\u0017\u0003\u0003%\tAa\u001a\t\u0013\tMd#!A\u0005B\tU\u0004\"\u0003BB-\u0005\u0005I\u0011\u0001BC\u0011%\u0011IIFA\u0001\n\u0003\u0012Y\tC\u0005\u0003\u0010Z\t\t\u0011\"\u0011\u0003\u0012\"I!1\u0013\f\u0002\u0002\u0013\u0005#Q\u0013\u0005\n\u0005/3\u0012\u0011!C!\u00053;!B!(\u0015\u0003\u0003E\t!\u0015BP\r)\t9\u0002FA\u0001\u0012\u0003\t&\u0011\u0015\u0005\u0007o\u001a#\tAa,\t\u0013\tMe)!A\u0005F\tU\u0005\"\u0003BY\r\u0006\u0005I\u0011\u0011BZ\u0011%\u0011YMRA\u0001\n\u0003\u0013i\rC\u0005\u0003\\\u001a\u000b\t\u0011\"\u0003\u0003^\"9!\u0011\u0017\u000b\u0005\u0002\t\u0015\b\"\u0003Bn)\u0005\u0005I\u0011\u0002Bo\u0005)1U\r^2i\u0007\u0006\u001c\u0007.\u001a\u0006\u0003!F\u000b\u0001\"\u001b8uKJt\u0017\r\u001c\u0006\u0002%\u0006A1m\\;sg&,\'o\u0001\u0001\u0014\t\u0001)6L\u0018\t\u0003-fk\u0011a\u0016\u0006\u00021\u0006)1oY1mC&\u0011!l\u0016\u0002\u0007\u0003:L(+\u001a4\u0011\u0005Yc\u0016BA/X\u0005\u001d\u0001&o\u001c3vGR\u0004\"aX4\u000f\u0005\u0001,gBA1e\u001b\u0005\u0011\'BA2T\u0003\u0019a$o\\8u}%\t\u0001,\u0003\u0002g/\u00069\u0001/Y2lC\u001e,\u0017B\u00015j\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\t1w+\u0001\u0003cCN,W#\u00017\u0011\u00055$X\"\u00018\u000b\u0005=\u0004\u0018\u0001\u00024jY\u0016T!!\u001d:\u0002\u00079LwNC\u0001t\u0003\u0011Q\u0017M^1\n\u0005Ut\'\u0001\u0002)bi\"\fQAY1tK\u0002\na\u0001P5oSRtDCA=|!\tQ\b!D\u0001P\u0011\u0015Q7\u00011\u0001m\u0003\r!\u0017N\u001d\u000b\u0003YzDaa \u0003A\u0002\u0005\u0005\u0011aA6fsB\u0019\u00111\u0001\f\u000f\u0005i\u001c\u0012A\u0003$fi\u000eD7)Y2iKB\u0011!\u0010F\n\u0005)U\u000bY\u0001\u0005\u0003\u0002\u000e\u0005MQBAA\b\u0015\r\t\tB]\u0001\u0003S>L1\u0001[A\b)\t\t9AA\u0002LKf\u001cBAF+\\=\u0006aA-\u001a9f]\u0012,gnY5fgV\u0011\u0011q\u0004\t\u0006?\u0006\u0005\u0012QE\u0005\u0004\u0003GI\'aA*fcB!\u0011qEA\u0017\u001b\t\tICC\u0002\u0002,E\u000bAaY8sK&!\u0011qFA\u0015\u0005)!U\r]3oI\u0016t7-_\u0001\u000eI\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u0011\u0002\u0019I,\u0007o\\:ji>\u0014\u0018.Z:\u0016\u0005\u0005]\u0002#B0\u0002\"\u0005e\u0002\u0003BA\u0014\u0003wIA!!\u0010\u0002*\tQ!+\u001a9pg&$xN]=\u0002\u001bI,\u0007o\\:ji>\u0014\u0018.Z:!\u0003A\u0011Xm]8mkRLwN\u001c)be\u0006l7/\u0006\u0002\u0002FA!\u0011qIA\'\u001b\t\tIEC\u0002\u0002LE\u000ba\u0001]1sC6\u001c\u0018\u0002BA(\u0003\u0013\u0012\u0001CU3t_2,H/[8o!\u0006\u0014\u0018-\\:\u0002#I,7o\u001c7vi&|g\u000eU1sC6\u001c\b%\u0001\u0007g_J\u001cWMV3sg&|g.\u0006\u0002\u0002XA)q,!\t\u0002ZA9a+a\u0017\u0002`\u0005\u0015\u0014bAA//\n1A+\u001e9mKJ\u0002B!a\n\u0002b%!\u00111MA\u0015\u0005\u0019iu\u000eZ;mKB!\u0011qMA8\u001d\u0011\tI\'a\u001b\u0011\u0005\u0005<\u0016bAA7/\u00061\u0001K]3eK\u001aLA!!\u001d\u0002t\t11\u000b\u001e:j]\u001eT1!!\u001cX\u000351wN]2f-\u0016\u00148/[8oA\u0005Q\u0001O]8qKJ$\u0018.Z:\u0016\u0005\u0005m\u0004#B0\u0002\"\u0005u\u0004c\u0002,\u0002\\\u0005\u0015\u0014QM\u0001\faJ|\u0007/\u001a:uS\u0016\u001c\b%\u0001\tg_J\u001cW\r\u001a)s_B,\'\u000f^5fg\u0006\tbm\u001c:dK\u0012\u0004&o\u001c9feRLWm\u001d\u0011\u0002\u0011A\u0014xNZ5mKN,\"!!#\u0011\u000b}\u000b\t#!\u001a\u0002\u0013A\u0014xNZ5mKN\u0004\u0013!D2bG\",Gj\\2bi&|g.\u0006\u0002\u0002f\u0005q1-Y2iK2{7-\u0019;j_:\u0004\u0013aC2mCN\u001c\u0018NZ5feN,\"!a&\u0011\u000b}\u000b\t#!\'\u0011\t\u0005\u001d\u00121T\u0005\u0005\u0003;\u000bIC\u0001\u0006DY\u0006\u001c8/\u001b4jKJ\fAb\u00197bgNLg-[3sg\u0002\nQ\"\\1j]\u0006\u0013H/\u001b4bGR\u001cXCAAS!\u00151\u0016qUAV\u0013\r\tIk\u0016\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0007Y\u000bi+C\u0002\u00020^\u0013qAQ8pY\u0016\fg.\u0001\bnC&t\u0017I\u001d;jM\u0006\u001cGo\u001d\u0011\u0002!\u0005\u0014H/\u001b4bGR$\u0016\u0010]3t\u001fB$XCAA\\!\u00151\u0016qUA]!\u0015y\u0016\u0011EA^!\u0011\t9#!0\n\t\u0005}\u0016\u0011\u0006\u0002\u0005)f\u0004X-A\tbeRLg-Y2u)f\u0004Xm](qi\u0002\"\u0002$!2\u0002J\u0006-\u0017QZAh\u0003#\f\u0019.!6\u0002X\u0006e\u00171\\Ao!\r\t9MF\u0007\u0002)!9\u00111D\u0017A\u0002\u0005}\u0001bBA\u001a[\u0001\u0007\u0011q\u0007\u0005\b\u0003\u0003j\u0003\u0019AA#\u0011\u001d\t\u0019&\fa\u0001\u0003/Bq!a\u001e.\u0001\u0004\tY\bC\u0004\u0002\u00026\u0002\r!a\u001f\t\u000f\u0005\u0015U\u00061\u0001\u0002\n\"9\u0011QR\u0017A\u0002\u0005\u0015\u0004bBAJ[\u0001\u0007\u0011q\u0013\u0005\b\u0003Ck\u0003\u0019AAS\u0011\u001d\t\u0019,\fa\u0001\u0003o\u000bAA]3qe\u0006!1\u000f[12\u0003\u0011\u0019w\u000e]=\u00151\u0005\u0015\u0017q]Au\u0003W\fi/a<\u0002r\u0006M\u0018Q_A|\u0003s\fY\u0010C\u0005\u0002\u001cA\u0002\n\u00111\u0001\u0002 !I\u00111\u0007\u0019\u0011\u0002\u0003\u0007\u0011q\u0007\u0005\n\u0003\u0003\u0002\u0004\u0013!a\u0001\u0003\u000bB\u0011\"a\u00151!\u0003\u0005\r!a\u0016\t\u0013\u0005]\u0004\u0007%AA\u0002\u0005m\u0004\"CAAaA\u0005\t\u0019AA>\u0011%\t)\t\rI\u0001\u0002\u0004\tI\tC\u0005\u0002\u000eB\u0002\n\u00111\u0001\u0002f!I\u00111\u0013\u0019\u0011\u0002\u0003\u0007\u0011q\u0013\u0005\n\u0003C\u0003\u0004\u0013!a\u0001\u0003KC\u0011\"a-1!\u0003\u0005\r!a.\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\u0011!\u0011\u0001\u0016\u0005\u0003?\u0011\u0019a\u000b\u0002\u0003\u0006A!!q\u0001B\t\u001b\t\u0011IA\u0003\u0003\u0003\f\t5\u0011!C;oG\",7m[3e\u0015\r\u0011yaV\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002\u0002B\n\u0005\u0013\u0011\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII*\"A!\u0007+\t\u0005]\"1A\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00134+\t\u0011yB\u000b\u0003\u0002F\t\r\u0011AD2paf$C-\u001a4bk2$H\u0005N\u000b\u0003\u0005KQC!a\u0016\u0003\u0004\u0005q1m\u001c9zI\u0011,g-Y;mi\u0012*TC\u0001B\u0016U\u0011\tYHa\u0001\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%m\u0005q1m\u001c9zI\u0011,g-Y;mi\u0012:TC\u0001B\u001aU\u0011\tIIa\u0001\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%qU\u0011!\u0011\b\u0016\u0005\u0003K\u0012\u0019!\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u001d\u0016\u0005\t}\"\u0006BAL\u0005\u0007\tqbY8qs\u0012\"WMZ1vYR$\u0013\u0007M\u000b\u0003\u0005\u000bRC!!*\u0003\u0004\u0005y1m\u001c9zI\u0011,g-Y;mi\u0012\n\u0014\'\u0006\u0002\u0003L)\"\u0011q\u0017B\u0002\u00035\u0001(o\u001c3vGR\u0004&/\u001a4jqV\u0011!\u0011\u000b\t\u0005\u0005\'\u0012I&\u0004\u0002\u0003V)\u0019!q\u000b:\u0002\t1\fgnZ\u0005\u0005\u0003c\u0012)&\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0006\u0002\u0003`A\u0019aK!\u0019\n\u0007\t\rtKA\u0002J]R\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0003\u0003j\t=\u0004c\u0001,\u0003l%\u0019!QN,\u0003\u0007\u0005s\u0017\u0010C\u0005\u0003ry\n\t\u00111\u0001\u0003`\u0005\u0019\u0001\u0010J\u0019\u0002\u001fA\u0014x\u000eZ;di&#XM]1u_J,\"Aa\u001e\u0011\r\te$q\u0010B5\u001b\t\u0011YHC\u0002\u0003~]\u000b!bY8mY\u0016\u001cG/[8o\u0013\u0011\u0011\tIa\u001f\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0005\u0003W\u00139\tC\u0005\u0003r\u0001\u000b\t\u00111\u0001\u0003j\u0005\u0011\u0002O]8ek\u000e$X\t\\3nK:$h*Y7f)\u0011\u0011\tF!$\t\u0013\tE\u0014)!AA\u0002\t}\u0013\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\t}\u0013\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\tE\u0013AB3rk\u0006d7\u000f\u0006\u0003\u0002,\nm\u0005\"\u0003B9\t\u0006\u0005\t\u0019\u0001B5\u0003\rYU-\u001f\t\u0004\u0003\u000f45#\u0002$\u0003$\u0006-\u0001\u0003\bBS\u0005W\u000by\"a\u000e\u0002F\u0005]\u00131PA>\u0003\u0013\u000b)\'a&\u0002&\u0006]\u0016QY\u0007\u0003\u0005OS1A!+X\u0003\u001d\u0011XO\u001c;j[\u0016LAA!,\u0003(\n\u0011\u0012IY:ue\u0006\u001cGOR;oGRLwN\\\u00192)\t\u0011y*A\u0003baBd\u0017\u0010\u0006\r\u0002F\nU&q\u0017B]\u0005w\u0013iLa0\u0003B\n\r\'Q\u0019Bd\u0005\u0013Dq!a\u0007J\u0001\u0004\ty\u0002C\u0004\u00024%\u0003\r!a\u000e\t\u000f\u0005\u0005\u0013\n1\u0001\u0002F!9\u00111K%A\u0002\u0005]\u0003bBA<\u0013\u0002\u0007\u00111\u0010\u0005\b\u0003\u0003K\u0005\u0019AA>\u0011\u001d\t))\u0013a\u0001\u0003\u0013Cq!!$J\u0001\u0004\t)\u0007C\u0004\u0002\u0014&\u0003\r!a&\t\u000f\u0005\u0005\u0016\n1\u0001\u0002&\"9\u00111W%A\u0002\u0005]\u0016aB;oCB\u0004H.\u001f\u000b\u0005\u0005\u001f\u00149\u000eE\u0003W\u0003O\u0013\t\u000eE\rW\u0005\'\fy\"a\u000e\u0002F\u0005]\u00131PA>\u0003\u0013\u000b)\'a&\u0002&\u0006]\u0016b\u0001Bk/\n9A+\u001e9mKF\n\u0004\"\u0003Bm\u0015\u0006\u0005\t\u0019AAc\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0005?\u0004BAa\u0015\u0003b&!!1\u001dB+\u0005\u0019y%M[3diR\u0019\u0011Pa:\t\u000b)d\u0005\u0019\u00017\u0002\u0015I,7/\u001e7u\r&dW\rF\u0002m\u0005[Daa`\u0003A\u0002\u0005\u0005\u0011\u0001\u00037pG.4\u0015\u000e\\3\u0015\u00071\u0014\u0019\u0010\u0003\u0004\u0000\r\u0001\u0007\u0011\u0011A\u0001\u0005e\u0016\fG\r\u0006\u0003\u0003z\u000e\r\u0001#\u0002,\u0002(\nm\b#B0\u0002\"\tu\b\u0003BA\u0007\u0005\u007fLAa!\u0001\u0002\u0010\t!a)\u001b7f\u0011\u0019yx\u00011\u0001\u0002\u0002\u0005)qO]5uKR1\u00111VB\u0005\u0007\u0017Aaa \u0005A\u0002\u0005\u0005\u0001bBB\u0007\u0011\u0001\u0007!1`\u0001\nCJ$\u0018NZ1diN\f\u0001b^5uQ\n\u000b7/\u001a\u000b\u0004s\u000eM\u0001\"\u00026\n\u0001\u0004aG\u0003BAV\u0007/Aqa!\u0007\f\u0001\u0004\u0011I\'A\u0002pE*$B!a+\u0004\u001e!91\u0011\u0004\u0007A\u0002\t%\u0014!\u0002;va2,WCAB\u0012!\u001116Q\u00057\n\u0007\r\u001drK\u0001\u0004UkBdW-\r\u000b\u0005\u0005S\u001aY\u0003C\u0004\u0004.E\u0001\rAa\u0018\u0002\u00039$BA!\u0015\u00042!91Q\u0006\nA\u0002\t}\u0003
   #13 = Utf8               coursier/internal/FetchCache$Key
   #14 = Class              #13           // coursier/internal/FetchCache$Key
   #15 = Utf8               Key
   #16 = Utf8               coursier/internal/FetchCache$Key$
   #17 = Class              #16           // coursier/internal/FetchCache$Key$
   #18 = Utf8
   #19 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #20 = Class              #19           // java/lang/invoke/MethodHandles$Lookup
   #21 = Utf8               java/lang/invoke/MethodHandles
   #22 = Class              #21           // java/lang/invoke/MethodHandles
   #23 = Utf8               Lookup
   #24 = Utf8               base
   #25 = Utf8               Ljava/nio/file/Path;
   #26 = Utf8               apply
   #27 = Utf8               (Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
   #28 = Utf8               coursier/internal/FetchCache$
   #29 = Class              #28           // coursier/internal/FetchCache$
   #30 = Utf8               MODULE$
   #31 = Utf8               Lcoursier/internal/FetchCache$;
   #32 = NameAndType        #30:#31       // MODULE$:Lcoursier/internal/FetchCache$;
   #33 = Fieldref           #29.#32       // coursier/internal/FetchCache$.MODULE$:Lcoursier/internal/FetchCache$;
   #34 = NameAndType        #26:#27       // apply:(Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
   #35 = Methodref          #29.#34       // coursier/internal/FetchCache$.apply:(Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
   #36 = Utf8               productIterator
   #37 = Utf8               ()Lscala/collection/Iterator;
   #38 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #39 = Utf8               productIterator$
   #40 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #41 = NameAndType        #39:#40       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #42 = InterfaceMethodref #6.#41        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #43 = Utf8               this
   #44 = Utf8               Lcoursier/internal/FetchCache;
   #45 = Utf8               productElementNames
   #46 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #47 = Utf8               productElementNames$
   #48 = NameAndType        #47:#40       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #49 = InterfaceMethodref #6.#48        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #50 = Utf8               ()Ljava/nio/file/Path;
   #51 = NameAndType        #24:#25       // base:Ljava/nio/file/Path;
   #52 = Fieldref           #2.#51        // coursier/internal/FetchCache.base:Ljava/nio/file/Path;
   #53 = Utf8               dir
   #54 = Utf8               (Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
   #55 = Utf8               key
   #56 = NameAndType        #24:#50       // base:()Ljava/nio/file/Path;
   #57 = Methodref          #2.#56        // coursier/internal/FetchCache.base:()Ljava/nio/file/Path;
   #58 = Utf8               java/lang/StringBuilder
   #59 = Class              #58           // java/lang/StringBuilder
   #60 = Integer            1
   #61 = Utf8               <init>
   #62 = Utf8               (I)V
   #63 = NameAndType        #61:#62       // "<init>":(I)V
   #64 = Methodref          #59.#63       // java/lang/StringBuilder."<init>":(I)V
   #65 = Utf8               scala/collection/StringOps$
   #66 = Class              #65           // scala/collection/StringOps$
   #67 = Utf8               Lscala/collection/StringOps$;
   #68 = NameAndType        #30:#67       // MODULE$:Lscala/collection/StringOps$;
   #69 = Fieldref           #66.#68       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #70 = Utf8               scala/Predef$
   #71 = Class              #70           // scala/Predef$
   #72 = Utf8               Lscala/Predef$;
   #73 = NameAndType        #30:#72       // MODULE$:Lscala/Predef$;
   #74 = Fieldref           #71.#73       // scala/Predef$.MODULE$:Lscala/Predef$;
   #75 = Utf8               sha1
   #76 = Utf8               ()Ljava/lang/String;
   #77 = NameAndType        #75:#76       // sha1:()Ljava/lang/String;
   #78 = Methodref          #14.#77       // coursier/internal/FetchCache$Key.sha1:()Ljava/lang/String;
   #79 = Utf8               augmentString
   #80 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #81 = NameAndType        #79:#80       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #82 = Methodref          #71.#81       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #83 = Utf8               take$extension
   #84 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
   #85 = NameAndType        #83:#84       // take$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #86 = Methodref          #66.#85       // scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #87 = Utf8               append
   #88 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #89 = NameAndType        #87:#88       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #90 = Methodref          #59.#89       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #91 = Utf8               /
   #92 = String             #91           // /
   #93 = Utf8               drop$extension
   #94 = NameAndType        #93:#84       // drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #95 = Methodref          #66.#94       // scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #96 = Utf8               toString
   #97 = NameAndType        #96:#76       // toString:()Ljava/lang/String;
   #98 = Methodref          #59.#97       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #99 = Utf8               java/nio/file/Path
  #100 = Class              #99           // java/nio/file/Path
  #101 = Utf8               resolve
  #102 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;
  #103 = NameAndType        #101:#102     // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
  #104 = InterfaceMethodref #100.#103     // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
  #105 = Utf8               Lcoursier/internal/FetchCache$Key;
  #106 = Utf8               resultFile
  #107 = NameAndType        #53:#54       // dir:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
  #108 = Methodref          #2.#107       // coursier/internal/FetchCache.dir:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
  #109 = Utf8               artifacts
  #110 = String             #109          // artifacts
  #111 = Utf8               lockFile
  #112 = Utf8               lock
  #113 = String             #112          // lock
  #114 = Utf8               read
  #115 = Utf8               (Lcoursier/internal/FetchCache$Key;)Lscala/Option;
  #116 = Utf8               (Lcoursier/internal/FetchCache$Key;)Lscala/Option<Lscala/collection/immutable/Seq<Ljava/io/File;>;>;
  #117 = NameAndType        #106:#54      // resultFile:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
  #118 = Methodref          #2.#117       // coursier/internal/FetchCache.resultFile:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
  #119 = Utf8               java/nio/file/LinkOption
  #120 = Class              #119          // java/nio/file/LinkOption
  #121 = Utf8               java/nio/file/Files
  #122 = Class              #121          // java/nio/file/Files
  #123 = Utf8               isRegularFile
  #124 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #125 = NameAndType        #123:#124     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #126 = Methodref          #122.#125     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #127 = Utf8               java/lang/String
  #128 = Class              #127          // java/lang/String
  #129 = Utf8               readAllBytes
  #130 = Utf8               (Ljava/nio/file/Path;)[B
  #131 = NameAndType        #129:#130     // readAllBytes:(Ljava/nio/file/Path;)[B
  #132 = Methodref          #122.#131     // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
  #133 = Utf8               java/nio/charset/StandardCharsets
  #134 = Class              #133          // java/nio/charset/StandardCharsets
  #135 = Utf8               UTF_8
  #136 = Utf8               Ljava/nio/charset/Charset;
  #137 = NameAndType        #135:#136     // UTF_8:Ljava/nio/charset/Charset;
  #138 = Fieldref           #134.#137     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
  #139 = Utf8               ([BLjava/nio/charset/Charset;)V
  #140 = NameAndType        #61:#139      // "<init>":([BLjava/nio/charset/Charset;)V
  #141 = Methodref          #128.#140     // java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
  #142 = Utf8               linesIterator$extension
  #143 = Utf8               (Ljava/lang/String;)Lscala/collection/Iterator;
  #144 = NameAndType        #142:#143     // linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
  #145 = Methodref          #66.#144      // scala/collection/StringOps$.linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
  #146 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #147 = MethodType         #146          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #148 = Utf8               $anonfun$read$1
  #149 = NameAndType        #148:#80      // $anonfun$read$1:(Ljava/lang/String;)Ljava/lang/String;
  #150 = Methodref          #2.#149       // coursier/internal/FetchCache.$anonfun$read$1:(Ljava/lang/String;)Ljava/lang/String;
  #151 = MethodHandle       6:#150        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$1:(Ljava/lang/String;)Ljava/lang/String;
  #152 = MethodType         #80           //  (Ljava/lang/String;)Ljava/lang/String;
  #153 = Integer            5
  #154 = Utf8               java/lang/invoke/LambdaMetafactory
  #155 = Class              #154          // java/lang/invoke/LambdaMetafactory
  #156 = Utf8               altMetafactory
  #157 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #158 = NameAndType        #156:#157     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #159 = Methodref          #155.#158     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #160 = MethodHandle       6:#159        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #161 = Utf8               ()Lscala/Function1;
  #162 = NameAndType        #26:#161      // apply:()Lscala/Function1;
  #163 = InvokeDynamic      #0:#162       // #0:apply:()Lscala/Function1;
  #164 = Utf8               scala/collection/Iterator
  #165 = Class              #164          // scala/collection/Iterator
  #166 = Utf8               map
  #167 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #168 = NameAndType        #166:#167     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #169 = InterfaceMethodref #165.#168     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #170 = Utf8               $anonfun$read$2$adapted
  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #172 = NameAndType        #170:#171     // $anonfun$read$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #173 = Methodref          #2.#172       // coursier/internal/FetchCache.$anonfun$read$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #174 = MethodHandle       6:#173        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #175 = MethodType         #171          //  (Ljava/lang/String;)Ljava/lang/Object;
  #176 = InvokeDynamic      #1:#162       // #1:apply:()Lscala/Function1;
  #177 = Utf8               filter
  #178 = NameAndType        #177:#167     // filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #179 = InterfaceMethodref #165.#178     // scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #180 = Utf8               $anonfun$read$3
  #181 = NameAndType        #180:#102     // $anonfun$read$3:(Ljava/lang/String;)Ljava/nio/file/Path;
  #182 = Methodref          #2.#181       // coursier/internal/FetchCache.$anonfun$read$3:(Ljava/lang/String;)Ljava/nio/file/Path;
  #183 = MethodHandle       6:#182        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$3:(Ljava/lang/String;)Ljava/nio/file/Path;
  #184 = MethodType         #102          //  (Ljava/lang/String;)Ljava/nio/file/Path;
  #185 = InvokeDynamic      #2:#162       // #2:apply:()Lscala/Function1;
  #186 = Utf8               toVector
  #187 = Utf8               ()Lscala/collection/immutable/Vector;
  #188 = NameAndType        #186:#187     // toVector:()Lscala/collection/immutable/Vector;
  #189 = InterfaceMethodref #165.#188     // scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
  #190 = Utf8               $anonfun$read$4$adapted
  #191 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/Object;
  #192 = NameAndType        #190:#191     // $anonfun$read$4$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
  #193 = Methodref          #2.#192       // coursier/internal/FetchCache.$anonfun$read$4$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
  #194 = MethodHandle       6:#193        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$4$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
  #195 = MethodType         #191          //  (Ljava/nio/file/Path;)Ljava/lang/Object;
  #196 = InvokeDynamic      #3:#162       // #3:apply:()Lscala/Function1;
  #197 = Utf8               scala/collection/immutable/Vector
  #198 = Class              #197          // scala/collection/immutable/Vector
  #199 = Utf8               forall
  #200 = Utf8               (Lscala/Function1;)Z
  #201 = NameAndType        #199:#200     // forall:(Lscala/Function1;)Z
  #202 = Methodref          #198.#201     // scala/collection/immutable/Vector.forall:(Lscala/Function1;)Z
  #203 = Utf8               scala/Some
  #204 = Class              #203          // scala/Some
  #205 = Utf8               $anonfun$read$5
  #206 = Utf8               (Ljava/nio/file/Path;)Ljava/io/File;
  #207 = NameAndType        #205:#206     // $anonfun$read$5:(Ljava/nio/file/Path;)Ljava/io/File;
  #208 = Methodref          #2.#207       // coursier/internal/FetchCache.$anonfun$read$5:(Ljava/nio/file/Path;)Ljava/io/File;
  #209 = MethodHandle       6:#208        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$5:(Ljava/nio/file/Path;)Ljava/io/File;
  #210 = MethodType         #206          //  (Ljava/nio/file/Path;)Ljava/io/File;
  #211 = InvokeDynamic      #4:#162       // #4:apply:()Lscala/Function1;
  #212 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #213 = NameAndType        #166:#212     // map:(Lscala/Function1;)Ljava/lang/Object;
  #214 = Methodref          #198.#213     // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
  #215 = Utf8               (Ljava/lang/Object;)V
  #216 = NameAndType        #61:#215      // "<init>":(Ljava/lang/Object;)V
  #217 = Methodref          #204.#216     // scala/Some."<init>":(Ljava/lang/Object;)V
  #218 = Utf8               scala/None$
  #219 = Class              #218          // scala/None$
  #220 = Utf8               Lscala/None$;
  #221 = NameAndType        #30:#220      // MODULE$:Lscala/None$;
  #222 = Fieldref           #219.#221     // scala/None$.MODULE$:Lscala/None$;
  #223 = Utf8               scala/Option
  #224 = Class              #223          // scala/Option
  #225 = Utf8               Lscala/collection/immutable/Vector;
  #226 = Utf8               resultFile0
  #227 = Utf8               write
  #228 = Utf8               (Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Z
  #229 = Utf8               (Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq<Ljava/io/File;>;)Z
  #230 = Utf8               toFile
  #231 = Utf8               ()Ljava/io/File;
  #232 = NameAndType        #230:#231     // toFile:()Ljava/io/File;
  #233 = InterfaceMethodref #100.#232     // java/nio/file/Path.toFile:()Ljava/io/File;
  #234 = Utf8               coursier/paths/CachePath
  #235 = Class              #234          // coursier/paths/CachePath
  #236 = Utf8               temporaryFile
  #237 = Utf8               (Ljava/io/File;)Ljava/io/File;
  #238 = NameAndType        #236:#237     // temporaryFile:(Ljava/io/File;)Ljava/io/File;
  #239 = Methodref          #235.#238     // coursier/paths/CachePath.temporaryFile:(Ljava/io/File;)Ljava/io/File;
  #240 = Utf8               java/io/File
  #241 = Class              #240          // java/io/File
  #242 = Utf8               toPath
  #243 = NameAndType        #242:#50      // toPath:()Ljava/nio/file/Path;
  #244 = Methodref          #241.#243     // java/io/File.toPath:()Ljava/nio/file/Path;
  #245 = Utf8               coursier/cache/CacheLocks$
  #246 = Class              #245          // coursier/cache/CacheLocks$
  #247 = Utf8               Lcoursier/cache/CacheLocks$;
  #248 = NameAndType        #30:#247      // MODULE$:Lcoursier/cache/CacheLocks$;
  #249 = Fieldref           #246.#248     // coursier/cache/CacheLocks$.MODULE$:Lcoursier/cache/CacheLocks$;
  #250 = Utf8               ()Z
  #251 = MethodType         #250          //  ()Z
  #252 = Utf8               $anonfun$write$2
  #253 = Utf8               (Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Z
  #254 = NameAndType        #252:#253     // $anonfun$write$2:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Z
  #255 = Methodref          #2.#254       // coursier/internal/FetchCache.$anonfun$write$2:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Z
  #256 = MethodHandle       6:#255        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$2:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Z
  #257 = Utf8               apply$mcZ$sp
  #258 = Utf8               (Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Lscala/runtime/java8/JFunction0$mcZ$sp;
  #259 = NameAndType        #257:#258     // apply$mcZ$sp:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Lscala/runtime/java8/JFunction0$mcZ$sp;
  #260 = InvokeDynamic      #5:#259       // #5:apply$mcZ$sp:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Lscala/runtime/java8/JFunction0$mcZ$sp;
  #261 = Utf8               ()Ljava/lang/Object;
  #262 = MethodType         #261          //  ()Ljava/lang/Object;
  #263 = Utf8               $anonfun$write$3
  #264 = Utf8               ()Lscala/Some;
  #265 = NameAndType        #263:#264     // $anonfun$write$3:()Lscala/Some;
  #266 = Methodref          #2.#265       // coursier/internal/FetchCache.$anonfun$write$3:()Lscala/Some;
  #267 = MethodHandle       6:#266        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$3:()Lscala/Some;
  #268 = MethodType         #264          //  ()Lscala/Some;
  #269 = Utf8               ()Lscala/Function0;
  #270 = NameAndType        #26:#269      // apply:()Lscala/Function0;
  #271 = InvokeDynamic      #6:#270       // #6:apply:()Lscala/Function0;
  #272 = Utf8               withLockOr
  #273 = Utf8               (Ljava/io/File;Ljava/io/File;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
  #274 = NameAndType        #272:#273     // withLockOr:(Ljava/io/File;Ljava/io/File;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
  #275 = Methodref          #246.#274     // coursier/cache/CacheLocks$.withLockOr:(Ljava/io/File;Ljava/io/File;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
  #276 = Utf8               scala/runtime/BoxesRunTime
  #277 = Class              #276          // scala/runtime/BoxesRunTime
  #278 = Utf8               unboxToBoolean
  #279 = Utf8               (Ljava/lang/Object;)Z
  #280 = NameAndType        #278:#279     // unboxToBoolean:(Ljava/lang/Object;)Z
  #281 = Methodref          #277.#280     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #282 = Utf8               tmpFile
  #283 = Utf8               Lscala/collection/immutable/Seq;
  #284 = Utf8               withBase
  #285 = Utf8               (Ljava/nio/file/Path;)V
  #286 = NameAndType        #61:#285      // "<init>":(Ljava/nio/file/Path;)V
  #287 = Methodref          #2.#286       // coursier/internal/FetchCache."<init>":(Ljava/nio/file/Path;)V
  #288 = Utf8               FetchCache(
  #289 = String             #288          // FetchCache(
  #290 = Utf8               (Ljava/lang/String;)V
  #291 = NameAndType        #61:#290      // "<init>":(Ljava/lang/String;)V
  #292 = Methodref          #59.#291      // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #293 = Utf8               valueOf
  #294 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #295 = NameAndType        #293:#294     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #296 = Methodref          #128.#295     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #297 = Utf8               )
  #298 = String             #297          // )
  #299 = Utf8               b
  #300 = Utf8               Ljava/lang/StringBuilder;
  #301 = Utf8               canEqual
  #302 = Utf8               obj
  #303 = Utf8               Ljava/lang/Object;
  #304 = Utf8               equals
  #305 = NameAndType        #301:#279     // canEqual:(Ljava/lang/Object;)Z
  #306 = Methodref          #2.#305       // coursier/internal/FetchCache.canEqual:(Ljava/lang/Object;)Z
  #307 = NameAndType        #304:#279     // equals:(Ljava/lang/Object;)Z
  #308 = Methodref          #4.#307       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #309 = Utf8               other
  #310 = Utf8               hashCode
  #311 = Utf8               ()I
  #312 = Utf8               FetchCache
  #313 = String             #312          // FetchCache
  #314 = Utf8               scala/runtime/Statics
  #315 = Class              #314          // scala/runtime/Statics
  #316 = Utf8               anyHash
  #317 = Utf8               (Ljava/lang/Object;)I
  #318 = NameAndType        #316:#317     // anyHash:(Ljava/lang/Object;)I
  #319 = Methodref          #315.#318     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #320 = Utf8               code
  #321 = Utf8               I
  #322 = Utf8               tuple
  #323 = Utf8               ()Lscala/Tuple1;
  #324 = Utf8               ()Lscala/Tuple1<Ljava/nio/file/Path;>;
  #325 = Utf8               scala/Tuple1
  #326 = Class              #325          // scala/Tuple1
  #327 = Methodref          #326.#216     // scala/Tuple1."<init>":(Ljava/lang/Object;)V
  #328 = Utf8               productPrefix
  #329 = Utf8               productArity
  #330 = Utf8               productElement
  #331 = Utf8               (I)Ljava/lang/Object;
  #332 = Utf8               n
  #333 = Utf8               java/lang/IndexOutOfBoundsException
  #334 = Class              #333          // java/lang/IndexOutOfBoundsException
  #335 = Utf8               boxToInteger
  #336 = Utf8               (I)Ljava/lang/Integer;
  #337 = NameAndType        #335:#336     // boxToInteger:(I)Ljava/lang/Integer;
  #338 = Methodref          #277.#337     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #339 = Methodref          #4.#97        // java/lang/Object.toString:()Ljava/lang/String;
  #340 = Methodref          #334.#291     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #341 = Utf8               productElementName
  #342 = Utf8               (I)Ljava/lang/String;
  #343 = String             #24           // base
  #344 = Utf8               x$1
  #345 = Utf8               trim
  #346 = NameAndType        #345:#76      // trim:()Ljava/lang/String;
  #347 = Methodref          #128.#346     // java/lang/String.trim:()Ljava/lang/String;
  #348 = Utf8               Ljava/lang/String;
  #349 = Utf8               $anonfun$read$2
  #350 = Utf8               (Ljava/lang/String;)Z
  #351 = Utf8               x$2
  #352 = Utf8               nonEmpty$extension
  #353 = NameAndType        #352:#350     // nonEmpty$extension:(Ljava/lang/String;)Z
  #354 = Methodref          #66.#353      // scala/collection/StringOps$.nonEmpty$extension:(Ljava/lang/String;)Z
  #355 = Utf8               x$3
  #356 = Utf8               java/nio/file/Paths
  #357 = Class              #356          // java/nio/file/Paths
  #358 = Utf8               get
  #359 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #360 = NameAndType        #358:#359     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #361 = Methodref          #357.#360     // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #362 = Utf8               $anonfun$read$4
  #363 = Utf8               (Ljava/nio/file/Path;)Z
  #364 = Utf8               x$4
  #365 = Utf8               x$5
  #366 = Utf8               $anonfun$write$1
  #367 = Utf8               (Ljava/io/File;)Ljava/lang/String;
  #368 = Utf8               x$6
  #369 = Utf8               getAbsolutePath
  #370 = NameAndType        #369:#76      // getAbsolutePath:()Ljava/lang/String;
  #371 = Methodref          #241.#370     // java/io/File.getAbsolutePath:()Ljava/lang/String;
  #372 = Utf8               Ljava/io/File;
  #373 = Utf8               doWrite$1
  #374 = Utf8               (Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)V
  #375 = Utf8               tmpFile$1
  #376 = Utf8               artifacts$1
  #377 = Utf8               resultFile0$1
  #378 = NameAndType        #366:#367     // $anonfun$write$1:(Ljava/io/File;)Ljava/lang/String;
  #379 = Methodref          #2.#378       // coursier/internal/FetchCache.$anonfun$write$1:(Ljava/io/File;)Ljava/lang/String;
  #380 = MethodHandle       6:#379        // REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$1:(Ljava/io/File;)Ljava/lang/String;
  #381 = MethodType         #367          //  (Ljava/io/File;)Ljava/lang/String;
  #382 = InvokeDynamic      #7:#162       // #7:apply:()Lscala/Function1;
  #383 = Utf8               scala/collection/immutable/Seq
  #384 = Class              #383          // scala/collection/immutable/Seq
  #385 = InterfaceMethodref #384.#213     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #386 = Utf8               scala/collection/IterableOnceOps
  #387 = Class              #386          // scala/collection/IterableOnceOps
  #388 = Utf8               \n
  #389 = String             #388          // \n
  #390 = Utf8               mkString
  #391 = NameAndType        #390:#80      // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #392 = InterfaceMethodref #387.#391     // scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #393 = Utf8               getBytes
  #394 = Utf8               (Ljava/nio/charset/Charset;)[B
  #395 = NameAndType        #393:#394     // getBytes:(Ljava/nio/charset/Charset;)[B
  #396 = Methodref          #128.#395     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
  #397 = Utf8               java/nio/file/OpenOption
  #398 = Class              #397          // java/nio/file/OpenOption
  #399 = Utf8               (Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
  #400 = NameAndType        #227:#399     // write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
  #401 = Methodref          #122.#400     // java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
  #402 = Utf8               java/nio/file/CopyOption
  #403 = Class              #402          // java/nio/file/CopyOption
  #404 = Utf8               java/nio/file/StandardCopyOption
  #405 = Class              #404          // java/nio/file/StandardCopyOption
  #406 = Utf8               ATOMIC_MOVE
  #407 = Utf8               Ljava/nio/file/StandardCopyOption;
  #408 = NameAndType        #406:#407     // ATOMIC_MOVE:Ljava/nio/file/StandardCopyOption;
  #409 = Fieldref           #405.#408     // java/nio/file/StandardCopyOption.ATOMIC_MOVE:Ljava/nio/file/StandardCopyOption;
  #410 = Utf8               move
  #411 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #412 = NameAndType        #410:#411     // move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #413 = Methodref          #122.#412     // java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #414 = NameAndType        #373:#374     // doWrite$1:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)V
  #415 = Methodref          #2.#414       // coursier/internal/FetchCache.doWrite$1:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)V
  #416 = Utf8               boxToBoolean
  #417 = Utf8               (Z)Ljava/lang/Boolean;
  #418 = NameAndType        #416:#417     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #419 = Methodref          #277.#418     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #420 = Utf8               ()V
  #421 = NameAndType        #61:#420      // "<init>":()V
  #422 = Methodref          #4.#421       // java/lang/Object."<init>":()V
  #423 = Utf8               $init$
  #424 = Utf8               (Lscala/Product;)V
  #425 = NameAndType        #423:#424     // $init$:(Lscala/Product;)V
  #426 = InterfaceMethodref #6.#425       // scala/Product.$init$:(Lscala/Product;)V
  #427 = NameAndType        #349:#350     // $anonfun$read$2:(Ljava/lang/String;)Z
  #428 = Methodref          #2.#427       // coursier/internal/FetchCache.$anonfun$read$2:(Ljava/lang/String;)Z
  #429 = NameAndType        #362:#363     // $anonfun$read$4:(Ljava/nio/file/Path;)Z
  #430 = Methodref          #2.#429       // coursier/internal/FetchCache.$anonfun$read$4:(Ljava/nio/file/Path;)Z
  #431 = Utf8               $deserializeLambda$
  #432 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #433 = Utf8               scala/runtime/LambdaDeserialize
  #434 = Class              #433          // scala/runtime/LambdaDeserialize
  #435 = Utf8               bootstrap
  #436 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #437 = NameAndType        #435:#436     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #438 = Methodref          #434.#437     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #439 = MethodHandle       6:#438        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #440 = Utf8               lambdaDeserialize
  #441 = NameAndType        #440:#432     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #442 = InvokeDynamic      #8:#441       // #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #443 = Utf8               Code
  #444 = Utf8               MethodParameters
  #445 = Utf8               LineNumberTable
  #446 = Utf8               LocalVariableTable
  #447 = Utf8               Signature
  #448 = Utf8               StackMapTable
  #449 = Utf8               InnerClasses
  #450 = Utf8               SourceFile
  #451 = Utf8               RuntimeVisibleAnnotations
  #452 = Utf8               BootstrapMethods
  #453 = Utf8               ScalaInlineInfo
  #454 = Utf8               ScalaSig
{
  private final java.nio.file.Path base;
    descriptor: Ljava/nio/file/Path;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static coursier.internal.FetchCache apply(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #33                 // Field coursier/internal/FetchCache$.MODULE$:Lcoursier/internal/FetchCache$;
         3: aload_0
         4: invokevirtual #35                 // Method coursier/internal/FetchCache$.apply:(Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
         7: areturn
    MethodParameters:
      Name                           Flags
      base                           final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #42                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/FetchCache;
    Signature: #38                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #49                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/FetchCache;
    Signature: #46                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.nio.file.Path base();
    descriptor: ()Ljava/nio/file/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #52                 // Field base:Ljava/nio/file/Path;
         4: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/FetchCache;

  public java.nio.file.Path dir(coursier.internal.FetchCache$Key);
    descriptor: (Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
         4: new           #59                 // class java/lang/StringBuilder
         7: dup
         8: ldc           #60                 // int 1
        10: invokespecial #64                 // Method java/lang/StringBuilder."<init>":(I)V
        13: getstatic     #69                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        16: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        19: aload_1
        20: invokevirtual #78                 // Method coursier/internal/FetchCache$Key.sha1:()Ljava/lang/String;
        23: invokevirtual #82                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        26: iconst_2
        27: invokevirtual #86                 // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        30: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: ldc           #92                 // String /
        35: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: getstatic     #69                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        41: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        44: aload_1
        45: invokevirtual #78                 // Method coursier/internal/FetchCache$Key.sha1:()Ljava/lang/String;
        48: invokevirtual #82                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        51: iconst_2
        52: invokevirtual #95                 // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        55: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        61: invokeinterface #104,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
        66: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      67     0  this   Lcoursier/internal/FetchCache;
            0      67     1   key   Lcoursier/internal/FetchCache$Key;
    MethodParameters:
      Name                           Flags
      key                            final

  public java.nio.file.Path resultFile(coursier.internal.FetchCache$Key);
    descriptor: (Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #108                // Method dir:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
         5: ldc           #110                // String artifacts
         7: invokeinterface #104,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
        12: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/internal/FetchCache;
            0      13     1   key   Lcoursier/internal/FetchCache$Key;
    MethodParameters:
      Name                           Flags
      key                            final

  public java.nio.file.Path lockFile(coursier.internal.FetchCache$Key);
    descriptor: (Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #108                // Method dir:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
         5: ldc           #113                // String lock
         7: invokeinterface #104,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
        12: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/internal/FetchCache;
            0      13     1   key   Lcoursier/internal/FetchCache$Key;
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.Option<scala.collection.immutable.Seq<java.io.File>> read(coursier.internal.FetchCache$Key);
    descriptor: (Lcoursier/internal/FetchCache$Key;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #118                // Method resultFile:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
         5: astore_2
         6: aload_2
         7: iconst_0
         8: anewarray     #120                // class java/nio/file/LinkOption
        11: invokestatic  #126                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        14: ifeq          116
        17: getstatic     #69                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        20: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        23: new           #128                // class java/lang/String
        26: dup
        27: aload_2
        28: invokestatic  #132                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
        31: getstatic     #138                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
        34: invokespecial #141                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
        37: invokevirtual #82                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        40: invokevirtual #145                // Method scala/collection/StringOps$.linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
        43: invokedynamic #163,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        48: invokeinterface #169,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        53: invokedynamic #176,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        58: invokeinterface #179,  2          // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
        63: invokedynamic #185,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        68: invokeinterface #169,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        73: invokeinterface #189,  1          // InterfaceMethod scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
        78: astore_3
        79: aload_3
        80: invokedynamic #196,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        85: invokevirtual #202                // Method scala/collection/immutable/Vector.forall:(Lscala/Function1;)Z
        88: ifeq          110
        91: new           #204                // class scala/Some
        94: dup
        95: aload_3
        96: invokedynamic #211,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       101: invokevirtual #214                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
       104: invokespecial #217                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       107: goto          113
       110: getstatic     #222                // Field scala/None$.MODULE$:Lscala/None$;
       113: goto          119
       116: getstatic     #222                // Field scala/None$.MODULE$:Lscala/None$;
       119: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 110
          locals = [ class java/nio/file/Path, class scala/collection/immutable/Vector ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 25: 0
        line 26: 6
        line 29: 17
        line 27: 20
        line 29: 43
        line 30: 53
        line 31: 63
        line 34: 79
        line 35: 91
        line 37: 110
        line 39: 116
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           79      34     3 artifacts   Lscala/collection/immutable/Vector;
            6     113     2 resultFile0   Ljava/nio/file/Path;
            0     120     0  this   Lcoursier/internal/FetchCache;
            0     120     1   key   Lcoursier/internal/FetchCache$Key;
    Signature: #116                         // (Lcoursier/internal/FetchCache$Key;)Lscala/Option<Lscala/collection/immutable/Seq<Ljava/io/File;>;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public boolean write(coursier.internal.FetchCache$Key, scala.collection.immutable.Seq<java.io.File>);
    descriptor: (Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #118                // Method resultFile:(Lcoursier/internal/FetchCache$Key;)Ljava/nio/file/Path;
         5: astore_3
         6: aload_3
         7: invokeinterface #233,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
        12: invokestatic  #239                // Method coursier/paths/CachePath.temporaryFile:(Ljava/io/File;)Ljava/io/File;
        15: invokevirtual #244                // Method java/io/File.toPath:()Ljava/nio/file/Path;
        18: astore        4
        20: getstatic     #249                // Field coursier/cache/CacheLocks$.MODULE$:Lcoursier/cache/CacheLocks$;
        23: aload_0
        24: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
        27: invokeinterface #233,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
        32: aload_3
        33: invokeinterface #233,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
        38: aload         4
        40: aload_2
        41: aload_3
        42: invokedynamic #260,  0            // InvokeDynamic #5:apply$mcZ$sp:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Lscala/runtime/java8/JFunction0$mcZ$sp;
        47: invokedynamic #271,  0            // InvokeDynamic #6:apply:()Lscala/Function0;
        52: invokevirtual #275                // Method coursier/cache/CacheLocks$.withLockOr:(Ljava/io/File;Ljava/io/File;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
        55: invokestatic  #281                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        58: ireturn
      LineNumberTable:
        line 43: 0
        line 44: 6
        line 51: 20
        line 52: 23
        line 53: 32
        line 55: 38
        line 56: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      52     3 resultFile0   Ljava/nio/file/Path;
           20      38     4 tmpFile   Ljava/nio/file/Path;
            0      59     0  this   Lcoursier/internal/FetchCache;
            0      59     1   key   Lcoursier/internal/FetchCache$Key;
            0      59     2 artifacts   Lscala/collection/immutable/Seq;
    Signature: #229                         // (Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq<Ljava/io/File;>;)Z
    MethodParameters:
      Name                           Flags
      key                            final
      artifacts                      final

  public coursier.internal.FetchCache withBase(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/internal/FetchCache
         3: dup
         4: aload_1
         5: invokespecial #287                // Method "<init>":(Ljava/nio/file/Path;)V
         8: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/internal/FetchCache;
            0       9     1  base   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      base                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #59                 // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #289                // String FetchCache(
         7: invokespecial #292                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
        16: invokestatic  #296                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #298                // String )
        27: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      24     1     b   Ljava/lang/StringBuilder;
            0      36     0  this   Lcoursier/internal/FetchCache;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/internal/FetchCache
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/internal/FetchCache;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     58
         5: aload_0
         6: aload_1
         7: invokevirtual #306                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          62
        13: aload_1
        14: checkcast     #2                  // class coursier/internal/FetchCache
        17: astore_2
        18: iconst_1
        19: ifeq          54
        22: aload_0
        23: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
        26: aload_2
        27: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          54
        43: aload_3
        44: invokevirtual #308                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/internal/FetchCache, class java/lang/Object, class coursier/internal/FetchCache, class java/nio/file/Path ]
          stack = [ class java/nio/file/Path ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      37     2 other   Lcoursier/internal/FetchCache;
            0      64     0  this   Lcoursier/internal/FetchCache;
            0      64     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #313                // String FetchCache
         5: invokestatic  #319                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
        18: invokestatic  #319                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: ireturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      17     1  code   I
            0      28     0  this   Lcoursier/internal/FetchCache;

  private scala.Tuple1<java.nio.file.Path> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #326                // class scala/Tuple1
         3: dup
         4: aload_0
         5: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
         8: invokespecial #327                // Method scala/Tuple1."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/internal/FetchCache;
    Signature: #324                         // ()Lscala/Tuple1<Ljava/nio/file/Path;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #313                // String FetchCache
         3: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/internal/FetchCache;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/internal/FetchCache;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #57                 // Method base:()Ljava/nio/file/Path;
        24: goto          42
        27: new           #334                // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_2
        32: invokestatic  #338                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #339                // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #340                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/nio/file/Path ]
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/internal/FetchCache;
            0      43     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #343                // String base
        23: goto          41
        26: new           #334                // class java/lang/IndexOutOfBoundsException
        29: dup
        30: iload_2
        31: invokestatic  #338                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        34: invokevirtual #339                // Method java/lang/Object.toString:()Ljava/lang/String;
        37: invokespecial #340                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/internal/FetchCache;
            0      42     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final java.lang.String $anonfun$read$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #347                // Method java/lang/String.trim:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final boolean $anonfun$read$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #69                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #82                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #354                // Method scala/collection/StringOps$.nonEmpty$extension:(Ljava/lang/String;)Z
        13: ireturn
      LineNumberTable:
        line 30: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.nio.file.Path $anonfun$read$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/nio/file/Path;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: anewarray     #128                // class java/lang/String
         5: invokestatic  #361                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
         8: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final boolean $anonfun$read$4(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: anewarray     #120                // class java/nio/file/LinkOption
         5: invokestatic  #126                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
         8: ireturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$4   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final java.io.File $anonfun$read$5(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/io/File;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #233,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
         6: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0   x$5   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.String $anonfun$write$1(java.io.File);
    descriptor: (Ljava/io/File;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #371                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      x$6                            final

  private static final void doWrite$1(java.nio.file.Path, scala.collection.immutable.Seq, java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokedynamic #382,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
         7: invokeinterface #385,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        12: checkcast     #387                // class scala/collection/IterableOnceOps
        15: ldc_w         #389                // String \n
        18: invokeinterface #392,  2          // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
        23: getstatic     #138                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
        26: invokevirtual #396                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
        29: iconst_0
        30: anewarray     #398                // class java/nio/file/OpenOption
        33: invokestatic  #401                // Method java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
        36: pop
        37: aload_0
        38: aload_2
        39: iconst_1
        40: anewarray     #403                // class java/nio/file/CopyOption
        43: dup
        44: iconst_0
        45: getstatic     #409                // Field java/nio/file/StandardCopyOption.ATOMIC_MOVE:Ljava/nio/file/StandardCopyOption;
        48: aastore
        49: invokestatic  #413                // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
        52: pop
        53: return
      LineNumberTable:
        line 47: 0
        line 48: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 tmpFile$1   Ljava/nio/file/Path;
            0      54     1 artifacts$1   Lscala/collection/immutable/Seq;
            0      54     2 resultFile0$1   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      tmpFile$1                      final
      artifacts$1                    final
      resultFile0$1                  final

  public static final boolean $anonfun$write$2(java.nio.file.Path, scala.collection.immutable.Seq, java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #415                // Method doWrite$1:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)V
         6: iconst_1
         7: ireturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 tmpFile$1   Ljava/nio/file/Path;
            0       8     1 artifacts$1   Lscala/collection/immutable/Seq;
            0       8     2 resultFile0$1   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      tmpFile$1                      final
      artifacts$1                    final
      resultFile0$1                  final

  public static final scala.Some $anonfun$write$3();
    descriptor: ()Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #204                // class scala/Some
         3: dup
         4: iconst_0
         5: invokestatic  #419                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: invokespecial #217                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 56: 0

  public coursier.internal.FetchCache(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #52                 // Field base:Ljava/nio/file/Path;
         5: aload_0
         6: invokespecial #422                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #426                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LineNumberTable:
        line 15: 0
        line 62: 5
        line 15: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/internal/FetchCache;
            0      14     1  base   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      base                           final

  public static final java.lang.Object $anonfun$read$2$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #428                // Method $anonfun$read$2:(Ljava/lang/String;)Z
         4: invokestatic  #419                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.lang.Object $anonfun$read$4$adapted(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #430                // Method $anonfun$read$4:(Ljava/nio/file/Path;)Z
         4: invokestatic  #419                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$4   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$4                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #442,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #14 of #2;     // Key=class coursier/internal/FetchCache$Key of class coursier/internal/FetchCache
  public static #18= #17 of #2;           // =class coursier/internal/FetchCache$Key$ of class coursier/internal/FetchCache
  public static final #23= #20 of #22;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "FetchCache.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\rMb\u0001\u0002(P\u0005QC\u0001B\u001b\u0001\u0003\u0006\u0004%\ta\u001b\u0005\tm\u0002\u0011\t\u0011)A\u0005Y\")q\u000f\u0001C\u0001q\")A\u0010\u0001C\u0001{\"9!\u0011\u001e\u0001\u0005\u0002\t-\bb\u0002Bx\u0001\u0011\u0005!\u0011\u001f\u0005\b\u0005k\u0004A\u0011\u0001B|\u0011\u001d\u0019)\u0001\u0001C\u0001\u0007\u000fAqaa\u0004\u0001\t\u0003\u0019\t\u0002C\u0004\u0003\u0014\u0002!\tE!&\t\u000f\t\r\u0005\u0001\"\u0011\u0004\u0016!9!q\u0013\u0001\u0005B\rm\u0001b\u0002BH\u0001\u0011\u0005#\u0011\u0013\u0005\b\u0007?\u0001A\u0011BB\u0011\u0011\u001d\u0011i\u0005\u0001C!\u0005\u001fBqAa\u0017\u0001\t\u0003\u0012i\u0006C\u0004\u0003f\u0001!\te!\u000b\t\u000f\t%\u0005\u0001\"\u0011\u00040\u001d9\u0011QA(\t\u0002\u0005\u001daA\u0002(P\u0011\u0003\tI\u0001\u0003\u0004x)\u0011\u0005\u0011Q\u0003\u0004\b\u0003/!\")UA\r\u0011)\tYB\u0006BK\u0002\u0013\u0005\u0011Q\u0004\u0005\u000b\u0003c1\"\u0011#Q\u0001\n\u0005}\u0001BCA\u001a-\tU\r\u0011\"\u0001\u00026!Q\u0011q\b\f\u0003\u0012\u0003\u0006I!a\u000e\t\u0015\u0005\u0005cC!f\u0001\n\u0003\t\u0019\u0005\u0003\u0006\u0002RY\u0011\t\u0012)A\u0005\u0003\u000bB!\"a\u0015\u0017\u0005+\u0007I\u0011AA+\u0011)\t)H\u0006B\tB\u0003%\u0011q\u000b\u0005\u000b\u0003o2\"Q3A\u0005\u0002\u0005e\u0004BCA@-\tE\t\u0015!\u0003\u0002|!Q\u0011\u0011\u0011\f\u0003\u0016\u0004%\t!!\u001f\t\u0015\u0005\reC!E!\u0002\u0013\tY\b\u0003\u0006\u0002\u0006Z\u0011)\u001a!C\u0001\u0003\u000fC!\"a#\u0017\u0005#\u0005\u000b\u0011BAE\u0011)\tiI\u0006BK\u0002\u0013\u0005\u0011q\u0012\u0005\u000b\u0003#3\"\u0011#Q\u0001\n\u0005\u0015\u0004BCAJ-\tU\r\u0011\"\u0001\u0002\u0016\"Q\u0011q\u0014\f\u0003\u0012\u0003\u0006I!a&\t\u0015\u0005\u0005fC!f\u0001\n\u0003\t\u0019\u000b\u0003\u0006\u00022Z\u0011\t\u0012)A\u0005\u0003KC!\"a-\u0017\u0005+\u0007I\u0011AA[\u0011)\t\tM\u0006B\tB\u0003%\u0011q\u0017\u0005\u0007oZ!\t!a1\t\u0015\u0005}g\u0003#b\u0001\n\u0003\ty\t\u0003\u0006\u0002bZA)\u0019!C\u0001\u0003\u001fC\u0011\"a9\u0017\u0003\u0003%\t!!:\t\u0013\u0005uh#%A\u0005\u0002\u0005}\b\"\u0003B\u000b-E\u0005I\u0011\u0001B\f\u0011%\u0011YBFI\u0001\n\u0003\u0011i\u0002C\u0005\u0003\"Y\t\n\u0011\"\u0001\u0003$!I!q\u0005\f\u0012\u0002\u0013\u0005!\u0011\u0006\u0005\n\u0005[1\u0012\u0013!C\u0001\u0005SA\u0011Ba\f\u0017#\u0003%\tA!\r\t\u0013\tUb#%A\u0005\u0002\t]\u0002\"\u0003B\u001e-E\u0005I\u0011\u0001B\u001f\u0011%\u0011\tEFI\u0001\n\u0003\u0011\u0019\u0005C\u0005\u0003HY\t\n\u0011\"\u0001\u0003J!I!Q\n\f\u0002\u0002\u0013\u0005#q\n\u0005\n\u000572\u0012\u0011!C\u0001\u0005;B\u0011B!\u001a\u0017\u0003\u0003%\tAa\u001a\t\u0013\tMd#!A\u0005B\tU\u0004\"\u0003BB-\u0005\u0005I\u0011\u0001BC\u0011%\u0011IIFA\u0001\n\u0003\u0012Y\tC\u0005\u0003\u0010Z\t\t\u0011\"\u0011\u0003\u0012\"I!1\u0013\f\u0002\u0002\u0013\u0005#Q\u0013\u0005\n\u0005/3\u0012\u0011!C!\u00053;!B!(\u0015\u0003\u0003E\t!\u0015BP\r)\t9\u0002FA\u0001\u0012\u0003\t&\u0011\u0015\u0005\u0007o\u001a#\tAa,\t\u0013\tMe)!A\u0005F\tU\u0005\"\u0003BY\r\u0006\u0005I\u0011\u0011BZ\u0011%\u0011YMRA\u0001\n\u0003\u0013i\rC\u0005\u0003\\\u001a\u000b\t\u0011\"\u0003\u0003^\"9!\u0011\u0017\u000b\u0005\u0002\t\u0015\b\"\u0003Bn)\u0005\u0005I\u0011\u0002Bo\u0005)1U\r^2i\u0007\u0006\u001c\u0007.\u001a\u0006\u0003!F\u000b\u0001\"\u001b8uKJt\u0017\r\u001c\u0006\u0002%\u0006A1m\\;sg&,\'o\u0001\u0001\u0014\t\u0001)6L\u0018\t\u0003-fk\u0011a\u0016\u0006\u00021\u0006)1oY1mC&\u0011!l\u0016\u0002\u0007\u0003:L(+\u001a4\u0011\u0005Yc\u0016BA/X\u0005\u001d\u0001&o\u001c3vGR\u0004\"aX4\u000f\u0005\u0001,gBA1e\u001b\u0005\u0011\'BA2T\u0003\u0019a$o\\8u}%\t\u0001,\u0003\u0002g/\u00069\u0001/Y2lC\u001e,\u0017B\u00015j\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\t1w+\u0001\u0003cCN,W#\u00017\u0011\u00055$X\"\u00018\u000b\u0005=\u0004\u0018\u0001\u00024jY\u0016T!!\u001d:\u0002\u00079LwNC\u0001t\u0003\u0011Q\u0017M^1\n\u0005Ut\'\u0001\u0002)bi\"\fQAY1tK\u0002\na\u0001P5oSRtDCA=|!\tQ\b!D\u0001P\u0011\u0015Q7\u00011\u0001m\u0003\r!\u0017N\u001d\u000b\u0003YzDaa \u0003A\u0002\u0005\u0005\u0011aA6fsB\u0019\u00111\u0001\f\u000f\u0005i\u001c\u0012A\u0003$fi\u000eD7)Y2iKB\u0011!\u0010F\n\u0005)U\u000bY\u0001\u0005\u0003\u0002\u000e\u0005MQBAA\b\u0015\r\t\tB]\u0001\u0003S>L1\u0001[A\b)\t\t9AA\u0002LKf\u001cBAF+\\=\u0006aA-\u001a9f]\u0012,gnY5fgV\u0011\u0011q\u0004\t\u0006?\u0006\u0005\u0012QE\u0005\u0004\u0003GI\'aA*fcB!\u0011qEA\u0017\u001b\t\tICC\u0002\u0002,E\u000bAaY8sK&!\u0011qFA\u0015\u0005)!U\r]3oI\u0016t7-_\u0001\u000eI\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u0011\u0002\u0019I,\u0007o\\:ji>\u0014\u0018.Z:\u0016\u0005\u0005]\u0002#B0\u0002\"\u0005e\u0002\u0003BA\u0014\u0003wIA!!\u0010\u0002*\tQ!+\u001a9pg&$xN]=\u0002\u001bI,\u0007o\\:ji>\u0014\u0018.Z:!\u0003A\u0011Xm]8mkRLwN\u001c)be\u0006l7/\u0006\u0002\u0002FA!\u0011qIA\'\u001b\t\tIEC\u0002\u0002LE\u000ba\u0001]1sC6\u001c\u0018\u0002BA(\u0003\u0013\u0012\u0001CU3t_2,H/[8o!\u0006\u0014\u0018-\\:\u0002#I,7o\u001c7vi&|g\u000eU1sC6\u001c\b%\u0001\u0007g_J\u001cWMV3sg&|g.\u0006\u0002\u0002XA)q,!\t\u0002ZA9a+a\u0017\u0002`\u0005\u0015\u0014bAA//\n1A+\u001e9mKJ\u0002B!a\n\u0002b%!\u00111MA\u0015\u0005\u0019iu\u000eZ;mKB!\u0011qMA8\u001d\u0011\tI\'a\u001b\u0011\u0005\u0005<\u0016bAA7/\u00061\u0001K]3eK\u001aLA!!\u001d\u0002t\t11\u000b\u001e:j]\u001eT1!!\u001cX\u000351wN]2f-\u0016\u00148/[8oA\u0005Q\u0001O]8qKJ$\u0018.Z:\u0016\u0005\u0005m\u0004#B0\u0002\"\u0005u\u0004c\u0002,\u0002\\\u0005\u0015\u0014QM\u0001\faJ|\u0007/\u001a:uS\u0016\u001c\b%\u0001\tg_J\u001cW\r\u001a)s_B,\'\u000f^5fg\u0006\tbm\u001c:dK\u0012\u0004&o\u001c9feRLWm\u001d\u0011\u0002\u0011A\u0014xNZ5mKN,\"!!#\u0011\u000b}\u000b\t#!\u001a\u0002\u0013A\u0014xNZ5mKN\u0004\u0013!D2bG\",Gj\\2bi&|g.\u0006\u0002\u0002f\u0005q1-Y2iK2{7-\u0019;j_:\u0004\u0013aC2mCN\u001c\u0018NZ5feN,\"!a&\u0011\u000b}\u000b\t#!\'\u0011\t\u0005\u001d\u00121T\u0005\u0005\u0003;\u000bIC\u0001\u0006DY\u0006\u001c8/\u001b4jKJ\fAb\u00197bgNLg-[3sg\u0002\nQ\"\\1j]\u0006\u0013H/\u001b4bGR\u001cXCAAS!\u00151\u0016qUAV\u0013\r\tIk\u0016\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0007Y\u000bi+C\u0002\u00020^\u0013qAQ8pY\u0016\fg.\u0001\bnC&t\u0017I\u001d;jM\u0006\u001cGo\u001d\u0011\u0002!\u0005\u0014H/\u001b4bGR$\u0016\u0010]3t\u001fB$XCAA\\!\u00151\u0016qUA]!\u0015y\u0016\u0011EA^!\u0011\t9#!0\n\t\u0005}\u0016\u0011\u0006\u0002\u0005)f\u0004X-A\tbeRLg-Y2u)f\u0004Xm](qi\u0002\"\u0002$!2\u0002J\u0006-\u0017QZAh\u0003#\f\u0019.!6\u0002X\u0006e\u00171\\Ao!\r\t9MF\u0007\u0002)!9\u00111D\u0017A\u0002\u0005}\u0001bBA\u001a[\u0001\u0007\u0011q\u0007\u0005\b\u0003\u0003j\u0003\u0019AA#\u0011\u001d\t\u0019&\fa\u0001\u0003/Bq!a\u001e.\u0001\u0004\tY\bC\u0004\u0002\u00026\u0002\r!a\u001f\t\u000f\u0005\u0015U\u00061\u0001\u0002\n\"9\u0011QR\u0017A\u0002\u0005\u0015\u0004bBAJ[\u0001\u0007\u0011q\u0013\u0005\b\u0003Ck\u0003\u0019AAS\u0011\u001d\t\u0019,\fa\u0001\u0003o\u000bAA]3qe\u0006!1\u000f[12\u0003\u0011\u0019w\u000e]=\u00151\u0005\u0015\u0017q]Au\u0003W\fi/a<\u0002r\u0006M\u0018Q_A|\u0003s\fY\u0010C\u0005\u0002\u001cA\u0002\n\u00111\u0001\u0002 !I\u00111\u0007\u0019\u0011\u0002\u0003\u0007\u0011q\u0007\u0005\n\u0003\u0003\u0002\u0004\u0013!a\u0001\u0003\u000bB\u0011\"a\u00151!\u0003\u0005\r!a\u0016\t\u0013\u0005]\u0004\u0007%AA\u0002\u0005m\u0004\"CAAaA\u0005\t\u0019AA>\u0011%\t)\t\rI\u0001\u0002\u0004\tI\tC\u0005\u0002\u000eB\u0002\n\u00111\u0001\u0002f!I\u00111\u0013\u0019\u0011\u0002\u0003\u0007\u0011q\u0013\u0005\n\u0003C\u0003\u0004\u0013!a\u0001\u0003KC\u0011\"a-1!\u0003\u0005\r!a.\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\u0011!\u0011\u0001\u0016\u0005\u0003?\u0011\u0019a\u000b\u0002\u0003\u0006A!!q\u0001B\t\u001b\t\u0011IA\u0003\u0003\u0003\f\t5\u0011!C;oG\",7m[3e\u0015\r\u0011yaV\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002\u0002B\n\u0005\u0013\u0011\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII*\"A!\u0007+\t\u0005]\"1A\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00134+\t\u0011yB\u000b\u0003\u0002F\t\r\u0011AD2paf$C-\u001a4bk2$H\u0005N\u000b\u0003\u0005KQC!a\u0016\u0003\u0004\u0005q1m\u001c9zI\u0011,g-Y;mi\u0012*TC\u0001B\u0016U\u0011\tYHa\u0001\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%m\u0005q1m\u001c9zI\u0011,g-Y;mi\u0012:TC\u0001B\u001aU\u0011\tIIa\u0001\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%qU\u0011!\u0011\b\u0016\u0005\u0003K\u0012\u0019!\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u001d\u0016\u0005\t}\"\u0006BAL\u0005\u0007\tqbY8qs\u0012\"WMZ1vYR$\u0013\u0007M\u000b\u0003\u0005\u000bRC!!*\u0003\u0004\u0005y1m\u001c9zI\u0011,g-Y;mi\u0012\n\u0014\'\u0006\u0002\u0003L)\"\u0011q\u0017B\u0002\u00035\u0001(o\u001c3vGR\u0004&/\u001a4jqV\u0011!\u0011\u000b\t\u0005\u0005\'\u0012I&\u0004\u0002\u0003V)\u0019!q\u000b:\u0002\t1\fgnZ\u0005\u0005\u0003c\u0012)&\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0006\u0002\u0003`A\u0019aK!\u0019\n\u0007\t\rtKA\u0002J]R\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0003\u0003j\t=\u0004c\u0001,\u0003l%\u0019!QN,\u0003\u0007\u0005s\u0017\u0010C\u0005\u0003ry\n\t\u00111\u0001\u0003`\u0005\u0019\u0001\u0010J\u0019\u0002\u001fA\u0014x\u000eZ;di&#XM]1u_J,\"Aa\u001e\u0011\r\te$q\u0010B5\u001b\t\u0011YHC\u0002\u0003~]\u000b!bY8mY\u0016\u001cG/[8o\u0013\u0011\u0011\tIa\u001f\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0005\u0003W\u00139\tC\u0005\u0003r\u0001\u000b\t\u00111\u0001\u0003j\u0005\u0011\u0002O]8ek\u000e$X\t\\3nK:$h*Y7f)\u0011\u0011\tF!$\t\u0013\tE\u0014)!AA\u0002\t}\u0013\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\t}\u0013\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\tE\u0013AB3rk\u0006d7\u000f\u0006\u0003\u0002,\nm\u0005\"\u0003B9\t\u0006\u0005\t\u0019\u0001B5\u0003\rYU-\u001f\t\u0004\u0003\u000f45#\u0002$\u0003$\u0006-\u0001\u0003\bBS\u0005W\u000by\"a\u000e\u0002F\u0005]\u00131PA>\u0003\u0013\u000b)\'a&\u0002&\u0006]\u0016QY\u0007\u0003\u0005OS1A!+X\u0003\u001d\u0011XO\u001c;j[\u0016LAA!,\u0003(\n\u0011\u0012IY:ue\u0006\u001cGOR;oGRLwN\\\u00192)\t\u0011y*A\u0003baBd\u0017\u0010\u0006\r\u0002F\nU&q\u0017B]\u0005w\u0013iLa0\u0003B\n\r\'Q\u0019Bd\u0005\u0013Dq!a\u0007J\u0001\u0004\ty\u0002C\u0004\u00024%\u0003\r!a\u000e\t\u000f\u0005\u0005\u0013\n1\u0001\u0002F!9\u00111K%A\u0002\u0005]\u0003bBA<\u0013\u0002\u0007\u00111\u0010\u0005\b\u0003\u0003K\u0005\u0019AA>\u0011\u001d\t))\u0013a\u0001\u0003\u0013Cq!!$J\u0001\u0004\t)\u0007C\u0004\u0002\u0014&\u0003\r!a&\t\u000f\u0005\u0005\u0016\n1\u0001\u0002&\"9\u00111W%A\u0002\u0005]\u0016aB;oCB\u0004H.\u001f\u000b\u0005\u0005\u001f\u00149\u000eE\u0003W\u0003O\u0013\t\u000eE\rW\u0005\'\fy\"a\u000e\u0002F\u0005]\u00131PA>\u0003\u0013\u000b)\'a&\u0002&\u0006]\u0016b\u0001Bk/\n9A+\u001e9mKF\n\u0004\"\u0003Bm\u0015\u0006\u0005\t\u0019AAc\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0005?\u0004BAa\u0015\u0003b&!!1\u001dB+\u0005\u0019y%M[3diR\u0019\u0011Pa:\t\u000b)d\u0005\u0019\u00017\u0002\u0015I,7/\u001e7u\r&dW\rF\u0002m\u0005[Daa`\u0003A\u0002\u0005\u0005\u0011\u0001\u00037pG.4\u0015\u000e\\3\u0015\u00071\u0014\u0019\u0010\u0003\u0004\u0000\r\u0001\u0007\u0011\u0011A\u0001\u0005e\u0016\fG\r\u0006\u0003\u0003z\u000e\r\u0001#\u0002,\u0002(\nm\b#B0\u0002\"\tu\b\u0003BA\u0007\u0005\u007fLAa!\u0001\u0002\u0010\t!a)\u001b7f\u0011\u0019yx\u00011\u0001\u0002\u0002\u0005)qO]5uKR1\u00111VB\u0005\u0007\u0017Aaa \u0005A\u0002\u0005\u0005\u0001bBB\u0007\u0011\u0001\u0007!1`\u0001\nCJ$\u0018NZ1diN\f\u0001b^5uQ\n\u000b7/\u001a\u000b\u0004s\u000eM\u0001\"\u00026\n\u0001\u0004aG\u0003BAV\u0007/Aqa!\u0007\f\u0001\u0004\u0011I\'A\u0002pE*$B!a+\u0004\u001e!91\u0011\u0004\u0007A\u0002\t%\u0014!\u0002;va2,WCAB\u0012!\u001116Q\u00057\n\u0007\r\u001drK\u0001\u0004UkBdW-\r\u000b\u0005\u0005S\u001aY\u0003C\u0004\u0004.E\u0001\rAa\u0018\u0002\u00039$BA!\u0015\u00042!91Q\u0006\nA\u0002\t}\u0003"
    )
BootstrapMethods:
  0: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #147 (Ljava/lang/Object;)Ljava/lang/Object;
      #151 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$1:(Ljava/lang/String;)Ljava/lang/String;
      #152 (Ljava/lang/String;)Ljava/lang/String;
      #153 5
      #60 1
      #152 (Ljava/lang/String;)Ljava/lang/String;
  1: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #147 (Ljava/lang/Object;)Ljava/lang/Object;
      #174 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #175 (Ljava/lang/String;)Ljava/lang/Object;
      #153 5
      #60 1
      #175 (Ljava/lang/String;)Ljava/lang/Object;
  2: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #147 (Ljava/lang/Object;)Ljava/lang/Object;
      #183 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$3:(Ljava/lang/String;)Ljava/nio/file/Path;
      #184 (Ljava/lang/String;)Ljava/nio/file/Path;
      #153 5
      #60 1
      #184 (Ljava/lang/String;)Ljava/nio/file/Path;
  3: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #147 (Ljava/lang/Object;)Ljava/lang/Object;
      #194 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$4$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
      #195 (Ljava/nio/file/Path;)Ljava/lang/Object;
      #153 5
      #60 1
      #195 (Ljava/nio/file/Path;)Ljava/lang/Object;
  4: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #147 (Ljava/lang/Object;)Ljava/lang/Object;
      #209 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$5:(Ljava/nio/file/Path;)Ljava/io/File;
      #210 (Ljava/nio/file/Path;)Ljava/io/File;
      #153 5
      #60 1
      #210 (Ljava/nio/file/Path;)Ljava/io/File;
  5: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #251 ()Z
      #256 REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$2:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Z
      #251 ()Z
      #60 1
  6: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #262 ()Ljava/lang/Object;
      #267 REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$3:()Lscala/Some;
      #268 ()Lscala/Some;
      #153 5
      #60 1
      #268 ()Lscala/Some;
  7: #160 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #147 (Ljava/lang/Object;)Ljava/lang/Object;
      #380 REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$1:(Ljava/io/File;)Ljava/lang/String;
      #381 (Ljava/io/File;)Ljava/lang/String;
      #153 5
      #60 1
      #381 (Ljava/io/File;)Ljava/lang/String;
  8: #439 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #151 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$1:(Ljava/lang/String;)Ljava/lang/String;
      #174 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #183 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$3:(Ljava/lang/String;)Ljava/nio/file/Path;
      #194 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$4$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
      #209 REF_invokeStatic coursier/internal/FetchCache.$anonfun$read$5:(Ljava/nio/file/Path;)Ljava/io/File;
      #380 REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$1:(Ljava/io/File;)Ljava/lang/String;
      #256 REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$2:(Ljava/nio/file/Path;Lscala/collection/immutable/Seq;Ljava/nio/file/Path;)Z
      #267 REF_invokeStatic coursier/internal/FetchCache.$anonfun$write$3:()Lscala/Some;
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 01 00 1E 00 94 00 50 01 01 5D 01 5E 01 00 AA
   00 AB 01 00 B4 00 66 01 01 6A 01 6B 01 00 BE 00
   BF 01 00 CD 00 CE 01 01 6E 01 6F 01 00 FC 00 FD
   01 01 07 01 08 01 00 3D 01 1D 01 00 18 00 32 01
   01 2D 01 17 01 00 35 00 36 01 01 75 01 76 01 01
   30 01 17 01 01 36 01 37 01 00 6F 00 36 01 01 49
   01 37 01 01 4A 01 4B 01 01 55 01 56 01 00 2D 00
   25 01 00 24 00 25 01 01 48 00 4C 01 00 72 00 73
   01 00 6A 00 36 01 00 60 00 4C 01 01 42 01 43 01
   01 1C 00 1B 01 00 E3 00 E4 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
