Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Os_Ext$$anon$5.class
  Last modified May 29, 2022; size 2986 bytes
  SHA-256 checksum 07adb27f539194860e4dba10436b0ae4b70104fb9c952c224eb7eab84dc350b6
  Compiled from "Os_Ext.scala"
public final class org.sireum.Os_Ext$$anon$5 extends com.zaxxer.nuprocess.NuAbstractProcessHandler
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Os_Ext$$anon$5
  super_class: #4                         // com/zaxxer/nuprocess/NuAbstractProcessHandler
  interfaces: 0, fields: 1, methods: 6, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/Os_Ext$$anon$5
    #2 = Class              #1            // org/sireum/Os_Ext$$anon$5
    #3 = Utf8               com/zaxxer/nuprocess/NuAbstractProcessHandler
    #4 = Class              #3            // com/zaxxer/nuprocess/NuAbstractProcessHandler
    #5 = Utf8               Os_Ext.scala
    #6 = Utf8               org/sireum/Os_Ext$
    #7 = Class              #6            // org/sireum/Os_Ext$
    #8 = Utf8               nuProcess$1
    #9 = Utf8               (Lorg/sireum/Os$Proc;)Lorg/sireum/Os$Proc$Result;
   #10 = NameAndType        #8:#9         // nuProcess$1:(Lorg/sireum/Os$Proc;)Lorg/sireum/Os$Proc$Result;
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               org/sireum/Os_Ext$ProcOutput
   #17 = Class              #16           // org/sireum/Os_Ext$ProcOutput
   #18 = Utf8               org/sireum/Os_Ext
   #19 = Class              #18           // org/sireum/Os_Ext
   #20 = Utf8               ProcOutput
   #21 = Utf8               po$2
   #22 = Utf8               Lorg/sireum/Os_Ext$ProcOutput;
   #23 = Utf8               append
   #24 = Utf8               (ZLjava/nio/ByteBuffer;)V
   #25 = Utf8               isOut
   #26 = Utf8               buffer
   #27 = Utf8               java/nio/ByteBuffer
   #28 = Class              #27           // java/nio/ByteBuffer
   #29 = Utf8               remaining
   #30 = Utf8               ()I
   #31 = NameAndType        #29:#30       // remaining:()I
   #32 = Methodref          #28.#31       // java/nio/ByteBuffer.remaining:()I
   #33 = Utf8               scala/runtime/RichInt$
   #34 = Class              #33           // scala/runtime/RichInt$
   #35 = Utf8               MODULE$
   #36 = Utf8               Lscala/runtime/RichInt$;
   #37 = NameAndType        #35:#36       // MODULE$:Lscala/runtime/RichInt$;
   #38 = Fieldref           #34.#37       // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
   #39 = Utf8               scala/Predef$
   #40 = Class              #39           // scala/Predef$
   #41 = Utf8               Lscala/Predef$;
   #42 = NameAndType        #35:#41       // MODULE$:Lscala/Predef$;
   #43 = Fieldref           #40.#42       // scala/Predef$.MODULE$:Lscala/Predef$;
   #44 = Utf8               intWrapper
   #45 = Utf8               (I)I
   #46 = NameAndType        #44:#45       // intWrapper:(I)I
   #47 = Methodref          #40.#46       // scala/Predef$.intWrapper:(I)I
   #48 = Utf8               until$extension
   #49 = Utf8               (II)Lscala/collection/immutable/Range;
   #50 = NameAndType        #48:#49       // until$extension:(II)Lscala/collection/immutable/Range;
   #51 = Methodref          #34.#50       // scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
   #52 = Utf8               (I)V
   #53 = MethodType         #52           //  (I)V
   #54 = Utf8               $anonfun$append$1
   #55 = Utf8               ([BLjava/nio/ByteBuffer;I)V
   #56 = NameAndType        #54:#55       // $anonfun$append$1:([BLjava/nio/ByteBuffer;I)V
   #57 = Methodref          #2.#56        // org/sireum/Os_Ext$$anon$5.$anonfun$append$1:([BLjava/nio/ByteBuffer;I)V
   #58 = MethodHandle       6:#57         // REF_invokeStatic org/sireum/Os_Ext$$anon$5.$anonfun$append$1:([BLjava/nio/ByteBuffer;I)V
   #59 = Integer            1
   #60 = Utf8               java/lang/invoke/LambdaMetafactory
   #61 = Class              #60           // java/lang/invoke/LambdaMetafactory
   #62 = Utf8               altMetafactory
   #63 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #64 = NameAndType        #62:#63       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #65 = Methodref          #61.#64       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #66 = MethodHandle       6:#65         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #67 = Utf8               apply$mcVI$sp
   #68 = Utf8               ([BLjava/nio/ByteBuffer;)Lscala/runtime/java8/JFunction1$mcVI$sp;
   #69 = NameAndType        #67:#68       // apply$mcVI$sp:([BLjava/nio/ByteBuffer;)Lscala/runtime/java8/JFunction1$mcVI$sp;
   #70 = InvokeDynamic      #0:#69        // #0:apply$mcVI$sp:([BLjava/nio/ByteBuffer;)Lscala/runtime/java8/JFunction1$mcVI$sp;
   #71 = Utf8               scala/collection/immutable/Range
   #72 = Class              #71           // scala/collection/immutable/Range
   #73 = Utf8               foreach$mVc$sp
   #74 = Utf8               (Lscala/Function1;)V
   #75 = NameAndType        #73:#74       // foreach$mVc$sp:(Lscala/Function1;)V
   #76 = Methodref          #72.#75       // scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
   #77 = Utf8               org/sireum/B$
   #78 = Class              #77           // org/sireum/B$
   #79 = Utf8               Lorg/sireum/B$;
   #80 = NameAndType        #35:#79       // MODULE$:Lorg/sireum/B$;
   #81 = Fieldref           #78.#80       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #82 = Utf8               $4B
   #83 = Utf8               (Z)Z
   #84 = NameAndType        #82:#83       // $4B:(Z)Z
   #85 = Methodref          #78.#84       // org/sireum/B$.$4B:(Z)Z
   #86 = NameAndType        #21:#22       // po$2:Lorg/sireum/Os_Ext$ProcOutput;
   #87 = Fieldref           #2.#86        // org/sireum/Os_Ext$$anon$5.po$2:Lorg/sireum/Os_Ext$ProcOutput;
   #88 = Utf8               org/sireum/package$
   #89 = Class              #88           // org/sireum/package$
   #90 = Utf8               Lorg/sireum/package$;
   #91 = NameAndType        #35:#90       // MODULE$:Lorg/sireum/package$;
   #92 = Fieldref           #89.#91       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #93 = Utf8               F
   #94 = Utf8               ()Z
   #95 = NameAndType        #93:#94       // F:()Z
   #96 = Methodref          #89.#95       // org/sireum/package$.F:()Z
   #97 = Utf8               f
   #98 = Utf8               (Z[BI)V
   #99 = NameAndType        #97:#98       // f:(Z[BI)V
  #100 = Methodref          #17.#99       // org/sireum/Os_Ext$ProcOutput.f:(Z[BI)V
  #101 = Utf8               T
  #102 = NameAndType        #101:#94      // T:()Z
  #103 = Methodref          #89.#102      // org/sireum/package$.T:()Z
  #104 = Utf8               size
  #105 = Utf8               I
  #106 = Utf8               bytes
  #107 = Utf8               [B
  #108 = Utf8               this
  #109 = Utf8               Lorg/sireum/Os_Ext$$anon$5;
  #110 = Utf8               Z
  #111 = Utf8               Ljava/nio/ByteBuffer;
  #112 = Class              #107          // "[B"
  #113 = Utf8               onStderr
  #114 = Utf8               (Ljava/nio/ByteBuffer;Z)V
  #115 = Utf8               closed
  #116 = NameAndType        #23:#24       // append:(ZLjava/nio/ByteBuffer;)V
  #117 = Methodref          #2.#116       // org/sireum/Os_Ext$$anon$5.append:(ZLjava/nio/ByteBuffer;)V
  #118 = Utf8               onStdout
  #119 = Utf8               bytes$1
  #120 = Utf8               buffer$2
  #121 = Utf8               i
  #122 = Utf8               get
  #123 = Utf8               ()B
  #124 = NameAndType        #122:#123     // get:()B
  #125 = Methodref          #28.#124      // java/nio/ByteBuffer.get:()B
  #126 = Utf8               <init>
  #127 = Utf8               (Lorg/sireum/Os_Ext$ProcOutput;)V
  #128 = Utf8               ()V
  #129 = NameAndType        #126:#128     // "<init>":()V
  #130 = Methodref          #4.#129       // com/zaxxer/nuprocess/NuAbstractProcessHandler."<init>":()V
  #131 = Utf8               $deserializeLambda$
  #132 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #133 = Utf8               scala/runtime/LambdaDeserialize
  #134 = Class              #133          // scala/runtime/LambdaDeserialize
  #135 = Utf8               bootstrap
  #136 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #137 = NameAndType        #135:#136     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #138 = Methodref          #134.#137     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #139 = MethodHandle       6:#138        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #140 = Utf8               lambdaDeserialize
  #141 = NameAndType        #140:#132     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #142 = InvokeDynamic      #1:#141       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #143 = Utf8               Code
  #144 = Utf8               StackMapTable
  #145 = Utf8               LineNumberTable
  #146 = Utf8               LocalVariableTable
  #147 = Utf8               MethodParameters
  #148 = Utf8               InnerClasses
  #149 = Utf8               EnclosingMethod
  #150 = Utf8               SourceFile
  #151 = Utf8               BootstrapMethods
  #152 = Utf8               ScalaInlineInfo
  #153 = Utf8               Scala
{
  private final org.sireum.Os_Ext$ProcOutput po$2;
    descriptor: Lorg/sireum/Os_Ext$ProcOutput;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private void append(boolean, java.nio.ByteBuffer);
    descriptor: (ZLjava/nio/ByteBuffer;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=5, args_size=3
         0: aload_2
         1: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
         4: istore_3
         5: iload_3
         6: newarray       byte
         8: astore        4
        10: getstatic     #38                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        13: getstatic     #43                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        16: iconst_0
        17: invokevirtual #47                 // Method scala/Predef$.intWrapper:(I)I
        20: iload_3
        21: invokevirtual #51                 // Method scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
        24: aload         4
        26: aload_2
        27: invokedynamic #70,  0             // InvokeDynamic #0:apply$mcVI$sp:([BLjava/nio/ByteBuffer;)Lscala/runtime/java8/JFunction1$mcVI$sp;
        32: invokevirtual #76                 // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
        35: getstatic     #81                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        38: iload_1
        39: invokevirtual #85                 // Method org/sireum/B$.$4B:(Z)Z
        42: ifeq          66
        45: aload_0
        46: getfield      #87                 // Field po$2:Lorg/sireum/Os_Ext$ProcOutput;
        49: getstatic     #92                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        52: invokevirtual #96                 // Method org/sireum/package$.F:()Z
        55: aload         4
        57: aload         4
        59: arraylength
        60: invokevirtual #100                // Method org/sireum/Os_Ext$ProcOutput.f:(Z[BI)V
        63: goto          84
        66: aload_0
        67: getfield      #87                 // Field po$2:Lorg/sireum/Os_Ext$ProcOutput;
        70: getstatic     #92                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        73: invokevirtual #103                // Method org/sireum/package$.T:()Z
        76: aload         4
        78: aload         4
        80: arraylength
        81: invokevirtual #100                // Method org/sireum/Os_Ext$ProcOutput.f:(Z[BI)V
        84: return
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 66
          locals = [ int, class "[B" ]
        frame_type = 17 /* same */
      LineNumberTable:
        line 925: 0
        line 926: 5
        line 927: 10
        line 928: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      79     3  size   I
           10      74     4 bytes   [B
            0      85     0  this   Lorg/sireum/Os_Ext$$anon$5;
            0      85     1 isOut   Z
            0      85     2 buffer   Ljava/nio/ByteBuffer;
    MethodParameters:
      Name                           Flags
      isOut                          final
      buffer                         final

  public void onStderr(java.nio.ByteBuffer, boolean);
    descriptor: (Ljava/nio/ByteBuffer;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: iload_2
         1: ifne          18
         4: aload_0
         5: getstatic     #92                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         8: invokevirtual #96                 // Method org/sireum/package$.F:()Z
        11: aload_1
        12: invokespecial #117                // Method append:(ZLjava/nio/ByteBuffer;)V
        15: goto          18
        18: return
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
      LineNumberTable:
        line 932: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/sireum/Os_Ext$$anon$5;
            0      19     1 buffer   Ljava/nio/ByteBuffer;
            0      19     2 closed   Z
    MethodParameters:
      Name                           Flags
      buffer                         final
      closed                         final

  public void onStdout(java.nio.ByteBuffer, boolean);
    descriptor: (Ljava/nio/ByteBuffer;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: iload_2
         1: ifne          18
         4: aload_0
         5: getstatic     #92                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         8: invokevirtual #103                // Method org/sireum/package$.T:()Z
        11: aload_1
        12: invokespecial #117                // Method append:(ZLjava/nio/ByteBuffer;)V
        15: goto          18
        18: return
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
      LineNumberTable:
        line 936: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/sireum/Os_Ext$$anon$5;
            0      19     1 buffer   Ljava/nio/ByteBuffer;
            0      19     2 closed   Z
    MethodParameters:
      Name                           Flags
      buffer                         final
      closed                         final

  public static final void $anonfun$append$1(byte[], java.nio.ByteBuffer, int);
    descriptor: ([BLjava/nio/ByteBuffer;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_2
         2: aload_1
         3: invokevirtual #125                // Method java/nio/ByteBuffer.get:()B
         6: bastore
         7: return
      LineNumberTable:
        line 927: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 bytes$1   [B
            0       8     1 buffer$2   Ljava/nio/ByteBuffer;
            0       8     2     i   I
    MethodParameters:
      Name                           Flags
      bytes$1                        final
      buffer$2                       final
      i                              final

  public org.sireum.Os_Ext$$anon$5(org.sireum.Os_Ext$ProcOutput);
    descriptor: (Lorg/sireum/Os_Ext$ProcOutput;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #87                 // Field po$2:Lorg/sireum/Os_Ext$ProcOutput;
         5: aload_0
         6: invokespecial #130                // Method com/zaxxer/nuprocess/NuAbstractProcessHandler."<init>":()V
         9: return
      LineNumberTable:
        line 922: 0
        line 923: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/Os_Ext$$anon$5;
            0      10     1  po$2   Lorg/sireum/Os_Ext$ProcOutput;
    MethodParameters:
      Name                           Flags
      po$2                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #142,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #2;                        // class org/sireum/Os_Ext$$anon$5
  public static final #20= #17 of #19;    // ProcOutput=class org/sireum/Os_Ext$ProcOutput of class org/sireum/Os_Ext
EnclosingMethod: #7.#10                 // org.sireum.Os_Ext$.nuProcess$1
SourceFile: "Os_Ext.scala"
BootstrapMethods:
  0: #66 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #53 (I)V
      #58 REF_invokeStatic org/sireum/Os_Ext$$anon$5.$anonfun$append$1:([BLjava/nio/ByteBuffer;I)V
      #53 (I)V
      #59 1
  1: #139 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #58 REF_invokeStatic org/sireum/Os_Ext$$anon$5.$anonfun$append$1:([BLjava/nio/ByteBuffer;I)V
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 36 00 37 01 00 7E 00 7F 01 00 17
   00 18 01 00 71 00 72 01 00 76 00 72 01
  Scala: length = 0x0 (unknown attribute)

