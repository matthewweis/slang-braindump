Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/runtime/PolyMethodCache.class
  Last modified May 29, 2022; size 2813 bytes
  SHA-256 checksum 319f861e3adfea9382dcbe8958819e862ce7d1d847d46ce1bd632120f584a502
  Compiled from "MethodCache.scala"
public final class scala.runtime.PolyMethodCache extends scala.runtime.MethodCache
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/runtime/PolyMethodCache
  super_class: #4                         // scala/runtime/MethodCache
  interfaces: 0, fields: 4, methods: 5, attributes: 4
Constant pool:
   #1 = Utf8               scala/runtime/PolyMethodCache
   #2 = Class              #1             // scala/runtime/PolyMethodCache
   #3 = Utf8               scala/runtime/MethodCache
   #4 = Class              #3             // scala/runtime/MethodCache
   #5 = Utf8               MethodCache.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005)4Qa\u0003\u0007\u0003\u001dAA\u0001\"\u0006\u0001\u0003\u0002\u0003\u0006I!\u0005\u0005\t/\u0001\u0011\t\u0011)A\u00051!AQ\u0006\u0001B\u0001B\u0003%a\u0006\u0003\u00055\u0001\t\u0005\t\u0015!\u00036\u0011\u0015A\u0004\u0001\"\u0001:\u0011\u0015\u0019\u0005\u0001\"\u0003E\u0011\u0015\u0019\u0006\u0001\"\u0001U\u0011\u001dY\u0006A1A\u0005\u000eqCaa\u0018\u0001!\u0002\u001bi\u0006\"\u00021\u0001\t\u0003\t\'a\u0004)pYflU\r\u001e5pI\u000e\u000b7\r[3\u000b\u00055q\u0011a\u0002:v]RLW.\u001a\u0006\u0002\u001f\u0005)1oY1mCN\u0011\u0001!\u0005\t\u0003%Mi\u0011\u0001D\u0005\u0003)1\u00111\"T3uQ>$7)Y2iK\u0006!a.\u001a=u\u0007\u0001\t\u0001B]3dK&4XM\u001d\u0019\u00033\r\u00022AG\u0010\"\u001b\u0005Y\"B\u0001\u000f\u001e\u0003\u0011a\u0017M\\4\u000b\u0003y\tAA[1wC&\u0011\u0001e\u0007\u0002\u0006\u00072\f7o\u001d\t\u0003E\rb\u0001\u0001B\u0005%\u0005\u0005\u0005\t\u0011!B\u0001K\t\u0019q\f\n\u001d\u0012\u0005\u0019R\u0003CA\u0014)\u001b\u0005q\u0011BA\u0015\u000f\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"aJ\u0016\n\u00051r!aA!os\u00061Q.\u001a;i_\u0012\u0004\"a\f\u001a\u000e\u0003AR!!M\u000e\u0002\u000fI,g\r\\3di&\u00111\u0007\r\u0002\u0007\u001b\u0016$\bn\u001c3\u0002\u0015\r|W\u000e\u001d7fq&$\u0018\u0010\u0005\u0002(m%\u0011qG\u0004\u0002\u0004\u0013:$\u0018A\u0002\u001fj]&$h\bF\u0003;wq\n%\t\u0005\u0002\u0013\u0001!)Q#\u0002a\u0001#!)q#\u0002a\u0001{A\u0012a\b\u0011\t\u00045}y\u0004C\u0001\u0012A\t%!C(!A\u0001\u0002\u000b\u0005Q\u0005C\u0003.\u000b\u0001\u0007a\u0006C\u00035\u000b\u0001\u0007Q\'\u0001\u0007gS:$\u0017J\u001c;fe:\fG\u000e\u0006\u0002/\u000b\")aI\u0002a\u0001\u000f\u0006Yam\u001c:SK\u000e,\u0017N^3sa\tA%\nE\u0002\u001b?%\u0003\"A\t&\u0005\u0013-+\u0015\u0011!A\u0001\u0006\u0003)#aA0%s!\u0012a!\u0014\t\u0003\u001dFk\u0011a\u0014\u0006\u0003!:\t!\"\u00198o_R\fG/[8o\u0013\t\u0011vJA\u0004uC&d\'/Z2\u0002\t\u0019Lg\u000e\u001a\u000b\u0003]UCQAR\u0004A\u0002Y\u0003$aV-\u0011\u0007iy\u0002\f\u0005\u0002#3\u0012I!,VA\u0001\u0002\u0003\u0015\t!\n\u0002\u0005?\u0012\n\u0004\'A\u0007NCb\u001cu.\u001c9mKbLG/_\u000b\u0002;>\ta,\b\u0002\u0001A\u0007qQ*\u0019=D_6\u0004H.\u001a=jif\u0004\u0013aA1eIR\u0019\u0011C\u00195\t\u000b\u0019S\u0001\u0019A21\u0005\u00114\u0007c\u0001\u000e KB\u0011!E\u001a\u0003\nO\n\f\t\u0011!A\u0003\u0002\u0015\u0012Aa\u0018\u00132c!)\u0011N\u0003a\u0001]\u0005Iam\u001c:NKRDw\u000e\u001a
   #9 = Utf8               next
  #10 = Utf8               Lscala/runtime/MethodCache;
  #11 = Utf8               receiver
  #12 = Utf8               Ljava/lang/Class;
  #13 = Utf8               Ljava/lang/Class<*>;
  #14 = Utf8               method
  #15 = Utf8               Ljava/lang/reflect/Method;
  #16 = Utf8               complexity
  #17 = Utf8               I
  #18 = Utf8               findInternal
  #19 = Utf8               (Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #20 = Utf8               (Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;
  #21 = Utf8               forReceiver
  #22 = NameAndType        #11:#12        // receiver:Ljava/lang/Class;
  #23 = Fieldref           #2.#22         // scala/runtime/PolyMethodCache.receiver:Ljava/lang/Class;
  #24 = NameAndType        #14:#15        // method:Ljava/lang/reflect/Method;
  #25 = Fieldref           #2.#24         // scala/runtime/PolyMethodCache.method:Ljava/lang/reflect/Method;
  #26 = NameAndType        #9:#10         // next:Lscala/runtime/MethodCache;
  #27 = Fieldref           #2.#26         // scala/runtime/PolyMethodCache.next:Lscala/runtime/MethodCache;
  #28 = Utf8               find
  #29 = NameAndType        #28:#19        // find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #30 = Methodref          #4.#29         // scala/runtime/MethodCache.find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #31 = Utf8               this
  #32 = Utf8               Lscala/runtime/PolyMethodCache;
  #33 = NameAndType        #18:#19        // findInternal:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #34 = Methodref          #2.#33         // scala/runtime/PolyMethodCache.findInternal:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #35 = Utf8               MaxComplexity
  #36 = Utf8               ()I
  #37 = Utf8               add
  #38 = Utf8               (Ljava/lang/Class;Ljava/lang/reflect/Method;)Lscala/runtime/MethodCache;
  #39 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/reflect/Method;)Lscala/runtime/MethodCache;
  #40 = Utf8               forMethod
  #41 = NameAndType        #16:#17        // complexity:I
  #42 = Fieldref           #2.#41         // scala/runtime/PolyMethodCache.complexity:I
  #43 = Utf8               <init>
  #44 = Utf8               (Lscala/runtime/MethodCache;Ljava/lang/Class;Ljava/lang/reflect/Method;I)V
  #45 = NameAndType        #43:#44        // "<init>":(Lscala/runtime/MethodCache;Ljava/lang/Class;Ljava/lang/reflect/Method;I)V
  #46 = Methodref          #2.#45         // scala/runtime/PolyMethodCache."<init>":(Lscala/runtime/MethodCache;Ljava/lang/Class;Ljava/lang/reflect/Method;I)V
  #47 = Utf8               scala/runtime/MegaMethodCache
  #48 = Class              #47            // scala/runtime/MegaMethodCache
  #49 = Utf8               java/lang/reflect/Method
  #50 = Class              #49            // java/lang/reflect/Method
  #51 = Utf8               getName
  #52 = Utf8               ()Ljava/lang/String;
  #53 = NameAndType        #51:#52        // getName:()Ljava/lang/String;
  #54 = Methodref          #50.#53        // java/lang/reflect/Method.getName:()Ljava/lang/String;
  #55 = Utf8               getParameterTypes
  #56 = Utf8               ()[Ljava/lang/Class;
  #57 = NameAndType        #55:#56        // getParameterTypes:()[Ljava/lang/Class;
  #58 = Methodref          #50.#57        // java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
  #59 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)V
  #60 = NameAndType        #43:#59        // "<init>":(Ljava/lang/String;[Ljava/lang/Class;)V
  #61 = Methodref          #48.#60        // scala/runtime/MegaMethodCache."<init>":(Ljava/lang/String;[Ljava/lang/Class;)V
  #62 = Utf8               (Lscala/runtime/MethodCache;Ljava/lang/Class<*>;Ljava/lang/reflect/Method;I)V
  #63 = Utf8               ()V
  #64 = NameAndType        #43:#63        // "<init>":()V
  #65 = Methodref          #4.#64         // scala/runtime/MethodCache."<init>":()V
  #66 = Utf8               Signature
  #67 = Utf8               Code
  #68 = Utf8               StackMapTable
  #69 = Utf8               LineNumberTable
  #70 = Utf8               LocalVariableTable
  #71 = Utf8               MethodParameters
  #72 = Utf8               SourceFile
  #73 = Utf8               RuntimeVisibleAnnotations
  #74 = Utf8               ScalaInlineInfo
  #75 = Utf8               ScalaSig
{
  private final scala.runtime.MethodCache next;
    descriptor: Lscala/runtime/MethodCache;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Class<?> receiver;
    descriptor: Ljava/lang/Class;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #13                          // Ljava/lang/Class<*>;

  private final java.lang.reflect.Method method;
    descriptor: Ljava/lang/reflect/Method;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int complexity;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.lang.reflect.Method findInternal(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Ljava/lang/reflect/Method;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: getfield      #23                 // Field receiver:Ljava/lang/Class;
         5: if_acmpne     13
         8: aload_0
         9: getfield      #25                 // Field method:Ljava/lang/reflect/Method;
        12: areturn
        13: aload_0
        14: getfield      #27                 // Field next:Lscala/runtime/MethodCache;
        17: astore_2
        18: aload_2
        19: instanceof    #2                  // class scala/runtime/PolyMethodCache
        22: ifeq          35
        25: aload_2
        26: checkcast     #2                  // class scala/runtime/PolyMethodCache
        29: aload_1
        30: astore_1
        31: astore_0
        32: goto          0
        35: aload_0
        36: getfield      #27                 // Field next:Lscala/runtime/MethodCache;
        39: aload_1
        40: invokevirtual #30                 // Method scala/runtime/MethodCache.find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
        43: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ class scala/runtime/MethodCache ]
      LineNumberTable:
        line 71: 0
        line 72: 13
        line 73: 18
        line 74: 35
        line 72: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lscala/runtime/PolyMethodCache;
            0      44     1 forReceiver   Ljava/lang/Class;
    Signature: #20                          // (Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;
    MethodParameters:
      Name                           Flags
      forReceiver                    final

  public java.lang.reflect.Method find(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Ljava/lang/reflect/Method;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #34                 // Method findInternal:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
         5: areturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/PolyMethodCache;
            0       6     1 forReceiver   Ljava/lang/Class;
    Signature: #20                          // (Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;
    MethodParameters:
      Name                           Flags
      forReceiver                    final

  private final int MaxComplexity();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: sipush        160
         3: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/runtime/PolyMethodCache;

  public scala.runtime.MethodCache add(java.lang.Class<?>, java.lang.reflect.Method);
    descriptor: (Ljava/lang/Class;Ljava/lang/reflect/Method;)Lscala/runtime/MethodCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=3
         0: aload_0
         1: getfield      #42                 // Field complexity:I
         4: sipush        160
         7: if_icmpge     27
        10: new           #2                  // class scala/runtime/PolyMethodCache
        13: dup
        14: aload_0
        15: aload_1
        16: aload_2
        17: aload_0
        18: getfield      #42                 // Field complexity:I
        21: iconst_1
        22: iadd
        23: invokespecial #46                 // Method "<init>":(Lscala/runtime/MethodCache;Ljava/lang/Class;Ljava/lang/reflect/Method;I)V
        26: areturn
        27: new           #48                 // class scala/runtime/MegaMethodCache
        30: dup
        31: aload_2
        32: invokevirtual #54                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
        35: aload_2
        36: invokevirtual #58                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
        39: invokespecial #61                 // Method scala/runtime/MegaMethodCache."<init>":(Ljava/lang/String;[Ljava/lang/Class;)V
        42: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 27 /* same */
      LineNumberTable:
        line 83: 0
        line 84: 10
        line 86: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lscala/runtime/PolyMethodCache;
            0      43     1 forReceiver   Ljava/lang/Class;
            0      43     2 forMethod   Ljava/lang/reflect/Method;
    Signature: #39                          // (Ljava/lang/Class<*>;Ljava/lang/reflect/Method;)Lscala/runtime/MethodCache;
    MethodParameters:
      Name                           Flags
      forReceiver                    final
      forMethod                      final

  public scala.runtime.PolyMethodCache(scala.runtime.MethodCache, java.lang.Class<?>, java.lang.reflect.Method, int);
    descriptor: (Lscala/runtime/MethodCache;Ljava/lang/Class;Ljava/lang/reflect/Method;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: putfield      #27                 // Field next:Lscala/runtime/MethodCache;
         5: aload_0
         6: aload_2
         7: putfield      #23                 // Field receiver:Ljava/lang/Class;
        10: aload_0
        11: aload_3
        12: putfield      #25                 // Field method:Ljava/lang/reflect/Method;
        15: aload_0
        16: iload         4
        18: putfield      #42                 // Field complexity:I
        21: aload_0
        22: invokespecial #65                 // Method scala/runtime/MethodCache."<init>":()V
        25: return
      LineNumberTable:
        line 61: 0
        line 62: 5
        line 63: 10
        line 64: 15
        line 65: 21
        line 60: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/runtime/PolyMethodCache;
            0      26     1  next   Lscala/runtime/MethodCache;
            0      26     2 receiver   Ljava/lang/Class;
            0      26     3 method   Ljava/lang/reflect/Method;
            0      26     4 complexity   I
    Signature: #62                          // (Lscala/runtime/MethodCache;Ljava/lang/Class<*>;Ljava/lang/reflect/Method;I)V
    MethodParameters:
      Name                           Flags
      next                           final
      receiver                       final
      method                         final
      complexity                     final
}
SourceFile: "MethodCache.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005)4Qa\u0003\u0007\u0003\u001dAA\u0001\"\u0006\u0001\u0003\u0002\u0003\u0006I!\u0005\u0005\t/\u0001\u0011\t\u0011)A\u00051!AQ\u0006\u0001B\u0001B\u0003%a\u0006\u0003\u00055\u0001\t\u0005\t\u0015!\u00036\u0011\u0015A\u0004\u0001\"\u0001:\u0011\u0015\u0019\u0005\u0001\"\u0003E\u0011\u0015\u0019\u0006\u0001\"\u0001U\u0011\u001dY\u0006A1A\u0005\u000eqCaa\u0018\u0001!\u0002\u001bi\u0006\"\u00021\u0001\t\u0003\t\'a\u0004)pYflU\r\u001e5pI\u000e\u000b7\r[3\u000b\u00055q\u0011a\u0002:v]RLW.\u001a\u0006\u0002\u001f\u0005)1oY1mCN\u0011\u0001!\u0005\t\u0003%Mi\u0011\u0001D\u0005\u0003)1\u00111\"T3uQ>$7)Y2iK\u0006!a.\u001a=u\u0007\u0001\t\u0001B]3dK&4XM\u001d\u0019\u00033\r\u00022AG\u0010\"\u001b\u0005Y\"B\u0001\u000f\u001e\u0003\u0011a\u0017M\\4\u000b\u0003y\tAA[1wC&\u0011\u0001e\u0007\u0002\u0006\u00072\f7o\u001d\t\u0003E\rb\u0001\u0001B\u0005%\u0005\u0005\u0005\t\u0011!B\u0001K\t\u0019q\f\n\u001d\u0012\u0005\u0019R\u0003CA\u0014)\u001b\u0005q\u0011BA\u0015\u000f\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"aJ\u0016\n\u00051r!aA!os\u00061Q.\u001a;i_\u0012\u0004\"a\f\u001a\u000e\u0003AR!!M\u000e\u0002\u000fI,g\r\\3di&\u00111\u0007\r\u0002\u0007\u001b\u0016$\bn\u001c3\u0002\u0015\r|W\u000e\u001d7fq&$\u0018\u0010\u0005\u0002(m%\u0011qG\u0004\u0002\u0004\u0013:$\u0018A\u0002\u001fj]&$h\bF\u0003;wq\n%\t\u0005\u0002\u0013\u0001!)Q#\u0002a\u0001#!)q#\u0002a\u0001{A\u0012a\b\u0011\t\u00045}y\u0004C\u0001\u0012A\t%!C(!A\u0001\u0002\u000b\u0005Q\u0005C\u0003.\u000b\u0001\u0007a\u0006C\u00035\u000b\u0001\u0007Q\'\u0001\u0007gS:$\u0017J\u001c;fe:\fG\u000e\u0006\u0002/\u000b\")aI\u0002a\u0001\u000f\u0006Yam\u001c:SK\u000e,\u0017N^3sa\tA%\nE\u0002\u001b?%\u0003\"A\t&\u0005\u0013-+\u0015\u0011!A\u0001\u0006\u0003)#aA0%s!\u0012a!\u0014\t\u0003\u001dFk\u0011a\u0014\u0006\u0003!:\t!\"\u00198o_R\fG/[8o\u0013\t\u0011vJA\u0004uC&d\'/Z2\u0002\t\u0019Lg\u000e\u001a\u000b\u0003]UCQAR\u0004A\u0002Y\u0003$aV-\u0011\u0007iy\u0002\f\u0005\u0002#3\u0012I!,VA\u0001\u0002\u0003\u0015\t!\n\u0002\u0005?\u0012\n\u0004\'A\u0007NCb\u001cu.\u001c9mKbLG/_\u000b\u0002;>\ta,\b\u0002\u0001A\u0007qQ*\u0019=D_6\u0004H.\u001a=jif\u0004\u0013aA1eIR\u0019\u0011C\u00195\t\u000b\u0019S\u0001\u0019A21\u0005\u00114\u0007c\u0001\u000e KB\u0011!E\u001a\u0003\nO\n\f\t\u0011!A\u0003\u0002\u0015\u0012Aa\u0018\u00132c!)\u0011N\u0003a\u0001]\u0005Iam\u001c:NKRDw\u000e\u001a"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 2B 00 2C 01 00 23 00 24 01 00 25
   00 26 01 00 1C 00 13 01 00 12 00 13 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
