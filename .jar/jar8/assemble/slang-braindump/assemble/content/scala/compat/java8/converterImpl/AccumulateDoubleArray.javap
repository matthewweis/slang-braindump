Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/compat/java8/converterImpl/AccumulateDoubleArray.class
  Last modified May 29, 2022; size 2521 bytes
  SHA-256 checksum c26cbbfe029042c807cd24d3db56d55a685d8fcaca59deee1583f76dbcf96635
  Compiled from "Accumulates.scala"
public final class scala.compat.java8.converterImpl.AccumulateDoubleArray
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/compat/java8/converterImpl/AccumulateDoubleArray
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 4
Constant pool:
   #1 = Utf8               scala/compat/java8/converterImpl/AccumulateDoubleArray
   #2 = Class              #1             // scala/compat/java8/converterImpl/AccumulateDoubleArray
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Accumulates.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005\r4A!\u0004\b\u0003/!aA\u0004\u0001C\u0001\u0002\u000b\u0015)\u0019!C\u0005;!IA\u0005\u0001B\u0003\u0002\u0003\u0006IA\b\u0005\u0006K\u0001!\tA\n\u0005\u0006W\u0001!\t\u0001\f\u0005\b\u0003\u0002\t\t\u0011\"\u0011C\u0011\u001d1\u0005!!A\u0005B\u001d;q\u0001\u0015\b\u0002\u0002#\u0005\u0011KB\u0004\u000e\u001d\u0005\u0005\t\u0012\u0001*\t\u000b\u0015BA\u0011\u0001,\t\u000b]CAQ\u0001-\t\u000fmC\u0011\u0011!C\u00039\"9a\fCA\u0001\n\u000by&!F!dGVlW\u000f\\1uK\u0012{WO\u00197f\u0003J\u0014\u0018-\u001f\u0006\u0003\u001fA\tQbY8om\u0016\u0014H/\u001a:J[Bd\'BA\t\u0013\u0003\u0015Q\u0017M^19\u0015\t\u0019B#\u0001\u0004d_6\u0004\u0018\r\u001e\u0006\u0002+\u0005)1oY1mC\u000e\u00011C\u0001\u0001\u0019!\tI\"$D\u0001\u0015\u0013\tYBC\u0001\u0004B]f4\u0016\r\\\u0001Cg\u000e\fG.\u0019\u0013d_6\u0004\u0018\r\u001e\u0013kCZ\f\u0007\bJ2p]Z,\'\u000f^3s\u00136\u0004H\u000eJ!dGVlW\u000f\\1uK\u0012{WO\u00197f\u0003J\u0014\u0018-\u001f\u0013%k:$WM\u001d7zS:<W#\u0001\u0010\u0011\u0007ey\u0012%\u0003\u0002!)\t)\u0011I\u001d:bsB\u0011\u0011DI\u0005\u0003GQ\u0011a\u0001R8vE2,\u0017aQ:dC2\fGeY8na\u0006$HE[1wCb\"3m\u001c8wKJ$XM]%na2$\u0013iY2v[Vd\u0017\r^3E_V\u0014G.Z!se\u0006LH\u0005J;oI\u0016\u0014H._5oO\u0002\na\u0001P5oSRtDCA\u0014*!\tA\u0003!D\u0001\u000f\u0011\u0015Q3\u00011\u0001\u001f\u0003))h\u000eZ3sYfLgnZ\u0001\u000bC\u000e\u001cW/\\;mCR,W#A\u0017\u0011\u00059rdBA\u0018<\u001d\t\u0001\u0014H\u0004\u00022q9\u0011!g\u000e\b\u0003gYj\u0011\u0001\u000e\u0006\u0003kY\ta\u0001\u0010:p_Rt\u0014\"A\u000b\n\u0005M!\u0012BA\t\u0013\u0013\tQ\u0004#\u0001\bd_2dWm\u0019;j_:LU\u000e\u001d7\n\u0005qj\u0014a\u00029bG.\fw-\u001a\u0006\u0003uAI!a\u0010!\u0003#\u0011{WO\u00197f\u0003\u000e\u001cW/\\;mCR|\'O\u0003\u0002={\u0005A\u0001.Y:i\u0007>$W\rF\u0001D!\tIB)\u0003\u0002F)\t\u0019\u0011J\u001c;\u0002\r\u0015\fX/\u00197t)\tA5\n\u0005\u0002\u001a\u0013&\u0011!\n\u0006\u0002\b\u0005>|G.Z1o\u0011\u001dae!!AA\u00025\u000b1\u0001\u001f\u00132!\tIb*\u0003\u0002P)\t\u0019\u0011I\\=\u0002+\u0005\u001b7-^7vY\u0006$X\rR8vE2,\u0017I\u001d:bsB\u0011\u0001\u0006C\n\u0003\u0011M\u0003\"!\u0007+\n\u0005U#\"AB!osJ+g\rF\u0001R\u0003Q\t7mY;nk2\fG/\u001a\u0013fqR,gn]5p]R\u0011Q&\u0017\u0005\u00065*\u0001\raJ\u0001\u0006IQD\u0017n]\u0001\u0013Q\u0006\u001c\bnQ8eK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0002C;\")!l\u0003a\u0001O\u0005\u0001R-];bYN$S\r\u001f;f]NLwN\u001c\u000b\u0003A\n$\"\u0001S1\t\u000f1c\u0011\u0011!a\u0001\u001b\")!\f\u0004a\u0001O\u0001
   #9 = Utf8               scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying
  #10 = Utf8               [D
  #11 = Utf8               equals$extension
  #12 = Utf8               ([DLjava/lang/Object;)Z
  #13 = Utf8               $this
  #14 = Utf8               x$1
  #15 = Utf8               scala/compat/java8/converterImpl/AccumulateDoubleArray$
  #16 = Class              #15            // scala/compat/java8/converterImpl/AccumulateDoubleArray$
  #17 = Utf8               MODULE$
  #18 = Utf8               Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
  #19 = NameAndType        #17:#18        // MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
  #20 = Fieldref           #16.#19        // scala/compat/java8/converterImpl/AccumulateDoubleArray$.MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
  #21 = NameAndType        #11:#12        // equals$extension:([DLjava/lang/Object;)Z
  #22 = Methodref          #16.#21        // scala/compat/java8/converterImpl/AccumulateDoubleArray$.equals$extension:([DLjava/lang/Object;)Z
  #23 = Utf8               Ljava/lang/Object;
  #24 = Utf8               hashCode$extension
  #25 = Utf8               ([D)I
  #26 = NameAndType        #24:#25        // hashCode$extension:([D)I
  #27 = Methodref          #16.#26        // scala/compat/java8/converterImpl/AccumulateDoubleArray$.hashCode$extension:([D)I
  #28 = Utf8               accumulate$extension
  #29 = Utf8               ([D)Lscala/jdk/DoubleAccumulator;
  #30 = NameAndType        #28:#29        // accumulate$extension:([D)Lscala/jdk/DoubleAccumulator;
  #31 = Methodref          #16.#30        // scala/compat/java8/converterImpl/AccumulateDoubleArray$.accumulate$extension:([D)Lscala/jdk/DoubleAccumulator;
  #32 = Utf8               ()[D
  #33 = NameAndType        #9:#10         // scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:[D
  #34 = Fieldref           #2.#33         // scala/compat/java8/converterImpl/AccumulateDoubleArray.scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:[D
  #35 = Utf8               this
  #36 = Utf8               Lscala/compat/java8/converterImpl/AccumulateDoubleArray;
  #37 = Utf8               accumulate
  #38 = Utf8               ()Lscala/jdk/DoubleAccumulator;
  #39 = NameAndType        #9:#32         // scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:()[D
  #40 = Methodref          #2.#39         // scala/compat/java8/converterImpl/AccumulateDoubleArray.scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:()[D
  #41 = Utf8               hashCode
  #42 = Utf8               ()I
  #43 = Utf8               equals
  #44 = Utf8               (Ljava/lang/Object;)Z
  #45 = Utf8               <init>
  #46 = Utf8               ([D)V
  #47 = Utf8               underlying
  #48 = Utf8               ()V
  #49 = NameAndType        #45:#48        // "<init>":()V
  #50 = Methodref          #4.#49         // java/lang/Object."<init>":()V
  #51 = Utf8               Code
  #52 = Utf8               LocalVariableTable
  #53 = Utf8               MethodParameters
  #54 = Utf8               LineNumberTable
  #55 = Utf8               SourceFile
  #56 = Utf8               RuntimeVisibleAnnotations
  #57 = Utf8               ScalaInlineInfo
  #58 = Utf8               ScalaSig
{
  private final double[] scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying;
    descriptor: [D
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static boolean equals$extension(double[], java.lang.Object);
    descriptor: ([DLjava/lang/Object;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #20                 // Field scala/compat/java8/converterImpl/AccumulateDoubleArray$.MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
         3: aload_0
         4: aload_1
         5: invokevirtual #22                 // Method scala/compat/java8/converterImpl/AccumulateDoubleArray$.equals$extension:([DLjava/lang/Object;)Z
         8: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   [D
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public static int hashCode$extension(double[]);
    descriptor: ([D)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #20                 // Field scala/compat/java8/converterImpl/AccumulateDoubleArray$.MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
         3: aload_0
         4: invokevirtual #27                 // Method scala/compat/java8/converterImpl/AccumulateDoubleArray$.hashCode$extension:([D)I
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   [D
    MethodParameters:
      Name                           Flags
      $this                          final

  public static scala.jdk.DoubleAccumulator accumulate$extension(double[]);
    descriptor: ([D)Lscala/jdk/DoubleAccumulator;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #20                 // Field scala/compat/java8/converterImpl/AccumulateDoubleArray$.MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
         3: aload_0
         4: invokevirtual #31                 // Method scala/compat/java8/converterImpl/AccumulateDoubleArray$.accumulate$extension:([D)Lscala/jdk/DoubleAccumulator;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   [D
    MethodParameters:
      Name                           Flags
      $this                          final

  public double[] scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying();
    descriptor: ()[D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #34                 // Field scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:[D
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/converterImpl/AccumulateDoubleArray;

  public scala.jdk.DoubleAccumulator accumulate();
    descriptor: ()Lscala/jdk/DoubleAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #20                 // Field scala/compat/java8/converterImpl/AccumulateDoubleArray$.MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
         3: aload_0
         4: invokevirtual #40                 // Method scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:()[D
         7: invokevirtual #31                 // Method scala/compat/java8/converterImpl/AccumulateDoubleArray$.accumulate$extension:([D)Lscala/jdk/DoubleAccumulator;
        10: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/compat/java8/converterImpl/AccumulateDoubleArray;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #20                 // Field scala/compat/java8/converterImpl/AccumulateDoubleArray$.MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
         3: aload_0
         4: invokevirtual #40                 // Method scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:()[D
         7: invokevirtual #27                 // Method scala/compat/java8/converterImpl/AccumulateDoubleArray$.hashCode$extension:([D)I
        10: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/compat/java8/converterImpl/AccumulateDoubleArray;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #20                 // Field scala/compat/java8/converterImpl/AccumulateDoubleArray$.MODULE$:Lscala/compat/java8/converterImpl/AccumulateDoubleArray$;
         3: aload_0
         4: invokevirtual #40                 // Method scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:()[D
         7: aload_1
         8: invokevirtual #22                 // Method scala/compat/java8/converterImpl/AccumulateDoubleArray$.equals$extension:([DLjava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/compat/java8/converterImpl/AccumulateDoubleArray;
            0      12     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.compat.java8.converterImpl.AccumulateDoubleArray(double[]);
    descriptor: ([D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #34                 // Field scala$compat$java8$converterImpl$AccumulateDoubleArray$$underlying:[D
         5: aload_0
         6: invokespecial #50                 // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/compat/java8/converterImpl/AccumulateDoubleArray;
            0      10     1 underlying   [D
    MethodParameters:
      Name                           Flags
      underlying                     final
}
SourceFile: "Accumulates.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\r4A!\u0004\b\u0003/!aA\u0004\u0001C\u0001\u0002\u000b\u0015)\u0019!C\u0005;!IA\u0005\u0001B\u0003\u0002\u0003\u0006IA\b\u0005\u0006K\u0001!\tA\n\u0005\u0006W\u0001!\t\u0001\f\u0005\b\u0003\u0002\t\t\u0011\"\u0011C\u0011\u001d1\u0005!!A\u0005B\u001d;q\u0001\u0015\b\u0002\u0002#\u0005\u0011KB\u0004\u000e\u001d\u0005\u0005\t\u0012\u0001*\t\u000b\u0015BA\u0011\u0001,\t\u000b]CAQ\u0001-\t\u000fmC\u0011\u0011!C\u00039\"9a\fCA\u0001\n\u000by&!F!dGVlW\u000f\\1uK\u0012{WO\u00197f\u0003J\u0014\u0018-\u001f\u0006\u0003\u001fA\tQbY8om\u0016\u0014H/\u001a:J[Bd\'BA\t\u0013\u0003\u0015Q\u0017M^19\u0015\t\u0019B#\u0001\u0004d_6\u0004\u0018\r\u001e\u0006\u0002+\u0005)1oY1mC\u000e\u00011C\u0001\u0001\u0019!\tI\"$D\u0001\u0015\u0013\tYBC\u0001\u0004B]f4\u0016\r\\\u0001Cg\u000e\fG.\u0019\u0013d_6\u0004\u0018\r\u001e\u0013kCZ\f\u0007\bJ2p]Z,\'\u000f^3s\u00136\u0004H\u000eJ!dGVlW\u000f\\1uK\u0012{WO\u00197f\u0003J\u0014\u0018-\u001f\u0013%k:$WM\u001d7zS:<W#\u0001\u0010\u0011\u0007ey\u0012%\u0003\u0002!)\t)\u0011I\u001d:bsB\u0011\u0011DI\u0005\u0003GQ\u0011a\u0001R8vE2,\u0017aQ:dC2\fGeY8na\u0006$HE[1wCb\"3m\u001c8wKJ$XM]%na2$\u0013iY2v[Vd\u0017\r^3E_V\u0014G.Z!se\u0006LH\u0005J;oI\u0016\u0014H._5oO\u0002\na\u0001P5oSRtDCA\u0014*!\tA\u0003!D\u0001\u000f\u0011\u0015Q3\u00011\u0001\u001f\u0003))h\u000eZ3sYfLgnZ\u0001\u000bC\u000e\u001cW/\\;mCR,W#A\u0017\u0011\u00059rdBA\u0018<\u001d\t\u0001\u0014H\u0004\u00022q9\u0011!g\u000e\b\u0003gYj\u0011\u0001\u000e\u0006\u0003kY\ta\u0001\u0010:p_Rt\u0014\"A\u000b\n\u0005M!\u0012BA\t\u0013\u0013\tQ\u0004#\u0001\bd_2dWm\u0019;j_:LU\u000e\u001d7\n\u0005qj\u0014a\u00029bG.\fw-\u001a\u0006\u0003uAI!a\u0010!\u0003#\u0011{WO\u00197f\u0003\u000e\u001cW/\\;mCR|\'O\u0003\u0002={\u0005A\u0001.Y:i\u0007>$W\rF\u0001D!\tIB)\u0003\u0002F)\t\u0019\u0011J\u001c;\u0002\r\u0015\fX/\u00197t)\tA5\n\u0005\u0002\u001a\u0013&\u0011!\n\u0006\u0002\b\u0005>|G.Z1o\u0011\u001dae!!AA\u00025\u000b1\u0001\u001f\u00132!\tIb*\u0003\u0002P)\t\u0019\u0011I\\=\u0002+\u0005\u001b7-^7vY\u0006$X\rR8vE2,\u0017I\u001d:bsB\u0011\u0001\u0006C\n\u0003\u0011M\u0003\"!\u0007+\n\u0005U#\"AB!osJ+g\rF\u0001R\u0003Q\t7mY;nk2\fG/\u001a\u0013fqR,gn]5p]R\u0011Q&\u0017\u0005\u00065*\u0001\raJ\u0001\u0006IQD\u0017n]\u0001\u0013Q\u0006\u001c\bnQ8eK\u0012*\u0007\u0010^3og&|g\u000e\u0006\u0002C;\")!l\u0003a\u0001O\u0005\u0001R-];bYN$S\r\u001f;f]NLwN\u001c\u000b\u0003A\n$\"\u0001S1\t\u000f1c\u0011\u0011!a\u0001\u001b\")!\f\u0004a\u0001O\u0001"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 2D 00 2E 01 00 25 00 26 01 00 2B
   00 2C 01 00 29 00 2A 01 00 09 00 20 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
