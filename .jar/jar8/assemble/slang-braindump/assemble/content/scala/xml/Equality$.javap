Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/xml/Equality$.class
  Last modified May 29, 2022; size 1954 bytes
  SHA-256 checksum 3c35d1fb9097de2c32ff001b62dc9af23532a1db1621671d91e9af47d70e76da
  Compiled from "Equality.scala"
public final class scala.xml.Equality$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/xml/Equality$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 3
Constant pool:
   #1 = Utf8               scala/xml/Equality$
   #2 = Class              #1             // scala/xml/Equality$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Equality.scala
   #6 = Utf8               MODULE$
   #7 = Utf8               Lscala/xml/Equality$;
   #8 = Utf8               <clinit>
   #9 = Utf8               ()V
  #10 = Utf8               <init>
  #11 = NameAndType        #10:#9         // "<init>":()V
  #12 = Methodref          #2.#11         // scala/xml/Equality$."<init>":()V
  #13 = NameAndType        #6:#7          // MODULE$:Lscala/xml/Equality$;
  #14 = Fieldref           #2.#13         // scala/xml/Equality$.MODULE$:Lscala/xml/Equality$;
  #15 = Utf8               asRef
  #16 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #17 = Utf8               x
  #18 = Utf8               this
  #19 = Utf8               Ljava/lang/Object;
  #20 = Utf8               compareBlithely
  #21 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Z
  #22 = Utf8               x1
  #23 = Utf8               x2
  #24 = Utf8               scala/xml/Atom
  #25 = Class              #24            // scala/xml/Atom
  #26 = Utf8               data
  #27 = Utf8               ()Ljava/lang/Object;
  #28 = NameAndType        #26:#27        // data:()Ljava/lang/Object;
  #29 = Methodref          #25.#28        // scala/xml/Atom.data:()Ljava/lang/Object;
  #30 = Utf8               equals
  #31 = Utf8               (Ljava/lang/Object;)Z
  #32 = NameAndType        #30:#31        // equals:(Ljava/lang/Object;)Z
  #33 = Methodref          #4.#32         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #34 = Utf8               scala/xml/NodeSeq
  #35 = Class              #34            // scala/xml/NodeSeq
  #36 = Utf8               text
  #37 = Utf8               ()Ljava/lang/String;
  #38 = NameAndType        #36:#37        // text:()Ljava/lang/String;
  #39 = Methodref          #35.#38        // scala/xml/NodeSeq.text:()Ljava/lang/String;
  #40 = Utf8               Ljava/lang/String;
  #41 = Utf8               java/lang/String
  #42 = Class              #41            // java/lang/String
  #43 = Utf8               (Ljava/lang/Object;Lscala/xml/Node;)Z
  #44 = Utf8               length
  #45 = Utf8               ()I
  #46 = NameAndType        #44:#45        // length:()I
  #47 = Methodref          #35.#46        // scala/xml/NodeSeq.length:()I
  #48 = Utf8               apply
  #49 = Utf8               (I)Lscala/xml/Node;
  #50 = NameAndType        #48:#49        // apply:(I)Lscala/xml/Node;
  #51 = Methodref          #35.#50        // scala/xml/NodeSeq.apply:(I)Lscala/xml/Node;
  #52 = Utf8               Lscala/xml/Node;
  #53 = Utf8               scala/xml/Node
  #54 = Class              #53            // scala/xml/Node
  #55 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #56 = NameAndType        #20:#21        // compareBlithely:(Ljava/lang/Object;Ljava/lang/String;)Z
  #57 = Methodref          #2.#56         // scala/xml/Equality$.compareBlithely:(Ljava/lang/Object;Ljava/lang/String;)Z
  #58 = NameAndType        #20:#43        // compareBlithely:(Ljava/lang/Object;Lscala/xml/Node;)Z
  #59 = Methodref          #2.#58         // scala/xml/Equality$.compareBlithely:(Ljava/lang/Object;Lscala/xml/Node;)Z
  #60 = Methodref          #4.#11         // java/lang/Object."<init>":()V
  #61 = Utf8               Code
  #62 = Utf8               LineNumberTable
  #63 = Utf8               LocalVariableTable
  #64 = Utf8               MethodParameters
  #65 = Utf8               StackMapTable
  #66 = Utf8               SourceFile
  #67 = Utf8               ScalaInlineInfo
  #68 = Utf8               Scala
{
  public static final scala.xml.Equality$ MODULE$;
    descriptor: Lscala/xml/Equality$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/xml/Equality$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lscala/xml/Equality$;
        10: return
      LineNumberTable:
        line 49: 0

  public java.lang.Object asRef(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/xml/Equality$;
            0       2     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public boolean compareBlithely(java.lang.Object, java.lang.String);
    descriptor: (Ljava/lang/Object;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #25                 // class scala/xml/Atom
         8: ifeq          56
        11: aload         4
        13: checkcast     #25                 // class scala/xml/Atom
        16: astore        5
        18: aload         5
        20: invokevirtual #29                 // Method scala/xml/Atom.data:()Ljava/lang/Object;
        23: aload_2
        24: astore        6
        26: dup
        27: ifnonnull     39
        30: pop
        31: aload         6
        33: ifnull        47
        36: goto          51
        39: aload         6
        41: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        44: ifeq          51
        47: iconst_1
        48: goto          52
        51: iconst_0
        52: istore_3
        53: goto          120
        56: goto          59
        59: aload         4
        61: instanceof    #35                 // class scala/xml/NodeSeq
        64: ifeq          112
        67: aload         4
        69: checkcast     #35                 // class scala/xml/NodeSeq
        72: astore        7
        74: aload         7
        76: invokevirtual #39                 // Method scala/xml/NodeSeq.text:()Ljava/lang/String;
        79: aload_2
        80: astore        8
        82: dup
        83: ifnonnull     95
        86: pop
        87: aload         8
        89: ifnull        103
        92: goto          107
        95: aload         8
        97: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       100: ifeq          107
       103: iconst_1
       104: goto          108
       107: iconst_0
       108: istore_3
       109: goto          120
       112: goto          115
       115: iconst_0
       116: istore_3
       117: goto          120
       120: iload_3
       121: ireturn
      StackMapTable: number_of_entries = 13
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class scala/xml/Equality$, class java/lang/Object, class java/lang/String, top, class java/lang/Object, class scala/xml/Atom, class java/lang/String ]
          stack = [ class java/lang/Object ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class scala/xml/Equality$, class java/lang/Object, class java/lang/String, top, class java/lang/Object, top, top, class scala/xml/NodeSeq, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/xml/Equality$, class java/lang/Object, class java/lang/String, top, class java/lang/Object ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/xml/Equality$, class java/lang/Object, class java/lang/String, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 55: 0
        line 56: 3
        line 57: 59
        line 58: 115
        line 55: 120
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     122     0  this   Lscala/xml/Equality$;
            0     122     1    x1   Ljava/lang/Object;
            0     122     2    x2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x1                             final
      x2                             final

  public boolean compareBlithely(java.lang.Object, scala.xml.Node);
    descriptor: (Ljava/lang/Object;Lscala/xml/Node;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #35                 // class scala/xml/NodeSeq
         8: ifeq          69
        11: aload         4
        13: checkcast     #35                 // class scala/xml/NodeSeq
        16: astore        5
        18: aload         5
        20: invokevirtual #47                 // Method scala/xml/NodeSeq.length:()I
        23: iconst_1
        24: if_icmpne     66
        27: aload_2
        28: aload         5
        30: iconst_0
        31: invokevirtual #51                 // Method scala/xml/NodeSeq.apply:(I)Lscala/xml/Node;
        34: astore        6
        36: dup
        37: ifnonnull     49
        40: pop
        41: aload         6
        43: ifnull        57
        46: goto          61
        49: aload         6
        51: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        54: ifeq          61
        57: iconst_1
        58: goto          62
        61: iconst_0
        62: istore_3
        63: goto          77
        66: goto          72
        69: goto          72
        72: iconst_0
        73: istore_3
        74: goto          77
        77: iload_3
        78: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class scala/xml/Equality$, class java/lang/Object, class scala/xml/Node, top, class java/lang/Object, class scala/xml/NodeSeq, class scala/xml/Node ]
          stack = [ class scala/xml/Node ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/xml/Equality$, class java/lang/Object, class scala/xml/Node, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 60: 0
        line 61: 3
        line 62: 72
        line 60: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      79     0  this   Lscala/xml/Equality$;
            0      79     1    x1   Ljava/lang/Object;
            0      79     2    x2   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      x1                             final
      x2                             final

  public boolean compareBlithely(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_1
         1: ifnull        8
         4: aload_2
         5: ifnonnull     19
         8: aload_1
         9: aload_2
        10: if_acmpne     17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: ireturn
        19: aload_2
        20: astore        4
        22: aload         4
        24: instanceof    #42                 // class java/lang/String
        27: ifeq          48
        30: aload         4
        32: checkcast     #42                 // class java/lang/String
        35: astore        5
        37: aload_0
        38: aload_1
        39: aload         5
        41: invokevirtual #57                 // Method compareBlithely:(Ljava/lang/Object;Ljava/lang/String;)Z
        44: istore_3
        45: goto          85
        48: goto          51
        51: aload         4
        53: instanceof    #54                 // class scala/xml/Node
        56: ifeq          77
        59: aload         4
        61: checkcast     #54                 // class scala/xml/Node
        64: astore        6
        66: aload_0
        67: aload_1
        68: aload         6
        70: invokevirtual #59                 // Method compareBlithely:(Ljava/lang/Object;Lscala/xml/Node;)Z
        73: istore_3
        74: goto          85
        77: goto          80
        80: iconst_0
        81: istore_3
        82: goto          85
        85: iload_3
        86: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 8 /* same */
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 0 /* same */
        frame_type = 253 /* append */
          offset_delta = 28
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 25 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/xml/Equality$, class java/lang/Object, class java/lang/Object, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 65: 0
        line 66: 8
        line 68: 19
        line 69: 22
        line 70: 51
        line 71: 80
        line 68: 85
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      87     0  this   Lscala/xml/Equality$;
            0      87     1    x1   Ljava/lang/Object;
            0      87     2    x2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x1                             final
      x2                             final

  private scala.xml.Equality$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #60                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 75: 0
        line 49: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/Equality$;
}
SourceFile: "Equality.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 0A 00 09 01 00 0F 00 10 01 00 14
   00 37 01 00 14 00 15 01 00 14 00 2B 01
  Scala: length = 0x0 (unknown attribute)

