Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2.class
  Last modified May 29, 2022; size 3216 bytes
  SHA-256 checksum 985caaec1c77ca447d477082f2e8e68eaf34d9a3d28c906ed8a5a74e0e174814
  Compiled from "ExecutionContextImpl.scala"
public final class scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2 extends java.lang.Object implements java.util.concurrent.ForkJoinPool$ManagedBlocker, scala.Function0<T>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 3, methods: 14, attributes: 6
Constant pool:
    #1 = Utf8               scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
    #2 = Class              #1            // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
    #3 = Utf8               Ljava/lang/Object;Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;Lscala/Function0<TT;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               java/util/concurrent/ForkJoinPool$ManagedBlocker
    #7 = Class              #6            // java/util/concurrent/ForkJoinPool$ManagedBlocker
    #8 = Utf8               scala/Function0
    #9 = Class              #8            // scala/Function0
   #10 = Utf8               ExecutionContextImpl.scala
   #11 = Utf8               scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1
   #12 = Class              #11           // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1
   #13 = Utf8               blockOn
   #14 = Utf8               (Lscala/Function0;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
   #15 = NameAndType        #13:#14       // blockOn:(Lscala/Function0;Lscala/concurrent/CanAwait;)Ljava/lang/Object;
   #16 = Utf8               java/util/concurrent/ForkJoinPool
   #17 = Class              #16           // java/util/concurrent/ForkJoinPool
   #18 = Utf8               ManagedBlocker
   #19 = Utf8               scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory
   #20 = Class              #19           // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory
   #21 = Utf8               scala/concurrent/impl/ExecutionContextImpl
   #22 = Class              #21           // scala/concurrent/impl/ExecutionContextImpl
   #23 = Utf8               DefaultThreadFactory
   #24 = Utf8               result
   #25 = Utf8               Ljava/lang/Object;
   #26 = Utf8               TT;
   #27 = Utf8               done
   #28 = Utf8               Z
   #29 = Utf8               thunk$1
   #30 = Utf8               Lscala/Function0;
   #31 = Utf8               apply$mcZ$sp
   #32 = Utf8               ()Z
   #33 = Utf8               apply$mcZ$sp$
   #34 = Utf8               (Lscala/Function0;)Z
   #35 = NameAndType        #33:#34       // apply$mcZ$sp$:(Lscala/Function0;)Z
   #36 = InterfaceMethodref #9.#35        // scala/Function0.apply$mcZ$sp$:(Lscala/Function0;)Z
   #37 = Utf8               this
   #38 = Utf8               Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;
   #39 = Utf8               apply$mcB$sp
   #40 = Utf8               ()B
   #41 = Utf8               apply$mcB$sp$
   #42 = Utf8               (Lscala/Function0;)B
   #43 = NameAndType        #41:#42       // apply$mcB$sp$:(Lscala/Function0;)B
   #44 = InterfaceMethodref #9.#43        // scala/Function0.apply$mcB$sp$:(Lscala/Function0;)B
   #45 = Utf8               apply$mcC$sp
   #46 = Utf8               ()C
   #47 = Utf8               apply$mcC$sp$
   #48 = Utf8               (Lscala/Function0;)C
   #49 = NameAndType        #47:#48       // apply$mcC$sp$:(Lscala/Function0;)C
   #50 = InterfaceMethodref #9.#49        // scala/Function0.apply$mcC$sp$:(Lscala/Function0;)C
   #51 = Utf8               apply$mcD$sp
   #52 = Utf8               ()D
   #53 = Utf8               apply$mcD$sp$
   #54 = Utf8               (Lscala/Function0;)D
   #55 = NameAndType        #53:#54       // apply$mcD$sp$:(Lscala/Function0;)D
   #56 = InterfaceMethodref #9.#55        // scala/Function0.apply$mcD$sp$:(Lscala/Function0;)D
   #57 = Utf8               apply$mcF$sp
   #58 = Utf8               ()F
   #59 = Utf8               apply$mcF$sp$
   #60 = Utf8               (Lscala/Function0;)F
   #61 = NameAndType        #59:#60       // apply$mcF$sp$:(Lscala/Function0;)F
   #62 = InterfaceMethodref #9.#61        // scala/Function0.apply$mcF$sp$:(Lscala/Function0;)F
   #63 = Utf8               apply$mcI$sp
   #64 = Utf8               ()I
   #65 = Utf8               apply$mcI$sp$
   #66 = Utf8               (Lscala/Function0;)I
   #67 = NameAndType        #65:#66       // apply$mcI$sp$:(Lscala/Function0;)I
   #68 = InterfaceMethodref #9.#67        // scala/Function0.apply$mcI$sp$:(Lscala/Function0;)I
   #69 = Utf8               apply$mcJ$sp
   #70 = Utf8               ()J
   #71 = Utf8               apply$mcJ$sp$
   #72 = Utf8               (Lscala/Function0;)J
   #73 = NameAndType        #71:#72       // apply$mcJ$sp$:(Lscala/Function0;)J
   #74 = InterfaceMethodref #9.#73        // scala/Function0.apply$mcJ$sp$:(Lscala/Function0;)J
   #75 = Utf8               apply$mcS$sp
   #76 = Utf8               ()S
   #77 = Utf8               apply$mcS$sp$
   #78 = Utf8               (Lscala/Function0;)S
   #79 = NameAndType        #77:#78       // apply$mcS$sp$:(Lscala/Function0;)S
   #80 = InterfaceMethodref #9.#79        // scala/Function0.apply$mcS$sp$:(Lscala/Function0;)S
   #81 = Utf8               apply$mcV$sp
   #82 = Utf8               ()V
   #83 = Utf8               apply$mcV$sp$
   #84 = Utf8               (Lscala/Function0;)V
   #85 = NameAndType        #83:#84       // apply$mcV$sp$:(Lscala/Function0;)V
   #86 = InterfaceMethodref #9.#85        // scala/Function0.apply$mcV$sp$:(Lscala/Function0;)V
   #87 = Utf8               toString
   #88 = Utf8               ()Ljava/lang/String;
   #89 = Utf8               toString$
   #90 = Utf8               (Lscala/Function0;)Ljava/lang/String;
   #91 = NameAndType        #89:#90       // toString$:(Lscala/Function0;)Ljava/lang/String;
   #92 = InterfaceMethodref #9.#91        // scala/Function0.toString$:(Lscala/Function0;)Ljava/lang/String;
   #93 = Utf8               block
   #94 = NameAndType        #27:#28       // done:Z
   #95 = Fieldref           #2.#94        // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2.done:Z
   #96 = NameAndType        #29:#30       // thunk$1:Lscala/Function0;
   #97 = Fieldref           #2.#96        // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2.thunk$1:Lscala/Function0;
   #98 = Utf8               apply
   #99 = Utf8               ()Ljava/lang/Object;
  #100 = NameAndType        #98:#99       // apply:()Ljava/lang/Object;
  #101 = InterfaceMethodref #9.#100       // scala/Function0.apply:()Ljava/lang/Object;
  #102 = NameAndType        #24:#25       // result:Ljava/lang/Object;
  #103 = Fieldref           #2.#102       // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2.result:Ljava/lang/Object;
  #104 = Utf8               isReleasable
  #105 = NameAndType        #104:#32      // isReleasable:()Z
  #106 = Methodref          #2.#105       // scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2.isReleasable:()Z
  #107 = Utf8               ()TT;
  #108 = Utf8               <init>
  #109 = Utf8               (Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;Lscala/Function0;)V
  #110 = Utf8               $outer
  #111 = NameAndType        #108:#82      // "<init>":()V
  #112 = Methodref          #5.#111       // java/lang/Object."<init>":()V
  #113 = Utf8               Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;
  #114 = Utf8               Signature
  #115 = Utf8               Code
  #116 = Utf8               LineNumberTable
  #117 = Utf8               LocalVariableTable
  #118 = Utf8               StackMapTable
  #119 = Utf8               MethodParameters
  #120 = Utf8               InnerClasses
  #121 = Utf8               EnclosingMethod
  #122 = Utf8               SourceFile
  #123 = Utf8               ScalaInlineInfo
  #124 = Utf8               Scala
{
  private T result;
    descriptor: Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Signature: #26                          // TT;

  private boolean done;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private final scala.Function0 thunk$1;
    descriptor: Lscala/Function0;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public boolean apply$mcZ$sp();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #36                 // InterfaceMethod scala/Function0.apply$mcZ$sp$:(Lscala/Function0;)Z
         4: ireturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public byte apply$mcB$sp();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod scala/Function0.apply$mcB$sp$:(Lscala/Function0;)B
         4: ireturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public char apply$mcC$sp();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #50                 // InterfaceMethod scala/Function0.apply$mcC$sp$:(Lscala/Function0;)C
         4: ireturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public double apply$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod scala/Function0.apply$mcD$sp$:(Lscala/Function0;)D
         4: dreturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public float apply$mcF$sp();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/Function0.apply$mcF$sp$:(Lscala/Function0;)F
         4: freturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public int apply$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod scala/Function0.apply$mcI$sp$:(Lscala/Function0;)I
         4: ireturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public long apply$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod scala/Function0.apply$mcJ$sp$:(Lscala/Function0;)J
         4: lreturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public short apply$mcS$sp();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod scala/Function0.apply$mcS$sp$:(Lscala/Function0;)S
         4: ireturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public void apply$mcV$sp();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #86                 // InterfaceMethod scala/Function0.apply$mcV$sp$:(Lscala/Function0;)V
         4: return
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #92                 // InterfaceMethod scala/Function0.toString$:(Lscala/Function0;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public final boolean block();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field done:Z
         4: ifne          25
         7: aload_0
         8: aload_0
         9: getfield      #97                 // Field thunk$1:Lscala/Function0;
        12: invokeinterface #101,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        17: putfield      #103                // Field result:Ljava/lang/Object;
        20: aload_0
        21: iconst_1
        22: putfield      #95                 // Field done:Z
        25: aload_0
        26: invokevirtual #106                // Method isReleasable:()Z
        29: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 25 /* same */
      LineNumberTable:
        line 58: 0
        line 59: 7
        line 60: 20
        line 63: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public final boolean isReleasable();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field done:Z
         4: ireturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;

  public final T apply();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #103                // Field result:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;
    Signature: #107                         // ()TT;

  public scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2(scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$1, scala.Function0);
    descriptor: (Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;Lscala/Function0;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #97                 // Field thunk$1:Lscala/Function0;
         5: aload_0
         6: invokespecial #112                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: aconst_null
        11: putfield      #103                // Field result:Ljava/lang/Object;
        14: aload_0
        15: iconst_0
        16: putfield      #95                 // Field done:Z
        19: return
      LineNumberTable:
        line 50: 0
        line 54: 5
        line 55: 9
        line 56: 14
        line 54: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2;
            0      20     1 $outer   Lscala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1;
            0      20     2 thunk$1   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      thunk$1                        final
}
InnerClasses:
  public static #18= #7 of #17;           // ManagedBlocker=class java/util/concurrent/ForkJoinPool$ManagedBlocker of class java/util/concurrent/ForkJoinPool
  public static final #23= #20 of #22;    // DefaultThreadFactory=class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory of class scala/concurrent/impl/ExecutionContextImpl
  public final #12;                       // class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1
  public final #2;                        // class scala/concurrent/impl/ExecutionContextImpl$DefaultThreadFactory$$anon$1$$anon$2
EnclosingMethod: #12.#15                // scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory$$anon$1.blockOn
Signature: #3                           // Ljava/lang/Object;Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;Lscala/Function0<TT;>;
SourceFile: "ExecutionContextImpl.scala"
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 01 00 0E 00 6C 00 6D 01 00 62 00 63 01 00 27
   00 28 01 00 2D 00 2E 01 00 33 00 34 01 00 39 00
   3A 01 00 3F 00 40 01 00 45 00 46 01 00 4B 00 4C
   01 00 51 00 52 01 00 1F 00 20 01 00 5D 00 20 01
   00 68 00 20 01 00 57 00 58 01
  Scala: length = 0x0 (unknown attribute)

