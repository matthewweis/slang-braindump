Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$Take.class
  Last modified May 29, 2022; size 11051 bytes
  SHA-256 checksum c75ad41a3863770c186d97f2785db1be91846ece5ca028f37bc273eebf37d794
  Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$Take<U extends java.lang.Object, This extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Transformer<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Take<U, This>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParIterableLike$Take
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 35, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$Take
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$Take
    #3 = Utf8               <U:Ljava/lang/Object;This:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Take<TU;TThis;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$Transformer
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$Transformer
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #20 = Class              #19           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #21 = Utf8               StrictSplitterCheckTask
   #22 = Utf8               Take
   #23 = Utf8               Transformer
   #24 = Utf8               n
   #25 = Utf8               I
   #26 = Utf8               cbf
   #27 = Utf8               Lscala/collection/parallel/CombinerFactory;
   #28 = Utf8               Lscala/collection/parallel/CombinerFactory<TU;TThis;>;
   #29 = Utf8               pit
   #30 = Utf8               Lscala/collection/parallel/IterableSplitter;
   #31 = Utf8               Lscala/collection/parallel/IterableSplitter<TT;>;
   #32 = Utf8               result
   #33 = Utf8               Lscala/collection/parallel/Combiner;
   #34 = Utf8               Lscala/collection/parallel/Combiner<TU;TThis;>;
   #35 = Utf8               throwable
   #36 = Utf8               Ljava/lang/Throwable;
   #37 = Utf8               $outer
   #38 = Utf8               Lscala/collection/parallel/ParIterableLike;
   #39 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #40 = Utf8               ()Ljava/lang/String;
   #41 = Utf8               toString
   #42 = NameAndType        #41:#40       // toString:()Ljava/lang/String;
   #43 = Methodref          #5.#42        // java/lang/Object.toString:()Ljava/lang/String;
   #44 = Utf8               this
   #45 = Utf8               Lscala/collection/parallel/ParIterableLike$Take;
   #46 = Utf8               shouldSplitFurther
   #47 = Utf8               ()Z
   #48 = Utf8               shouldSplitFurther$
   #49 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #50 = NameAndType        #48:#49       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #51 = InterfaceMethodref #15.#50       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #52 = Utf8               signalAbort
   #53 = Utf8               ()V
   #54 = Utf8               signalAbort$
   #55 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #56 = NameAndType        #54:#55       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #57 = InterfaceMethodref #15.#56       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #58 = Utf8               toString$
   #59 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #60 = NameAndType        #58:#59       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #61 = InterfaceMethodref #15.#60       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #62 = Utf8               repr
   #63 = Utf8               ()Ljava/lang/Object;
   #64 = Utf8               scala/collection/parallel/Task
   #65 = Class              #64           // scala/collection/parallel/Task
   #66 = Utf8               repr$
   #67 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #68 = NameAndType        #66:#67       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #69 = InterfaceMethodref #65.#68       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #70 = Utf8               forwardThrowable
   #71 = Utf8               forwardThrowable$
   #72 = Utf8               (Lscala/collection/parallel/Task;)V
   #73 = NameAndType        #71:#72       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #74 = InterfaceMethodref #65.#73       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #75 = Utf8               tryLeaf
   #76 = Utf8               (Lscala/Option;)V
   #77 = Utf8               (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThis;>;>;)V
   #78 = Utf8               lastres
   #79 = Utf8               tryLeaf$
   #80 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #81 = NameAndType        #79:#80       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #82 = InterfaceMethodref #65.#81       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #83 = Utf8               Lscala/Option;
   #84 = Utf8               tryMerge
   #85 = Utf8               (Ljava/lang/Object;)V
   #86 = Utf8               t
   #87 = Utf8               tryMerge$
   #88 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #89 = NameAndType        #87:#88       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #90 = InterfaceMethodref #65.#89       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #91 = Utf8               Ljava/lang/Object;
   #92 = Utf8               mergeThrowables
   #93 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #94 = Utf8               that
   #95 = Utf8               mergeThrowables$
   #96 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #97 = NameAndType        #95:#96       // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #98 = InterfaceMethodref #65.#97       // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #99 = Utf8               Lscala/collection/parallel/Task;
  #100 = Utf8               ()Ljava/lang/Throwable;
  #101 = NameAndType        #35:#36       // throwable:Ljava/lang/Throwable;
  #102 = Fieldref           #2.#101       // scala/collection/parallel/ParIterableLike$Take.throwable:Ljava/lang/Throwable;
  #103 = Utf8               throwable_$eq
  #104 = Utf8               (Ljava/lang/Throwable;)V
  #105 = Utf8               x$1
  #106 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #107 = Utf8               ()Lscala/collection/parallel/IterableSplitter<TT;>;
  #108 = NameAndType        #29:#30       // pit:Lscala/collection/parallel/IterableSplitter;
  #109 = Fieldref           #2.#108       // scala/collection/parallel/ParIterableLike$Take.pit:Lscala/collection/parallel/IterableSplitter;
  #110 = Utf8               ()Lscala/collection/parallel/Combiner;
  #111 = Utf8               ()Lscala/collection/parallel/Combiner<TU;TThis;>;
  #112 = NameAndType        #32:#33       // result:Lscala/collection/parallel/Combiner;
  #113 = Fieldref           #2.#112       // scala/collection/parallel/ParIterableLike$Take.result:Lscala/collection/parallel/Combiner;
  #114 = Utf8               result_$eq
  #115 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #116 = Utf8               (Lscala/collection/parallel/Combiner<TU;TThis;>;)V
  #117 = Utf8               leaf
  #118 = Utf8               prev
  #119 = NameAndType        #29:#106      // pit:()Lscala/collection/parallel/IterableSplitter;
  #120 = Methodref          #2.#119       // scala/collection/parallel/ParIterableLike$Take.pit:()Lscala/collection/parallel/IterableSplitter;
  #121 = NameAndType        #24:#25       // n:I
  #122 = Fieldref           #2.#121       // scala/collection/parallel/ParIterableLike$Take.n:I
  #123 = Utf8               scala$collection$parallel$ParIterableLike$Take$$$outer
  #124 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #125 = NameAndType        #123:#124     // scala$collection$parallel$ParIterableLike$Take$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #126 = Methodref          #2.#125       // scala/collection/parallel/ParIterableLike$Take.scala$collection$parallel$ParIterableLike$Take$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #127 = NameAndType        #26:#27       // cbf:Lscala/collection/parallel/CombinerFactory;
  #128 = Fieldref           #2.#127       // scala/collection/parallel/ParIterableLike$Take.cbf:Lscala/collection/parallel/CombinerFactory;
  #129 = Utf8               scala/collection/parallel/CombinerFactory
  #130 = Class              #129          // scala/collection/parallel/CombinerFactory
  #131 = Utf8               apply
  #132 = NameAndType        #131:#110     // apply:()Lscala/collection/parallel/Combiner;
  #133 = InterfaceMethodref #130.#132     // scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
  #134 = Utf8               reuse
  #135 = Utf8               (Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #136 = NameAndType        #134:#135     // reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #137 = InterfaceMethodref #17.#136      // scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #138 = Utf8               scala/collection/parallel/IterableSplitter
  #139 = Class              #138          // scala/collection/parallel/IterableSplitter
  #140 = Utf8               take2combiner
  #141 = Utf8               (ILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #142 = NameAndType        #140:#141     // take2combiner:(ILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #143 = InterfaceMethodref #139.#142     // scala/collection/parallel/IterableSplitter.take2combiner:(ILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #144 = NameAndType        #114:#115     // result_$eq:(Lscala/collection/parallel/Combiner;)V
  #145 = Methodref          #2.#144       // scala/collection/parallel/ParIterableLike$Take.result_$eq:(Lscala/collection/parallel/Combiner;)V
  #146 = Utf8               newSubtask
  #147 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #148 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #149 = Utf8               p
  #150 = Utf8               java/lang/UnsupportedOperationException
  #151 = Class              #150          // java/lang/UnsupportedOperationException
  #152 = Utf8               <init>
  #153 = NameAndType        #152:#53      // "<init>":()V
  #154 = Methodref          #151.#153     // java/lang/UnsupportedOperationException."<init>":()V
  #155 = Utf8               split
  #156 = Utf8               ()Lscala/collection/immutable/Seq;
  #157 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Take<TU;TThis;>;>;>;
  #158 = Utf8               splitWithSignalling
  #159 = NameAndType        #158:#156     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #160 = InterfaceMethodref #139.#159     // scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #161 = Utf8               scala/runtime/BoxesRunTime
  #162 = Class              #161          // scala/runtime/BoxesRunTime
  #163 = Utf8               boxToInteger
  #164 = Utf8               (I)Ljava/lang/Integer;
  #165 = NameAndType        #163:#164     // boxToInteger:(I)Ljava/lang/Integer;
  #166 = Methodref          #162.#165     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #167 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #168 = MethodType         #167          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #169 = Utf8               $anonfun$split$2$adapted
  #170 = Utf8               (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #171 = NameAndType        #169:#170     // $anonfun$split$2$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #172 = Methodref          #2.#171       // scala/collection/parallel/ParIterableLike$Take.$anonfun$split$2$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #173 = MethodHandle       6:#172        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$2$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #174 = MethodType         #170          //  (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #175 = Integer            5
  #176 = Integer            1
  #177 = Utf8               java/lang/invoke/LambdaMetafactory
  #178 = Class              #177          // java/lang/invoke/LambdaMetafactory
  #179 = Utf8               altMetafactory
  #180 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #181 = NameAndType        #179:#180     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #182 = Methodref          #178.#181     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #183 = MethodHandle       6:#182        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #184 = Utf8               ()Lscala/Function2;
  #185 = NameAndType        #131:#184     // apply:()Lscala/Function2;
  #186 = InvokeDynamic      #0:#185       // #0:apply:()Lscala/Function2;
  #187 = Utf8               scala/collection/immutable/Seq
  #188 = Class              #187          // scala/collection/immutable/Seq
  #189 = Utf8               scanLeft
  #190 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #191 = NameAndType        #189:#190     // scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #192 = InterfaceMethodref #188.#191     // scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #193 = Utf8               zip
  #194 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #195 = NameAndType        #193:#194     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #196 = InterfaceMethodref #188.#195     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #197 = Utf8               scala/collection/IterableOps
  #198 = Class              #197          // scala/collection/IterableOps
  #199 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #200 = MethodType         #199          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #201 = Utf8               $anonfun$split$3$adapted
  #202 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #203 = NameAndType        #201:#202     // $anonfun$split$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #204 = Methodref          #2.#203       // scala/collection/parallel/ParIterableLike$Take.$anonfun$split$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #205 = MethodHandle       6:#204        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #206 = MethodType         #202          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #207 = Utf8               ()Lscala/Function1;
  #208 = NameAndType        #131:#207     // apply:()Lscala/Function1;
  #209 = InvokeDynamic      #1:#208       // #1:apply:()Lscala/Function1;
  #210 = Utf8               withFilter
  #211 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #212 = NameAndType        #210:#211     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #213 = InterfaceMethodref #198.#212     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #214 = Utf8               $anonfun$split$4$adapted
  #215 = Utf8               (Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Ljava/lang/Object;
  #216 = NameAndType        #214:#215     // $anonfun$split$4$adapted:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Ljava/lang/Object;
  #217 = Methodref          #2.#216       // scala/collection/parallel/ParIterableLike$Take.$anonfun$split$4$adapted:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Ljava/lang/Object;
  #218 = MethodHandle       6:#217        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$4$adapted:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Ljava/lang/Object;
  #219 = Utf8               (Lscala/collection/parallel/ParIterableLike$Take;)Lscala/Function1;
  #220 = NameAndType        #131:#219     // apply:(Lscala/collection/parallel/ParIterableLike$Take;)Lscala/Function1;
  #221 = InvokeDynamic      #2:#220       // #2:apply:(Lscala/collection/parallel/ParIterableLike$Take;)Lscala/Function1;
  #222 = Utf8               scala/collection/WithFilter
  #223 = Class              #222          // scala/collection/WithFilter
  #224 = Methodref          #223.#212     // scala/collection/WithFilter.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #225 = Utf8               $anonfun$split$5
  #226 = Utf8               (Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #227 = NameAndType        #225:#226     // $anonfun$split$5:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #228 = Methodref          #2.#227       // scala/collection/parallel/ParIterableLike$Take.$anonfun$split$5:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #229 = MethodHandle       6:#228        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$5:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #230 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #231 = MethodType         #230          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #232 = InvokeDynamic      #3:#220       // #3:apply:(Lscala/collection/parallel/ParIterableLike$Take;)Lscala/Function1;
  #233 = Utf8               map
  #234 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #235 = NameAndType        #233:#234     // map:(Lscala/Function1;)Ljava/lang/Object;
  #236 = Methodref          #223.#235     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #237 = Utf8               pits
  #238 = Utf8               Lscala/collection/immutable/Seq;
  #239 = Utf8               sizes
  #240 = Utf8               merge
  #241 = Utf8               (Lscala/collection/parallel/ParIterableLike$Take;)V
  #242 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Take<TU;TThis;>;)V
  #243 = NameAndType        #32:#110      // result:()Lscala/collection/parallel/Combiner;
  #244 = Methodref          #2.#243       // scala/collection/parallel/ParIterableLike$Take.result:()Lscala/collection/parallel/Combiner;
  #245 = Utf8               scala/collection/parallel/Combiner
  #246 = Class              #245          // scala/collection/parallel/Combiner
  #247 = Utf8               combine
  #248 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #249 = NameAndType        #247:#248     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #250 = InterfaceMethodref #246.#249     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #251 = Utf8               requiresStrictSplitters
  #252 = NameAndType        #37:#38       // $outer:Lscala/collection/parallel/ParIterableLike;
  #253 = Fieldref           #2.#252       // scala/collection/parallel/ParIterableLike$Take.$outer:Lscala/collection/parallel/ParIterableLike;
  #254 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #255 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #256 = NameAndType        #240:#241     // merge:(Lscala/collection/parallel/ParIterableLike$Take;)V
  #257 = Methodref          #2.#256       // scala/collection/parallel/ParIterableLike$Take.merge:(Lscala/collection/parallel/ParIterableLike$Take;)V
  #258 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #259 = NameAndType        #146:#147     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #260 = Methodref          #2.#259       // scala/collection/parallel/ParIterableLike$Take.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #261 = Utf8               $anonfun$split$2
  #262 = Utf8               (ILscala/collection/parallel/IterableSplitter;)I
  #263 = Utf8               x$9
  #264 = Utf8               x$10
  #265 = Utf8               remaining
  #266 = Utf8               ()I
  #267 = NameAndType        #265:#266     // remaining:()I
  #268 = InterfaceMethodref #139.#267     // scala/collection/parallel/IterableSplitter.remaining:()I
  #269 = Utf8               $anonfun$split$3
  #270 = Utf8               (Lscala/Tuple2;)Z
  #271 = Utf8               check$ifrefutable$1
  #272 = Utf8               Lscala/Tuple2;
  #273 = Utf8               scala/Tuple2
  #274 = Class              #273          // scala/Tuple2
  #275 = Utf8               $anonfun$split$4
  #276 = Utf8               (Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Z
  #277 = Utf8               $this
  #278 = Utf8               x$11
  #279 = Utf8               _2$mcI$sp
  #280 = NameAndType        #279:#266     // _2$mcI$sp:()I
  #281 = Methodref          #274.#280     // scala/Tuple2._2$mcI$sp:()I
  #282 = Utf8               scala/MatchError
  #283 = Class              #282          // scala/MatchError
  #284 = NameAndType        #152:#85      // "<init>":(Ljava/lang/Object;)V
  #285 = Methodref          #283.#284     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #286 = Utf8               untilp
  #287 = Utf8               x$12
  #288 = Utf8               _1
  #289 = NameAndType        #288:#63      // _1:()Ljava/lang/Object;
  #290 = Methodref          #274.#289     // scala/Tuple2._1:()Ljava/lang/Object;
  #291 = Utf8               (Lscala/collection/parallel/ParIterableLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
  #292 = NameAndType        #152:#291     // "<init>":(Lscala/collection/parallel/ParIterableLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
  #293 = Methodref          #2.#292       // scala/collection/parallel/ParIterableLike$Take."<init>":(Lscala/collection/parallel/ParIterableLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
  #294 = Utf8               (ILscala/collection/parallel/CombinerFactory<TU;TThis;>;Lscala/collection/parallel/IterableSplitter<TT;>;)V
  #295 = Methodref          #5.#153       // java/lang/Object."<init>":()V
  #296 = Utf8               $init$
  #297 = NameAndType        #296:#72      // $init$:(Lscala/collection/parallel/Task;)V
  #298 = InterfaceMethodref #65.#297      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #299 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #300 = NameAndType        #296:#299     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #301 = InterfaceMethodref #20.#300      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #302 = NameAndType        #296:#55      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #303 = InterfaceMethodref #15.#302      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #304 = Utf8               unboxToInt
  #305 = Utf8               (Ljava/lang/Object;)I
  #306 = NameAndType        #304:#305     // unboxToInt:(Ljava/lang/Object;)I
  #307 = Methodref          #162.#306     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #308 = NameAndType        #261:#262     // $anonfun$split$2:(ILscala/collection/parallel/IterableSplitter;)I
  #309 = Methodref          #2.#308       // scala/collection/parallel/ParIterableLike$Take.$anonfun$split$2:(ILscala/collection/parallel/IterableSplitter;)I
  #310 = NameAndType        #269:#270     // $anonfun$split$3:(Lscala/Tuple2;)Z
  #311 = Methodref          #2.#310       // scala/collection/parallel/ParIterableLike$Take.$anonfun$split$3:(Lscala/Tuple2;)Z
  #312 = Utf8               boxToBoolean
  #313 = Utf8               (Z)Ljava/lang/Boolean;
  #314 = NameAndType        #312:#313     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #315 = Methodref          #162.#314     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #316 = NameAndType        #275:#276     // $anonfun$split$4:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Z
  #317 = Methodref          #2.#316       // scala/collection/parallel/ParIterableLike$Take.$anonfun$split$4:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Z
  #318 = Utf8               $deserializeLambda$
  #319 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #320 = Utf8               scala/runtime/LambdaDeserialize
  #321 = Class              #320          // scala/runtime/LambdaDeserialize
  #322 = Utf8               bootstrap
  #323 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #324 = NameAndType        #322:#323     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #325 = Methodref          #321.#324     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #326 = MethodHandle       6:#325        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #327 = Utf8               lambdaDeserialize
  #328 = NameAndType        #327:#319     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #329 = InvokeDynamic      #4:#328       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #330 = Utf8               Signature
  #331 = Utf8               Code
  #332 = Utf8               LineNumberTable
  #333 = Utf8               LocalVariableTable
  #334 = Utf8               MethodParameters
  #335 = Utf8               StackMapTable
  #336 = Utf8               InnerClasses
  #337 = Utf8               SourceFile
  #338 = Utf8               BootstrapMethods
  #339 = Utf8               ScalaInlineInfo
  #340 = Utf8               Scala
{
  private final int n;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.parallel.CombinerFactory<U, This> cbf;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/collection/parallel/CombinerFactory<TU;TThis;>;

  private final scala.collection.parallel.IterableSplitter<T> pit;
    descriptor: Lscala/collection/parallel/IterableSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #31                          // Lscala/collection/parallel/IterableSplitter<TT;>;

  private volatile scala.collection.parallel.Combiner<U, This> result;
    descriptor: Lscala/collection/parallel/Combiner;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #34                          // Lscala/collection/parallel/Combiner<TU;TThis;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParIterableLike $outer;
    descriptor: Lscala/collection/parallel/ParIterableLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #43                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #51                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #57                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #69                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<U, This>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #82                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       6     1 lastres   Lscala/Option;
    Signature: #77                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThis;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #90                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #98                 // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #93                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #102                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #102                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.IterableSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #109                // Field pit:Lscala/collection/parallel/IterableSplitter;
         4: areturn
      LineNumberTable:
        line 1132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;
    Signature: #107                         // ()Lscala/collection/parallel/IterableSplitter<TT;>;

  public scala.collection.parallel.Combiner<U, This> result();
    descriptor: ()Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #113                // Field result:Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;
    Signature: #111                         // ()Lscala/collection/parallel/Combiner<TU;TThis;>;

  public void result_$eq(scala.collection.parallel.Combiner<U, This>);
    descriptor: (Lscala/collection/parallel/Combiner;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #113                // Field result:Lscala/collection/parallel/Combiner;
         5: return
      LineNumberTable:
        line 1134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       6     1   x$1   Lscala/collection/parallel/Combiner;
    Signature: #116                         // (Lscala/collection/parallel/Combiner<TU;TThis;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.Combiner<U, This>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #120                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         5: aload_0
         6: getfield      #122                // Field n:I
         9: aload_0
        10: invokevirtual #126                // Method scala$collection$parallel$ParIterableLike$Take$$$outer:()Lscala/collection/parallel/ParIterableLike;
        13: aload_1
        14: aload_0
        15: getfield      #128                // Field cbf:Lscala/collection/parallel/CombinerFactory;
        18: invokeinterface #133,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        23: invokeinterface #137,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        28: invokeinterface #143,  3          // InterfaceMethod scala/collection/parallel/IterableSplitter.take2combiner:(ILscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        33: invokevirtual #145                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        36: return
      LineNumberTable:
        line 1136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0      37     1  prev   Lscala/Option;
    Signature: #77                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThis;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #151                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #154                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 1138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #148                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Take<U, This>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #120                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #160,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
         9: astore_1
        10: aload_1
        11: iconst_0
        12: invokestatic  #166                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        15: invokedynamic #186,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
        20: invokeinterface #192,  3          // InterfaceMethod scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        25: checkcast     #188                // class scala/collection/immutable/Seq
        28: astore_2
        29: aload_1
        30: aload_2
        31: invokeinterface #196,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        36: checkcast     #198                // class scala/collection/IterableOps
        39: invokedynamic #209,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        44: invokeinterface #213,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        49: aload_0
        50: invokedynamic #221,  0            // InvokeDynamic #2:apply:(Lscala/collection/parallel/ParIterableLike$Take;)Lscala/Function1;
        55: invokevirtual #224                // Method scala/collection/WithFilter.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        58: aload_0
        59: invokedynamic #232,  0            // InvokeDynamic #3:apply:(Lscala/collection/parallel/ParIterableLike$Take;)Lscala/Function1;
        64: invokevirtual #236                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
        67: checkcast     #188                // class scala/collection/immutable/Seq
        70: areturn
      LineNumberTable:
        line 1140: 0
        line 1141: 10
        line 1142: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      60     1  pits   Lscala/collection/immutable/Seq;
           29      41     2 sizes   Lscala/collection/immutable/Seq;
            0      71     0  this   Lscala/collection/parallel/ParIterableLike$Take;
    Signature: #157                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Take<TU;TThis;>;>;>;

  public void merge(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Take<U, This>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Take;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #244                // Method result:()Lscala/collection/parallel/Combiner;
         5: aload_1
         6: invokevirtual #244                // Method result:()Lscala/collection/parallel/Combiner;
         9: invokeinterface #250,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        14: invokevirtual #145                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        17: return
      LineNumberTable:
        line 1147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0      18     1  that   Lscala/collection/parallel/ParIterableLike$Take;
    Signature: #242                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Take<TU;TThis;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 1148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Take$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #253                // Field $outer:Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #126                // Method scala$collection$parallel$ParIterableLike$Take$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #126                // Method scala$collection$parallel$ParIterableLike$Take$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$Take
         5: invokevirtual #257                // Method merge:(Lscala/collection/parallel/ParIterableLike$Take;)V
         8: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #260                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #246                // class scala/collection/parallel/Combiner
         5: invokevirtual #145                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
         8: return
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #244                // Method result:()Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Take;

  public static final int $anonfun$split$2(int, scala.collection.parallel.IterableSplitter);
    descriptor: (ILscala/collection/parallel/IterableSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokeinterface #268,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         7: iadd
         8: ireturn
      LineNumberTable:
        line 1141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$9   I
            0       9     1  x$10   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$9                            final
      x$10                           final

  public static final boolean $anonfun$split$3(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 1142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final boolean $anonfun$split$4(scala.collection.parallel.ParIterableLike$Take, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        30
         6: aload_3
         7: invokevirtual #281                // Method scala/Tuple2._2$mcI$sp:()I
        10: istore        4
        12: iload         4
        14: aload_0
        15: getfield      #122                // Field n:I
        18: if_icmpgt     25
        21: iconst_1
        22: goto          26
        25: iconst_0
        26: istore_2
        27: goto          42
        30: goto          33
        33: new           #283                // class scala/MatchError
        36: dup
        37: aload_3
        38: invokespecial #285                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        41: athrow
        42: iload_2
        43: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 25
          locals = [ top, class scala/Tuple2, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParIterableLike$Take, class scala/Tuple2, int, class scala/Tuple2, int ]
          stack = []
      LineNumberTable:
        line 1142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      18     4 untilp   I
            0      44     0 $this   Lscala/collection/parallel/ParIterableLike$Take;
            0      44     1  x$11   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$11                           final

  public static final scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$5(scala.collection.parallel.ParIterableLike$Take, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        93
         6: aload_3
         7: invokevirtual #290                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #139                // class scala/collection/parallel/IterableSplitter
        13: astore        4
        15: aload_3
        16: invokevirtual #281                // Method scala/Tuple2._2$mcI$sp:()I
        19: istore        5
        21: iload         5
        23: aload         4
        25: invokeinterface #268,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
        30: iadd
        31: aload_0
        32: getfield      #122                // Field n:I
        35: if_icmpge     65
        38: new           #2                  // class scala/collection/parallel/ParIterableLike$Take
        41: dup
        42: aload_0
        43: invokevirtual #126                // Method scala$collection$parallel$ParIterableLike$Take$$$outer:()Lscala/collection/parallel/ParIterableLike;
        46: aload         4
        48: invokeinterface #268,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
        53: aload_0
        54: getfield      #128                // Field cbf:Lscala/collection/parallel/CombinerFactory;
        57: aload         4
        59: invokespecial #293                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
        62: goto          89
        65: new           #2                  // class scala/collection/parallel/ParIterableLike$Take
        68: dup
        69: aload_0
        70: invokevirtual #126                // Method scala$collection$parallel$ParIterableLike$Take$$$outer:()Lscala/collection/parallel/ParIterableLike;
        73: aload_0
        74: getfield      #122                // Field n:I
        77: iload         5
        79: isub
        80: aload_0
        81: getfield      #128                // Field cbf:Lscala/collection/parallel/CombinerFactory;
        84: aload         4
        86: invokespecial #293                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
        89: astore_2
        90: goto          105
        93: goto          96
        96: new           #283                // class scala/MatchError
        99: dup
       100: aload_3
       101: invokespecial #285                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       104: athrow
       105: aload_2
       106: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 65
          locals = [ class scala/collection/parallel/ParIterableLike$Take, class scala/Tuple2, top, class scala/Tuple2, class scala/collection/parallel/IterableSplitter, int ]
          stack = []
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/ParIterableLike$Take ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParIterableLike$Take, class scala/Tuple2, class scala/collection/parallel/ParIterableLike$Take, class scala/Tuple2, class scala/collection/parallel/IterableSplitter, int ]
          stack = []
      LineNumberTable:
        line 1142: 0
        line 1143: 21
        line 1144: 65
        line 1142: 93
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      78     4     p   Lscala/collection/parallel/IterableSplitter;
           21      72     5 untilp   I
            0     107     0 $this   Lscala/collection/parallel/ParIterableLike$Take;
            0     107     1  x$12   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$12                           final

  public scala.collection.parallel.ParIterableLike$Take(int, scala.collection.parallel.CombinerFactory<U, This>, scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/ParIterableLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: iload_2
         2: putfield      #122                // Field n:I
         5: aload_0
         6: aload_3
         7: putfield      #128                // Field cbf:Lscala/collection/parallel/CombinerFactory;
        10: aload_0
        11: aload         4
        13: putfield      #109                // Field pit:Lscala/collection/parallel/IterableSplitter;
        16: aload_1
        17: ifnonnull     22
        20: aconst_null
        21: athrow
        22: aload_0
        23: aload_1
        24: putfield      #253                // Field $outer:Lscala/collection/parallel/ParIterableLike;
        27: aload_0
        28: invokespecial #295                // Method java/lang/Object."<init>":()V
        31: aload_0
        32: invokestatic  #298                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        35: aload_0
        36: invokestatic  #301                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        39: aload_0
        40: invokestatic  #303                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        43: aload_0
        44: aconst_null
        45: putfield      #113                // Field result:Lscala/collection/parallel/Combiner;
        48: return
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 1132: 0
        line 1131: 16
        line 1133: 27
        line 1134: 43
        line 1132: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/collection/parallel/ParIterableLike$Take;
            0      49     1 $outer   Lscala/collection/parallel/ParIterableLike;
            0      49     2     n   I
            0      49     3   cbf   Lscala/collection/parallel/CombinerFactory;
            0      49     4   pit   Lscala/collection/parallel/IterableSplitter;
    Signature: #294                         // (ILscala/collection/parallel/CombinerFactory<TU;TThis;>;Lscala/collection/parallel/IterableSplitter<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      n                              final
      cbf                            final
      pit                            final

  public static final java.lang.Object $anonfun$split$2$adapted(java.lang.Object, scala.collection.parallel.IterableSplitter);
    descriptor: (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #307                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #309                // Method $anonfun$split$2:(ILscala/collection/parallel/IterableSplitter;)I
         8: invokestatic  #166                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 1141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$9   Ljava/lang/Object;
            0      12     1  x$10   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$9                            final
      x$10                           final

  public static final java.lang.Object $anonfun$split$3$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #311                // Method $anonfun$split$3:(Lscala/Tuple2;)Z
         4: invokestatic  #315                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 1142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final java.lang.Object $anonfun$split$4$adapted(scala.collection.parallel.ParIterableLike$Take, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #317                // Method $anonfun$split$4:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Z
         5: invokestatic  #315                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 1142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lscala/collection/parallel/ParIterableLike$Take;
            0       9     1  x$11   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$11                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #329,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #21= #20 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #22= #2 of #17;                  // Take=class scala/collection/parallel/ParIterableLike$Take of class scala/collection/parallel/ParIterableLike
  public #23= #7 of #17;                  // Transformer=class scala/collection/parallel/ParIterableLike$Transformer of class scala/collection/parallel/ParIterableLike
Signature: #3                           // <U:Ljava/lang/Object;This:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Take<TU;TThis;>;>;
SourceFile: "ParIterableLike.scala"
BootstrapMethods:
  0: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #173 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$2$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #174 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #175 5
      #176 1
      #174 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  1: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #200 (Ljava/lang/Object;)Ljava/lang/Object;
      #205 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #206 (Lscala/Tuple2;)Ljava/lang/Object;
      #175 5
      #176 1
      #206 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #200 (Ljava/lang/Object;)Ljava/lang/Object;
      #218 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$4$adapted:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Ljava/lang/Object;
      #206 (Lscala/Tuple2;)Ljava/lang/Object;
      #175 5
      #176 1
      #206 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #200 (Ljava/lang/Object;)Ljava/lang/Object;
      #229 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$5:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #231 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #175 5
      #176 1
      #231 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  4: #326 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$2$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #205 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #218 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$4$adapted:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Ljava/lang/Object;
      #229 REF_invokeStatic scala/collection/parallel/ParIterableLike$Take.$anonfun$split$5:(Lscala/collection/parallel/ParIterableLike$Take;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0xAE (unknown attribute)
   01 00 00 22 01 05 01 06 01 00 A9 00 AA 01 01 0D
   01 0E 01 00 C9 00 CA 01 01 13 01 14 01 00 D6 00
   D7 01 00 E1 00 E2 01 00 98 01 23 00 00 46 00 35
   00 00 75 00 4C 00 00 F0 00 55 00 00 F0 00 F1 00
   00 5C 00 48 00 00 92 01 02 00 00 92 00 93 00 00
   1D 00 6A 00 00 3E 00 3F 00 00 FB 00 2F 00 00 20
   00 3F 00 00 20 00 6E 00 00 72 00 55 00 00 72 00
   73 00 00 FE 00 7C 00 00 27 00 28 01 00 FF 00 7C
   00 00 7B 00 7C 00 00 2E 00 2F 00 00 34 00 35 00
   00 9B 00 9C 00 00 23 00 64 00 00 67 00 68 00 00
   29 00 28 00 00 4B 00 4C 00 00 54 00 55 00
  Scala: length = 0x0 (unknown attribute)

