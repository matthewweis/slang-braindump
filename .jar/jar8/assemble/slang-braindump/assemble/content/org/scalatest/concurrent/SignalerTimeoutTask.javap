Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/concurrent/SignalerTimeoutTask.class
  Last modified May 29, 2022; size 3143 bytes
  SHA-256 checksum 1db1fb27fe20ac894ef1bb469cd4ce34cca120985aa2c43bc29c841b157360e0
  Compiled from "SignalerTimeoutTask.scala"
public class org.scalatest.concurrent.SignalerTimeoutTask implements org.scalatest.TimerTask
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/concurrent/SignalerTimeoutTask
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 9, attributes: 4
Constant pool:
   #1 = Utf8               org/scalatest/concurrent/SignalerTimeoutTask
   #2 = Class              #1             // org/scalatest/concurrent/SignalerTimeoutTask
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               org/scalatest/TimerTask
   #6 = Class              #5             // org/scalatest/TimerTask
   #7 = Utf8               SignalerTimeoutTask.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005)3Qa\u0003\u0007\u0001\u001dIA\u0001b\b\u0001\u0003\u0002\u0003\u0006I!\t\u0005\tI\u0001\u0011\t\u0011)A\u0005K!)\u0011\u0006\u0001C\u0001U!9a\u0006\u0001a\u0001\n\u0003y\u0003b\u0002\u001c\u0001\u0001\u0004%\ta\u000e\u0005\u0007{\u0001\u0001\u000b\u0015\u0002\u0019\t\u000f\t\u0003\u0001\u0019!C\u0001_!91\t\u0001a\u0001\n\u0003!\u0005B\u0002$\u0001A\u0003&\u0001\u0007C\u0003I\u0001\u0011\u0005\u0013JA\nTS\u001et\u0017\r\\3s)&lWm\\;u)\u0006\u001c8N\u0003\u0002\u000e\u001d\u0005Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005=\u0001\u0012!C:dC2\fG/Z:u\u0015\u0005\t\u0012aA8sON\u0019\u0001aE\u000e\u0011\u0005QIR\"A\u000b\u000b\u0005Y9\u0012\u0001\u00027b]\u001eT\u0011\u0001G\u0001\u0005U\u00064\u0018-\u0003\u0002\u001b+\t1qJ\u00196fGR\u0004\"\u0001H\u000f\u000e\u00039I!A\b\b\u0003\u0013QKW.\u001a:UCN\\\u0017A\u0003;fgR$\u0006N]3bI\u000e\u0001\u0001C\u0001\u000b#\u0013\t\u0019SC\u0001\u0004UQJ,\u0017\rZ\u0001\nS:$XM\u001d:vaR\u0004\"AJ\u0014\u000e\u00031I!\u0001\u000b\u0007\u0003\u0011MKwM\\1mKJ\fa\u0001P5oSRtDcA\u0016-[A\u0011a\u0005\u0001\u0005\u0006?\r\u0001\r!\t\u0005\u0006I\r\u0001\r!J\u0001\ti&lW\rZ(viV\t\u0001\u0007\u0005\u00022i5\t!GC\u00014\u0003\u0015\u00198-\u00197b\u0013\t)$GA\u0004C_>dW-\u00198\u0002\u0019QLW.\u001a3PkR|F%Z9\u0015\u0005aZ\u0004CA\u0019:\u0013\tQ$G\u0001\u0003V]&$\bb\u0002\u001f\u0006\u0003\u0003\u0005\r\u0001M\u0001\u0004q\u0012\n\u0014!\u0003;j[\u0016$w*\u001e;!Q\t1q\b\u0005\u00022\u0001&\u0011\u0011I\r\u0002\tm>d\u0017\r^5mK\u0006ab.Z3e)>\u0014Vm]3u\u0013:$XM\u001d:vaR,Gm\u0015;biV\u001c\u0018\u0001\t8fK\u0012$vNU3tKRLe\u000e^3seV\u0004H/\u001a3Ti\u0006$Xo]0%KF$\"\u0001O#\t\u000fqB\u0011\u0011!a\u0001a\u0005ib.Z3e)>\u0014Vm]3u\u0013:$XM\u001d:vaR,Gm\u0015;biV\u001c\b\u0005\u000b\u0002\n\u007f\u0005\u0019!/\u001e8\u0015\u0003a\u0002
  #11 = Utf8               testThread
  #12 = Utf8               Ljava/lang/Thread;
  #13 = Utf8               interrupt
  #14 = Utf8               Lorg/scalatest/concurrent/Signaler;
  #15 = Utf8               timedOut
  #16 = Utf8               Z
  #17 = Utf8               needToResetInterruptedStatus
  #18 = Utf8               timerTaskRef
  #19 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;
  #20 = Utf8               Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/util/TimerTask;>;>;
  #21 = Utf8               cancel
  #22 = Utf8               ()V
  #23 = Utf8               cancel$
  #24 = Utf8               (Lorg/scalatest/TimerTask;)V
  #25 = NameAndType        #23:#24        // cancel$:(Lorg/scalatest/TimerTask;)V
  #26 = InterfaceMethodref #6.#25         // org/scalatest/TimerTask.cancel$:(Lorg/scalatest/TimerTask;)V
  #27 = Utf8               this
  #28 = Utf8               Lorg/scalatest/concurrent/SignalerTimeoutTask;
  #29 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference;
  #30 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/util/TimerTask;>;>;
  #31 = NameAndType        #18:#19        // timerTaskRef:Ljava/util/concurrent/atomic/AtomicReference;
  #32 = Fieldref           #2.#31         // org/scalatest/concurrent/SignalerTimeoutTask.timerTaskRef:Ljava/util/concurrent/atomic/AtomicReference;
  #33 = Utf8               org$scalatest$TimerTask$_setter_$timerTaskRef_$eq
  #34 = Utf8               (Ljava/util/concurrent/atomic/AtomicReference;)V
  #35 = Utf8               (Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/util/TimerTask;>;>;)V
  #36 = Utf8               x$1
  #37 = Utf8               ()Z
  #38 = NameAndType        #15:#16        // timedOut:Z
  #39 = Fieldref           #2.#38         // org/scalatest/concurrent/SignalerTimeoutTask.timedOut:Z
  #40 = Utf8               timedOut_$eq
  #41 = Utf8               (Z)V
  #42 = NameAndType        #17:#16        // needToResetInterruptedStatus:Z
  #43 = Fieldref           #2.#42         // org/scalatest/concurrent/SignalerTimeoutTask.needToResetInterruptedStatus:Z
  #44 = Utf8               needToResetInterruptedStatus_$eq
  #45 = Utf8               run
  #46 = NameAndType        #40:#41        // timedOut_$eq:(Z)V
  #47 = Methodref          #2.#46         // org/scalatest/concurrent/SignalerTimeoutTask.timedOut_$eq:(Z)V
  #48 = NameAndType        #11:#12        // testThread:Ljava/lang/Thread;
  #49 = Fieldref           #2.#48         // org/scalatest/concurrent/SignalerTimeoutTask.testThread:Ljava/lang/Thread;
  #50 = Utf8               java/lang/Thread
  #51 = Class              #50            // java/lang/Thread
  #52 = Utf8               isInterrupted
  #53 = NameAndType        #52:#37        // isInterrupted:()Z
  #54 = Methodref          #51.#53        // java/lang/Thread.isInterrupted:()Z
  #55 = NameAndType        #13:#14        // interrupt:Lorg/scalatest/concurrent/Signaler;
  #56 = Fieldref           #2.#55         // org/scalatest/concurrent/SignalerTimeoutTask.interrupt:Lorg/scalatest/concurrent/Signaler;
  #57 = Utf8               org/scalatest/concurrent/Signaler
  #58 = Class              #57            // org/scalatest/concurrent/Signaler
  #59 = Utf8               apply
  #60 = Utf8               (Ljava/lang/Thread;)V
  #61 = NameAndType        #59:#60        // apply:(Ljava/lang/Thread;)V
  #62 = InterfaceMethodref #58.#61        // org/scalatest/concurrent/Signaler.apply:(Ljava/lang/Thread;)V
  #63 = NameAndType        #44:#41        // needToResetInterruptedStatus_$eq:(Z)V
  #64 = Methodref          #2.#63         // org/scalatest/concurrent/SignalerTimeoutTask.needToResetInterruptedStatus_$eq:(Z)V
  #65 = Utf8               beforeIsInterrupted
  #66 = Utf8               afterIsInterrupted
  #67 = Utf8               <init>
  #68 = Utf8               (Ljava/lang/Thread;Lorg/scalatest/concurrent/Signaler;)V
  #69 = NameAndType        #67:#22        // "<init>":()V
  #70 = Methodref          #4.#69         // java/lang/Object."<init>":()V
  #71 = Utf8               $init$
  #72 = NameAndType        #71:#24        // $init$:(Lorg/scalatest/TimerTask;)V
  #73 = InterfaceMethodref #6.#72         // org/scalatest/TimerTask.$init$:(Lorg/scalatest/TimerTask;)V
  #74 = Utf8               scala/runtime/Statics
  #75 = Class              #74            // scala/runtime/Statics
  #76 = Utf8               releaseFence
  #77 = NameAndType        #76:#22        // releaseFence:()V
  #78 = Methodref          #75.#77        // scala/runtime/Statics.releaseFence:()V
  #79 = Utf8               Signature
  #80 = Utf8               Code
  #81 = Utf8               LineNumberTable
  #82 = Utf8               LocalVariableTable
  #83 = Utf8               MethodParameters
  #84 = Utf8               StackMapTable
  #85 = Utf8               SourceFile
  #86 = Utf8               RuntimeVisibleAnnotations
  #87 = Utf8               ScalaInlineInfo
  #88 = Utf8               ScalaSig
{
  private final java.lang.Thread testThread;
    descriptor: Ljava/lang/Thread;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.scalatest.concurrent.Signaler interrupt;
    descriptor: Lorg/scalatest/concurrent/Signaler;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile boolean timedOut;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile boolean needToResetInterruptedStatus;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private java.util.concurrent.atomic.AtomicReference<scala.Option<java.util.TimerTask>> timerTaskRef;
    descriptor: Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0002) ACC_PRIVATE
    Signature: #20                          // Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/util/TimerTask;>;>;

  public void cancel();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #26                 // InterfaceMethod org/scalatest/TimerTask.cancel$:(Lorg/scalatest/TimerTask;)V
         4: return
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;

  public java.util.concurrent.atomic.AtomicReference<scala.Option<java.util.TimerTask>> timerTaskRef();
    descriptor: ()Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #32                 // Field timerTaskRef:Ljava/util/concurrent/atomic/AtomicReference;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;
    Signature: #30                          // ()Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/util/TimerTask;>;>;

  public void org$scalatest$TimerTask$_setter_$timerTaskRef_$eq(java.util.concurrent.atomic.AtomicReference<scala.Option<java.util.TimerTask>>);
    descriptor: (Ljava/util/concurrent/atomic/AtomicReference;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #32                 // Field timerTaskRef:Ljava/util/concurrent/atomic/AtomicReference;
         5: return
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;
            0       6     1   x$1   Ljava/util/concurrent/atomic/AtomicReference;
    Signature: #35                          // (Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/util/TimerTask;>;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public boolean timedOut();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #39                 // Field timedOut:Z
         4: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;

  public void timedOut_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #39                 // Field timedOut:Z
         5: return
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public boolean needToResetInterruptedStatus();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #43                 // Field needToResetInterruptedStatus:Z
         4: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;

  public void needToResetInterruptedStatus_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #43                 // Field needToResetInterruptedStatus:Z
         5: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: iconst_1
         2: invokevirtual #47                 // Method timedOut_$eq:(Z)V
         5: aload_0
         6: getfield      #49                 // Field testThread:Ljava/lang/Thread;
         9: invokevirtual #54                 // Method java/lang/Thread.isInterrupted:()Z
        12: istore_1
        13: aload_0
        14: getfield      #56                 // Field interrupt:Lorg/scalatest/concurrent/Signaler;
        17: aload_0
        18: getfield      #49                 // Field testThread:Ljava/lang/Thread;
        21: invokeinterface #62,  2           // InterfaceMethod org/scalatest/concurrent/Signaler.apply:(Ljava/lang/Thread;)V
        26: aload_0
        27: getfield      #49                 // Field testThread:Ljava/lang/Thread;
        30: invokevirtual #54                 // Method java/lang/Thread.isInterrupted:()Z
        33: istore_2
        34: iload_1
        35: ifne          50
        38: iload_2
        39: ifeq          50
        42: aload_0
        43: iconst_1
        44: invokevirtual #64                 // Method needToResetInterruptedStatus_$eq:(Z)V
        47: goto          50
        50: return
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 50
          locals = [ int, int ]
      LineNumberTable:
        line 26: 0
        line 27: 5
        line 28: 13
        line 29: 26
        line 30: 34
        line 31: 42
        line 30: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      37     1 beforeIsInterrupted   Z
           34      16     2 afterIsInterrupted   Z
            0      51     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;

  public org.scalatest.concurrent.SignalerTimeoutTask(java.lang.Thread, org.scalatest.concurrent.Signaler);
    descriptor: (Ljava/lang/Thread;Lorg/scalatest/concurrent/Signaler;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #49                 // Field testThread:Ljava/lang/Thread;
         5: aload_0
         6: aload_2
         7: putfield      #56                 // Field interrupt:Lorg/scalatest/concurrent/Signaler;
        10: aload_0
        11: invokespecial #70                 // Method java/lang/Object."<init>":()V
        14: aload_0
        15: invokestatic  #73                 // InterfaceMethod org/scalatest/TimerTask.$init$:(Lorg/scalatest/TimerTask;)V
        18: aload_0
        19: iconst_0
        20: putfield      #39                 // Field timedOut:Z
        23: aload_0
        24: iconst_0
        25: putfield      #43                 // Field needToResetInterruptedStatus:Z
        28: invokestatic  #78                 // Method scala/runtime/Statics.releaseFence:()V
        31: return
      LineNumberTable:
        line 22: 0
        line 23: 18
        line 24: 23
        line 22: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/scalatest/concurrent/SignalerTimeoutTask;
            0      32     1 testThread   Ljava/lang/Thread;
            0      32     2 interrupt   Lorg/scalatest/concurrent/Signaler;
    MethodParameters:
      Name                           Flags
      testThread                     final
      interrupt                      final
}
SourceFile: "SignalerTimeoutTask.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005)3Qa\u0003\u0007\u0001\u001dIA\u0001b\b\u0001\u0003\u0002\u0003\u0006I!\t\u0005\tI\u0001\u0011\t\u0011)A\u0005K!)\u0011\u0006\u0001C\u0001U!9a\u0006\u0001a\u0001\n\u0003y\u0003b\u0002\u001c\u0001\u0001\u0004%\ta\u000e\u0005\u0007{\u0001\u0001\u000b\u0015\u0002\u0019\t\u000f\t\u0003\u0001\u0019!C\u0001_!91\t\u0001a\u0001\n\u0003!\u0005B\u0002$\u0001A\u0003&\u0001\u0007C\u0003I\u0001\u0011\u0005\u0013JA\nTS\u001et\u0017\r\\3s)&lWm\\;u)\u0006\u001c8N\u0003\u0002\u000e\u001d\u0005Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005=\u0001\u0012!C:dC2\fG/Z:u\u0015\u0005\t\u0012aA8sON\u0019\u0001aE\u000e\u0011\u0005QIR\"A\u000b\u000b\u0005Y9\u0012\u0001\u00027b]\u001eT\u0011\u0001G\u0001\u0005U\u00064\u0018-\u0003\u0002\u001b+\t1qJ\u00196fGR\u0004\"\u0001H\u000f\u000e\u00039I!A\b\b\u0003\u0013QKW.\u001a:UCN\\\u0017A\u0003;fgR$\u0006N]3bI\u000e\u0001\u0001C\u0001\u000b#\u0013\t\u0019SC\u0001\u0004UQJ,\u0017\rZ\u0001\nS:$XM\u001d:vaR\u0004\"AJ\u0014\u000e\u00031I!\u0001\u000b\u0007\u0003\u0011MKwM\\1mKJ\fa\u0001P5oSRtDcA\u0016-[A\u0011a\u0005\u0001\u0005\u0006?\r\u0001\r!\t\u0005\u0006I\r\u0001\r!J\u0001\ti&lW\rZ(viV\t\u0001\u0007\u0005\u00022i5\t!GC\u00014\u0003\u0015\u00198-\u00197b\u0013\t)$GA\u0004C_>dW-\u00198\u0002\u0019QLW.\u001a3PkR|F%Z9\u0015\u0005aZ\u0004CA\u0019:\u0013\tQ$G\u0001\u0003V]&$\bb\u0002\u001f\u0006\u0003\u0003\u0005\r\u0001M\u0001\u0004q\u0012\n\u0014!\u0003;j[\u0016$w*\u001e;!Q\t1q\b\u0005\u00022\u0001&\u0011\u0011I\r\u0002\tm>d\u0017\r^5mK\u0006ab.Z3e)>\u0014Vm]3u\u0013:$XM\u001d:vaR,Gm\u0015;biV\u001c\u0018\u0001\t8fK\u0012$vNU3tKRLe\u000e^3seV\u0004H/\u001a3Ti\u0006$Xo]0%KF$\"\u0001O#\t\u000fqB\u0011\u0011!a\u0001a\u0005ib.Z3e)>\u0014Vm]3u\u0013:$XM\u001d:vaR,Gm\u0015;biV\u001c\b\u0005\u000b\u0002\n\u007f\u0005\u0019!/\u001e8\u0015\u0003a\u0002"
    )
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 00 00 09 00 43 00 44 00 00 15 00 16 00 00 11
   00 25 00 00 2C 00 29 00 00 21 00 22 00 00 2D 00
   16 00 00 0F 00 25 00 00 28 00 29 00 00 12 00 1D
   00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
