Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/copy$.class
  Last modified May 29, 2022; size 7776 bytes
  SHA-256 checksum acecd9ee5f08ef13a58ed71d077d00aac32820343a0d421e5ae4def21f9a977e
  Compiled from "FileOps.scala"
public final class os.copy$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // os/copy$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 20, attributes: 5
Constant pool:
    #1 = Utf8               os/copy$
    #2 = Class              #1            // os/copy$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               FileOps.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               os/PathChunk$RelPathChunk
   #12 = Class              #11           // os/PathChunk$RelPathChunk
   #13 = Utf8               os/PathChunk
   #14 = Class              #13           // os/PathChunk
   #15 = Utf8               RelPathChunk
   #16 = Utf8               os/copy$$anon$2
   #17 = Class              #16           // os/copy$$anon$2
   #18 = Utf8               os/makeDir$all$
   #19 = Class              #18           // os/makeDir$all$
   #20 = Utf8               os/makeDir
   #21 = Class              #20           // os/makeDir
   #22 = Utf8               all$
   #23 = Utf8               MODULE$
   #24 = Utf8               Los/copy$;
   #25 = Utf8               <clinit>
   #26 = Utf8               ()V
   #27 = Utf8               <init>
   #28 = NameAndType        #27:#26       // "<init>":()V
   #29 = Methodref          #2.#28        // os/copy$."<init>":()V
   #30 = NameAndType        #23:#24       // MODULE$:Los/copy$;
   #31 = Fieldref           #2.#30        // os/copy$.MODULE$:Los/copy$;
   #32 = Utf8               matching
   #33 = Utf8               (ZZZZZLscala/PartialFunction;)Lscala/PartialFunction;
   #34 = Utf8               (ZZZZZLscala/PartialFunction<Los/Path;Los/Path;>;)Lscala/PartialFunction<Los/Path;Lscala/runtime/BoxedUnit;>;
   #35 = Utf8               followLinks
   #36 = Utf8               replaceExisting
   #37 = Utf8               copyAttributes
   #38 = Utf8               createFolders
   #39 = Utf8               mergeFolders
   #40 = Utf8               partialFunction
   #41 = Utf8               (Lscala/PartialFunction;ZZZZZ)V
   #42 = NameAndType        #27:#41       // "<init>":(Lscala/PartialFunction;ZZZZZ)V
   #43 = Methodref          #17.#42       // os/copy$$anon$2."<init>":(Lscala/PartialFunction;ZZZZZ)V
   #44 = Utf8               this
   #45 = Utf8               Z
   #46 = Utf8               Lscala/PartialFunction;
   #47 = Utf8               (Lscala/PartialFunction;)Lscala/PartialFunction;
   #48 = Utf8               (Lscala/PartialFunction<Los/Path;Los/Path;>;)Lscala/PartialFunction<Los/Path;Lscala/runtime/BoxedUnit;>;
   #49 = Utf8               matching$default$1
   #50 = Utf8               ()Z
   #51 = NameAndType        #49:#50       // matching$default$1:()Z
   #52 = Methodref          #2.#51        // os/copy$.matching$default$1:()Z
   #53 = Utf8               matching$default$2
   #54 = NameAndType        #53:#50       // matching$default$2:()Z
   #55 = Methodref          #2.#54        // os/copy$.matching$default$2:()Z
   #56 = Utf8               matching$default$3
   #57 = NameAndType        #56:#50       // matching$default$3:()Z
   #58 = Methodref          #2.#57        // os/copy$.matching$default$3:()Z
   #59 = Utf8               matching$default$4
   #60 = NameAndType        #59:#50       // matching$default$4:()Z
   #61 = Methodref          #2.#60        // os/copy$.matching$default$4:()Z
   #62 = Utf8               matching$default$5
   #63 = NameAndType        #62:#50       // matching$default$5:()Z
   #64 = Methodref          #2.#63        // os/copy$.matching$default$5:()Z
   #65 = NameAndType        #32:#33       // matching:(ZZZZZLscala/PartialFunction;)Lscala/PartialFunction;
   #66 = Methodref          #2.#65        // os/copy$.matching:(ZZZZZLscala/PartialFunction;)Lscala/PartialFunction;
   #67 = Utf8               apply
   #68 = Utf8               (Los/Path;Los/Path;ZZZZZ)V
   #69 = Utf8               from
   #70 = Utf8               to
   #71 = Utf8               Los/makeDir$all$;
   #72 = NameAndType        #23:#71       // MODULE$:Los/makeDir$all$;
   #73 = Fieldref           #19.#72       // os/makeDir$all$.MODULE$:Los/makeDir$all$;
   #74 = Utf8               os/PathChunk$
   #75 = Class              #74           // os/PathChunk$
   #76 = Utf8               Los/PathChunk$;
   #77 = NameAndType        #23:#76       // MODULE$:Los/PathChunk$;
   #78 = Fieldref           #75.#77       // os/PathChunk$.MODULE$:Los/PathChunk$;
   #79 = Utf8               os/package$
   #80 = Class              #79           // os/package$
   #81 = Utf8               Los/package$;
   #82 = NameAndType        #23:#81       // MODULE$:Los/package$;
   #83 = Fieldref           #80.#82       // os/package$.MODULE$:Los/package$;
   #84 = Utf8               up
   #85 = Utf8               ()Los/RelPath;
   #86 = NameAndType        #84:#85       // up:()Los/RelPath;
   #87 = Methodref          #80.#86       // os/package$.up:()Los/RelPath;
   #88 = Utf8               (Los/RelPath;)Los/PathChunk$RelPathChunk;
   #89 = NameAndType        #15:#88       // RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
   #90 = Methodref          #75.#89       // os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
   #91 = Utf8               os/Path
   #92 = Class              #91           // os/Path
   #93 = Utf8               $div
   #94 = Utf8               (Los/PathChunk;)Los/Path;
   #95 = NameAndType        #93:#94       // $div:(Los/PathChunk;)Los/Path;
   #96 = Methodref          #92.#95       // os/Path.$div:(Los/PathChunk;)Los/Path;
   #97 = Utf8               (Los/Path;)V
   #98 = NameAndType        #67:#97       // apply:(Los/Path;)V
   #99 = Methodref          #19.#98       // os/makeDir$all$.apply:(Los/Path;)V
  #100 = Utf8               scala/Array$
  #101 = Class              #100          // scala/Array$
  #102 = Utf8               Lscala/Array$;
  #103 = NameAndType        #23:#102      // MODULE$:Lscala/Array$;
  #104 = Fieldref           #101.#103     // scala/Array$.MODULE$:Lscala/Array$;
  #105 = Utf8               scala/collection/immutable/Nil$
  #106 = Class              #105          // scala/collection/immutable/Nil$
  #107 = Utf8               Lscala/collection/immutable/Nil$;
  #108 = NameAndType        #23:#107      // MODULE$:Lscala/collection/immutable/Nil$;
  #109 = Fieldref           #106.#108     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #110 = Utf8               scala/reflect/ClassTag$
  #111 = Class              #110          // scala/reflect/ClassTag$
  #112 = Utf8               Lscala/reflect/ClassTag$;
  #113 = NameAndType        #23:#112      // MODULE$:Lscala/reflect/ClassTag$;
  #114 = Fieldref           #111.#113     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #115 = Utf8               java/nio/file/CopyOption
  #116 = Class              #115          // java/nio/file/CopyOption
  #117 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #118 = NameAndType        #67:#117      // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #119 = Methodref          #111.#118     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #120 = Utf8               (Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #121 = NameAndType        #67:#120      // apply:(Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #122 = Methodref          #101.#121     // scala/Array$.apply:(Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #123 = Utf8               [Ljava/nio/file/CopyOption;
  #124 = Class              #123          // "[Ljava/nio/file/CopyOption;"
  #125 = Utf8               java/nio/file/LinkOption
  #126 = Class              #125          // java/nio/file/LinkOption
  #127 = Utf8               NOFOLLOW_LINKS
  #128 = Utf8               Ljava/nio/file/LinkOption;
  #129 = NameAndType        #127:#128     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
  #130 = Fieldref           #126.#129     // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
  #131 = Utf8               [Ljava/lang/Object;
  #132 = Class              #131          // "[Ljava/lang/Object;"
  #133 = Utf8               java/nio/file/StandardCopyOption
  #134 = Class              #133          // java/nio/file/StandardCopyOption
  #135 = Utf8               REPLACE_EXISTING
  #136 = Utf8               Ljava/nio/file/StandardCopyOption;
  #137 = NameAndType        #135:#136     // REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
  #138 = Fieldref           #134.#137     // java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
  #139 = Utf8               COPY_ATTRIBUTES
  #140 = NameAndType        #139:#136     // COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
  #141 = Fieldref           #134.#140     // java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
  #142 = Utf8               scala/Predef$
  #143 = Class              #142          // scala/Predef$
  #144 = Utf8               Lscala/Predef$;
  #145 = NameAndType        #23:#144      // MODULE$:Lscala/Predef$;
  #146 = Fieldref           #143.#145     // scala/Predef$.MODULE$:Lscala/Predef$;
  #147 = Utf8               startsWith
  #148 = Utf8               (Los/Path;)Z
  #149 = NameAndType        #147:#148     // startsWith:(Los/Path;)Z
  #150 = Methodref          #92.#149      // os/Path.startsWith:(Los/Path;)Z
  #151 = Utf8               ()Ljava/lang/Object;
  #152 = MethodType         #151          //  ()Ljava/lang/Object;
  #153 = Utf8               $anonfun$apply$2
  #154 = Utf8               (Los/Path;Los/Path;)Ljava/lang/String;
  #155 = NameAndType        #153:#154     // $anonfun$apply$2:(Los/Path;Los/Path;)Ljava/lang/String;
  #156 = Methodref          #2.#155       // os/copy$.$anonfun$apply$2:(Los/Path;Los/Path;)Ljava/lang/String;
  #157 = MethodHandle       6:#156        // REF_invokeStatic os/copy$.$anonfun$apply$2:(Los/Path;Los/Path;)Ljava/lang/String;
  #158 = Utf8               ()Ljava/lang/String;
  #159 = MethodType         #158          //  ()Ljava/lang/String;
  #160 = Integer            5
  #161 = Integer            1
  #162 = Utf8               java/lang/invoke/LambdaMetafactory
  #163 = Class              #162          // java/lang/invoke/LambdaMetafactory
  #164 = Utf8               altMetafactory
  #165 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #166 = NameAndType        #164:#165     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = Methodref          #163.#166     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #168 = MethodHandle       6:#167        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = Utf8               (Los/Path;Los/Path;)Lscala/Function0;
  #170 = NameAndType        #67:#169      // apply:(Los/Path;Los/Path;)Lscala/Function0;
  #171 = InvokeDynamic      #0:#170       // #0:apply:(Los/Path;Los/Path;)Lscala/Function0;
  #172 = Utf8               require
  #173 = Utf8               (ZLscala/Function0;)V
  #174 = NameAndType        #172:#173     // require:(ZLscala/Function0;)V
  #175 = Methodref          #143.#174     // scala/Predef$.require:(ZLscala/Function0;)V
  #176 = Utf8               copyOne$1
  #177 = Utf8               (Los/Path;Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #178 = NameAndType        #176:#177     // copyOne$1:(Los/Path;Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #179 = Methodref          #2.#178       // os/copy$.copyOne$1:(Los/Path;Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #180 = Utf8               os/stat$
  #181 = Class              #180          // os/stat$
  #182 = Utf8               Los/stat$;
  #183 = NameAndType        #23:#182      // MODULE$:Los/stat$;
  #184 = Fieldref           #181.#183     // os/stat$.MODULE$:Los/stat$;
  #185 = Utf8               (Los/Path;Z)Los/StatInfo;
  #186 = NameAndType        #67:#185      // apply:(Los/Path;Z)Los/StatInfo;
  #187 = Methodref          #181.#186     // os/stat$.apply:(Los/Path;Z)Los/StatInfo;
  #188 = Utf8               os/StatInfo
  #189 = Class              #188          // os/StatInfo
  #190 = Utf8               isDir
  #191 = NameAndType        #190:#50      // isDir:()Z
  #192 = Methodref          #189.#191     // os/StatInfo.isDir:()Z
  #193 = Utf8               os/walk$
  #194 = Class              #193          // os/walk$
  #195 = Utf8               Los/walk$;
  #196 = NameAndType        #23:#195      // MODULE$:Los/walk$;
  #197 = Fieldref           #194.#196     // os/walk$.MODULE$:Los/walk$;
  #198 = Utf8               apply$default$2
  #199 = Utf8               ()Lscala/Function1;
  #200 = NameAndType        #198:#199     // apply$default$2:()Lscala/Function1;
  #201 = Methodref          #194.#200     // os/walk$.apply$default$2:()Lscala/Function1;
  #202 = Utf8               apply$default$3
  #203 = NameAndType        #202:#50      // apply$default$3:()Z
  #204 = Methodref          #194.#203     // os/walk$.apply$default$3:()Z
  #205 = Utf8               apply$default$4
  #206 = NameAndType        #205:#50      // apply$default$4:()Z
  #207 = Methodref          #194.#206     // os/walk$.apply$default$4:()Z
  #208 = Utf8               apply$default$5
  #209 = Utf8               ()I
  #210 = NameAndType        #208:#209     // apply$default$5:()I
  #211 = Methodref          #194.#210     // os/walk$.apply$default$5:()I
  #212 = Utf8               apply$default$6
  #213 = NameAndType        #212:#50      // apply$default$6:()Z
  #214 = Methodref          #194.#213     // os/walk$.apply$default$6:()Z
  #215 = Utf8               (Los/Path;Lscala/Function1;ZZIZ)Lscala/collection/immutable/IndexedSeq;
  #216 = NameAndType        #67:#215      // apply:(Los/Path;Lscala/Function1;ZZIZ)Lscala/collection/immutable/IndexedSeq;
  #217 = Methodref          #194.#216     // os/walk$.apply:(Los/Path;Lscala/Function1;ZZIZ)Lscala/collection/immutable/IndexedSeq;
  #218 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #219 = MethodType         #218          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #220 = Utf8               $anonfun$apply$3
  #221 = Utf8               (Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;Los/Path;)Ljava/nio/file/Path;
  #222 = NameAndType        #220:#221     // $anonfun$apply$3:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;Los/Path;)Ljava/nio/file/Path;
  #223 = Methodref          #2.#222       // os/copy$.$anonfun$apply$3:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;Los/Path;)Ljava/nio/file/Path;
  #224 = MethodHandle       6:#223        // REF_invokeStatic os/copy$.$anonfun$apply$3:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;Los/Path;)Ljava/nio/file/Path;
  #225 = Utf8               (Los/Path;)Ljava/nio/file/Path;
  #226 = MethodType         #225          //  (Los/Path;)Ljava/nio/file/Path;
  #227 = Utf8               (Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Lscala/Function1;
  #228 = NameAndType        #67:#227      // apply:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Lscala/Function1;
  #229 = InvokeDynamic      #1:#228       // #1:apply:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Lscala/Function1;
  #230 = Utf8               scala/collection/immutable/IndexedSeq
  #231 = Class              #230          // scala/collection/immutable/IndexedSeq
  #232 = Utf8               map
  #233 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #234 = NameAndType        #232:#233     // map:(Lscala/Function1;)Ljava/lang/Object;
  #235 = InterfaceMethodref #231.#234     // scala/collection/immutable/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
  #236 = Utf8               opts1
  #237 = Utf8               opts2
  #238 = Utf8               opts3
  #239 = Utf8               Los/Path;
  #240 = Utf8               (Los/Path;Los/Path;ZZZZ)V
  #241 = NameAndType        #67:#68       // apply:(Los/Path;Los/Path;ZZZZZ)V
  #242 = Methodref          #2.#241       // os/copy$.apply:(Los/Path;Los/Path;ZZZZZ)V
  #243 = Utf8               apply$default$7
  #244 = Utf8               to$2
  #245 = Utf8               from$2
  #246 = Utf8               java/lang/StringBuilder
  #247 = Class              #246          // java/lang/StringBuilder
  #248 = Integer            47
  #249 = Utf8               (I)V
  #250 = NameAndType        #27:#249      // "<init>":(I)V
  #251 = Methodref          #247.#250     // java/lang/StringBuilder."<init>":(I)V
  #252 = Utf8               Can\'t copy a directory into itself:
  #253 = String             #252          // Can\'t copy a directory into itself:
  #254 = Utf8               append
  #255 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #256 = NameAndType        #254:#255     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #257 = Methodref          #247.#256     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #258 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #259 = NameAndType        #254:#258     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #260 = Methodref          #247.#259     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #261 = Utf8                is inside
  #262 = String             #261          //  is inside
  #263 = Utf8               toString
  #264 = NameAndType        #263:#158     // toString:()Ljava/lang/String;
  #265 = Methodref          #247.#264     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #266 = Utf8               p
  #267 = Utf8               mergeFolders$2
  #268 = Utf8               followLinks$2
  #269 = Utf8               opts1$1
  #270 = Utf8               opts2$1
  #271 = Utf8               opts3$1
  #272 = Utf8               relativeTo
  #273 = Utf8               (Los/Path;)Los/RelPath;
  #274 = NameAndType        #272:#273     // relativeTo:(Los/Path;)Los/RelPath;
  #275 = Methodref          #92.#274      // os/Path.relativeTo:(Los/Path;)Los/RelPath;
  #276 = Utf8               os/isDir$
  #277 = Class              #276          // os/isDir$
  #278 = Utf8               Los/isDir$;
  #279 = NameAndType        #23:#278      // MODULE$:Los/isDir$;
  #280 = Fieldref           #277.#279     // os/isDir$.MODULE$:Los/isDir$;
  #281 = Utf8               (Los/Path;Z)Z
  #282 = NameAndType        #67:#281      // apply:(Los/Path;Z)Z
  #283 = Methodref          #277.#282     // os/isDir$.apply:(Los/Path;Z)Z
  #284 = Utf8               wrapped
  #285 = Utf8               ()Ljava/nio/file/Path;
  #286 = NameAndType        #284:#285     // wrapped:()Ljava/nio/file/Path;
  #287 = Methodref          #92.#286      // os/Path.wrapped:()Ljava/nio/file/Path;
  #288 = Utf8               scala/collection/ArrayOps$
  #289 = Class              #288          // scala/collection/ArrayOps$
  #290 = Utf8               Lscala/collection/ArrayOps$;
  #291 = NameAndType        #23:#290      // MODULE$:Lscala/collection/ArrayOps$;
  #292 = Fieldref           #289.#291     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #293 = Utf8               refArrayOps
  #294 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #295 = NameAndType        #293:#294     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #296 = Methodref          #143.#295     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #297 = Utf8               $plus$plus$extension
  #298 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #299 = NameAndType        #297:#298     // $plus$plus$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #300 = Methodref          #289.#299     // scala/collection/ArrayOps$.$plus$plus$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #301 = Utf8               java/nio/file/Files
  #302 = Class              #301          // java/nio/file/Files
  #303 = Utf8               copy
  #304 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #305 = NameAndType        #303:#304     // copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #306 = Methodref          #302.#305     // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #307 = Utf8               target
  #308 = Utf8               java/nio/file/Path
  #309 = Class              #308          // java/nio/file/Path
  #310 = Methodref          #4.#28        // java/lang/Object."<init>":()V
  #311 = Utf8               $deserializeLambda$
  #312 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #313 = Utf8               scala/runtime/LambdaDeserialize
  #314 = Class              #313          // scala/runtime/LambdaDeserialize
  #315 = Utf8               bootstrap
  #316 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #317 = NameAndType        #315:#316     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #318 = Methodref          #314.#317     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #319 = MethodHandle       6:#318        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #320 = Utf8               lambdaDeserialize
  #321 = NameAndType        #320:#312     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #322 = InvokeDynamic      #2:#321       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #323 = Utf8               Code
  #324 = Utf8               LineNumberTable
  #325 = Utf8               LocalVariableTable
  #326 = Utf8               Signature
  #327 = Utf8               MethodParameters
  #328 = Utf8               StackMapTable
  #329 = Utf8               Deprecated
  #330 = Utf8               InnerClasses
  #331 = Utf8               SourceFile
  #332 = Utf8               BootstrapMethods
  #333 = Utf8               ScalaInlineInfo
  #334 = Utf8               Scala
{
  public static final os.copy$ MODULE$;
    descriptor: Los/copy$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/copy$
         3: dup
         4: invokespecial #29                 // Method "<init>":()V
         7: putstatic     #31                 // Field MODULE$:Los/copy$;
        10: return
      LineNumberTable:
        line 134: 0

  public scala.PartialFunction<os.Path, scala.runtime.BoxedUnit> matching(boolean, boolean, boolean, boolean, boolean, scala.PartialFunction<os.Path, os.Path>);
    descriptor: (ZZZZZLscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=7
         0: new           #17                 // class os/copy$$anon$2
         3: dup
         4: aload         6
         6: iload_1
         7: iload_2
         8: iload_3
         9: iload         4
        11: iload         5
        13: invokespecial #43                 // Method os/copy$$anon$2."<init>":(Lscala/PartialFunction;ZZZZZ)V
        16: areturn
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Los/copy$;
            0      17     1 followLinks   Z
            0      17     2 replaceExisting   Z
            0      17     3 copyAttributes   Z
            0      17     4 createFolders   Z
            0      17     5 mergeFolders   Z
            0      17     6 partialFunction   Lscala/PartialFunction;
    Signature: #34                          // (ZZZZZLscala/PartialFunction<Los/Path;Los/Path;>;)Lscala/PartialFunction<Los/Path;Lscala/runtime/BoxedUnit;>;
    MethodParameters:
      Name                           Flags
      followLinks                    final
      replaceExisting                final
      copyAttributes                 final
      createFolders                  final
      mergeFolders                   final
      partialFunction                final

  public scala.PartialFunction<os.Path, scala.runtime.BoxedUnit> matching(scala.PartialFunction<os.Path, os.Path>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #52                 // Method matching$default$1:()Z
         5: aload_0
         6: invokevirtual #55                 // Method matching$default$2:()Z
         9: aload_0
        10: invokevirtual #58                 // Method matching$default$3:()Z
        13: aload_0
        14: invokevirtual #61                 // Method matching$default$4:()Z
        17: aload_0
        18: invokevirtual #64                 // Method matching$default$5:()Z
        21: aload_1
        22: invokevirtual #66                 // Method matching:(ZZZZZLscala/PartialFunction;)Lscala/PartialFunction;
        25: areturn
      LineNumberTable:
        line 154: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Los/copy$;
            0      26     1 partialFunction   Lscala/PartialFunction;
    Signature: #48                          // (Lscala/PartialFunction<Los/Path;Los/Path;>;)Lscala/PartialFunction<Los/Path;Lscala/runtime/BoxedUnit;>;
    MethodParameters:
      Name                           Flags
      partialFunction                final

  public boolean matching$default$1();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 135: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean matching$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean matching$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean matching$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean matching$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public void apply(os.Path, os.Path, boolean, boolean, boolean, boolean, boolean);
    descriptor: (Los/Path;Los/Path;ZZZZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=11, args_size=8
         0: iload         6
         2: ifeq          30
         5: getstatic     #73                 // Field os/makeDir$all$.MODULE$:Los/makeDir$all$;
         8: aload_2
         9: getstatic     #78                 // Field os/PathChunk$.MODULE$:Los/PathChunk$;
        12: getstatic     #83                 // Field os/package$.MODULE$:Los/package$;
        15: invokevirtual #87                 // Method os/package$.up:()Los/RelPath;
        18: invokevirtual #90                 // Method os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
        21: invokevirtual #96                 // Method os/Path.$div:(Los/PathChunk;)Los/Path;
        24: invokevirtual #99                 // Method os/makeDir$all$.apply:(Los/Path;)V
        27: goto          30
        30: iload_3
        31: ifeq          57
        34: getstatic     #104                // Field scala/Array$.MODULE$:Lscala/Array$;
        37: getstatic     #109                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        40: getstatic     #114                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        43: ldc           #116                // class java/nio/file/CopyOption
        45: invokevirtual #119                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        48: invokevirtual #122                // Method scala/Array$.apply:(Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        51: checkcast     #124                // class "[Ljava/nio/file/CopyOption;"
        54: goto          73
        57: iconst_1
        58: anewarray     #116                // class java/nio/file/CopyOption
        61: dup
        62: iconst_0
        63: getstatic     #130                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
        66: aastore
        67: checkcast     #132                // class "[Ljava/lang/Object;"
        70: checkcast     #124                // class "[Ljava/nio/file/CopyOption;"
        73: astore        8
        75: iload         4
        77: ifeq          99
        80: iconst_1
        81: anewarray     #116                // class java/nio/file/CopyOption
        84: dup
        85: iconst_0
        86: getstatic     #138                // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
        89: aastore
        90: checkcast     #132                // class "[Ljava/lang/Object;"
        93: checkcast     #124                // class "[Ljava/nio/file/CopyOption;"
        96: goto          119
        99: getstatic     #104                // Field scala/Array$.MODULE$:Lscala/Array$;
       102: getstatic     #109                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       105: getstatic     #114                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       108: ldc           #116                // class java/nio/file/CopyOption
       110: invokevirtual #119                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       113: invokevirtual #122                // Method scala/Array$.apply:(Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       116: checkcast     #124                // class "[Ljava/nio/file/CopyOption;"
       119: astore        9
       121: iload         5
       123: ifeq          145
       126: iconst_1
       127: anewarray     #116                // class java/nio/file/CopyOption
       130: dup
       131: iconst_0
       132: getstatic     #141                // Field java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
       135: aastore
       136: checkcast     #132                // class "[Ljava/lang/Object;"
       139: checkcast     #124                // class "[Ljava/nio/file/CopyOption;"
       142: goto          165
       145: getstatic     #104                // Field scala/Array$.MODULE$:Lscala/Array$;
       148: getstatic     #109                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       151: getstatic     #114                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       154: ldc           #116                // class java/nio/file/CopyOption
       156: invokevirtual #119                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       159: invokevirtual #122                // Method scala/Array$.apply:(Lscala/collection/immutable/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       162: checkcast     #124                // class "[Ljava/nio/file/CopyOption;"
       165: astore        10
       167: getstatic     #146                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       170: aload_2
       171: aload_1
       172: invokevirtual #150                // Method os/Path.startsWith:(Los/Path;)Z
       175: ifne          182
       178: iconst_1
       179: goto          183
       182: iconst_0
       183: aload_2
       184: aload_1
       185: invokedynamic #171,  0            // InvokeDynamic #0:apply:(Los/Path;Los/Path;)Lscala/Function0;
       190: invokevirtual #175                // Method scala/Predef$.require:(ZLscala/Function0;)V
       193: aload_1
       194: aload_2
       195: aload_1
       196: iload         7
       198: iload_3
       199: aload         8
       201: aload         9
       203: aload         10
       205: invokestatic  #179                // Method copyOne$1:(Los/Path;Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
       208: pop
       209: getstatic     #184                // Field os/stat$.MODULE$:Los/stat$;
       212: aload_1
       213: iload_3
       214: invokevirtual #187                // Method os/stat$.apply:(Los/Path;Z)Los/StatInfo;
       217: invokevirtual #192                // Method os/StatInfo.isDir:()Z
       220: ifeq          285
       223: getstatic     #197                // Field os/walk$.MODULE$:Los/walk$;
       226: aload_1
       227: getstatic     #197                // Field os/walk$.MODULE$:Los/walk$;
       230: invokevirtual #201                // Method os/walk$.apply$default$2:()Lscala/Function1;
       233: getstatic     #197                // Field os/walk$.MODULE$:Los/walk$;
       236: invokevirtual #204                // Method os/walk$.apply$default$3:()Z
       239: getstatic     #197                // Field os/walk$.MODULE$:Los/walk$;
       242: invokevirtual #207                // Method os/walk$.apply$default$4:()Z
       245: getstatic     #197                // Field os/walk$.MODULE$:Los/walk$;
       248: invokevirtual #211                // Method os/walk$.apply$default$5:()I
       251: getstatic     #197                // Field os/walk$.MODULE$:Los/walk$;
       254: invokevirtual #214                // Method os/walk$.apply$default$6:()Z
       257: invokevirtual #217                // Method os/walk$.apply:(Los/Path;Lscala/Function1;ZZIZ)Lscala/collection/immutable/IndexedSeq;
       260: aload_2
       261: aload_1
       262: iload         7
       264: iload_3
       265: aload         8
       267: aload         9
       269: aload         10
       271: invokedynamic #229,  0            // InvokeDynamic #1:apply:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Lscala/Function1;
       276: invokeinterface #235,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
       281: pop
       282: goto          285
       285: return
      StackMapTable: number_of_entries = 10
        frame_type = 30 /* same */
        frame_type = 26 /* same */
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class "[Ljava/nio/file/CopyOption;" ]
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class "[Ljava/nio/file/CopyOption;" ]
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class "[Ljava/nio/file/CopyOption;" ]
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class "[Ljava/nio/file/CopyOption;" ]
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class "[Ljava/nio/file/CopyOption;" ]
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class os/copy$, class os/Path, class os/Path, int, int, int, int, int, class "[Ljava/nio/file/CopyOption;", class "[Ljava/nio/file/CopyOption;", class "[Ljava/nio/file/CopyOption;" ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class os/copy$, class os/Path, class os/Path, int, int, int, int, int, class "[Ljava/nio/file/CopyOption;", class "[Ljava/nio/file/CopyOption;", class "[Ljava/nio/file/CopyOption;" ]
          stack = [ class scala/Predef$, int ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 101
      LineNumberTable:
        line 166: 0
        line 168: 30
        line 169: 57
        line 171: 75
        line 172: 99
        line 174: 121
        line 175: 145
        line 176: 167
        line 177: 170
        line 178: 183
        line 191: 193
        line 192: 209
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           75     210     8 opts1   [Ljava/nio/file/CopyOption;
          121     164     9 opts2   [Ljava/nio/file/CopyOption;
          167     118    10 opts3   [Ljava/nio/file/CopyOption;
            0     286     0  this   Los/copy$;
            0     286     1  from   Los/Path;
            0     286     2    to   Los/Path;
            0     286     3 followLinks   Z
            0     286     4 replaceExisting   Z
            0     286     5 copyAttributes   Z
            0     286     6 createFolders   Z
            0     286     7 mergeFolders   Z
    MethodParameters:
      Name                           Flags
      from                           final
      to                             final
      followLinks                    final
      replaceExisting                final
      copyAttributes                 final
      createFolders                  final
      mergeFolders                   final

  public void apply(os.Path, os.Path, boolean, boolean, boolean, boolean);
    descriptor: (Los/Path;Los/Path;ZZZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=7
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: iload         4
         6: iload         5
         8: iload         6
        10: iconst_0
        11: invokevirtual #242                // Method apply:(Los/Path;Los/Path;ZZZZZ)V
        14: return
      LineNumberTable:
        line 205: 0
        line 206: 1
        line 207: 2
        line 208: 3
        line 209: 4
        line 210: 6
        line 211: 8
        line 212: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Los/copy$;
            0      15     1  from   Los/Path;
            0      15     2    to   Los/Path;
            0      15     3 followLinks   Z
            0      15     4 replaceExisting   Z
            0      15     5 copyAttributes   Z
            0      15     6 createFolders   Z
    Deprecated: true
    MethodParameters:
      Name                           Flags
      from                           final
      to                             final
      followLinks                    final
      replaceExisting                final
      copyAttributes                 final
      createFolders                  final

  public boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean apply$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 161: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean apply$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean apply$default$6();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public boolean apply$default$7();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/copy$;

  public static final java.lang.String $anonfun$apply$2(os.Path, os.Path);
    descriptor: (Los/Path;Los/Path;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #247                // class java/lang/StringBuilder
         3: dup
         4: ldc           #248                // int 47
         6: invokespecial #251                // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #253                // String Can\'t copy a directory into itself:
        11: invokevirtual #257                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: invokevirtual #260                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        18: ldc_w         #262                // String  is inside
        21: invokevirtual #257                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: aload_1
        25: invokevirtual #260                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        28: invokevirtual #265                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        31: areturn
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  to$2   Los/Path;
            0      32     1 from$2   Los/Path;
    MethodParameters:
      Name                           Flags
      to$2                           final
      from$2                         final

  private static final java.nio.file.Path copyOne$1(os.Path, os.Path, os.Path, boolean, boolean, java.nio.file.CopyOption[], java.nio.file.CopyOption[], java.nio.file.CopyOption[]);
    descriptor: (Los/Path;Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=9, locals=9, args_size=8
         0: aload_1
         1: getstatic     #78                 // Field os/PathChunk$.MODULE$:Los/PathChunk$;
         4: aload_0
         5: aload_2
         6: invokevirtual #275                // Method os/Path.relativeTo:(Los/Path;)Los/RelPath;
         9: invokevirtual #90                 // Method os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
        12: invokevirtual #96                 // Method os/Path.$div:(Los/PathChunk;)Los/Path;
        15: astore        8
        17: iload_3
        18: ifeq          54
        21: getstatic     #280                // Field os/isDir$.MODULE$:Los/isDir$;
        24: aload_0
        25: iload         4
        27: invokevirtual #283                // Method os/isDir$.apply:(Los/Path;Z)Z
        30: ifeq          54
        33: getstatic     #280                // Field os/isDir$.MODULE$:Los/isDir$;
        36: aload         8
        38: iload         4
        40: invokevirtual #283                // Method os/isDir$.apply:(Los/Path;Z)Z
        43: ifeq          54
        46: aload         8
        48: invokevirtual #287                // Method os/Path.wrapped:()Ljava/nio/file/Path;
        51: goto          121
        54: aload_0
        55: invokevirtual #287                // Method os/Path.wrapped:()Ljava/nio/file/Path;
        58: aload         8
        60: invokevirtual #287                // Method os/Path.wrapped:()Ljava/nio/file/Path;
        63: getstatic     #292                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        66: getstatic     #146                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        69: getstatic     #292                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        72: getstatic     #146                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        75: aload         5
        77: checkcast     #132                // class "[Ljava/lang/Object;"
        80: invokevirtual #296                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        83: aload         6
        85: getstatic     #114                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        88: ldc           #116                // class java/nio/file/CopyOption
        90: invokevirtual #119                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        93: invokevirtual #300                // Method scala/collection/ArrayOps$.$plus$plus$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        96: checkcast     #132                // class "[Ljava/lang/Object;"
        99: invokevirtual #296                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       102: aload         7
       104: getstatic     #114                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       107: ldc           #116                // class java/nio/file/CopyOption
       109: invokevirtual #119                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       112: invokevirtual #300                // Method scala/collection/ArrayOps$.$plus$plus$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       115: checkcast     #124                // class "[Ljava/nio/file/CopyOption;"
       118: invokestatic  #306                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
       121: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 54
          locals = [ class os/Path ]
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 66
          stack = [ class java/nio/file/Path ]
      LineNumberTable:
        line 182: 0
        line 183: 17
        line 185: 46
        line 187: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17     104     8 target   Los/Path;
            0     122     0     p   Los/Path;
            0     122     1  to$2   Los/Path;
            0     122     2 from$2   Los/Path;
            0     122     3 mergeFolders$2   Z
            0     122     4 followLinks$2   Z
            0     122     5 opts1$1   [Ljava/nio/file/CopyOption;
            0     122     6 opts2$1   [Ljava/nio/file/CopyOption;
            0     122     7 opts3$1   [Ljava/nio/file/CopyOption;
    MethodParameters:
      Name                           Flags
      p                              final
      to$2                           final
      from$2                         final
      mergeFolders$2                 final
      followLinks$2                  final
      opts1$1                        final
      opts2$1                        final
      opts3$1                        final

  public static final java.nio.file.Path $anonfun$apply$3(os.Path, os.Path, boolean, boolean, java.nio.file.CopyOption[], java.nio.file.CopyOption[], java.nio.file.CopyOption[], os.Path);
    descriptor: (Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;Los/Path;)Ljava/nio/file/Path;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=8, args_size=8
         0: aload         7
         2: aload_0
         3: aload_1
         4: iload_2
         5: iload_3
         6: aload         4
         8: aload         5
        10: aload         6
        12: invokestatic  #179                // Method copyOne$1:(Los/Path;Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
        15: areturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  to$2   Los/Path;
            0      16     1 from$2   Los/Path;
            0      16     2 mergeFolders$2   Z
            0      16     3 followLinks$2   Z
            0      16     4 opts1$1   [Ljava/nio/file/CopyOption;
            0      16     5 opts2$1   [Ljava/nio/file/CopyOption;
            0      16     6 opts3$1   [Ljava/nio/file/CopyOption;
            0      16     7     p   Los/Path;
    MethodParameters:
      Name                           Flags
      to$2                           final
      from$2                         final
      mergeFolders$2                 final
      followLinks$2                  final
      opts1$1                        final
      opts2$1                        final
      opts3$1                        final
      p                              final

  private os.copy$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #310                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 283: 0
        line 134: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/copy$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #322,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // RelPathChunk=class os/PathChunk$RelPathChunk of class os/PathChunk
  public final #17;                       // class os/copy$$anon$2
  public static #22= #19 of #21;          // all$=class os/makeDir$all$ of class os/makeDir
SourceFile: "FileOps.scala"
BootstrapMethods:
  0: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #152 ()Ljava/lang/Object;
      #157 REF_invokeStatic os/copy$.$anonfun$apply$2:(Los/Path;Los/Path;)Ljava/lang/String;
      #159 ()Ljava/lang/String;
      #160 5
      #161 1
      #159 ()Ljava/lang/String;
  1: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #224 REF_invokeStatic os/copy$.$anonfun$apply$3:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;Los/Path;)Ljava/nio/file/Path;
      #226 (Los/Path;)Ljava/nio/file/Path;
      #160 5
      #161 1
      #226 (Los/Path;)Ljava/nio/file/Path;
  2: #319 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #157 REF_invokeStatic os/copy$.$anonfun$apply$2:(Los/Path;Los/Path;)Ljava/lang/String;
      #224 REF_invokeStatic os/copy$.$anonfun$apply$3:(Los/Path;Los/Path;ZZ[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;[Ljava/nio/file/CopyOption;Los/Path;)Ljava/nio/file/Path;
  ScalaInlineInfo: length = 0x5E (unknown attribute)
   01 01 00 12 00 99 00 9A 01 00 DC 00 DD 01 00 1B
   00 1A 01 00 43 00 F0 01 00 43 00 44 01 00 CA 00
   32 01 00 CD 00 32 01 00 D0 00 32 01 00 D4 00 32
   01 00 F3 00 32 01 00 B0 00 B1 01 00 20 00 2F 01
   00 20 00 21 01 00 31 00 32 01 00 35 00 32 01 00
   38 00 32 01 00 3B 00 32 01 00 3E 00 32 01
  Scala: length = 0x0 (unknown attribute)

