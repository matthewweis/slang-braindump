Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/logika/package$BS$.class
  Last modified May 29, 2022; size 3964 bytes
  SHA-256 checksum ecd7625c3418087c4d134591cc34dcfc9edd9943af69f0f607451afd359ab4d2
  Compiled from "package.scala"
public class org.sireum.logika.package$BS$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/logika/package$BS$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/logika/package$BS$
    #2 = Class              #1            // org/sireum/logika/package$BS$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               package.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$MSZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$MSZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               MSZ$
   #16 = Utf8               org/sireum/logika/package$$Int2Z$
   #17 = Class              #16           // org/sireum/logika/package$$Int2Z$
   #18 = Utf8               org/sireum/logika/package
   #19 = Class              #18           // org/sireum/logika/package
   #20 = Utf8               $Int2Z$
   #21 = Utf8               org/sireum/logika/package$B$
   #22 = Class              #21           // org/sireum/logika/package$B$
   #23 = Utf8               B$
   #24 = Utf8               BS$
   #25 = Utf8               org/sireum/logika/package$N$
   #26 = Class              #25           // org/sireum/logika/package$N$
   #27 = Utf8               N$
   #28 = Utf8               MODULE$
   #29 = Utf8               Lorg/sireum/logika/package$BS$;
   #30 = Utf8               <clinit>
   #31 = Utf8               ()V
   #32 = Utf8               <init>
   #33 = NameAndType        #32:#31       // "<init>":()V
   #34 = Methodref          #2.#33        // org/sireum/logika/package$BS$."<init>":()V
   #35 = NameAndType        #28:#29       // MODULE$:Lorg/sireum/logika/package$BS$;
   #36 = Fieldref           #2.#35        // org/sireum/logika/package$BS$.MODULE$:Lorg/sireum/logika/package$BS$;
   #37 = Utf8               apply
   #38 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/MS;
   #39 = Utf8               (Lscala/collection/immutable/Seq<Lorg/sireum/B;>;)Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/B;>;
   #40 = Utf8               values
   #41 = Utf8               org/sireum/package$
   #42 = Class              #41           // org/sireum/package$
   #43 = Utf8               Lorg/sireum/package$;
   #44 = NameAndType        #28:#43       // MODULE$:Lorg/sireum/package$;
   #45 = Fieldref           #42.#44       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #46 = Utf8               MSZ
   #47 = Utf8               ()Lorg/sireum/$internal/PackageTrait$MSZ$;
   #48 = NameAndType        #46:#47       // MSZ:()Lorg/sireum/$internal/PackageTrait$MSZ$;
   #49 = Methodref          #42.#48       // org/sireum/package$.MSZ:()Lorg/sireum/$internal/PackageTrait$MSZ$;
   #50 = NameAndType        #37:#38       // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/MS;
   #51 = Methodref          #12.#50       // org/sireum/$internal/PackageTrait$MSZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/MS;
   #52 = Utf8               this
   #53 = Utf8               Lscala/collection/immutable/Seq;
   #54 = Utf8               create
   #55 = Utf8               (Lorg/sireum/Z;Z)Lorg/sireum/MS;
   #56 = Utf8               (Lorg/sireum/Z;Z)Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/B;>;
   #57 = Utf8               size
   #58 = Utf8               default
   #59 = Utf8               org/sireum/MS$
   #60 = Class              #59           // org/sireum/MS$
   #61 = Utf8               Lorg/sireum/MS$;
   #62 = NameAndType        #28:#61       // MODULE$:Lorg/sireum/MS$;
   #63 = Fieldref           #60.#62       // org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
   #64 = Utf8               org/sireum/B
   #65 = Class              #64           // org/sireum/B
   #66 = Utf8               (Z)V
   #67 = NameAndType        #32:#66       // "<init>":(Z)V
   #68 = Methodref          #65.#67       // org/sireum/B."<init>":(Z)V
   #69 = Utf8               $ZCompanion
   #70 = Utf8               ()Lorg/sireum/$ZCompanion;
   #71 = NameAndType        #69:#70       // $ZCompanion:()Lorg/sireum/$ZCompanion;
   #72 = Methodref          #42.#71       // org/sireum/package$.$ZCompanion:()Lorg/sireum/$ZCompanion;
   #73 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #74 = NameAndType        #54:#73       // create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #75 = Methodref          #60.#74       // org/sireum/MS$.create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #76 = Utf8               Lorg/sireum/Z;
   #77 = Utf8               Z
   #78 = Utf8               random
   #79 = Utf8               ()Lorg/sireum/MS;
   #80 = Utf8               ()Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/B;>;
   #81 = Utf8               org/sireum/N
   #82 = Class              #81           // org/sireum/N
   #83 = Utf8               Lorg/sireum/logika/package$N$;
   #84 = NameAndType        #28:#83       // MODULE$:Lorg/sireum/logika/package$N$;
   #85 = Fieldref           #26.#84       // org/sireum/logika/package$N$.MODULE$:Lorg/sireum/logika/package$N$;
   #86 = Utf8               ()Lorg/sireum/Z;
   #87 = NameAndType        #78:#86       // random:()Lorg/sireum/Z;
   #88 = Methodref          #26.#87       // org/sireum/logika/package$N$.random:()Lorg/sireum/Z;
   #89 = Utf8               (Lorg/sireum/Z;)V
   #90 = NameAndType        #32:#89       // "<init>":(Lorg/sireum/Z;)V
   #91 = Methodref          #82.#90       // org/sireum/N."<init>":(Lorg/sireum/Z;)V
   #92 = Utf8               toMP
   #93 = NameAndType        #92:#86       // toMP:()Lorg/sireum/Z;
   #94 = Methodref          #82.#93       // org/sireum/N.toMP:()Lorg/sireum/Z;
   #95 = Utf8               org/sireum/logika/package$
   #96 = Class              #95           // org/sireum/logika/package$
   #97 = Utf8               Lorg/sireum/logika/package$;
   #98 = NameAndType        #28:#97       // MODULE$:Lorg/sireum/logika/package$;
   #99 = Fieldref           #96.#98       // org/sireum/logika/package$.MODULE$:Lorg/sireum/logika/package$;
  #100 = Utf8               org$sireum$logika$package$$MaxRandomSeqSize
  #101 = NameAndType        #100:#86      // org$sireum$logika$package$$MaxRandomSeqSize:()Lorg/sireum/Z;
  #102 = Methodref          #96.#101      // org/sireum/logika/package$.org$sireum$logika$package$$MaxRandomSeqSize:()Lorg/sireum/Z;
  #103 = Utf8               org/sireum/Z
  #104 = Class              #103          // org/sireum/Z
  #105 = Utf8               $percent
  #106 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #107 = NameAndType        #105:#106     // $percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #108 = InterfaceMethodref #104.#107     // org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #109 = Utf8               Lorg/sireum/logika/package$B$;
  #110 = NameAndType        #28:#109      // MODULE$:Lorg/sireum/logika/package$B$;
  #111 = Fieldref           #22.#110      // org/sireum/logika/package$B$.MODULE$:Lorg/sireum/logika/package$B$;
  #112 = Utf8               ()Z
  #113 = NameAndType        #78:#112      // random:()Z
  #114 = Methodref          #22.#113      // org/sireum/logika/package$B$.random:()Z
  #115 = Utf8               Lorg/sireum/logika/package$$Int2Z$;
  #116 = NameAndType        #28:#115      // MODULE$:Lorg/sireum/logika/package$$Int2Z$;
  #117 = Fieldref           #17.#116      // org/sireum/logika/package$$Int2Z$.MODULE$:Lorg/sireum/logika/package$$Int2Z$;
  #118 = Utf8               $Int2Z
  #119 = Utf8               (I)I
  #120 = NameAndType        #118:#119     // $Int2Z:(I)I
  #121 = Methodref          #96.#120      // org/sireum/logika/package$.$Int2Z:(I)I
  #122 = Utf8               org/sireum/MS
  #123 = Class              #122          // org/sireum/MS
  #124 = NameAndType        #57:#86       // size:()Lorg/sireum/Z;
  #125 = Methodref          #123.#124     // org/sireum/MS.size:()Lorg/sireum/Z;
  #126 = Utf8               until$extension
  #127 = Utf8               (ILorg/sireum/Z;)Lorg/sireum/ZRange;
  #128 = NameAndType        #126:#127     // until$extension:(ILorg/sireum/Z;)Lorg/sireum/ZRange;
  #129 = Methodref          #17.#128      // org/sireum/logika/package$$Int2Z$.until$extension:(ILorg/sireum/Z;)Lorg/sireum/ZRange;
  #130 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #131 = MethodType         #130          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #132 = Utf8               $anonfun$random$1$adapted
  #133 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;)Ljava/lang/Object;
  #134 = NameAndType        #132:#133     // $anonfun$random$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;)Ljava/lang/Object;
  #135 = Methodref          #2.#134       // org/sireum/logika/package$BS$.$anonfun$random$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;)Ljava/lang/Object;
  #136 = MethodHandle       6:#135        // REF_invokeStatic org/sireum/logika/package$BS$.$anonfun$random$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;)Ljava/lang/Object;
  #137 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #138 = MethodType         #137          //  (Lorg/sireum/Z;)Ljava/lang/Object;
  #139 = Integer            5
  #140 = Integer            1
  #141 = Utf8               java/lang/invoke/LambdaMetafactory
  #142 = Class              #141          // java/lang/invoke/LambdaMetafactory
  #143 = Utf8               altMetafactory
  #144 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #145 = NameAndType        #143:#144     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #146 = Methodref          #142.#145     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #147 = MethodHandle       6:#146        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #148 = Utf8               (Lorg/sireum/MS;)Lscala/Function1;
  #149 = NameAndType        #37:#148      // apply:(Lorg/sireum/MS;)Lscala/Function1;
  #150 = InvokeDynamic      #0:#149       // #0:apply:(Lorg/sireum/MS;)Lscala/Function1;
  #151 = Utf8               org/sireum/ZRange
  #152 = Class              #151          // org/sireum/ZRange
  #153 = Utf8               foreach
  #154 = Utf8               (Lscala/Function1;)V
  #155 = NameAndType        #153:#154     // foreach:(Lscala/Function1;)V
  #156 = Methodref          #152.#155     // org/sireum/ZRange.foreach:(Lscala/Function1;)V
  #157 = Utf8               r
  #158 = Utf8               Lorg/sireum/MS;
  #159 = Utf8               $anonfun$random$1
  #160 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;)V
  #161 = Utf8               r$1
  #162 = Utf8               i
  #163 = Utf8               update
  #164 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #165 = NameAndType        #163:#164     // update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #166 = Methodref          #123.#165     // org/sireum/MS.update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #167 = Methodref          #4.#33        // java/lang/Object."<init>":()V
  #168 = NameAndType        #159:#160     // $anonfun$random$1:(Lorg/sireum/MS;Lorg/sireum/Z;)V
  #169 = Methodref          #2.#168       // org/sireum/logika/package$BS$.$anonfun$random$1:(Lorg/sireum/MS;Lorg/sireum/Z;)V
  #170 = Utf8               scala/runtime/BoxedUnit
  #171 = Class              #170          // scala/runtime/BoxedUnit
  #172 = Utf8               UNIT
  #173 = Utf8               Lscala/runtime/BoxedUnit;
  #174 = NameAndType        #172:#173     // UNIT:Lscala/runtime/BoxedUnit;
  #175 = Fieldref           #171.#174     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #176 = Utf8               $deserializeLambda$
  #177 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #178 = Utf8               scala/runtime/LambdaDeserialize
  #179 = Class              #178          // scala/runtime/LambdaDeserialize
  #180 = Utf8               bootstrap
  #181 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #182 = NameAndType        #180:#181     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #183 = Methodref          #179.#182     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #184 = MethodHandle       6:#183        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #185 = Utf8               lambdaDeserialize
  #186 = NameAndType        #185:#177     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #187 = InvokeDynamic      #1:#186       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #188 = Utf8               Code
  #189 = Utf8               LineNumberTable
  #190 = Utf8               LocalVariableTable
  #191 = Utf8               Signature
  #192 = Utf8               MethodParameters
  #193 = Utf8               InnerClasses
  #194 = Utf8               SourceFile
  #195 = Utf8               BootstrapMethods
  #196 = Utf8               ScalaInlineInfo
  #197 = Utf8               Scala
{
  public static final org.sireum.logika.package$BS$ MODULE$;
    descriptor: Lorg/sireum/logika/package$BS$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/logika/package$BS$
         3: dup
         4: invokespecial #34                 // Method "<init>":()V
         7: putstatic     #36                 // Field MODULE$:Lorg/sireum/logika/package$BS$;
        10: return
      LineNumberTable:
        line 129: 0

  public org.sireum.MS<org.sireum.Z, org.sireum.B> apply(scala.collection.immutable.Seq<org.sireum.B>);
    descriptor: (Lscala/collection/immutable/Seq;)Lorg/sireum/MS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #45                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #49                 // Method org/sireum/package$.MSZ:()Lorg/sireum/$internal/PackageTrait$MSZ$;
         6: aload_1
         7: invokevirtual #51                 // Method org/sireum/$internal/PackageTrait$MSZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/MS;
        10: areturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/logika/package$BS$;
            0      11     1 values   Lscala/collection/immutable/Seq;
    Signature: #39                          // (Lscala/collection/immutable/Seq<Lorg/sireum/B;>;)Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/B;>;
    MethodParameters:
      Name                           Flags
      values                         final

  public org.sireum.MS<org.sireum.Z, org.sireum.B> create(org.sireum.Z, boolean);
    descriptor: (Lorg/sireum/Z;Z)Lorg/sireum/MS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #63                 // Field org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
         3: aload_1
         4: new           #65                 // class org/sireum/B
         7: dup
         8: iload_2
         9: invokespecial #68                 // Method org/sireum/B."<init>":(Z)V
        12: getstatic     #45                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        15: invokevirtual #72                 // Method org/sireum/package$.$ZCompanion:()Lorg/sireum/$ZCompanion;
        18: invokevirtual #75                 // Method org/sireum/MS$.create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
        21: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/logika/package$BS$;
            0      22     1  size   Lorg/sireum/Z;
            0      22     2 default   Z
    Signature: #56                          // (Lorg/sireum/Z;Z)Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/B;>;
    MethodParameters:
      Name                           Flags
      size                           final
      default                        final

  public org.sireum.MS<org.sireum.Z, org.sireum.B> random();
    descriptor: ()Lorg/sireum/MS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: getstatic     #63                 // Field org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
         3: new           #82                 // class org/sireum/N
         6: dup
         7: getstatic     #85                 // Field org/sireum/logika/package$N$.MODULE$:Lorg/sireum/logika/package$N$;
        10: invokevirtual #88                 // Method org/sireum/logika/package$N$.random:()Lorg/sireum/Z;
        13: invokespecial #91                 // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        16: invokevirtual #94                 // Method org/sireum/N.toMP:()Lorg/sireum/Z;
        19: getstatic     #99                 // Field org/sireum/logika/package$.MODULE$:Lorg/sireum/logika/package$;
        22: invokevirtual #102                // Method org/sireum/logika/package$.org$sireum$logika$package$$MaxRandomSeqSize:()Lorg/sireum/Z;
        25: invokeinterface #108,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        30: new           #65                 // class org/sireum/B
        33: dup
        34: getstatic     #111                // Field org/sireum/logika/package$B$.MODULE$:Lorg/sireum/logika/package$B$;
        37: invokevirtual #114                // Method org/sireum/logika/package$B$.random:()Z
        40: invokespecial #68                 // Method org/sireum/B."<init>":(Z)V
        43: getstatic     #45                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        46: invokevirtual #72                 // Method org/sireum/package$.$ZCompanion:()Lorg/sireum/$ZCompanion;
        49: invokevirtual #75                 // Method org/sireum/MS$.create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
        52: astore_1
        53: getstatic     #117                // Field org/sireum/logika/package$$Int2Z$.MODULE$:Lorg/sireum/logika/package$$Int2Z$;
        56: getstatic     #99                 // Field org/sireum/logika/package$.MODULE$:Lorg/sireum/logika/package$;
        59: iconst_0
        60: invokevirtual #121                // Method org/sireum/logika/package$.$Int2Z:(I)I
        63: aload_1
        64: invokevirtual #125                // Method org/sireum/MS.size:()Lorg/sireum/Z;
        67: invokevirtual #129                // Method org/sireum/logika/package$$Int2Z$.until$extension:(ILorg/sireum/Z;)Lorg/sireum/ZRange;
        70: aload_1
        71: invokedynamic #150,  0            // InvokeDynamic #0:apply:(Lorg/sireum/MS;)Lscala/Function1;
        76: invokevirtual #156                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
        79: aload_1
        80: areturn
      LineNumberTable:
        line 135: 0
        line 136: 53
        line 139: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           53      27     1     r   Lorg/sireum/MS;
            0      81     0  this   Lorg/sireum/logika/package$BS$;
    Signature: #80                          // ()Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/B;>;

  public static final void $anonfun$random$1(org.sireum.MS, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: new           #65                 // class org/sireum/B
         5: dup
         6: getstatic     #111                // Field org/sireum/logika/package$B$.MODULE$:Lorg/sireum/logika/package$B$;
         9: invokevirtual #114                // Method org/sireum/logika/package$B$.random:()Z
        12: invokespecial #68                 // Method org/sireum/B."<init>":(Z)V
        15: invokevirtual #166                // Method org/sireum/MS.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        18: return
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0   r$1   Lorg/sireum/MS;
            0      19     1     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      r$1                            final
      i                              final

  public org.sireum.logika.package$BS$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #167                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/logika/package$BS$;

  public static final java.lang.Object $anonfun$random$1$adapted(org.sireum.MS, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #169                // Method $anonfun$random$1:(Lorg/sireum/MS;Lorg/sireum/Z;)V
         5: getstatic     #175                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$1   Lorg/sireum/MS;
            0       9     1     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      r$1                            final
      i                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #187,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // MSZ$=class org/sireum/$internal/PackageTrait$MSZ$ of class org/sireum/$internal/PackageTrait
  public static #20= #17 of #19;          // $Int2Z$=class org/sireum/logika/package$$Int2Z$ of class org/sireum/logika/package
  public static #23= #22 of #19;          // B$=class org/sireum/logika/package$B$ of class org/sireum/logika/package
  public static #24= #2 of #19;           // BS$=class org/sireum/logika/package$BS$ of class org/sireum/logika/package
  public static #27= #26 of #19;          // N$=class org/sireum/logika/package$N$ of class org/sireum/logika/package
SourceFile: "package.scala"
BootstrapMethods:
  0: #147 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #131 (Ljava/lang/Object;)Ljava/lang/Object;
      #136 REF_invokeStatic org/sireum/logika/package$BS$.$anonfun$random$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;)Ljava/lang/Object;
      #138 (Lorg/sireum/Z;)Ljava/lang/Object;
      #139 5
      #140 1
      #138 (Lorg/sireum/Z;)Ljava/lang/Object;
  1: #184 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #136 REF_invokeStatic org/sireum/logika/package$BS$.$anonfun$random$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 9F 00 A0 01 00 84 00 85 01 00 20
   00 1F 01 00 25 00 26 01 00 36 00 37 01 00 4E 00
   4F 01
  Scala: length = 0x0 (unknown attribute)

