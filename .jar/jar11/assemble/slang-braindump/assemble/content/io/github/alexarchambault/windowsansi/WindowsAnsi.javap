Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/io/github/alexarchambault/windowsansi/WindowsAnsi.class
  Last modified May 29, 2022; size 1836 bytes
  SHA-256 checksum ca352780d75bc1e02d7515da40e6f6f4f5f8f12eadd2e865d70de8d196cfa504
  Compiled from "WindowsAnsi.java"
public final class io.github.alexarchambault.windowsansi.WindowsAnsi
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #24                         // io/github/alexarchambault/windowsansi/WindowsAnsi
  super_class: #25                        // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 2
Constant pool:
    #1 = Methodref          #25.#43       // java/lang/Object."<init>":()V
    #2 = Fieldref           #44.#45       // org/fusesource/jansi/internal/Kernel32.STD_OUTPUT_HANDLE:I
    #3 = Methodref          #44.#46       // org/fusesource/jansi/internal/Kernel32.GetStdHandle:(I)J
    #4 = Class              #47           // org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO
    #5 = Methodref          #4.#43        // org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO."<init>":()V
    #6 = Methodref          #44.#49       // org/fusesource/jansi/internal/Kernel32.GetConsoleScreenBufferInfo:(JLorg/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO;)I
    #7 = Methodref          #4.#50        // org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO.windowWidth:()I
    #8 = Methodref          #4.#51        // org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO.windowHeight:()I
    #9 = Methodref          #26.#52       // io/github/alexarchambault/windowsansi/WindowsAnsi$Size.of:(II)Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
   #10 = Methodref          #44.#53       // org/fusesource/jansi/internal/Kernel32.GetConsoleMode:(J[I)I
   #11 = Class              #54           // java/io/IOException
   #12 = Class              #55           // java/lang/StringBuilder
   #13 = Methodref          #12.#43       // java/lang/StringBuilder."<init>":()V
   #14 = String             #56           // Failed to get console mode:
   #15 = Methodref          #12.#57       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #16 = Methodref          #58.#59       // org/fusesource/jansi/internal/WindowsSupport.getLastErrorMessage:()Ljava/lang/String;
   #17 = Methodref          #12.#60       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #18 = Methodref          #11.#61       // java/io/IOException."<init>":(Ljava/lang/String;)V
   #19 = Methodref          #44.#62       // org/fusesource/jansi/internal/Kernel32.SetConsoleMode:(JI)I
   #20 = String             #63           // com.ibm.vm.bitmode
   #21 = Methodref          #64.#65       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
   #22 = String             #66           // 64
   #23 = Methodref          #64.#67       // java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #24 = Class              #68           // io/github/alexarchambault/windowsansi/WindowsAnsi
   #25 = Class              #69           // java/lang/Object
   #26 = Class              #70           // io/github/alexarchambault/windowsansi/WindowsAnsi$Size
   #27 = Utf8               Size
   #28 = Utf8               InnerClasses
   #29 = Utf8               <init>
   #30 = Utf8               ()V
   #31 = Utf8               Code
   #32 = Utf8               LineNumberTable
   #33 = Utf8               terminalSize
   #34 = Utf8               ()Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
   #35 = Utf8               setup
   #36 = Utf8               ()Z
   #37 = Utf8               StackMapTable
   #38 = Class              #71           // "[I"
   #39 = Utf8               Exceptions
   #40 = Utf8               <clinit>
   #41 = Utf8               SourceFile
   #42 = Utf8               WindowsAnsi.java
   #43 = NameAndType        #29:#30       // "<init>":()V
   #44 = Class              #72           // org/fusesource/jansi/internal/Kernel32
   #45 = NameAndType        #73:#74       // STD_OUTPUT_HANDLE:I
   #46 = NameAndType        #75:#76       // GetStdHandle:(I)J
   #47 = Utf8               org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO
   #48 = Utf8               CONSOLE_SCREEN_BUFFER_INFO
   #49 = NameAndType        #77:#78       // GetConsoleScreenBufferInfo:(JLorg/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO;)I
   #50 = NameAndType        #79:#80       // windowWidth:()I
   #51 = NameAndType        #81:#80       // windowHeight:()I
   #52 = NameAndType        #82:#83       // of:(II)Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
   #53 = NameAndType        #84:#85       // GetConsoleMode:(J[I)I
   #54 = Utf8               java/io/IOException
   #55 = Utf8               java/lang/StringBuilder
   #56 = Utf8               Failed to get console mode:
   #57 = NameAndType        #86:#87       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #58 = Class              #88           // org/fusesource/jansi/internal/WindowsSupport
   #59 = NameAndType        #89:#90       // getLastErrorMessage:()Ljava/lang/String;
   #60 = NameAndType        #91:#90       // toString:()Ljava/lang/String;
   #61 = NameAndType        #29:#92       // "<init>":(Ljava/lang/String;)V
   #62 = NameAndType        #93:#94       // SetConsoleMode:(JI)I
   #63 = Utf8               com.ibm.vm.bitmode
   #64 = Class              #95           // java/lang/System
   #65 = NameAndType        #96:#97       // getProperty:(Ljava/lang/String;)Ljava/lang/String;
   #66 = Utf8               64
   #67 = NameAndType        #98:#99       // setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #68 = Utf8               io/github/alexarchambault/windowsansi/WindowsAnsi
   #69 = Utf8               java/lang/Object
   #70 = Utf8               io/github/alexarchambault/windowsansi/WindowsAnsi$Size
   #71 = Utf8               [I
   #72 = Utf8               org/fusesource/jansi/internal/Kernel32
   #73 = Utf8               STD_OUTPUT_HANDLE
   #74 = Utf8               I
   #75 = Utf8               GetStdHandle
   #76 = Utf8               (I)J
   #77 = Utf8               GetConsoleScreenBufferInfo
   #78 = Utf8               (JLorg/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO;)I
   #79 = Utf8               windowWidth
   #80 = Utf8               ()I
   #81 = Utf8               windowHeight
   #82 = Utf8               of
   #83 = Utf8               (II)Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
   #84 = Utf8               GetConsoleMode
   #85 = Utf8               (J[I)I
   #86 = Utf8               append
   #87 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #88 = Utf8               org/fusesource/jansi/internal/WindowsSupport
   #89 = Utf8               getLastErrorMessage
   #90 = Utf8               ()Ljava/lang/String;
   #91 = Utf8               toString
   #92 = Utf8               (Ljava/lang/String;)V
   #93 = Utf8               SetConsoleMode
   #94 = Utf8               (JI)I
   #95 = Utf8               java/lang/System
   #96 = Utf8               getProperty
   #97 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #98 = Utf8               setProperty
   #99 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
{
  public io.github.alexarchambault.windowsansi.WindowsAnsi();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 9: 0

  public static io.github.alexarchambault.windowsansi.WindowsAnsi$Size terminalSize();
    descriptor: ()Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=0
         0: getstatic     #2                  // Field org/fusesource/jansi/internal/Kernel32.STD_OUTPUT_HANDLE:I
         3: invokestatic  #3                  // Method org/fusesource/jansi/internal/Kernel32.GetStdHandle:(I)J
         6: lstore_0
         7: new           #4                  // class org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO
        10: dup
        11: invokespecial #5                  // Method org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO."<init>":()V
        14: astore_2
        15: lload_0
        16: aload_2
        17: invokestatic  #6                  // Method org/fusesource/jansi/internal/Kernel32.GetConsoleScreenBufferInfo:(JLorg/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO;)I
        20: pop
        21: aload_2
        22: invokevirtual #7                  // Method org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO.windowWidth:()I
        25: aload_2
        26: invokevirtual #8                  // Method org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO.windowHeight:()I
        29: invokestatic  #9                  // Method io/github/alexarchambault/windowsansi/WindowsAnsi$Size.of:(II)Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
        32: areturn
      LineNumberTable:
        line 19: 0
        line 20: 7
        line 21: 15
        line 22: 21

  public static boolean setup() throws java.io.IOException;
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=0
         0: getstatic     #2                  // Field org/fusesource/jansi/internal/Kernel32.STD_OUTPUT_HANDLE:I
         3: invokestatic  #3                  // Method org/fusesource/jansi/internal/Kernel32.GetStdHandle:(I)J
         6: lstore_1
         7: iconst_1
         8: newarray       int
        10: astore_3
        11: lload_1
        12: aload_3
        13: invokestatic  #10                 // Method org/fusesource/jansi/internal/Kernel32.GetConsoleMode:(J[I)I
        16: ifne          48
        19: new           #11                 // class java/io/IOException
        22: dup
        23: new           #12                 // class java/lang/StringBuilder
        26: dup
        27: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
        30: ldc           #14                 // String Failed to get console mode:
        32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: invokestatic  #16                 // Method org/fusesource/jansi/internal/WindowsSupport.getLastErrorMessage:()Ljava/lang/String;
        38: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        44: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        47: athrow
        48: lload_1
        49: aload_3
        50: iconst_0
        51: iaload
        52: iconst_4
        53: ior
        54: invokestatic  #19                 // Method org/fusesource/jansi/internal/Kernel32.SetConsoleMode:(JI)I
        57: ifeq          64
        60: iconst_1
        61: goto          65
        64: iconst_0
        65: ireturn
      LineNumberTable:
        line 31: 0
        line 32: 7
        line 33: 11
        line 34: 19
        line 35: 48
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 48
          locals = [ top, long, class "[I" ]
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: ldc           #20                 // String com.ibm.vm.bitmode
         2: invokestatic  #21                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
         5: ifnonnull     16
         8: ldc           #20                 // String com.ibm.vm.bitmode
        10: ldc           #22                 // String 64
        12: invokestatic  #23                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        15: pop
        16: return
      LineNumberTable:
        line 13: 0
        line 14: 8
        line 15: 16
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
}
SourceFile: "WindowsAnsi.java"
InnerClasses:
  public static final #27= #26 of #24;    // Size=class io/github/alexarchambault/windowsansi/WindowsAnsi$Size of class io/github/alexarchambault/windowsansi/WindowsAnsi
  public static #48= #4 of #44;           // CONSOLE_SCREEN_BUFFER_INFO=class org/fusesource/jansi/internal/Kernel32$CONSOLE_SCREEN_BUFFER_INFO of class org/fusesource/jansi/internal/Kernel32
