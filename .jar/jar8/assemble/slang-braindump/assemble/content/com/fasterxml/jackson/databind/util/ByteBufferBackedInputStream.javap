Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/util/ByteBufferBackedInputStream.class
  Last modified May 29, 2022; size 1099 bytes
  SHA-256 checksum 8b88ccf70c4271fd66833e064ca919e9ee67d03c2522805c92c6882c2039a5b2
  Compiled from "ByteBufferBackedInputStream.java"
public class com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream extends java.io.InputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                          // com/fasterxml/jackson/databind/util/ByteBufferBackedInputStream
  super_class: #9                         // java/io/InputStream
  interfaces: 0, fields: 1, methods: 4, attributes: 1
Constant pool:
   #1 = Methodref          #9.#34         // java/io/InputStream."<init>":()V
   #2 = Fieldref           #8.#35         // com/fasterxml/jackson/databind/util/ByteBufferBackedInputStream._b:Ljava/nio/ByteBuffer;
   #3 = Methodref          #36.#37        // java/nio/ByteBuffer.remaining:()I
   #4 = Methodref          #36.#38        // java/nio/ByteBuffer.hasRemaining:()Z
   #5 = Methodref          #36.#39        // java/nio/ByteBuffer.get:()B
   #6 = Methodref          #40.#41        // java/lang/Math.min:(II)I
   #7 = Methodref          #36.#42        // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
   #8 = Class              #43            // com/fasterxml/jackson/databind/util/ByteBufferBackedInputStream
   #9 = Class              #44            // java/io/InputStream
  #10 = Utf8               _b
  #11 = Utf8               Ljava/nio/ByteBuffer;
  #12 = Utf8               <init>
  #13 = Utf8               (Ljava/nio/ByteBuffer;)V
  #14 = Utf8               Code
  #15 = Utf8               LineNumberTable
  #16 = Utf8               LocalVariableTable
  #17 = Utf8               this
  #18 = Utf8               Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;
  #19 = Utf8               buf
  #20 = Utf8               available
  #21 = Utf8               ()I
  #22 = Utf8               read
  #23 = Utf8               StackMapTable
  #24 = Utf8               Exceptions
  #25 = Class              #45            // java/io/IOException
  #26 = Utf8               ([BII)I
  #27 = Utf8               bytes
  #28 = Utf8               [B
  #29 = Utf8               off
  #30 = Utf8               I
  #31 = Utf8               len
  #32 = Utf8               SourceFile
  #33 = Utf8               ByteBufferBackedInputStream.java
  #34 = NameAndType        #12:#46        // "<init>":()V
  #35 = NameAndType        #10:#11        // _b:Ljava/nio/ByteBuffer;
  #36 = Class              #47            // java/nio/ByteBuffer
  #37 = NameAndType        #48:#21        // remaining:()I
  #38 = NameAndType        #49:#50        // hasRemaining:()Z
  #39 = NameAndType        #51:#52        // get:()B
  #40 = Class              #53            // java/lang/Math
  #41 = NameAndType        #54:#55        // min:(II)I
  #42 = NameAndType        #51:#56        // get:([BII)Ljava/nio/ByteBuffer;
  #43 = Utf8               com/fasterxml/jackson/databind/util/ByteBufferBackedInputStream
  #44 = Utf8               java/io/InputStream
  #45 = Utf8               java/io/IOException
  #46 = Utf8               ()V
  #47 = Utf8               java/nio/ByteBuffer
  #48 = Utf8               remaining
  #49 = Utf8               hasRemaining
  #50 = Utf8               ()Z
  #51 = Utf8               get
  #52 = Utf8               ()B
  #53 = Utf8               java/lang/Math
  #54 = Utf8               min
  #55 = Utf8               (II)I
  #56 = Utf8               ([BII)Ljava/nio/ByteBuffer;
{
  protected final java.nio.ByteBuffer _b;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL

  public com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream(java.nio.ByteBuffer);
    descriptor: (Ljava/nio/ByteBuffer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #2                  // Field _b:Ljava/nio/ByteBuffer;
         9: return
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;
            0      10     1   buf   Ljava/nio/ByteBuffer;

  public int available();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _b:Ljava/nio/ByteBuffer;
         4: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
         7: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _b:Ljava/nio/ByteBuffer;
         4: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
         7: ifeq          24
        10: aload_0
        11: getfield      #2                  // Field _b:Ljava/nio/ByteBuffer;
        14: invokevirtual #5                  // Method java/nio/ByteBuffer.get:()B
        17: sipush        255
        20: iand
        21: goto          25
        24: iconst_m1
        25: ireturn
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #2                  // Field _b:Ljava/nio/ByteBuffer;
         4: invokevirtual #4                  // Method java/nio/ByteBuffer.hasRemaining:()Z
         7: ifne          12
        10: iconst_m1
        11: ireturn
        12: iload_3
        13: aload_0
        14: getfield      #2                  // Field _b:Ljava/nio/ByteBuffer;
        17: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
        20: invokestatic  #6                  // Method java/lang/Math.min:(II)I
        23: istore_3
        24: aload_0
        25: getfield      #2                  // Field _b:Ljava/nio/ByteBuffer;
        28: aload_1
        29: iload_2
        30: iload_3
        31: invokevirtual #7                  // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
        34: pop
        35: iload_3
        36: ireturn
      LineNumberTable:
        line 23: 0
        line 24: 12
        line 25: 24
        line 26: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;
            0      37     1 bytes   [B
            0      37     2   off   I
            0      37     3   len   I
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
    Exceptions:
      throws java.io.IOException
}
SourceFile: "ByteBufferBackedInputStream.java"
