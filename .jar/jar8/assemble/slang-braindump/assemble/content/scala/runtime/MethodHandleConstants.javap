Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/runtime/MethodHandleConstants.class
  Last modified May 29, 2022; size 1575 bytes
  SHA-256 checksum 5a9d8fb25e9efca5ae757b1c90dba68e4358081f8bebf5ea3e44dc9e8093d960
  Compiled from "MethodHandleConstants.java"
class scala.runtime.MethodHandleConstants
  minor version: 0
  major version: 52
  flags: (0x0020) ACC_SUPER
  this_class: #17                         // scala/runtime/MethodHandleConstants
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 2
Constant pool:
   #1 = Methodref          #6.#36         // java/lang/Object."<init>":()V
   #2 = Methodref          #37.#38        // java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
   #3 = String             #39            // scala.runtime.LambdaDeserialize
   #4 = Methodref          #40.#41        // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
   #5 = String             #42            // deserializeLambda
   #6 = Class              #43            // java/lang/Object
   #7 = Class              #44            // java/lang/invoke/SerializedLambda
   #8 = Methodref          #45.#46        // java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
   #9 = Methodref          #47.#48        // java/lang/invoke/MethodHandles$Lookup.findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
  #10 = Class              #49            // java/lang/NoSuchMethodException
  #11 = Class              #50            // java/lang/IllegalAccessException
  #12 = Class              #51            // java/lang/ClassNotFoundException
  #13 = Class              #52            // java/lang/ExceptionInInitializerError
  #14 = Methodref          #13.#53        // java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/Throwable;)V
  #15 = Methodref          #17.#54        // scala/runtime/MethodHandleConstants.lookupDeserialize:()Ljava/lang/invoke/MethodHandle;
  #16 = Fieldref           #17.#55        // scala/runtime/MethodHandleConstants.LAMBDA_DESERIALIZE_DESERIALIZE_LAMBDA:Ljava/lang/invoke/MethodHandle;
  #17 = Class              #56            // scala/runtime/MethodHandleConstants
  #18 = Utf8               LAMBDA_DESERIALIZE_DESERIALIZE_LAMBDA
  #19 = Utf8               Ljava/lang/invoke/MethodHandle;
  #20 = Utf8               <init>
  #21 = Utf8               ()V
  #22 = Utf8               Code
  #23 = Utf8               LineNumberTable
  #24 = Utf8               LocalVariableTable
  #25 = Utf8               this
  #26 = Utf8               Lscala/runtime/MethodHandleConstants;
  #27 = Utf8               lookupDeserialize
  #28 = Utf8               ()Ljava/lang/invoke/MethodHandle;
  #29 = Utf8               e
  #30 = Utf8               Ljava/lang/ReflectiveOperationException;
  #31 = Utf8               StackMapTable
  #32 = Class              #57            // java/lang/ReflectiveOperationException
  #33 = Utf8               <clinit>
  #34 = Utf8               SourceFile
  #35 = Utf8               MethodHandleConstants.java
  #36 = NameAndType        #20:#21        // "<init>":()V
  #37 = Class              #58            // java/lang/invoke/MethodHandles
  #38 = NameAndType        #59:#62        // lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
  #39 = Utf8               scala.runtime.LambdaDeserialize
  #40 = Class              #63            // java/lang/Class
  #41 = NameAndType        #64:#65        // forName:(Ljava/lang/String;)Ljava/lang/Class;
  #42 = Utf8               deserializeLambda
  #43 = Utf8               java/lang/Object
  #44 = Utf8               java/lang/invoke/SerializedLambda
  #45 = Class              #66            // java/lang/invoke/MethodType
  #46 = NameAndType        #67:#68        // methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
  #47 = Class              #69            // java/lang/invoke/MethodHandles$Lookup
  #48 = NameAndType        #70:#71        // findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
  #49 = Utf8               java/lang/NoSuchMethodException
  #50 = Utf8               java/lang/IllegalAccessException
  #51 = Utf8               java/lang/ClassNotFoundException
  #52 = Utf8               java/lang/ExceptionInInitializerError
  #53 = NameAndType        #20:#72        // "<init>":(Ljava/lang/Throwable;)V
  #54 = NameAndType        #27:#28        // lookupDeserialize:()Ljava/lang/invoke/MethodHandle;
  #55 = NameAndType        #18:#19        // LAMBDA_DESERIALIZE_DESERIALIZE_LAMBDA:Ljava/lang/invoke/MethodHandle;
  #56 = Utf8               scala/runtime/MethodHandleConstants
  #57 = Utf8               java/lang/ReflectiveOperationException
  #58 = Utf8               java/lang/invoke/MethodHandles
  #59 = Utf8               lookup
  #60 = Utf8               Lookup
  #61 = Utf8               InnerClasses
  #62 = Utf8               ()Ljava/lang/invoke/MethodHandles$Lookup;
  #63 = Utf8               java/lang/Class
  #64 = Utf8               forName
  #65 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;
  #66 = Utf8               java/lang/invoke/MethodType
  #67 = Utf8               methodType
  #68 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
  #69 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #70 = Utf8               findVirtual
  #71 = Utf8               (Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
  #72 = Utf8               (Ljava/lang/Throwable;)V
{
  static final java.lang.invoke.MethodHandle LAMBDA_DESERIALIZE_DESERIALIZE_LAMBDA;
    descriptor: Ljava/lang/invoke/MethodHandle;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  scala.runtime.MethodHandleConstants();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/MethodHandleConstants;

  private static java.lang.invoke.MethodHandle lookupDeserialize();
    descriptor: ()Ljava/lang/invoke/MethodHandle;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=5, locals=1, args_size=0
         0: invokestatic  #2                  // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
         3: ldc           #3                  // String scala.runtime.LambdaDeserialize
         5: invokestatic  #4                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
         8: ldc           #5                  // String deserializeLambda
        10: ldc           #6                  // class java/lang/Object
        12: ldc           #7                  // class java/lang/invoke/SerializedLambda
        14: invokestatic  #8                  // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
        17: invokevirtual #9                  // Method java/lang/invoke/MethodHandles$Lookup.findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
        20: areturn
        21: astore_0
        22: new           #13                 // class java/lang/ExceptionInInitializerError
        25: dup
        26: aload_0
        27: invokespecial #14                 // Method java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/Throwable;)V
        30: athrow
      Exception table:
         from    to  target type
             0    20    21   Class java/lang/NoSuchMethodException
             0    20    21   Class java/lang/IllegalAccessException
             0    20    21   Class java/lang/ClassNotFoundException
      LineNumberTable:
        line 30: 0
        line 31: 21
        line 32: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22       9     0     e   Ljava/lang/ReflectiveOperationException;
      StackMapTable: number_of_entries = 1
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/lang/ReflectiveOperationException ]

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: invokestatic  #15                 // Method lookupDeserialize:()Ljava/lang/invoke/MethodHandle;
         3: putstatic     #16                 // Field LAMBDA_DESERIALIZE_DESERIALIZE_LAMBDA:Ljava/lang/invoke/MethodHandle;
         6: return
      LineNumberTable:
        line 25: 0
        line 26: 6
}
SourceFile: "MethodHandleConstants.java"
InnerClasses:
  public static final #60= #47 of #37;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
