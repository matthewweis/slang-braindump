Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/JsonParser$LContext$.class
  Last modified May 29, 2022; size 5406 bytes
  SHA-256 checksum 738f596cc70d9e1ae475fc073a6b846c95c5d73393d8f84eef2f1ac77c597bb7
  Compiled from "JsonParser.scala"
public class org.sireum.parser.JsonParser$LContext$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/parser/JsonParser$LContext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/JsonParser$LContext$
    #2 = Class              #1            // org/sireum/parser/JsonParser$LContext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonParser.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/parser/Json$State
   #12 = Class              #11           // org/sireum/parser/Json$State
   #13 = Utf8               org/sireum/parser/Json
   #14 = Class              #13           // org/sireum/parser/Json
   #15 = Utf8               State
   #16 = Utf8               org/sireum/parser/Json$State$
   #17 = Class              #16           // org/sireum/parser/Json$State$
   #18 = Utf8               State$
   #19 = Utf8               org/sireum/parser/Json$State$State$Slang
   #20 = Class              #19           // org/sireum/parser/Json$State$State$Slang
   #21 = Utf8               State$Slang
   #22 = Utf8               org/sireum/parser/Json$State$State$Slang$state$
   #23 = Class              #22           // org/sireum/parser/Json$State$State$Slang$state$
   #24 = Utf8               state$
   #25 = Utf8               org/sireum/parser/JsonParser$LContext
   #26 = Class              #25           // org/sireum/parser/JsonParser$LContext
   #27 = Utf8               org/sireum/parser/JsonParser
   #28 = Class              #27           // org/sireum/parser/JsonParser
   #29 = Utf8               LContext
   #30 = Utf8               LContext$
   #31 = Utf8               MODULE$
   #32 = Utf8               Lorg/sireum/parser/JsonParser$LContext$;
   #33 = Utf8               <clinit>
   #34 = Utf8               ()V
   #35 = Utf8               <init>
   #36 = NameAndType        #35:#34       // "<init>":()V
   #37 = Methodref          #2.#36        // org/sireum/parser/JsonParser$LContext$."<init>":()V
   #38 = NameAndType        #31:#32       // MODULE$:Lorg/sireum/parser/JsonParser$LContext$;
   #39 = Fieldref           #2.#38        // org/sireum/parser/JsonParser$LContext$.MODULE$:Lorg/sireum/parser/JsonParser$LContext$;
   #40 = Utf8               create
   #41 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
   #42 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/Json$State;>;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
   #43 = Utf8               accepts
   #44 = Utf8               i
   #45 = Utf8               org/sireum/helper$
   #46 = Class              #45           // org/sireum/helper$
   #47 = Utf8               Lorg/sireum/helper$;
   #48 = NameAndType        #31:#47       // MODULE$:Lorg/sireum/helper$;
   #49 = Fieldref           #46.#48       // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
   #50 = Utf8               org/sireum/MS$
   #51 = Class              #50           // org/sireum/MS$
   #52 = Utf8               Lorg/sireum/MS$;
   #53 = NameAndType        #31:#52       // MODULE$:Lorg/sireum/MS$;
   #54 = Fieldref           #51.#53       // org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
   #55 = Utf8               org/sireum/Z$
   #56 = Class              #55           // org/sireum/Z$
   #57 = Utf8               Lorg/sireum/Z$;
   #58 = NameAndType        #31:#57       // MODULE$:Lorg/sireum/Z$;
   #59 = Fieldref           #56.#58       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #60 = Utf8               apply
   #61 = Utf8               (I)Lorg/sireum/Z;
   #62 = NameAndType        #60:#61       // apply:(I)Lorg/sireum/Z;
   #63 = Methodref          #56.#62       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #64 = Utf8               org/sireum/B
   #65 = Class              #64           // org/sireum/B
   #66 = Utf8               org/sireum/package$
   #67 = Class              #66           // org/sireum/package$
   #68 = Utf8               Lorg/sireum/package$;
   #69 = NameAndType        #31:#68       // MODULE$:Lorg/sireum/package$;
   #70 = Fieldref           #67.#69       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #71 = Utf8               F
   #72 = Utf8               ()Z
   #73 = NameAndType        #71:#72       // F:()Z
   #74 = Methodref          #67.#73       // org/sireum/package$.F:()Z
   #75 = Utf8               (Z)V
   #76 = NameAndType        #35:#75       // "<init>":(Z)V
   #77 = Methodref          #65.#76       // org/sireum/B."<init>":(Z)V
   #78 = Utf8               Lorg/sireum/parser/Json$State$;
   #79 = NameAndType        #31:#78       // MODULE$:Lorg/sireum/parser/Json$State$;
   #80 = Fieldref           #17.#79       // org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
   #81 = Utf8               $StateCompanion
   #82 = Utf8               ()Lorg/sireum/$ZCompanion;
   #83 = NameAndType        #81:#82       // $StateCompanion:()Lorg/sireum/$ZCompanion;
   #84 = Methodref          #17.#83       // org/sireum/parser/Json$State$.$StateCompanion:()Lorg/sireum/$ZCompanion;
   #85 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #86 = NameAndType        #40:#85       // create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #87 = Methodref          #51.#86       // org/sireum/MS$.create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #88 = Utf8               assignMut
   #89 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #90 = NameAndType        #88:#89       // assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #91 = Methodref          #46.#90       // org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #92 = Utf8               org/sireum/MS
   #93 = Class              #92           // org/sireum/MS
   #94 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #95 = MethodType         #94           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #96 = Utf8               $anonfun$create$2$adapted
   #97 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
   #98 = NameAndType        #96:#97       // $anonfun$create$2$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
   #99 = Methodref          #2.#98        // org/sireum/parser/JsonParser$LContext$.$anonfun$create$2$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #100 = MethodHandle       6:#99         // REF_invokeStatic org/sireum/parser/JsonParser$LContext$.$anonfun$create$2$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #101 = Integer            1
  #102 = Utf8               java/lang/invoke/LambdaMetafactory
  #103 = Class              #102          // java/lang/invoke/LambdaMetafactory
  #104 = Utf8               altMetafactory
  #105 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #106 = NameAndType        #104:#105     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #107 = Methodref          #103.#106     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #108 = MethodHandle       6:#107        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #109 = Utf8               (Lorg/sireum/MS;)Lscala/Function1;
  #110 = NameAndType        #60:#109      // apply:(Lorg/sireum/MS;)Lscala/Function1;
  #111 = InvokeDynamic      #0:#110       // #0:apply:(Lorg/sireum/MS;)Lscala/Function1;
  #112 = Utf8               org/sireum/IS
  #113 = Class              #112          // org/sireum/IS
  #114 = Utf8               foreach
  #115 = Utf8               (Lscala/Function1;)V
  #116 = NameAndType        #114:#115     // foreach:(Lscala/Function1;)V
  #117 = Methodref          #113.#116     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #118 = Utf8               toIS
  #119 = Utf8               ()Lorg/sireum/IS;
  #120 = NameAndType        #118:#119     // toIS:()Lorg/sireum/IS;
  #121 = Methodref          #93.#120      // org/sireum/MS.toIS:()Lorg/sireum/IS;
  #122 = Utf8               scala/StringContext
  #123 = Class              #122          // scala/StringContext
  #124 = Utf8               scala/runtime/ScalaRunTime$
  #125 = Class              #124          // scala/runtime/ScalaRunTime$
  #126 = Utf8               Lscala/runtime/ScalaRunTime$;
  #127 = NameAndType        #31:#126      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #128 = Fieldref           #125.#127     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #129 = Utf8               java/lang/String
  #130 = Class              #129          // java/lang/String
  #131 = Utf8               0
  #132 = String             #131          // 0
  #133 = Utf8               [Ljava/lang/Object;
  #134 = Class              #133          // "[Ljava/lang/Object;"
  #135 = Utf8               wrapRefArray
  #136 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #137 = NameAndType        #135:#136     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #138 = Methodref          #125.#137     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #139 = Utf8               (Lscala/collection/immutable/Seq;)V
  #140 = NameAndType        #35:#139      // "<init>":(Lscala/collection/immutable/Seq;)V
  #141 = Methodref          #123.#140     // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
  #142 = Utf8               (Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
  #143 = NameAndType        #21:#142      // State$Slang:(Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
  #144 = Methodref          #17.#143      // org/sireum/parser/Json$State$.State$Slang:(Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
  #145 = Utf8               state
  #146 = Utf8               ()Lorg/sireum/parser/Json$State$State$Slang$state$;
  #147 = NameAndType        #145:#146     // state:()Lorg/sireum/parser/Json$State$State$Slang$state$;
  #148 = Methodref          #20.#147      // org/sireum/parser/Json$State$State$Slang.state:()Lorg/sireum/parser/Json$State$State$Slang$state$;
  #149 = Utf8               scala/collection/immutable/Nil$
  #150 = Class              #149          // scala/collection/immutable/Nil$
  #151 = Utf8               Lscala/collection/immutable/Nil$;
  #152 = NameAndType        #31:#151      // MODULE$:Lscala/collection/immutable/Nil$;
  #153 = Fieldref           #150.#152     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #154 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #155 = NameAndType        #60:#154      // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #156 = Methodref          #23.#155      // org/sireum/parser/Json$State$State$Slang$state$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #157 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
  #158 = NameAndType        #60:#157      // apply:(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
  #159 = Methodref          #2.#158       // org/sireum/parser/JsonParser$LContext$.apply:(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
  #160 = Utf8               retMut
  #161 = NameAndType        #160:#89      // retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #162 = Methodref          #46.#161      // org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #163 = Utf8               accepting
  #164 = Utf8               Lorg/sireum/MS;
  #165 = Utf8               this
  #166 = Utf8               Lorg/sireum/IS;
  #167 = Utf8               Lorg/sireum/Z;
  #168 = Utf8               (Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
  #169 = Utf8               j
  #170 = Utf8               afterAcceptIndex
  #171 = Utf8               found
  #172 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
  #173 = NameAndType        #35:#172      // "<init>":(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
  #174 = Methodref          #26.#173      // org/sireum/parser/JsonParser$LContext."<init>":(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
  #175 = Utf8               Z
  #176 = Utf8               unapply
  #177 = Utf8               (Lorg/sireum/parser/JsonParser$LContext;)Lscala/Some;
  #178 = Utf8               (Lorg/sireum/parser/JsonParser$LContext;)Lscala/Some<Lscala/Tuple5<Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/parser/Json$State;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/B;>;>;
  #179 = Utf8               o
  #180 = Utf8               scala/Some
  #181 = Class              #180          // scala/Some
  #182 = Utf8               scala/Tuple5
  #183 = Class              #182          // scala/Tuple5
  #184 = NameAndType        #163:#119     // accepting:()Lorg/sireum/IS;
  #185 = Methodref          #26.#184      // org/sireum/parser/JsonParser$LContext.accepting:()Lorg/sireum/IS;
  #186 = Utf8               clone
  #187 = NameAndType        #186:#94      // clone:(Ljava/lang/Object;)Ljava/lang/Object;
  #188 = Methodref          #46.#187      // org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
  #189 = Utf8               ()Lorg/sireum/Z;
  #190 = NameAndType        #145:#189     // state:()Lorg/sireum/Z;
  #191 = Methodref          #26.#190      // org/sireum/parser/JsonParser$LContext.state:()Lorg/sireum/Z;
  #192 = Utf8               (Lorg/sireum/Z;)V
  #193 = NameAndType        #35:#192      // "<init>":(Lorg/sireum/Z;)V
  #194 = Methodref          #12.#193      // org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
  #195 = NameAndType        #169:#189     // j:()Lorg/sireum/Z;
  #196 = Methodref          #26.#195      // org/sireum/parser/JsonParser$LContext.j:()Lorg/sireum/Z;
  #197 = NameAndType        #170:#189     // afterAcceptIndex:()Lorg/sireum/Z;
  #198 = Methodref          #26.#197      // org/sireum/parser/JsonParser$LContext.afterAcceptIndex:()Lorg/sireum/Z;
  #199 = NameAndType        #171:#72      // found:()Z
  #200 = Methodref          #26.#199      // org/sireum/parser/JsonParser$LContext.found:()Z
  #201 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #202 = NameAndType        #35:#201      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #203 = Methodref          #183.#202     // scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #204 = Utf8               (Ljava/lang/Object;)V
  #205 = NameAndType        #35:#204      // "<init>":(Ljava/lang/Object;)V
  #206 = Methodref          #181.#205     // scala/Some."<init>":(Ljava/lang/Object;)V
  #207 = Utf8               Lorg/sireum/parser/JsonParser$LContext;
  #208 = Utf8               $anonfun$create$2
  #209 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;)V
  #210 = Utf8               accepting$2
  #211 = Utf8               accept
  #212 = Utf8               T
  #213 = NameAndType        #212:#72      // T:()Z
  #214 = Methodref          #67.#213      // org/sireum/package$.T:()Z
  #215 = Utf8               update
  #216 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #217 = NameAndType        #215:#216     // update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #218 = Methodref          #93.#217      // org/sireum/MS.update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #219 = Methodref          #4.#36        // java/lang/Object."<init>":()V
  #220 = Utf8               value
  #221 = NameAndType        #220:#189     // value:()Lorg/sireum/Z;
  #222 = Methodref          #12.#221      // org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
  #223 = NameAndType        #208:#209     // $anonfun$create$2:(Lorg/sireum/MS;Lorg/sireum/Z;)V
  #224 = Methodref          #2.#223       // org/sireum/parser/JsonParser$LContext$.$anonfun$create$2:(Lorg/sireum/MS;Lorg/sireum/Z;)V
  #225 = Utf8               scala/runtime/BoxedUnit
  #226 = Class              #225          // scala/runtime/BoxedUnit
  #227 = Utf8               UNIT
  #228 = Utf8               Lscala/runtime/BoxedUnit;
  #229 = NameAndType        #227:#228     // UNIT:Lscala/runtime/BoxedUnit;
  #230 = Fieldref           #226.#229     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #231 = Utf8               Ljava/lang/Object;
  #232 = Utf8               $deserializeLambda$
  #233 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #234 = Utf8               scala/runtime/LambdaDeserialize
  #235 = Class              #234          // scala/runtime/LambdaDeserialize
  #236 = Utf8               bootstrap
  #237 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #238 = NameAndType        #236:#237     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #239 = Methodref          #235.#238     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #240 = MethodHandle       6:#239        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #241 = Utf8               lambdaDeserialize
  #242 = NameAndType        #241:#233     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #243 = InvokeDynamic      #1:#242       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #244 = Utf8               Code
  #245 = Utf8               LineNumberTable
  #246 = Utf8               LocalVariableTable
  #247 = Utf8               Signature
  #248 = Utf8               MethodParameters
  #249 = Utf8               InnerClasses
  #250 = Utf8               SourceFile
  #251 = Utf8               BootstrapMethods
  #252 = Utf8               ScalaInlineInfo
  #253 = Utf8               Scala
{
  public static final org.sireum.parser.JsonParser$LContext$ MODULE$;
    descriptor: Lorg/sireum/parser/JsonParser$LContext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/parser/JsonParser$LContext$
         3: dup
         4: invokespecial #37                 // Method "<init>":()V
         7: putstatic     #39                 // Field MODULE$:Lorg/sireum/parser/JsonParser$LContext$;
        10: return
      LineNumberTable:
        line 137: 0

  public org.sireum.parser.JsonParser$LContext create(org.sireum.IS<org.sireum.Z, org.sireum.parser.Json$State>, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=4, args_size=3
         0: getstatic     #49                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #54                 // Field org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
         6: getstatic     #59                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         9: bipush        10
        11: invokevirtual #63                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: new           #65                 // class org/sireum/B
        17: dup
        18: getstatic     #70                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        21: invokevirtual #74                 // Method org/sireum/package$.F:()Z
        24: invokespecial #77                 // Method org/sireum/B."<init>":(Z)V
        27: getstatic     #80                 // Field org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
        30: invokevirtual #84                 // Method org/sireum/parser/Json$State$.$StateCompanion:()Lorg/sireum/$ZCompanion;
        33: invokevirtual #87                 // Method org/sireum/MS$.create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
        36: invokevirtual #91                 // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        39: checkcast     #93                 // class org/sireum/MS
        42: astore_3
        43: aload_1
        44: aload_3
        45: invokedynamic #111,  0            // InvokeDynamic #0:apply:(Lorg/sireum/MS;)Lscala/Function1;
        50: invokevirtual #117                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        53: getstatic     #49                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        56: aload_0
        57: aload_3
        58: invokevirtual #121                // Method org/sireum/MS.toIS:()Lorg/sireum/IS;
        61: getstatic     #80                 // Field org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
        64: new           #123                // class scala/StringContext
        67: dup
        68: getstatic     #128                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        71: iconst_1
        72: anewarray     #130                // class java/lang/String
        75: dup
        76: iconst_0
        77: ldc           #132                // String 0
        79: aastore
        80: checkcast     #134                // class "[Ljava/lang/Object;"
        83: invokevirtual #138                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        86: invokespecial #141                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        89: invokevirtual #144                // Method org/sireum/parser/Json$State$.State$Slang:(Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
        92: invokevirtual #148                // Method org/sireum/parser/Json$State$State$Slang.state:()Lorg/sireum/parser/Json$State$State$Slang$state$;
        95: getstatic     #153                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        98: invokevirtual #156                // Method org/sireum/parser/Json$State$State$Slang$state$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
       101: aload_2
       102: getstatic     #59                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       105: iconst_m1
       106: invokevirtual #63                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       109: getstatic     #70                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       112: invokevirtual #74                 // Method org/sireum/package$.F:()Z
       115: invokevirtual #159                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
       118: invokevirtual #162                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
       121: checkcast     #26                 // class org/sireum/parser/JsonParser$LContext
       124: areturn
      LineNumberTable:
        line 139: 0
        line 140: 43
        line 143: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      82     3 accepting   Lorg/sireum/MS;
            0     125     0  this   Lorg/sireum/parser/JsonParser$LContext$;
            0     125     1 accepts   Lorg/sireum/IS;
            0     125     2     i   Lorg/sireum/Z;
    Signature: #42                          // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/Json$State;>;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    MethodParameters:
      Name                           Flags
      accepts                        final
      i                              final

  public org.sireum.parser.JsonParser$LContext apply(org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.Z, org.sireum.Z, org.sireum.Z, boolean);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=6
         0: new           #26                 // class org/sireum/parser/JsonParser$LContext
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: iload         5
        11: invokespecial #174                // Method org/sireum/parser/JsonParser$LContext."<init>":(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
        14: areturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/parser/JsonParser$LContext$;
            0      15     1 accepting   Lorg/sireum/IS;
            0      15     2 state   Lorg/sireum/Z;
            0      15     3     j   Lorg/sireum/Z;
            0      15     4 afterAcceptIndex   Lorg/sireum/Z;
            0      15     5 found   Z
    Signature: #168                         // (Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
    MethodParameters:
      Name                           Flags
      accepting                      final
      state                          final
      j                              final
      afterAcceptIndex               final
      found                          final

  public scala.Some<scala.Tuple5<org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.parser.Json$State, org.sireum.Z, org.sireum.Z, org.sireum.B>> unapply(org.sireum.parser.JsonParser$LContext);
    descriptor: (Lorg/sireum/parser/JsonParser$LContext;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #181                // class scala/Some
         3: dup
         4: new           #183                // class scala/Tuple5
         7: dup
         8: getstatic     #49                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        11: aload_1
        12: invokevirtual #185                // Method org/sireum/parser/JsonParser$LContext.accepting:()Lorg/sireum/IS;
        15: invokevirtual #188                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        18: getstatic     #49                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        21: new           #12                 // class org/sireum/parser/Json$State
        24: dup
        25: aload_1
        26: invokevirtual #191                // Method org/sireum/parser/JsonParser$LContext.state:()Lorg/sireum/Z;
        29: invokespecial #194                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        32: invokevirtual #188                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        35: getstatic     #49                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        38: aload_1
        39: invokevirtual #196                // Method org/sireum/parser/JsonParser$LContext.j:()Lorg/sireum/Z;
        42: invokevirtual #188                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        45: getstatic     #49                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        48: aload_1
        49: invokevirtual #198                // Method org/sireum/parser/JsonParser$LContext.afterAcceptIndex:()Lorg/sireum/Z;
        52: invokevirtual #188                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        55: getstatic     #49                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        58: new           #65                 // class org/sireum/B
        61: dup
        62: aload_1
        63: invokevirtual #200                // Method org/sireum/parser/JsonParser$LContext.found:()Z
        66: invokespecial #77                 // Method org/sireum/B."<init>":(Z)V
        69: invokevirtual #188                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        72: invokespecial #203                // Method scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        75: invokespecial #206                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        78: areturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      79     0  this   Lorg/sireum/parser/JsonParser$LContext$;
            0      79     1     o   Lorg/sireum/parser/JsonParser$LContext;
    Signature: #178                         // (Lorg/sireum/parser/JsonParser$LContext;)Lscala/Some<Lscala/Tuple5<Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/parser/Json$State;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/B;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static final void $anonfun$create$2(org.sireum.MS, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: new           #12                 // class org/sireum/parser/Json$State
         4: dup
         5: aload_1
         6: invokespecial #194                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
         9: new           #65                 // class org/sireum/B
        12: dup
        13: getstatic     #70                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        16: invokevirtual #214                // Method org/sireum/package$.T:()Z
        19: invokespecial #77                 // Method org/sireum/B."<init>":(Z)V
        22: invokevirtual #218                // Method org/sireum/MS.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        25: return
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0 accepting$2   Lorg/sireum/MS;
            0      26     1 accept   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      accepting$2                    final
      accept                         final

  public org.sireum.parser.JsonParser$LContext$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #219                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext$;

  public static final java.lang.Object $anonfun$create$2$adapted(org.sireum.MS, java.lang.Object);
    descriptor: (Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #12                 // class org/sireum/parser/Json$State
         5: invokevirtual #222                // Method org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
         8: invokestatic  #224                // Method $anonfun$create$2:(Lorg/sireum/MS;Lorg/sireum/Z;)V
        11: getstatic     #230                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        14: areturn
      LineNumberTable:
        line 140: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 accepting$2   Lorg/sireum/MS;
            0      15     1 accept   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      accepting$2                    final
      accept                         final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #243,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #15= #12 of #14;    // State=class org/sireum/parser/Json$State of class org/sireum/parser/Json
  public static #18= #17 of #14;          // State$=class org/sireum/parser/Json$State$ of class org/sireum/parser/Json
  public static #21= #20 of #17;          // State$Slang=class org/sireum/parser/Json$State$State$Slang of class org/sireum/parser/Json$State$
  public #24= #23 of #20;                 // state$=class org/sireum/parser/Json$State$State$Slang$state$ of class org/sireum/parser/Json$State$State$Slang
  public static final #29= #26 of #28;    // LContext=class org/sireum/parser/JsonParser$LContext of class org/sireum/parser/JsonParser
  public static #30= #2 of #28;           // LContext$=class org/sireum/parser/JsonParser$LContext$ of class org/sireum/parser/JsonParser
SourceFile: "JsonParser.scala"
BootstrapMethods:
  0: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #95 (Ljava/lang/Object;)Ljava/lang/Object;
      #100 REF_invokeStatic org/sireum/parser/JsonParser$LContext$.$anonfun$create$2$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
      #95 (Ljava/lang/Object;)Ljava/lang/Object;
      #101 1
  1: #240 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #100 REF_invokeStatic org/sireum/parser/JsonParser$LContext$.$anonfun$create$2$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 D0 00 D1 01 00 60 00 61 01 00 23
   00 22 01 00 3C 00 9D 01 00 28 00 29 01 00 B0 00
   B1 01
  Scala: length = 0x0 (unknown attribute)

