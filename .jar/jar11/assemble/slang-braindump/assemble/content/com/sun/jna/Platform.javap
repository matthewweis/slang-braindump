Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/sun/jna/Platform.class
  Last modified May 29, 2022; size 7734 bytes
  SHA-256 checksum 259bbe55340c96000921364f732a5bd6096fc3a08be81166f08d4dec53b1a931
  Compiled from "Platform.java"
public final class com.sun.jna.Platform
  minor version: 0
  major version: 50
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #3                          // com/sun/jna/Platform
  super_class: #118                       // java/lang/Object
  interfaces: 0, fields: 23, methods: 27, attributes: 1
Constant pool:
    #1 = Methodref          #118.#221     // java/lang/Object."<init>":()V
    #2 = Fieldref           #3.#222       // com/sun/jna/Platform.osType:I
    #3 = Class              #223          // com/sun/jna/Platform
    #4 = Methodref          #3.#224       // com/sun/jna/Platform.isWindows:()Z
    #5 = Methodref          #3.#225       // com/sun/jna/Platform.isMac:()Z
    #6 = Methodref          #3.#226       // com/sun/jna/Platform.isWindowsCE:()Z
    #7 = String             #227          // J9
    #8 = String             #228          // java.vm.name
    #9 = Methodref          #229.#230     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
   #10 = Methodref          #231.#232     // java/lang/String.equals:(Ljava/lang/Object;)Z
   #11 = String             #233          // sun.arch.data.model
   #12 = String             #234          // com.ibm.vm.bitmode
   #13 = Methodref          #229.#235     // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #14 = String             #236          // 64
   #15 = String             #237          // x86-64
   #16 = Fieldref           #3.#238       // com/sun/jna/Platform.ARCH:Ljava/lang/String;
   #17 = String             #239          // ia64
   #18 = String             #240          // ppc64
   #19 = String             #241          // ppc64le
   #20 = String             #242          // sparcv9
   #21 = String             #243          // mips64
   #22 = String             #244          // mips64el
   #23 = String             #245          // amd64
   #24 = String             #246          // aarch64
   #25 = Fieldref           #247.#248     // com/sun/jna/Native.POINTER_SIZE:I
   #26 = String             #249          // x86
   #27 = Methodref          #231.#250     // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #28 = String             #251          // ppc
   #29 = String             #252          // arm
   #30 = String             #253          // aarch
   #31 = String             #254          // sparc
   #32 = String             #255          // mips
   #33 = String             #256          // mipsel
   #34 = Methodref          #231.#257     // java/lang/String.toLowerCase:()Ljava/lang/String;
   #35 = Methodref          #231.#258     // java/lang/String.trim:()Ljava/lang/String;
   #36 = String             #259          // powerpc
   #37 = String             #260          // powerpc64
   #38 = String             #261          // i386
   #39 = String             #262          // i686
   #40 = String             #263          // x86_64
   #41 = String             #264          // little
   #42 = String             #265          // sun.cpu.endian
   #43 = Methodref          #3.#266       // com/sun/jna/Platform.isSoftFloat:()Z
   #44 = String             #267          // armel
   #45 = Class              #268          // java/io/File
   #46 = String             #269          // /proc/self/exe
   #47 = Methodref          #45.#270      // java/io/File."<init>":(Ljava/lang/String;)V
   #48 = Methodref          #45.#271      // java/io/File.exists:()Z
   #49 = Methodref          #45.#272      // java/io/File.getCanonicalPath:()Ljava/lang/String;
   #50 = Methodref          #273.#274     // com/sun/jna/ELFAnalyser.analyse:(Ljava/lang/String;)Lcom/sun/jna/ELFAnalyser;
   #51 = Methodref          #273.#275     // com/sun/jna/ELFAnalyser.isArmHardFloat:()Z
   #52 = Class              #276          // java/io/IOException
   #53 = Methodref          #277.#278     // java/lang/Class.getName:()Ljava/lang/String;
   #54 = Methodref          #279.#280     // java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
   #55 = Fieldref           #281.#282     // java/util/logging/Level.INFO:Ljava/util/logging/Level;
   #56 = String             #283          // Failed to read \'/proc/self/exe\' or the target binary.
   #57 = Methodref          #279.#284     // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #58 = Class              #285          // java/lang/SecurityException
   #59 = String             #286          // SecurityException while analysing \'/proc/self/exe\' or the target binary.
   #60 = String             #287          // jna.prefix
   #61 = Methodref          #3.#288       // com/sun/jna/Platform.getOSType:()I
   #62 = String             #289          // os.arch
   #63 = String             #290          // os.name
   #64 = Methodref          #3.#291       // com/sun/jna/Platform.getNativeLibraryResourcePrefix:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #65 = Methodref          #3.#292       // com/sun/jna/Platform.getCanonicalArchitecture:(Ljava/lang/String;I)Ljava/lang/String;
   #66 = Class              #293          // java/lang/StringBuilder
   #67 = Methodref          #66.#221      // java/lang/StringBuilder."<init>":()V
   #68 = String             #294          // android-
   #69 = Methodref          #66.#295      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #70 = Methodref          #66.#296      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #71 = String             #297          // win32-
   #72 = String             #298          // w32ce-
   #73 = String             #299          // darwin-
   #74 = String             #300          // linux-
   #75 = String             #301          // sunos-
   #76 = String             #302          // freebsd-
   #77 = String             #303          // openbsd-
   #78 = String             #304          // netbsd-
   #79 = String             #305          // kfreebsd-
   #80 = String             #306          //
   #81 = Methodref          #231.#307     // java/lang/String.indexOf:(Ljava/lang/String;)I
   #82 = Methodref          #231.#308     // java/lang/String.substring:(II)Ljava/lang/String;
   #83 = String             #309          // -
   #84 = String             #310          // Linux
   #85 = String             #311          // dalvik
   #86 = String             #312          // jna.nounpack
   #87 = String             #313          // true
   #88 = Methodref          #229.#314     // java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #89 = String             #137          // AIX
   #90 = String             #315          // Mac
   #91 = String             #316          // Darwin
   #92 = String             #317          // Windows CE
   #93 = String             #318          // Windows
   #94 = String             #319          // Solaris
   #95 = String             #320          // SunOS
   #96 = String             #321          // FreeBSD
   #97 = String             #322          // OpenBSD
   #98 = String             #323          // gnu
   #99 = Methodref          #231.#324     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
  #100 = String             #325          // gnu/kfreebsd
  #101 = String             #326          // netbsd
  #102 = String             #327          // java.nio.Buffer
  #103 = Methodref          #277.#328     // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
  #104 = Class              #329          // java/lang/ClassNotFoundException
  #105 = Fieldref           #3.#330       // com/sun/jna/Platform.HAS_AWT:Z
  #106 = Fieldref           #3.#331       // com/sun/jna/Platform.HAS_JAWT:Z
  #107 = Fieldref           #3.#332       // com/sun/jna/Platform.HAS_BUFFERS:Z
  #108 = Fieldref           #3.#333       // com/sun/jna/Platform.RO_FIELDS:Z
  #109 = String             #334          // msvcrt
  #110 = String             #335          // coredll
  #111 = String             #336          // c
  #112 = Fieldref           #3.#337       // com/sun/jna/Platform.C_LIBRARY_NAME:Ljava/lang/String;
  #113 = String             #338          // m
  #114 = Fieldref           #3.#339       // com/sun/jna/Platform.MATH_LIBRARY_NAME:Ljava/lang/String;
  #115 = Fieldref           #3.#340       // com/sun/jna/Platform.HAS_DLL_CALLBACKS:Z
  #116 = Methodref          #3.#341       // com/sun/jna/Platform.getNativeLibraryResourcePrefix:()Ljava/lang/String;
  #117 = Fieldref           #3.#342       // com/sun/jna/Platform.RESOURCE_PREFIX:Ljava/lang/String;
  #118 = Class              #343          // java/lang/Object
  #119 = Utf8               UNSPECIFIED
  #120 = Utf8               I
  #121 = Utf8               ConstantValue
  #122 = Integer            -1
  #123 = Utf8               MAC
  #124 = Integer            0
  #125 = Utf8               LINUX
  #126 = Integer            1
  #127 = Utf8               WINDOWS
  #128 = Integer            2
  #129 = Utf8               SOLARIS
  #130 = Integer            3
  #131 = Utf8               FREEBSD
  #132 = Integer            4
  #133 = Utf8               OPENBSD
  #134 = Integer            5
  #135 = Utf8               WINDOWSCE
  #136 = Integer            6
  #137 = Utf8               AIX
  #138 = Integer            7
  #139 = Utf8               ANDROID
  #140 = Integer            8
  #141 = Utf8               GNU
  #142 = Integer            9
  #143 = Utf8               KFREEBSD
  #144 = Integer            10
  #145 = Utf8               NETBSD
  #146 = Integer            11
  #147 = Utf8               RO_FIELDS
  #148 = Utf8               Z
  #149 = Utf8               HAS_BUFFERS
  #150 = Utf8               HAS_AWT
  #151 = Utf8               HAS_JAWT
  #152 = Utf8               MATH_LIBRARY_NAME
  #153 = Utf8               Ljava/lang/String;
  #154 = Utf8               C_LIBRARY_NAME
  #155 = Utf8               HAS_DLL_CALLBACKS
  #156 = Utf8               RESOURCE_PREFIX
  #157 = Utf8               osType
  #158 = Utf8               ARCH
  #159 = Utf8               <init>
  #160 = Utf8               ()V
  #161 = Utf8               Code
  #162 = Utf8               LineNumberTable
  #163 = Utf8               LocalVariableTable
  #164 = Utf8               this
  #165 = Utf8               Lcom/sun/jna/Platform;
  #166 = Utf8               getOSType
  #167 = Utf8               ()I
  #168 = Utf8               isMac
  #169 = Utf8               ()Z
  #170 = Utf8               StackMapTable
  #171 = Utf8               isAndroid
  #172 = Utf8               isLinux
  #173 = Utf8               isAIX
  #174 = Utf8               isWindowsCE
  #175 = Utf8               isWindows
  #176 = Utf8               isSolaris
  #177 = Utf8               isFreeBSD
  #178 = Utf8               isOpenBSD
  #179 = Utf8               isNetBSD
  #180 = Utf8               isGNU
  #181 = Utf8               iskFreeBSD
  #182 = Utf8               isX11
  #183 = Utf8               hasRuntimeExec
  #184 = Utf8               is64Bit
  #185 = Utf8               model
  #186 = Class              #344          // java/lang/String
  #187 = Utf8               isIntel
  #188 = Utf8               isPPC
  #189 = Utf8               isARM
  #190 = Utf8               isSPARC
  #191 = Utf8               isMIPS
  #192 = Utf8               getCanonicalArchitecture
  #193 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #194 = Utf8               arch
  #195 = Utf8               platform
  #196 = Utf8               isSoftFloat
  #197 = Utf8               ahfd
  #198 = Utf8               Lcom/sun/jna/ELFAnalyser;
  #199 = Utf8               self
  #200 = Utf8               Ljava/io/File;
  #201 = Utf8               ex
  #202 = Utf8               Ljava/io/IOException;
  #203 = Utf8               Ljava/lang/SecurityException;
  #204 = Class              #268          // java/io/File
  #205 = Class              #345          // com/sun/jna/ELFAnalyser
  #206 = Class              #276          // java/io/IOException
  #207 = Class              #285          // java/lang/SecurityException
  #208 = Utf8               getNativeLibraryResourcePrefix
  #209 = Utf8               ()Ljava/lang/String;
  #210 = Utf8               prefix
  #211 = Utf8               (ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #212 = Utf8               osPrefix
  #213 = Utf8               space
  #214 = Utf8               name
  #215 = Utf8               <clinit>
  #216 = Utf8               osName
  #217 = Utf8               hasBuffers
  #218 = Class              #329          // java/lang/ClassNotFoundException
  #219 = Utf8               SourceFile
  #220 = Utf8               Platform.java
  #221 = NameAndType        #159:#160     // "<init>":()V
  #222 = NameAndType        #157:#120     // osType:I
  #223 = Utf8               com/sun/jna/Platform
  #224 = NameAndType        #175:#169     // isWindows:()Z
  #225 = NameAndType        #168:#169     // isMac:()Z
  #226 = NameAndType        #174:#169     // isWindowsCE:()Z
  #227 = Utf8               J9
  #228 = Utf8               java.vm.name
  #229 = Class              #346          // java/lang/System
  #230 = NameAndType        #347:#348     // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #231 = Class              #344          // java/lang/String
  #232 = NameAndType        #349:#350     // equals:(Ljava/lang/Object;)Z
  #233 = Utf8               sun.arch.data.model
  #234 = Utf8               com.ibm.vm.bitmode
  #235 = NameAndType        #347:#351     // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #236 = Utf8               64
  #237 = Utf8               x86-64
  #238 = NameAndType        #158:#153     // ARCH:Ljava/lang/String;
  #239 = Utf8               ia64
  #240 = Utf8               ppc64
  #241 = Utf8               ppc64le
  #242 = Utf8               sparcv9
  #243 = Utf8               mips64
  #244 = Utf8               mips64el
  #245 = Utf8               amd64
  #246 = Utf8               aarch64
  #247 = Class              #352          // com/sun/jna/Native
  #248 = NameAndType        #353:#120     // POINTER_SIZE:I
  #249 = Utf8               x86
  #250 = NameAndType        #354:#355     // startsWith:(Ljava/lang/String;)Z
  #251 = Utf8               ppc
  #252 = Utf8               arm
  #253 = Utf8               aarch
  #254 = Utf8               sparc
  #255 = Utf8               mips
  #256 = Utf8               mipsel
  #257 = NameAndType        #356:#209     // toLowerCase:()Ljava/lang/String;
  #258 = NameAndType        #357:#209     // trim:()Ljava/lang/String;
  #259 = Utf8               powerpc
  #260 = Utf8               powerpc64
  #261 = Utf8               i386
  #262 = Utf8               i686
  #263 = Utf8               x86_64
  #264 = Utf8               little
  #265 = Utf8               sun.cpu.endian
  #266 = NameAndType        #196:#169     // isSoftFloat:()Z
  #267 = Utf8               armel
  #268 = Utf8               java/io/File
  #269 = Utf8               /proc/self/exe
  #270 = NameAndType        #159:#358     // "<init>":(Ljava/lang/String;)V
  #271 = NameAndType        #359:#169     // exists:()Z
  #272 = NameAndType        #360:#209     // getCanonicalPath:()Ljava/lang/String;
  #273 = Class              #345          // com/sun/jna/ELFAnalyser
  #274 = NameAndType        #361:#362     // analyse:(Ljava/lang/String;)Lcom/sun/jna/ELFAnalyser;
  #275 = NameAndType        #363:#169     // isArmHardFloat:()Z
  #276 = Utf8               java/io/IOException
  #277 = Class              #364          // java/lang/Class
  #278 = NameAndType        #365:#209     // getName:()Ljava/lang/String;
  #279 = Class              #366          // java/util/logging/Logger
  #280 = NameAndType        #367:#368     // getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
  #281 = Class              #369          // java/util/logging/Level
  #282 = NameAndType        #370:#371     // INFO:Ljava/util/logging/Level;
  #283 = Utf8               Failed to read \'/proc/self/exe\' or the target binary.
  #284 = NameAndType        #372:#373     // log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #285 = Utf8               java/lang/SecurityException
  #286 = Utf8               SecurityException while analysing \'/proc/self/exe\' or the target binary.
  #287 = Utf8               jna.prefix
  #288 = NameAndType        #166:#167     // getOSType:()I
  #289 = Utf8               os.arch
  #290 = Utf8               os.name
  #291 = NameAndType        #208:#211     // getNativeLibraryResourcePrefix:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #292 = NameAndType        #192:#193     // getCanonicalArchitecture:(Ljava/lang/String;I)Ljava/lang/String;
  #293 = Utf8               java/lang/StringBuilder
  #294 = Utf8               android-
  #295 = NameAndType        #374:#375     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #296 = NameAndType        #376:#209     // toString:()Ljava/lang/String;
  #297 = Utf8               win32-
  #298 = Utf8               w32ce-
  #299 = Utf8               darwin-
  #300 = Utf8               linux-
  #301 = Utf8               sunos-
  #302 = Utf8               freebsd-
  #303 = Utf8               openbsd-
  #304 = Utf8               netbsd-
  #305 = Utf8               kfreebsd-
  #306 = Utf8
  #307 = NameAndType        #377:#378     // indexOf:(Ljava/lang/String;)I
  #308 = NameAndType        #379:#380     // substring:(II)Ljava/lang/String;
  #309 = Utf8               -
  #310 = Utf8               Linux
  #311 = Utf8               dalvik
  #312 = Utf8               jna.nounpack
  #313 = Utf8               true
  #314 = NameAndType        #381:#351     // setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #315 = Utf8               Mac
  #316 = Utf8               Darwin
  #317 = Utf8               Windows CE
  #318 = Utf8               Windows
  #319 = Utf8               Solaris
  #320 = Utf8               SunOS
  #321 = Utf8               FreeBSD
  #322 = Utf8               OpenBSD
  #323 = Utf8               gnu
  #324 = NameAndType        #382:#355     // equalsIgnoreCase:(Ljava/lang/String;)Z
  #325 = Utf8               gnu/kfreebsd
  #326 = Utf8               netbsd
  #327 = Utf8               java.nio.Buffer
  #328 = NameAndType        #383:#384     // forName:(Ljava/lang/String;)Ljava/lang/Class;
  #329 = Utf8               java/lang/ClassNotFoundException
  #330 = NameAndType        #150:#148     // HAS_AWT:Z
  #331 = NameAndType        #151:#148     // HAS_JAWT:Z
  #332 = NameAndType        #149:#148     // HAS_BUFFERS:Z
  #333 = NameAndType        #147:#148     // RO_FIELDS:Z
  #334 = Utf8               msvcrt
  #335 = Utf8               coredll
  #336 = Utf8               c
  #337 = NameAndType        #154:#153     // C_LIBRARY_NAME:Ljava/lang/String;
  #338 = Utf8               m
  #339 = NameAndType        #152:#153     // MATH_LIBRARY_NAME:Ljava/lang/String;
  #340 = NameAndType        #155:#148     // HAS_DLL_CALLBACKS:Z
  #341 = NameAndType        #208:#209     // getNativeLibraryResourcePrefix:()Ljava/lang/String;
  #342 = NameAndType        #156:#153     // RESOURCE_PREFIX:Ljava/lang/String;
  #343 = Utf8               java/lang/Object
  #344 = Utf8               java/lang/String
  #345 = Utf8               com/sun/jna/ELFAnalyser
  #346 = Utf8               java/lang/System
  #347 = Utf8               getProperty
  #348 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #349 = Utf8               equals
  #350 = Utf8               (Ljava/lang/Object;)Z
  #351 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #352 = Utf8               com/sun/jna/Native
  #353 = Utf8               POINTER_SIZE
  #354 = Utf8               startsWith
  #355 = Utf8               (Ljava/lang/String;)Z
  #356 = Utf8               toLowerCase
  #357 = Utf8               trim
  #358 = Utf8               (Ljava/lang/String;)V
  #359 = Utf8               exists
  #360 = Utf8               getCanonicalPath
  #361 = Utf8               analyse
  #362 = Utf8               (Ljava/lang/String;)Lcom/sun/jna/ELFAnalyser;
  #363 = Utf8               isArmHardFloat
  #364 = Utf8               java/lang/Class
  #365 = Utf8               getName
  #366 = Utf8               java/util/logging/Logger
  #367 = Utf8               getLogger
  #368 = Utf8               (Ljava/lang/String;)Ljava/util/logging/Logger;
  #369 = Utf8               java/util/logging/Level
  #370 = Utf8               INFO
  #371 = Utf8               Ljava/util/logging/Level;
  #372 = Utf8               log
  #373 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #374 = Utf8               append
  #375 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #376 = Utf8               toString
  #377 = Utf8               indexOf
  #378 = Utf8               (Ljava/lang/String;)I
  #379 = Utf8               substring
  #380 = Utf8               (II)Ljava/lang/String;
  #381 = Utf8               setProperty
  #382 = Utf8               equalsIgnoreCase
  #383 = Utf8               forName
  #384 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;
{
  public static final int UNSPECIFIED;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int -1

  public static final int MAC;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 0

  public static final int LINUX;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1

  public static final int WINDOWS;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2

  public static final int SOLARIS;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 3

  public static final int FREEBSD;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4

  public static final int OPENBSD;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 5

  public static final int WINDOWSCE;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 6

  public static final int AIX;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 7

  public static final int ANDROID;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 8

  public static final int GNU;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 9

  public static final int KFREEBSD;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 10

  public static final int NETBSD;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 11

  public static final boolean RO_FIELDS;
    descriptor: Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final boolean HAS_BUFFERS;
    descriptor: Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final boolean HAS_AWT;
    descriptor: Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final boolean HAS_JAWT;
    descriptor: Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.String MATH_LIBRARY_NAME;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.String C_LIBRARY_NAME;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final boolean HAS_DLL_CALLBACKS;
    descriptor: Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.String RESOURCE_PREFIX;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final int osType;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static final java.lang.String ARCH;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private com.sun.jna.Platform();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/Platform;

  public static final int getOSType();
    descriptor: ()I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: ireturn
      LineNumberTable:
        line 139: 0

  public static final boolean isMac();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: ifne          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      LineNumberTable:
        line 142: 0
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isAndroid();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: bipush        8
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 145: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isLinux();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: iconst_1
         4: if_icmpne     11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 148: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isAIX();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: bipush        7
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 151: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isWindowsCE();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: bipush        6
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 154: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isWindows();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: iconst_2
         4: if_icmpeq     15
         7: getstatic     #2                  // Field osType:I
        10: bipush        6
        12: if_icmpne     19
        15: iconst_1
        16: goto          20
        19: iconst_0
        20: ireturn
      LineNumberTable:
        line 158: 0
      StackMapTable: number_of_entries = 3
        frame_type = 15 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isSolaris();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: iconst_3
         4: if_icmpne     11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 161: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isFreeBSD();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: iconst_4
         4: if_icmpne     11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 164: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isOpenBSD();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: iconst_5
         4: if_icmpne     11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 167: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isNetBSD();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: bipush        11
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 170: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isGNU();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: bipush        9
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 173: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean iskFreeBSD();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #2                  // Field osType:I
         3: bipush        10
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 176: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isX11();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: invokestatic  #4                  // Method isWindows:()Z
         3: ifne          16
         6: invokestatic  #5                  // Method isMac:()Z
         9: ifne          16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: ireturn
      LineNumberTable:
        line 180: 0
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean hasRuntimeExec();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: invokestatic  #6                  // Method isWindowsCE:()Z
         3: ifeq          21
         6: ldc           #7                  // String J9
         8: ldc           #8                  // String java.vm.name
        10: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        13: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        16: ifeq          21
        19: iconst_0
        20: ireturn
        21: iconst_1
        22: ireturn
      LineNumberTable:
        line 183: 0
        line 184: 19
        line 185: 21
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */

  public static final boolean is64Bit();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=0
         0: ldc           #11                 // String sun.arch.data.model
         2: ldc           #12                 // String com.ibm.vm.bitmode
         4: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
         7: invokestatic  #13                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        10: astore_0
        11: aload_0
        12: ifnull        22
        15: ldc           #14                 // String 64
        17: aload_0
        18: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        21: ireturn
        22: ldc           #15                 // String x86-64
        24: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        27: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        30: ifne          121
        33: ldc           #17                 // String ia64
        35: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        38: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        41: ifne          121
        44: ldc           #18                 // String ppc64
        46: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        49: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        52: ifne          121
        55: ldc           #19                 // String ppc64le
        57: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        60: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        63: ifne          121
        66: ldc           #20                 // String sparcv9
        68: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        71: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        74: ifne          121
        77: ldc           #21                 // String mips64
        79: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        82: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        85: ifne          121
        88: ldc           #22                 // String mips64el
        90: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        93: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        96: ifne          121
        99: ldc           #23                 // String amd64
       101: getstatic     #16                 // Field ARCH:Ljava/lang/String;
       104: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       107: ifne          121
       110: ldc           #24                 // String aarch64
       112: getstatic     #16                 // Field ARCH:Ljava/lang/String;
       115: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       118: ifeq          123
       121: iconst_1
       122: ireturn
       123: getstatic     #25                 // Field com/sun/jna/Native.POINTER_SIZE:I
       126: bipush        8
       128: if_icmpne     135
       131: iconst_1
       132: goto          136
       135: iconst_0
       136: ireturn
      LineNumberTable:
        line 188: 0
        line 189: 4
        line 188: 7
        line 190: 11
        line 191: 15
        line 193: 22
        line 194: 38
        line 195: 49
        line 196: 71
        line 197: 82
        line 198: 104
        line 199: 115
        line 200: 121
        line 202: 123
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     126     0 model   Ljava/lang/String;
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/lang/String ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 98
        frame_type = 1 /* same */
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isIntel();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #16                 // Field ARCH:Ljava/lang/String;
         3: ldc           #26                 // String x86
         5: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         8: ifeq          13
        11: iconst_1
        12: ireturn
        13: iconst_0
        14: ireturn
      LineNumberTable:
        line 206: 0
        line 207: 11
        line 209: 13
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */

  public static final boolean isPPC();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #16                 // Field ARCH:Ljava/lang/String;
         3: ldc           #28                 // String ppc
         5: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         8: ifeq          13
        11: iconst_1
        12: ireturn
        13: iconst_0
        14: ireturn
      LineNumberTable:
        line 213: 0
        line 214: 11
        line 216: 13
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */

  public static final boolean isARM();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #16                 // Field ARCH:Ljava/lang/String;
         3: ldc           #29                 // String arm
         5: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         8: ifne          22
        11: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        14: ldc           #30                 // String aarch
        16: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        19: ifeq          26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: ireturn
      LineNumberTable:
        line 220: 0
      StackMapTable: number_of_entries = 3
        frame_type = 22 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static final boolean isSPARC();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #16                 // Field ARCH:Ljava/lang/String;
         3: ldc           #31                 // String sparc
         5: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         8: ireturn
      LineNumberTable:
        line 224: 0

  public static final boolean isMIPS();
    descriptor: ()Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #16                 // Field ARCH:Ljava/lang/String;
         3: ldc           #32                 // String mips
         5: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         8: ifne          44
        11: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        14: ldc           #21                 // String mips64
        16: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        19: ifne          44
        22: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        25: ldc           #33                 // String mipsel
        27: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        30: ifne          44
        33: getstatic     #16                 // Field ARCH:Ljava/lang/String;
        36: ldc           #22                 // String mips64el
        38: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        41: ifeq          46
        44: iconst_1
        45: ireturn
        46: iconst_0
        47: ireturn
      LineNumberTable:
        line 228: 0
        line 229: 16
        line 230: 27
        line 231: 38
        line 232: 44
        line 234: 46
      StackMapTable: number_of_entries = 2
        frame_type = 44 /* same */
        frame_type = 1 /* same */

  static java.lang.String getCanonicalArchitecture(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #34                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
         4: invokevirtual #35                 // Method java/lang/String.trim:()Ljava/lang/String;
         7: astore_0
         8: ldc           #36                 // String powerpc
        10: aload_0
        11: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        14: ifeq          23
        17: ldc           #28                 // String ppc
        19: astore_0
        20: goto          83
        23: ldc           #37                 // String powerpc64
        25: aload_0
        26: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        29: ifeq          38
        32: ldc           #18                 // String ppc64
        34: astore_0
        35: goto          83
        38: ldc           #38                 // String i386
        40: aload_0
        41: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        44: ifne          56
        47: ldc           #39                 // String i686
        49: aload_0
        50: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        53: ifeq          62
        56: ldc           #26                 // String x86
        58: astore_0
        59: goto          83
        62: ldc           #40                 // String x86_64
        64: aload_0
        65: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        68: ifne          80
        71: ldc           #23                 // String amd64
        73: aload_0
        74: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        77: ifeq          83
        80: ldc           #15                 // String x86-64
        82: astore_0
        83: ldc           #18                 // String ppc64
        85: aload_0
        86: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        89: ifeq          108
        92: ldc           #41                 // String little
        94: ldc           #42                 // String sun.cpu.endian
        96: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        99: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       102: ifeq          108
       105: ldc           #19                 // String ppc64le
       107: astore_0
       108: ldc           #29                 // String arm
       110: aload_0
       111: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       114: ifeq          131
       117: iload_1
       118: iconst_1
       119: if_icmpne     131
       122: invokestatic  #43                 // Method isSoftFloat:()Z
       125: ifeq          131
       128: ldc           #44                 // String armel
       130: astore_0
       131: aload_0
       132: areturn
      LineNumberTable:
        line 238: 0
        line 239: 8
        line 240: 17
        line 242: 23
        line 243: 32
        line 245: 38
        line 246: 56
        line 248: 62
        line 249: 80
        line 253: 83
        line 254: 105
        line 257: 108
        line 258: 128
        line 261: 131
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     133     0  arch   Ljava/lang/String;
            0     133     1 platform   I
      StackMapTable: number_of_entries = 8
        frame_type = 23 /* same */
        frame_type = 14 /* same */
        frame_type = 17 /* same */
        frame_type = 5 /* same */
        frame_type = 17 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 22 /* same */

  static boolean isSoftFloat();
    descriptor: ()Z
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=2, args_size=0
         0: new           #45                 // class java/io/File
         3: dup
         4: ldc           #46                 // String /proc/self/exe
         6: invokespecial #47                 // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: astore_0
        10: aload_0
        11: invokevirtual #48                 // Method java/io/File.exists:()Z
        14: ifeq          38
        17: aload_0
        18: invokevirtual #49                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
        21: invokestatic  #50                 // Method com/sun/jna/ELFAnalyser.analyse:(Ljava/lang/String;)Lcom/sun/jna/ELFAnalyser;
        24: astore_1
        25: aload_1
        26: invokevirtual #51                 // Method com/sun/jna/ELFAnalyser.isArmHardFloat:()Z
        29: ifne          36
        32: iconst_1
        33: goto          37
        36: iconst_0
        37: ireturn
        38: goto          80
        41: astore_0
        42: ldc           #3                  // class com/sun/jna/Platform
        44: invokevirtual #53                 // Method java/lang/Class.getName:()Ljava/lang/String;
        47: invokestatic  #54                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
        50: getstatic     #55                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
        53: ldc           #56                 // String Failed to read \'/proc/self/exe\' or the target binary.
        55: aload_0
        56: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        59: goto          80
        62: astore_0
        63: ldc           #3                  // class com/sun/jna/Platform
        65: invokevirtual #53                 // Method java/lang/Class.getName:()Ljava/lang/String;
        68: invokestatic  #54                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
        71: getstatic     #55                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
        74: ldc           #59                 // String SecurityException while analysing \'/proc/self/exe\' or the target binary.
        76: aload_0
        77: invokevirtual #57                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        80: iconst_0
        81: ireturn
      Exception table:
         from    to  target type
             0    37    41   Class java/io/IOException
             0    37    62   Class java/lang/SecurityException
      LineNumberTable:
        line 266: 0
        line 267: 10
        line 268: 17
        line 269: 25
        line 277: 38
        line 271: 41
        line 273: 42
        line 277: 59
        line 274: 62
        line 276: 63
        line 278: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      13     1  ahfd   Lcom/sun/jna/ELFAnalyser;
           10      28     0  self   Ljava/io/File;
           42      17     0    ex   Ljava/io/IOException;
           63      17     0    ex   Ljava/lang/SecurityException;
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ class java/io/File, class com/sun/jna/ELFAnalyser ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 0
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/SecurityException ]
        frame_type = 17 /* same */

  static java.lang.String getNativeLibraryResourcePrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=1, args_size=0
         0: ldc           #60                 // String jna.prefix
         2: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_0
         6: aload_0
         7: ifnull        12
        10: aload_0
        11: areturn
        12: invokestatic  #61                 // Method getOSType:()I
        15: ldc           #62                 // String os.arch
        17: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        20: ldc           #63                 // String os.name
        22: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        25: invokestatic  #64                 // Method getNativeLibraryResourcePrefix:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        28: areturn
      LineNumberTable:
        line 285: 0
        line 286: 6
        line 287: 10
        line 289: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      23     0 prefix   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ class java/lang/String ]

  static java.lang.String getNativeLibraryResourcePrefix(int, java.lang.String, java.lang.String);
    descriptor: (ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: iload_0
         2: invokestatic  #65                 // Method getCanonicalArchitecture:(Ljava/lang/String;I)Ljava/lang/String;
         5: astore_1
         6: iload_0
         7: tableswitch   { // 0 to 11
                       0: 149
                       1: 172
                       2: 103
                       3: 195
                       4: 218
                       5: 241
                       6: 126
                       7: 310
                       8: 68
                       9: 310
                      10: 287
                      11: 264
                 default: 310
            }
        68: aload_1
        69: ldc           #29                 // String arm
        71: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        74: ifeq          80
        77: ldc           #29                 // String arm
        79: astore_1
        80: new           #66                 // class java/lang/StringBuilder
        83: dup
        84: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
        87: ldc           #68                 // String android-
        89: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        92: aload_1
        93: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        96: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        99: astore_3
       100: goto          361
       103: new           #66                 // class java/lang/StringBuilder
       106: dup
       107: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       110: ldc           #71                 // String win32-
       112: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       115: aload_1
       116: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       119: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       122: astore_3
       123: goto          361
       126: new           #66                 // class java/lang/StringBuilder
       129: dup
       130: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       133: ldc           #72                 // String w32ce-
       135: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       138: aload_1
       139: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       142: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       145: astore_3
       146: goto          361
       149: new           #66                 // class java/lang/StringBuilder
       152: dup
       153: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       156: ldc           #73                 // String darwin-
       158: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       161: aload_1
       162: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       165: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       168: astore_3
       169: goto          361
       172: new           #66                 // class java/lang/StringBuilder
       175: dup
       176: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       179: ldc           #74                 // String linux-
       181: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       184: aload_1
       185: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       188: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       191: astore_3
       192: goto          361
       195: new           #66                 // class java/lang/StringBuilder
       198: dup
       199: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       202: ldc           #75                 // String sunos-
       204: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       207: aload_1
       208: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       211: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       214: astore_3
       215: goto          361
       218: new           #66                 // class java/lang/StringBuilder
       221: dup
       222: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       225: ldc           #76                 // String freebsd-
       227: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       230: aload_1
       231: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       234: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       237: astore_3
       238: goto          361
       241: new           #66                 // class java/lang/StringBuilder
       244: dup
       245: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       248: ldc           #77                 // String openbsd-
       250: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       253: aload_1
       254: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       257: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       260: astore_3
       261: goto          361
       264: new           #66                 // class java/lang/StringBuilder
       267: dup
       268: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       271: ldc           #78                 // String netbsd-
       273: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       276: aload_1
       277: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       280: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       283: astore_3
       284: goto          361
       287: new           #66                 // class java/lang/StringBuilder
       290: dup
       291: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       294: ldc           #79                 // String kfreebsd-
       296: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       299: aload_1
       300: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       303: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       306: astore_3
       307: goto          361
       310: aload_2
       311: invokevirtual #34                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       314: astore_3
       315: aload_3
       316: ldc           #80                 // String
       318: invokevirtual #81                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       321: istore        4
       323: iload         4
       325: iconst_m1
       326: if_icmpeq     337
       329: aload_3
       330: iconst_0
       331: iload         4
       333: invokevirtual #82                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       336: astore_3
       337: new           #66                 // class java/lang/StringBuilder
       340: dup
       341: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       344: aload_3
       345: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       348: ldc           #83                 // String -
       350: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       353: aload_1
       354: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       357: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       360: astore_3
       361: aload_3
       362: areturn
      LineNumberTable:
        line 301: 0
        line 302: 6
        line 304: 68
        line 305: 77
        line 307: 80
        line 308: 100
        line 310: 103
        line 311: 123
        line 313: 126
        line 314: 146
        line 316: 149
        line 317: 169
        line 319: 172
        line 320: 192
        line 322: 195
        line 323: 215
        line 325: 218
        line 326: 238
        line 328: 241
        line 329: 261
        line 331: 264
        line 332: 284
        line 334: 287
        line 335: 307
        line 337: 310
        line 338: 315
        line 339: 323
        line 340: 329
        line 342: 337
        line 345: 361
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          100       3     3 osPrefix   Ljava/lang/String;
          123       3     3 osPrefix   Ljava/lang/String;
          146       3     3 osPrefix   Ljava/lang/String;
          169       3     3 osPrefix   Ljava/lang/String;
          192       3     3 osPrefix   Ljava/lang/String;
          215       3     3 osPrefix   Ljava/lang/String;
          238       3     3 osPrefix   Ljava/lang/String;
          261       3     3 osPrefix   Ljava/lang/String;
          284       3     3 osPrefix   Ljava/lang/String;
          307       3     3 osPrefix   Ljava/lang/String;
          323      38     4 space   I
            0     363     0 osType   I
            0     363     1  arch   Ljava/lang/String;
            0     363     2  name   Ljava/lang/String;
          315      48     3 osPrefix   Ljava/lang/String;
      StackMapTable: number_of_entries = 14
        frame_type = 251 /* same_frame_extended */
          offset_delta = 68
        frame_type = 11 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 22 /* same */
        frame_type = 253 /* append */
          offset_delta = 26
          locals = [ class java/lang/String, int ]
        frame_type = 250 /* chop */
          offset_delta = 23

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=3, args_size=0
         0: ldc           #63                 // String os.name
         2: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_0
         6: aload_0
         7: ldc           #84                 // String Linux
         9: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        12: ifeq          54
        15: ldc           #85                 // String dalvik
        17: ldc           #8                  // String java.vm.name
        19: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        22: invokevirtual #34                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
        25: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        28: ifeq          47
        31: bipush        8
        33: putstatic     #2                  // Field osType:I
        36: ldc           #86                 // String jna.nounpack
        38: ldc           #87                 // String true
        40: invokestatic  #88                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        43: pop
        44: goto          241
        47: iconst_1
        48: putstatic     #2                  // Field osType:I
        51: goto          241
        54: aload_0
        55: ldc           #89                 // String AIX
        57: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        60: ifeq          71
        63: bipush        7
        65: putstatic     #2                  // Field osType:I
        68: goto          241
        71: aload_0
        72: ldc           #90                 // String Mac
        74: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        77: ifne          89
        80: aload_0
        81: ldc           #91                 // String Darwin
        83: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        86: ifeq          96
        89: iconst_0
        90: putstatic     #2                  // Field osType:I
        93: goto          241
        96: aload_0
        97: ldc           #92                 // String Windows CE
        99: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       102: ifeq          113
       105: bipush        6
       107: putstatic     #2                  // Field osType:I
       110: goto          241
       113: aload_0
       114: ldc           #93                 // String Windows
       116: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       119: ifeq          129
       122: iconst_2
       123: putstatic     #2                  // Field osType:I
       126: goto          241
       129: aload_0
       130: ldc           #94                 // String Solaris
       132: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       135: ifne          147
       138: aload_0
       139: ldc           #95                 // String SunOS
       141: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       144: ifeq          154
       147: iconst_3
       148: putstatic     #2                  // Field osType:I
       151: goto          241
       154: aload_0
       155: ldc           #96                 // String FreeBSD
       157: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       160: ifeq          170
       163: iconst_4
       164: putstatic     #2                  // Field osType:I
       167: goto          241
       170: aload_0
       171: ldc           #97                 // String OpenBSD
       173: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       176: ifeq          186
       179: iconst_5
       180: putstatic     #2                  // Field osType:I
       183: goto          241
       186: aload_0
       187: ldc           #98                 // String gnu
       189: invokevirtual #99                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       192: ifeq          203
       195: bipush        9
       197: putstatic     #2                  // Field osType:I
       200: goto          241
       203: aload_0
       204: ldc           #100                // String gnu/kfreebsd
       206: invokevirtual #99                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       209: ifeq          220
       212: bipush        10
       214: putstatic     #2                  // Field osType:I
       217: goto          241
       220: aload_0
       221: ldc           #101                // String netbsd
       223: invokevirtual #99                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       226: ifeq          237
       229: bipush        11
       231: putstatic     #2                  // Field osType:I
       234: goto          241
       237: iconst_m1
       238: putstatic     #2                  // Field osType:I
       241: iconst_0
       242: istore_1
       243: ldc           #102                // String java.nio.Buffer
       245: invokestatic  #103                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       248: pop
       249: iconst_1
       250: istore_1
       251: goto          255
       254: astore_2
       255: getstatic     #2                  // Field osType:I
       258: bipush        6
       260: if_icmpeq     283
       263: getstatic     #2                  // Field osType:I
       266: bipush        8
       268: if_icmpeq     283
       271: getstatic     #2                  // Field osType:I
       274: bipush        7
       276: if_icmpeq     283
       279: iconst_1
       280: goto          284
       283: iconst_0
       284: putstatic     #105                // Field HAS_AWT:Z
       287: getstatic     #105                // Field HAS_AWT:Z
       290: ifeq          303
       293: getstatic     #2                  // Field osType:I
       296: ifeq          303
       299: iconst_1
       300: goto          304
       303: iconst_0
       304: putstatic     #106                // Field HAS_JAWT:Z
       307: iload_1
       308: putstatic     #107                // Field HAS_BUFFERS:Z
       311: getstatic     #2                  // Field osType:I
       314: bipush        6
       316: if_icmpeq     323
       319: iconst_1
       320: goto          324
       323: iconst_0
       324: putstatic     #108                // Field RO_FIELDS:Z
       327: getstatic     #2                  // Field osType:I
       330: iconst_2
       331: if_icmpne     339
       334: ldc           #109                // String msvcrt
       336: goto          354
       339: getstatic     #2                  // Field osType:I
       342: bipush        6
       344: if_icmpne     352
       347: ldc           #110                // String coredll
       349: goto          354
       352: ldc           #111                // String c
       354: putstatic     #112                // Field C_LIBRARY_NAME:Ljava/lang/String;
       357: getstatic     #2                  // Field osType:I
       360: iconst_2
       361: if_icmpne     369
       364: ldc           #109                // String msvcrt
       366: goto          384
       369: getstatic     #2                  // Field osType:I
       372: bipush        6
       374: if_icmpne     382
       377: ldc           #110                // String coredll
       379: goto          384
       382: ldc           #113                // String m
       384: putstatic     #114                // Field MATH_LIBRARY_NAME:Ljava/lang/String;
       387: ldc           #62                 // String os.arch
       389: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       392: getstatic     #2                  // Field osType:I
       395: invokestatic  #65                 // Method getCanonicalArchitecture:(Ljava/lang/String;I)Ljava/lang/String;
       398: putstatic     #16                 // Field ARCH:Ljava/lang/String;
       401: getstatic     #2                  // Field osType:I
       404: iconst_2
       405: if_icmpne     423
       408: getstatic     #16                 // Field ARCH:Ljava/lang/String;
       411: ldc           #30                 // String aarch
       413: invokevirtual #27                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       416: ifne          423
       419: iconst_1
       420: goto          424
       423: iconst_0
       424: putstatic     #115                // Field HAS_DLL_CALLBACKS:Z
       427: invokestatic  #116                // Method getNativeLibraryResourcePrefix:()Ljava/lang/String;
       430: putstatic     #117                // Field RESOURCE_PREFIX:Ljava/lang/String;
       433: return
      Exception table:
         from    to  target type
           243   251   254   Class java/lang/ClassNotFoundException
      LineNumberTable:
        line 72: 0
        line 73: 6
        line 74: 15
        line 75: 31
        line 77: 36
        line 80: 47
        line 83: 54
        line 84: 63
        line 86: 71
        line 87: 89
        line 89: 96
        line 90: 105
        line 92: 113
        line 93: 122
        line 95: 129
        line 96: 147
        line 98: 154
        line 99: 163
        line 101: 170
        line 102: 179
        line 104: 186
        line 105: 195
        line 107: 203
        line 108: 212
        line 110: 220
        line 111: 229
        line 114: 237
        line 116: 241
        line 118: 243
        line 119: 249
        line 122: 251
        line 121: 254
        line 126: 255
        line 127: 287
        line 128: 307
        line 129: 311
        line 130: 327
        line 131: 357
        line 132: 387
        line 134: 401
        line 135: 427
        line 136: 433
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6     427     0 osName   Ljava/lang/String;
          243     190     1 hasBuffers   Z
      StackMapTable: number_of_entries = 31
        frame_type = 252 /* append */
          offset_delta = 47
          locals = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 16 /* same */
        frame_type = 17 /* same */
        frame_type = 6 /* same */
        frame_type = 16 /* same */
        frame_type = 15 /* same */
        frame_type = 17 /* same */
        frame_type = 6 /* same */
        frame_type = 15 /* same */
        frame_type = 15 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class java/lang/String, int ]
          stack = [ class java/lang/ClassNotFoundException ]
        frame_type = 0 /* same */
        frame_type = 27 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 14 /* same */
        frame_type = 12 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 14 /* same */
        frame_type = 12 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 38 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
}
SourceFile: "Platform.java"
