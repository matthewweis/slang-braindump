Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3.class
  Last modified May 29, 2022; size 4181 bytes
  SHA-256 checksum 1a59e3548dac19bb9ee6ee82470316cb87cc7f53c12da94a211945abdb8fc015
  Compiled from "Retrying.scala"
public final class org.scalatest.enablers.Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3 implements java.lang.Runnable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 4, attributes: 6
Constant pool:
    #1 = Utf8               org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3
    #2 = Class              #1            // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/lang/Runnable
    #6 = Class              #5            // java/lang/Runnable
    #7 = Utf8               Retrying.scala
    #8 = Utf8               org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1
    #9 = Class              #8            // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1
   #10 = Utf8               applyOrElse
   #11 = Utf8               (Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
   #12 = NameAndType        #10:#11       // applyOrElse:(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
   #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #14 = Class              #13           // java/lang/invoke/MethodHandles$Lookup
   #15 = Utf8               java/lang/invoke/MethodHandles
   #16 = Class              #15           // java/lang/invoke/MethodHandles
   #17 = Utf8               Lookup
   #18 = Utf8               org/scalatest/enablers/Retrying$$anon$2
   #19 = Class              #18           // org/scalatest/enablers/Retrying$$anon$2
   #20 = Utf8               $outer
   #21 = Utf8               Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
   #22 = Utf8               promise$1
   #23 = Utf8               Lscala/concurrent/Promise;
   #24 = Utf8               run
   #25 = Utf8               ()V
   #26 = NameAndType        #20:#21       // $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
   #27 = Fieldref           #2.#26        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3.$outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
   #28 = Utf8               org$scalatest$enablers$Retrying$$anon$$anonfun$$$outer
   #29 = Utf8               ()Lorg/scalatest/enablers/Retrying$$anon$2;
   #30 = NameAndType        #28:#29       // org$scalatest$enablers$Retrying$$anon$$anonfun$$$outer:()Lorg/scalatest/enablers/Retrying$$anon$2;
   #31 = Methodref          #9.#30        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.org$scalatest$enablers$Retrying$$anon$$anonfun$$$outer:()Lorg/scalatest/enablers/Retrying$$anon$2;
   #32 = Utf8               attempt$1
   #33 = Utf8               I
   #34 = NameAndType        #32:#33       // attempt$1:I
   #35 = Fieldref           #9.#34        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.attempt$1:I
   #36 = Utf8               fun$1
   #37 = Utf8               Lscala/Function0;
   #38 = NameAndType        #36:#37       // fun$1:Lscala/Function0;
   #39 = Fieldref           #9.#38        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.fun$1:Lscala/Function0;
   #40 = Utf8               startNanos$1
   #41 = Utf8               J
   #42 = NameAndType        #40:#41       // startNanos$1:J
   #43 = Fieldref           #9.#42        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.startNanos$1:J
   #44 = Utf8               timeout$1
   #45 = Utf8               Lorg/scalatest/time/Span;
   #46 = NameAndType        #44:#45       // timeout$1:Lorg/scalatest/time/Span;
   #47 = Fieldref           #9.#46        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.timeout$1:Lorg/scalatest/time/Span;
   #48 = Utf8               interval$1
   #49 = NameAndType        #48:#45       // interval$1:Lorg/scalatest/time/Span;
   #50 = Fieldref           #9.#49        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.interval$1:Lorg/scalatest/time/Span;
   #51 = Utf8               initialInterval$1
   #52 = NameAndType        #51:#45       // initialInterval$1:Lorg/scalatest/time/Span;
   #53 = Fieldref           #9.#52        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.initialInterval$1:Lorg/scalatest/time/Span;
   #54 = Utf8               pos$1
   #55 = Utf8               Lorg/scalactic/source/Position;
   #56 = NameAndType        #54:#55       // pos$1:Lorg/scalactic/source/Position;
   #57 = Fieldref           #9.#56        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.pos$1:Lorg/scalactic/source/Position;
   #58 = Utf8               org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1
   #59 = Utf8               (ILscala/Function0;JLorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
   #60 = NameAndType        #58:#59       // org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1:(ILscala/Function0;JLorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
   #61 = Methodref          #19.#60       // org/scalatest/enablers/Retrying$$anon$2.org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1:(ILscala/Function0;JLorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
   #62 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #63 = MethodType         #62           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #64 = Utf8               $anonfun$run$1
   #65 = Utf8               (Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;Lscala/util/Try;)Lscala/concurrent/Promise;
   #66 = NameAndType        #64:#65       // $anonfun$run$1:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;Lscala/util/Try;)Lscala/concurrent/Promise;
   #67 = Methodref          #2.#66        // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3.$anonfun$run$1:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;Lscala/util/Try;)Lscala/concurrent/Promise;
   #68 = MethodHandle       6:#67         // REF_invokeStatic org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3.$anonfun$run$1:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;Lscala/util/Try;)Lscala/concurrent/Promise;
   #69 = Utf8               (Lscala/util/Try;)Lscala/concurrent/Promise;
   #70 = MethodType         #69           //  (Lscala/util/Try;)Lscala/concurrent/Promise;
   #71 = Integer            5
   #72 = Integer            1
   #73 = Utf8               java/lang/invoke/LambdaMetafactory
   #74 = Class              #73           // java/lang/invoke/LambdaMetafactory
   #75 = Utf8               altMetafactory
   #76 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #77 = NameAndType        #75:#76       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #78 = Methodref          #74.#77       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #79 = MethodHandle       6:#78         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #80 = Utf8               apply
   #81 = Utf8               (Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;)Lscala/Function1;
   #82 = NameAndType        #80:#81       // apply:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;)Lscala/Function1;
   #83 = InvokeDynamic      #0:#82        // #0:apply:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;)Lscala/Function1;
   #84 = Utf8               execCtx$1
   #85 = Utf8               Lscala/concurrent/ExecutionContext;
   #86 = NameAndType        #84:#85       // execCtx$1:Lscala/concurrent/ExecutionContext;
   #87 = Fieldref           #19.#86       // org/scalatest/enablers/Retrying$$anon$2.execCtx$1:Lscala/concurrent/ExecutionContext;
   #88 = Utf8               scala/concurrent/Future
   #89 = Class              #88           // scala/concurrent/Future
   #90 = Utf8               onComplete
   #91 = Utf8               (Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
   #92 = NameAndType        #90:#91       // onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
   #93 = InterfaceMethodref #89.#92       // scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
   #94 = Utf8               newFut
   #95 = Utf8               Lscala/concurrent/Future;
   #96 = Utf8               this
   #97 = Utf8               Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;
   #98 = Utf8               $this
   #99 = Utf8               x0$1
  #100 = Utf8               scala/util/Success
  #101 = Class              #100          // scala/util/Success
  #102 = Utf8               value
  #103 = Utf8               ()Ljava/lang/Object;
  #104 = NameAndType        #102:#103     // value:()Ljava/lang/Object;
  #105 = Methodref          #101.#104     // scala/util/Success.value:()Ljava/lang/Object;
  #106 = NameAndType        #22:#23       // promise$1:Lscala/concurrent/Promise;
  #107 = Fieldref           #2.#106       // org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3.promise$1:Lscala/concurrent/Promise;
  #108 = Utf8               scala/concurrent/Promise
  #109 = Class              #108          // scala/concurrent/Promise
  #110 = Utf8               success
  #111 = Utf8               (Ljava/lang/Object;)Lscala/concurrent/Promise;
  #112 = NameAndType        #110:#111     // success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
  #113 = InterfaceMethodref #109.#112     // scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
  #114 = Utf8               scala/util/Failure
  #115 = Class              #114          // scala/util/Failure
  #116 = Utf8               exception
  #117 = Utf8               ()Ljava/lang/Throwable;
  #118 = NameAndType        #116:#117     // exception:()Ljava/lang/Throwable;
  #119 = Methodref          #115.#118     // scala/util/Failure.exception:()Ljava/lang/Throwable;
  #120 = Utf8               failure
  #121 = Utf8               (Ljava/lang/Throwable;)Lscala/concurrent/Promise;
  #122 = NameAndType        #120:#121     // failure:(Ljava/lang/Throwable;)Lscala/concurrent/Promise;
  #123 = InterfaceMethodref #109.#122     // scala/concurrent/Promise.failure:(Ljava/lang/Throwable;)Lscala/concurrent/Promise;
  #124 = Utf8               scala/MatchError
  #125 = Class              #124          // scala/MatchError
  #126 = Utf8               <init>
  #127 = Utf8               (Ljava/lang/Object;)V
  #128 = NameAndType        #126:#127     // "<init>":(Ljava/lang/Object;)V
  #129 = Methodref          #125.#128     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #130 = Utf8               res
  #131 = Utf8               Ljava/lang/Object;
  #132 = Utf8               ex
  #133 = Utf8               Ljava/lang/Throwable;
  #134 = Utf8               Lscala/util/Try;
  #135 = Utf8               scala/util/Try
  #136 = Class              #135          // scala/util/Try
  #137 = Utf8               (Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;Lscala/concurrent/Promise;)V
  #138 = NameAndType        #126:#25      // "<init>":()V
  #139 = Methodref          #4.#138       // java/lang/Object."<init>":()V
  #140 = Utf8               $deserializeLambda$
  #141 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #142 = Utf8               scala/runtime/LambdaDeserialize
  #143 = Class              #142          // scala/runtime/LambdaDeserialize
  #144 = Utf8               bootstrap
  #145 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #146 = NameAndType        #144:#145     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #147 = Methodref          #143.#146     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #148 = MethodHandle       6:#147        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #149 = Utf8               lambdaDeserialize
  #150 = NameAndType        #149:#141     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #151 = InvokeDynamic      #1:#150       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #152 = Utf8               Code
  #153 = Utf8               LineNumberTable
  #154 = Utf8               LocalVariableTable
  #155 = Utf8               StackMapTable
  #156 = Utf8               MethodParameters
  #157 = Utf8               InnerClasses
  #158 = Utf8               EnclosingMethod
  #159 = Utf8               SourceFile
  #160 = Utf8               BootstrapMethods
  #161 = Utf8               ScalaInlineInfo
  #162 = Utf8               Scala
{
  private final org.scalatest.enablers.Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1 $outer;
    descriptor: Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.concurrent.Promise promise$1;
    descriptor: Lscala/concurrent/Promise;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
         4: invokevirtual #31                 // Method org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.org$scalatest$enablers$Retrying$$anon$$anonfun$$$outer:()Lorg/scalatest/enablers/Retrying$$anon$2;
         7: aload_0
         8: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        11: getfield      #35                 // Field org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.attempt$1:I
        14: iconst_1
        15: iadd
        16: aload_0
        17: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        20: getfield      #39                 // Field org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.fun$1:Lscala/Function0;
        23: aload_0
        24: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        27: getfield      #43                 // Field org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.startNanos$1:J
        30: aload_0
        31: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        34: getfield      #47                 // Field org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.timeout$1:Lorg/scalatest/time/Span;
        37: aload_0
        38: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        41: getfield      #50                 // Field org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.interval$1:Lorg/scalatest/time/Span;
        44: aload_0
        45: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        48: getfield      #53                 // Field org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.initialInterval$1:Lorg/scalatest/time/Span;
        51: aload_0
        52: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        55: getfield      #57                 // Field org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.pos$1:Lorg/scalactic/source/Position;
        58: invokevirtual #61                 // Method org/scalatest/enablers/Retrying$$anon$2.org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1:(ILscala/Function0;JLorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
        61: astore_1
        62: aload_1
        63: aload_0
        64: invokedynamic #83,  0             // InvokeDynamic #0:apply:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;)Lscala/Function1;
        69: aload_0
        70: getfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        73: invokevirtual #31                 // Method org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.org$scalatest$enablers$Retrying$$anon$$anonfun$$$outer:()Lorg/scalatest/enablers/Retrying$$anon$2;
        76: getfield      #87                 // Field org/scalatest/enablers/Retrying$$anon$2.execCtx$1:Lscala/concurrent/ExecutionContext;
        79: invokeinterface #93,  3           // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
        84: return
      LineNumberTable:
        line 108: 0
        line 109: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           62      22     1 newFut   Lscala/concurrent/Future;
            0      85     0  this   Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;

  public static final scala.concurrent.Promise $anonfun$run$1(org.scalatest.enablers.Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3, scala.util.Try);
    descriptor: (Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;Lscala/util/Try;)Lscala/concurrent/Promise;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=8, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #101                // class scala/util/Success
         6: ifeq          37
         9: aload_3
        10: checkcast     #101                // class scala/util/Success
        13: astore        4
        15: aload         4
        17: invokevirtual #105                // Method scala/util/Success.value:()Ljava/lang/Object;
        20: astore        5
        22: aload_0
        23: getfield      #107                // Field promise$1:Lscala/concurrent/Promise;
        26: aload         5
        28: invokeinterface #113,  2          // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
        33: astore_2
        34: goto          87
        37: goto          40
        40: aload_3
        41: instanceof    #115                // class scala/util/Failure
        44: ifeq          75
        47: aload_3
        48: checkcast     #115                // class scala/util/Failure
        51: astore        6
        53: aload         6
        55: invokevirtual #119                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
        58: astore        7
        60: aload_0
        61: getfield      #107                // Field promise$1:Lscala/concurrent/Promise;
        64: aload         7
        66: invokeinterface #123,  2          // InterfaceMethod scala/concurrent/Promise.failure:(Ljava/lang/Throwable;)Lscala/concurrent/Promise;
        71: astore_2
        72: goto          87
        75: goto          78
        78: new           #125                // class scala/MatchError
        81: dup
        82: aload_3
        83: invokespecial #129                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        86: athrow
        87: aload_2
        88: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ top, class scala/util/Try ]
        frame_type = 2 /* same */
        frame_type = 34 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3, class scala/util/Try, class scala/concurrent/Promise, class scala/util/Try ]
          stack = []
      LineNumberTable:
        line 109: 0
        line 110: 2
        line 111: 40
        line 109: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      15     5   res   Ljava/lang/Object;
           60      15     7    ex   Ljava/lang/Throwable;
            0      89     0 $this   Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;
            0      89     1  x0$1   Lscala/util/Try;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x0$1                           final

  public org.scalatest.enablers.Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3(org.scalatest.enablers.Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1, scala.concurrent.Promise);
    descriptor: (Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;Lscala/concurrent/Promise;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #27                 // Field $outer:Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
        11: aload_0
        12: aload_2
        13: putfield      #107                // Field promise$1:Lscala/concurrent/Promise;
        16: aload_0
        17: invokespecial #139                // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 106: 0
        line 103: 11
        line 106: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;
            0      21     1 $outer   Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1;
            0      21     2 promise$1   Lscala/concurrent/Promise;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      promise$1                      final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #151,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #19;                       // class org/scalatest/enablers/Retrying$$anon$2
  public final #9;                        // class org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1
  public final #2;                        // class org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3
EnclosingMethod: #9.#12                 // org.scalatest.enablers.Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1.applyOrElse
SourceFile: "Retrying.scala"
BootstrapMethods:
  0: #79 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #63 (Ljava/lang/Object;)Ljava/lang/Object;
      #68 REF_invokeStatic org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3.$anonfun$run$1:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;Lscala/util/Try;)Lscala/concurrent/Promise;
      #70 (Lscala/util/Try;)Lscala/concurrent/Promise;
      #71 5
      #72 1
      #70 (Lscala/util/Try;)Lscala/concurrent/Promise;
  1: #148 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #68 REF_invokeStatic org/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3.$anonfun$run$1:(Lorg/scalatest/enablers/Retrying$$anon$2$$anonfun$org$scalatest$enablers$Retrying$$nestedInanon$2$$tryTryAgain$1$1$$anon$3;Lscala/util/Try;)Lscala/concurrent/Promise;
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 40 00 41 01 00 7E 00 89 01 00 18
   00 19 01
  Scala: length = 0x0 (unknown attribute)

