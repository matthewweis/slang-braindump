Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Numeric$BigIntIsIntegral.class
  Last modified May 29, 2022; size 5449 bytes
  SHA-256 checksum e1925ee5aa39737a4f56f7cb8484e399af2152776a4b7f8dab7b11f70cab5800
  Compiled from "Numeric.scala"
public interface scala.math.Numeric$BigIntIsIntegral extends scala.math.Integral<scala.math.BigInt>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/math/Numeric$BigIntIsIntegral
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 26, attributes: 5
Constant pool:
    #1 = Utf8               scala/math/Numeric$BigIntIsIntegral
    #2 = Class              #1            // scala/math/Numeric$BigIntIsIntegral
    #3 = Utf8               Ljava/lang/Object;Lscala/math/Integral<Lscala/math/BigInt;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Integral
    #7 = Class              #6            // scala/math/Integral
    #8 = Utf8               Numeric.scala
    #9 = Utf8               scala/math/Numeric
   #10 = Class              #9            // scala/math/Numeric
   #11 = Utf8               BigIntIsIntegral
   #12 = Utf8               plus$
   #13 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #14 = Utf8               $this
   #15 = Utf8               x
   #16 = Utf8               y
   #17 = Utf8               plus
   #18 = Utf8               (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #19 = NameAndType        #17:#18       // plus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #20 = InterfaceMethodref #2.#19        // scala/math/Numeric$BigIntIsIntegral.plus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #21 = Utf8               Lscala/math/Numeric$BigIntIsIntegral;
   #22 = Utf8               Lscala/math/BigInt;
   #23 = Utf8               scala/math/BigInt
   #24 = Class              #23           // scala/math/BigInt
   #25 = Utf8               $plus
   #26 = Utf8               (Lscala/math/BigInt;)Lscala/math/BigInt;
   #27 = NameAndType        #25:#26       // $plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #28 = Methodref          #24.#27       // scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #29 = Utf8               this
   #30 = Utf8               minus$
   #31 = Utf8               minus
   #32 = NameAndType        #31:#18       // minus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #33 = InterfaceMethodref #2.#32        // scala/math/Numeric$BigIntIsIntegral.minus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #34 = Utf8               $minus
   #35 = NameAndType        #34:#26       // $minus:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #36 = Methodref          #24.#35       // scala/math/BigInt.$minus:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #37 = Utf8               times$
   #38 = Utf8               times
   #39 = NameAndType        #38:#18       // times:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #40 = InterfaceMethodref #2.#39        // scala/math/Numeric$BigIntIsIntegral.times:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #41 = Utf8               $times
   #42 = NameAndType        #41:#26       // $times:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #43 = Methodref          #24.#42       // scala/math/BigInt.$times:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #44 = Utf8               quot$
   #45 = Utf8               quot
   #46 = NameAndType        #45:#18       // quot:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #47 = InterfaceMethodref #2.#46        // scala/math/Numeric$BigIntIsIntegral.quot:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #48 = Utf8               $div
   #49 = NameAndType        #48:#26       // $div:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #50 = Methodref          #24.#49       // scala/math/BigInt.$div:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #51 = Utf8               rem$
   #52 = Utf8               rem
   #53 = NameAndType        #52:#18       // rem:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #54 = InterfaceMethodref #2.#53        // scala/math/Numeric$BigIntIsIntegral.rem:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
   #55 = Utf8               $percent
   #56 = NameAndType        #55:#26       // $percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #57 = Methodref          #24.#56       // scala/math/BigInt.$percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #58 = Utf8               negate$
   #59 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;
   #60 = Utf8               negate
   #61 = NameAndType        #60:#26       // negate:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #62 = InterfaceMethodref #2.#61        // scala/math/Numeric$BigIntIsIntegral.negate:(Lscala/math/BigInt;)Lscala/math/BigInt;
   #63 = Utf8               unary_$minus
   #64 = Utf8               ()Lscala/math/BigInt;
   #65 = NameAndType        #63:#64       // unary_$minus:()Lscala/math/BigInt;
   #66 = Methodref          #24.#65       // scala/math/BigInt.unary_$minus:()Lscala/math/BigInt;
   #67 = Utf8               fromInt$
   #68 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;
   #69 = Utf8               fromInt
   #70 = Utf8               (I)Lscala/math/BigInt;
   #71 = NameAndType        #69:#70       // fromInt:(I)Lscala/math/BigInt;
   #72 = InterfaceMethodref #2.#71        // scala/math/Numeric$BigIntIsIntegral.fromInt:(I)Lscala/math/BigInt;
   #73 = Utf8               I
   #74 = Utf8               scala/math/BigInt$
   #75 = Class              #74           // scala/math/BigInt$
   #76 = Utf8               MODULE$
   #77 = Utf8               Lscala/math/BigInt$;
   #78 = NameAndType        #76:#77       // MODULE$:Lscala/math/BigInt$;
   #79 = Fieldref           #75.#78       // scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
   #80 = Utf8               apply
   #81 = NameAndType        #80:#70       // apply:(I)Lscala/math/BigInt;
   #82 = Methodref          #75.#81       // scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
   #83 = Utf8               parseString$
   #84 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Ljava/lang/String;)Lscala/Option;
   #85 = Utf8               str
   #86 = Utf8               parseString
   #87 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #88 = NameAndType        #86:#87       // parseString:(Ljava/lang/String;)Lscala/Option;
   #89 = InterfaceMethodref #2.#88        // scala/math/Numeric$BigIntIsIntegral.parseString:(Ljava/lang/String;)Lscala/Option;
   #90 = Utf8               Ljava/lang/String;
   #91 = Utf8               (Ljava/lang/String;)Lscala/Option<Lscala/math/BigInt;>;
   #92 = Utf8               java/lang/Throwable
   #93 = Class              #92           // java/lang/Throwable
   #94 = Utf8               scala/util/Try$
   #95 = Class              #94           // scala/util/Try$
   #96 = Utf8               Lscala/util/Try$;
   #97 = NameAndType        #76:#96       // MODULE$:Lscala/util/Try$;
   #98 = Fieldref           #95.#97       // scala/util/Try$.MODULE$:Lscala/util/Try$;
   #99 = Utf8               scala/util/Success
  #100 = Class              #99           // scala/util/Success
  #101 = Utf8               (Ljava/lang/String;)Lscala/math/BigInt;
  #102 = NameAndType        #80:#101      // apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #103 = Methodref          #75.#102      // scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #104 = Utf8               <init>
  #105 = Utf8               (Ljava/lang/Object;)V
  #106 = NameAndType        #104:#105     // "<init>":(Ljava/lang/Object;)V
  #107 = Methodref          #100.#106     // scala/util/Success."<init>":(Ljava/lang/Object;)V
  #108 = Utf8               scala/util/control/NonFatal$
  #109 = Class              #108          // scala/util/control/NonFatal$
  #110 = Utf8               Lscala/util/control/NonFatal$;
  #111 = NameAndType        #76:#110      // MODULE$:Lscala/util/control/NonFatal$;
  #112 = Fieldref           #109.#111     // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
  #113 = Utf8               unapply
  #114 = Utf8               (Ljava/lang/Throwable;)Lscala/Option;
  #115 = NameAndType        #113:#114     // unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #116 = Methodref          #109.#115     // scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #117 = Utf8               scala/Option
  #118 = Class              #117          // scala/Option
  #119 = Utf8               isEmpty
  #120 = Utf8               ()Z
  #121 = NameAndType        #119:#120     // isEmpty:()Z
  #122 = Methodref          #118.#121     // scala/Option.isEmpty:()Z
  #123 = Utf8               get
  #124 = Utf8               ()Ljava/lang/Object;
  #125 = NameAndType        #123:#124     // get:()Ljava/lang/Object;
  #126 = Methodref          #118.#125     // scala/Option.get:()Ljava/lang/Object;
  #127 = Utf8               scala/util/Failure
  #128 = Class              #127          // scala/util/Failure
  #129 = Utf8               (Ljava/lang/Throwable;)V
  #130 = NameAndType        #104:#129     // "<init>":(Ljava/lang/Throwable;)V
  #131 = Methodref          #128.#130     // scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
  #132 = Utf8               scala/util/Try
  #133 = Class              #132          // scala/util/Try
  #134 = Utf8               toOption
  #135 = Utf8               ()Lscala/Option;
  #136 = NameAndType        #134:#135     // toOption:()Lscala/Option;
  #137 = Methodref          #133.#136     // scala/util/Try.toOption:()Lscala/Option;
  #138 = Utf8               apply_e
  #139 = Utf8               Ljava/lang/Throwable;
  #140 = Utf8               java/lang/String
  #141 = Class              #140          // java/lang/String
  #142 = Utf8               toInt$
  #143 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I
  #144 = Utf8               toInt
  #145 = Utf8               (Lscala/math/BigInt;)I
  #146 = NameAndType        #144:#145     // toInt:(Lscala/math/BigInt;)I
  #147 = InterfaceMethodref #2.#146       // scala/math/Numeric$BigIntIsIntegral.toInt:(Lscala/math/BigInt;)I
  #148 = Utf8               intValue
  #149 = Utf8               ()I
  #150 = NameAndType        #148:#149     // intValue:()I
  #151 = Methodref          #24.#150      // scala/math/BigInt.intValue:()I
  #152 = Utf8               toLong$
  #153 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J
  #154 = Utf8               toLong
  #155 = Utf8               (Lscala/math/BigInt;)J
  #156 = NameAndType        #154:#155     // toLong:(Lscala/math/BigInt;)J
  #157 = InterfaceMethodref #2.#156       // scala/math/Numeric$BigIntIsIntegral.toLong:(Lscala/math/BigInt;)J
  #158 = Utf8               longValue
  #159 = Utf8               ()J
  #160 = NameAndType        #158:#159     // longValue:()J
  #161 = Methodref          #24.#160      // scala/math/BigInt.longValue:()J
  #162 = Utf8               toFloat$
  #163 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F
  #164 = Utf8               toFloat
  #165 = Utf8               (Lscala/math/BigInt;)F
  #166 = NameAndType        #164:#165     // toFloat:(Lscala/math/BigInt;)F
  #167 = InterfaceMethodref #2.#166       // scala/math/Numeric$BigIntIsIntegral.toFloat:(Lscala/math/BigInt;)F
  #168 = Utf8               floatValue
  #169 = Utf8               ()F
  #170 = NameAndType        #168:#169     // floatValue:()F
  #171 = Methodref          #24.#170      // scala/math/BigInt.floatValue:()F
  #172 = Utf8               toDouble$
  #173 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D
  #174 = Utf8               toDouble
  #175 = Utf8               (Lscala/math/BigInt;)D
  #176 = NameAndType        #174:#175     // toDouble:(Lscala/math/BigInt;)D
  #177 = InterfaceMethodref #2.#176       // scala/math/Numeric$BigIntIsIntegral.toDouble:(Lscala/math/BigInt;)D
  #178 = Utf8               doubleValue
  #179 = Utf8               ()D
  #180 = NameAndType        #178:#179     // doubleValue:()D
  #181 = Methodref          #24.#180      // scala/math/BigInt.doubleValue:()D
  #182 = Utf8               $anonfun$parseString$1
  #183 = Utf8               str$1
  #184 = Utf8               $init$
  #185 = Utf8               (Lscala/math/Numeric$BigIntIsIntegral;)V
  #186 = Utf8               Code
  #187 = Utf8               LineNumberTable
  #188 = Utf8               LocalVariableTable
  #189 = Utf8               MethodParameters
  #190 = Utf8               StackMapTable
  #191 = Utf8               Signature
  #192 = Utf8               InnerClasses
  #193 = Utf8               SourceFile
  #194 = Utf8               ScalaInlineInfo
  #195 = Utf8               Scala
{
  public static scala.math.BigInt plus$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #20                 // InterfaceMethod plus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default scala.math.BigInt plus(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #28                 // Method scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
            0       6     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static scala.math.BigInt minus$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #33                 // InterfaceMethod minus:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default scala.math.BigInt minus(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #36                 // Method scala/math/BigInt.$minus:(Lscala/math/BigInt;)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
            0       6     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static scala.math.BigInt times$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #40                 // InterfaceMethod times:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default scala.math.BigInt times(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #43                 // Method scala/math/BigInt.$times:(Lscala/math/BigInt;)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
            0       6     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static scala.math.BigInt quot$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #47                 // InterfaceMethod quot:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default scala.math.BigInt quot(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #50                 // Method scala/math/BigInt.$div:(Lscala/math/BigInt;)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
            0       6     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static scala.math.BigInt rem$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #54                 // InterfaceMethod rem:(Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
         6: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       7     1     x   Lscala/math/BigInt;
            0       7     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default scala.math.BigInt rem(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #57                 // Method scala/math/BigInt.$percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
            0       6     2     y   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static scala.math.BigInt negate$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #62                 // InterfaceMethod negate:(Lscala/math/BigInt;)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default scala.math.BigInt negate(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #66                 // Method scala/math/BigInt.unary_$minus:()Lscala/math/BigInt;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       5     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public static scala.math.BigInt fromInt$(scala.math.Numeric$BigIntIsIntegral, int);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;I)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #72                 // InterfaceMethod fromInt:(I)Lscala/math/BigInt;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default scala.math.BigInt fromInt(int);
    descriptor: (I)Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #79                 // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
         3: iload_1
         4: invokevirtual #82                 // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
         7: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       8     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public static scala.Option parseString$(scala.math.Numeric$BigIntIsIntegral, java.lang.String);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #89                 // InterfaceMethod parseString:(Ljava/lang/String;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1   str   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      str                            final

  public default scala.Option<scala.math.BigInt> parseString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: getstatic     #98                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
         3: pop
         4: new           #100                // class scala/util/Success
         7: dup
         8: getstatic     #79                 // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
        11: aload_1
        12: invokevirtual #103                // Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
        15: invokespecial #107                // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
        18: goto          69
        21: astore_3
        22: aload_3
        23: ifnull        66
        26: getstatic     #112                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
        29: aload_3
        30: invokevirtual #116                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
        33: astore        4
        35: aload         4
        37: invokevirtual #122                // Method scala/Option.isEmpty:()Z
        40: ifne          66
        43: aload         4
        45: invokevirtual #126                // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #93                 // class java/lang/Throwable
        51: astore        5
        53: new           #128                // class scala/util/Failure
        56: dup
        57: aload         5
        59: invokespecial #131                // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
        62: astore_2
        63: goto          68
        66: aload_3
        67: athrow
        68: aload_2
        69: aconst_null
        70: astore_2
        71: aconst_null
        72: astore_3
        73: aconst_null
        74: astore        4
        76: aconst_null
        77: astore        5
        79: invokevirtual #137                // Method scala/util/Try.toOption:()Lscala/Option;
        82: areturn
      Exception table:
         from    to  target type
             4    18    21   Class java/lang/Throwable
      StackMapTable: number_of_entries = 4
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/math/Numeric$BigIntIsIntegral, class java/lang/String, class scala/util/Failure, class java/lang/Throwable, class scala/Option, class java/lang/Throwable ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/math/Numeric$BigIntIsIntegral, class java/lang/String ]
          stack = [ class scala/util/Try ]
      LineNumberTable:
        line 43: 0
        line 43: 8
        line 43: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0      83     1   str   Ljava/lang/String;
           53      13     5 apply_e   Ljava/lang/Throwable;
    Signature: #91                          // (Ljava/lang/String;)Lscala/Option<Lscala/math/BigInt;>;
    MethodParameters:
      Name                           Flags
      str                            final

  public static int toInt$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #147                // InterfaceMethod toInt:(Lscala/math/BigInt;)I
         5: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default int toInt(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #151                // Method scala/math/BigInt.intValue:()I
         4: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       5     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public static long toLong$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)J
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #157                // InterfaceMethod toLong:(Lscala/math/BigInt;)J
         5: lreturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default long toLong(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #161                // Method scala/math/BigInt.longValue:()J
         4: lreturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       5     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public static float toFloat$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #167                // InterfaceMethod toFloat:(Lscala/math/BigInt;)F
         5: freturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default float toFloat(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #171                // Method scala/math/BigInt.floatValue:()F
         4: freturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       5     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public static double toDouble$(scala.math.Numeric$BigIntIsIntegral, scala.math.BigInt);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;Lscala/math/BigInt;)D
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #177                // InterfaceMethod toDouble:(Lscala/math/BigInt;)D
         5: dreturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
            0       6     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default double toDouble(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #181                // Method scala/math/BigInt.doubleValue:()D
         4: dreturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$BigIntIsIntegral;
            0       5     1     x   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x                              final

  public static scala.math.BigInt $anonfun$parseString$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #79                 // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
         3: aload_0
         4: invokevirtual #103                // Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
         7: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 str$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      str$1                          final

  public static void $init$(scala.math.Numeric$BigIntIsIntegral);
    descriptor: (Lscala/math/Numeric$BigIntIsIntegral;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/math/Numeric$BigIntIsIntegral;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public static #11= #2 of #10;           // BigIntIsIntegral=class scala/math/Numeric$BigIntIsIntegral of class scala/math/Numeric
Signature: #3                           // Ljava/lang/Object;Lscala/math/Integral<Lscala/math/BigInt;>;
SourceFile: "Numeric.scala"
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 00 00 1A 00 B6 00 65 01 00 B8 00 B9 01 00 45
   00 46 00 00 43 00 44 01 00 1F 00 12 00 00 1E 00
   0D 01 00 3C 00 1A 00 00 3A 00 3B 01 00 56 00 57
   00 00 53 00 54 01 00 11 00 12 00 00 0C 00 0D 01
   00 2D 00 12 00 00 2C 00 0D 01 00 34 00 12 00 00
   33 00 0D 01 00 26 00 12 00 00 25 00 0D 01 00 AE
   00 AF 00 00 AC 00 AD 01 00 A4 00 A5 00 00 A2 00
   A3 01 00 90 00 91 00 00 8E 00 8F 01 00 9A 00 9B
   00 00 98 00 99 01
  Scala: length = 0x0 (unknown attribute)

