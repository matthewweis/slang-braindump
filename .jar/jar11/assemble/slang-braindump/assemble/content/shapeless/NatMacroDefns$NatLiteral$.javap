Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/NatMacroDefns$NatLiteral$.class
  Last modified May 29, 2022; size 2661 bytes
  SHA-256 checksum 4a106d0ce67c418b7066de204b4df39b3b9c5922ef8973709189ae0b8f5c00f1
  Compiled from "nat.scala"
public class shapeless.NatMacroDefns$NatLiteral$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/NatMacroDefns$NatLiteral$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 2, attributes: 4
Constant pool:
    #1 = Utf8               shapeless/NatMacroDefns$NatLiteral$
    #2 = Class              #1            // shapeless/NatMacroDefns$NatLiteral$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               nat.scala
    #6 = Utf8               scala/reflect/api/Constants$ConstantApi
    #7 = Class              #6            // scala/reflect/api/Constants$ConstantApi
    #8 = Utf8               scala/reflect/api/Constants
    #9 = Class              #8            // scala/reflect/api/Constants
   #10 = Utf8               ConstantApi
   #11 = Utf8               scala/reflect/api/Constants$ConstantExtractor
   #12 = Class              #11           // scala/reflect/api/Constants$ConstantExtractor
   #13 = Utf8               ConstantExtractor
   #14 = Utf8               scala/reflect/api/Trees$LiteralApi
   #15 = Class              #14           // scala/reflect/api/Trees$LiteralApi
   #16 = Utf8               scala/reflect/api/Trees
   #17 = Class              #16           // scala/reflect/api/Trees
   #18 = Utf8               LiteralApi
   #19 = Utf8               scala/reflect/api/Trees$LiteralExtractor
   #20 = Class              #19           // scala/reflect/api/Trees$LiteralExtractor
   #21 = Utf8               LiteralExtractor
   #22 = Utf8               scala/reflect/api/Trees$TreeApi
   #23 = Class              #22           // scala/reflect/api/Trees$TreeApi
   #24 = Utf8               TreeApi
   #25 = Utf8               shapeless/NatMacroDefns
   #26 = Class              #25           // shapeless/NatMacroDefns
   #27 = Utf8               NatLiteral$
   #28 = Utf8               $outer
   #29 = Utf8               Lshapeless/NatMacroDefns;
   #30 = Utf8               unapply
   #31 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
   #32 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/Option<Ljava/lang/Object;>;
   #33 = Utf8               i
   #34 = NameAndType        #28:#29       // $outer:Lshapeless/NatMacroDefns;
   #35 = Fieldref           #2.#34        // shapeless/NatMacroDefns$NatLiteral$.$outer:Lshapeless/NatMacroDefns;
   #36 = Utf8               c
   #37 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #38 = NameAndType        #36:#37       // c:()Lscala/reflect/macros/whitebox/Context;
   #39 = InterfaceMethodref #26.#38       // shapeless/NatMacroDefns.c:()Lscala/reflect/macros/whitebox/Context;
   #40 = Utf8               scala/reflect/macros/whitebox/Context
   #41 = Class              #40           // scala/reflect/macros/whitebox/Context
   #42 = Utf8               universe
   #43 = Utf8               ()Lscala/reflect/macros/Universe;
   #44 = NameAndType        #42:#43       // universe:()Lscala/reflect/macros/Universe;
   #45 = InterfaceMethodref #41.#44       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #46 = Utf8               scala/reflect/macros/Universe
   #47 = Class              #46           // scala/reflect/macros/Universe
   #48 = Utf8               LiteralTag
   #49 = Utf8               ()Lscala/reflect/ClassTag;
   #50 = NameAndType        #48:#49       // LiteralTag:()Lscala/reflect/ClassTag;
   #51 = Methodref          #47.#50       // scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
   #52 = Utf8               scala/reflect/ClassTag
   #53 = Class              #52           // scala/reflect/ClassTag
   #54 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #55 = NameAndType        #30:#54       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #56 = InterfaceMethodref #53.#55       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #57 = Utf8               scala/Option
   #58 = Class              #57           // scala/Option
   #59 = Utf8               isEmpty
   #60 = Utf8               ()Z
   #61 = NameAndType        #59:#60       // isEmpty:()Z
   #62 = Methodref          #58.#61       // scala/Option.isEmpty:()Z
   #63 = Utf8               get
   #64 = Utf8               ()Ljava/lang/Object;
   #65 = NameAndType        #63:#64       // get:()Ljava/lang/Object;
   #66 = Methodref          #58.#65       // scala/Option.get:()Ljava/lang/Object;
   #67 = Utf8               Literal
   #68 = Utf8               ()Lscala/reflect/api/Trees$LiteralExtractor;
   #69 = NameAndType        #67:#68       // Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
   #70 = Methodref          #47.#69       // scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
   #71 = Utf8               (Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
   #72 = NameAndType        #30:#71       // unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
   #73 = Methodref          #20.#72       // scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
   #74 = Utf8               ConstantTag
   #75 = NameAndType        #74:#49       // ConstantTag:()Lscala/reflect/ClassTag;
   #76 = Methodref          #47.#75       // scala/reflect/macros/Universe.ConstantTag:()Lscala/reflect/ClassTag;
   #77 = Utf8               Constant
   #78 = Utf8               ()Lscala/reflect/api/Constants$ConstantExtractor;
   #79 = NameAndType        #77:#78       // Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
   #80 = Methodref          #47.#79       // scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
   #81 = Utf8               (Lscala/reflect/api/Constants$ConstantApi;)Lscala/Option;
   #82 = NameAndType        #30:#81       // unapply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/Option;
   #83 = Methodref          #12.#82       // scala/reflect/api/Constants$ConstantExtractor.unapply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/Option;
   #84 = Utf8               java/lang/Integer
   #85 = Class              #84           // java/lang/Integer
   #86 = Utf8               scala/runtime/BoxesRunTime
   #87 = Class              #86           // scala/runtime/BoxesRunTime
   #88 = Utf8               unboxToInt
   #89 = Utf8               (Ljava/lang/Object;)I
   #90 = NameAndType        #88:#89       // unboxToInt:(Ljava/lang/Object;)I
   #91 = Methodref          #87.#90       // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   #92 = Utf8               scala/Some
   #93 = Class              #92           // scala/Some
   #94 = Utf8               boxToInteger
   #95 = Utf8               (I)Ljava/lang/Integer;
   #96 = NameAndType        #94:#95       // boxToInteger:(I)Ljava/lang/Integer;
   #97 = Methodref          #87.#96       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #98 = Utf8               <init>
   #99 = Utf8               (Ljava/lang/Object;)V
  #100 = NameAndType        #98:#99       // "<init>":(Ljava/lang/Object;)V
  #101 = Methodref          #93.#100      // scala/Some."<init>":(Ljava/lang/Object;)V
  #102 = Utf8               scala/None$
  #103 = Class              #102          // scala/None$
  #104 = Utf8               MODULE$
  #105 = Utf8               Lscala/None$;
  #106 = NameAndType        #104:#105     // MODULE$:Lscala/None$;
  #107 = Fieldref           #103.#106     // scala/None$.MODULE$:Lscala/None$;
  #108 = Utf8               n
  #109 = Utf8               Ljava/lang/Object;
  #110 = Utf8               this
  #111 = Utf8               Lshapeless/NatMacroDefns$NatLiteral$;
  #112 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #113 = Utf8               (Lshapeless/NatMacroDefns;)V
  #114 = Utf8               ()V
  #115 = NameAndType        #98:#114      // "<init>":()V
  #116 = Methodref          #4.#115       // java/lang/Object."<init>":()V
  #117 = Utf8               Code
  #118 = Utf8               StackMapTable
  #119 = Utf8               LineNumberTable
  #120 = Utf8               LocalVariableTable
  #121 = Utf8               Signature
  #122 = Utf8               MethodParameters
  #123 = Utf8               InnerClasses
  #124 = Utf8               SourceFile
  #125 = Utf8               ScalaInlineInfo
  #126 = Utf8               Scala
{
  private final shapeless.NatMacroDefns $outer;
    descriptor: Lshapeless/NatMacroDefns;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public scala.Option<java.lang.Object> unapply(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=13, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        253
         6: aload_0
         7: getfield      #35                 // Field $outer:Lshapeless/NatMacroDefns;
        10: invokeinterface #39,  1           // InterfaceMethod shapeless/NatMacroDefns.c:()Lscala/reflect/macros/whitebox/Context;
        15: invokeinterface #45,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        20: invokevirtual #51                 // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        23: aload_3
        24: invokeinterface #56,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        29: astore        4
        31: aload         4
        33: invokevirtual #62                 // Method scala/Option.isEmpty:()Z
        36: ifne          250
        39: aload         4
        41: invokevirtual #66                 // Method scala/Option.get:()Ljava/lang/Object;
        44: checkcast     #15                 // class scala/reflect/api/Trees$LiteralApi
        47: astore        5
        49: aload         5
        51: ifnull        247
        54: aload_0
        55: getfield      #35                 // Field $outer:Lshapeless/NatMacroDefns;
        58: invokeinterface #39,  1           // InterfaceMethod shapeless/NatMacroDefns.c:()Lscala/reflect/macros/whitebox/Context;
        63: invokeinterface #45,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        68: invokevirtual #70                 // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        71: aload         5
        73: invokevirtual #73                 // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        76: astore        6
        78: aload         6
        80: invokevirtual #62                 // Method scala/Option.isEmpty:()Z
        83: ifne          244
        86: aload         6
        88: invokevirtual #66                 // Method scala/Option.get:()Ljava/lang/Object;
        91: checkcast     #7                  // class scala/reflect/api/Constants$ConstantApi
        94: astore        7
        96: aload         7
        98: ifnull        241
       101: aload_0
       102: getfield      #35                 // Field $outer:Lshapeless/NatMacroDefns;
       105: invokeinterface #39,  1           // InterfaceMethod shapeless/NatMacroDefns.c:()Lscala/reflect/macros/whitebox/Context;
       110: invokeinterface #45,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       115: invokevirtual #76                 // Method scala/reflect/macros/Universe.ConstantTag:()Lscala/reflect/ClassTag;
       118: aload         7
       120: invokeinterface #56,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       125: astore        8
       127: aload         8
       129: invokevirtual #62                 // Method scala/Option.isEmpty:()Z
       132: ifne          238
       135: aload         8
       137: invokevirtual #66                 // Method scala/Option.get:()Ljava/lang/Object;
       140: checkcast     #7                  // class scala/reflect/api/Constants$ConstantApi
       143: astore        9
       145: aload         9
       147: ifnull        235
       150: aload_0
       151: getfield      #35                 // Field $outer:Lshapeless/NatMacroDefns;
       154: invokeinterface #39,  1           // InterfaceMethod shapeless/NatMacroDefns.c:()Lscala/reflect/macros/whitebox/Context;
       159: invokeinterface #45,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       164: invokevirtual #80                 // Method scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
       167: aload         9
       169: invokevirtual #83                 // Method scala/reflect/api/Constants$ConstantExtractor.unapply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/Option;
       172: astore        10
       174: aload         10
       176: invokevirtual #62                 // Method scala/Option.isEmpty:()Z
       179: ifne          232
       182: aload         10
       184: invokevirtual #66                 // Method scala/Option.get:()Ljava/lang/Object;
       187: astore        11
       189: aload         11
       191: instanceof    #85                 // class java/lang/Integer
       194: ifeq          229
       197: aload         11
       199: invokestatic  #91                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       202: istore        12
       204: iload         12
       206: iconst_0
       207: if_icmplt     226
       210: new           #93                 // class scala/Some
       213: dup
       214: iload         12
       216: invokestatic  #97                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       219: invokespecial #101                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       222: astore_2
       223: goto          263
       226: goto          256
       229: goto          256
       232: goto          256
       235: goto          256
       238: goto          256
       241: goto          256
       244: goto          256
       247: goto          256
       250: goto          256
       253: goto          256
       256: getstatic     #107                // Field scala/None$.MODULE$:Lscala/None$;
       259: astore_2
       260: goto          263
       263: aload_2
       264: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 226
          locals = [ class shapeless/NatMacroDefns$NatLiteral$, class scala/reflect/api/Trees$TreeApi, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, class scala/Option, class java/lang/Object, int ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class shapeless/NatMacroDefns$NatLiteral$, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 92: 0
        line 93: 2
        line 92: 39
        line 93: 49
        line 92: 86
        line 93: 96
        line 92: 135
        line 93: 145
        line 92: 182
        line 93: 189
        line 94: 256
        line 92: 263
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          187      45    11     n   Ljava/lang/Object;
            0     265     0  this   Lshapeless/NatMacroDefns$NatLiteral$;
            0     265     1     i   Lscala/reflect/api/Trees$TreeApi;
    Signature: #32                          // (Lscala/reflect/api/Trees$TreeApi;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      i                              final

  public shapeless.NatMacroDefns$NatLiteral$(shapeless.NatMacroDefns);
    descriptor: (Lshapeless/NatMacroDefns;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #35                 // Field $outer:Lshapeless/NatMacroDefns;
        11: aload_0
        12: invokespecial #116                // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 90: 0
        line 98: 11
        line 90: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lshapeless/NatMacroDefns$NatLiteral$;
            0      16     1 $outer   Lshapeless/NatMacroDefns;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public abstract #10= #7 of #9;          // ConstantApi=class scala/reflect/api/Constants$ConstantApi of class scala/reflect/api/Constants
  public abstract #13= #12 of #9;         // ConstantExtractor=class scala/reflect/api/Constants$ConstantExtractor of class scala/reflect/api/Constants
  public #18= #15 of #17;                 // LiteralApi=class scala/reflect/api/Trees$LiteralApi of class scala/reflect/api/Trees
  public abstract #21= #20 of #17;        // LiteralExtractor=class scala/reflect/api/Trees$LiteralExtractor of class scala/reflect/api/Trees
  public #24= #23 of #17;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #27= #2 of #26;                  // NatLiteral$=class shapeless/NatMacroDefns$NatLiteral$ of class shapeless/NatMacroDefns
SourceFile: "nat.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 62 00 71 01 00 1E 00 1F 01
  Scala: length = 0x0 (unknown attribute)

