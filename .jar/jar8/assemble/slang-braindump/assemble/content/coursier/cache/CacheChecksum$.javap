Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/cache/CacheChecksum$.class
  Last modified May 29, 2022; size 7405 bytes
  SHA-256 checksum f6cd5d01e35dbba1cb3e84adee09d626c58dbe2ba12c68bf004a3238a43416f0
  Compiled from "CacheChecksum.scala"
public final class coursier.cache.CacheChecksum$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/CacheChecksum$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 20, attributes: 5
Constant pool:
    #1 = Utf8               coursier/cache/CacheChecksum$
    #2 = Class              #1            // coursier/cache/CacheChecksum$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               CacheChecksum.scala
    #6 = Utf8               coursier/cache/CacheChecksum$$anonfun$findChecksum$1
    #7 = Class              #6            // coursier/cache/CacheChecksum$$anonfun$findChecksum$1
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #14 = Class              #13           // scala/collection/mutable/ArraySeq$ofRef
   #15 = Utf8               scala/collection/mutable/ArraySeq
   #16 = Class              #15           // scala/collection/mutable/ArraySeq
   #17 = Utf8               ofRef
   #18 = Utf8               MODULE$
   #19 = Utf8               Lcoursier/cache/CacheChecksum$;
   #20 = Utf8               coursier$cache$CacheChecksum$$checksumLength
   #21 = Utf8               Lscala/collection/immutable/Set;
   #22 = Utf8               Lscala/collection/immutable/Set<Ljava/lang/Object;>;
   #23 = Utf8               <clinit>
   #24 = Utf8               ()V
   #25 = Utf8               <init>
   #26 = NameAndType        #25:#24       // "<init>":()V
   #27 = Methodref          #2.#26        // coursier/cache/CacheChecksum$."<init>":()V
   #28 = NameAndType        #18:#19       // MODULE$:Lcoursier/cache/CacheChecksum$;
   #29 = Fieldref           #2.#28        // coursier/cache/CacheChecksum$.MODULE$:Lcoursier/cache/CacheChecksum$;
   #30 = Utf8               scala/Predef$
   #31 = Class              #30           // scala/Predef$
   #32 = Utf8               Lscala/Predef$;
   #33 = NameAndType        #18:#32       // MODULE$:Lscala/Predef$;
   #34 = Fieldref           #31.#33       // scala/Predef$.MODULE$:Lscala/Predef$;
   #35 = Utf8               Set
   #36 = Utf8               ()Lscala/collection/immutable/Set$;
   #37 = NameAndType        #35:#36       // Set:()Lscala/collection/immutable/Set$;
   #38 = Methodref          #31.#37       // scala/Predef$.Set:()Lscala/collection/immutable/Set$;
   #39 = Utf8               scala/runtime/ScalaRunTime$
   #40 = Class              #39           // scala/runtime/ScalaRunTime$
   #41 = Utf8               Lscala/runtime/ScalaRunTime$;
   #42 = NameAndType        #18:#41       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #43 = Fieldref           #40.#42       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #44 = Utf8               wrapIntArray
   #45 = Utf8               ([I)Lscala/collection/immutable/ArraySeq;
   #46 = NameAndType        #44:#45       // wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
   #47 = Methodref          #40.#46       // scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
   #48 = Utf8               scala/collection/immutable/Set$
   #49 = Class              #48           // scala/collection/immutable/Set$
   #50 = Utf8               apply
   #51 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #52 = NameAndType        #50:#51       // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #53 = Methodref          #49.#52       // scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #54 = Utf8               scala/collection/immutable/Set
   #55 = Class              #54           // scala/collection/immutable/Set
   #56 = NameAndType        #20:#21       // coursier$cache$CacheChecksum$$checksumLength:Lscala/collection/immutable/Set;
   #57 = Fieldref           #2.#56        // coursier/cache/CacheChecksum$.coursier$cache$CacheChecksum$$checksumLength:Lscala/collection/immutable/Set;
   #58 = Utf8               ()Lscala/collection/immutable/Set;
   #59 = Utf8               ()Lscala/collection/immutable/Set<Ljava/lang/Object;>;
   #60 = Utf8               this
   #61 = Utf8               coursier$cache$CacheChecksum$$ifHexString
   #62 = Utf8               (Ljava/lang/String;)Z
   #63 = Utf8               s
   #64 = Utf8               scala/collection/StringOps$
   #65 = Class              #64           // scala/collection/StringOps$
   #66 = Utf8               Lscala/collection/StringOps$;
   #67 = NameAndType        #18:#66       // MODULE$:Lscala/collection/StringOps$;
   #68 = Fieldref           #65.#67       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #69 = Utf8               augmentString
   #70 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #71 = NameAndType        #69:#70       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #72 = Methodref          #31.#71       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #73 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #74 = MethodType         #73           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #75 = Utf8               $anonfun$ifHexString$1$adapted
   #76 = NameAndType        #75:#73       // $anonfun$ifHexString$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #77 = Methodref          #2.#76        // coursier/cache/CacheChecksum$.$anonfun$ifHexString$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #78 = MethodHandle       6:#77         // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$ifHexString$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #79 = Integer            1
   #80 = Utf8               java/lang/invoke/LambdaMetafactory
   #81 = Class              #80           // java/lang/invoke/LambdaMetafactory
   #82 = Utf8               altMetafactory
   #83 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #84 = NameAndType        #82:#83       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #85 = Methodref          #81.#84       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #86 = MethodHandle       6:#85         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #87 = Utf8               ()Lscala/Function1;
   #88 = NameAndType        #50:#87       // apply:()Lscala/Function1;
   #89 = InvokeDynamic      #0:#88        // #0:apply:()Lscala/Function1;
   #90 = Utf8               forall$extension
   #91 = Utf8               (Ljava/lang/String;Lscala/Function1;)Z
   #92 = NameAndType        #90:#91       // forall$extension:(Ljava/lang/String;Lscala/Function1;)Z
   #93 = Methodref          #65.#92       // scala/collection/StringOps$.forall$extension:(Ljava/lang/String;Lscala/Function1;)Z
   #94 = Utf8               Ljava/lang/String;
   #95 = Utf8               findChecksum
   #96 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/Option;
   #97 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lscala/Option<Ljava/math/BigInteger;>;
   #98 = Utf8               elems
   #99 = Methodref          #7.#26        // coursier/cache/CacheChecksum$$anonfun$findChecksum$1."<init>":()V
  #100 = Utf8               scala/collection/immutable/Seq
  #101 = Class              #100          // scala/collection/immutable/Seq
  #102 = Utf8               collectFirst
  #103 = Utf8               (Lscala/PartialFunction;)Lscala/Option;
  #104 = NameAndType        #102:#103     // collectFirst:(Lscala/PartialFunction;)Lscala/Option;
  #105 = InterfaceMethodref #101.#104     // scala/collection/immutable/Seq.collectFirst:(Lscala/PartialFunction;)Lscala/Option;
  #106 = Utf8               Lscala/collection/immutable/Seq;
  #107 = Utf8               parseChecksumLine
  #108 = Utf8               lines
  #109 = Utf8               $anonfun$parseChecksumLine$1
  #110 = NameAndType        #109:#70      // $anonfun$parseChecksumLine$1:(Ljava/lang/String;)Ljava/lang/String;
  #111 = Methodref          #2.#110       // coursier/cache/CacheChecksum$.$anonfun$parseChecksumLine$1:(Ljava/lang/String;)Ljava/lang/String;
  #112 = MethodHandle       6:#111        // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumLine$1:(Ljava/lang/String;)Ljava/lang/String;
  #113 = MethodType         #70           //  (Ljava/lang/String;)Ljava/lang/String;
  #114 = Integer            5
  #115 = InvokeDynamic      #1:#88        // #1:apply:()Lscala/Function1;
  #116 = Utf8               map
  #117 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #118 = NameAndType        #116:#117     // map:(Lscala/Function1;)Ljava/lang/Object;
  #119 = InterfaceMethodref #101.#118     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #120 = NameAndType        #95:#96       // findChecksum:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #121 = Methodref          #2.#120       // coursier/cache/CacheChecksum$.findChecksum:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #122 = Utf8               parseChecksumAlternative
  #123 = Utf8               $anonfun$parseChecksumAlternative$1
  #124 = Utf8               (Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
  #125 = NameAndType        #123:#124     // $anonfun$parseChecksumAlternative$1:(Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
  #126 = Methodref          #2.#125       // coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$1:(Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
  #127 = MethodHandle       6:#126        // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$1:(Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
  #128 = MethodType         #124          //  (Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
  #129 = InvokeDynamic      #2:#88        // #2:apply:()Lscala/Function1;
  #130 = Utf8               flatMap
  #131 = NameAndType        #130:#117     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #132 = InterfaceMethodref #101.#131     // scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #133 = Utf8               ()Ljava/lang/Object;
  #134 = MethodType         #133          //  ()Ljava/lang/Object;
  #135 = Utf8               $anonfun$parseChecksumAlternative$2
  #136 = NameAndType        #135:#96      // $anonfun$parseChecksumAlternative$2:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #137 = Methodref          #2.#136       // coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$2:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #138 = MethodHandle       6:#137        // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$2:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #139 = Utf8               ()Lscala/Option;
  #140 = MethodType         #139          //  ()Lscala/Option;
  #141 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/Function0;
  #142 = NameAndType        #50:#141      // apply:(Lscala/collection/immutable/Seq;)Lscala/Function0;
  #143 = InvokeDynamic      #3:#142       // #3:apply:(Lscala/collection/immutable/Seq;)Lscala/Function0;
  #144 = Utf8               scala/Option
  #145 = Class              #144          // scala/Option
  #146 = Utf8               orElse
  #147 = Utf8               (Lscala/Function0;)Lscala/Option;
  #148 = NameAndType        #146:#147     // orElse:(Lscala/Function0;)Lscala/Option;
  #149 = Methodref          #145.#148     // scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
  #150 = Utf8               parseChecksum
  #151 = Utf8               (Ljava/lang/String;)Lscala/Option;
  #152 = Utf8               (Ljava/lang/String;)Lscala/Option<Ljava/math/BigInteger;>;
  #153 = Utf8               content
  #154 = Utf8               linesIterator$extension
  #155 = Utf8               (Ljava/lang/String;)Lscala/collection/Iterator;
  #156 = NameAndType        #154:#155     // linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
  #157 = Methodref          #65.#156      // scala/collection/StringOps$.linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
  #158 = Utf8               scala/collection/Iterator
  #159 = Class              #158          // scala/collection/Iterator
  #160 = Utf8               toVector
  #161 = Utf8               ()Lscala/collection/immutable/Vector;
  #162 = NameAndType        #160:#161     // toVector:()Lscala/collection/immutable/Vector;
  #163 = InterfaceMethodref #159.#162     // scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
  #164 = NameAndType        #107:#96      // parseChecksumLine:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #165 = Methodref          #2.#164       // coursier/cache/CacheChecksum$.parseChecksumLine:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #166 = Utf8               $anonfun$parseChecksum$1
  #167 = Utf8               (Lscala/collection/immutable/Vector;)Lscala/Option;
  #168 = NameAndType        #166:#167     // $anonfun$parseChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
  #169 = Methodref          #2.#168       // coursier/cache/CacheChecksum$.$anonfun$parseChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
  #170 = MethodHandle       6:#169        // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
  #171 = Utf8               (Lscala/collection/immutable/Vector;)Lscala/Function0;
  #172 = NameAndType        #50:#171      // apply:(Lscala/collection/immutable/Vector;)Lscala/Function0;
  #173 = InvokeDynamic      #4:#172       // #4:apply:(Lscala/collection/immutable/Vector;)Lscala/Function0;
  #174 = Utf8               Lscala/collection/immutable/Vector;
  #175 = Utf8               parseRawChecksum
  #176 = Utf8               ([B)Lscala/Option;
  #177 = Utf8               ([B)Lscala/Option<Ljava/math/BigInteger;>;
  #178 = Utf8               scala/Some
  #179 = Class              #178          // scala/Some
  #180 = Utf8               java/math/BigInteger
  #181 = Class              #180          // java/math/BigInteger
  #182 = Utf8               ([B)V
  #183 = NameAndType        #25:#182      // "<init>":([B)V
  #184 = Methodref          #181.#183     // java/math/BigInteger."<init>":([B)V
  #185 = Utf8               (Ljava/lang/Object;)V
  #186 = NameAndType        #25:#185      // "<init>":(Ljava/lang/Object;)V
  #187 = Methodref          #179.#186     // scala/Some."<init>":(Ljava/lang/Object;)V
  #188 = Utf8               java/lang/String
  #189 = Class              #188          // java/lang/String
  #190 = Utf8               java/nio/charset/StandardCharsets
  #191 = Class              #190          // java/nio/charset/StandardCharsets
  #192 = Utf8               UTF_8
  #193 = Utf8               Ljava/nio/charset/Charset;
  #194 = NameAndType        #192:#193     // UTF_8:Ljava/nio/charset/Charset;
  #195 = Fieldref           #191.#194     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
  #196 = Utf8               ([BLjava/nio/charset/Charset;)V
  #197 = NameAndType        #25:#196      // "<init>":([BLjava/nio/charset/Charset;)V
  #198 = Methodref          #189.#197     // java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
  #199 = Utf8               $anonfun$parseRawChecksum$1
  #200 = NameAndType        #199:#167     // $anonfun$parseRawChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
  #201 = Methodref          #2.#200       // coursier/cache/CacheChecksum$.$anonfun$parseRawChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
  #202 = MethodHandle       6:#201        // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseRawChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
  #203 = InvokeDynamic      #5:#172       // #5:apply:(Lscala/collection/immutable/Vector;)Lscala/Function0;
  #204 = Utf8               [B
  #205 = Utf8               $anonfun$ifHexString$1
  #206 = Utf8               (C)Z
  #207 = Utf8               c
  #208 = Utf8               scala/runtime/RichChar$
  #209 = Class              #208          // scala/runtime/RichChar$
  #210 = Utf8               Lscala/runtime/RichChar$;
  #211 = NameAndType        #18:#210      // MODULE$:Lscala/runtime/RichChar$;
  #212 = Fieldref           #209.#211     // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
  #213 = Utf8               charWrapper
  #214 = Utf8               (C)C
  #215 = NameAndType        #213:#214     // charWrapper:(C)C
  #216 = Methodref          #31.#215      // scala/Predef$.charWrapper:(C)C
  #217 = Utf8               isDigit$extension
  #218 = NameAndType        #217:#206     // isDigit$extension:(C)Z
  #219 = Methodref          #209.#218     // scala/runtime/RichChar$.isDigit$extension:(C)Z
  #220 = Utf8               C
  #221 = Utf8               x$1
  #222 = Utf8               toLowerCase
  #223 = Utf8               ()Ljava/lang/String;
  #224 = NameAndType        #222:#223     // toLowerCase:()Ljava/lang/String;
  #225 = Methodref          #189.#224     // java/lang/String.toLowerCase:()Ljava/lang/String;
  #226 = Utf8               \\s
  #227 = String             #226          // \\s
  #228 = Utf8
  #229 = String             #228          //
  #230 = Utf8               replaceAll
  #231 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #232 = NameAndType        #230:#231     // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #233 = Methodref          #189.#232     // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #234 = Utf8               x$2
  #235 = Utf8               \\s+
  #236 = String             #235          // \\s+
  #237 = Utf8               split
  #238 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;
  #239 = NameAndType        #237:#238     // split:(Ljava/lang/String;)[Ljava/lang/String;
  #240 = Methodref          #189.#239     // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
  #241 = Utf8               [Ljava/lang/Object;
  #242 = Class              #241          // "[Ljava/lang/Object;"
  #243 = Utf8               wrapRefArray
  #244 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #245 = NameAndType        #243:#244     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #246 = Methodref          #31.#245      // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #247 = Utf8               $anonfun$parseChecksumAlternative$4
  #248 = NameAndType        #61:#62       // coursier$cache$CacheChecksum$$ifHexString:(Ljava/lang/String;)Z
  #249 = Methodref          #2.#248       // coursier/cache/CacheChecksum$.coursier$cache$CacheChecksum$$ifHexString:(Ljava/lang/String;)Z
  #250 = Utf8               $anonfun$parseChecksumAlternative$3
  #251 = Utf8               line
  #252 = Utf8               scala/collection/ArrayOps$
  #253 = Class              #252          // scala/collection/ArrayOps$
  #254 = Utf8               Lscala/collection/ArrayOps$;
  #255 = NameAndType        #18:#254      // MODULE$:Lscala/collection/ArrayOps$;
  #256 = Fieldref           #253.#255     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #257 = Utf8               refArrayOps
  #258 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #259 = NameAndType        #257:#258     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #260 = Methodref          #31.#259      // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #261 = Utf8               $anonfun$parseChecksumAlternative$4$adapted
  #262 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #263 = NameAndType        #261:#262     // $anonfun$parseChecksumAlternative$4$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #264 = Methodref          #2.#263       // coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$4$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #265 = MethodHandle       6:#264        // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$4$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #266 = MethodType         #262          //  (Ljava/lang/String;)Ljava/lang/Object;
  #267 = InvokeDynamic      #6:#88        // #6:apply:()Lscala/Function1;
  #268 = Utf8               filter$extension
  #269 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #270 = NameAndType        #268:#269     // filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #271 = Methodref          #253.#270     // scala/collection/ArrayOps$.filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #272 = Utf8               mkString
  #273 = NameAndType        #272:#223     // mkString:()Ljava/lang/String;
  #274 = Methodref          #14.#273      // scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
  #275 = Utf8               lines$1
  #276 = NameAndType        #250:#70      // $anonfun$parseChecksumAlternative$3:(Ljava/lang/String;)Ljava/lang/String;
  #277 = Methodref          #2.#276       // coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$3:(Ljava/lang/String;)Ljava/lang/String;
  #278 = MethodHandle       6:#277        // REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$3:(Ljava/lang/String;)Ljava/lang/String;
  #279 = InvokeDynamic      #7:#88        // #7:apply:()Lscala/Function1;
  #280 = Utf8               lines$2
  #281 = NameAndType        #122:#96      // parseChecksumAlternative:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #282 = Methodref          #2.#281       // coursier/cache/CacheChecksum$.parseChecksumAlternative:(Lscala/collection/immutable/Seq;)Lscala/Option;
  #283 = Utf8               lines$3
  #284 = Methodref          #4.#26        // java/lang/Object."<init>":()V
  #285 = Utf8               scala/runtime/BoxesRunTime
  #286 = Class              #285          // scala/runtime/BoxesRunTime
  #287 = Utf8               unboxToChar
  #288 = Utf8               (Ljava/lang/Object;)C
  #289 = NameAndType        #287:#288     // unboxToChar:(Ljava/lang/Object;)C
  #290 = Methodref          #286.#289     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #291 = NameAndType        #205:#206     // $anonfun$ifHexString$1:(C)Z
  #292 = Methodref          #2.#291       // coursier/cache/CacheChecksum$.$anonfun$ifHexString$1:(C)Z
  #293 = Utf8               boxToBoolean
  #294 = Utf8               (Z)Ljava/lang/Boolean;
  #295 = NameAndType        #293:#294     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #296 = Methodref          #286.#295     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #297 = Utf8               Ljava/lang/Object;
  #298 = NameAndType        #247:#62      // $anonfun$parseChecksumAlternative$4:(Ljava/lang/String;)Z
  #299 = Methodref          #2.#298       // coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$4:(Ljava/lang/String;)Z
  #300 = Utf8               $deserializeLambda$
  #301 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #302 = Utf8               scala/runtime/LambdaDeserialize
  #303 = Class              #302          // scala/runtime/LambdaDeserialize
  #304 = Utf8               bootstrap
  #305 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #306 = NameAndType        #304:#305     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #307 = Methodref          #303.#306     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #308 = MethodHandle       6:#307        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #309 = Utf8               lambdaDeserialize
  #310 = NameAndType        #309:#301     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #311 = InvokeDynamic      #8:#310       // #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #312 = Utf8               Signature
  #313 = Utf8               Code
  #314 = Utf8               LineNumberTable
  #315 = Utf8               LocalVariableTable
  #316 = Utf8               MethodParameters
  #317 = Utf8               StackMapTable
  #318 = Utf8               InnerClasses
  #319 = Utf8               SourceFile
  #320 = Utf8               BootstrapMethods
  #321 = Utf8               ScalaInlineInfo
  #322 = Utf8               Scala
{
  public static final coursier.cache.CacheChecksum$ MODULE$;
    descriptor: Lcoursier/cache/CacheChecksum$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.collection.immutable.Set<java.lang.Object> coursier$cache$CacheChecksum$$checksumLength;
    descriptor: Lscala/collection/immutable/Set;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #22                          // Lscala/collection/immutable/Set<Ljava/lang/Object;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=0, args_size=0
         0: new           #2                  // class coursier/cache/CacheChecksum$
         3: dup
         4: invokespecial #27                 // Method "<init>":()V
         7: putstatic     #29                 // Field MODULE$:Lcoursier/cache/CacheChecksum$;
        10: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        13: invokevirtual #38                 // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
        16: getstatic     #43                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        19: iconst_4
        20: newarray       int
        22: dup
        23: iconst_0
        24: bipush        32
        26: iastore
        27: dup
        28: iconst_1
        29: bipush        40
        31: iastore
        32: dup
        33: iconst_2
        34: bipush        64
        36: iastore
        37: dup
        38: iconst_3
        39: sipush        128
        42: iastore
        43: invokevirtual #47                 // Method scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
        46: invokevirtual #53                 // Method scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        49: checkcast     #55                 // class scala/collection/immutable/Set
        52: putstatic     #57                 // Field coursier$cache$CacheChecksum$$checksumLength:Lscala/collection/immutable/Set;
        55: return
      LineNumberTable:
        line 7: 0
        line 9: 10
        line 10: 24
        line 11: 29
        line 12: 34
        line 13: 39
        line 9: 52
        line 7: 55

  public scala.collection.immutable.Set<java.lang.Object> coursier$cache$CacheChecksum$$checksumLength();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #57                 // Field coursier$cache$CacheChecksum$$checksumLength:Lscala/collection/immutable/Set;
         3: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/cache/CacheChecksum$;
    Signature: #59                          // ()Lscala/collection/immutable/Set<Ljava/lang/Object;>;

  public boolean coursier$cache$CacheChecksum$$ifHexString(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #68                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #72                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokedynamic #89,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        15: invokevirtual #93                 // Method scala/collection/StringOps$.forall$extension:(Ljava/lang/String;Lscala/Function1;)Z
        18: ireturn
      LineNumberTable:
        line 17: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/cache/CacheChecksum$;
            0      19     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private scala.Option<java.math.BigInteger> findChecksum(scala.collection.immutable.Seq<java.lang.String>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: new           #7                  // class coursier/cache/CacheChecksum$$anonfun$findChecksum$1
         4: dup
         5: invokespecial #99                 // Method coursier/cache/CacheChecksum$$anonfun$findChecksum$1."<init>":()V
         8: invokeinterface #105,  2          // InterfaceMethod scala/collection/immutable/Seq.collectFirst:(Lscala/PartialFunction;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/cache/CacheChecksum$;
            0      14     1 elems   Lscala/collection/immutable/Seq;
    Signature: #97                          // (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lscala/Option<Ljava/math/BigInteger;>;
    MethodParameters:
      Name                           Flags
      elems                          final

  private scala.Option<java.math.BigInteger> parseChecksumLine(scala.collection.immutable.Seq<java.lang.String>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #115,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
         7: invokeinterface #119,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        12: checkcast     #101                // class scala/collection/immutable/Seq
        15: invokespecial #121                // Method findChecksum:(Lscala/collection/immutable/Seq;)Lscala/Option;
        18: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/cache/CacheChecksum$;
            0      19     1 lines   Lscala/collection/immutable/Seq;
    Signature: #97                          // (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lscala/Option<Ljava/math/BigInteger;>;
    MethodParameters:
      Name                           Flags
      lines                          final

  private scala.Option<java.math.BigInteger> parseChecksumAlternative(scala.collection.immutable.Seq<java.lang.String>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #129,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
         7: invokeinterface #132,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        12: checkcast     #101                // class scala/collection/immutable/Seq
        15: invokespecial #121                // Method findChecksum:(Lscala/collection/immutable/Seq;)Lscala/Option;
        18: aload_1
        19: invokedynamic #143,  0            // InvokeDynamic #3:apply:(Lscala/collection/immutable/Seq;)Lscala/Function0;
        24: invokevirtual #149                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        27: areturn
      LineNumberTable:
        line 29: 0
        line 30: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/cache/CacheChecksum$;
            0      28     1 lines   Lscala/collection/immutable/Seq;
    Signature: #97                          // (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lscala/Option<Ljava/math/BigInteger;>;
    MethodParameters:
      Name                           Flags
      lines                          final

  public scala.Option<java.math.BigInteger> parseChecksum(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #68                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #72                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #157                // Method scala/collection/StringOps$.linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
        13: invokeinterface #163,  1          // InterfaceMethod scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
        18: astore_2
        19: aload_0
        20: aload_2
        21: invokespecial #165                // Method parseChecksumLine:(Lscala/collection/immutable/Seq;)Lscala/Option;
        24: aload_2
        25: invokedynamic #173,  0            // InvokeDynamic #4:apply:(Lscala/collection/immutable/Vector;)Lscala/Function0;
        30: invokevirtual #149                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        33: areturn
      LineNumberTable:
        line 42: 0
        line 43: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      14     2 lines   Lscala/collection/immutable/Vector;
            0      34     0  this   Lcoursier/cache/CacheChecksum$;
            0      34     1 content   Ljava/lang/String;
    Signature: #152                         // (Ljava/lang/String;)Lscala/Option<Ljava/math/BigInteger;>;
    MethodParameters:
      Name                           Flags
      content                        final

  public scala.Option<java.math.BigInteger> parseRawChecksum(byte[]);
    descriptor: ([B)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_1
         1: arraylength
         2: bipush        16
         4: if_icmpeq     14
         7: aload_1
         8: arraylength
         9: bipush        20
        11: if_icmpne     32
        14: new           #179                // class scala/Some
        17: dup
        18: new           #181                // class java/math/BigInteger
        21: dup
        22: aload_1
        23: invokespecial #184                // Method java/math/BigInteger."<init>":([B)V
        26: invokespecial #187                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        29: goto          77
        32: new           #189                // class java/lang/String
        35: dup
        36: aload_1
        37: getstatic     #195                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
        40: invokespecial #198                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
        43: astore_2
        44: getstatic     #68                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        47: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        50: aload_2
        51: invokevirtual #72                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        54: invokevirtual #157                // Method scala/collection/StringOps$.linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
        57: invokeinterface #163,  1          // InterfaceMethod scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
        62: astore_3
        63: aload_0
        64: aload_3
        65: invokespecial #165                // Method parseChecksumLine:(Lscala/collection/immutable/Seq;)Lscala/Option;
        68: aload_3
        69: invokedynamic #203,  0            // InvokeDynamic #5:apply:(Lscala/collection/immutable/Vector;)Lscala/Function0;
        74: invokevirtual #149                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        77: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 14 /* same */
        frame_type = 17 /* same */
        frame_type = 108 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 47: 0
        line 48: 14
        line 50: 32
        line 51: 44
        line 52: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           44      33     2     s   Ljava/lang/String;
           63      14     3 lines   Lscala/collection/immutable/Vector;
            0      78     0  this   Lcoursier/cache/CacheChecksum$;
            0      78     1 content   [B
    Signature: #177                         // ([B)Lscala/Option<Ljava/math/BigInteger;>;
    MethodParameters:
      Name                           Flags
      content                        final

  public static final boolean $anonfun$ifHexString$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #212                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iload_0
         7: invokevirtual #216                // Method scala/Predef$.charWrapper:(C)C
        10: invokevirtual #219                // Method scala/runtime/RichChar$.isDigit$extension:(C)Z
        13: ifne          28
        16: iload_0
        17: bipush        97
        19: if_icmplt     32
        22: iload_0
        23: bipush        102
        25: if_icmpgt     32
        28: iconst_1
        29: goto          33
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 28 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.String $anonfun$parseChecksumLine$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #225                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
         4: ldc           #227                // String \\s
         6: ldc           #229                // String
         8: invokevirtual #233                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        11: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.collection.mutable.ArraySeq$ofRef $anonfun$parseChecksumAlternative$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #225                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
         7: ldc           #236                // String \\s+
         9: invokevirtual #240                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
        12: checkcast     #242                // class "[Ljava/lang/Object;"
        15: invokevirtual #246                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
        18: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final boolean $anonfun$parseChecksumAlternative$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #29                 // Field MODULE$:Lcoursier/cache/CacheChecksum$;
         3: aload_0
         4: invokevirtual #249                // Method coursier$cache$CacheChecksum$$ifHexString:(Ljava/lang/String;)Z
         7: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final java.lang.String $anonfun$parseChecksumAlternative$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #256                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         6: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         9: aload_0
        10: invokevirtual #225                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
        13: ldc           #236                // String \\s+
        15: invokevirtual #240                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
        18: checkcast     #242                // class "[Ljava/lang/Object;"
        21: invokevirtual #260                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        24: invokedynamic #267,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        29: invokevirtual #271                // Method scala/collection/ArrayOps$.filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        32: checkcast     #242                // class "[Ljava/lang/Object;"
        35: invokevirtual #246                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
        38: invokevirtual #274                // Method scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
        41: areturn
      LineNumberTable:
        line 35: 0
        line 34: 6
        line 32: 9
        line 34: 13
        line 35: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  line   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      line                           final

  public static final scala.Option $anonfun$parseChecksumAlternative$2(scala.collection.immutable.Seq);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #29                 // Field MODULE$:Lcoursier/cache/CacheChecksum$;
         3: aload_0
         4: invokedynamic #279,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
         9: invokeinterface #119,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        14: checkcast     #101                // class scala/collection/immutable/Seq
        17: invokespecial #121                // Method findChecksum:(Lscala/collection/immutable/Seq;)Lscala/Option;
        20: areturn
      LineNumberTable:
        line 30: 0
        line 31: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 lines$1   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      lines$1                        final

  public static final scala.Option $anonfun$parseChecksum$1(scala.collection.immutable.Vector);
    descriptor: (Lscala/collection/immutable/Vector;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #29                 // Field MODULE$:Lcoursier/cache/CacheChecksum$;
         3: aload_0
         4: invokespecial #282                // Method parseChecksumAlternative:(Lscala/collection/immutable/Seq;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 lines$2   Lscala/collection/immutable/Vector;
    MethodParameters:
      Name                           Flags
      lines$2                        final

  public static final scala.Option $anonfun$parseRawChecksum$1(scala.collection.immutable.Vector);
    descriptor: (Lscala/collection/immutable/Vector;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #29                 // Field MODULE$:Lcoursier/cache/CacheChecksum$;
         3: aload_0
         4: invokespecial #282                // Method parseChecksumAlternative:(Lscala/collection/immutable/Seq;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 lines$3   Lscala/collection/immutable/Vector;
    MethodParameters:
      Name                           Flags
      lines$3                        final

  private coursier.cache.CacheChecksum$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #284                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 55: 0
        line 7: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/CacheChecksum$;

  public static final java.lang.Object $anonfun$ifHexString$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #290                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #292                // Method $anonfun$ifHexString$1:(C)Z
         7: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$parseChecksumAlternative$4$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #299                // Method $anonfun$parseChecksumAlternative$4:(Ljava/lang/String;)Z
         4: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #311,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public final #7;                        // class coursier/cache/CacheChecksum$$anonfun$findChecksum$1
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
SourceFile: "CacheChecksum.scala"
BootstrapMethods:
  0: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #74 (Ljava/lang/Object;)Ljava/lang/Object;
      #78 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$ifHexString$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #74 (Ljava/lang/Object;)Ljava/lang/Object;
      #79 1
  1: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #74 (Ljava/lang/Object;)Ljava/lang/Object;
      #112 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumLine$1:(Ljava/lang/String;)Ljava/lang/String;
      #113 (Ljava/lang/String;)Ljava/lang/String;
      #114 5
      #79 1
      #113 (Ljava/lang/String;)Ljava/lang/String;
  2: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #74 (Ljava/lang/Object;)Ljava/lang/Object;
      #127 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$1:(Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
      #128 (Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
      #114 5
      #79 1
      #128 (Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
  3: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #134 ()Ljava/lang/Object;
      #138 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$2:(Lscala/collection/immutable/Seq;)Lscala/Option;
      #140 ()Lscala/Option;
      #114 5
      #79 1
      #140 ()Lscala/Option;
  4: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #134 ()Ljava/lang/Object;
      #170 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
      #140 ()Lscala/Option;
      #114 5
      #79 1
      #140 ()Lscala/Option;
  5: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #134 ()Ljava/lang/Object;
      #202 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseRawChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
      #140 ()Lscala/Option;
      #114 5
      #79 1
      #140 ()Lscala/Option;
  6: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #74 (Ljava/lang/Object;)Ljava/lang/Object;
      #265 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$4$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #266 (Ljava/lang/String;)Ljava/lang/Object;
      #114 5
      #79 1
      #266 (Ljava/lang/String;)Ljava/lang/Object;
  7: #86 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #74 (Ljava/lang/Object;)Ljava/lang/Object;
      #278 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$3:(Ljava/lang/String;)Ljava/lang/String;
      #113 (Ljava/lang/String;)Ljava/lang/String;
      #114 5
      #79 1
      #113 (Ljava/lang/String;)Ljava/lang/String;
  8: #308 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #78 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$ifHexString$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #170 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
      #127 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$1:(Ljava/lang/String;)Lscala/collection/mutable/ArraySeq$ofRef;
      #138 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$2:(Lscala/collection/immutable/Seq;)Lscala/Option;
      #278 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$3:(Ljava/lang/String;)Ljava/lang/String;
      #265 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumAlternative$4$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #112 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseChecksumLine$1:(Ljava/lang/String;)Ljava/lang/String;
      #202 REF_invokeStatic coursier/cache/CacheChecksum$.$anonfun$parseRawChecksum$1:(Lscala/collection/immutable/Vector;)Lscala/Option;
  ScalaInlineInfo: length = 0x5E (unknown attribute)
   01 01 00 12 00 CD 00 CE 01 00 4B 00 49 01 00 A6
   00 A7 01 00 7B 00 7C 01 00 87 00 60 01 00 FA 00
   46 01 00 F7 00 3E 01 01 05 01 06 01 00 6D 00 46
   01 00 C7 00 A7 01 00 19 00 18 01 00 14 00 3A 01
   00 3D 00 3E 01 00 5F 00 60 01 00 96 00 97 01 00
   7A 00 60 01 00 6B 00 60 01 00 AF 00 B0 01
  Scala: length = 0x0 (unknown attribute)

