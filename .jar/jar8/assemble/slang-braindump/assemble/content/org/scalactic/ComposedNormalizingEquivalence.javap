Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/ComposedNormalizingEquivalence.class
  Last modified May 29, 2022; size 7920 bytes
  SHA-256 checksum 752deeec860e2e2224e0ed4476a7ab9932fcc8e5124c870e03d3f69126e3ab08
  Compiled from "ComposedNormalizingEquivalence.scala"
public final class org.scalactic.ComposedNormalizingEquivalence<A extends java.lang.Object> extends java.lang.Object implements org.scalactic.NormalizingEquivalence<A>, scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalactic/ComposedNormalizingEquivalence
  super_class: #5                         // java/lang/Object
  interfaces: 3, fields: 2, methods: 23, attributes: 5
Constant pool:
    #1 = Utf8               org/scalactic/ComposedNormalizingEquivalence
    #2 = Class              #1            // org/scalactic/ComposedNormalizingEquivalence
    #3 = Utf8               <A:Ljava/lang/Object;>Ljava/lang/Object;Lorg/scalactic/NormalizingEquivalence<TA;>;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/scalactic/NormalizingEquivalence
    #7 = Class              #6            // org/scalactic/NormalizingEquivalence
    #8 = Utf8               scala/Product
    #9 = Class              #8            // scala/Product
   #10 = Utf8               java/io/Serializable
   #11 = Class              #10           // java/io/Serializable
   #12 = Utf8               ComposedNormalizingEquivalence.scala
   #13 = Utf8               Lscala/reflect/ScalaSignature;
   #14 = Utf8               bytes
   #15 = Utf8               \u0006\u0005\u0005]e!\u0002\u000e\u001c\u0005ny\u0002\u0002\u0003$\u0001\u0005+\u0007I\u0011I$\t\u0011-\u0003!\u0011#Q\u0001\n!C\u0001\u0002\u0014\u0001\u0003\u0016\u0004%\t!\u0014\u0005\t#\u0002\u0011\t\u0012)A\u0005\u001d\")!\u000b\u0001C\u0001\'\")q\u000b\u0001C\u00011\"91\fAA\u0001\n\u0003a\u0006bB3\u0001#\u0003%\tA\u001a\u0005\bg\u0002\t\n\u0011\"\u0001u\u0011\u001dA\b!!A\u0005BeD\u0011\"!\u0002\u0001\u0003\u0003%\t!a\u0002\t\u0013\u0005=\u0001!!A\u0005\u0002\u0005E\u0001\"CA\f\u0001\u0005\u0005I\u0011IA\r\u0011%\t9\u0003AA\u0001\n\u0003\tI\u0003C\u0005\u00024\u0001\t\t\u0011\"\u0011\u00026!I\u0011\u0011\b\u0001\u0002\u0002\u0013\u0005\u00131\b\u0005\n\u0003{\u0001\u0011\u0011!C!\u0003\u007fA\u0011\"!\u0011\u0001\u0003\u0003%\t%a\u0011\b\u0015\u0005\u001d3$!A\t\u0002m\tIEB\u0005\u001b7\u0005\u0005\t\u0012A\u000e\u0002L!1!\u000b\u0006C\u0001\u0003/B\u0011\"!\u0010\u0015\u0003\u0003%)%a\u0010\t\u0013\u0005eC#!A\u0005\u0002\u0006m\u0003\"CA7)\u0005\u0005I\u0011QA8\u0011%\ti\tFA\u0001\n\u0013\tyI\u0001\u0010D_6\u0004xn]3e\u001d>\u0014X.\u00197ju&tw-R9vSZ\fG.\u001a8dK*\u0011A$H\u0001\ng\u000e\fG.Y2uS\u000eT\u0011AH\u0001\u0004_J<WC\u0001\u0011.\'\u0015\u0001\u0011eJ\u001c;!\t\u0011S%D\u0001$\u0015\u0005!\u0013!B:dC2\f\u0017B\u0001\u0014$\u0005\u0019\te.\u001f*fMB\u0019\u0001&K\u0016\u000e\u0003mI!AK\u000e\u0003-9{\'/\\1mSjLgnZ#rk&4\u0018\r\\3oG\u0016\u0004\"\u0001L\u0017\r\u0001\u0011)a\u0006\u0001b\u0001a\t\t\u0011i\u0001\u0001\u0012\u0005E\"\u0004C\u0001\u00123\u0013\t\u00194EA\u0004O_RD\u0017N\\4\u0011\u0005\t*\u0014B\u0001\u001c$\u0005\r\te.\u001f\t\u0003EaJ!!O\u0012\u0003\u000fA\u0013x\u000eZ;diB\u00111h\u0011\b\u0003y\u0005s!!\u0010!\u000e\u0003yR!aP\u0018\u0002\rq\u0012xn\u001c;?\u0013\u0005!\u0013B\u0001\"$\u0003\u001d\u0001\u0018mY6bO\u0016L!\u0001R#\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005\t\u001b\u0013!H1gi\u0016\u0014hj\u001c:nC2L\'0\u0019;j_:,\u0015/^5wC2,gnY3\u0016\u0003!\u00032\u0001K%,\u0013\tQ5DA\u0006FcVLg/\u00197f]\u000e,\u0017AH1gi\u0016\u0014hj\u001c:nC2L\'0\u0019;j_:,\u0015/^5wC2,gnY3!\u00035qwN]7bY&T\u0018\r^5p]V\ta\nE\u0002)\u001f.J!\u0001U\u000e\u0003\u001b9{\'/\\1mSj\fG/[8o\u00039qwN]7bY&T\u0018\r^5p]\u0002\na\u0001P5oSRtDc\u0001+V-B\u0019\u0001\u0006A\u0016\t\u000b\u0019+\u0001\u0019\u0001%\t\u000b1+\u0001\u0019\u0001(\u0002\u00159|\'/\\1mSj,G\r\u0006\u0002,3\")!L\u0002a\u0001W\u0005\t\u0011-\u0001\u0003d_BLXCA/a)\rq\u0016m\u0019\t\u0004Q\u0001y\u0006C\u0001\u0017a\t\u0015qsA1\u00011\u0011\u001d1u\u0001%AA\u0002\t\u00042\u0001K%`\u0011\u001dau\u0001%AA\u0002\u0011\u00042\u0001K(`\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uIE*\"a\u001a:\u0016\u0003!T#\u0001S5,\u0003)\u0004\"a\u001b9\u000e\u00031T!!\u001c8\u0002\u0013Ut7\r[3dW\u0016$\'BA8$\u0003)\tgN\\8uCRLwN\\\u0005\u0003c2\u0014\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\t\u0015q\u0003B1\u00011\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII*\"!^<\u0016\u0003YT#AT5\u0005\u000b9J!\u0019\u0001\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\u0005Q\bcA>\u0002\u00025\tAP\u0003\u0002~}\u0006!A.\u00198h\u0015\u0005y\u0018\u0001\u00026bm\u0006L1!a\u0001}\u0005\u0019\u0019FO]5oO\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011\u0011\u0002\t\u0004E\u0005-\u0011bAA\u0007G\t\u0019\u0011J\u001c;\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR\u0019A\'a\u0005\t\u0013\u0005UA\"!AA\u0002\u0005%\u0011a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0002\u001cA)\u0011QDA\u0012i5\u0011\u0011q\u0004\u0006\u0004\u0003C\u0019\u0013AC2pY2,7\r^5p]&!\u0011QEA\u0010\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\t\u0005-\u0012\u0011\u0007\t\u0004E\u00055\u0012bAA\u0018G\t9!i\\8mK\u0006t\u0007\u0002CA\u000b\u001d\u0005\u0005\t\u0019\u0001\u001b\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0004u\u0006]\u0002\"CA\u000b\u001f\u0005\u0005\t\u0019AA\u0005\u0003!A\u0017m\u001d5D_\u0012,GCAA\u0005\u0003!!xn\u0015;sS:<G#\u0001>\u0002\r\u0015\fX/\u00197t)\u0011\tY#!\u0012\t\u0011\u0005U!#!AA\u0002Q\nadQ8na>\u001cX\r\u001a(pe6\fG.\u001b>j]\u001e,\u0015/^5wC2,gnY3\u0011\u0005!\"2\u0003\u0002\u000b\"\u0003\u001b\u0002B!a\u0014\u0002V5\u0011\u0011\u0011\u000b\u0006\u0004\u0003\'r\u0018AA5p\u0013\r!\u0015\u0011\u000b\u000b\u0003\u0003\u0013\nQ!\u00199qYf,B!!\u0018\u0002dQ1\u0011qLA3\u0003S\u0002B\u0001\u000b\u0001\u0002bA\u0019A&a\u0019\u0005\u000b9:\"\u0019\u0001\u0019\t\r\u0019;\u0002\u0019AA4!\u0011A\u0013*!\u0019\t\r1;\u0002\u0019AA6!\u0011As*!\u0019\u0002\u000fUt\u0017\r\u001d9msV!\u0011\u0011OAB)\u0011\t\u0019(a\"\u0011\u000b\t\n)(!\u001f\n\u0007\u0005]4E\u0001\u0004PaRLwN\u001c\t\bE\u0005m\u0014qPAC\u0013\r\tih\t\u0002\u0007)V\u0004H.\u001a\u001a\u0011\t!J\u0015\u0011\u0011\t\u0004Y\u0005\rE!\u0002\u0018\u0019\u0005\u0004\u0001\u0004\u0003\u0002\u0015P\u0003\u0003C\u0011\"!#\u0019\u0003\u0003\u0005\r!a#\u0002\u0007a$\u0003\u0007\u0005\u0003)\u0001\u0005\u0005\u0015\u0001D<sSR,\'+\u001a9mC\u000e,GCAAI!\rY\u00181S\u0005\u0004\u0003+c(AB(cU\u0016\u001cG\u000f
   #16 = Utf8               afterNormalizationEquivalence
   #17 = Utf8               Lorg/scalactic/Equivalence;
   #18 = Utf8               Lorg/scalactic/Equivalence<TA;>;
   #19 = Utf8               normalization
   #20 = Utf8               Lorg/scalactic/Normalization;
   #21 = Utf8               Lorg/scalactic/Normalization<TA;>;
   #22 = Utf8               unapply
   #23 = Utf8               (Lorg/scalactic/ComposedNormalizingEquivalence;)Lscala/Option;
   #24 = Utf8               <A:Ljava/lang/Object;>(Lorg/scalactic/ComposedNormalizingEquivalence<TA;>;)Lscala/Option<Lscala/Tuple2<Lorg/scalactic/Equivalence<TA;>;Lorg/scalactic/Normalization<TA;>;>;>;
   #25 = Utf8               x$0
   #26 = Utf8               org/scalactic/ComposedNormalizingEquivalence$
   #27 = Class              #26           // org/scalactic/ComposedNormalizingEquivalence$
   #28 = Utf8               MODULE$
   #29 = Utf8               Lorg/scalactic/ComposedNormalizingEquivalence$;
   #30 = NameAndType        #28:#29       // MODULE$:Lorg/scalactic/ComposedNormalizingEquivalence$;
   #31 = Fieldref           #27.#30       // org/scalactic/ComposedNormalizingEquivalence$.MODULE$:Lorg/scalactic/ComposedNormalizingEquivalence$;
   #32 = NameAndType        #22:#23       // unapply:(Lorg/scalactic/ComposedNormalizingEquivalence;)Lscala/Option;
   #33 = Methodref          #27.#32       // org/scalactic/ComposedNormalizingEquivalence$.unapply:(Lorg/scalactic/ComposedNormalizingEquivalence;)Lscala/Option;
   #34 = Utf8               Lorg/scalactic/ComposedNormalizingEquivalence;
   #35 = Utf8               apply
   #36 = Utf8               (Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/ComposedNormalizingEquivalence;
   #37 = Utf8               <A:Ljava/lang/Object;>(Lorg/scalactic/Equivalence<TA;>;Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/ComposedNormalizingEquivalence<TA;>;
   #38 = NameAndType        #35:#36       // apply:(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/ComposedNormalizingEquivalence;
   #39 = Methodref          #27.#38       // org/scalactic/ComposedNormalizingEquivalence$.apply:(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/ComposedNormalizingEquivalence;
   #40 = Utf8               productElementNames
   #41 = Utf8               ()Lscala/collection/Iterator;
   #42 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #43 = Utf8               productElementNames$
   #44 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #45 = NameAndType        #43:#44       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #46 = InterfaceMethodref #9.#45        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #47 = Utf8               this
   #48 = Utf8               areEquivalent
   #49 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #50 = Utf8               (TA;TA;)Z
   #51 = Utf8               a
   #52 = Utf8               b
   #53 = Utf8               areEquivalent$
   #54 = Utf8               (Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
   #55 = NameAndType        #53:#54       // areEquivalent$:(Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
   #56 = InterfaceMethodref #7.#55        // org/scalactic/NormalizingEquivalence.areEquivalent$:(Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
   #57 = Utf8               Ljava/lang/Object;
   #58 = Utf8               and
   #59 = Utf8               (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
   #60 = Utf8               (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
   #61 = Utf8               other
   #62 = Utf8               and$
   #63 = Utf8               (Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
   #64 = NameAndType        #62:#63       // and$:(Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
   #65 = InterfaceMethodref #7.#64        // org/scalactic/NormalizingEquivalence.and$:(Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
   #66 = Utf8               toNormalization
   #67 = Utf8               ()Lorg/scalactic/Normalization;
   #68 = Utf8               ()Lorg/scalactic/Normalization<TA;>;
   #69 = Utf8               toNormalization$
   #70 = Utf8               (Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
   #71 = NameAndType        #69:#70       // toNormalization$:(Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
   #72 = InterfaceMethodref #7.#71        // org/scalactic/NormalizingEquivalence.toNormalization$:(Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
   #73 = Utf8               org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq
   #74 = Utf8               (Lorg/scalactic/Equivalence;)V
   #75 = Utf8               (Lorg/scalactic/Equivalence<TA;>;)V
   #76 = Utf8               x$1
   #77 = Utf8               ()Lorg/scalactic/Equivalence;
   #78 = Utf8               ()Lorg/scalactic/Equivalence<TA;>;
   #79 = NameAndType        #16:#17       // afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
   #80 = Fieldref           #2.#79        // org/scalactic/ComposedNormalizingEquivalence.afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
   #81 = NameAndType        #19:#20       // normalization:Lorg/scalactic/Normalization;
   #82 = Fieldref           #2.#81        // org/scalactic/ComposedNormalizingEquivalence.normalization:Lorg/scalactic/Normalization;
   #83 = Utf8               normalized
   #84 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #85 = Utf8               (TA;)TA;
   #86 = NameAndType        #19:#67       // normalization:()Lorg/scalactic/Normalization;
   #87 = Methodref          #2.#86        // org/scalactic/ComposedNormalizingEquivalence.normalization:()Lorg/scalactic/Normalization;
   #88 = Utf8               org/scalactic/Normalization
   #89 = Class              #88           // org/scalactic/Normalization
   #90 = NameAndType        #83:#84       // normalized:(Ljava/lang/Object;)Ljava/lang/Object;
   #91 = InterfaceMethodref #89.#90       // org/scalactic/Normalization.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
   #92 = Utf8               copy
   #93 = Utf8               <init>
   #94 = Utf8               (Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
   #95 = NameAndType        #93:#94       // "<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
   #96 = Methodref          #2.#95        // org/scalactic/ComposedNormalizingEquivalence."<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
   #97 = Utf8               copy$default$1
   #98 = Utf8               <A:Ljava/lang/Object;>()Lorg/scalactic/Equivalence<TA;>;
   #99 = NameAndType        #16:#77       // afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
  #100 = Methodref          #2.#99        // org/scalactic/ComposedNormalizingEquivalence.afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
  #101 = Utf8               copy$default$2
  #102 = Utf8               <A:Ljava/lang/Object;>()Lorg/scalactic/Normalization<TA;>;
  #103 = Utf8               productPrefix
  #104 = Utf8               ()Ljava/lang/String;
  #105 = Utf8               ComposedNormalizingEquivalence
  #106 = String             #105          // ComposedNormalizingEquivalence
  #107 = Utf8               productArity
  #108 = Utf8               ()I
  #109 = Utf8               productElement
  #110 = Utf8               (I)Ljava/lang/Object;
  #111 = Utf8               scala/runtime/Statics
  #112 = Class              #111          // scala/runtime/Statics
  #113 = Utf8               ioobe
  #114 = NameAndType        #113:#110     // ioobe:(I)Ljava/lang/Object;
  #115 = Methodref          #112.#114     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #116 = Utf8               I
  #117 = Utf8               productIterator
  #118 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #119 = Utf8               scala/runtime/ScalaRunTime$
  #120 = Class              #119          // scala/runtime/ScalaRunTime$
  #121 = Utf8               Lscala/runtime/ScalaRunTime$;
  #122 = NameAndType        #28:#121      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #123 = Fieldref           #120.#122     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #124 = Utf8               typedProductIterator
  #125 = NameAndType        #124:#44      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #126 = Methodref          #120.#125     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #127 = Utf8               canEqual
  #128 = Utf8               (Ljava/lang/Object;)Z
  #129 = Utf8               productElementName
  #130 = Utf8               (I)Ljava/lang/String;
  #131 = String             #16           // afterNormalizationEquivalence
  #132 = String             #19           // normalization
  #133 = Utf8               java/lang/String
  #134 = Class              #133          // java/lang/String
  #135 = Utf8               hashCode
  #136 = Utf8               _hashCode
  #137 = Utf8               (Lscala/Product;)I
  #138 = NameAndType        #136:#137     // _hashCode:(Lscala/Product;)I
  #139 = Methodref          #120.#138     // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
  #140 = Utf8               toString
  #141 = Utf8               _toString
  #142 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #143 = NameAndType        #141:#142     // _toString:(Lscala/Product;)Ljava/lang/String;
  #144 = Methodref          #120.#143     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #145 = Utf8               equals
  #146 = NameAndType        #145:#128     // equals:(Ljava/lang/Object;)Z
  #147 = Methodref          #5.#146       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #148 = Utf8               org/scalactic/Equivalence
  #149 = Class              #148          // org/scalactic/Equivalence
  #150 = Utf8               (Lorg/scalactic/Equivalence<TA;>;Lorg/scalactic/Normalization<TA;>;)V
  #151 = Utf8               ()V
  #152 = NameAndType        #93:#151      // "<init>":()V
  #153 = Methodref          #5.#152       // java/lang/Object."<init>":()V
  #154 = Utf8               $init$
  #155 = Utf8               (Lorg/scalactic/NormalizingEquivalence;)V
  #156 = NameAndType        #154:#155     // $init$:(Lorg/scalactic/NormalizingEquivalence;)V
  #157 = InterfaceMethodref #7.#156       // org/scalactic/NormalizingEquivalence.$init$:(Lorg/scalactic/NormalizingEquivalence;)V
  #158 = Utf8               (Lscala/Product;)V
  #159 = NameAndType        #154:#158     // $init$:(Lscala/Product;)V
  #160 = InterfaceMethodref #9.#159       // scala/Product.$init$:(Lscala/Product;)V
  #161 = Utf8               Signature
  #162 = Utf8               Code
  #163 = Utf8               LocalVariableTable
  #164 = Utf8               MethodParameters
  #165 = Utf8               LineNumberTable
  #166 = Utf8               StackMapTable
  #167 = Utf8               SourceFile
  #168 = Utf8               RuntimeVisibleAnnotations
  #169 = Utf8               ScalaInlineInfo
  #170 = Utf8               ScalaSig
{
  private final org.scalactic.Equivalence<A> afterNormalizationEquivalence;
    descriptor: Lorg/scalactic/Equivalence;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lorg/scalactic/Equivalence<TA;>;

  private final org.scalactic.Normalization<A> normalization;
    descriptor: Lorg/scalactic/Normalization;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #21                          // Lorg/scalactic/Normalization<TA;>;

  public static <A extends java.lang.Object> scala.Option<scala.Tuple2<org.scalactic.Equivalence<A>, org.scalactic.Normalization<A>>> unapply(org.scalactic.ComposedNormalizingEquivalence<A>);
    descriptor: (Lorg/scalactic/ComposedNormalizingEquivalence;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #31                 // Field org/scalactic/ComposedNormalizingEquivalence$.MODULE$:Lorg/scalactic/ComposedNormalizingEquivalence$;
         3: aload_0
         4: invokevirtual #33                 // Method org/scalactic/ComposedNormalizingEquivalence$.unapply:(Lorg/scalactic/ComposedNormalizingEquivalence;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #24                          // <A:Ljava/lang/Object;>(Lorg/scalactic/ComposedNormalizingEquivalence<TA;>;)Lscala/Option<Lscala/Tuple2<Lorg/scalactic/Equivalence<TA;>;Lorg/scalactic/Normalization<TA;>;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static <A extends java.lang.Object> org.scalactic.ComposedNormalizingEquivalence<A> apply(org.scalactic.Equivalence<A>, org.scalactic.Normalization<A>);
    descriptor: (Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/ComposedNormalizingEquivalence;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #31                 // Field org/scalactic/ComposedNormalizingEquivalence$.MODULE$:Lorg/scalactic/ComposedNormalizingEquivalence$;
         3: aload_0
         4: aload_1
         5: invokevirtual #39                 // Method org/scalactic/ComposedNormalizingEquivalence$.apply:(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/ComposedNormalizingEquivalence;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 afterNormalizationEquivalence   Lorg/scalactic/Equivalence;
            0       9     1 normalization   Lorg/scalactic/Normalization;
    Signature: #37                          // <A:Ljava/lang/Object;>(Lorg/scalactic/Equivalence<TA;>;Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/ComposedNormalizingEquivalence<TA;>;
    MethodParameters:
      Name                           Flags
      afterNormalizationEquivalence  final
      normalization                  final

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #42                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public final boolean areEquivalent(A, A);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #56                 // InterfaceMethod org/scalactic/NormalizingEquivalence.areEquivalent$:(Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0       7     1     a   Ljava/lang/Object;
            0       7     2     b   Ljava/lang/Object;
    Signature: #50                          // (TA;TA;)Z
    MethodParameters:
      Name                           Flags
      a                              final
      b                              final

  public final org.scalactic.NormalizingEquivalence<A> and(org.scalactic.Normalization<A>);
    descriptor: (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #65                 // InterfaceMethod org/scalactic/NormalizingEquivalence.and$:(Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
         5: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0       6     1 other   Lorg/scalactic/Normalization;
    Signature: #60                          // (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public final org.scalactic.Normalization<A> toNormalization();
    descriptor: ()Lorg/scalactic/Normalization;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod org/scalactic/NormalizingEquivalence.toNormalization$:(Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #68                          // ()Lorg/scalactic/Normalization<TA;>;

  public void org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq(org.scalactic.Equivalence<A>);
    descriptor: (Lorg/scalactic/Equivalence;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0       1     1   x$1   Lorg/scalactic/Equivalence;
    Signature: #75                          // (Lorg/scalactic/Equivalence<TA;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalactic.Equivalence<A> afterNormalizationEquivalence();
    descriptor: ()Lorg/scalactic/Equivalence;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #80                 // Field afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
         4: areturn
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #78                          // ()Lorg/scalactic/Equivalence<TA;>;

  public org.scalactic.Normalization<A> normalization();
    descriptor: ()Lorg/scalactic/Normalization;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #82                 // Field normalization:Lorg/scalactic/Normalization;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #68                          // ()Lorg/scalactic/Normalization<TA;>;

  public A normalized(A);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #87                 // Method normalization:()Lorg/scalactic/Normalization;
         4: aload_1
         5: invokeinterface #91,  2           // InterfaceMethod org/scalactic/Normalization.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0      11     1     a   Ljava/lang/Object;
    Signature: #85                          // (TA;)TA;
    MethodParameters:
      Name                           Flags
      a                              final

  public <A extends java.lang.Object> org.scalactic.ComposedNormalizingEquivalence<A> copy(org.scalactic.Equivalence<A>, org.scalactic.Normalization<A>);
    descriptor: (Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/ComposedNormalizingEquivalence;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/scalactic/ComposedNormalizingEquivalence
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #96                 // Method "<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
         9: areturn
      LineNumberTable:
        line 18: 0
        line 19: 4
        line 20: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0      10     1 afterNormalizationEquivalence   Lorg/scalactic/Equivalence;
            0      10     2 normalization   Lorg/scalactic/Normalization;
    Signature: #37                          // <A:Ljava/lang/Object;>(Lorg/scalactic/Equivalence<TA;>;Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/ComposedNormalizingEquivalence<TA;>;
    MethodParameters:
      Name                           Flags
      afterNormalizationEquivalence  final
      normalization                  final

  public <A extends java.lang.Object> org.scalactic.Equivalence<A> copy$default$1();
    descriptor: ()Lorg/scalactic/Equivalence;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
         4: areturn
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #98                          // <A:Ljava/lang/Object;>()Lorg/scalactic/Equivalence<TA;>;

  public <A extends java.lang.Object> org.scalactic.Normalization<A> copy$default$2();
    descriptor: ()Lorg/scalactic/Normalization;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #87                 // Method normalization:()Lorg/scalactic/Normalization;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #102                         // <A:Ljava/lang/Object;>()Lorg/scalactic/Normalization<TA;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #106                // String ComposedNormalizingEquivalence
         2: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 38
            }
        24: aload_0
        25: invokevirtual #100                // Method afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
        28: goto          45
        31: aload_0
        32: invokevirtual #87                 // Method normalization:()Lorg/scalactic/Normalization;
        35: goto          45
        38: iload_1
        39: invokestatic  #115                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        42: goto          45
        45: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0      46     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #126                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
    Signature: #118                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalactic/ComposedNormalizingEquivalence
         4: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #131                // String afterNormalizationEquivalence
        26: goto          44
        29: ldc           #132                // String normalization
        31: goto          44
        34: iload_1
        35: invokestatic  #115                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        38: checkcast     #134                // class java/lang/String
        41: goto          44
        44: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0      45     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #139                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #144                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     109
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalactic/ComposedNormalizingEquivalence
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          113
        31: aload_1
        32: checkcast     #2                  // class org/scalactic/ComposedNormalizingEquivalence
        35: astore        4
        37: aload_0
        38: invokevirtual #100                // Method afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
        41: aload         4
        43: invokevirtual #100                // Method afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
        46: astore        5
        48: dup
        49: ifnonnull     61
        52: pop
        53: aload         5
        55: ifnull        69
        58: goto          105
        61: aload         5
        63: invokevirtual #147                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        66: ifeq          105
        69: aload_0
        70: invokevirtual #87                 // Method normalization:()Lorg/scalactic/Normalization;
        73: aload         4
        75: invokevirtual #87                 // Method normalization:()Lorg/scalactic/Normalization;
        78: astore        6
        80: dup
        81: ifnonnull     93
        84: pop
        85: aload         6
        87: ifnull        101
        90: goto          105
        93: aload         6
        95: invokevirtual #147                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        98: ifeq          105
       101: iconst_1
       102: goto          106
       105: iconst_0
       106: ifeq          113
       109: iconst_1
       110: goto          114
       113: iconst_0
       114: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalactic/ComposedNormalizingEquivalence, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class org/scalactic/ComposedNormalizingEquivalence, class java/lang/Object, int, class java/lang/Object, class org/scalactic/ComposedNormalizingEquivalence, class org/scalactic/Equivalence ]
          stack = [ class org/scalactic/Equivalence ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/scalactic/ComposedNormalizingEquivalence, class java/lang/Object, int, class java/lang/Object, class org/scalactic/ComposedNormalizingEquivalence, class org/scalactic/Equivalence, class org/scalactic/Normalization ]
          stack = [ class org/scalactic/Normalization ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalactic/ComposedNormalizingEquivalence, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalactic/ComposedNormalizingEquivalence, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     115     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0     115     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalactic.ComposedNormalizingEquivalence(org.scalactic.Equivalence<A>, org.scalactic.Normalization<A>);
    descriptor: (Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #80                 // Field afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
         5: aload_0
         6: aload_2
         7: putfield      #82                 // Field normalization:Lorg/scalactic/Normalization;
        10: aload_0
        11: invokespecial #153                // Method java/lang/Object."<init>":()V
        14: aload_0
        15: invokestatic  #157                // InterfaceMethod org/scalactic/NormalizingEquivalence.$init$:(Lorg/scalactic/NormalizingEquivalence;)V
        18: aload_0
        19: invokestatic  #160                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        22: return
      LineNumberTable:
        line 19: 0
        line 20: 5
        line 21: 10
        line 18: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/scalactic/ComposedNormalizingEquivalence;
            0      23     1 afterNormalizationEquivalence   Lorg/scalactic/Equivalence;
            0      23     2 normalization   Lorg/scalactic/Normalization;
    Signature: #150                         // (Lorg/scalactic/Equivalence<TA;>;Lorg/scalactic/Normalization<TA;>;)V
    MethodParameters:
      Name                           Flags
      afterNormalizationEquivalence  final
      normalization                  final
}
Signature: #3                           // <A:Ljava/lang/Object;>Ljava/lang/Object;Lorg/scalactic/NormalizingEquivalence<TA;>;Lscala/Product;Ljava/io/Serializable;
SourceFile: "ComposedNormalizingEquivalence.scala"
RuntimeVisibleAnnotations:
  0: #13(#14=s#15)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005]e!\u0002\u000e\u001c\u0005ny\u0002\u0002\u0003$\u0001\u0005+\u0007I\u0011I$\t\u0011-\u0003!\u0011#Q\u0001\n!C\u0001\u0002\u0014\u0001\u0003\u0016\u0004%\t!\u0014\u0005\t#\u0002\u0011\t\u0012)A\u0005\u001d\")!\u000b\u0001C\u0001\'\")q\u000b\u0001C\u00011\"91\fAA\u0001\n\u0003a\u0006bB3\u0001#\u0003%\tA\u001a\u0005\bg\u0002\t\n\u0011\"\u0001u\u0011\u001dA\b!!A\u0005BeD\u0011\"!\u0002\u0001\u0003\u0003%\t!a\u0002\t\u0013\u0005=\u0001!!A\u0005\u0002\u0005E\u0001\"CA\f\u0001\u0005\u0005I\u0011IA\r\u0011%\t9\u0003AA\u0001\n\u0003\tI\u0003C\u0005\u00024\u0001\t\t\u0011\"\u0011\u00026!I\u0011\u0011\b\u0001\u0002\u0002\u0013\u0005\u00131\b\u0005\n\u0003{\u0001\u0011\u0011!C!\u0003\u007fA\u0011\"!\u0011\u0001\u0003\u0003%\t%a\u0011\b\u0015\u0005\u001d3$!A\t\u0002m\tIEB\u0005\u001b7\u0005\u0005\t\u0012A\u000e\u0002L!1!\u000b\u0006C\u0001\u0003/B\u0011\"!\u0010\u0015\u0003\u0003%)%a\u0010\t\u0013\u0005eC#!A\u0005\u0002\u0006m\u0003\"CA7)\u0005\u0005I\u0011QA8\u0011%\ti\tFA\u0001\n\u0013\tyI\u0001\u0010D_6\u0004xn]3e\u001d>\u0014X.\u00197ju&tw-R9vSZ\fG.\u001a8dK*\u0011A$H\u0001\ng\u000e\fG.Y2uS\u000eT\u0011AH\u0001\u0004_J<WC\u0001\u0011.\'\u0015\u0001\u0011eJ\u001c;!\t\u0011S%D\u0001$\u0015\u0005!\u0013!B:dC2\f\u0017B\u0001\u0014$\u0005\u0019\te.\u001f*fMB\u0019\u0001&K\u0016\u000e\u0003mI!AK\u000e\u0003-9{\'/\\1mSjLgnZ#rk&4\u0018\r\\3oG\u0016\u0004\"\u0001L\u0017\r\u0001\u0011)a\u0006\u0001b\u0001a\t\t\u0011i\u0001\u0001\u0012\u0005E\"\u0004C\u0001\u00123\u0013\t\u00194EA\u0004O_RD\u0017N\\4\u0011\u0005\t*\u0014B\u0001\u001c$\u0005\r\te.\u001f\t\u0003EaJ!!O\u0012\u0003\u000fA\u0013x\u000eZ;diB\u00111h\u0011\b\u0003y\u0005s!!\u0010!\u000e\u0003yR!aP\u0018\u0002\rq\u0012xn\u001c;?\u0013\u0005!\u0013B\u0001\"$\u0003\u001d\u0001\u0018mY6bO\u0016L!\u0001R#\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005\t\u001b\u0013!H1gi\u0016\u0014hj\u001c:nC2L\'0\u0019;j_:,\u0015/^5wC2,gnY3\u0016\u0003!\u00032\u0001K%,\u0013\tQ5DA\u0006FcVLg/\u00197f]\u000e,\u0017AH1gi\u0016\u0014hj\u001c:nC2L\'0\u0019;j_:,\u0015/^5wC2,gnY3!\u00035qwN]7bY&T\u0018\r^5p]V\ta\nE\u0002)\u001f.J!\u0001U\u000e\u0003\u001b9{\'/\\1mSj\fG/[8o\u00039qwN]7bY&T\u0018\r^5p]\u0002\na\u0001P5oSRtDc\u0001+V-B\u0019\u0001\u0006A\u0016\t\u000b\u0019+\u0001\u0019\u0001%\t\u000b1+\u0001\u0019\u0001(\u0002\u00159|\'/\\1mSj,G\r\u0006\u0002,3\")!L\u0002a\u0001W\u0005\t\u0011-\u0001\u0003d_BLXCA/a)\rq\u0016m\u0019\t\u0004Q\u0001y\u0006C\u0001\u0017a\t\u0015qsA1\u00011\u0011\u001d1u\u0001%AA\u0002\t\u00042\u0001K%`\u0011\u001dau\u0001%AA\u0002\u0011\u00042\u0001K(`\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uIE*\"a\u001a:\u0016\u0003!T#\u0001S5,\u0003)\u0004\"a\u001b9\u000e\u00031T!!\u001c8\u0002\u0013Ut7\r[3dW\u0016$\'BA8$\u0003)\tgN\\8uCRLwN\\\u0005\u0003c2\u0014\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\t\u0015q\u0003B1\u00011\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII*\"!^<\u0016\u0003YT#AT5\u0005\u000b9J!\u0019\u0001\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\u0005Q\bcA>\u0002\u00025\tAP\u0003\u0002~}\u0006!A.\u00198h\u0015\u0005y\u0018\u0001\u00026bm\u0006L1!a\u0001}\u0005\u0019\u0019FO]5oO\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011\u0011\u0002\t\u0004E\u0005-\u0011bAA\u0007G\t\u0019\u0011J\u001c;\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR\u0019A\'a\u0005\t\u0013\u0005UA\"!AA\u0002\u0005%\u0011a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0002\u001cA)\u0011QDA\u0012i5\u0011\u0011q\u0004\u0006\u0004\u0003C\u0019\u0013AC2pY2,7\r^5p]&!\u0011QEA\u0010\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\t\u0005-\u0012\u0011\u0007\t\u0004E\u00055\u0012bAA\u0018G\t9!i\\8mK\u0006t\u0007\u0002CA\u000b\u001d\u0005\u0005\t\u0019\u0001\u001b\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0004u\u0006]\u0002\"CA\u000b\u001f\u0005\u0005\t\u0019AA\u0005\u0003!A\u0017m\u001d5D_\u0012,GCAA\u0005\u0003!!xn\u0015;sS:<G#\u0001>\u0002\r\u0015\fX/\u00197t)\u0011\tY#!\u0012\t\u0011\u0005U!#!AA\u0002Q\nadQ8na>\u001cX\r\u001a(pe6\fG.\u001b>j]\u001e,\u0015/^5wC2,gnY3\u0011\u0005!\"2\u0003\u0002\u000b\"\u0003\u001b\u0002B!a\u0014\u0002V5\u0011\u0011\u0011\u000b\u0006\u0004\u0003\'r\u0018AA5p\u0013\r!\u0015\u0011\u000b\u000b\u0003\u0003\u0013\nQ!\u00199qYf,B!!\u0018\u0002dQ1\u0011qLA3\u0003S\u0002B\u0001\u000b\u0001\u0002bA\u0019A&a\u0019\u0005\u000b9:\"\u0019\u0001\u0019\t\r\u0019;\u0002\u0019AA4!\u0011A\u0013*!\u0019\t\r1;\u0002\u0019AA6!\u0011As*!\u0019\u0002\u000fUt\u0017\r\u001d9msV!\u0011\u0011OAB)\u0011\t\u0019(a\"\u0011\u000b\t\n)(!\u001f\n\u0007\u0005]4E\u0001\u0004PaRLwN\u001c\t\bE\u0005m\u0014qPAC\u0013\r\tih\t\u0002\u0007)V\u0004H.\u001a\u001a\u0011\t!J\u0015\u0011\u0011\t\u0004Y\u0005\rE!\u0002\u0018\u0019\u0005\u0004\u0001\u0004\u0003\u0002\u0015P\u0003\u0003C\u0011\"!#\u0019\u0003\u0003\u0005\r!a#\u0002\u0007a$\u0003\u0007\u0005\u0003)\u0001\u0005\u0005\u0015\u0001D<sSR,\'+\u001a9mC\u000e,GCAAI!\rY\u00181S\u0005\u0004\u0003+c(AB(cU\u0016\u001cG\u000f"
    )
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 01 00 15 00 5D 00 5E 01 00 10 00 4D 01 00 3A
   00 3B 01 00 30 00 31 01 00 7F 00 80 01 00 5C 00
   24 01 00 61 00 4D 01 00 65 00 43 01 00 91 00 80
   01 00 87 00 6C 01 00 13 00 43 01 00 53 00 54 01
   00 49 00 4A 01 00 6B 00 6C 01 00 6D 00 6E 01 00
   81 00 82 01 00 28 00 29 01 00 75 00 29 01 00 67
   00 68 01 00 42 00 43 01 00 8C 00 68 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
