Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.class
  Last modified May 29, 2022; size 11810 bytes
  SHA-256 checksum 7aeffe4f3278e9bf8c5bb38fdaff54d6d0d6971c37b30d17ed66dc71f07cb57c
  Compiled from "RefreshLogger.scala"
public class coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable implements java.lang.Runnable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 9, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable
    #2 = Class              #1            // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/lang/Runnable
    #6 = Class              #5            // java/lang/Runnable
    #7 = Utf8               RefreshLogger.scala
    #8 = Utf8               coursier/cache/loggers/RefreshLogger
    #9 = Class              #8            // coursier/cache/loggers/RefreshLogger
   #10 = Utf8               UpdateDisplayRunnable
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/Predef$ArrowAssoc$
   #17 = Class              #16           // scala/Predef$ArrowAssoc$
   #18 = Utf8               scala/Predef
   #19 = Class              #18           // scala/Predef
   #20 = Utf8
   #21 = Utf8               scala/math/Numeric$DoubleIsFractional$
   #22 = Class              #21           // scala/math/Numeric$DoubleIsFractional$
   #23 = Utf8               scala/math/Numeric
   #24 = Class              #23           // scala/math/Numeric
   #25 = Utf8               scala/math/Ordering$DeprecatedDoubleOrdering$
   #26 = Class              #25           // scala/math/Ordering$DeprecatedDoubleOrdering$
   #27 = Utf8               scala/math/Ordering
   #28 = Class              #27           // scala/math/Ordering
   #29 = Utf8               scala/math/Ordering$String$
   #30 = Class              #29           // scala/math/Ordering$String$
   #31 = Utf8               out
   #32 = Utf8               Ljava/io/Writer;
   #33 = Utf8               display
   #34 = Utf8               Lcoursier/cache/loggers/RefreshDisplay;
   #35 = Utf8               messages
   #36 = Utf8               Ljava/util/concurrent/ConcurrentLinkedQueue;
   #37 = Utf8               Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/String;>;
   #38 = Utf8               printedAnything0
   #39 = Utf8               Z
   #40 = Utf8               stopped
   #41 = Utf8               needsUpdate
   #42 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;
   #43 = Utf8               downloads
   #44 = Utf8               Lscala/collection/mutable/ArrayBuffer;
   #45 = Utf8               Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;
   #46 = Utf8               doneQueue
   #47 = Utf8               Lscala/collection/mutable/ArrayBuffer<Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;>;
   #48 = Utf8               infos
   #49 = Utf8               Ljava/util/concurrent/ConcurrentHashMap;
   #50 = Utf8               Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;
   #51 = Utf8               ()Lcoursier/cache/loggers/RefreshDisplay;
   #52 = NameAndType        #33:#34       // display:Lcoursier/cache/loggers/RefreshDisplay;
   #53 = Fieldref           #2.#52        // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.display:Lcoursier/cache/loggers/RefreshDisplay;
   #54 = Utf8               this
   #55 = Utf8               Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
   #56 = Utf8               ()Ljava/util/concurrent/ConcurrentLinkedQueue;
   #57 = Utf8               ()Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/String;>;
   #58 = NameAndType        #35:#36       // messages:Ljava/util/concurrent/ConcurrentLinkedQueue;
   #59 = Fieldref           #2.#58        // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.messages:Ljava/util/concurrent/ConcurrentLinkedQueue;
   #60 = Utf8               messages_$eq
   #61 = Utf8               (Ljava/util/concurrent/ConcurrentLinkedQueue;)V
   #62 = Utf8               (Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/String;>;)V
   #63 = Utf8               x$1
   #64 = Utf8               log
   #65 = Utf8               (Ljava/lang/String;)V
   #66 = Utf8               message
   #67 = NameAndType        #35:#56       // messages:()Ljava/util/concurrent/ConcurrentLinkedQueue;
   #68 = Methodref          #2.#67        // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.messages:()Ljava/util/concurrent/ConcurrentLinkedQueue;
   #69 = Utf8               java/util/concurrent/ConcurrentLinkedQueue
   #70 = Class              #69           // java/util/concurrent/ConcurrentLinkedQueue
   #71 = Utf8               add
   #72 = Utf8               (Ljava/lang/Object;)Z
   #73 = NameAndType        #71:#72       // add:(Ljava/lang/Object;)Z
   #74 = Methodref          #70.#73       // java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
   #75 = Utf8               Ljava/lang/String;
   #76 = Utf8               flushMessages
   #77 = Utf8               ()V
   #78 = Utf8               java/lang/String
   #79 = Class              #78           // java/lang/String
   #80 = Utf8               poll
   #81 = Utf8               ()Ljava/lang/Object;
   #82 = NameAndType        #80:#81       // poll:()Ljava/lang/Object;
   #83 = Methodref          #70.#82       // java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
   #84 = NameAndType        #31:#32       // out:Ljava/io/Writer;
   #85 = Fieldref           #2.#84        // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.out:Ljava/io/Writer;
   #86 = Utf8               java/io/Writer
   #87 = Class              #86           // java/io/Writer
   #88 = Utf8               write
   #89 = NameAndType        #88:#65       // write:(Ljava/lang/String;)V
   #90 = Methodref          #87.#89       // java/io/Writer.write:(Ljava/lang/String;)V
   #91 = Utf8               java/lang/System
   #92 = Class              #91           // java/lang/System
   #93 = Utf8               lineSeparator
   #94 = Utf8               ()Ljava/lang/String;
   #95 = NameAndType        #93:#94       // lineSeparator:()Ljava/lang/String;
   #96 = Methodref          #92.#95       // java/lang/System.lineSeparator:()Ljava/lang/String;
   #97 = Utf8               flush
   #98 = NameAndType        #97:#77       // flush:()V
   #99 = Methodref          #87.#98       // java/io/Writer.flush:()V
  #100 = Utf8               printedAnything
  #101 = Utf8               msg
  #102 = Utf8               ()Z
  #103 = NameAndType        #38:#39       // printedAnything0:Z
  #104 = Fieldref           #2.#103       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.printedAnything0:Z
  #105 = Utf8               printedAnything0_$eq
  #106 = Utf8               (Z)V
  #107 = NameAndType        #40:#39       // stopped:Z
  #108 = Fieldref           #2.#107       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.stopped:Z
  #109 = Utf8               stopped_$eq
  #110 = NameAndType        #38:#102      // printedAnything0:()Z
  #111 = Methodref          #2.#110       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.printedAnything0:()Z
  #112 = Utf8               ()Ljava/util/concurrent/atomic/AtomicBoolean;
  #113 = NameAndType        #41:#42       // needsUpdate:Ljava/util/concurrent/atomic/AtomicBoolean;
  #114 = Fieldref           #2.#113       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.needsUpdate:Ljava/util/concurrent/atomic/AtomicBoolean;
  #115 = Utf8               update
  #116 = NameAndType        #41:#112      // needsUpdate:()Ljava/util/concurrent/atomic/AtomicBoolean;
  #117 = Methodref          #2.#116       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.needsUpdate:()Ljava/util/concurrent/atomic/AtomicBoolean;
  #118 = Utf8               java/util/concurrent/atomic/AtomicBoolean
  #119 = Class              #118          // java/util/concurrent/atomic/AtomicBoolean
  #120 = Utf8               set
  #121 = NameAndType        #120:#106     // set:(Z)V
  #122 = Methodref          #119.#121     // java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
  #123 = Utf8               ()Lscala/collection/mutable/ArrayBuffer;
  #124 = Utf8               ()Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;
  #125 = NameAndType        #43:#44       // downloads:Lscala/collection/mutable/ArrayBuffer;
  #126 = Fieldref           #2.#125       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.downloads:Lscala/collection/mutable/ArrayBuffer;
  #127 = Utf8               ()Lscala/collection/mutable/ArrayBuffer<Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;>;
  #128 = NameAndType        #46:#44       // doneQueue:Lscala/collection/mutable/ArrayBuffer;
  #129 = Fieldref           #2.#128       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.doneQueue:Lscala/collection/mutable/ArrayBuffer;
  #130 = Utf8               ()Ljava/util/concurrent/ConcurrentHashMap;
  #131 = Utf8               ()Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;
  #132 = NameAndType        #48:#49       // infos:Ljava/util/concurrent/ConcurrentHashMap;
  #133 = Fieldref           #2.#132       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.infos:Ljava/util/concurrent/ConcurrentHashMap;
  #134 = Utf8               newEntry
  #135 = Utf8               (Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0;)V
  #136 = Utf8               (Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0<Ljava/lang/String;>;)V
  #137 = Utf8               url
  #138 = Utf8               info
  #139 = Utf8               fallbackMessage
  #140 = Utf8               scala/Predef$
  #141 = Class              #140          // scala/Predef$
  #142 = Utf8               MODULE$
  #143 = Utf8               Lscala/Predef$;
  #144 = NameAndType        #142:#143     // MODULE$:Lscala/Predef$;
  #145 = Fieldref           #141.#144     // scala/Predef$.MODULE$:Lscala/Predef$;
  #146 = NameAndType        #48:#130      // infos:()Ljava/util/concurrent/ConcurrentHashMap;
  #147 = Methodref          #2.#146       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.infos:()Ljava/util/concurrent/ConcurrentHashMap;
  #148 = Utf8               java/util/concurrent/ConcurrentHashMap
  #149 = Class              #148          // java/util/concurrent/ConcurrentHashMap
  #150 = Utf8               containsKey
  #151 = NameAndType        #150:#72      // containsKey:(Ljava/lang/Object;)Z
  #152 = Methodref          #149.#151     // java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
  #153 = Utf8               coursier/cache/loggers/RefreshInfo
  #154 = Class              #153          // coursier/cache/loggers/RefreshInfo
  #155 = Utf8               scala/Function0
  #156 = Class              #155          // scala/Function0
  #157 = MethodType         #81           //  ()Ljava/lang/Object;
  #158 = Utf8               $anonfun$newEntry$1
  #159 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #160 = NameAndType        #158:#159     // $anonfun$newEntry$1:(Ljava/lang/String;)Ljava/lang/String;
  #161 = Methodref          #2.#160       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$1:(Ljava/lang/String;)Ljava/lang/String;
  #162 = MethodHandle       6:#161        // REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$1:(Ljava/lang/String;)Ljava/lang/String;
  #163 = MethodType         #94           //  ()Ljava/lang/String;
  #164 = Integer            5
  #165 = Integer            1
  #166 = Utf8               java/lang/invoke/LambdaMetafactory
  #167 = Class              #166          // java/lang/invoke/LambdaMetafactory
  #168 = Utf8               altMetafactory
  #169 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #170 = NameAndType        #168:#169     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #171 = Methodref          #167.#170     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #172 = MethodHandle       6:#171        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #173 = Utf8               apply
  #174 = Utf8               (Ljava/lang/String;)Lscala/Function0;
  #175 = NameAndType        #173:#174     // apply:(Ljava/lang/String;)Lscala/Function0;
  #176 = InvokeDynamic      #0:#175       // #0:apply:(Ljava/lang/String;)Lscala/Function0;
  #177 = Utf8               assert
  #178 = Utf8               (ZLscala/Function0;)V
  #179 = NameAndType        #177:#178     // assert:(ZLscala/Function0;)V
  #180 = Methodref          #141.#179     // scala/Predef$.assert:(ZLscala/Function0;)V
  #181 = Utf8               putIfAbsent
  #182 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #183 = NameAndType        #181:#182     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #184 = Methodref          #149.#183     // java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #185 = Utf8               $anonfun$newEntry$2
  #186 = NameAndType        #185:#159     // $anonfun$newEntry$2:(Ljava/lang/String;)Ljava/lang/String;
  #187 = Methodref          #2.#186       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$2:(Ljava/lang/String;)Ljava/lang/String;
  #188 = MethodHandle       6:#187        // REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$2:(Ljava/lang/String;)Ljava/lang/String;
  #189 = InvokeDynamic      #1:#175       // #1:apply:(Ljava/lang/String;)Lscala/Function0;
  #190 = NameAndType        #33:#51       // display:()Lcoursier/cache/loggers/RefreshDisplay;
  #191 = Methodref          #2.#190       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.display:()Lcoursier/cache/loggers/RefreshDisplay;
  #192 = Utf8               coursier/cache/loggers/RefreshDisplay
  #193 = Class              #192          // coursier/cache/loggers/RefreshDisplay
  #194 = Utf8               (Ljava/io/Writer;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)V
  #195 = NameAndType        #134:#194     // newEntry:(Ljava/io/Writer;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)V
  #196 = InterfaceMethodref #193.#195     // coursier/cache/loggers/RefreshDisplay.newEntry:(Ljava/io/Writer;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)V
  #197 = NameAndType        #43:#123      // downloads:()Lscala/collection/mutable/ArrayBuffer;
  #198 = Methodref          #2.#197       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.downloads:()Lscala/collection/mutable/ArrayBuffer;
  #199 = Utf8               scala/collection/mutable/ArrayBuffer
  #200 = Class              #199          // scala/collection/mutable/ArrayBuffer
  #201 = Utf8               append
  #202 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Buffer;
  #203 = NameAndType        #201:#202     // append:(Ljava/lang/Object;)Lscala/collection/mutable/Buffer;
  #204 = Methodref          #200.#203     // scala/collection/mutable/ArrayBuffer.append:(Ljava/lang/Object;)Lscala/collection/mutable/Buffer;
  #205 = Utf8               java/lang/Throwable
  #206 = Class              #205          // java/lang/Throwable
  #207 = NameAndType        #115:#77      // update:()V
  #208 = Methodref          #2.#207       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.update:()V
  #209 = Utf8               prev
  #210 = Utf8               Lcoursier/cache/loggers/RefreshInfo;
  #211 = Utf8               Lscala/Function0;
  #212 = Utf8               removeEntry
  #213 = Utf8               (Ljava/lang/String;ZLscala/Function0;Lscala/Function1;)V
  #214 = Utf8               (Ljava/lang/String;ZLscala/Function0<Ljava/lang/String;>;Lscala/Function1<Lcoursier/cache/loggers/RefreshInfo;Lcoursier/cache/loggers/RefreshInfo;>;)V
  #215 = Utf8               success
  #216 = Utf8               update0
  #217 = Utf8               $minus$eq
  #218 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Shrinkable;
  #219 = NameAndType        #217:#218     // $minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Shrinkable;
  #220 = Methodref          #200.#219     // scala/collection/mutable/ArrayBuffer.$minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Shrinkable;
  #221 = Utf8               remove
  #222 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #223 = NameAndType        #221:#222     // remove:(Ljava/lang/Object;)Ljava/lang/Object;
  #224 = Methodref          #149.#223     // java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
  #225 = Utf8               scala/Function1
  #226 = Class              #225          // scala/Function1
  #227 = Utf8               $anonfun$removeEntry$1
  #228 = NameAndType        #227:#159     // $anonfun$removeEntry$1:(Ljava/lang/String;)Ljava/lang/String;
  #229 = Methodref          #2.#228       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$removeEntry$1:(Ljava/lang/String;)Ljava/lang/String;
  #230 = MethodHandle       6:#229        // REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$removeEntry$1:(Ljava/lang/String;)Ljava/lang/String;
  #231 = InvokeDynamic      #2:#175       // #2:apply:(Ljava/lang/String;)Lscala/Function0;
  #232 = NameAndType        #46:#123      // doneQueue:()Lscala/collection/mutable/ArrayBuffer;
  #233 = Methodref          #2.#232       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.doneQueue:()Lscala/collection/mutable/ArrayBuffer;
  #234 = Utf8               Lscala/Predef$ArrowAssoc$;
  #235 = NameAndType        #142:#234     // MODULE$:Lscala/Predef$ArrowAssoc$;
  #236 = Fieldref           #17.#235      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #237 = Utf8               ArrowAssoc
  #238 = NameAndType        #237:#222     // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #239 = Methodref          #141.#238     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #240 = NameAndType        #173:#222     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #241 = InterfaceMethodref #226.#240     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #242 = Utf8               $minus$greater$extension
  #243 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #244 = NameAndType        #242:#243     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #245 = Methodref          #17.#244      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #246 = Utf8               $plus$eq
  #247 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #248 = NameAndType        #246:#247     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #249 = Methodref          #200.#248     // scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #250 = Utf8               scala/runtime/BoxedUnit
  #251 = Class              #250          // scala/runtime/BoxedUnit
  #252 = Utf8               UNIT
  #253 = Utf8               Lscala/runtime/BoxedUnit;
  #254 = NameAndType        #252:#253     // UNIT:Lscala/runtime/BoxedUnit;
  #255 = Fieldref           #251.#254     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #256 = NameAndType        #212:#194     // removeEntry:(Ljava/io/Writer;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)V
  #257 = InterfaceMethodref #193.#256     // coursier/cache/loggers/RefreshDisplay.removeEntry:(Ljava/io/Writer;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)V
  #258 = Utf8               inf
  #259 = Utf8               Lscala/Function1;
  #260 = Utf8               stop
  #261 = NameAndType        #76:#77       // flushMessages:()V
  #262 = Methodref          #2.#261       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.flushMessages:()V
  #263 = Utf8               (Ljava/io/Writer;)V
  #264 = NameAndType        #260:#263     // stop:(Ljava/io/Writer;)V
  #265 = InterfaceMethodref #193.#264     // coursier/cache/loggers/RefreshDisplay.stop:(Ljava/io/Writer;)V
  #266 = NameAndType        #105:#106     // printedAnything0_$eq:(Z)V
  #267 = Methodref          #2.#266       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.printedAnything0_$eq:(Z)V
  #268 = NameAndType        #109:#106     // stopped_$eq:(Z)V
  #269 = Methodref          #2.#268       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.stopped_$eq:(Z)V
  #270 = Utf8               run
  #271 = NameAndType        #40:#102      // stopped:()Z
  #272 = Methodref          #2.#271       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.stopped:()Z
  #273 = Utf8               getAndSet
  #274 = Utf8               (Z)Z
  #275 = NameAndType        #273:#274     // getAndSet:(Z)Z
  #276 = Methodref          #119.#275     // java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
  #277 = Utf8               toVector
  #278 = Utf8               ()Lscala/collection/immutable/Vector;
  #279 = NameAndType        #277:#278     // toVector:()Lscala/collection/immutable/Vector;
  #280 = Methodref          #200.#279     // scala/collection/mutable/ArrayBuffer.toVector:()Lscala/collection/immutable/Vector;
  #281 = MethodType         #222          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #282 = Utf8               $anonfun$run$1
  #283 = Utf8               (Lscala/Tuple2;)Ljava/lang/String;
  #284 = NameAndType        #282:#283     // $anonfun$run$1:(Lscala/Tuple2;)Ljava/lang/String;
  #285 = Methodref          #2.#284       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$1:(Lscala/Tuple2;)Ljava/lang/String;
  #286 = MethodHandle       6:#285        // REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$1:(Lscala/Tuple2;)Ljava/lang/String;
  #287 = MethodType         #283          //  (Lscala/Tuple2;)Ljava/lang/String;
  #288 = Utf8               ()Lscala/Function1;
  #289 = NameAndType        #173:#288     // apply:()Lscala/Function1;
  #290 = InvokeDynamic      #3:#289       // #3:apply:()Lscala/Function1;
  #291 = Utf8               Lscala/math/Ordering$String$;
  #292 = NameAndType        #142:#291     // MODULE$:Lscala/math/Ordering$String$;
  #293 = Fieldref           #30.#292      // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #294 = Utf8               scala/collection/immutable/Vector
  #295 = Class              #294          // scala/collection/immutable/Vector
  #296 = Utf8               sortBy
  #297 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #298 = NameAndType        #296:#297     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #299 = Methodref          #295.#298     // scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #300 = Utf8               clear
  #301 = NameAndType        #300:#77      // clear:()V
  #302 = Methodref          #200.#301     // scala/collection/mutable/ArrayBuffer.clear:()V
  #303 = Utf8               $anonfun$run$2
  #304 = Utf8               (Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;Ljava/lang/String;)Lscala/Tuple2;
  #305 = NameAndType        #303:#304     // $anonfun$run$2:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;Ljava/lang/String;)Lscala/Tuple2;
  #306 = Methodref          #2.#305       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$2:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;Ljava/lang/String;)Lscala/Tuple2;
  #307 = MethodHandle       6:#306        // REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$2:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;Ljava/lang/String;)Lscala/Tuple2;
  #308 = Utf8               (Ljava/lang/String;)Lscala/Tuple2;
  #309 = MethodType         #308          //  (Ljava/lang/String;)Lscala/Tuple2;
  #310 = Utf8               (Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Lscala/Function1;
  #311 = NameAndType        #173:#310     // apply:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Lscala/Function1;
  #312 = InvokeDynamic      #4:#311       // #4:apply:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Lscala/Function1;
  #313 = Utf8               map
  #314 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #315 = NameAndType        #313:#314     // map:(Lscala/Function1;)Ljava/lang/Object;
  #316 = Methodref          #295.#315     // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
  #317 = Utf8               scala/collection/SeqOps
  #318 = Class              #317          // scala/collection/SeqOps
  #319 = Utf8               $anonfun$run$3$adapted
  #320 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #321 = NameAndType        #319:#320     // $anonfun$run$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #322 = Methodref          #2.#321       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #323 = MethodHandle       6:#322        // REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #324 = MethodType         #320          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #325 = InvokeDynamic      #5:#289       // #5:apply:()Lscala/Function1;
  #326 = Utf8               Lscala/math/Ordering$DeprecatedDoubleOrdering$;
  #327 = NameAndType        #142:#326     // MODULE$:Lscala/math/Ordering$DeprecatedDoubleOrdering$;
  #328 = Fieldref           #26.#327      // scala/math/Ordering$DeprecatedDoubleOrdering$.MODULE$:Lscala/math/Ordering$DeprecatedDoubleOrdering$;
  #329 = InterfaceMethodref #318.#298     // scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #330 = Utf8               scala/Tuple2
  #331 = Class              #330          // scala/Tuple2
  #332 = Utf8               <init>
  #333 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #334 = NameAndType        #332:#333     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #335 = Methodref          #331.#334     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #336 = Utf8               scala/collection/immutable/Seq$
  #337 = Class              #336          // scala/collection/immutable/Seq$
  #338 = Utf8               Lscala/collection/immutable/Seq$;
  #339 = NameAndType        #142:#338     // MODULE$:Lscala/collection/immutable/Seq$;
  #340 = Fieldref           #337.#339     // scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
  #341 = Utf8               empty
  #342 = Utf8               ()Lscala/collection/SeqOps;
  #343 = NameAndType        #341:#342     // empty:()Lscala/collection/SeqOps;
  #344 = Methodref          #337.#343     // scala/collection/immutable/Seq$.empty:()Lscala/collection/SeqOps;
  #345 = Utf8               _1
  #346 = NameAndType        #345:#81      // _1:()Ljava/lang/Object;
  #347 = Methodref          #331.#346     // scala/Tuple2._1:()Ljava/lang/Object;
  #348 = Utf8               scala/collection/immutable/Seq
  #349 = Class              #348          // scala/collection/immutable/Seq
  #350 = Utf8               _2
  #351 = NameAndType        #350:#81      // _2:()Ljava/lang/Object;
  #352 = Methodref          #331.#351     // scala/Tuple2._2:()Ljava/lang/Object;
  #353 = Utf8               scala/MatchError
  #354 = Class              #353          // scala/MatchError
  #355 = Utf8               (Ljava/lang/Object;)V
  #356 = NameAndType        #332:#355     // "<init>":(Ljava/lang/Object;)V
  #357 = Methodref          #354.#356     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #358 = Utf8               (Ljava/io/Writer;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Z)V
  #359 = NameAndType        #115:#358     // update:(Ljava/io/Writer;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Z)V
  #360 = InterfaceMethodref #193.#359     // coursier/cache/loggers/RefreshDisplay.update:(Ljava/io/Writer;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Z)V
  #361 = Utf8               q
  #362 = Utf8               Lscala/collection/immutable/Vector;
  #363 = Utf8               dw
  #364 = Utf8               done0
  #365 = Utf8               Lscala/collection/immutable/Seq;
  #366 = Utf8               downloads0
  #367 = Utf8               needsUpdate0
  #368 = Utf8               url$1
  #369 = Utf8               java/lang/StringBuilder
  #370 = Class              #369          // java/lang/StringBuilder
  #371 = Integer            39
  #372 = Utf8               (I)V
  #373 = NameAndType        #332:#372     // "<init>":(I)V
  #374 = Methodref          #370.#373     // java/lang/StringBuilder."<init>":(I)V
  #375 = Utf8               Attempts to download
  #376 = String             #375          // Attempts to download
  #377 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #378 = NameAndType        #201:#377     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #379 = Methodref          #370.#378     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #380 = Utf8                twice in parallel
  #381 = String             #380          //  twice in parallel
  #382 = Utf8               toString
  #383 = NameAndType        #382:#94      // toString:()Ljava/lang/String;
  #384 = Methodref          #370.#383     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #385 = Integer            54
  #386 = Utf8                twice in parallel (second check)
  #387 = String             #386          //  twice in parallel (second check)
  #388 = Utf8               url$2
  #389 = Integer            25
  #390 = Utf8                was not being downloaded
  #391 = String             #390          //  was not being downloaded
  #392 = Utf8               x0$1
  #393 = Utf8               Lscala/Tuple2;
  #394 = Utf8               $this
  #395 = Utf8               get
  #396 = NameAndType        #395:#222     // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #397 = Methodref          #149.#396     // java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
  #398 = Utf8               $anonfun$run$3
  #399 = Utf8               (Lscala/Tuple2;)D
  #400 = Utf8               x0$2
  #401 = Utf8               scala/Option$
  #402 = Class              #401          // scala/Option$
  #403 = Utf8               Lscala/Option$;
  #404 = NameAndType        #142:#403     // MODULE$:Lscala/Option$;
  #405 = Fieldref           #402.#404     // scala/Option$.MODULE$:Lscala/Option$;
  #406 = Utf8               fraction
  #407 = Utf8               ()Lscala/Option;
  #408 = NameAndType        #406:#407     // fraction:()Lscala/Option;
  #409 = Methodref          #154.#408     // coursier/cache/loggers/RefreshInfo.fraction:()Lscala/Option;
  #410 = Utf8               option2Iterable
  #411 = Utf8               (Lscala/Option;)Lscala/collection/Iterable;
  #412 = NameAndType        #410:#411     // option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #413 = Methodref          #402.#412     // scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #414 = Utf8               Lscala/math/Numeric$DoubleIsFractional$;
  #415 = NameAndType        #142:#414     // MODULE$:Lscala/math/Numeric$DoubleIsFractional$;
  #416 = Fieldref           #22.#415      // scala/math/Numeric$DoubleIsFractional$.MODULE$:Lscala/math/Numeric$DoubleIsFractional$;
  #417 = Utf8               scala/collection/Iterable
  #418 = Class              #417          // scala/collection/Iterable
  #419 = Utf8               sum
  #420 = Utf8               (Lscala/math/Numeric;)Ljava/lang/Object;
  #421 = NameAndType        #419:#420     // sum:(Lscala/math/Numeric;)Ljava/lang/Object;
  #422 = InterfaceMethodref #418.#421     // scala/collection/Iterable.sum:(Lscala/math/Numeric;)Ljava/lang/Object;
  #423 = Utf8               scala/runtime/BoxesRunTime
  #424 = Class              #423          // scala/runtime/BoxesRunTime
  #425 = Utf8               unboxToDouble
  #426 = Utf8               (Ljava/lang/Object;)D
  #427 = NameAndType        #425:#426     // unboxToDouble:(Ljava/lang/Object;)D
  #428 = Methodref          #424.#427     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #429 = Utf8               (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;)V
  #430 = NameAndType        #332:#77      // "<init>":()V
  #431 = Methodref          #4.#430       // java/lang/Object."<init>":()V
  #432 = Methodref          #70.#430      // java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
  #433 = NameAndType        #332:#106     // "<init>":(Z)V
  #434 = Methodref          #119.#433     // java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
  #435 = Methodref          #200.#430     // scala/collection/mutable/ArrayBuffer."<init>":()V
  #436 = Methodref          #149.#430     // java/util/concurrent/ConcurrentHashMap."<init>":()V
  #437 = NameAndType        #398:#399     // $anonfun$run$3:(Lscala/Tuple2;)D
  #438 = Methodref          #2.#437       // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$3:(Lscala/Tuple2;)D
  #439 = Utf8               boxToDouble
  #440 = Utf8               (D)Ljava/lang/Double;
  #441 = NameAndType        #439:#440     // boxToDouble:(D)Ljava/lang/Double;
  #442 = Methodref          #424.#441     // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #443 = Utf8               $deserializeLambda$
  #444 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #445 = Utf8               scala/runtime/LambdaDeserialize
  #446 = Class              #445          // scala/runtime/LambdaDeserialize
  #447 = Utf8               bootstrap
  #448 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #449 = NameAndType        #447:#448     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #450 = Methodref          #446.#449     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #451 = MethodHandle       6:#450        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #452 = Utf8               lambdaDeserialize
  #453 = NameAndType        #452:#444     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #454 = InvokeDynamic      #6:#453       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #455 = Utf8               Signature
  #456 = Utf8               Code
  #457 = Utf8               LineNumberTable
  #458 = Utf8               LocalVariableTable
  #459 = Utf8               MethodParameters
  #460 = Utf8               StackMapTable
  #461 = Utf8               InnerClasses
  #462 = Utf8               SourceFile
  #463 = Utf8               BootstrapMethods
  #464 = Utf8               ScalaInlineInfo
  #465 = Utf8               Scala
{
  private final java.io.Writer out;
    descriptor: Ljava/io/Writer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final coursier.cache.loggers.RefreshDisplay display;
    descriptor: Lcoursier/cache/loggers/RefreshDisplay;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.util.concurrent.ConcurrentLinkedQueue<java.lang.String> messages;
    descriptor: Ljava/util/concurrent/ConcurrentLinkedQueue;
    flags: (0x0002) ACC_PRIVATE
    Signature: #37                          // Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/String;>;

  private boolean printedAnything0;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private boolean stopped;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private final java.util.concurrent.atomic.AtomicBoolean needsUpdate;
    descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.mutable.ArrayBuffer<java.lang.String> downloads;
    descriptor: Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #45                          // Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;

  private final scala.collection.mutable.ArrayBuffer<scala.Tuple2<java.lang.String, coursier.cache.loggers.RefreshInfo>> doneQueue;
    descriptor: Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #47                          // Lscala/collection/mutable/ArrayBuffer<Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;>;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, coursier.cache.loggers.RefreshInfo> infos;
    descriptor: Ljava/util/concurrent/ConcurrentHashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #50                          // Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;

  public coursier.cache.loggers.RefreshDisplay display();
    descriptor: ()Lcoursier/cache/loggers/RefreshDisplay;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #53                 // Field display:Lcoursier/cache/loggers/RefreshDisplay;
         4: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  private java.util.concurrent.ConcurrentLinkedQueue<java.lang.String> messages();
    descriptor: ()Ljava/util/concurrent/ConcurrentLinkedQueue;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #59                 // Field messages:Ljava/util/concurrent/ConcurrentLinkedQueue;
         4: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
    Signature: #57                          // ()Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/String;>;

  private void messages_$eq(java.util.concurrent.ConcurrentLinkedQueue<java.lang.String>);
    descriptor: (Ljava/util/concurrent/ConcurrentLinkedQueue;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #59                 // Field messages:Ljava/util/concurrent/ConcurrentLinkedQueue;
         5: return
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0       6     1   x$1   Ljava/util/concurrent/ConcurrentLinkedQueue;
    Signature: #62                          // (Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/String;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void log(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #68                 // Method messages:()Ljava/util/concurrent/ConcurrentLinkedQueue;
         4: aload_1
         5: invokevirtual #74                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
         8: pop
         9: return
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0      10     1 message   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      message                        final

  private void flushMessages();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=3, args_size=1
         0: iconst_0
         1: istore_1
         2: aconst_null
         3: astore_2
         4: aload_0
         5: invokespecial #68                 // Method messages:()Ljava/util/concurrent/ConcurrentLinkedQueue;
         8: invokevirtual #83                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
        11: checkcast     #79                 // class java/lang/String
        14: astore_2
        15: aload_2
        16: ifnull        23
        19: iconst_1
        20: goto          24
        23: iconst_0
        24: ifeq          50
        27: aload_0
        28: getfield      #85                 // Field out:Ljava/io/Writer;
        31: aload_2
        32: invokevirtual #90                 // Method java/io/Writer.write:(Ljava/lang/String;)V
        35: aload_0
        36: getfield      #85                 // Field out:Ljava/io/Writer;
        39: invokestatic  #96                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
        42: invokevirtual #90                 // Method java/io/Writer.write:(Ljava/lang/String;)V
        45: iconst_1
        46: istore_1
        47: goto          4
        50: iload_1
        51: ifeq          64
        54: aload_0
        55: getfield      #85                 // Field out:Ljava/io/Writer;
        58: invokevirtual #99                 // Method java/io/Writer.flush:()V
        61: goto          64
        64: return
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 4
          locals = [ int, class java/lang/String ]
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 25 /* same */
        frame_type = 13 /* same */
      LineNumberTable:
        line 88: 0
        line 89: 2
        line 91: 4
        line 92: 15
        line 94: 27
        line 95: 35
        line 96: 45
        line 93: 47
        line 98: 50
        line 99: 54
        line 98: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      62     1 printedAnything   Z
            4      60     2   msg   Ljava/lang/String;
            0      65     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  private boolean printedAnything0();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field printedAnything0:Z
         4: ireturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  private void printedAnything0_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #104                // Field printedAnything0:Z
         5: return
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  private boolean stopped();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field stopped:Z
         4: ireturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  private void stopped_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #108                // Field stopped:Z
         5: return
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public boolean printedAnything();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #111                // Method printedAnything0:()Z
         4: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  private java.util.concurrent.atomic.AtomicBoolean needsUpdate();
    descriptor: ()Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field needsUpdate:Ljava/util/concurrent/atomic/AtomicBoolean;
         4: areturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  public void update();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #117                // Method needsUpdate:()Ljava/util/concurrent/atomic/AtomicBoolean;
         4: iconst_1
         5: invokevirtual #122                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
         8: return
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  private scala.collection.mutable.ArrayBuffer<java.lang.String> downloads();
    descriptor: ()Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #126                // Field downloads:Lscala/collection/mutable/ArrayBuffer;
         4: areturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
    Signature: #124                         // ()Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;

  private scala.collection.mutable.ArrayBuffer<scala.Tuple2<java.lang.String, coursier.cache.loggers.RefreshInfo>> doneQueue();
    descriptor: ()Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #129                // Field doneQueue:Lscala/collection/mutable/ArrayBuffer;
         4: areturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
    Signature: #127                         // ()Lscala/collection/mutable/ArrayBuffer<Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;>;

  public java.util.concurrent.ConcurrentHashMap<java.lang.String, coursier.cache.loggers.RefreshInfo> infos();
    descriptor: ()Ljava/util/concurrent/ConcurrentHashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #133                // Field infos:Ljava/util/concurrent/ConcurrentHashMap;
         4: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
    Signature: #131                         // ()Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;

  public void newEntry(java.lang.String, coursier.cache.loggers.RefreshInfo, scala.Function0<java.lang.String>);
    descriptor: (Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=4
         0: getstatic     #145                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #147                // Method infos:()Ljava/util/concurrent/ConcurrentHashMap;
         7: aload_1
         8: invokevirtual #152                // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
        11: ifne          18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: aload_1
        20: invokedynamic #176,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function0;
        25: invokevirtual #180                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        28: aload_0
        29: invokevirtual #147                // Method infos:()Ljava/util/concurrent/ConcurrentHashMap;
        32: aload_1
        33: aload_2
        34: invokevirtual #184                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        37: checkcast     #154                // class coursier/cache/loggers/RefreshInfo
        40: astore        4
        42: getstatic     #145                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        45: aload         4
        47: ifnonnull     54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: aload_1
        56: invokedynamic #189,  0            // InvokeDynamic #1:apply:(Ljava/lang/String;)Lscala/Function0;
        61: invokevirtual #180                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        64: aload_0
        65: invokevirtual #191                // Method display:()Lcoursier/cache/loggers/RefreshDisplay;
        68: aload_0
        69: getfield      #85                 // Field out:Ljava/io/Writer;
        72: aload_1
        73: aload_2
        74: invokeinterface #196,  4          // InterfaceMethod coursier/cache/loggers/RefreshDisplay.newEntry:(Ljava/io/Writer;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)V
        79: aload_0
        80: invokespecial #198                // Method downloads:()Lscala/collection/mutable/ArrayBuffer;
        83: dup
        84: astore        5
        86: monitorenter
        87: aload_0
        88: invokespecial #198                // Method downloads:()Lscala/collection/mutable/ArrayBuffer;
        91: aload_1
        92: invokevirtual #204                // Method scala/collection/mutable/ArrayBuffer.append:(Ljava/lang/Object;)Lscala/collection/mutable/Buffer;
        95: checkcast     #200                // class scala/collection/mutable/ArrayBuffer
        98: pop
        99: aload         5
       101: monitorexit
       102: goto          109
       105: aload         5
       107: monitorexit
       108: athrow
       109: aload_0
       110: invokevirtual #208                // Method update:()V
       113: return
      Exception table:
         from    to  target type
            87    99   105   any
      StackMapTable: number_of_entries = 6
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, class coursier/cache/loggers/RefreshInfo, class scala/Function0 ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, class coursier/cache/loggers/RefreshInfo, class scala/Function0, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, class coursier/cache/loggers/RefreshInfo, class scala/Function0, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, class coursier/cache/loggers/RefreshInfo, class scala/Function0, class coursier/cache/loggers/RefreshInfo, class scala/collection/mutable/ArrayBuffer ]
          stack = [ class java/lang/Throwable ]
        frame_type = 3 /* same */
      LineNumberTable:
        line 122: 0
        line 123: 28
        line 124: 42
        line 126: 64
        line 128: 79
        line 129: 87
        line 132: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           42      71     4  prev   Lcoursier/cache/loggers/RefreshInfo;
            0     114     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0     114     1   url   Ljava/lang/String;
            0     114     2  info   Lcoursier/cache/loggers/RefreshInfo;
            0     114     3 fallbackMessage   Lscala/Function0;
    Signature: #136                         // (Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0<Ljava/lang/String;>;)V
    MethodParameters:
      Name                           Flags
      url                            final
      info                           final
      fallbackMessage                final

  public void removeEntry(java.lang.String, boolean, scala.Function0<java.lang.String>, scala.Function1<coursier.cache.loggers.RefreshInfo, coursier.cache.loggers.RefreshInfo>);
    descriptor: (Ljava/lang/String;ZLscala/Function0;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=5
         0: aload_0
         1: invokespecial #198                // Method downloads:()Lscala/collection/mutable/ArrayBuffer;
         4: dup
         5: astore        6
         7: monitorenter
         8: aload_0
         9: invokespecial #198                // Method downloads:()Lscala/collection/mutable/ArrayBuffer;
        12: aload_1
        13: invokevirtual #220                // Method scala/collection/mutable/ArrayBuffer.$minus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Shrinkable;
        16: pop
        17: aload_0
        18: invokevirtual #147                // Method infos:()Ljava/util/concurrent/ConcurrentHashMap;
        21: aload_1
        22: invokevirtual #224                // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        25: checkcast     #154                // class coursier/cache/loggers/RefreshInfo
        28: astore        8
        30: getstatic     #145                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        33: aload         8
        35: ifnull        42
        38: iconst_1
        39: goto          43
        42: iconst_0
        43: aload_1
        44: invokedynamic #231,  0            // InvokeDynamic #2:apply:(Ljava/lang/String;)Lscala/Function0;
        49: invokevirtual #180                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        52: iload_2
        53: ifeq          88
        56: aload_0
        57: invokespecial #233                // Method doneQueue:()Lscala/collection/mutable/ArrayBuffer;
        60: getstatic     #236                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        63: getstatic     #145                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        66: aload_1
        67: invokevirtual #239                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        70: aload         4
        72: aload         8
        74: invokeinterface #241,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        79: invokevirtual #245                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        82: invokevirtual #249                // Method scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        85: goto          91
        88: getstatic     #255                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        91: pop
        92: aload         8
        94: astore        7
        96: aload         6
        98: monitorexit
        99: aload         7
       101: goto          108
       104: aload         6
       106: monitorexit
       107: athrow
       108: astore        5
       110: aload_0
       111: invokevirtual #191                // Method display:()Lcoursier/cache/loggers/RefreshDisplay;
       114: aload_0
       115: getfield      #85                 // Field out:Ljava/io/Writer;
       118: aload_1
       119: aload         5
       121: invokeinterface #257,  4          // InterfaceMethod coursier/cache/loggers/RefreshDisplay.removeEntry:(Ljava/io/Writer;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)V
       126: aload_0
       127: invokevirtual #208                // Method update:()V
       130: return
      Exception table:
         from    to  target type
             8    96   104   any
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, int, class scala/Function0, class scala/Function1, top, class scala/collection/mutable/ArrayBuffer, top, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, int, class scala/Function0, class scala/Function1, top, class scala/collection/mutable/ArrayBuffer, top, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$, int ]
        frame_type = 44 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, int, class scala/Function0, class scala/Function1, top, class scala/collection/mutable/ArrayBuffer ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, int, class scala/Function0, class scala/Function1, top, class scala/collection/mutable/ArrayBuffer, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class coursier/cache/loggers/RefreshInfo ]
      LineNumberTable:
        line 142: 0
        line 143: 8
        line 145: 17
        line 146: 30
        line 148: 52
        line 149: 56
        line 148: 88
        line 151: 92
        line 142: 108
        line 154: 110
        line 156: 126
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30      64     8  info   Lcoursier/cache/loggers/RefreshInfo;
          110      20     5   inf   Lcoursier/cache/loggers/RefreshInfo;
            0     131     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0     131     1   url   Ljava/lang/String;
            0     131     2 success   Z
            0     131     3 fallbackMessage   Lscala/Function0;
            0     131     4 update0   Lscala/Function1;
    Signature: #214                         // (Ljava/lang/String;ZLscala/Function0<Ljava/lang/String;>;Lscala/Function1<Lcoursier/cache/loggers/RefreshInfo;Lcoursier/cache/loggers/RefreshInfo;>;)V
    MethodParameters:
      Name                           Flags
      url                            final
      success                        final
      fallbackMessage                final
      update0                        final

  public void stop();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #262                // Method flushMessages:()V
         4: aload_0
         5: invokevirtual #191                // Method display:()Lcoursier/cache/loggers/RefreshDisplay;
         8: aload_0
         9: getfield      #85                 // Field out:Ljava/io/Writer;
        12: invokeinterface #265,  2          // InterfaceMethod coursier/cache/loggers/RefreshDisplay.stop:(Ljava/io/Writer;)V
        17: aload_0
        18: iconst_0
        19: invokespecial #267                // Method printedAnything0_$eq:(Z)V
        22: aload_0
        23: iconst_1
        24: invokespecial #269                // Method stopped_$eq:(Z)V
        27: return
      LineNumberTable:
        line 160: 0
        line 161: 4
        line 162: 17
        line 163: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=13, args_size=1
         0: aload_0
         1: invokespecial #272                // Method stopped:()Z
         4: ifne          242
         7: aload_0
         8: invokespecial #117                // Method needsUpdate:()Ljava/util/concurrent/atomic/AtomicBoolean;
        11: iconst_0
        12: invokevirtual #276                // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
        15: istore_2
        16: iload_2
        17: ifeq          123
        20: aload_0
        21: invokespecial #198                // Method downloads:()Lscala/collection/mutable/ArrayBuffer;
        24: dup
        25: astore        5
        27: monitorenter
        28: aload_0
        29: invokespecial #233                // Method doneQueue:()Lscala/collection/mutable/ArrayBuffer;
        32: invokevirtual #280                // Method scala/collection/mutable/ArrayBuffer.toVector:()Lscala/collection/immutable/Vector;
        35: invokedynamic #290,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        40: getstatic     #293                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        43: invokevirtual #299                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        46: checkcast     #295                // class scala/collection/immutable/Vector
        49: astore        7
        51: aload_0
        52: invokespecial #233                // Method doneQueue:()Lscala/collection/mutable/ArrayBuffer;
        55: invokevirtual #302                // Method scala/collection/mutable/ArrayBuffer.clear:()V
        58: aload_0
        59: invokespecial #198                // Method downloads:()Lscala/collection/mutable/ArrayBuffer;
        62: invokevirtual #280                // Method scala/collection/mutable/ArrayBuffer.toVector:()Lscala/collection/immutable/Vector;
        65: aload_0
        66: invokedynamic #312,  0            // InvokeDynamic #4:apply:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Lscala/Function1;
        71: invokevirtual #316                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        74: checkcast     #318                // class scala/collection/SeqOps
        77: invokedynamic #325,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        82: getstatic     #328                // Field scala/math/Ordering$DeprecatedDoubleOrdering$.MODULE$:Lscala/math/Ordering$DeprecatedDoubleOrdering$;
        85: invokeinterface #329,  3          // InterfaceMethod scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        90: checkcast     #295                // class scala/collection/immutable/Vector
        93: astore        8
        95: new           #331                // class scala/Tuple2
        98: dup
        99: aload         7
       101: aload         8
       103: invokespecial #335                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       106: astore        6
       108: aload         5
       110: monitorexit
       111: aload         6
       113: goto          120
       116: aload         5
       118: monitorexit
       119: athrow
       120: goto          142
       123: new           #331                // class scala/Tuple2
       126: dup
       127: getstatic     #340                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
       130: invokevirtual #344                // Method scala/collection/immutable/Seq$.empty:()Lscala/collection/SeqOps;
       133: getstatic     #340                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
       136: invokevirtual #344                // Method scala/collection/immutable/Seq$.empty:()Lscala/collection/SeqOps;
       139: invokespecial #335                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       142: astore        4
       144: aload         4
       146: ifnull        184
       149: aload         4
       151: invokevirtual #347                // Method scala/Tuple2._1:()Ljava/lang/Object;
       154: checkcast     #349                // class scala/collection/immutable/Seq
       157: astore        9
       159: aload         4
       161: invokevirtual #352                // Method scala/Tuple2._2:()Ljava/lang/Object;
       164: checkcast     #349                // class scala/collection/immutable/Seq
       167: astore        10
       169: new           #331                // class scala/Tuple2
       172: dup
       173: aload         9
       175: aload         10
       177: invokespecial #335                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       180: astore_1
       181: goto          197
       184: goto          187
       187: new           #354                // class scala/MatchError
       190: dup
       191: aload         4
       193: invokespecial #357                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       196: athrow
       197: aload_1
       198: astore_3
       199: aload_3
       200: invokevirtual #347                // Method scala/Tuple2._1:()Ljava/lang/Object;
       203: checkcast     #349                // class scala/collection/immutable/Seq
       206: astore        11
       208: aload_3
       209: invokevirtual #352                // Method scala/Tuple2._2:()Ljava/lang/Object;
       212: checkcast     #349                // class scala/collection/immutable/Seq
       215: astore        12
       217: aload_0
       218: invokespecial #262                // Method flushMessages:()V
       221: aload_0
       222: invokevirtual #191                // Method display:()Lcoursier/cache/loggers/RefreshDisplay;
       225: aload_0
       226: getfield      #85                 // Field out:Ljava/io/Writer;
       229: aload         11
       231: aload         12
       233: iload_2
       234: invokeinterface #360,  5          // InterfaceMethod coursier/cache/loggers/RefreshDisplay.update:(Ljava/io/Writer;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Z)V
       239: goto          242
       242: return
      Exception table:
         from    to  target type
            28   108   116   any
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 116
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, top, int, top, top, class scala/collection/mutable/ArrayBuffer ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, top, int, top, top, class scala/collection/mutable/ArrayBuffer, class scala/Tuple2, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector ]
          stack = [ class scala/Tuple2 ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, top, int ]
          stack = []
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class scala/Tuple2, int, top, class scala/Tuple2, top, top, top, top, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable ]
          stack = []
      LineNumberTable:
        line 167: 0
        line 169: 7
        line 172: 16
        line 173: 20
        line 174: 28
        line 176: 35
        line 178: 51
        line 180: 58
        line 182: 65
        line 183: 77
        line 185: 95
        line 173: 120
        line 188: 123
        line 171: 144
        line 172: 187
        line 171: 199
        line 190: 217
        line 191: 221
        line 167: 242
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           51      55     7     q   Lscala/collection/immutable/Vector;
           95      11     8    dw   Lscala/collection/immutable/Vector;
          159      25     9 done0   Lscala/collection/immutable/Seq;
          169      15    10 downloads0   Lscala/collection/immutable/Seq;
           16     223     2 needsUpdate0   Z
          208      31    11 done0   Lscala/collection/immutable/Seq;
          217      22    12 downloads0   Lscala/collection/immutable/Seq;
            0     243     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;

  public static final java.lang.String $anonfun$newEntry$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #370                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #371                // int 39
         7: invokespecial #374                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #376                // String Attempts to download
        13: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #381                // String  twice in parallel
        23: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #384                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 url$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$1                          final

  public static final java.lang.String $anonfun$newEntry$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #370                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #385                // int 54
         7: invokespecial #374                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #376                // String Attempts to download
        13: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #387                // String  twice in parallel (second check)
        23: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #384                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 124: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 url$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$1                          final

  public static final java.lang.String $anonfun$removeEntry$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #370                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #389                // int 25
         7: invokespecial #374                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: ldc_w         #391                // String  was not being downloaded
        17: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: invokevirtual #384                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        23: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 url$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$2                          final

  public static final java.lang.String $anonfun$run$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        19
         6: aload_2
         7: invokevirtual #347                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #79                 // class java/lang/String
        13: astore_3
        14: aload_3
        15: astore_1
        16: goto          31
        19: goto          22
        22: new           #354                // class scala/MatchError
        25: dup
        26: aload_2
        27: invokespecial #357                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        30: athrow
        31: aload_1
        32: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class java/lang/String, class scala/Tuple2, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14       5     3   url   Ljava/lang/String;
            0      33     0  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final scala.Tuple2 $anonfun$run$2(coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable, java.lang.String);
    descriptor: (Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #236                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
         3: getstatic     #145                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #239                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        10: aload_0
        11: invokevirtual #147                // Method infos:()Ljava/util/concurrent/ConcurrentHashMap;
        14: aload_1
        15: invokevirtual #397                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        18: invokevirtual #245                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        21: areturn
      LineNumberTable:
        line 182: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 $this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0      22     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      url                            final

  public static final double $anonfun$run$3(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_3
         2: aload_3
         3: ifnull        42
         6: aload_3
         7: invokevirtual #352                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #154                // class coursier/cache/loggers/RefreshInfo
        13: astore        4
        15: getstatic     #405                // Field scala/Option$.MODULE$:Lscala/Option$;
        18: aload         4
        20: invokevirtual #409                // Method coursier/cache/loggers/RefreshInfo.fraction:()Lscala/Option;
        23: invokevirtual #413                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
        26: getstatic     #416                // Field scala/math/Numeric$DoubleIsFractional$.MODULE$:Lscala/math/Numeric$DoubleIsFractional$;
        29: invokeinterface #422,  2          // InterfaceMethod scala/collection/Iterable.sum:(Lscala/math/Numeric;)Ljava/lang/Object;
        34: invokestatic  #428                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        37: dneg
        38: dstore_1
        39: goto          54
        42: goto          45
        45: new           #354                // class scala/MatchError
        48: dup
        49: aload_3
        50: invokespecial #357                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        53: athrow
        54: dload_1
        55: dreturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 42
          locals = [ top, top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, double, class scala/Tuple2, class coursier/cache/loggers/RefreshInfo ]
          stack = []
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      27     4  info   Lcoursier/cache/loggers/RefreshInfo;
            0      56     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable(java.io.Writer, coursier.cache.loggers.RefreshDisplay);
    descriptor: (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #85                 // Field out:Ljava/io/Writer;
         5: aload_0
         6: aload_2
         7: putfield      #53                 // Field display:Lcoursier/cache/loggers/RefreshDisplay;
        10: aload_0
        11: invokespecial #431                // Method java/lang/Object."<init>":()V
        14: aload_0
        15: new           #70                 // class java/util/concurrent/ConcurrentLinkedQueue
        18: dup
        19: invokespecial #432                // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
        22: putfield      #59                 // Field messages:Ljava/util/concurrent/ConcurrentLinkedQueue;
        25: aload_0
        26: iconst_0
        27: putfield      #104                // Field printedAnything0:Z
        30: aload_0
        31: iconst_0
        32: putfield      #108                // Field stopped:Z
        35: aload_0
        36: new           #119                // class java/util/concurrent/atomic/AtomicBoolean
        39: dup
        40: iconst_0
        41: invokespecial #434                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
        44: putfield      #114                // Field needsUpdate:Ljava/util/concurrent/atomic/AtomicBoolean;
        47: aload_0
        48: new           #200                // class scala/collection/mutable/ArrayBuffer
        51: dup
        52: invokespecial #435                // Method scala/collection/mutable/ArrayBuffer."<init>":()V
        55: putfield      #126                // Field downloads:Lscala/collection/mutable/ArrayBuffer;
        58: aload_0
        59: new           #200                // class scala/collection/mutable/ArrayBuffer
        62: dup
        63: invokespecial #435                // Method scala/collection/mutable/ArrayBuffer."<init>":()V
        66: putfield      #129                // Field doneQueue:Lscala/collection/mutable/ArrayBuffer;
        69: aload_0
        70: new           #149                // class java/util/concurrent/ConcurrentHashMap
        73: dup
        74: invokespecial #436                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        77: putfield      #133                // Field infos:Ljava/util/concurrent/ConcurrentHashMap;
        80: return
      LineNumberTable:
        line 81: 0
        line 83: 14
        line 102: 25
        line 104: 30
        line 108: 35
        line 113: 47
        line 114: 58
        line 115: 69
        line 81: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  this   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
            0      81     1   out   Ljava/io/Writer;
            0      81     2 display   Lcoursier/cache/loggers/RefreshDisplay;
    MethodParameters:
      Name                           Flags
      out                            final
      display                        final

  public static final java.lang.Object $anonfun$run$3$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #438                // Method $anonfun$run$3:(Lscala/Tuple2;)D
         4: invokestatic  #442                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
         7: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #454,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #2 of #9;            // UpdateDisplayRunnable=class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable of class coursier/cache/loggers/RefreshLogger
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
  public static #20= #22 of #24;          // =class scala/math/Numeric$DoubleIsFractional$ of class scala/math/Numeric
  public static #20= #26 of #28;          // =class scala/math/Ordering$DeprecatedDoubleOrdering$ of class scala/math/Ordering
  public static #20= #30 of #28;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "RefreshLogger.scala"
BootstrapMethods:
  0: #172 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #157 ()Ljava/lang/Object;
      #162 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$1:(Ljava/lang/String;)Ljava/lang/String;
      #163 ()Ljava/lang/String;
      #164 5
      #165 1
      #163 ()Ljava/lang/String;
  1: #172 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #157 ()Ljava/lang/Object;
      #188 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$2:(Ljava/lang/String;)Ljava/lang/String;
      #163 ()Ljava/lang/String;
      #164 5
      #165 1
      #163 ()Ljava/lang/String;
  2: #172 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #157 ()Ljava/lang/Object;
      #230 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$removeEntry$1:(Ljava/lang/String;)Ljava/lang/String;
      #163 ()Ljava/lang/String;
      #164 5
      #165 1
      #163 ()Ljava/lang/String;
  3: #172 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #286 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$1:(Lscala/Tuple2;)Ljava/lang/String;
      #287 (Lscala/Tuple2;)Ljava/lang/String;
      #164 5
      #165 1
      #287 (Lscala/Tuple2;)Ljava/lang/String;
  4: #172 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #307 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$2:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;Ljava/lang/String;)Lscala/Tuple2;
      #309 (Ljava/lang/String;)Lscala/Tuple2;
      #164 5
      #165 1
      #309 (Ljava/lang/String;)Lscala/Tuple2;
  5: #172 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #323 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #324 (Lscala/Tuple2;)Ljava/lang/Object;
      #164 5
      #165 1
      #324 (Lscala/Tuple2;)Ljava/lang/Object;
  6: #451 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #162 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$1:(Ljava/lang/String;)Ljava/lang/String;
      #188 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$newEntry$2:(Ljava/lang/String;)Ljava/lang/String;
      #230 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$removeEntry$1:(Ljava/lang/String;)Ljava/lang/String;
      #286 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$1:(Lscala/Tuple2;)Ljava/lang/String;
      #307 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$2:(Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;Ljava/lang/String;)Lscala/Tuple2;
      #323 REF_invokeStatic coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.$anonfun$run$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 00 00 1B 00 9D 00 9E 01 00 BA 00 9E 01 00 E4
   00 9E 01 01 1D 01 1E 01 01 32 01 33 01 01 91 01
   92 01 01 42 01 43 01 01 4F 01 B0 00 00 24 00 36
   00 00 31 00 7E 01 00 2E 00 7E 01 00 4F 00 50 01
   00 33 00 85 00 00 43 00 44 00 00 26 00 3B 01 00
   3F 00 40 01 00 2C 00 73 01 00 89 00 8A 00 00 67
   00 69 00 00 29 00 69 01 00 6C 00 6D 01 00 D7 00
   D8 00 01 11 00 50 00 01 07 00 50 00 00 2B 00 69
   01 00 70 00 6D 01 00 76 00 50 00
  Scala: length = 0x0 (unknown attribute)

