Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/F32$.class
  Last modified May 29, 2022; size 5081 bytes
  SHA-256 checksum 6639275834eecb3dd858221fb52182d7ef0e720d3135160b2725cd4fed6f809d
  Compiled from "FloatingPoint.scala"
public final class org.sireum.F32$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/F32$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 27, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/F32$
    #2 = Class              #1            // org/sireum/F32$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               FloatingPoint.scala
    #6 = Utf8               org/sireum/F32$$String$
    #7 = Class              #6            // org/sireum/F32$$String$
    #8 = Utf8               org/sireum/F32
    #9 = Class              #8            // org/sireum/F32
   #10 = Utf8               $String$
   #11 = Utf8               org/sireum/F32$Boxer$
   #12 = Class              #11           // org/sireum/F32$Boxer$
   #13 = Utf8               Boxer$
   #14 = Utf8               MODULE$
   #15 = Utf8               Lorg/sireum/F32$;
   #16 = Utf8               <clinit>
   #17 = Utf8               ()V
   #18 = Utf8               <init>
   #19 = NameAndType        #18:#17       // "<init>":()V
   #20 = Methodref          #2.#19        // org/sireum/F32$."<init>":()V
   #21 = NameAndType        #14:#15       // MODULE$:Lorg/sireum/F32$;
   #22 = Fieldref           #2.#21        // org/sireum/F32$.MODULE$:Lorg/sireum/F32$;
   #23 = Utf8               apply
   #24 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
   #25 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/F32;>;
   #26 = Utf8               s
   #27 = Utf8               java/lang/Throwable
   #28 = Class              #27           // java/lang/Throwable
   #29 = Utf8               org/sireum/Some$
   #30 = Class              #29           // org/sireum/Some$
   #31 = Utf8               Lorg/sireum/Some$;
   #32 = NameAndType        #14:#31       // MODULE$:Lorg/sireum/Some$;
   #33 = Fieldref           #30.#32       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #34 = Utf8               Lorg/sireum/F32$$String$;
   #35 = NameAndType        #14:#34       // MODULE$:Lorg/sireum/F32$$String$;
   #36 = Fieldref           #7.#35        // org/sireum/F32$$String$.MODULE$:Lorg/sireum/F32$$String$;
   #37 = Utf8               (Ljava/lang/String;)F
   #38 = NameAndType        #23:#37       // apply:(Ljava/lang/String;)F
   #39 = Methodref          #7.#38        // org/sireum/F32$$String$.apply:(Ljava/lang/String;)F
   #40 = Utf8               (F)V
   #41 = NameAndType        #18:#40       // "<init>":(F)V
   #42 = Methodref          #9.#41        // org/sireum/F32."<init>":(F)V
   #43 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
   #44 = NameAndType        #23:#43       // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #45 = Methodref          #30.#44       // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #46 = Utf8               org/sireum/None$
   #47 = Class              #46           // org/sireum/None$
   #48 = Utf8               Lorg/sireum/None$;
   #49 = NameAndType        #14:#48       // MODULE$:Lorg/sireum/None$;
   #50 = Fieldref           #47.#49       // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #51 = Utf8               ()Lorg/sireum/None;
   #52 = NameAndType        #23:#51       // apply:()Lorg/sireum/None;
   #53 = Methodref          #47.#52       // org/sireum/None$.apply:()Lorg/sireum/None;
   #54 = Utf8               this
   #55 = Utf8               Ljava/lang/String;
   #56 = Utf8               random
   #57 = Utf8               ()F
   #58 = Utf8               java/util/Random
   #59 = Class              #58           // java/util/Random
   #60 = Methodref          #59.#19       // java/util/Random."<init>":()V
   #61 = Utf8               nextFloat
   #62 = NameAndType        #61:#57       // nextFloat:()F
   #63 = Methodref          #59.#62       // java/util/Random.nextFloat:()F
   #64 = Utf8               (F)F
   #65 = NameAndType        #23:#64       // apply:(F)F
   #66 = Methodref          #2.#65        // org/sireum/F32$.apply:(F)F
   #67 = Utf8               unapply
   #68 = Utf8               (F)Lscala/Option;
   #69 = Utf8               (F)Lscala/Option<Ljava/lang/Object;>;
   #70 = Utf8               f
   #71 = Utf8               scala/Some
   #72 = Class              #71           // scala/Some
   #73 = Utf8               scala/runtime/BoxesRunTime
   #74 = Class              #73           // scala/runtime/BoxesRunTime
   #75 = Utf8               boxToFloat
   #76 = Utf8               (F)Ljava/lang/Float;
   #77 = NameAndType        #75:#76       // boxToFloat:(F)Ljava/lang/Float;
   #78 = Methodref          #74.#77       // scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
   #79 = Utf8               (Ljava/lang/Object;)V
   #80 = NameAndType        #18:#79       // "<init>":(Ljava/lang/Object;)V
   #81 = Methodref          #72.#80       // scala/Some."<init>":(Ljava/lang/Object;)V
   #82 = Utf8               F
   #83 = Utf8               BitWidth$extension
   #84 = Utf8               (F)Lorg/sireum/Z;
   #85 = Utf8               $this
   #86 = Utf8               org/sireum/Z$
   #87 = Class              #86           // org/sireum/Z$
   #88 = Utf8               Lorg/sireum/Z$;
   #89 = NameAndType        #14:#88       // MODULE$:Lorg/sireum/Z$;
   #90 = Fieldref           #87.#89       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #91 = Utf8               (I)Lorg/sireum/Z;
   #92 = NameAndType        #23:#91       // apply:(I)Lorg/sireum/Z;
   #93 = Methodref          #87.#92       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #94 = Utf8               SignificandBitWidth$extension
   #95 = Utf8               ExponentBitWidth$extension
   #96 = Utf8               unary_$minus$extension
   #97 = Utf8               native$extension
   #98 = Utf8               $less$extension
   #99 = Utf8               (FF)Z
  #100 = Utf8               other
  #101 = Utf8               org/sireum/B$
  #102 = Class              #101          // org/sireum/B$
  #103 = Utf8               Lorg/sireum/B$;
  #104 = NameAndType        #14:#103      // MODULE$:Lorg/sireum/B$;
  #105 = Fieldref           #102.#104     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #106 = Utf8               (Z)Z
  #107 = NameAndType        #23:#106      // apply:(Z)Z
  #108 = Methodref          #102.#107     // org/sireum/B$.apply:(Z)Z
  #109 = Utf8               $less$eq$extension
  #110 = Utf8               $greater$extension
  #111 = Utf8               $greater$eq$extension
  #112 = Utf8               $eq$eq$eq$extension
  #113 = Utf8               $eq$bang$eq$extension
  #114 = Utf8               $plus$extension
  #115 = Utf8               (FF)F
  #116 = Utf8               $minus$extension
  #117 = Utf8               $times$extension
  #118 = Utf8               $div$extension
  #119 = Utf8               $percent$extension
  #120 = Utf8               string$extension
  #121 = Utf8               (F)Ljava/lang/String;
  #122 = Utf8               org/sireum/String$
  #123 = Class              #122          // org/sireum/String$
  #124 = Utf8               Lorg/sireum/String$;
  #125 = NameAndType        #14:#124      // MODULE$:Lorg/sireum/String$;
  #126 = Fieldref           #123.#125     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #127 = Utf8               toString$extension
  #128 = NameAndType        #127:#121     // toString$extension:(F)Ljava/lang/String;
  #129 = Methodref          #2.#128       // org/sireum/F32$.toString$extension:(F)Ljava/lang/String;
  #130 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #131 = NameAndType        #23:#130      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #132 = Methodref          #123.#131     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #133 = Utf8               boxer$extension
  #134 = Utf8               (F)Lorg/sireum/$internal/Boxer;
  #135 = Utf8               Lorg/sireum/F32$Boxer$;
  #136 = NameAndType        #14:#135      // MODULE$:Lorg/sireum/F32$Boxer$;
  #137 = Fieldref           #12.#136      // org/sireum/F32$Boxer$.MODULE$:Lorg/sireum/F32$Boxer$;
  #138 = Utf8               java/lang/Float
  #139 = Class              #138          // java/lang/Float
  #140 = Utf8               toString
  #141 = NameAndType        #140:#121     // toString:(F)Ljava/lang/String;
  #142 = Methodref          #139.#141     // java/lang/Float.toString:(F)Ljava/lang/String;
  #143 = Utf8               hashCode$extension
  #144 = Utf8               (F)I
  #145 = Utf8               hashCode
  #146 = NameAndType        #145:#144     // hashCode:(F)I
  #147 = Methodref          #139.#146     // java/lang/Float.hashCode:(F)I
  #148 = Utf8               equals$extension
  #149 = Utf8               (FLjava/lang/Object;)Z
  #150 = Utf8               x$1
  #151 = Utf8               value
  #152 = NameAndType        #151:#57      // value:()F
  #153 = Methodref          #9.#152       // org/sireum/F32.value:()F
  #154 = Utf8               Ljava/lang/Object;
  #155 = Methodref          #4.#19        // java/lang/Object."<init>":()V
  #156 = Utf8               Code
  #157 = Utf8               LineNumberTable
  #158 = Utf8               StackMapTable
  #159 = Utf8               LocalVariableTable
  #160 = Utf8               Signature
  #161 = Utf8               MethodParameters
  #162 = Utf8               InnerClasses
  #163 = Utf8               SourceFile
  #164 = Utf8               ScalaInlineInfo
  #165 = Utf8               Scala
{
  public static final org.sireum.F32$ MODULE$;
    descriptor: Lorg/sireum/F32$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/F32$
         3: dup
         4: invokespecial #20                 // Method "<init>":()V
         7: putstatic     #22                 // Field MODULE$:Lorg/sireum/F32$;
        10: return
      LineNumberTable:
        line 39: 0

  public org.sireum.Option<org.sireum.F32> apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: getstatic     #33                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         3: new           #9                  // class org/sireum/F32
         6: dup
         7: getstatic     #36                 // Field org/sireum/F32$$String$.MODULE$:Lorg/sireum/F32$$String$;
        10: aload_1
        11: invokevirtual #39                 // Method org/sireum/F32$$String$.apply:(Ljava/lang/String;)F
        14: invokespecial #42                 // Method org/sireum/F32."<init>":(F)V
        17: invokevirtual #45                 // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        20: goto          33
        23: pop
        24: getstatic     #50                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        27: invokevirtual #53                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        30: goto          33
        33: areturn
      Exception table:
         from    to  target type
             0    20    23   Class java/lang/Throwable
      StackMapTable: number_of_entries = 2
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 64: 0
        line 65: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/F32$;
            0      34     1     s   Ljava/lang/String;
    Signature: #25                          // (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/F32;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public float random();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: new           #59                 // class java/util/Random
         4: dup
         5: invokespecial #60                 // Method java/util/Random."<init>":()V
         8: invokevirtual #63                 // Method java/util/Random.nextFloat:()F
        11: invokevirtual #66                 // Method apply:(F)F
        14: freturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/F32$;

  public scala.Option<java.lang.Object> unapply(float);
    descriptor: (F)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #72                 // class scala/Some
         3: dup
         4: fload_1
         5: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
         8: invokespecial #81                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/F32$;
            0      12     1     f   F
    Signature: #69                          // (F)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public float apply(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: freturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/F32$;
            0       2     1     f   F
    MethodParameters:
      Name                           Flags
      f                              final

  public final org.sireum.Z BitWidth$extension(float);
    descriptor: (F)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #90                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: bipush        32
         5: invokevirtual #93                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         8: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/F32$;
            0       9     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.Z SignificandBitWidth$extension(float);
    descriptor: (F)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #90                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: bipush        24
         5: invokevirtual #93                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         8: areturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/F32$;
            0       9     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.Z ExponentBitWidth$extension(float);
    descriptor: (F)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #90                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: bipush        7
         5: invokevirtual #93                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         8: areturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/F32$;
            0       9     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final float unary_$minus$extension(float);
    descriptor: (F)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: fneg
         3: invokevirtual #66                 // Method apply:(F)F
         6: freturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/F32$;
            0       7     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final float native$extension(float);
    descriptor: (F)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: freturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/F32$;
            0       2     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean $less$extension(float, float);
    descriptor: (FF)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #105                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: fload_1
         4: fload_2
         5: fcmpg
         6: ifge          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: invokevirtual #108                // Method org/sireum/B$.apply:(Z)Z
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/F32$, float, float ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/F32$;
            0      18     1 $this   F
            0      18     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $less$eq$extension(float, float);
    descriptor: (FF)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #105                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: fload_1
         4: fload_2
         5: fcmpg
         6: ifgt          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: invokevirtual #108                // Method org/sireum/B$.apply:(Z)Z
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/F32$, float, float ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/F32$;
            0      18     1 $this   F
            0      18     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $greater$extension(float, float);
    descriptor: (FF)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #105                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: fload_1
         4: fload_2
         5: fcmpl
         6: ifle          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: invokevirtual #108                // Method org/sireum/B$.apply:(Z)Z
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/F32$, float, float ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/F32$;
            0      18     1 $this   F
            0      18     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $greater$eq$extension(float, float);
    descriptor: (FF)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #105                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: fload_1
         4: fload_2
         5: fcmpl
         6: iflt          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: invokevirtual #108                // Method org/sireum/B$.apply:(Z)Z
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/F32$, float, float ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/F32$;
            0      18     1 $this   F
            0      18     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $eq$eq$eq$extension(float, float);
    descriptor: (FF)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #105                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: fload_1
         4: fload_2
         5: fcmpl
         6: ifne          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: invokevirtual #108                // Method org/sireum/B$.apply:(Z)Z
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/F32$, float, float ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/F32$;
            0      18     1 $this   F
            0      18     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $eq$bang$eq$extension(float, float);
    descriptor: (FF)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #105                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: fload_1
         4: fload_2
         5: fcmpl
         6: ifeq          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: invokevirtual #108                // Method org/sireum/B$.apply:(Z)Z
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/F32$, float, float ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/F32$;
            0      18     1 $this   F
            0      18     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final float $plus$extension(float, float);
    descriptor: (FF)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: fadd
         4: invokevirtual #66                 // Method apply:(F)F
         7: freturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/F32$;
            0       8     1 $this   F
            0       8     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final float $minus$extension(float, float);
    descriptor: (FF)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: fsub
         4: invokevirtual #66                 // Method apply:(F)F
         7: freturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/F32$;
            0       8     1 $this   F
            0       8     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final float $times$extension(float, float);
    descriptor: (FF)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: fmul
         4: invokevirtual #66                 // Method apply:(F)F
         7: freturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/F32$;
            0       8     1 $this   F
            0       8     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final float $div$extension(float, float);
    descriptor: (FF)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: fdiv
         4: invokevirtual #66                 // Method apply:(F)F
         7: freturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/F32$;
            0       8     1 $this   F
            0       8     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final float $percent$extension(float, float);
    descriptor: (FF)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: frem
         4: invokevirtual #66                 // Method apply:(F)F
         7: freturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/F32$;
            0       8     1 $this   F
            0       8     2 other   F
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final java.lang.String string$extension(float);
    descriptor: (F)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #126                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         3: aload_0
         4: fload_1
         5: invokevirtual #129                // Method toString$extension:(F)Ljava/lang/String;
         8: invokevirtual #132                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        11: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/F32$;
            0      12     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.$internal.Boxer boxer$extension(float);
    descriptor: (F)Lorg/sireum/$internal/Boxer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #137                // Field org/sireum/F32$Boxer$.MODULE$:Lorg/sireum/F32$Boxer$;
         3: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/F32$;
            0       4     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final java.lang.String toString$extension(float);
    descriptor: (F)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: invokestatic  #142                // Method java/lang/Float.toString:(F)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/F32$;
            0       5     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(float);
    descriptor: (F)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: invokestatic  #147                // Method java/lang/Float.hashCode:(F)I
         4: ireturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/F32$;
            0       5     1 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(float, java.lang.Object);
    descriptor: (FLjava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=6, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #9                  // class org/sireum/F32
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          56
        28: aload_2
        29: checkcast     #9                  // class org/sireum/F32
        32: invokevirtual #153                // Method org/sireum/F32.value:()F
        35: fstore        5
        37: fload_1
        38: fload         5
        40: fcmpl
        41: ifne          48
        44: iconst_1
        45: goto          49
        48: iconst_0
        49: ifeq          56
        52: iconst_1
        53: goto          57
        56: iconst_0
        57: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/F32$, float, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ float ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lorg/sireum/F32$;
            0      58     1 $this   F
            0      58     2   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  private org.sireum.F32$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #155                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/F32$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/F32$$String$ of class org/sireum/F32
  public static #13= #12 of #9;           // Boxer$=class org/sireum/F32$Boxer$ of class org/sireum/F32
SourceFile: "FloatingPoint.scala"
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 00 76 00 73 05 00 71 00 63 05 00 70
   00 63 05 00 6F 00 63 05 00 6E 00 63 05 00 6D 00
   63 05 00 62 00 63 05 00 74 00 73 05 00 77 00 73
   05 00 72 00 73 05 00 75 00 73 05 00 12 00 11 01
   00 53 00 54 01 00 5F 00 54 01 00 5E 00 54 01 00
   17 00 40 01 00 17 00 18 01 00 85 00 86 01 00 94
   00 95 01 00 8F 00 90 01 00 61 00 40 01 00 38 00
   39 01 00 78 00 79 01 00 7F 00 79 01 00 43 00 44
   01 00 60 00 40 01
  Scala: length = 0x0 (unknown attribute)

