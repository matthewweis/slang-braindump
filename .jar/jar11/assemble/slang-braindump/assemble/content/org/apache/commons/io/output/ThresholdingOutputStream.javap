Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/ThresholdingOutputStream.class
  Last modified May 29, 2022; size 1978 bytes
  SHA-256 checksum aba7070c56d3275314b2a706c8855407ced615734b54d627b8fd87fd3aa06905
  Compiled from "ThresholdingOutputStream.java"
public abstract class org.apache.commons.io.output.ThresholdingOutputStream extends java.io.OutputStream
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #15                         // org/apache/commons/io/output/ThresholdingOutputStream
  super_class: #16                        // java/io/OutputStream
  interfaces: 0, fields: 3, methods: 14, attributes: 1
Constant pool:
   #1 = Methodref          #16.#59        // java/io/OutputStream."<init>":()V
   #2 = Fieldref           #15.#60        // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I
   #3 = Methodref          #15.#61        // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V
   #4 = Methodref          #15.#62        // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;
   #5 = Methodref          #16.#63        // java/io/OutputStream.write:(I)V
   #6 = Fieldref           #15.#64        // org/apache/commons/io/output/ThresholdingOutputStream.written:J
   #7 = Methodref          #16.#65        // java/io/OutputStream.write:([B)V
   #8 = Methodref          #16.#66        // java/io/OutputStream.write:([BII)V
   #9 = Methodref          #16.#67        // java/io/OutputStream.flush:()V
  #10 = Methodref          #15.#67        // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V
  #11 = Class              #68            // java/io/IOException
  #12 = Methodref          #16.#69        // java/io/OutputStream.close:()V
  #13 = Fieldref           #15.#70        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z
  #14 = Methodref          #15.#71        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V
  #15 = Class              #72            // org/apache/commons/io/output/ThresholdingOutputStream
  #16 = Class              #73            // java/io/OutputStream
  #17 = Utf8               threshold
  #18 = Utf8               I
  #19 = Utf8               written
  #20 = Utf8               J
  #21 = Utf8               thresholdExceeded
  #22 = Utf8               Z
  #23 = Utf8               <init>
  #24 = Utf8               (I)V
  #25 = Utf8               Code
  #26 = Utf8               LineNumberTable
  #27 = Utf8               LocalVariableTable
  #28 = Utf8               this
  #29 = Utf8               Lorg/apache/commons/io/output/ThresholdingOutputStream;
  #30 = Utf8               write
  #31 = Utf8               b
  #32 = Utf8               Exceptions
  #33 = Utf8               ([B)V
  #34 = Utf8               [B
  #35 = Utf8               ([BII)V
  #36 = Utf8               off
  #37 = Utf8               len
  #38 = Utf8               flush
  #39 = Utf8               ()V
  #40 = Utf8               close
  #41 = Utf8               StackMapTable
  #42 = Class              #68            // java/io/IOException
  #43 = Utf8               getThreshold
  #44 = Utf8               ()I
  #45 = Utf8               getByteCount
  #46 = Utf8               ()J
  #47 = Utf8               isThresholdExceeded
  #48 = Utf8               ()Z
  #49 = Utf8               checkThreshold
  #50 = Utf8               count
  #51 = Utf8               resetByteCount
  #52 = Utf8               setByteCount
  #53 = Utf8               (J)V
  #54 = Utf8               getStream
  #55 = Utf8               ()Ljava/io/OutputStream;
  #56 = Utf8               thresholdReached
  #57 = Utf8               SourceFile
  #58 = Utf8               ThresholdingOutputStream.java
  #59 = NameAndType        #23:#39        // "<init>":()V
  #60 = NameAndType        #17:#18        // threshold:I
  #61 = NameAndType        #49:#24        // checkThreshold:(I)V
  #62 = NameAndType        #54:#55        // getStream:()Ljava/io/OutputStream;
  #63 = NameAndType        #30:#24        // write:(I)V
  #64 = NameAndType        #19:#20        // written:J
  #65 = NameAndType        #30:#33        // write:([B)V
  #66 = NameAndType        #30:#35        // write:([BII)V
  #67 = NameAndType        #38:#39        // flush:()V
  #68 = Utf8               java/io/IOException
  #69 = NameAndType        #40:#39        // close:()V
  #70 = NameAndType        #21:#22        // thresholdExceeded:Z
  #71 = NameAndType        #56:#39        // thresholdReached:()V
  #72 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream
  #73 = Utf8               java/io/OutputStream
{
  private final int threshold;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private long written;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  private boolean thresholdExceeded;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.io.output.ThresholdingOutputStream(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
         4: aload_0
         5: iload_1
         6: putfield      #2                  // Field threshold:I
         9: return
      LineNumberTable:
        line 72: 0
        line 73: 4
        line 74: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
            0      10     1 threshold   I

  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_1
         2: invokevirtual #3                  // Method checkThreshold:(I)V
         5: aload_0
         6: invokevirtual #4                  // Method getStream:()Ljava/io/OutputStream;
         9: iload_1
        10: invokevirtual #5                  // Method java/io/OutputStream.write:(I)V
        13: aload_0
        14: dup
        15: getfield      #6                  // Field written:J
        18: lconst_1
        19: ladd
        20: putfield      #6                  // Field written:J
        23: return
      LineNumberTable:
        line 90: 0
        line 91: 5
        line 92: 13
        line 93: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
            0      24     1     b   I
    Exceptions:
      throws java.io.IOException

  public void write(byte[]) throws java.io.IOException;
    descriptor: ([B)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: arraylength
         3: invokevirtual #3                  // Method checkThreshold:(I)V
         6: aload_0
         7: invokevirtual #4                  // Method getStream:()Ljava/io/OutputStream;
        10: aload_1
        11: invokevirtual #7                  // Method java/io/OutputStream.write:([B)V
        14: aload_0
        15: dup
        16: getfield      #6                  // Field written:J
        19: aload_1
        20: arraylength
        21: i2l
        22: ladd
        23: putfield      #6                  // Field written:J
        26: return
      LineNumberTable:
        line 107: 0
        line 108: 6
        line 109: 14
        line 110: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
            0      27     1     b   [B
    Exceptions:
      throws java.io.IOException

  public void write(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: iload_3
         2: invokevirtual #3                  // Method checkThreshold:(I)V
         5: aload_0
         6: invokevirtual #4                  // Method getStream:()Ljava/io/OutputStream;
         9: aload_1
        10: iload_2
        11: iload_3
        12: invokevirtual #8                  // Method java/io/OutputStream.write:([BII)V
        15: aload_0
        16: dup
        17: getfield      #6                  // Field written:J
        20: iload_3
        21: i2l
        22: ladd
        23: putfield      #6                  // Field written:J
        26: return
      LineNumberTable:
        line 126: 0
        line 127: 5
        line 128: 15
        line 129: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
            0      27     1     b   [B
            0      27     2   off   I
            0      27     3   len   I
    Exceptions:
      throws java.io.IOException

  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #4                  // Method getStream:()Ljava/io/OutputStream;
         4: invokevirtual #9                  // Method java/io/OutputStream.flush:()V
         7: return
      LineNumberTable:
        line 141: 0
        line 142: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #10                 // Method flush:()V
         4: goto          8
         7: astore_1
         8: aload_0
         9: invokevirtual #4                  // Method getStream:()Ljava/io/OutputStream;
        12: invokevirtual #12                 // Method java/io/OutputStream.close:()V
        15: return
      Exception table:
         from    to  target type
             0     4     7   Class java/io/IOException
      LineNumberTable:
        line 156: 0
        line 161: 4
        line 158: 7
        line 162: 8
        line 163: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 0 /* same */
    Exceptions:
      throws java.io.IOException

  public int getThreshold();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field threshold:I
         4: ireturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;

  public long getByteCount();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field written:J
         4: lreturn
      LineNumberTable:
        line 187: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;

  public boolean isThresholdExceeded();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field written:J
         4: aload_0
         5: getfield      #2                  // Field threshold:I
         8: i2l
         9: lcmp
        10: ifle          17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: ireturn
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  protected void checkThreshold(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getfield      #13                 // Field thresholdExceeded:Z
         4: ifne          32
         7: aload_0
         8: getfield      #6                  // Field written:J
        11: iload_1
        12: i2l
        13: ladd
        14: aload_0
        15: getfield      #2                  // Field threshold:I
        18: i2l
        19: lcmp
        20: ifle          32
        23: aload_0
        24: iconst_1
        25: putfield      #13                 // Field thresholdExceeded:Z
        28: aload_0
        29: invokevirtual #14                 // Method thresholdReached:()V
        32: return
      LineNumberTable:
        line 219: 0
        line 221: 23
        line 222: 28
        line 224: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
            0      33     1 count   I
      StackMapTable: number_of_entries = 1
        frame_type = 32 /* same */
    Exceptions:
      throws java.io.IOException

  protected void resetByteCount();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: putfield      #13                 // Field thresholdExceeded:Z
         5: aload_0
         6: lconst_0
         7: putfield      #6                  // Field written:J
        10: return
      LineNumberTable:
        line 232: 0
        line 233: 5
        line 234: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;

  protected void setByteCount(long);
    descriptor: (J)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: putfield      #6                  // Field written:J
         5: return
      LineNumberTable:
        line 246: 0
        line 247: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;
            0       6     1 count   J

  protected abstract java.io.OutputStream getStream() throws java.io.IOException;
    descriptor: ()Ljava/io/OutputStream;
    flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  protected abstract void thresholdReached() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException
}
SourceFile: "ThresholdingOutputStream.java"
