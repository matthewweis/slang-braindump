Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/JsonIdentity$.class
  Last modified May 29, 2022; size 3084 bytes
  SHA-256 checksum d66d92fa92fbba90e17b816c7f902e95e5a454eb80820c34c92b6513cf44d1df
  Compiled from "JsonIdentity.scala"
public final class argonaut.JsonIdentity$ implements argonaut.JsonIdentitys
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/JsonIdentity$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 10, attributes: 3
Constant pool:
    #1 = Utf8               argonaut/JsonIdentity$
    #2 = Class              #1            // argonaut/JsonIdentity$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               argonaut/JsonIdentitys
    #6 = Class              #5            // argonaut/JsonIdentitys
    #7 = Utf8               JsonIdentity.scala
    #8 = Utf8               MODULE$
    #9 = Utf8               Largonaut/JsonIdentity$;
   #10 = Utf8               <clinit>
   #11 = Utf8               ()V
   #12 = Utf8               <init>
   #13 = NameAndType        #12:#11       // "<init>":()V
   #14 = Methodref          #2.#13        // argonaut/JsonIdentity$."<init>":()V
   #15 = NameAndType        #8:#9         // MODULE$:Largonaut/JsonIdentity$;
   #16 = Fieldref           #2.#15        // argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
   #17 = Utf8               $init$
   #18 = Utf8               (Largonaut/JsonIdentitys;)V
   #19 = NameAndType        #17:#18       // $init$:(Largonaut/JsonIdentitys;)V
   #20 = InterfaceMethodref #6.#19        // argonaut/JsonIdentitys.$init$:(Largonaut/JsonIdentitys;)V
   #21 = Utf8               ToJsonIdentity
   #22 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #23 = Utf8               <J:Ljava/lang/Object;>(TJ;)TJ;
   #24 = Utf8               k
   #25 = Utf8               ToJsonIdentity$
   #26 = Utf8               (Largonaut/JsonIdentitys;Ljava/lang/Object;)Ljava/lang/Object;
   #27 = NameAndType        #25:#26       // ToJsonIdentity$:(Largonaut/JsonIdentitys;Ljava/lang/Object;)Ljava/lang/Object;
   #28 = InterfaceMethodref #6.#27        // argonaut/JsonIdentitys.ToJsonIdentity$:(Largonaut/JsonIdentitys;Ljava/lang/Object;)Ljava/lang/Object;
   #29 = Utf8               this
   #30 = Utf8               Ljava/lang/Object;
   #31 = Utf8               FromJsonIdentity
   #32 = Utf8               FromJsonIdentity$
   #33 = NameAndType        #32:#26       // FromJsonIdentity$:(Largonaut/JsonIdentitys;Ljava/lang/Object;)Ljava/lang/Object;
   #34 = InterfaceMethodref #6.#33        // argonaut/JsonIdentitys.FromJsonIdentity$:(Largonaut/JsonIdentitys;Ljava/lang/Object;)Ljava/lang/Object;
   #35 = Utf8               jencode$extension
   #36 = Utf8               (Ljava/lang/Object;Largonaut/EncodeJson;)Largonaut/Json;
   #37 = Utf8               <J:Ljava/lang/Object;>(TJ;Largonaut/EncodeJson<TJ;>;)Largonaut/Json;
   #38 = Utf8               $this
   #39 = Utf8               e
   #40 = Utf8               argonaut/EncodeJson
   #41 = Class              #40           // argonaut/EncodeJson
   #42 = Utf8               apply
   #43 = Utf8               (Ljava/lang/Object;)Largonaut/Json;
   #44 = NameAndType        #42:#43       // apply:(Ljava/lang/Object;)Largonaut/Json;
   #45 = InterfaceMethodref #41.#44       // argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
   #46 = Utf8               Largonaut/EncodeJson;
   #47 = Utf8               asJson$extension
   #48 = NameAndType        #35:#36       // jencode$extension:(Ljava/lang/Object;Largonaut/EncodeJson;)Largonaut/Json;
   #49 = Methodref          #2.#48        // argonaut/JsonIdentity$.jencode$extension:(Ljava/lang/Object;Largonaut/EncodeJson;)Largonaut/Json;
   #50 = Utf8               asJsonNumber$extension
   #51 = Utf8               (Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
   #52 = Utf8               <J:Ljava/lang/Object;>(TJ;Largonaut/EncodeJsonNumber<TJ;>;)Largonaut/JsonNumber;
   #53 = Utf8               asn
   #54 = Utf8               argonaut/EncodeJsonNumber
   #55 = Class              #54           // argonaut/EncodeJsonNumber
   #56 = Utf8               encodeJsonNumber
   #57 = Utf8               (Ljava/lang/Object;)Largonaut/JsonNumber;
   #58 = NameAndType        #56:#57       // encodeJsonNumber:(Ljava/lang/Object;)Largonaut/JsonNumber;
   #59 = InterfaceMethodref #55.#58       // argonaut/EncodeJsonNumber.encodeJsonNumber:(Ljava/lang/Object;)Largonaut/JsonNumber;
   #60 = Utf8               Largonaut/EncodeJsonNumber;
   #61 = Utf8               asPossibleJsonNumber$extension
   #62 = Utf8               (Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
   #63 = Utf8               <J:Ljava/lang/Object;>(TJ;Largonaut/EncodePossibleJsonNumber<TJ;>;)Lscala/Option<Largonaut/JsonNumber;>;
   #64 = Utf8               argonaut/EncodePossibleJsonNumber
   #65 = Class              #64           // argonaut/EncodePossibleJsonNumber
   #66 = Utf8               possiblyEncodeJsonNumber
   #67 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #68 = NameAndType        #66:#67       // possiblyEncodeJsonNumber:(Ljava/lang/Object;)Lscala/Option;
   #69 = InterfaceMethodref #65.#68       // argonaut/EncodePossibleJsonNumber.possiblyEncodeJsonNumber:(Ljava/lang/Object;)Lscala/Option;
   #70 = Utf8               Largonaut/EncodePossibleJsonNumber;
   #71 = Utf8               hashCode$extension
   #72 = Utf8               (Ljava/lang/Object;)I
   #73 = Utf8               <J:Ljava/lang/Object;>(TJ;)I
   #74 = Utf8               hashCode
   #75 = Utf8               ()I
   #76 = NameAndType        #74:#75       // hashCode:()I
   #77 = Methodref          #4.#76        // java/lang/Object.hashCode:()I
   #78 = Utf8               equals$extension
   #79 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #80 = Utf8               <J:Ljava/lang/Object;>(TJ;Ljava/lang/Object;)Z
   #81 = Utf8               x$1
   #82 = Utf8               argonaut/JsonIdentity
   #83 = Class              #82           // argonaut/JsonIdentity
   #84 = Utf8               j
   #85 = Utf8               ()Ljava/lang/Object;
   #86 = NameAndType        #84:#85       // j:()Ljava/lang/Object;
   #87 = Methodref          #83.#86       // argonaut/JsonIdentity.j:()Ljava/lang/Object;
   #88 = Utf8               scala/runtime/BoxesRunTime
   #89 = Class              #88           // scala/runtime/BoxesRunTime
   #90 = Utf8               equals
   #91 = NameAndType        #90:#79       // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #92 = Methodref          #89.#91       // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #93 = Methodref          #4.#13        // java/lang/Object."<init>":()V
   #94 = Utf8               Code
   #95 = Utf8               LineNumberTable
   #96 = Utf8               LocalVariableTable
   #97 = Utf8               Signature
   #98 = Utf8               MethodParameters
   #99 = Utf8               StackMapTable
  #100 = Utf8               SourceFile
  #101 = Utf8               ScalaInlineInfo
  #102 = Utf8               Scala
{
  public static final argonaut.JsonIdentity$ MODULE$;
    descriptor: Largonaut/JsonIdentity$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class argonaut/JsonIdentity$
         3: dup
         4: invokespecial #14                 // Method "<init>":()V
         7: putstatic     #16                 // Field MODULE$:Largonaut/JsonIdentity$;
        10: getstatic     #16                 // Field MODULE$:Largonaut/JsonIdentity$;
        13: invokestatic  #20                 // InterfaceMethod argonaut/JsonIdentitys.$init$:(Largonaut/JsonIdentitys;)V
        16: return
      LineNumberTable:
        line 26: 0

  public <J extends java.lang.Object> J ToJsonIdentity(J);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #28                 // InterfaceMethod argonaut/JsonIdentitys.ToJsonIdentity$:(Largonaut/JsonIdentitys;Ljava/lang/Object;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/JsonIdentity$;
            0       6     1     k   Ljava/lang/Object;
    Signature: #23                          // <J:Ljava/lang/Object;>(TJ;)TJ;
    MethodParameters:
      Name                           Flags
      k                              final

  public <J extends java.lang.Object> J FromJsonIdentity(J);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #34                 // InterfaceMethod argonaut/JsonIdentitys.FromJsonIdentity$:(Largonaut/JsonIdentitys;Ljava/lang/Object;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/JsonIdentity$;
            0       6     1     k   Ljava/lang/Object;
    Signature: #23                          // <J:Ljava/lang/Object;>(TJ;)TJ;
    MethodParameters:
      Name                           Flags
      k                              final

  public final <J extends java.lang.Object> argonaut.Json jencode$extension(J, argonaut.EncodeJson<J>);
    descriptor: (Ljava/lang/Object;Largonaut/EncodeJson;)Largonaut/Json;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: aload_1
         2: invokeinterface #45,  2           // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 8: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonIdentity$;
            0       8     1 $this   Ljava/lang/Object;
            0       8     2     e   Largonaut/EncodeJson;
    Signature: #37                          // <J:Ljava/lang/Object;>(TJ;Largonaut/EncodeJson<TJ;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final
      e                              final

  public final <J extends java.lang.Object> argonaut.Json asJson$extension(J, argonaut.EncodeJson<J>);
    descriptor: (Ljava/lang/Object;Largonaut/EncodeJson;)Largonaut/Json;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #49                 // Method jencode$extension:(Ljava/lang/Object;Largonaut/EncodeJson;)Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 13: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Largonaut/JsonIdentity$;
            0       7     1 $this   Ljava/lang/Object;
            0       7     2     e   Largonaut/EncodeJson;
    Signature: #37                          // <J:Ljava/lang/Object;>(TJ;Largonaut/EncodeJson<TJ;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final
      e                              final

  public final <J extends java.lang.Object> argonaut.JsonNumber asJsonNumber$extension(J, argonaut.EncodeJsonNumber<J>);
    descriptor: (Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: aload_1
         2: invokeinterface #59,  2           // InterfaceMethod argonaut/EncodeJsonNumber.encodeJsonNumber:(Ljava/lang/Object;)Largonaut/JsonNumber;
         7: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonIdentity$;
            0       8     1 $this   Ljava/lang/Object;
            0       8     2   asn   Largonaut/EncodeJsonNumber;
    Signature: #52                          // <J:Ljava/lang/Object;>(TJ;Largonaut/EncodeJsonNumber<TJ;>;)Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      $this                          final
      asn                            final

  public final <J extends java.lang.Object> scala.Option<argonaut.JsonNumber> asPossibleJsonNumber$extension(J, argonaut.EncodePossibleJsonNumber<J>);
    descriptor: (Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: aload_1
         2: invokeinterface #69,  2           // InterfaceMethod argonaut/EncodePossibleJsonNumber.possiblyEncodeJsonNumber:(Ljava/lang/Object;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonIdentity$;
            0       8     1 $this   Ljava/lang/Object;
            0       8     2   asn   Largonaut/EncodePossibleJsonNumber;
    Signature: #63                          // <J:Ljava/lang/Object;>(TJ;Largonaut/EncodePossibleJsonNumber<TJ;>;)Lscala/Option<Largonaut/JsonNumber;>;
    MethodParameters:
      Name                           Flags
      $this                          final
      asn                            final

  public final <J extends java.lang.Object> int hashCode$extension(J);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #77                 // Method java/lang/Object.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonIdentity$;
            0       5     1 $this   Ljava/lang/Object;
    Signature: #73                          // <J:Ljava/lang/Object;>(TJ;)I
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <J extends java.lang.Object> boolean equals$extension(J, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=6, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #83                 // class argonaut/JsonIdentity
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          66
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #83                 // class argonaut/JsonIdentity
        40: invokevirtual #87                 // Method argonaut/JsonIdentity.j:()Ljava/lang/Object;
        43: astore        5
        45: aload_1
        46: aload         5
        48: invokestatic  #92                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        51: ifeq          58
        54: iconst_1
        55: goto          59
        58: iconst_0
        59: ifeq          66
        62: iconst_1
        63: goto          67
        66: iconst_0
        67: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/JsonIdentity$, class java/lang/Object, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/Object ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Largonaut/JsonIdentity$;
            0      68     1 $this   Ljava/lang/Object;
            0      68     2   x$1   Ljava/lang/Object;
    Signature: #80                          // <J:Ljava/lang/Object;>(TJ;Ljava/lang/Object;)Z
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  private argonaut.JsonIdentity$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #93                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonIdentity$;
}
SourceFile: "JsonIdentity.scala"
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 0C 00 0B 01 00 1F 00 16 01 00 15
   00 16 01 00 2F 00 24 01 00 32 00 33 01 00 3D 00
   3E 01 00 4E 00 4F 01 00 47 00 48 01 00 23 00 24
   01
  Scala: length = 0x0 (unknown attribute)

