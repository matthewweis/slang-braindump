Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/anyvals/CompileTimeAssertions.class
  Last modified May 29, 2022; size 9267 bytes
  SHA-256 checksum beecb4281a428ffbb59afe1df669f2043079a9d2e758830a30c098ae1d20d43f
  Compiled from "CompileTimeAssertions.scala"
public interface org.scalactic.anyvals.CompileTimeAssertions
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalactic/anyvals/CompileTimeAssertions
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 13, attributes: 5
Constant pool:
    #1 = Utf8               org/scalactic/anyvals/CompileTimeAssertions
    #2 = Class              #1            // org/scalactic/anyvals/CompileTimeAssertions
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               CompileTimeAssertions.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u00055caB\u0006\r!\u0003\r\ta\u0005\u0005\u00065\u0001!\ta\u0007\u0005\u0006?\u0001!\t\u0001\t\u0005\u0006/\u0002!\t\u0001\u0017\u0005\u0006M\u0002!\ta\u001a\u0005\u0006k\u0002!\tA\u001e\u0005\b\u0003\u0013\u0001A\u0011AA\u0006\u0011\u001d\t\t\u0003\u0001C\u0001\u0003G9q!a\u0010\r\u0011\u0003\t\tE\u0002\u0004\f\u0019!\u0005\u0011Q\t\u0005\b\u0003\u0013JA\u0011AA&\u0005U\u0019u.\u001c9jY\u0016$\u0016.\\3BgN,\'\u000f^5p]NT!!\u0004\b\u0002\u000f\u0005t\u0017P^1mg*\u0011q\u0002E\u0001\ng\u000e\fG.Y2uS\u000eT\u0011!E\u0001\u0004_J<7\u0001A\n\u0003\u0001Q\u0001\"!\u0006\r\u000e\u0003YQ\u0011aF\u0001\u0006g\u000e\fG.Y\u0005\u00033Y\u0011a!\u00118z%\u00164\u0017A\u0002\u0013j]&$H\u0005F\u0001\u001d!\t)R$\u0003\u0002\u001f-\t!QK\\5u\u0003U)gn];sKZ\u000bG.\u001b3J]Rd\u0015\u000e^3sC2$\"!I\u001a\u0015\t\tr\u0003*\u0016\u000b\u00039\rBQ\u0001\n\u0002A\u0002\u0015\nq![:WC2LG\r\u0005\u0003\u0016M!Z\u0013BA\u0014\u0017\u0005%1UO\\2uS>t\u0017\u0007\u0005\u0002\u0016S%\u0011!F\u0006\u0002\u0004\u0013:$\bCA\u000b-\u0013\ticCA\u0004C_>dW-\u00198\t\u000b=\u0012\u0001\u0019\u0001\u0019\u0002\u000bY\fG.^3\u0011\u0007E\"\u0005F\u0004\u00023g1\u0001\u0001\"\u0002\u001b\u0003\u0001\u0004)\u0014!A2\u0011\u0005Y\neBA\u001c?\u001d\tA4H\u0004\u0002\u0016s%\u0011!HF\u0001\be\u00164G.Z2u\u0013\taT(\u0001\u0004nC\u000e\u0014xn\u001d\u0006\u0003uYI!a\u0010!\u0002\u000fA\f7m[1hK*\u0011A(P\u0005\u0003\u0005\u000e\u0013qaQ8oi\u0016DHO\u0003\u0002@\u0001&\u0011QI\u0012\u0002\u0005\u000bb\u0004(/\u0003\u0002H\u0001\n9\u0011\t\\5bg\u0016\u001c\b\"B%\u0003\u0001\u0004Q\u0015a\u00038piZ\u000bG.\u001b3Ng\u001e\u0004\"a\u0013*\u000f\u00051\u0003\u0006CA\'\u0017\u001b\u0005q%BA(\u0013\u0003\u0019a$o\\8u}%\u0011\u0011KF\u0001\u0007!J,G-\u001a4\n\u0005M#&AB*ue&twM\u0003\u0002R-!)aK\u0001a\u0001\u0015\u0006ian\u001c;MSR,\'/\u00197Ng\u001e\fa#\u001a8tkJ,g+\u00197jI2{gn\u001a\'ji\u0016\u0014\u0018\r\u001c\u000b\u00033\u000e$BA\u00171eKR\u0011Ad\u0017\u0005\u0006I\r\u0001\r\u0001\u0018\t\u0005+\u0019j6\u0006\u0005\u0002\u0016=&\u0011qL\u0006\u0002\u0005\u0019>tw\rC\u00030\u0007\u0001\u0007\u0011\rE\u0002c\tvs!AM2\t\u000bQ\u001a\u0001\u0019A\u001b\t\u000b%\u001b\u0001\u0019\u0001&\t\u000bY\u001b\u0001\u0019\u0001&\u0002/\u0015t7/\u001e:f-\u0006d\u0017\u000e\u001a$m_\u0006$H*\u001b;fe\u0006dGC\u00015s)\u0011Iwn\u001d;\u0015\u0005qQ\u0007\"\u0002\u0013\u0005\u0001\u0004Y\u0007\u0003B\u000b\'Y.\u0002\"!F7\n\u000594\"!\u0002$m_\u0006$\b\"B\u0018\u0005\u0001\u0004\u0001\bcA9EY:\u0011!G\u001d\u0005\u0006i\u0011\u0001\r!\u000e\u0005\u0006\u0013\u0012\u0001\rA\u0013\u0005\u0006-\u0012\u0001\rAS\u0001\u0019K:\u001cXO]3WC2LG\rR8vE2,G*\u001b;fe\u0006dGcA<\u0002\u0004Q1\u0001P`A\u0003\u0003\u000f!\"\u0001H=\t\u000b\u0011*\u0001\u0019\u0001>\u0011\tU13p\u000b\t\u0003+qL!! \f\u0003\r\u0011{WO\u00197f\u0011\u0015yS\u00011\u0001\u0000!\u0011\t\t\u0001R>\u000f\u0007I\n\u0019\u0001C\u00035\u000b\u0001\u0007Q\u0007C\u0003J\u000b\u0001\u0007!\nC\u0003W\u000b\u0001\u0007!*\u0001\rf]N,(/\u001a,bY&$7\u000b\u001e:j]\u001ed\u0015\u000e^3sC2$B!!\u0004\u0002\u001cQA\u0011qBA\u000b\u0003;\ty\u0002F\u0002\u001d\u0003#Aa\u0001\n\u0004A\u0002\u0005M\u0001\u0003B\u000b\'\u0015.Baa\f\u0004A\u0002\u0005]\u0001\u0003BA\r\t*s1AMA\u000e\u0011\u0015!d\u00011\u00016\u0011\u0015Ie\u00011\u0001K\u0011\u00151f\u00011\u0001K\u0003Y)gn];sKZ\u000bG.\u001b3DQ\u0006\u0014H*\u001b;fe\u0006dG\u0003BA\u0013\u0003s!\u0002\"a\n\u00024\u0005m\u0012Q\b\u000b\u00049\u0005%\u0002B\u0002\u0013\b\u0001\u0004\tY\u0003E\u0003\u0016M\u000552\u0006E\u0002\u0016\u0003_I1!!\r\u0017\u0005\u0011\u0019\u0005.\u0019:\t\r=:\u0001\u0019AA\u001b!\u0015\t9\u0004RA\u0017\u001d\r\u0011\u0014\u0011\b\u0005\u0006i\u001d\u0001\r!\u000e\u0005\u0006\u0013\u001e\u0001\rA\u0013\u0005\u0006-\u001e\u0001\rAS\u0001\u0016\u0007>l\u0007/\u001b7f)&lW-Q:tKJ$\u0018n\u001c8t!\r\t\u0019%C\u0007\u0002\u0019M!\u0011\u0002FA$!\r\t\u0019\u0005A\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005\u0005\u0005\u0003
    #9 = Utf8               scala/reflect/api/Constants$ConstantApi
   #10 = Class              #9            // scala/reflect/api/Constants$ConstantApi
   #11 = Utf8               scala/reflect/api/Constants
   #12 = Class              #11           // scala/reflect/api/Constants
   #13 = Utf8               ConstantApi
   #14 = Utf8               scala/reflect/api/Exprs$Expr
   #15 = Class              #14           // scala/reflect/api/Exprs$Expr
   #16 = Utf8               scala/reflect/api/Exprs
   #17 = Class              #16           // scala/reflect/api/Exprs
   #18 = Utf8               Expr
   #19 = Utf8               scala/reflect/api/Trees$LiteralApi
   #20 = Class              #19           // scala/reflect/api/Trees$LiteralApi
   #21 = Utf8               scala/reflect/api/Trees
   #22 = Class              #21           // scala/reflect/api/Trees
   #23 = Utf8               LiteralApi
   #24 = Utf8               scala/reflect/api/Trees$LiteralExtractor
   #25 = Class              #24           // scala/reflect/api/Trees$LiteralExtractor
   #26 = Utf8               LiteralExtractor
   #27 = Utf8               scala/reflect/api/Trees$TreeApi
   #28 = Class              #27           // scala/reflect/api/Trees$TreeApi
   #29 = Utf8               TreeApi
   #30 = Utf8               ensureValidIntLiteral$
   #31 = Utf8               (Lorg/scalactic/anyvals/CompileTimeAssertions;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
   #32 = Utf8               $this
   #33 = Utf8               c
   #34 = Utf8               value
   #35 = Utf8               notValidMsg
   #36 = Utf8               notLiteralMsg
   #37 = Utf8               isValid
   #38 = Utf8               ensureValidIntLiteral
   #39 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
   #40 = NameAndType        #38:#39       // ensureValidIntLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
   #41 = InterfaceMethodref #2.#40        // org/scalactic/anyvals/CompileTimeAssertions.ensureValidIntLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
   #42 = Utf8               Lorg/scalactic/anyvals/CompileTimeAssertions;
   #43 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #44 = Utf8               Lscala/reflect/api/Exprs$Expr;
   #45 = Utf8               Ljava/lang/String;
   #46 = Utf8               Lscala/Function1;
   #47 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
   #48 = Utf8               tree
   #49 = Utf8               ()Lscala/reflect/api/Trees$TreeApi;
   #50 = NameAndType        #48:#49       // tree:()Lscala/reflect/api/Trees$TreeApi;
   #51 = InterfaceMethodref #15.#50       // scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
   #52 = Utf8               scala/reflect/macros/whitebox/Context
   #53 = Class              #52           // scala/reflect/macros/whitebox/Context
   #54 = Utf8               universe
   #55 = Utf8               ()Lscala/reflect/macros/Universe;
   #56 = NameAndType        #54:#55       // universe:()Lscala/reflect/macros/Universe;
   #57 = InterfaceMethodref #53.#56       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #58 = Utf8               scala/reflect/macros/Universe
   #59 = Class              #58           // scala/reflect/macros/Universe
   #60 = Utf8               LiteralTag
   #61 = Utf8               ()Lscala/reflect/ClassTag;
   #62 = NameAndType        #60:#61       // LiteralTag:()Lscala/reflect/ClassTag;
   #63 = Methodref          #59.#62       // scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
   #64 = Utf8               scala/reflect/ClassTag
   #65 = Class              #64           // scala/reflect/ClassTag
   #66 = Utf8               unapply
   #67 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #68 = NameAndType        #66:#67       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #69 = InterfaceMethodref #65.#68       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #70 = Utf8               scala/Option
   #71 = Class              #70           // scala/Option
   #72 = Utf8               isEmpty
   #73 = Utf8               ()Z
   #74 = NameAndType        #72:#73       // isEmpty:()Z
   #75 = Methodref          #71.#74       // scala/Option.isEmpty:()Z
   #76 = Utf8               get
   #77 = Utf8               ()Ljava/lang/Object;
   #78 = NameAndType        #76:#77       // get:()Ljava/lang/Object;
   #79 = Methodref          #71.#78       // scala/Option.get:()Ljava/lang/Object;
   #80 = Utf8               Literal
   #81 = Utf8               ()Lscala/reflect/api/Trees$LiteralExtractor;
   #82 = NameAndType        #80:#81       // Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
   #83 = Methodref          #59.#82       // scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
   #84 = Utf8               (Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
   #85 = NameAndType        #66:#84       // unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
   #86 = Methodref          #25.#85       // scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
   #87 = Utf8               scala/collection/StringOps$
   #88 = Class              #87           // scala/collection/StringOps$
   #89 = Utf8               MODULE$
   #90 = Utf8               Lscala/collection/StringOps$;
   #91 = NameAndType        #89:#90       // MODULE$:Lscala/collection/StringOps$;
   #92 = Fieldref           #88.#91       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #93 = Utf8               scala/Predef$
   #94 = Class              #93           // scala/Predef$
   #95 = Utf8               Lscala/Predef$;
   #96 = NameAndType        #89:#95       // MODULE$:Lscala/Predef$;
   #97 = Fieldref           #94.#96       // scala/Predef$.MODULE$:Lscala/Predef$;
   #98 = NameAndType        #34:#77       // value:()Ljava/lang/Object;
   #99 = Methodref          #10.#98       // scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
  #100 = Utf8               toString
  #101 = Utf8               ()Ljava/lang/String;
  #102 = NameAndType        #100:#101     // toString:()Ljava/lang/String;
  #103 = Methodref          #4.#102       // java/lang/Object.toString:()Ljava/lang/String;
  #104 = Utf8               augmentString
  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #106 = NameAndType        #104:#105     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #107 = Methodref          #94.#106      // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #108 = Utf8               toInt$extension
  #109 = Utf8               (Ljava/lang/String;)I
  #110 = NameAndType        #108:#109     // toInt$extension:(Ljava/lang/String;)I
  #111 = Methodref          #88.#110      // scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
  #112 = Utf8               scala/Function1
  #113 = Class              #112          // scala/Function1
  #114 = Utf8               apply$mcZI$sp
  #115 = Utf8               (I)Z
  #116 = NameAndType        #114:#115     // apply$mcZI$sp:(I)Z
  #117 = InterfaceMethodref #113.#116     // scala/Function1.apply$mcZI$sp:(I)Z
  #118 = Utf8               enclosingPosition
  #119 = Utf8               ()Lscala/reflect/api/Position;
  #120 = NameAndType        #118:#119     // enclosingPosition:()Lscala/reflect/api/Position;
  #121 = InterfaceMethodref #53.#120      // scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
  #122 = Utf8               abort
  #123 = Utf8               (Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #124 = NameAndType        #122:#123     // abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #125 = InterfaceMethodref #53.#124      // scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #126 = Utf8               scala/runtime/BoxedUnit
  #127 = Class              #126          // scala/runtime/BoxedUnit
  #128 = Utf8               UNIT
  #129 = Utf8               Lscala/runtime/BoxedUnit;
  #130 = NameAndType        #128:#129     // UNIT:Lscala/runtime/BoxedUnit;
  #131 = Fieldref           #127.#130     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #132 = Utf8               literalValue
  #133 = Utf8               I
  #134 = Utf8               intConst
  #135 = Utf8               Lscala/reflect/api/Constants$ConstantApi;
  #136 = Utf8               this
  #137 = Utf8               java/lang/String
  #138 = Class              #137          // java/lang/String
  #139 = Utf8               ensureValidLongLiteral$
  #140 = Utf8               ensureValidLongLiteral
  #141 = NameAndType        #140:#39      // ensureValidLongLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #142 = InterfaceMethodref #2.#141       // org/scalactic/anyvals/CompileTimeAssertions.ensureValidLongLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #143 = Utf8               toLong$extension
  #144 = Utf8               (Ljava/lang/String;)J
  #145 = NameAndType        #143:#144     // toLong$extension:(Ljava/lang/String;)J
  #146 = Methodref          #88.#145      // scala/collection/StringOps$.toLong$extension:(Ljava/lang/String;)J
  #147 = Utf8               apply$mcZJ$sp
  #148 = Utf8               (J)Z
  #149 = NameAndType        #147:#148     // apply$mcZJ$sp:(J)Z
  #150 = InterfaceMethodref #113.#149     // scala/Function1.apply$mcZJ$sp:(J)Z
  #151 = Utf8               J
  #152 = Utf8               longConst
  #153 = Utf8               ensureValidFloatLiteral$
  #154 = Utf8               ensureValidFloatLiteral
  #155 = NameAndType        #154:#39      // ensureValidFloatLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #156 = InterfaceMethodref #2.#155       // org/scalactic/anyvals/CompileTimeAssertions.ensureValidFloatLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #157 = Utf8               toFloat$extension
  #158 = Utf8               (Ljava/lang/String;)F
  #159 = NameAndType        #157:#158     // toFloat$extension:(Ljava/lang/String;)F
  #160 = Methodref          #88.#159      // scala/collection/StringOps$.toFloat$extension:(Ljava/lang/String;)F
  #161 = Utf8               apply$mcZF$sp
  #162 = Utf8               (F)Z
  #163 = NameAndType        #161:#162     // apply$mcZF$sp:(F)Z
  #164 = InterfaceMethodref #113.#163     // scala/Function1.apply$mcZF$sp:(F)Z
  #165 = Utf8               F
  #166 = Utf8               floatConst
  #167 = Utf8               ensureValidDoubleLiteral$
  #168 = Utf8               ensureValidDoubleLiteral
  #169 = NameAndType        #168:#39      // ensureValidDoubleLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #170 = InterfaceMethodref #2.#169       // org/scalactic/anyvals/CompileTimeAssertions.ensureValidDoubleLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #171 = Utf8               toDouble$extension
  #172 = Utf8               (Ljava/lang/String;)D
  #173 = NameAndType        #171:#172     // toDouble$extension:(Ljava/lang/String;)D
  #174 = Methodref          #88.#173      // scala/collection/StringOps$.toDouble$extension:(Ljava/lang/String;)D
  #175 = Utf8               apply$mcZD$sp
  #176 = Utf8               (D)Z
  #177 = NameAndType        #175:#176     // apply$mcZD$sp:(D)Z
  #178 = InterfaceMethodref #113.#177     // scala/Function1.apply$mcZD$sp:(D)Z
  #179 = Utf8               D
  #180 = Utf8               doubleConst
  #181 = Utf8               ensureValidStringLiteral$
  #182 = Utf8               ensureValidStringLiteral
  #183 = NameAndType        #182:#39      // ensureValidStringLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #184 = InterfaceMethodref #2.#183       // org/scalactic/anyvals/CompileTimeAssertions.ensureValidStringLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #185 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Ljava/lang/Object;>;)V
  #186 = Utf8               apply
  #187 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #188 = NameAndType        #186:#187     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #189 = InterfaceMethodref #113.#188     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #190 = Utf8               scala/runtime/BoxesRunTime
  #191 = Class              #190          // scala/runtime/BoxesRunTime
  #192 = Utf8               unboxToBoolean
  #193 = Utf8               (Ljava/lang/Object;)Z
  #194 = NameAndType        #192:#193     // unboxToBoolean:(Ljava/lang/Object;)Z
  #195 = Methodref          #191.#194     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #196 = Utf8               stringConst
  #197 = Utf8               ensureValidCharLiteral$
  #198 = Utf8               ensureValidCharLiteral
  #199 = NameAndType        #198:#39      // ensureValidCharLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #200 = InterfaceMethodref #2.#199       // org/scalactic/anyvals/CompileTimeAssertions.ensureValidCharLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #201 = Utf8               head$extension
  #202 = Utf8               (Ljava/lang/String;)C
  #203 = NameAndType        #201:#202     // head$extension:(Ljava/lang/String;)C
  #204 = Methodref          #88.#203      // scala/collection/StringOps$.head$extension:(Ljava/lang/String;)C
  #205 = Utf8               boxToCharacter
  #206 = Utf8               (C)Ljava/lang/Character;
  #207 = NameAndType        #205:#206     // boxToCharacter:(C)Ljava/lang/Character;
  #208 = Methodref          #191.#207     // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #209 = Utf8               C
  #210 = Utf8               charConst
  #211 = Utf8               $init$
  #212 = Utf8               (Lorg/scalactic/anyvals/CompileTimeAssertions;)V
  #213 = Utf8               Code
  #214 = Utf8               LineNumberTable
  #215 = Utf8               LocalVariableTable
  #216 = Utf8               MethodParameters
  #217 = Utf8               StackMapTable
  #218 = Utf8               Signature
  #219 = Utf8               InnerClasses
  #220 = Utf8               SourceFile
  #221 = Utf8               RuntimeVisibleAnnotations
  #222 = Utf8               ScalaInlineInfo
  #223 = Utf8               ScalaSig
{
  public static void ensureValidIntLiteral$(org.scalactic.anyvals.CompileTimeAssertions, scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr, java.lang.String, java.lang.String, scala.Function1);
    descriptor: (Lorg/scalactic/anyvals/CompileTimeAssertions;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: invokespecial #41                 // InterfaceMethod ensureValidIntLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
        11: return
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0      12     1     c   Lscala/reflect/macros/whitebox/Context;
            0      12     2 value   Lscala/reflect/api/Exprs$Expr;
            0      12     3 notValidMsg   Ljava/lang/String;
            0      12     4 notLiteralMsg   Ljava/lang/String;
            0      12     5 isValid   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public default void ensureValidIntLiteral(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, java.lang.String, java.lang.String, scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=14, args_size=6
         0: aload_2
         1: astore        7
         3: aload         7
         5: invokeinterface #51,  1           // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        10: astore        8
        12: aload         8
        14: ifnull        157
        17: aload_1
        18: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        23: invokevirtual #63                 // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        26: aload         8
        28: invokeinterface #69,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        33: astore        9
        35: aload         9
        37: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        40: ifne          154
        43: aload         9
        45: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #20                 // class scala/reflect/api/Trees$LiteralApi
        51: astore        10
        53: aload         10
        55: ifnull        151
        58: aload_1
        59: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #83                 // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        67: aload         10
        69: invokevirtual #86                 // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        72: astore        11
        74: aload         11
        76: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        79: ifne          148
        82: aload         11
        84: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        87: checkcast     #10                 // class scala/reflect/api/Constants$ConstantApi
        90: astore        12
        92: getstatic     #92                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        95: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: aload         12
       100: invokevirtual #99                 // Method scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
       103: invokevirtual #103                // Method java/lang/Object.toString:()Ljava/lang/String;
       106: invokevirtual #107                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       109: invokevirtual #111                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
       112: istore        13
       114: aload         5
       116: iload         13
       118: invokeinterface #117,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
       123: ifne          140
       126: aload_1
       127: aload_1
       128: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       133: aload_3
       134: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       139: athrow
       140: getstatic     #131                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       143: astore        6
       145: goto          175
       148: goto          160
       151: goto          160
       154: goto          160
       157: goto          160
       160: aload_1
       161: aload_1
       162: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       167: aload         4
       169: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       174: athrow
       175: return
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 140
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, int ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 7
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, class scala/runtime/BoxedUnit, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, int ]
          stack = []
      LineNumberTable:
        line 202: 0
        line 206: 3
        line 207: 12
        line 206: 43
        line 207: 53
        line 206: 82
        line 208: 92
        line 209: 114
        line 210: 126
        line 209: 140
        line 207: 148
        line 212: 160
        line 206: 175
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          114      29    13 literalValue   I
           92      56    12 intConst   Lscala/reflect/api/Constants$ConstantApi;
            0     176     0  this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0     176     1     c   Lscala/reflect/macros/whitebox/Context;
            0     176     2 value   Lscala/reflect/api/Exprs$Expr;
            0     176     3 notValidMsg   Ljava/lang/String;
            0     176     4 notLiteralMsg   Ljava/lang/String;
            0     176     5 isValid   Lscala/Function1;
    Signature: #47                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public static void ensureValidLongLiteral$(org.scalactic.anyvals.CompileTimeAssertions, scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr, java.lang.String, java.lang.String, scala.Function1);
    descriptor: (Lorg/scalactic/anyvals/CompileTimeAssertions;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: invokespecial #142                // InterfaceMethod ensureValidLongLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
        11: return
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0      12     1     c   Lscala/reflect/macros/whitebox/Context;
            0      12     2 value   Lscala/reflect/api/Exprs$Expr;
            0      12     3 notValidMsg   Ljava/lang/String;
            0      12     4 notLiteralMsg   Ljava/lang/String;
            0      12     5 isValid   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public default void ensureValidLongLiteral(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, java.lang.String, java.lang.String, scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=15, args_size=6
         0: aload_2
         1: astore        7
         3: aload         7
         5: invokeinterface #51,  1           // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        10: astore        8
        12: aload         8
        14: ifnull        157
        17: aload_1
        18: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        23: invokevirtual #63                 // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        26: aload         8
        28: invokeinterface #69,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        33: astore        9
        35: aload         9
        37: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        40: ifne          154
        43: aload         9
        45: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #20                 // class scala/reflect/api/Trees$LiteralApi
        51: astore        10
        53: aload         10
        55: ifnull        151
        58: aload_1
        59: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #83                 // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        67: aload         10
        69: invokevirtual #86                 // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        72: astore        11
        74: aload         11
        76: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        79: ifne          148
        82: aload         11
        84: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        87: checkcast     #10                 // class scala/reflect/api/Constants$ConstantApi
        90: astore        12
        92: getstatic     #92                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        95: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: aload         12
       100: invokevirtual #99                 // Method scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
       103: invokevirtual #103                // Method java/lang/Object.toString:()Ljava/lang/String;
       106: invokevirtual #107                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       109: invokevirtual #146                // Method scala/collection/StringOps$.toLong$extension:(Ljava/lang/String;)J
       112: lstore        13
       114: aload         5
       116: lload         13
       118: invokeinterface #150,  3          // InterfaceMethod scala/Function1.apply$mcZJ$sp:(J)Z
       123: ifne          140
       126: aload_1
       127: aload_1
       128: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       133: aload_3
       134: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       139: athrow
       140: getstatic     #131                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       143: astore        6
       145: goto          175
       148: goto          160
       151: goto          160
       154: goto          160
       157: goto          160
       160: aload_1
       161: aload_1
       162: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       167: aload         4
       169: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       174: athrow
       175: return
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 140
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, long ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 7
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, class scala/runtime/BoxedUnit, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, long ]
          stack = []
      LineNumberTable:
        line 238: 0
        line 242: 3
        line 243: 12
        line 242: 43
        line 243: 53
        line 242: 82
        line 244: 92
        line 245: 114
        line 246: 126
        line 245: 140
        line 243: 148
        line 248: 160
        line 242: 175
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          114      29    13 literalValue   J
           92      56    12 longConst   Lscala/reflect/api/Constants$ConstantApi;
            0     176     0  this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0     176     1     c   Lscala/reflect/macros/whitebox/Context;
            0     176     2 value   Lscala/reflect/api/Exprs$Expr;
            0     176     3 notValidMsg   Ljava/lang/String;
            0     176     4 notLiteralMsg   Ljava/lang/String;
            0     176     5 isValid   Lscala/Function1;
    Signature: #47                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public static void ensureValidFloatLiteral$(org.scalactic.anyvals.CompileTimeAssertions, scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr, java.lang.String, java.lang.String, scala.Function1);
    descriptor: (Lorg/scalactic/anyvals/CompileTimeAssertions;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: invokespecial #156                // InterfaceMethod ensureValidFloatLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
        11: return
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0      12     1     c   Lscala/reflect/macros/whitebox/Context;
            0      12     2 value   Lscala/reflect/api/Exprs$Expr;
            0      12     3 notValidMsg   Ljava/lang/String;
            0      12     4 notLiteralMsg   Ljava/lang/String;
            0      12     5 isValid   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public default void ensureValidFloatLiteral(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, java.lang.String, java.lang.String, scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=14, args_size=6
         0: aload_2
         1: astore        7
         3: aload         7
         5: invokeinterface #51,  1           // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        10: astore        8
        12: aload         8
        14: ifnull        157
        17: aload_1
        18: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        23: invokevirtual #63                 // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        26: aload         8
        28: invokeinterface #69,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        33: astore        9
        35: aload         9
        37: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        40: ifne          154
        43: aload         9
        45: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #20                 // class scala/reflect/api/Trees$LiteralApi
        51: astore        10
        53: aload         10
        55: ifnull        151
        58: aload_1
        59: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #83                 // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        67: aload         10
        69: invokevirtual #86                 // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        72: astore        11
        74: aload         11
        76: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        79: ifne          148
        82: aload         11
        84: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        87: checkcast     #10                 // class scala/reflect/api/Constants$ConstantApi
        90: astore        12
        92: getstatic     #92                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        95: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: aload         12
       100: invokevirtual #99                 // Method scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
       103: invokevirtual #103                // Method java/lang/Object.toString:()Ljava/lang/String;
       106: invokevirtual #107                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       109: invokevirtual #160                // Method scala/collection/StringOps$.toFloat$extension:(Ljava/lang/String;)F
       112: fstore        13
       114: aload         5
       116: fload         13
       118: invokeinterface #164,  2          // InterfaceMethod scala/Function1.apply$mcZF$sp:(F)Z
       123: ifne          140
       126: aload_1
       127: aload_1
       128: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       133: aload_3
       134: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       139: athrow
       140: getstatic     #131                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       143: astore        6
       145: goto          175
       148: goto          160
       151: goto          160
       154: goto          160
       157: goto          160
       160: aload_1
       161: aload_1
       162: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       167: aload         4
       169: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       174: athrow
       175: return
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 140
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, float ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 7
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, class scala/runtime/BoxedUnit, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, float ]
          stack = []
      LineNumberTable:
        line 274: 0
        line 278: 3
        line 279: 12
        line 278: 43
        line 279: 53
        line 278: 82
        line 280: 92
        line 281: 114
        line 282: 126
        line 281: 140
        line 279: 148
        line 284: 160
        line 278: 175
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          114      29    13 literalValue   F
           92      56    12 floatConst   Lscala/reflect/api/Constants$ConstantApi;
            0     176     0  this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0     176     1     c   Lscala/reflect/macros/whitebox/Context;
            0     176     2 value   Lscala/reflect/api/Exprs$Expr;
            0     176     3 notValidMsg   Ljava/lang/String;
            0     176     4 notLiteralMsg   Ljava/lang/String;
            0     176     5 isValid   Lscala/Function1;
    Signature: #47                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public static void ensureValidDoubleLiteral$(org.scalactic.anyvals.CompileTimeAssertions, scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr, java.lang.String, java.lang.String, scala.Function1);
    descriptor: (Lorg/scalactic/anyvals/CompileTimeAssertions;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: invokespecial #170                // InterfaceMethod ensureValidDoubleLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
        11: return
      LineNumberTable:
        line 310: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0      12     1     c   Lscala/reflect/macros/whitebox/Context;
            0      12     2 value   Lscala/reflect/api/Exprs$Expr;
            0      12     3 notValidMsg   Ljava/lang/String;
            0      12     4 notLiteralMsg   Ljava/lang/String;
            0      12     5 isValid   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public default void ensureValidDoubleLiteral(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, java.lang.String, java.lang.String, scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=15, args_size=6
         0: aload_2
         1: astore        7
         3: aload         7
         5: invokeinterface #51,  1           // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        10: astore        8
        12: aload         8
        14: ifnull        157
        17: aload_1
        18: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        23: invokevirtual #63                 // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        26: aload         8
        28: invokeinterface #69,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        33: astore        9
        35: aload         9
        37: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        40: ifne          154
        43: aload         9
        45: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #20                 // class scala/reflect/api/Trees$LiteralApi
        51: astore        10
        53: aload         10
        55: ifnull        151
        58: aload_1
        59: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #83                 // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        67: aload         10
        69: invokevirtual #86                 // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        72: astore        11
        74: aload         11
        76: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        79: ifne          148
        82: aload         11
        84: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        87: checkcast     #10                 // class scala/reflect/api/Constants$ConstantApi
        90: astore        12
        92: getstatic     #92                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        95: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: aload         12
       100: invokevirtual #99                 // Method scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
       103: invokevirtual #103                // Method java/lang/Object.toString:()Ljava/lang/String;
       106: invokevirtual #107                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       109: invokevirtual #174                // Method scala/collection/StringOps$.toDouble$extension:(Ljava/lang/String;)D
       112: dstore        13
       114: aload         5
       116: dload         13
       118: invokeinterface #178,  3          // InterfaceMethod scala/Function1.apply$mcZD$sp:(D)Z
       123: ifne          140
       126: aload_1
       127: aload_1
       128: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       133: aload_3
       134: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       139: athrow
       140: getstatic     #131                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       143: astore        6
       145: goto          175
       148: goto          160
       151: goto          160
       154: goto          160
       157: goto          160
       160: aload_1
       161: aload_1
       162: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       167: aload         4
       169: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       174: athrow
       175: return
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 140
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, double ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 7
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, class scala/runtime/BoxedUnit, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, double ]
          stack = []
      LineNumberTable:
        line 310: 0
        line 314: 3
        line 315: 12
        line 314: 43
        line 315: 53
        line 314: 82
        line 316: 92
        line 317: 114
        line 318: 126
        line 317: 140
        line 315: 148
        line 320: 160
        line 314: 175
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          114      29    13 literalValue   D
           92      56    12 doubleConst   Lscala/reflect/api/Constants$ConstantApi;
            0     176     0  this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0     176     1     c   Lscala/reflect/macros/whitebox/Context;
            0     176     2 value   Lscala/reflect/api/Exprs$Expr;
            0     176     3 notValidMsg   Ljava/lang/String;
            0     176     4 notLiteralMsg   Ljava/lang/String;
            0     176     5 isValid   Lscala/Function1;
    Signature: #47                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public static void ensureValidStringLiteral$(org.scalactic.anyvals.CompileTimeAssertions, scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr, java.lang.String, java.lang.String, scala.Function1);
    descriptor: (Lorg/scalactic/anyvals/CompileTimeAssertions;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: invokespecial #184                // InterfaceMethod ensureValidStringLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
        11: return
      LineNumberTable:
        line 346: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0      12     1     c   Lscala/reflect/macros/whitebox/Context;
            0      12     2 value   Lscala/reflect/api/Exprs$Expr;
            0      12     3 notValidMsg   Ljava/lang/String;
            0      12     4 notLiteralMsg   Ljava/lang/String;
            0      12     5 isValid   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public default void ensureValidStringLiteral(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>, java.lang.String, java.lang.String, scala.Function1<java.lang.String, java.lang.Object>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=14, args_size=6
         0: aload_2
         1: astore        7
         3: aload         7
         5: invokeinterface #51,  1           // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        10: astore        8
        12: aload         8
        14: ifnull        148
        17: aload_1
        18: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        23: invokevirtual #63                 // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        26: aload         8
        28: invokeinterface #69,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        33: astore        9
        35: aload         9
        37: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        40: ifne          145
        43: aload         9
        45: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #20                 // class scala/reflect/api/Trees$LiteralApi
        51: astore        10
        53: aload         10
        55: ifnull        142
        58: aload_1
        59: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #83                 // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        67: aload         10
        69: invokevirtual #86                 // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        72: astore        11
        74: aload         11
        76: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        79: ifne          139
        82: aload         11
        84: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        87: checkcast     #10                 // class scala/reflect/api/Constants$ConstantApi
        90: astore        12
        92: aload         12
        94: invokevirtual #99                 // Method scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
        97: invokevirtual #103                // Method java/lang/Object.toString:()Ljava/lang/String;
       100: astore        13
       102: aload         5
       104: aload         13
       106: invokeinterface #189,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       111: invokestatic  #195                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       114: ifne          131
       117: aload_1
       118: aload_1
       119: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       124: aload_3
       125: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       130: athrow
       131: getstatic     #131                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       134: astore        6
       136: goto          166
       139: goto          151
       142: goto          151
       145: goto          151
       148: goto          151
       151: aload_1
       152: aload_1
       153: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       158: aload         4
       160: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       165: athrow
       166: return
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 131
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, class java/lang/String ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 7
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, class scala/runtime/BoxedUnit, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 346: 0
        line 350: 3
        line 351: 12
        line 350: 43
        line 351: 53
        line 350: 82
        line 352: 92
        line 353: 102
        line 354: 117
        line 353: 131
        line 351: 139
        line 356: 151
        line 350: 166
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          102      32    13 literalValue   Ljava/lang/String;
           92      47    12 stringConst   Lscala/reflect/api/Constants$ConstantApi;
            0     167     0  this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0     167     1     c   Lscala/reflect/macros/whitebox/Context;
            0     167     2 value   Lscala/reflect/api/Exprs$Expr;
            0     167     3 notValidMsg   Ljava/lang/String;
            0     167     4 notLiteralMsg   Ljava/lang/String;
            0     167     5 isValid   Lscala/Function1;
    Signature: #185                         // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public static void ensureValidCharLiteral$(org.scalactic.anyvals.CompileTimeAssertions, scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr, java.lang.String, java.lang.String, scala.Function1);
    descriptor: (Lorg/scalactic/anyvals/CompileTimeAssertions;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: invokespecial #200                // InterfaceMethod ensureValidCharLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
        11: return
      LineNumberTable:
        line 382: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0      12     1     c   Lscala/reflect/macros/whitebox/Context;
            0      12     2 value   Lscala/reflect/api/Exprs$Expr;
            0      12     3 notValidMsg   Ljava/lang/String;
            0      12     4 notLiteralMsg   Ljava/lang/String;
            0      12     5 isValid   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public default void ensureValidCharLiteral(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.Object>, java.lang.String, java.lang.String, scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=14, args_size=6
         0: aload_2
         1: astore        7
         3: aload         7
         5: invokeinterface #51,  1           // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        10: astore        8
        12: aload         8
        14: ifnull        163
        17: aload_1
        18: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        23: invokevirtual #63                 // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        26: aload         8
        28: invokeinterface #69,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        33: astore        9
        35: aload         9
        37: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        40: ifne          160
        43: aload         9
        45: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #20                 // class scala/reflect/api/Trees$LiteralApi
        51: astore        10
        53: aload         10
        55: ifnull        157
        58: aload_1
        59: invokeinterface #57,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #83                 // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        67: aload         10
        69: invokevirtual #86                 // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        72: astore        11
        74: aload         11
        76: invokevirtual #75                 // Method scala/Option.isEmpty:()Z
        79: ifne          154
        82: aload         11
        84: invokevirtual #79                 // Method scala/Option.get:()Ljava/lang/Object;
        87: checkcast     #10                 // class scala/reflect/api/Constants$ConstantApi
        90: astore        12
        92: getstatic     #92                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        95: getstatic     #97                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: aload         12
       100: invokevirtual #99                 // Method scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
       103: invokevirtual #103                // Method java/lang/Object.toString:()Ljava/lang/String;
       106: invokevirtual #107                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       109: invokevirtual #204                // Method scala/collection/StringOps$.head$extension:(Ljava/lang/String;)C
       112: istore        13
       114: aload         5
       116: iload         13
       118: invokestatic  #208                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       121: invokeinterface #189,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       126: invokestatic  #195                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       129: ifne          146
       132: aload_1
       133: aload_1
       134: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       139: aload_3
       140: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       145: athrow
       146: getstatic     #131                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       149: astore        6
       151: goto          181
       154: goto          166
       157: goto          166
       160: goto          166
       163: goto          166
       166: aload_1
       167: aload_1
       168: invokeinterface #121,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       173: aload         4
       175: invokeinterface #125,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       180: athrow
       181: return
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 146
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, int ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 7
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/scalactic/anyvals/CompileTimeAssertions, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class java/lang/String, class scala/Function1, class scala/runtime/BoxedUnit, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option, class scala/reflect/api/Constants$ConstantApi, int ]
          stack = []
      LineNumberTable:
        line 382: 0
        line 386: 3
        line 387: 12
        line 386: 43
        line 387: 53
        line 386: 82
        line 388: 92
        line 389: 114
        line 390: 132
        line 389: 146
        line 387: 154
        line 392: 166
        line 386: 181
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          114      35    13 literalValue   C
           92      62    12 charConst   Lscala/reflect/api/Constants$ConstantApi;
            0     182     0  this   Lorg/scalactic/anyvals/CompileTimeAssertions;
            0     182     1     c   Lscala/reflect/macros/whitebox/Context;
            0     182     2 value   Lscala/reflect/api/Exprs$Expr;
            0     182     3 notValidMsg   Ljava/lang/String;
            0     182     4 notLiteralMsg   Ljava/lang/String;
            0     182     5 isValid   Lscala/Function1;
    Signature: #47                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/Object;>;Ljava/lang/String;Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      c                              final
      value                          final
      notValidMsg                    final
      notLiteralMsg                  final
      isValid                        final

  public static void $init$(org.scalactic.anyvals.CompileTimeAssertions);
    descriptor: (Lorg/scalactic/anyvals/CompileTimeAssertions;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lorg/scalactic/anyvals/CompileTimeAssertions;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public abstract #13= #10 of #12;        // ConstantApi=class scala/reflect/api/Constants$ConstantApi of class scala/reflect/api/Constants
  public #18= #15 of #17;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
  public #23= #20 of #22;                 // LiteralApi=class scala/reflect/api/Trees$LiteralApi of class scala/reflect/api/Trees
  public abstract #26= #25 of #22;        // LiteralExtractor=class scala/reflect/api/Trees$LiteralExtractor of class scala/reflect/api/Trees
  public #29= #28 of #22;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
SourceFile: "CompileTimeAssertions.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00055caB\u0006\r!\u0003\r\ta\u0005\u0005\u00065\u0001!\ta\u0007\u0005\u0006?\u0001!\t\u0001\t\u0005\u0006/\u0002!\t\u0001\u0017\u0005\u0006M\u0002!\ta\u001a\u0005\u0006k\u0002!\tA\u001e\u0005\b\u0003\u0013\u0001A\u0011AA\u0006\u0011\u001d\t\t\u0003\u0001C\u0001\u0003G9q!a\u0010\r\u0011\u0003\t\tE\u0002\u0004\f\u0019!\u0005\u0011Q\t\u0005\b\u0003\u0013JA\u0011AA&\u0005U\u0019u.\u001c9jY\u0016$\u0016.\\3BgN,\'\u000f^5p]NT!!\u0004\b\u0002\u000f\u0005t\u0017P^1mg*\u0011q\u0002E\u0001\ng\u000e\fG.Y2uS\u000eT\u0011!E\u0001\u0004_J<7\u0001A\n\u0003\u0001Q\u0001\"!\u0006\r\u000e\u0003YQ\u0011aF\u0001\u0006g\u000e\fG.Y\u0005\u00033Y\u0011a!\u00118z%\u00164\u0017A\u0002\u0013j]&$H\u0005F\u0001\u001d!\t)R$\u0003\u0002\u001f-\t!QK\\5u\u0003U)gn];sKZ\u000bG.\u001b3J]Rd\u0015\u000e^3sC2$\"!I\u001a\u0015\t\tr\u0003*\u0016\u000b\u00039\rBQ\u0001\n\u0002A\u0002\u0015\nq![:WC2LG\r\u0005\u0003\u0016M!Z\u0013BA\u0014\u0017\u0005%1UO\\2uS>t\u0017\u0007\u0005\u0002\u0016S%\u0011!F\u0006\u0002\u0004\u0013:$\bCA\u000b-\u0013\ticCA\u0004C_>dW-\u00198\t\u000b=\u0012\u0001\u0019\u0001\u0019\u0002\u000bY\fG.^3\u0011\u0007E\"\u0005F\u0004\u00023g1\u0001\u0001\"\u0002\u001b\u0003\u0001\u0004)\u0014!A2\u0011\u0005Y\neBA\u001c?\u001d\tA4H\u0004\u0002\u0016s%\u0011!HF\u0001\be\u00164G.Z2u\u0013\taT(\u0001\u0004nC\u000e\u0014xn\u001d\u0006\u0003uYI!a\u0010!\u0002\u000fA\f7m[1hK*\u0011A(P\u0005\u0003\u0005\u000e\u0013qaQ8oi\u0016DHO\u0003\u0002@\u0001&\u0011QI\u0012\u0002\u0005\u000bb\u0004(/\u0003\u0002H\u0001\n9\u0011\t\\5bg\u0016\u001c\b\"B%\u0003\u0001\u0004Q\u0015a\u00038piZ\u000bG.\u001b3Ng\u001e\u0004\"a\u0013*\u000f\u00051\u0003\u0006CA\'\u0017\u001b\u0005q%BA(\u0013\u0003\u0019a$o\\8u}%\u0011\u0011KF\u0001\u0007!J,G-\u001a4\n\u0005M#&AB*ue&twM\u0003\u0002R-!)aK\u0001a\u0001\u0015\u0006ian\u001c;MSR,\'/\u00197Ng\u001e\fa#\u001a8tkJ,g+\u00197jI2{gn\u001a\'ji\u0016\u0014\u0018\r\u001c\u000b\u00033\u000e$BA\u00171eKR\u0011Ad\u0017\u0005\u0006I\r\u0001\r\u0001\u0018\t\u0005+\u0019j6\u0006\u0005\u0002\u0016=&\u0011qL\u0006\u0002\u0005\u0019>tw\rC\u00030\u0007\u0001\u0007\u0011\rE\u0002c\tvs!AM2\t\u000bQ\u001a\u0001\u0019A\u001b\t\u000b%\u001b\u0001\u0019\u0001&\t\u000bY\u001b\u0001\u0019\u0001&\u0002/\u0015t7/\u001e:f-\u0006d\u0017\u000e\u001a$m_\u0006$H*\u001b;fe\u0006dGC\u00015s)\u0011Iwn\u001d;\u0015\u0005qQ\u0007\"\u0002\u0013\u0005\u0001\u0004Y\u0007\u0003B\u000b\'Y.\u0002\"!F7\n\u000594\"!\u0002$m_\u0006$\b\"B\u0018\u0005\u0001\u0004\u0001\bcA9EY:\u0011!G\u001d\u0005\u0006i\u0011\u0001\r!\u000e\u0005\u0006\u0013\u0012\u0001\rA\u0013\u0005\u0006-\u0012\u0001\rAS\u0001\u0019K:\u001cXO]3WC2LG\rR8vE2,G*\u001b;fe\u0006dGcA<\u0002\u0004Q1\u0001P`A\u0003\u0003\u000f!\"\u0001H=\t\u000b\u0011*\u0001\u0019\u0001>\u0011\tU13p\u000b\t\u0003+qL!! \f\u0003\r\u0011{WO\u00197f\u0011\u0015yS\u00011\u0001\u0000!\u0011\t\t\u0001R>\u000f\u0007I\n\u0019\u0001C\u00035\u000b\u0001\u0007Q\u0007C\u0003J\u000b\u0001\u0007!\nC\u0003W\u000b\u0001\u0007!*\u0001\rf]N,(/\u001a,bY&$7\u000b\u001e:j]\u001ed\u0015\u000e^3sC2$B!!\u0004\u0002\u001cQA\u0011qBA\u000b\u0003;\ty\u0002F\u0002\u001d\u0003#Aa\u0001\n\u0004A\u0002\u0005M\u0001\u0003B\u000b\'\u0015.Baa\f\u0004A\u0002\u0005]\u0001\u0003BA\r\t*s1AMA\u000e\u0011\u0015!d\u00011\u00016\u0011\u0015Ie\u00011\u0001K\u0011\u00151f\u00011\u0001K\u0003Y)gn];sKZ\u000bG.\u001b3DQ\u0006\u0014H*\u001b;fe\u0006dG\u0003BA\u0013\u0003s!\u0002\"a\n\u00024\u0005m\u0012Q\b\u000b\u00049\u0005%\u0002B\u0002\u0013\b\u0001\u0004\tY\u0003E\u0003\u0016M\u000552\u0006E\u0002\u0016\u0003_I1!!\r\u0017\u0005\u0011\u0019\u0005.\u0019:\t\r=:\u0001\u0019AA\u001b!\u0015\t9\u0004RA\u0017\u001d\r\u0011\u0014\u0011\b\u0005\u0006i\u001d\u0001\r!\u000e\u0005\u0006\u0013\u001e\u0001\rA\u0013\u0005\u0006-\u001e\u0001\rAS\u0001\u0016\u0007>l\u0007/\u001b7f)&lW-Q:tKJ$\u0018n\u001c8t!\r\t\u0019%C\u0007\u0002\u0019M!\u0011\u0002FA$!\r\t\u0019\u0005A\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005\u0005\u0005\u0003"
    )
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 00 00 0D 00 D3 00 D4 01 00 C6 00 27 00 00 C5
   00 1F 01 00 A8 00 27 00 00 A7 00 1F 01 00 9A 00
   27 00 00 99 00 1F 01 00 26 00 27 00 00 1E 00 1F
   01 00 8C 00 27 00 00 8B 00 1F 01 00 B6 00 27 00
   00 B5 00 1F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
