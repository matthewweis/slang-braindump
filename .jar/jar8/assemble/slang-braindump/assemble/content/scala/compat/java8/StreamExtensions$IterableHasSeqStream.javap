Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/compat/java8/StreamExtensions$IterableHasSeqStream.class
  Last modified May 29, 2022; size 2003 bytes
  SHA-256 checksum f65abe0baa5814e51e100e48079b203a8a8ae7e7c1b74f8325e337dad8d02099
  Compiled from "StreamConverters.scala"
public class scala.compat.java8.StreamExtensions$IterableHasSeqStream<A extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/StreamExtensions$IterableHasSeqStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 3, attributes: 5
Constant pool:
   #1 = Utf8               scala/compat/java8/StreamExtensions$IterableHasSeqStream
   #2 = Class              #1             // scala/compat/java8/StreamExtensions$IterableHasSeqStream
   #3 = Utf8               <A:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamConverters.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
   #8 = Class              #7             // scala/collection/convert/StreamExtensions$StreamShape
   #9 = Utf8               scala/collection/convert/StreamExtensions
  #10 = Class              #9             // scala/collection/convert/StreamExtensions
  #11 = Utf8               StreamShape
  #12 = Utf8               scala/compat/java8/StreamExtensions
  #13 = Class              #12            // scala/compat/java8/StreamExtensions
  #14 = Utf8               IterableHasSeqStream
  #15 = Utf8               cc
  #16 = Utf8               Lscala/collection/IterableOnce;
  #17 = Utf8               Lscala/collection/IterableOnce<TA;>;
  #18 = Utf8               $outer
  #19 = Utf8               Lscala/compat/java8/StreamExtensions;
  #20 = Utf8               seqStream
  #21 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #22 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;)TS;
  #23 = Utf8               s
  #24 = Utf8               st
  #25 = NameAndType        #15:#16        // cc:Lscala/collection/IterableOnce;
  #26 = Fieldref           #2.#25         // scala/compat/java8/StreamExtensions$IterableHasSeqStream.cc:Lscala/collection/IterableOnce;
  #27 = Utf8               scala/collection/IterableOnce
  #28 = Class              #27            // scala/collection/IterableOnce
  #29 = Utf8               stepper
  #30 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #31 = NameAndType        #29:#30        // stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #32 = InterfaceMethodref #28.#31        // scala/collection/IterableOnce.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #33 = Utf8               fromStepper
  #34 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #35 = NameAndType        #33:#34        // fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #36 = InterfaceMethodref #8.#35         // scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #37 = Utf8               this
  #38 = Utf8               Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #39 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape;
  #40 = Utf8               Lscala/collection/StepperShape;
  #41 = Utf8               scala$compat$java8$StreamExtensions$IterableHasSeqStream$$$outer
  #42 = Utf8               ()Lscala/compat/java8/StreamExtensions;
  #43 = NameAndType        #18:#19        // $outer:Lscala/compat/java8/StreamExtensions;
  #44 = Fieldref           #2.#43         // scala/compat/java8/StreamExtensions$IterableHasSeqStream.$outer:Lscala/compat/java8/StreamExtensions;
  #45 = Utf8               <init>
  #46 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;)V
  #47 = Utf8               (Lscala/collection/IterableOnce<TA;>;)V
  #48 = Utf8               ()V
  #49 = NameAndType        #45:#48        // "<init>":()V
  #50 = Methodref          #5.#49         // java/lang/Object."<init>":()V
  #51 = Utf8               Signature
  #52 = Utf8               Code
  #53 = Utf8               LineNumberTable
  #54 = Utf8               LocalVariableTable
  #55 = Utf8               MethodParameters
  #56 = Utf8               StackMapTable
  #57 = Utf8               InnerClasses
  #58 = Utf8               SourceFile
  #59 = Utf8               ScalaInlineInfo
  #60 = Utf8               Scala
{
  private final scala.collection.IterableOnce<A> cc;
    descriptor: Lscala/collection/IterableOnce;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // Lscala/collection/IterableOnce<TA;>;

  public final scala.compat.java8.StreamExtensions $outer;
    descriptor: Lscala/compat/java8/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S seqStream(scala.collection.convert.StreamExtensions$StreamShape<A, S, St>, scala.collection.StepperShape<A, St>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #26                 // Field cc:Lscala/collection/IterableOnce;
         5: aload_2
         6: invokeinterface #32,  2           // InterfaceMethod scala/collection/IterableOnce.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_0
        12: invokeinterface #36,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        17: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
            0      18     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      18     2    st   Lscala/collection/StepperShape;
    Signature: #22                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final

  public scala.compat.java8.StreamExtensions scala$compat$java8$StreamExtensions$IterableHasSeqStream$$$outer();
    descriptor: ()Lscala/compat/java8/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #44                 // Field $outer:Lscala/compat/java8/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;

  public scala.compat.java8.StreamExtensions$IterableHasSeqStream(scala.collection.IterableOnce<A>);
    descriptor: (Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #26                 // Field cc:Lscala/collection/IterableOnce;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #44                 // Field $outer:Lscala/compat/java8/StreamExtensions;
        16: aload_0
        17: invokespecial #50                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 34: 0
        line 44: 16
        line 34: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
            0      21     1 $outer   Lscala/compat/java8/StreamExtensions;
            0      21     2    cc   Lscala/collection/IterableOnce;
    Signature: #47                          // (Lscala/collection/IterableOnce<TA;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      cc                             final
}
InnerClasses:
  public static #11= #8 of #10;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
  public #14= #2 of #13;                  // IterableHasSeqStream=class scala/compat/java8/StreamExtensions$IterableHasSeqStream of class scala/compat/java8/StreamExtensions
Signature: #3                           // <A:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "StreamConverters.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 2D 00 2E 00 00 29 00 2A 00 00 14
   00 15 00
  Scala: length = 0x0 (unknown attribute)

