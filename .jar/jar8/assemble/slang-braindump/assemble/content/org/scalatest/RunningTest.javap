Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/RunningTest.class
  Last modified May 29, 2022; size 8327 bytes
  SHA-256 checksum 1e39d488b37406bfa23aa0ae7f90a8990252240999c93405dfe19cb517d971e7
  Compiled from "RunningTest.scala"
public final class org.scalatest.RunningTest extends java.lang.Object implements scala.math.Ordered<org.scalatest.RunningTest>, scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/RunningTest
  super_class: #5                         // java/lang/Object
  interfaces: 3, fields: 4, methods: 32, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/RunningTest
    #2 = Class              #1            // org/scalatest/RunningTest
    #3 = Utf8               Ljava/lang/Object;Lscala/math/Ordered<Lorg/scalatest/RunningTest;>;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Ordered
    #7 = Class              #6            // scala/math/Ordered
    #8 = Utf8               scala/Product
    #9 = Class              #8            // scala/Product
   #10 = Utf8               java/io/Serializable
   #11 = Class              #10           // java/io/Serializable
   #12 = Utf8               RunningTest.scala
   #13 = Utf8               Lscala/reflect/ScalaSignature;
   #14 = Utf8               bytes
   #15 = Utf8               \u0006\u0005\u0005\u0005f!B\u0011#\u0005\n2\u0003\u0002\u0003\"\u0001\u0005+\u0007I\u0011A\"\t\u00111\u0003!\u0011#Q\u0001\n\u0011C\u0001\"\u0014\u0001\u0003\u0016\u0004%\ta\u0011\u0005\t\u001d\u0002\u0011\t\u0012)A\u0005\t\"Aq\n\u0001BK\u0002\u0013\u00051\t\u0003\u0005Q\u0001\tE\t\u0015!\u0003E\u0011!\t\u0006A!f\u0001\n\u0003\u0011\u0006\u0002\u0003,\u0001\u0005#\u0005\u000b\u0011B*\t\u000b]\u0003A\u0011\u0001-\t\u000bu\u0003A\u0011\u00010\t\u000b\u0011\u0004A\u0011I3\t\u000b5\u0004A\u0011\t8\t\u000b=\u0004A\u0011\u00019\t\u000fY\u0004\u0011\u0011!C\u0001o\"9A\u0010AI\u0001\n\u0003i\b\u0002CA\t\u0001E\u0005I\u0011A?\t\u0011\u0005M\u0001!%A\u0005\u0002uD\u0011\"!\u0006\u0001#\u0003%\t!a\u0006\t\u0013\u0005m\u0001!!A\u0005B\u0005u\u0001\"CA\u0017\u0001\u0005\u0005I\u0011AA\u0018\u0011%\t\t\u0004AA\u0001\n\u0003\t\u0019\u0004C\u0005\u0002:\u0001\t\t\u0011\"\u0011\u0002<!I\u0011\u0011\n\u0001\u0002\u0002\u0013\u0005\u00111\n\u0005\n\u0003\u001f\u0002\u0011\u0011!C!\u0003#B\u0011\"!\u0016\u0001\u0003\u0003%\t%a\u0016\b\u0015\u0005e#%!A\t\u0002\t\nYFB\u0005\"E\u0005\u0005\t\u0012\u0001\u0012\u0002^!1qk\u0007C\u0001\u0003kB\u0011\"!\u0016\u001c\u0003\u0003%)%a\u0016\t\u0013\u0005]4$!A\u0005\u0002\u0006e\u0004\"CAB7\u0005\u0005I\u0011QAC\u0011%\t9jGA\u0001\n\u0013\tIJA\u0006Sk:t\u0017N\\4UKN$(BA\u0012%\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001&\u0003\ry\'oZ\n\u0006\u0001\u001djCh\u0010\t\u0003Q-j\u0011!\u000b\u0006\u0002U\u0005)1oY1mC&\u0011A&\u000b\u0002\u0007\u0003:L(+\u001a4\u0011\u00079:$H\u0004\u00020k9\u0011\u0001\u0007N\u0007\u0002c)\u0011!gM\u0001\u0007yI|w\u000e\u001e \u0004\u0001%\t!&\u0003\u00027S\u00059\u0001/Y2lC\u001e,\u0017B\u0001\u001d:\u0005\u001dy%\u000fZ3sK\u0012T!AN\u0015\u0011\u0005m\u0002Q\"\u0001\u0012\u0011\u0005!j\u0014B\u0001 *\u0005\u001d\u0001&o\u001c3vGR\u0004\"A\f!\n\u0005\u0005K$\u0001D*fe&\fG.\u001b>bE2,\u0017!C:vSR,g*Y7f+\u0005!\u0005CA#J\u001d\t1u\t\u0005\u00021S%\u0011\u0001*K\u0001\u0007!J,G-\u001a4\n\u0005)[%AB*ue&twM\u0003\u0002IS\u0005Q1/^5uK:\u000bW.\u001a\u0011\u0002\u000fM,\u0018\u000e^3JI\u0006A1/^5uK&#\u0007%\u0001\u0005uKN$h*Y7f\u0003%!Xm\u001d;OC6,\u0007%\u0001\bti\u0006\u0014H\u000fV5nKN#\u0018-\u001c9\u0016\u0003M\u0003\"\u0001\u000b+\n\u0005UK#\u0001\u0002\'p]\u001e\fqb\u001d;beR$\u0016.\\3Ti\u0006l\u0007\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u000biJ&l\u0017/\t\u000b\tK\u0001\u0019\u0001#\t\u000b5K\u0001\u0019\u0001#\t\u000b=K\u0001\u0019\u0001#\t\u000bEK\u0001\u0019A*\u0002\u000f\r|W\u000e]1sKR\u0011qL\u0019\t\u0003Q\u0001L!!Y\u0015\u0003\u0007%sG\u000fC\u0003d\u0015\u0001\u0007!(A\u0003pi\",\'/\u0001\u0004fcV\fGn\u001d\u000b\u0003M&\u0004\"\u0001K4\n\u0005!L#a\u0002\"p_2,\u0017M\u001c\u0005\u0006G.\u0001\rA\u001b\t\u0003Q-L!\u0001\\\u0015\u0003\u0007\u0005s\u00170\u0001\u0005iCND7i\u001c3f)\u0005y\u0016A\u0003;p\'2|w\u000f]8lKR\u0011\u0011\u000f\u001e\t\u0003wIL!a\u001d\u0012\u0003\u0011Mcwn\u001e9pW\u0016DQ!^\u0007A\u0002M\u000b\u0001cY;se\u0016tG\u000fV5nKN#\u0018-\u001c9\u0002\t\r|\u0007/\u001f\u000b\u0006uaL(p\u001f\u0005\b\u0005:\u0001\n\u00111\u0001E\u0011\u001die\u0002%AA\u0002\u0011Cqa\u0014\b\u0011\u0002\u0003\u0007A\tC\u0004R\u001dA\u0005\t\u0019A*\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\taP\u000b\u0002E\u007f.\u0012\u0011\u0011\u0001\t\u0005\u0003\u0007\ti!\u0004\u0002\u0002\u0006)!\u0011qAA\u0005\u0003%)hn\u00195fG.,GMC\u0002\u0002\f%\n!\"\u00198o_R\fG/[8o\u0013\u0011\ty!!\u0002\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-\u0001\bd_BLH\u0005Z3gCVdG\u000f\n\u001a\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%g\u0005q1m\u001c9zI\u0011,g-Y;mi\u0012\"TCAA\rU\t\u0019v0A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0003\u0003?\u0001B!!\t\u0002,5\u0011\u00111\u0005\u0006\u0005\u0003K\t9#\u0001\u0003mC:<\'BAA\u0015\u0003\u0011Q\u0017M^1\n\u0007)\u000b\u0019#\u0001\u0007qe>$Wo\u0019;Be&$\u00180F\u0001`\u00039\u0001(o\u001c3vGR,E.Z7f]R$2A[A\u001b\u0011!\t9$FA\u0001\u0002\u0004y\u0016a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0002>A)\u0011qHA#U6\u0011\u0011\u0011\t\u0006\u0004\u0003\u0007J\u0013AC2pY2,7\r^5p]&!\u0011qIA!\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\u0007\u0019\fi\u0005\u0003\u0005\u00028]\t\t\u00111\u0001k\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005}\u00111\u000b\u0005\t\u0003oA\u0012\u0011!a\u0001?\u0006AAo\\*ue&tw\r\u0006\u0002\u0002 \u0005Y!+\u001e8oS:<G+Z:u!\tY4dE\u0003\u001c\u0003?\nY\u0007E\u0005\u0002b\u0005\u001dD\t\u0012#Tu5\u0011\u00111\r\u0006\u0004\u0003KJ\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003S\n\u0019GA\tBEN$(/Y2u\rVt7\r^5p]R\u0002B!!\u001c\u0002t5\u0011\u0011q\u000e\u0006\u0005\u0003c\n9#\u0001\u0002j_&\u0019\u0011)a\u001c\u0015\u0005\u0005m\u0013!B1qa2LH#\u0003\u001e\u0002|\u0005u\u0014qPAA\u0011\u0015\u0011e\u00041\u0001E\u0011\u0015ie\u00041\u0001E\u0011\u0015ye\u00041\u0001E\u0011\u0015\tf\u00041\u0001T\u0003\u001d)h.\u00199qYf$B!a\"\u0002\u0014B)\u0001&!#\u0002\u000e&\u0019\u00111R\u0015\u0003\r=\u0003H/[8o!\u001dA\u0013q\u0012#E\tNK1!!%*\u0005\u0019!V\u000f\u001d7fi!A\u0011QS\u0010\u0002\u0002\u0003\u0007!(A\u0002yIA\nAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!a\'\u0011\t\u0005\u0005\u0012QT\u0005\u0005\u0003?\u000b\u0019C\u0001\u0004PE*,7\r\u001e
   #16 = Utf8               suiteName
   #17 = Utf8               Ljava/lang/String;
   #18 = Utf8               suiteId
   #19 = Utf8               testName
   #20 = Utf8               startTimeStamp
   #21 = Utf8               J
   #22 = Utf8               unapply
   #23 = Utf8               (Lorg/scalatest/RunningTest;)Lscala/Option;
   #24 = Utf8               (Lorg/scalatest/RunningTest;)Lscala/Option<Lscala/Tuple4<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;>;>;
   #25 = Utf8               x$0
   #26 = Utf8               org/scalatest/RunningTest$
   #27 = Class              #26           // org/scalatest/RunningTest$
   #28 = Utf8               MODULE$
   #29 = Utf8               Lorg/scalatest/RunningTest$;
   #30 = NameAndType        #28:#29       // MODULE$:Lorg/scalatest/RunningTest$;
   #31 = Fieldref           #27.#30       // org/scalatest/RunningTest$.MODULE$:Lorg/scalatest/RunningTest$;
   #32 = NameAndType        #22:#23       // unapply:(Lorg/scalatest/RunningTest;)Lscala/Option;
   #33 = Methodref          #27.#32       // org/scalatest/RunningTest$.unapply:(Lorg/scalatest/RunningTest;)Lscala/Option;
   #34 = Utf8               Lorg/scalatest/RunningTest;
   #35 = Utf8               apply
   #36 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/scalatest/RunningTest;
   #37 = NameAndType        #35:#36       // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/scalatest/RunningTest;
   #38 = Methodref          #27.#37       // org/scalatest/RunningTest$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/scalatest/RunningTest;
   #39 = Utf8               tupled
   #40 = Utf8               ()Lscala/Function1;
   #41 = Utf8               ()Lscala/Function1<Lscala/Tuple4<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;>;Lorg/scalatest/RunningTest;>;
   #42 = NameAndType        #39:#40       // tupled:()Lscala/Function1;
   #43 = Methodref          #27.#42       // org/scalatest/RunningTest$.tupled:()Lscala/Function1;
   #44 = Utf8               curried
   #45 = Utf8               ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/RunningTest;>;>;>;>;
   #46 = NameAndType        #44:#40       // curried:()Lscala/Function1;
   #47 = Methodref          #27.#46       // org/scalatest/RunningTest$.curried:()Lscala/Function1;
   #48 = Utf8               productElementNames
   #49 = Utf8               ()Lscala/collection/Iterator;
   #50 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #51 = Utf8               productElementNames$
   #52 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #53 = NameAndType        #51:#52       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #54 = InterfaceMethodref #9.#53        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #55 = Utf8               this
   #56 = Utf8               $less
   #57 = Utf8               (Ljava/lang/Object;)Z
   #58 = Utf8               that
   #59 = Utf8               $less$
   #60 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)Z
   #61 = NameAndType        #59:#60       // $less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #62 = InterfaceMethodref #7.#61        // scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #63 = Utf8               Ljava/lang/Object;
   #64 = Utf8               $greater
   #65 = Utf8               $greater$
   #66 = NameAndType        #65:#60       // $greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #67 = InterfaceMethodref #7.#66        // scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #68 = Utf8               $less$eq
   #69 = Utf8               $less$eq$
   #70 = NameAndType        #69:#60       // $less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #71 = InterfaceMethodref #7.#70        // scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #72 = Utf8               $greater$eq
   #73 = Utf8               $greater$eq$
   #74 = NameAndType        #73:#60       // $greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #75 = InterfaceMethodref #7.#74        // scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #76 = Utf8               compareTo
   #77 = Utf8               (Ljava/lang/Object;)I
   #78 = Utf8               compareTo$
   #79 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)I
   #80 = NameAndType        #78:#79       // compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
   #81 = InterfaceMethodref #7.#80        // scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
   #82 = Utf8               ()Ljava/lang/String;
   #83 = NameAndType        #16:#17       // suiteName:Ljava/lang/String;
   #84 = Fieldref           #2.#83        // org/scalatest/RunningTest.suiteName:Ljava/lang/String;
   #85 = NameAndType        #18:#17       // suiteId:Ljava/lang/String;
   #86 = Fieldref           #2.#85        // org/scalatest/RunningTest.suiteId:Ljava/lang/String;
   #87 = NameAndType        #19:#17       // testName:Ljava/lang/String;
   #88 = Fieldref           #2.#87        // org/scalatest/RunningTest.testName:Ljava/lang/String;
   #89 = Utf8               ()J
   #90 = NameAndType        #20:#21       // startTimeStamp:J
   #91 = Fieldref           #2.#90        // org/scalatest/RunningTest.startTimeStamp:J
   #92 = Utf8               compare
   #93 = Utf8               (Lorg/scalatest/RunningTest;)I
   #94 = Utf8               other
   #95 = NameAndType        #18:#82       // suiteId:()Ljava/lang/String;
   #96 = Methodref          #2.#95        // org/scalatest/RunningTest.suiteId:()Ljava/lang/String;
   #97 = Utf8               java/lang/String
   #98 = Class              #97           // java/lang/String
   #99 = Utf8               (Ljava/lang/String;)I
  #100 = NameAndType        #76:#99       // compareTo:(Ljava/lang/String;)I
  #101 = Methodref          #98.#100      // java/lang/String.compareTo:(Ljava/lang/String;)I
  #102 = NameAndType        #19:#82       // testName:()Ljava/lang/String;
  #103 = Methodref          #2.#102       // org/scalatest/RunningTest.testName:()Ljava/lang/String;
  #104 = Utf8               suiteIdComp
  #105 = Utf8               I
  #106 = Utf8               equals
  #107 = NameAndType        #106:#57      // equals:(Ljava/lang/Object;)Z
  #108 = Methodref          #5.#107       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #109 = Utf8               hashCode
  #110 = Utf8               ()I
  #111 = NameAndType        #109:#110     // hashCode:()I
  #112 = Methodref          #98.#111      // java/lang/String.hashCode:()I
  #113 = Utf8               toSlowpoke
  #114 = Utf8               (J)Lorg/scalatest/Slowpoke;
  #115 = Utf8               currentTimeStamp
  #116 = Utf8               org/scalatest/Slowpoke
  #117 = Class              #116          // org/scalatest/Slowpoke
  #118 = NameAndType        #16:#82       // suiteName:()Ljava/lang/String;
  #119 = Methodref          #2.#118       // org/scalatest/RunningTest.suiteName:()Ljava/lang/String;
  #120 = Utf8               org/scalatest/time/Span$
  #121 = Class              #120          // org/scalatest/time/Span$
  #122 = Utf8               Lorg/scalatest/time/Span$;
  #123 = NameAndType        #28:#122      // MODULE$:Lorg/scalatest/time/Span$;
  #124 = Fieldref           #121.#123     // org/scalatest/time/Span$.MODULE$:Lorg/scalatest/time/Span$;
  #125 = NameAndType        #20:#89       // startTimeStamp:()J
  #126 = Methodref          #2.#125       // org/scalatest/RunningTest.startTimeStamp:()J
  #127 = Utf8               org/scalatest/time/Millis$
  #128 = Class              #127          // org/scalatest/time/Millis$
  #129 = Utf8               Lorg/scalatest/time/Millis$;
  #130 = NameAndType        #28:#129      // MODULE$:Lorg/scalatest/time/Millis$;
  #131 = Fieldref           #128.#130     // org/scalatest/time/Millis$.MODULE$:Lorg/scalatest/time/Millis$;
  #132 = Utf8               (JLorg/scalatest/time/Units;)Lorg/scalatest/time/Span;
  #133 = NameAndType        #35:#132      // apply:(JLorg/scalatest/time/Units;)Lorg/scalatest/time/Span;
  #134 = Methodref          #121.#133     // org/scalatest/time/Span$.apply:(JLorg/scalatest/time/Units;)Lorg/scalatest/time/Span;
  #135 = Utf8               <init>
  #136 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/scalatest/time/Span;)V
  #137 = NameAndType        #135:#136     // "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/scalatest/time/Span;)V
  #138 = Methodref          #117.#137     // org/scalatest/Slowpoke."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/scalatest/time/Span;)V
  #139 = Utf8               copy
  #140 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
  #141 = NameAndType        #135:#140     // "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
  #142 = Methodref          #2.#141       // org/scalatest/RunningTest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
  #143 = Utf8               copy$default$1
  #144 = Utf8               copy$default$2
  #145 = Utf8               copy$default$3
  #146 = Utf8               copy$default$4
  #147 = Utf8               productPrefix
  #148 = Utf8               RunningTest
  #149 = String             #148          // RunningTest
  #150 = Utf8               productArity
  #151 = Utf8               productElement
  #152 = Utf8               (I)Ljava/lang/Object;
  #153 = Utf8               x$1
  #154 = Utf8               scala/runtime/BoxesRunTime
  #155 = Class              #154          // scala/runtime/BoxesRunTime
  #156 = Utf8               boxToLong
  #157 = Utf8               (J)Ljava/lang/Long;
  #158 = NameAndType        #156:#157     // boxToLong:(J)Ljava/lang/Long;
  #159 = Methodref          #155.#158     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #160 = Utf8               scala/runtime/Statics
  #161 = Class              #160          // scala/runtime/Statics
  #162 = Utf8               ioobe
  #163 = NameAndType        #162:#152     // ioobe:(I)Ljava/lang/Object;
  #164 = Methodref          #161.#163     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #165 = Utf8               productIterator
  #166 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #167 = Utf8               scala/runtime/ScalaRunTime$
  #168 = Class              #167          // scala/runtime/ScalaRunTime$
  #169 = Utf8               Lscala/runtime/ScalaRunTime$;
  #170 = NameAndType        #28:#169      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #171 = Fieldref           #168.#170     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #172 = Utf8               typedProductIterator
  #173 = NameAndType        #172:#52      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #174 = Methodref          #168.#173     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #175 = Utf8               canEqual
  #176 = Utf8               productElementName
  #177 = Utf8               (I)Ljava/lang/String;
  #178 = String             #16           // suiteName
  #179 = String             #18           // suiteId
  #180 = String             #19           // testName
  #181 = String             #20           // startTimeStamp
  #182 = Utf8               toString
  #183 = Utf8               _toString
  #184 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #185 = NameAndType        #183:#184     // _toString:(Lscala/Product;)Ljava/lang/String;
  #186 = Methodref          #168.#185     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #187 = NameAndType        #92:#93       // compare:(Lorg/scalatest/RunningTest;)I
  #188 = Methodref          #2.#187       // org/scalatest/RunningTest.compare:(Lorg/scalatest/RunningTest;)I
  #189 = Utf8               ()V
  #190 = NameAndType        #135:#189     // "<init>":()V
  #191 = Methodref          #5.#190       // java/lang/Object."<init>":()V
  #192 = Utf8               $init$
  #193 = Utf8               (Lscala/math/Ordered;)V
  #194 = NameAndType        #192:#193     // $init$:(Lscala/math/Ordered;)V
  #195 = InterfaceMethodref #7.#194       // scala/math/Ordered.$init$:(Lscala/math/Ordered;)V
  #196 = Utf8               (Lscala/Product;)V
  #197 = NameAndType        #192:#196     // $init$:(Lscala/Product;)V
  #198 = InterfaceMethodref #9.#197       // scala/Product.$init$:(Lscala/Product;)V
  #199 = Utf8               Code
  #200 = Utf8               LocalVariableTable
  #201 = Utf8               Signature
  #202 = Utf8               MethodParameters
  #203 = Utf8               LineNumberTable
  #204 = Utf8               StackMapTable
  #205 = Utf8               SourceFile
  #206 = Utf8               RuntimeVisibleAnnotations
  #207 = Utf8               ScalaInlineInfo
  #208 = Utf8               ScalaSig
{
  private final java.lang.String suiteName;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String suiteId;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String testName;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final long startTimeStamp;
    descriptor: J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Option<scala.Tuple4<java.lang.String, java.lang.String, java.lang.String, java.lang.Object>> unapply(org.scalatest.RunningTest);
    descriptor: (Lorg/scalatest/RunningTest;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #31                 // Field org/scalatest/RunningTest$.MODULE$:Lorg/scalatest/RunningTest$;
         3: aload_0
         4: invokevirtual #33                 // Method org/scalatest/RunningTest$.unapply:(Lorg/scalatest/RunningTest;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lorg/scalatest/RunningTest;
    Signature: #24                          // (Lorg/scalatest/RunningTest;)Lscala/Option<Lscala/Tuple4<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static org.scalatest.RunningTest apply(java.lang.String, java.lang.String, java.lang.String, long);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/scalatest/RunningTest;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=4
         0: getstatic     #31                 // Field org/scalatest/RunningTest$.MODULE$:Lorg/scalatest/RunningTest$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: lload_3
         7: invokevirtual #38                 // Method org/scalatest/RunningTest$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/scalatest/RunningTest;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 suiteName   Ljava/lang/String;
            0      11     1 suiteId   Ljava/lang/String;
            0      11     2 testName   Ljava/lang/String;
            0      11     3 startTimeStamp   J
    MethodParameters:
      Name                           Flags
      suiteName                      final
      suiteId                        final
      testName                       final
      startTimeStamp                 final

  public static scala.Function1<scala.Tuple4<java.lang.String, java.lang.String, java.lang.String, java.lang.Object>, org.scalatest.RunningTest> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #31                 // Field org/scalatest/RunningTest$.MODULE$:Lorg/scalatest/RunningTest$;
         3: invokevirtual #43                 // Method org/scalatest/RunningTest$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #41                          // ()Lscala/Function1<Lscala/Tuple4<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;>;Lorg/scalatest/RunningTest;>;

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.Object, org.scalatest.RunningTest>>>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #31                 // Field org/scalatest/RunningTest$.MODULE$:Lorg/scalatest/RunningTest$;
         3: invokevirtual #47                 // Method org/scalatest/RunningTest$.curried:()Lscala/Function1;
         6: areturn
    Signature: #45                          // ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/RunningTest;>;>;>;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #54                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;
    Signature: #50                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public boolean $less(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #62                 // InterfaceMethod scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/RunningTest;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #67                 // InterfaceMethod scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/RunningTest;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $less$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #71                 // InterfaceMethod scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/RunningTest;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #75                 // InterfaceMethod scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/RunningTest;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #81                 // InterfaceMethod scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/RunningTest;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.String suiteName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field suiteName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public java.lang.String suiteId();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #86                 // Field suiteId:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public java.lang.String testName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #88                 // Field testName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public long startTimeStamp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #91                 // Field startTimeStamp:J
         4: lreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public int compare(org.scalatest.RunningTest);
    descriptor: (Lorg/scalatest/RunningTest;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
         4: aload_1
         5: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
         8: invokevirtual #101                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
        11: istore_2
        12: iload_2
        13: iconst_0
        14: if_icmpne     31
        17: aload_0
        18: invokevirtual #103                // Method testName:()Ljava/lang/String;
        21: aload_1
        22: invokevirtual #103                // Method testName:()Ljava/lang/String;
        25: invokevirtual #101                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
        28: goto          32
        31: iload_2
        32: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 30: 0
        line 31: 12
        line 32: 17
        line 33: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      20     2 suiteIdComp   I
            0      33     0  this   Lorg/scalatest/RunningTest;
            0      33     1 other   Lorg/scalatest/RunningTest;
    MethodParameters:
      Name                           Flags
      other                          final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #2                  // class org/scalatest/RunningTest
         6: ifeq          88
         9: aload_3
        10: checkcast     #2                  // class org/scalatest/RunningTest
        13: astore        4
        15: aload         4
        17: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
        20: aload_0
        21: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
        24: astore        5
        26: dup
        27: ifnonnull     39
        30: pop
        31: aload         5
        33: ifnull        47
        36: goto          83
        39: aload         5
        41: invokevirtual #108                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        44: ifeq          83
        47: aload         4
        49: invokevirtual #103                // Method testName:()Ljava/lang/String;
        52: aload_0
        53: invokevirtual #103                // Method testName:()Ljava/lang/String;
        56: astore        6
        58: dup
        59: ifnonnull     71
        62: pop
        63: aload         6
        65: ifnull        79
        68: goto          83
        71: aload         6
        73: invokevirtual #108                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: istore_2
        85: goto          96
        88: goto          91
        91: iconst_0
        92: istore_2
        93: goto          96
        96: iload_2
        97: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class org/scalatest/RunningTest, class java/lang/Object, top, class java/lang/Object, class org/scalatest/RunningTest, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/scalatest/RunningTest, class java/lang/Object, top, class java/lang/Object, class org/scalatest/RunningTest, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/RunningTest, class java/lang/Object, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 37: 0
        line 38: 2
        line 39: 91
        line 37: 96
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      98     0  this   Lorg/scalatest/RunningTest;
            0      98     1 other   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      other                          final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: bipush        41
         2: bipush        41
         4: aload_0
         5: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
         8: invokevirtual #112                // Method java/lang/String.hashCode:()I
        11: iadd
        12: imul
        13: aload_0
        14: invokevirtual #103                // Method testName:()Ljava/lang/String;
        17: invokevirtual #112                // Method java/lang/String.hashCode:()I
        20: iadd
        21: ireturn
      LineNumberTable:
        line 43: 0
        line 44: 2
        line 45: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalatest/RunningTest;

  public org.scalatest.Slowpoke toSlowpoke(long);
    descriptor: (J)Lorg/scalatest/Slowpoke;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=3, args_size=2
         0: new           #117                // class org/scalatest/Slowpoke
         3: dup
         4: aload_0
         5: invokevirtual #119                // Method suiteName:()Ljava/lang/String;
         8: aload_0
         9: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
        12: aload_0
        13: invokevirtual #103                // Method testName:()Ljava/lang/String;
        16: getstatic     #124                // Field org/scalatest/time/Span$.MODULE$:Lorg/scalatest/time/Span$;
        19: lload_1
        20: aload_0
        21: invokevirtual #126                // Method startTimeStamp:()J
        24: lsub
        25: getstatic     #131                // Field org/scalatest/time/Millis$.MODULE$:Lorg/scalatest/time/Millis$;
        28: invokevirtual #134                // Method org/scalatest/time/Span$.apply:(JLorg/scalatest/time/Units;)Lorg/scalatest/time/Span;
        31: invokespecial #138                // Method org/scalatest/Slowpoke."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/scalatest/time/Span;)V
        34: areturn
      LineNumberTable:
        line 48: 0
        line 49: 4
        line 50: 8
        line 51: 12
        line 52: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/scalatest/RunningTest;
            0      35     1 currentTimeStamp   J
    MethodParameters:
      Name                           Flags
      currentTimeStamp               final

  public org.scalatest.RunningTest copy(java.lang.String, java.lang.String, java.lang.String, long);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Lorg/scalatest/RunningTest;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: new           #2                  // class org/scalatest/RunningTest
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: lload         4
         9: invokespecial #142                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
        12: areturn
      LineNumberTable:
        line 20: 0
        line 21: 4
        line 22: 5
        line 23: 6
        line 24: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/scalatest/RunningTest;
            0      13     1 suiteName   Ljava/lang/String;
            0      13     2 suiteId   Ljava/lang/String;
            0      13     3 testName   Ljava/lang/String;
            0      13     4 startTimeStamp   J
    MethodParameters:
      Name                           Flags
      suiteName                      final
      suiteId                        final
      testName                       final
      startTimeStamp                 final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #119                // Method suiteName:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public java.lang.String copy$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public java.lang.String copy$default$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #103                // Method testName:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public long copy$default$4();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #126                // Method startTimeStamp:()J
         4: lreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #149                // String RunningTest
         2: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/RunningTest;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_4
         1: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/RunningTest;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 3
                       0: 32
                       1: 39
                       2: 46
                       3: 53
                 default: 63
            }
        32: aload_0
        33: invokevirtual #119                // Method suiteName:()Ljava/lang/String;
        36: goto          70
        39: aload_0
        40: invokevirtual #96                 // Method suiteId:()Ljava/lang/String;
        43: goto          70
        46: aload_0
        47: invokevirtual #103                // Method testName:()Ljava/lang/String;
        50: goto          70
        53: aload_0
        54: invokevirtual #126                // Method startTimeStamp:()J
        57: invokestatic  #159                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        60: goto          70
        63: iload_1
        64: invokestatic  #164                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        67: goto          70
        70: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/scalatest/RunningTest;
            0      71     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #171                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #174                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/RunningTest;
    Signature: #166                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/RunningTest
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RunningTest;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 3
                       0: 32
                       1: 37
                       2: 42
                       3: 47
                 default: 52
            }
        32: ldc           #178                // String suiteName
        34: goto          62
        37: ldc           #179                // String suiteId
        39: goto          62
        42: ldc           #180                // String testName
        44: goto          62
        47: ldc           #181                // String startTimeStamp
        49: goto          62
        52: iload_1
        53: invokestatic  #164                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        56: checkcast     #98                 // class java/lang/String
        59: goto          62
        62: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/scalatest/RunningTest;
            0      63     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #171                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #186                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/RunningTest;

  public int compare(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class org/scalatest/RunningTest
         5: invokevirtual #188                // Method compare:(Lorg/scalatest/RunningTest;)I
         8: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalatest/RunningTest;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public org.scalatest.RunningTest(java.lang.String, java.lang.String, java.lang.String, long);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=5
         0: aload_0
         1: aload_1
         2: putfield      #84                 // Field suiteName:Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #86                 // Field suiteId:Ljava/lang/String;
        10: aload_0
        11: aload_3
        12: putfield      #88                 // Field testName:Ljava/lang/String;
        15: aload_0
        16: lload         4
        18: putfield      #91                 // Field startTimeStamp:J
        21: aload_0
        22: invokespecial #191                // Method java/lang/Object."<init>":()V
        25: aload_0
        26: invokestatic  #195                // InterfaceMethod scala/math/Ordered.$init$:(Lscala/math/Ordered;)V
        29: aload_0
        30: invokestatic  #198                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        33: return
      LineNumberTable:
        line 21: 0
        line 22: 5
        line 23: 10
        line 24: 15
        line 25: 21
        line 20: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/scalatest/RunningTest;
            0      34     1 suiteName   Ljava/lang/String;
            0      34     2 suiteId   Ljava/lang/String;
            0      34     3 testName   Ljava/lang/String;
            0      34     4 startTimeStamp   J
    MethodParameters:
      Name                           Flags
      suiteName                      final
      suiteId                        final
      testName                       final
      startTimeStamp                 final
}
Signature: #3                           // Ljava/lang/Object;Lscala/math/Ordered<Lorg/scalatest/RunningTest;>;Lscala/Product;Ljava/io/Serializable;
SourceFile: "RunningTest.scala"
RuntimeVisibleAnnotations:
  0: #13(#14=s#15)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u0005f!B\u0011#\u0005\n2\u0003\u0002\u0003\"\u0001\u0005+\u0007I\u0011A\"\t\u00111\u0003!\u0011#Q\u0001\n\u0011C\u0001\"\u0014\u0001\u0003\u0016\u0004%\ta\u0011\u0005\t\u001d\u0002\u0011\t\u0012)A\u0005\t\"Aq\n\u0001BK\u0002\u0013\u00051\t\u0003\u0005Q\u0001\tE\t\u0015!\u0003E\u0011!\t\u0006A!f\u0001\n\u0003\u0011\u0006\u0002\u0003,\u0001\u0005#\u0005\u000b\u0011B*\t\u000b]\u0003A\u0011\u0001-\t\u000bu\u0003A\u0011\u00010\t\u000b\u0011\u0004A\u0011I3\t\u000b5\u0004A\u0011\t8\t\u000b=\u0004A\u0011\u00019\t\u000fY\u0004\u0011\u0011!C\u0001o\"9A\u0010AI\u0001\n\u0003i\b\u0002CA\t\u0001E\u0005I\u0011A?\t\u0011\u0005M\u0001!%A\u0005\u0002uD\u0011\"!\u0006\u0001#\u0003%\t!a\u0006\t\u0013\u0005m\u0001!!A\u0005B\u0005u\u0001\"CA\u0017\u0001\u0005\u0005I\u0011AA\u0018\u0011%\t\t\u0004AA\u0001\n\u0003\t\u0019\u0004C\u0005\u0002:\u0001\t\t\u0011\"\u0011\u0002<!I\u0011\u0011\n\u0001\u0002\u0002\u0013\u0005\u00111\n\u0005\n\u0003\u001f\u0002\u0011\u0011!C!\u0003#B\u0011\"!\u0016\u0001\u0003\u0003%\t%a\u0016\b\u0015\u0005e#%!A\t\u0002\t\nYFB\u0005\"E\u0005\u0005\t\u0012\u0001\u0012\u0002^!1qk\u0007C\u0001\u0003kB\u0011\"!\u0016\u001c\u0003\u0003%)%a\u0016\t\u0013\u0005]4$!A\u0005\u0002\u0006e\u0004\"CAB7\u0005\u0005I\u0011QAC\u0011%\t9jGA\u0001\n\u0013\tIJA\u0006Sk:t\u0017N\\4UKN$(BA\u0012%\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001&\u0003\ry\'oZ\n\u0006\u0001\u001djCh\u0010\t\u0003Q-j\u0011!\u000b\u0006\u0002U\u0005)1oY1mC&\u0011A&\u000b\u0002\u0007\u0003:L(+\u001a4\u0011\u00079:$H\u0004\u00020k9\u0011\u0001\u0007N\u0007\u0002c)\u0011!gM\u0001\u0007yI|w\u000e\u001e \u0004\u0001%\t!&\u0003\u00027S\u00059\u0001/Y2lC\u001e,\u0017B\u0001\u001d:\u0005\u001dy%\u000fZ3sK\u0012T!AN\u0015\u0011\u0005m\u0002Q\"\u0001\u0012\u0011\u0005!j\u0014B\u0001 *\u0005\u001d\u0001&o\u001c3vGR\u0004\"A\f!\n\u0005\u0005K$\u0001D*fe&\fG.\u001b>bE2,\u0017!C:vSR,g*Y7f+\u0005!\u0005CA#J\u001d\t1u\t\u0005\u00021S%\u0011\u0001*K\u0001\u0007!J,G-\u001a4\n\u0005)[%AB*ue&twM\u0003\u0002IS\u0005Q1/^5uK:\u000bW.\u001a\u0011\u0002\u000fM,\u0018\u000e^3JI\u0006A1/^5uK&#\u0007%\u0001\u0005uKN$h*Y7f\u0003%!Xm\u001d;OC6,\u0007%\u0001\bti\u0006\u0014H\u000fV5nKN#\u0018-\u001c9\u0016\u0003M\u0003\"\u0001\u000b+\n\u0005UK#\u0001\u0002\'p]\u001e\fqb\u001d;beR$\u0016.\\3Ti\u0006l\u0007\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u000biJ&l\u0017/\t\u000b\tK\u0001\u0019\u0001#\t\u000b5K\u0001\u0019\u0001#\t\u000b=K\u0001\u0019\u0001#\t\u000bEK\u0001\u0019A*\u0002\u000f\r|W\u000e]1sKR\u0011qL\u0019\t\u0003Q\u0001L!!Y\u0015\u0003\u0007%sG\u000fC\u0003d\u0015\u0001\u0007!(A\u0003pi\",\'/\u0001\u0004fcV\fGn\u001d\u000b\u0003M&\u0004\"\u0001K4\n\u0005!L#a\u0002\"p_2,\u0017M\u001c\u0005\u0006G.\u0001\rA\u001b\t\u0003Q-L!\u0001\\\u0015\u0003\u0007\u0005s\u00170\u0001\u0005iCND7i\u001c3f)\u0005y\u0016A\u0003;p\'2|w\u000f]8lKR\u0011\u0011\u000f\u001e\t\u0003wIL!a\u001d\u0012\u0003\u0011Mcwn\u001e9pW\u0016DQ!^\u0007A\u0002M\u000b\u0001cY;se\u0016tG\u000fV5nKN#\u0018-\u001c9\u0002\t\r|\u0007/\u001f\u000b\u0006uaL(p\u001f\u0005\b\u0005:\u0001\n\u00111\u0001E\u0011\u001die\u0002%AA\u0002\u0011Cqa\u0014\b\u0011\u0002\u0003\u0007A\tC\u0004R\u001dA\u0005\t\u0019A*\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\taP\u000b\u0002E\u007f.\u0012\u0011\u0011\u0001\t\u0005\u0003\u0007\ti!\u0004\u0002\u0002\u0006)!\u0011qAA\u0005\u0003%)hn\u00195fG.,GMC\u0002\u0002\f%\n!\"\u00198o_R\fG/[8o\u0013\u0011\ty!!\u0002\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-\u0001\bd_BLH\u0005Z3gCVdG\u000f\n\u001a\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%g\u0005q1m\u001c9zI\u0011,g-Y;mi\u0012\"TCAA\rU\t\u0019v0A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0003\u0003?\u0001B!!\t\u0002,5\u0011\u00111\u0005\u0006\u0005\u0003K\t9#\u0001\u0003mC:<\'BAA\u0015\u0003\u0011Q\u0017M^1\n\u0007)\u000b\u0019#\u0001\u0007qe>$Wo\u0019;Be&$\u00180F\u0001`\u00039\u0001(o\u001c3vGR,E.Z7f]R$2A[A\u001b\u0011!\t9$FA\u0001\u0002\u0004y\u0016a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0002>A)\u0011qHA#U6\u0011\u0011\u0011\t\u0006\u0004\u0003\u0007J\u0013AC2pY2,7\r^5p]&!\u0011qIA!\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\u0007\u0019\fi\u0005\u0003\u0005\u00028]\t\t\u00111\u0001k\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005}\u00111\u000b\u0005\t\u0003oA\u0012\u0011!a\u0001?\u0006AAo\\*ue&tw\r\u0006\u0002\u0002 \u0005Y!+\u001e8oS:<G+Z:u!\tY4dE\u0003\u001c\u0003?\nY\u0007E\u0005\u0002b\u0005\u001dD\t\u0012#Tu5\u0011\u00111\r\u0006\u0004\u0003KJ\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003S\n\u0019GA\tBEN$(/Y2u\rVt7\r^5p]R\u0002B!!\u001c\u0002t5\u0011\u0011q\u000e\u0006\u0005\u0003c\n9#\u0001\u0002j_&\u0019\u0011)a\u001c\u0015\u0005\u0005m\u0013!B1qa2LH#\u0003\u001e\u0002|\u0005u\u0014qPAA\u0011\u0015\u0011e\u00041\u0001E\u0011\u0015ie\u00041\u0001E\u0011\u0015ye\u00041\u0001E\u0011\u0015\tf\u00041\u0001T\u0003\u001d)h.\u00199qYf$B!a\"\u0002\u0014B)\u0001&!#\u0002\u000e&\u0019\u00111R\u0015\u0003\r=\u0003H/[8o!\u001dA\u0013q\u0012#E\tNK1!!%*\u0005\u0019!V\u000f\u001d7fi!A\u0011QS\u0010\u0002\u0002\u0003\u0007!(A\u0002yIA\nAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!a\'\u0011\t\u0005\u0005\u0012QT\u0005\u0005\u0003?\u000b\u0019C\u0001\u0004PE*,7\r\u001e"
    )
  ScalaInlineInfo: length = 0x90 (unknown attribute)
   01 01 00 1C 00 40 00 39 01 00 48 00 39 01 00 38
   00 39 01 00 44 00 39 01 00 87 00 8C 01 00 AF 00
   39 01 00 5C 00 4D 01 00 5C 00 5D 01 00 4C 00 4D
   01 00 8B 00 24 01 00 8F 00 52 01 00 90 00 52 01
   00 91 00 52 01 00 92 00 59 01 00 6A 00 39 01 00
   6D 00 6E 01 00 96 00 6E 01 00 97 00 98 01 00 B0
   00 B1 01 00 30 00 31 01 00 A5 00 31 01 00 93 00
   52 01 00 14 00 59 01 00 12 00 52 01 00 10 00 52
   01 00 13 00 52 01 00 71 00 72 01 00 B6 00 52 01

  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
