Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/OptionConverters$RichOptionalLong$.class
  Last modified May 29, 2022; size 2281 bytes
  SHA-256 checksum 8f69a3802f8a9de90e038f25fd6851a0ed6e8fff01793458ff8e6ed1bbe2a69a
  Compiled from "OptionConverters.scala"
public class scala.compat.java8.OptionConverters$RichOptionalLong$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/OptionConverters$RichOptionalLong$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               scala/compat/java8/OptionConverters$RichOptionalLong$
   #2 = Class              #1             // scala/compat/java8/OptionConverters$RichOptionalLong$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               OptionConverters.scala
   #6 = Utf8               scala/compat/java8/OptionConverters$RichOptionalLong
   #7 = Class              #6             // scala/compat/java8/OptionConverters$RichOptionalLong
   #8 = Utf8               scala/compat/java8/OptionConverters
   #9 = Class              #8             // scala/compat/java8/OptionConverters
  #10 = Utf8               RichOptionalLong
  #11 = Utf8               RichOptionalLong$
  #12 = Utf8               MODULE$
  #13 = Utf8               Lscala/compat/java8/OptionConverters$RichOptionalLong$;
  #14 = Utf8               <clinit>
  #15 = Utf8               ()V
  #16 = Utf8               <init>
  #17 = NameAndType        #16:#15        // "<init>":()V
  #18 = Methodref          #2.#17         // scala/compat/java8/OptionConverters$RichOptionalLong$."<init>":()V
  #19 = NameAndType        #12:#13        // MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalLong$;
  #20 = Fieldref           #2.#19         // scala/compat/java8/OptionConverters$RichOptionalLong$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalLong$;
  #21 = Utf8               asScala$extension
  #22 = Utf8               (Ljava/util/OptionalLong;)Lscala/Option;
  #23 = Utf8               (Ljava/util/OptionalLong;)Lscala/Option<Ljava/lang/Object;>;
  #24 = Utf8               $this
  #25 = Utf8               java/util/OptionalLong
  #26 = Class              #25            // java/util/OptionalLong
  #27 = Utf8               isPresent
  #28 = Utf8               ()Z
  #29 = NameAndType        #27:#28        // isPresent:()Z
  #30 = Methodref          #26.#29        // java/util/OptionalLong.isPresent:()Z
  #31 = Utf8               scala/Some
  #32 = Class              #31            // scala/Some
  #33 = Utf8               getAsLong
  #34 = Utf8               ()J
  #35 = NameAndType        #33:#34        // getAsLong:()J
  #36 = Methodref          #26.#35        // java/util/OptionalLong.getAsLong:()J
  #37 = Utf8               scala/runtime/BoxesRunTime
  #38 = Class              #37            // scala/runtime/BoxesRunTime
  #39 = Utf8               boxToLong
  #40 = Utf8               (J)Ljava/lang/Long;
  #41 = NameAndType        #39:#40        // boxToLong:(J)Ljava/lang/Long;
  #42 = Methodref          #38.#41        // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #43 = Utf8               (Ljava/lang/Object;)V
  #44 = NameAndType        #16:#43        // "<init>":(Ljava/lang/Object;)V
  #45 = Methodref          #32.#44        // scala/Some."<init>":(Ljava/lang/Object;)V
  #46 = Utf8               scala/None$
  #47 = Class              #46            // scala/None$
  #48 = Utf8               Lscala/None$;
  #49 = NameAndType        #12:#48        // MODULE$:Lscala/None$;
  #50 = Fieldref           #47.#49        // scala/None$.MODULE$:Lscala/None$;
  #51 = Utf8               this
  #52 = Utf8               Ljava/util/OptionalLong;
  #53 = Utf8               scala/Option
  #54 = Class              #53            // scala/Option
  #55 = Utf8               asGeneric$extension
  #56 = Utf8               (Ljava/util/OptionalLong;)Ljava/util/Optional;
  #57 = Utf8               (Ljava/util/OptionalLong;)Ljava/util/Optional<Ljava/lang/Object;>;
  #58 = Utf8               java/util/Optional
  #59 = Class              #58            // java/util/Optional
  #60 = Utf8               of
  #61 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;
  #62 = NameAndType        #60:#61        // of:(Ljava/lang/Object;)Ljava/util/Optional;
  #63 = Methodref          #59.#62        // java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
  #64 = Utf8               empty
  #65 = Utf8               ()Ljava/util/Optional;
  #66 = NameAndType        #64:#65        // empty:()Ljava/util/Optional;
  #67 = Methodref          #59.#66        // java/util/Optional.empty:()Ljava/util/Optional;
  #68 = Utf8               hashCode$extension
  #69 = Utf8               (Ljava/util/OptionalLong;)I
  #70 = Utf8               hashCode
  #71 = Utf8               ()I
  #72 = NameAndType        #70:#71        // hashCode:()I
  #73 = Methodref          #26.#72        // java/util/OptionalLong.hashCode:()I
  #74 = Utf8               equals$extension
  #75 = Utf8               (Ljava/util/OptionalLong;Ljava/lang/Object;)Z
  #76 = Utf8               x$1
  #77 = Utf8               underlying
  #78 = Utf8               ()Ljava/util/OptionalLong;
  #79 = NameAndType        #77:#78        // underlying:()Ljava/util/OptionalLong;
  #80 = Methodref          #7.#79         // scala/compat/java8/OptionConverters$RichOptionalLong.underlying:()Ljava/util/OptionalLong;
  #81 = Utf8               equals
  #82 = Utf8               (Ljava/lang/Object;)Z
  #83 = NameAndType        #81:#82        // equals:(Ljava/lang/Object;)Z
  #84 = Methodref          #4.#83         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #85 = Utf8               Ljava/lang/Object;
  #86 = Methodref          #4.#17         // java/lang/Object."<init>":()V
  #87 = Utf8               Code
  #88 = Utf8               LineNumberTable
  #89 = Utf8               StackMapTable
  #90 = Utf8               LocalVariableTable
  #91 = Utf8               Signature
  #92 = Utf8               MethodParameters
  #93 = Utf8               InnerClasses
  #94 = Utf8               SourceFile
  #95 = Utf8               ScalaInlineInfo
  #96 = Utf8               Scala
{
  public static final scala.compat.java8.OptionConverters$RichOptionalLong$ MODULE$;
    descriptor: Lscala/compat/java8/OptionConverters$RichOptionalLong$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/compat/java8/OptionConverters$RichOptionalLong$
         3: dup
         4: invokespecial #18                 // Method "<init>":()V
         7: putstatic     #20                 // Field MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalLong$;
        10: return
      LineNumberTable:
        line 122: 0

  public final scala.Option<java.lang.Object> asScala$extension(java.util.OptionalLong);
    descriptor: (Ljava/util/OptionalLong;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #30                 // Method java/util/OptionalLong.isPresent:()Z
         4: ifeq          24
         7: new           #32                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #36                 // Method java/util/OptionalLong.getAsLong:()J
        15: invokestatic  #42                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        18: invokespecial #45                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: goto          27
        24: getstatic     #50                 // Field scala/None$.MODULE$:Lscala/None$;
        27: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 124: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/compat/java8/OptionConverters$RichOptionalLong$;
            0      28     1 $this   Ljava/util/OptionalLong;
    Signature: #23                          // (Ljava/util/OptionalLong;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final java.util.Optional<java.lang.Object> asGeneric$extension(java.util.OptionalLong);
    descriptor: (Ljava/util/OptionalLong;)Ljava/util/Optional;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #30                 // Method java/util/OptionalLong.isPresent:()Z
         4: ifeq          20
         7: aload_1
         8: invokevirtual #36                 // Method java/util/OptionalLong.getAsLong:()J
        11: invokestatic  #42                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        14: invokestatic  #63                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
        17: goto          23
        20: invokestatic  #67                 // Method java/util/Optional.empty:()Ljava/util/Optional;
        23: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/util/Optional ]
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lscala/compat/java8/OptionConverters$RichOptionalLong$;
            0      24     1 $this   Ljava/util/OptionalLong;
    Signature: #57                          // (Ljava/util/OptionalLong;)Ljava/util/Optional<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(java.util.OptionalLong);
    descriptor: (Ljava/util/OptionalLong;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #73                 // Method java/util/OptionalLong.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$RichOptionalLong$;
            0       5     1 $this   Ljava/util/OptionalLong;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(java.util.OptionalLong, java.lang.Object);
    descriptor: (Ljava/util/OptionalLong;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #7                  // class scala/compat/java8/OptionConverters$RichOptionalLong
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          83
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #7                  // class scala/compat/java8/OptionConverters$RichOptionalLong
        40: invokevirtual #80                 // Method scala/compat/java8/OptionConverters$RichOptionalLong.underlying:()Ljava/util/OptionalLong;
        43: astore        5
        45: aload_1
        46: aload         5
        48: astore        6
        50: dup
        51: ifnonnull     63
        54: pop
        55: aload         6
        57: ifnull        71
        60: goto          75
        63: aload         6
        65: invokevirtual #84                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        68: ifeq          75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/compat/java8/OptionConverters$RichOptionalLong$, class java/util/OptionalLong, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/util/OptionalLong ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/compat/java8/OptionConverters$RichOptionalLong$, class java/util/OptionalLong, class java/lang/Object, int, class java/lang/Object, class java/util/OptionalLong, class java/util/OptionalLong ]
          stack = [ class java/util/OptionalLong ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lscala/compat/java8/OptionConverters$RichOptionalLong$;
            0      85     1 $this   Ljava/util/OptionalLong;
            0      85     2   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public scala.compat.java8.OptionConverters$RichOptionalLong$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #86                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$RichOptionalLong$;
}
InnerClasses:
  public static final #10= #7 of #9;      // RichOptionalLong=class scala/compat/java8/OptionConverters$RichOptionalLong of class scala/compat/java8/OptionConverters
  public static #11= #2 of #9;            // RichOptionalLong$=class scala/compat/java8/OptionConverters$RichOptionalLong$ of class scala/compat/java8/OptionConverters
SourceFile: "OptionConverters.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 10 00 0F 01 00 37 00 38 01 00 15
   00 16 01 00 4A 00 4B 01 00 44 00 45 01
  Scala: length = 0x0 (unknown attribute)

