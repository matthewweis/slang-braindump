Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/derive/MkDecodeJson.class
  Last modified May 29, 2022; size 2029 bytes
  SHA-256 checksum ac5ab18369643f612eacf9339f8463f9b329a79ecefd2311c7b4d537e572f487
  Compiled from "MkDecodeJson.scala"
public interface argonaut.derive.MkDecodeJson<T extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // argonaut/derive/MkDecodeJson
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 5
Constant pool:
   #1 = Utf8               argonaut/derive/MkDecodeJson
   #2 = Class              #1             // argonaut/derive/MkDecodeJson
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               MkDecodeJson.scala
   #7 = Utf8               Lscala/reflect/ScalaSignature;
   #8 = Utf8               bytes
   #9 = Utf8               \u0006\u0005Q3q\u0001C\u0005\u0011\u0002G\u0005a\u0002C\u0003\u0017\u0001\u0019\u0005qcB\u0003(\u0013!\u0005\u0001FB\u0003\t\u0013!\u0005!\u0006C\u0003,\u0007\u0011\u0005A\u0006C\u0003.\u0007\u0011\u0005a\u0006C\u00035\u0007\u0011\rQ\u0007C\u0003F\u0007\u0011\raI\u0001\u0007NW\u0012+7m\u001c3f\u0015N|gN\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u0001QCA\b\u001f\'\t\u0001\u0001\u0003\u0005\u0002\u0012)5\t!CC\u0001\u0014\u0003\u0015\u00198-\u00197b\u0013\t)\"C\u0001\u0004B]f\u0014VMZ\u0001\u000bI\u0016\u001cw\u000eZ3Kg>tW#\u0001\r\u0011\u0007eQB$D\u0001\f\u0013\tY2B\u0001\u0006EK\u000e|G-\u001a&t_:\u0004\"!\b\u0010\r\u0001\u0011)q\u0004\u0001b\u0001A\t\tA+\u0005\u0002\"IA\u0011\u0011CI\u0005\u0003GI\u0011qAT8uQ&tw\r\u0005\u0002\u0012K%\u0011aE\u0005\u0002\u0004\u0003:L\u0018\u0001D\'l\t\u0016\u001cw\u000eZ3Kg>t\u0007CA\u0015\u0004\u001b\u0005I1CA\u0002\u0011\u0003\u0019a\u0014N\\5u}Q\t\u0001&A\u0003baBd\u00170\u0006\u00020eQ\u0011\u0001g\r\t\u0004S\u0001\t\u0004CA\u000f3\t\u0015yRA1\u0001!\u0011\u00151R\u0001q\u00011\u0003\u001d\u0001(o\u001c3vGR,\"AN\u001d\u0015\u0007]Z\u0004\tE\u0002*\u0001a\u0002\"!H\u001d\u0005\u000bi2!\u0019\u0001\u0011\u0003\u0003ACQ\u0001\u0010\u0004A\u0004u\n!\"\u001e8eKJd\u00170\u001b8h!\rIc\bO\u0005\u0003\u007f%\u0011\u0011\u0003\u0015:pIV\u001cG\u000fR3d_\u0012,\'j]8o\u0011\u0015\te\u0001q\u0001C\u0003!\u0019w\u000eZ3d\r>\u0014\bcA\u0015Dq%\u0011A)\u0003\u0002\u0014\u0015N|g\u000e\u0015:pIV\u001cGoQ8eK\u000e4uN]\u0001\u0004gVlWCA$K)\rAE\n\u0015\t\u0004S\u0001I\u0005CA\u000fK\t\u0015YuA1\u0001!\u0005\u0005\u0019\u0006\"\u0002\u001f\b\u0001\bi\u0005cA\u0015O\u0013&\u0011q*\u0003\u0002\u000e\'VlG)Z2pI\u0016T5o\u001c8\t\u000b\u0005;\u00019A)\u0011\u0007%\u0012\u0016*\u0003\u0002T\u0013\ty!j]8o\'Vl7i\u001c3fG\u001a{\'\u000f
  #10 = Utf8               sum
  #11 = Utf8               (Largonaut/derive/SumDecodeJson;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkDecodeJson;
  #12 = Utf8               <S:Ljava/lang/Object;>(Largonaut/derive/SumDecodeJson<TS;>;Largonaut/derive/JsonSumCodecFor<TS;>;)Largonaut/derive/MkDecodeJson<TS;>;
  #13 = Utf8               underlying
  #14 = Utf8               codecFor
  #15 = Utf8               argonaut/derive/MkDecodeJson$
  #16 = Class              #15            // argonaut/derive/MkDecodeJson$
  #17 = Utf8               MODULE$
  #18 = Utf8               Largonaut/derive/MkDecodeJson$;
  #19 = NameAndType        #17:#18        // MODULE$:Largonaut/derive/MkDecodeJson$;
  #20 = Fieldref           #16.#19        // argonaut/derive/MkDecodeJson$.MODULE$:Largonaut/derive/MkDecodeJson$;
  #21 = NameAndType        #10:#11        // sum:(Largonaut/derive/SumDecodeJson;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkDecodeJson;
  #22 = Methodref          #16.#21        // argonaut/derive/MkDecodeJson$.sum:(Largonaut/derive/SumDecodeJson;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkDecodeJson;
  #23 = Utf8               product
  #24 = Utf8               (Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
  #25 = Utf8               <P:Ljava/lang/Object;>(Largonaut/derive/ProductDecodeJson<TP;>;Largonaut/derive/JsonProductCodecFor<TP;>;)Largonaut/derive/MkDecodeJson<TP;>;
  #26 = NameAndType        #23:#24        // product:(Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
  #27 = Methodref          #16.#26        // argonaut/derive/MkDecodeJson$.product:(Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
  #28 = Utf8               apply
  #29 = Utf8               (Largonaut/derive/MkDecodeJson;)Largonaut/derive/MkDecodeJson;
  #30 = Utf8               <T:Ljava/lang/Object;>(Largonaut/derive/MkDecodeJson<TT;>;)Largonaut/derive/MkDecodeJson<TT;>;
  #31 = Utf8               decodeJson
  #32 = NameAndType        #28:#29        // apply:(Largonaut/derive/MkDecodeJson;)Largonaut/derive/MkDecodeJson;
  #33 = Methodref          #16.#32        // argonaut/derive/MkDecodeJson$.apply:(Largonaut/derive/MkDecodeJson;)Largonaut/derive/MkDecodeJson;
  #34 = Utf8               ()Largonaut/DecodeJson;
  #35 = Utf8               ()Largonaut/DecodeJson<TT;>;
  #36 = Utf8               Code
  #37 = Utf8               Signature
  #38 = Utf8               MethodParameters
  #39 = Utf8               SourceFile
  #40 = Utf8               RuntimeVisibleAnnotations
  #41 = Utf8               ScalaInlineInfo
  #42 = Utf8               ScalaSig
{
  public static <S extends java.lang.Object> argonaut.derive.MkDecodeJson<S> sum(argonaut.derive.SumDecodeJson<S>, argonaut.derive.JsonSumCodecFor<S>);
    descriptor: (Largonaut/derive/SumDecodeJson;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkDecodeJson;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #20                 // Field argonaut/derive/MkDecodeJson$.MODULE$:Largonaut/derive/MkDecodeJson$;
         3: aload_0
         4: aload_1
         5: invokevirtual #22                 // Method argonaut/derive/MkDecodeJson$.sum:(Largonaut/derive/SumDecodeJson;Largonaut/derive/JsonSumCodecFor;)Largonaut/derive/MkDecodeJson;
         8: areturn
    Signature: #12                          // <S:Ljava/lang/Object;>(Largonaut/derive/SumDecodeJson<TS;>;Largonaut/derive/JsonSumCodecFor<TS;>;)Largonaut/derive/MkDecodeJson<TS;>;
    MethodParameters:
      Name                           Flags
      underlying                     final
      codecFor                       final

  public static <P extends java.lang.Object> argonaut.derive.MkDecodeJson<P> product(argonaut.derive.ProductDecodeJson<P>, argonaut.derive.JsonProductCodecFor<P>);
    descriptor: (Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #20                 // Field argonaut/derive/MkDecodeJson$.MODULE$:Largonaut/derive/MkDecodeJson$;
         3: aload_0
         4: aload_1
         5: invokevirtual #27                 // Method argonaut/derive/MkDecodeJson$.product:(Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
         8: areturn
    Signature: #25                          // <P:Ljava/lang/Object;>(Largonaut/derive/ProductDecodeJson<TP;>;Largonaut/derive/JsonProductCodecFor<TP;>;)Largonaut/derive/MkDecodeJson<TP;>;
    MethodParameters:
      Name                           Flags
      underlying                     final
      codecFor                       final

  public static <T extends java.lang.Object> argonaut.derive.MkDecodeJson<T> apply(argonaut.derive.MkDecodeJson<T>);
    descriptor: (Largonaut/derive/MkDecodeJson;)Largonaut/derive/MkDecodeJson;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #20                 // Field argonaut/derive/MkDecodeJson$.MODULE$:Largonaut/derive/MkDecodeJson$;
         3: aload_0
         4: invokevirtual #33                 // Method argonaut/derive/MkDecodeJson$.apply:(Largonaut/derive/MkDecodeJson;)Largonaut/derive/MkDecodeJson;
         7: areturn
    Signature: #30                          // <T:Ljava/lang/Object;>(Largonaut/derive/MkDecodeJson<TT;>;)Largonaut/derive/MkDecodeJson<TT;>;
    MethodParameters:
      Name                           Flags
      decodeJson                     final

  public abstract argonaut.DecodeJson<T> decodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #35                          // ()Largonaut/DecodeJson<TT;>;
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "MkDecodeJson.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005Q3q\u0001C\u0005\u0011\u0002G\u0005a\u0002C\u0003\u0017\u0001\u0019\u0005qcB\u0003(\u0013!\u0005\u0001FB\u0003\t\u0013!\u0005!\u0006C\u0003,\u0007\u0011\u0005A\u0006C\u0003.\u0007\u0011\u0005a\u0006C\u00035\u0007\u0011\rQ\u0007C\u0003F\u0007\u0011\raI\u0001\u0007NW\u0012+7m\u001c3f\u0015N|gN\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u0001QCA\b\u001f\'\t\u0001\u0001\u0003\u0005\u0002\u0012)5\t!CC\u0001\u0014\u0003\u0015\u00198-\u00197b\u0013\t)\"C\u0001\u0004B]f\u0014VMZ\u0001\u000bI\u0016\u001cw\u000eZ3Kg>tW#\u0001\r\u0011\u0007eQB$D\u0001\f\u0013\tY2B\u0001\u0006EK\u000e|G-\u001a&t_:\u0004\"!\b\u0010\r\u0001\u0011)q\u0004\u0001b\u0001A\t\tA+\u0005\u0002\"IA\u0011\u0011CI\u0005\u0003GI\u0011qAT8uQ&tw\r\u0005\u0002\u0012K%\u0011aE\u0005\u0002\u0004\u0003:L\u0018\u0001D\'l\t\u0016\u001cw\u000eZ3Kg>t\u0007CA\u0015\u0004\u001b\u0005I1CA\u0002\u0011\u0003\u0019a\u0014N\\5u}Q\t\u0001&A\u0003baBd\u00170\u0006\u00020eQ\u0011\u0001g\r\t\u0004S\u0001\t\u0004CA\u000f3\t\u0015yRA1\u0001!\u0011\u00151R\u0001q\u00011\u0003\u001d\u0001(o\u001c3vGR,\"AN\u001d\u0015\u0007]Z\u0004\tE\u0002*\u0001a\u0002\"!H\u001d\u0005\u000bi2!\u0019\u0001\u0011\u0003\u0003ACQ\u0001\u0010\u0004A\u0004u\n!\"\u001e8eKJd\u00170\u001b8h!\rIc\bO\u0005\u0003\u007f%\u0011\u0011\u0003\u0015:pIV\u001cG\u000fR3d_\u0012,\'j]8o\u0011\u0015\te\u0001q\u0001C\u0003!\u0019w\u000eZ3d\r>\u0014\bcA\u0015Dq%\u0011A)\u0003\u0002\u0014\u0015N|g\u000e\u0015:pIV\u001cGoQ8eK\u000e4uN]\u0001\u0004gVlWCA$K)\rAE\n\u0015\t\u0004S\u0001I\u0005CA\u000fK\t\u0015YuA1\u0001!\u0005\u0005\u0019\u0006\"\u0002\u001f\b\u0001\bi\u0005cA\u0015O\u0013&\u0011q*\u0003\u0002\u000e\'VlG)Z2pI\u0016T5o\u001c8\t\u000b\u0005;\u00019A)\u0011\u0007%\u0012\u0016*\u0003\u0002T\u0013\ty!j]8o\'Vl7i\u001c3fG\u001a{\'\u000f"
    )
  ScalaInlineInfo: length = 0x9 (unknown attribute)
   01 00 00 01 00 1F 00 22 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
