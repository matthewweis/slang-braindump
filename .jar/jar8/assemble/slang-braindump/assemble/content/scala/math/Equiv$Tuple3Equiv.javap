Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Equiv$Tuple3Equiv.class
  Last modified May 29, 2022; size 2701 bytes
  SHA-256 checksum a977cb0871c34fa58ce9a5b315bc8d2510946f12c82ad0ff602121b1ecbf99d9
  Compiled from "Equiv.scala"
public final class scala.math.Equiv$Tuple3Equiv<T1 extends java.lang.Object, T2 extends java.lang.Object, T3 extends java.lang.Object> extends java.lang.Object implements scala.math.Equiv<scala.Tuple3<T1, T2, T3>>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/Equiv$Tuple3Equiv
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 8, attributes: 5
Constant pool:
   #1 = Utf8               scala/math/Equiv$Tuple3Equiv
   #2 = Class              #1             // scala/math/Equiv$Tuple3Equiv
   #3 = Utf8               <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple3<TT1;TT2;TT3;>;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/math/Equiv
   #7 = Class              #6             // scala/math/Equiv
   #8 = Utf8               Equiv.scala
   #9 = Utf8               Tuple3Equiv
  #10 = Utf8               eqv1
  #11 = Utf8               Lscala/math/Equiv;
  #12 = Utf8               Lscala/math/Equiv<TT1;>;
  #13 = Utf8               eqv2
  #14 = Utf8               Lscala/math/Equiv<TT2;>;
  #15 = Utf8               eqv3
  #16 = Utf8               Lscala/math/Equiv<TT3;>;
  #17 = Utf8               ()Lscala/math/Equiv;
  #18 = Utf8               ()Lscala/math/Equiv<TT1;>;
  #19 = NameAndType        #10:#11        // eqv1:Lscala/math/Equiv;
  #20 = Fieldref           #2.#19         // scala/math/Equiv$Tuple3Equiv.eqv1:Lscala/math/Equiv;
  #21 = Utf8               this
  #22 = Utf8               Lscala/math/Equiv$Tuple3Equiv;
  #23 = Utf8               ()Lscala/math/Equiv<TT2;>;
  #24 = NameAndType        #13:#11        // eqv2:Lscala/math/Equiv;
  #25 = Fieldref           #2.#24         // scala/math/Equiv$Tuple3Equiv.eqv2:Lscala/math/Equiv;
  #26 = Utf8               ()Lscala/math/Equiv<TT3;>;
  #27 = NameAndType        #15:#11        // eqv3:Lscala/math/Equiv;
  #28 = Fieldref           #2.#27         // scala/math/Equiv$Tuple3Equiv.eqv3:Lscala/math/Equiv;
  #29 = Utf8               equiv
  #30 = Utf8               (Lscala/Tuple3;Lscala/Tuple3;)Z
  #31 = Utf8               (Lscala/Tuple3<TT1;TT2;TT3;>;Lscala/Tuple3<TT1;TT2;TT3;>;)Z
  #32 = Utf8               x
  #33 = Utf8               y
  #34 = NameAndType        #10:#17        // eqv1:()Lscala/math/Equiv;
  #35 = Methodref          #2.#34         // scala/math/Equiv$Tuple3Equiv.eqv1:()Lscala/math/Equiv;
  #36 = Utf8               scala/Tuple3
  #37 = Class              #36            // scala/Tuple3
  #38 = Utf8               _1
  #39 = Utf8               ()Ljava/lang/Object;
  #40 = NameAndType        #38:#39        // _1:()Ljava/lang/Object;
  #41 = Methodref          #37.#40        // scala/Tuple3._1:()Ljava/lang/Object;
  #42 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #43 = NameAndType        #29:#42        // equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #44 = InterfaceMethodref #7.#43         // scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #45 = NameAndType        #13:#17        // eqv2:()Lscala/math/Equiv;
  #46 = Methodref          #2.#45         // scala/math/Equiv$Tuple3Equiv.eqv2:()Lscala/math/Equiv;
  #47 = Utf8               _2
  #48 = NameAndType        #47:#39        // _2:()Ljava/lang/Object;
  #49 = Methodref          #37.#48        // scala/Tuple3._2:()Ljava/lang/Object;
  #50 = NameAndType        #15:#17        // eqv3:()Lscala/math/Equiv;
  #51 = Methodref          #2.#50         // scala/math/Equiv$Tuple3Equiv.eqv3:()Lscala/math/Equiv;
  #52 = Utf8               _3
  #53 = NameAndType        #52:#39        // _3:()Ljava/lang/Object;
  #54 = Methodref          #37.#53        // scala/Tuple3._3:()Ljava/lang/Object;
  #55 = Utf8               Lscala/Tuple3;
  #56 = Utf8               equals
  #57 = Utf8               (Ljava/lang/Object;)Z
  #58 = Utf8               obj
  #59 = NameAndType        #56:#57        // equals:(Ljava/lang/Object;)Z
  #60 = Methodref          #5.#59         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #61 = Utf8               Ljava/lang/Object;
  #62 = Utf8               hashCode
  #63 = Utf8               ()I
  #64 = Utf8               <init>
  #65 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #66 = NameAndType        #64:#65        // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #67 = Methodref          #37.#66        // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #68 = Utf8               scala/util/hashing/MurmurHash3$
  #69 = Class              #68            // scala/util/hashing/MurmurHash3$
  #70 = Utf8               MODULE$
  #71 = Utf8               Lscala/util/hashing/MurmurHash3$;
  #72 = NameAndType        #70:#71        // MODULE$:Lscala/util/hashing/MurmurHash3$;
  #73 = Fieldref           #69.#72        // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
  #74 = Utf8               productHash
  #75 = Utf8               (Lscala/Product;)I
  #76 = NameAndType        #74:#75        // productHash:(Lscala/Product;)I
  #77 = Methodref          #69.#76        // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
  #78 = Utf8               hashCode_this
  #79 = NameAndType        #29:#30        // equiv:(Lscala/Tuple3;Lscala/Tuple3;)Z
  #80 = Methodref          #2.#79         // scala/math/Equiv$Tuple3Equiv.equiv:(Lscala/Tuple3;Lscala/Tuple3;)Z
  #81 = Utf8               (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
  #82 = Utf8               (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;)V
  #83 = Utf8               ()V
  #84 = NameAndType        #64:#83        // "<init>":()V
  #85 = Methodref          #5.#84         // java/lang/Object."<init>":()V
  #86 = Utf8               Signature
  #87 = Utf8               Code
  #88 = Utf8               LineNumberTable
  #89 = Utf8               LocalVariableTable
  #90 = Utf8               StackMapTable
  #91 = Utf8               MethodParameters
  #92 = Utf8               InnerClasses
  #93 = Utf8               SourceFile
  #94 = Utf8               ScalaInlineInfo
  #95 = Utf8               Scala
{
  private final scala.math.Equiv<T1> eqv1;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/math/Equiv<TT1;>;

  private final scala.math.Equiv<T2> eqv2;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/math/Equiv<TT2;>;

  private final scala.math.Equiv<T3> eqv3;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/math/Equiv<TT3;>;

  private scala.math.Equiv<T1> eqv1();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #20                 // Field eqv1:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple3Equiv;
    Signature: #18                          // ()Lscala/math/Equiv<TT1;>;

  private scala.math.Equiv<T2> eqv2();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #25                 // Field eqv2:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 288: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple3Equiv;
    Signature: #23                          // ()Lscala/math/Equiv<TT2;>;

  private scala.math.Equiv<T3> eqv3();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #28                 // Field eqv3:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 289: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple3Equiv;
    Signature: #26                          // ()Lscala/math/Equiv<TT3;>;

  public boolean equiv(scala.Tuple3<T1, T2, T3>, scala.Tuple3<T1, T2, T3>);
    descriptor: (Lscala/Tuple3;Lscala/Tuple3;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #35                 // Method eqv1:()Lscala/math/Equiv;
         4: aload_1
         5: invokevirtual #41                 // Method scala/Tuple3._1:()Ljava/lang/Object;
         8: aload_2
         9: invokevirtual #41                 // Method scala/Tuple3._1:()Ljava/lang/Object;
        12: invokeinterface #44,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        17: ifeq          62
        20: aload_0
        21: invokespecial #46                 // Method eqv2:()Lscala/math/Equiv;
        24: aload_1
        25: invokevirtual #49                 // Method scala/Tuple3._2:()Ljava/lang/Object;
        28: aload_2
        29: invokevirtual #49                 // Method scala/Tuple3._2:()Ljava/lang/Object;
        32: invokeinterface #44,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        37: ifeq          62
        40: aload_0
        41: invokespecial #51                 // Method eqv3:()Lscala/math/Equiv;
        44: aload_1
        45: invokevirtual #54                 // Method scala/Tuple3._3:()Ljava/lang/Object;
        48: aload_2
        49: invokevirtual #54                 // Method scala/Tuple3._3:()Ljava/lang/Object;
        52: invokeinterface #44,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        57: ifeq          62
        60: iconst_1
        61: ireturn
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 62 /* same */
      LineNumberTable:
        line 291: 0
        line 292: 20
        line 293: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lscala/math/Equiv$Tuple3Equiv;
            0      64     1     x   Lscala/Tuple3;
            0      64     2     y   Lscala/Tuple3;
    Signature: #31                          // (Lscala/Tuple3<TT1;TT2;TT3;>;Lscala/Tuple3<TT1;TT2;TT3;>;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/lang/Object
         4: ifeq          17
         7: aload_0
         8: aload_1
         9: if_acmpne     17
        12: iconst_1
        13: istore_2
        14: goto          133
        17: aload_1
        18: instanceof    #2                  // class scala/math/Equiv$Tuple3Equiv
        21: ifeq          131
        24: aload_1
        25: checkcast     #2                  // class scala/math/Equiv$Tuple3Equiv
        28: astore_3
        29: aload_0
        30: invokespecial #35                 // Method eqv1:()Lscala/math/Equiv;
        33: aload_3
        34: invokespecial #35                 // Method eqv1:()Lscala/math/Equiv;
        37: astore        4
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         4
        46: ifnull        60
        49: goto          126
        52: aload         4
        54: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          126
        60: aload_0
        61: invokespecial #46                 // Method eqv2:()Lscala/math/Equiv;
        64: aload_3
        65: invokespecial #46                 // Method eqv2:()Lscala/math/Equiv;
        68: astore        5
        70: dup
        71: ifnonnull     83
        74: pop
        75: aload         5
        77: ifnull        91
        80: goto          126
        83: aload         5
        85: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        88: ifeq          126
        91: aload_0
        92: invokespecial #51                 // Method eqv3:()Lscala/math/Equiv;
        95: aload_3
        96: invokespecial #51                 // Method eqv3:()Lscala/math/Equiv;
        99: astore        6
       101: dup
       102: ifnonnull     114
       105: pop
       106: aload         6
       108: ifnull        122
       111: goto          126
       114: aload         6
       116: invokevirtual #60                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       119: ifeq          126
       122: iconst_1
       123: goto          127
       126: iconst_0
       127: istore_2
       128: goto          133
       131: iconst_0
       132: istore_2
       133: iload_2
       134: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/math/Equiv$Tuple3Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple3Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple3Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple3Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple3Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple3Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 296: 0
        line 297: 17
        line 298: 29
        line 299: 60
        line 300: 91
        line 301: 131
        line 295: 133
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     135     0  this   Lscala/math/Equiv$Tuple3Equiv;
            0     135     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: new           #37                 // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokespecial #35                 // Method eqv1:()Lscala/math/Equiv;
         8: aload_0
         9: invokespecial #46                 // Method eqv2:()Lscala/math/Equiv;
        12: aload_0
        13: invokespecial #51                 // Method eqv3:()Lscala/math/Equiv;
        16: invokespecial #67                 // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        19: astore_1
        20: getstatic     #73                 // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        23: aload_1
        24: invokevirtual #77                 // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
        27: ireturn
      LineNumberTable:
        line 303: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/math/Equiv$Tuple3Equiv;
           20       7     1 hashCode_this   Lscala/Tuple3;

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #37                 // class scala/Tuple3
         5: aload_2
         6: checkcast     #37                 // class scala/Tuple3
         9: invokevirtual #80                 // Method equiv:(Lscala/Tuple3;Lscala/Tuple3;)Z
        12: ireturn
      LineNumberTable:
        line 287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Equiv$Tuple3Equiv;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Equiv$Tuple3Equiv(scala.math.Equiv<T1>, scala.math.Equiv<T2>, scala.math.Equiv<T3>);
    descriptor: (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #20                 // Field eqv1:Lscala/math/Equiv;
         5: aload_0
         6: aload_2
         7: putfield      #25                 // Field eqv2:Lscala/math/Equiv;
        10: aload_0
        11: aload_3
        12: putfield      #28                 // Field eqv3:Lscala/math/Equiv;
        15: aload_0
        16: invokespecial #85                 // Method java/lang/Object."<init>":()V
        19: return
      LineNumberTable:
        line 287: 0
        line 288: 5
        line 289: 10
        line 287: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/math/Equiv$Tuple3Equiv;
            0      20     1  eqv1   Lscala/math/Equiv;
            0      20     2  eqv2   Lscala/math/Equiv;
            0      20     3  eqv3   Lscala/math/Equiv;
    Signature: #82                          // (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;)V
    MethodParameters:
      Name                           Flags
      eqv1                           final
      eqv2                           final
      eqv3                           final
}
InnerClasses:
  private static final #9= #2 of #7;      // Tuple3Equiv=class scala/math/Equiv$Tuple3Equiv of class scala/math/Equiv
Signature: #3                           // <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple3<TT1;TT2;TT3;>;>;
SourceFile: "Equiv.scala"
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 01 00 08 00 40 00 51 01 00 38 00 39 01 00 1D
   00 2A 01 00 1D 00 1E 01 00 0A 00 11 01 00 0D 00
   11 01 00 0F 00 11 01 00 3E 00 3F 01
  Scala: length = 0x0 (unknown attribute)

