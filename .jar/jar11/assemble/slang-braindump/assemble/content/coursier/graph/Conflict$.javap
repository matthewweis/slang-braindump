Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/graph/Conflict$.class
  Last modified May 29, 2022; size 8841 bytes
  SHA-256 checksum 67ea6b153dece0e8cf82145c46310c9ccb04a1a2f4f3a584f77174123831ed73
  Compiled from "Conflict.scala"
public final class coursier.graph.Conflict$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/graph/Conflict$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 18, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/Conflict$
    #2 = Class              #1            // coursier/graph/Conflict$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Conflict.scala
    #8 = Utf8               coursier/graph/Conflict$$anonfun$$nestedInanonfun$conflicted$2$1
    #9 = Class              #8            // coursier/graph/Conflict$$anonfun$$nestedInanonfun$conflicted$2$1
   #10 = Utf8               coursier/graph/Conflict$Conflicted
   #11 = Class              #10           // coursier/graph/Conflict$Conflicted
   #12 = Utf8               coursier/graph/Conflict
   #13 = Class              #12           // coursier/graph/Conflict
   #14 = Utf8               Conflicted
   #15 = Utf8               coursier/graph/Conflict$Conflicted$
   #16 = Class              #15           // coursier/graph/Conflict$Conflicted$
   #17 = Utf8
   #18 = Utf8               coursier/graph/ReverseModuleTree$Node
   #19 = Class              #18           // coursier/graph/ReverseModuleTree$Node
   #20 = Utf8               coursier/graph/ReverseModuleTree
   #21 = Class              #20           // coursier/graph/ReverseModuleTree
   #22 = Utf8               Node
   #23 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #24 = Class              #23           // java/lang/invoke/MethodHandles$Lookup
   #25 = Utf8               java/lang/invoke/MethodHandles
   #26 = Class              #25           // java/lang/invoke/MethodHandles
   #27 = Utf8               Lookup
   #28 = Utf8               MODULE$
   #29 = Utf8               Lcoursier/graph/Conflict$;
   #30 = Utf8               <clinit>
   #31 = Utf8               ()V
   #32 = Utf8               <init>
   #33 = NameAndType        #32:#31       // "<init>":()V
   #34 = Methodref          #2.#33        // coursier/graph/Conflict$."<init>":()V
   #35 = NameAndType        #28:#29       // MODULE$:Lcoursier/graph/Conflict$;
   #36 = Fieldref           #2.#35        // coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
   #37 = Utf8               conflicted
   #38 = Utf8               (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #39 = Utf8               (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict$Conflicted;>;
   #40 = Utf8               resolution
   #41 = Utf8               withExclusions
   #42 = Utf8               semVer
   #43 = Utf8               coursier/graph/ReverseModuleTree$
   #44 = Class              #43           // coursier/graph/ReverseModuleTree$
   #45 = Utf8               Lcoursier/graph/ReverseModuleTree$;
   #46 = NameAndType        #28:#45       // MODULE$:Lcoursier/graph/ReverseModuleTree$;
   #47 = Fieldref           #44.#46       // coursier/graph/ReverseModuleTree$.MODULE$:Lcoursier/graph/ReverseModuleTree$;
   #48 = Utf8               apply$default$2
   #49 = Utf8               ()Lscala/collection/immutable/Seq;
   #50 = NameAndType        #48:#49       // apply$default$2:()Lscala/collection/immutable/Seq;
   #51 = Methodref          #44.#50       // coursier/graph/ReverseModuleTree$.apply$default$2:()Lscala/collection/immutable/Seq;
   #52 = Utf8               apply
   #53 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
   #54 = NameAndType        #52:#53       // apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
   #55 = Methodref          #44.#54       // coursier/graph/ReverseModuleTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
   #56 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #57 = MethodType         #56           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #58 = Utf8               $anonfun$conflicted$2
   #59 = Utf8               (ZLcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #60 = NameAndType        #58:#59       // $anonfun$conflicted$2:(ZLcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #61 = Methodref          #2.#60        // coursier/graph/Conflict$.$anonfun$conflicted$2:(ZLcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #62 = MethodHandle       6:#61         // REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$2:(ZLcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #63 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #64 = MethodType         #63           //  (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #65 = Integer            5
   #66 = Integer            1
   #67 = Utf8               java/lang/invoke/LambdaMetafactory
   #68 = Class              #67           // java/lang/invoke/LambdaMetafactory
   #69 = Utf8               altMetafactory
   #70 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #71 = NameAndType        #69:#70       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #72 = Methodref          #68.#71       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #73 = MethodHandle       6:#72         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #74 = Utf8               (Z)Lscala/Function1;
   #75 = NameAndType        #52:#74       // apply:(Z)Lscala/Function1;
   #76 = InvokeDynamic      #0:#75        // #0:apply:(Z)Lscala/Function1;
   #77 = Utf8               scala/collection/immutable/Seq
   #78 = Class              #77           // scala/collection/immutable/Seq
   #79 = Utf8               flatMap
   #80 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #81 = NameAndType        #79:#80       // flatMap:(Lscala/Function1;)Ljava/lang/Object;
   #82 = InterfaceMethodref #78.#81       // scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
   #83 = Utf8               coursier/core/Resolution
   #84 = Class              #83           // coursier/core/Resolution
   #85 = Utf8               rootDependencies
   #86 = NameAndType        #85:#49       // rootDependencies:()Lscala/collection/immutable/Seq;
   #87 = Methodref          #84.#86       // coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
   #88 = Utf8               $anonfun$conflicted$3
   #89 = Utf8               (Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
   #90 = NameAndType        #88:#89       // $anonfun$conflicted$3:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
   #91 = Methodref          #2.#90        // coursier/graph/Conflict$.$anonfun$conflicted$3:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
   #92 = MethodHandle       6:#91         // REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$3:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
   #93 = Utf8               (Lcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
   #94 = MethodType         #93           //  (Lcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
   #95 = Utf8               (Lcoursier/core/Resolution;Z)Lscala/Function1;
   #96 = NameAndType        #52:#95       // apply:(Lcoursier/core/Resolution;Z)Lscala/Function1;
   #97 = InvokeDynamic      #1:#96        // #1:apply:(Lcoursier/core/Resolution;Z)Lscala/Function1;
   #98 = Utf8               $plus$plus
   #99 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #100 = NameAndType        #98:#99       // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #101 = InterfaceMethodref #78.#100      // scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #102 = Utf8               x$1
  #103 = Utf8               Lcoursier/core/Resolution;
  #104 = Utf8               x$2
  #105 = Utf8               Z
  #106 = Utf8               x$3
  #107 = Utf8               Lscala/collection/immutable/Seq;
  #108 = Utf8               tree
  #109 = Utf8               transitive
  #110 = Utf8               fromRoots
  #111 = Utf8               this
  #112 = Utf8               conflicted$default$2
  #113 = Utf8               ()Z
  #114 = Utf8               conflicted$default$3
  #115 = Utf8               (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict;>;
  #116 = NameAndType        #37:#38       // conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
  #117 = Methodref          #2.#116       // coursier/graph/Conflict$.conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
  #118 = Utf8               $anonfun$apply$1
  #119 = Utf8               (Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
  #120 = NameAndType        #118:#119     // $anonfun$apply$1:(Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
  #121 = Methodref          #2.#120       // coursier/graph/Conflict$.$anonfun$apply$1:(Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
  #122 = MethodHandle       6:#121        // REF_invokeStatic coursier/graph/Conflict$.$anonfun$apply$1:(Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
  #123 = MethodType         #119          //  (Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
  #124 = Utf8               ()Lscala/Function1;
  #125 = NameAndType        #52:#124      // apply:()Lscala/Function1;
  #126 = InvokeDynamic      #2:#125       // #2:apply:()Lscala/Function1;
  #127 = Utf8               map
  #128 = NameAndType        #127:#80      // map:(Lscala/Function1;)Ljava/lang/Object;
  #129 = InterfaceMethodref #78.#128      // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #130 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
  #131 = Utf8               module
  #132 = Utf8               version
  #133 = Utf8               wantedVersion
  #134 = Utf8               wasExcluded
  #135 = Utf8               dependeeModule
  #136 = Utf8               dependeeVersion
  #137 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
  #138 = NameAndType        #32:#137      // "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
  #139 = Methodref          #13.#138      // coursier/graph/Conflict."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
  #140 = Utf8               Lcoursier/core/Module;
  #141 = Utf8               Ljava/lang/String;
  #142 = Utf8               apply$default$3
  #143 = Utf8               writeReplace
  #144 = Utf8               ()Ljava/lang/Object;
  #145 = Utf8               scala/runtime/ModuleSerializationProxy
  #146 = Class              #145          // scala/runtime/ModuleSerializationProxy
  #147 = Utf8               (Ljava/lang/Class;)V
  #148 = NameAndType        #32:#147      // "<init>":(Ljava/lang/Class;)V
  #149 = Methodref          #146.#148     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #150 = Utf8               $anonfun$conflicted$1
  #151 = Utf8               (Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #152 = Utf8               v$1
  #153 = Utf8               coursier/core/Version
  #154 = Class              #153          // coursier/core/Version
  #155 = Utf8               items
  #156 = Utf8               ()Lscala/collection/immutable/Vector;
  #157 = NameAndType        #155:#156     // items:()Lscala/collection/immutable/Vector;
  #158 = Methodref          #154.#157     // coursier/core/Version.items:()Lscala/collection/immutable/Vector;
  #159 = Utf8               scala/collection/immutable/Vector
  #160 = Class              #159          // scala/collection/immutable/Vector
  #161 = Utf8               take
  #162 = Utf8               (I)Lscala/collection/immutable/Vector;
  #163 = NameAndType        #161:#162     // take:(I)Lscala/collection/immutable/Vector;
  #164 = Methodref          #160.#163     // scala/collection/immutable/Vector.take:(I)Lscala/collection/immutable/Vector;
  #165 = Utf8               equals
  #166 = Utf8               (Ljava/lang/Object;)Z
  #167 = NameAndType        #165:#166     // equals:(Ljava/lang/Object;)Z
  #168 = Methodref          #4.#167       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #169 = Utf8               Lcoursier/core/Version;
  #170 = Utf8               coursier$graph$Conflict$$compatible$1
  #171 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)Z
  #172 = Utf8               wanted
  #173 = Utf8               selected
  #174 = Utf8               semVer$1
  #175 = Utf8               java/lang/String
  #176 = Class              #175          // java/lang/String
  #177 = Utf8               coursier/core/Parse$
  #178 = Class              #177          // coursier/core/Parse$
  #179 = Utf8               Lcoursier/core/Parse$;
  #180 = NameAndType        #28:#179      // MODULE$:Lcoursier/core/Parse$;
  #181 = Fieldref           #178.#180     // coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
  #182 = Utf8               versionConstraint
  #183 = Utf8               (Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #184 = NameAndType        #182:#183     // versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #185 = Methodref          #178.#184     // coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #186 = Utf8               coursier/core/Version$
  #187 = Class              #186          // coursier/core/Version$
  #188 = Utf8               Lcoursier/core/Version$;
  #189 = NameAndType        #28:#188      // MODULE$:Lcoursier/core/Version$;
  #190 = Fieldref           #187.#189     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #191 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
  #192 = NameAndType        #52:#191      // apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #193 = Methodref          #187.#192     // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #194 = Utf8               coursier/core/VersionConstraint
  #195 = Class              #194          // coursier/core/VersionConstraint
  #196 = Utf8               interval
  #197 = Utf8               ()Lcoursier/core/VersionInterval;
  #198 = NameAndType        #196:#197     // interval:()Lcoursier/core/VersionInterval;
  #199 = Methodref          #195.#198     // coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
  #200 = Utf8               coursier/core/VersionInterval$
  #201 = Class              #200          // coursier/core/VersionInterval$
  #202 = Utf8               Lcoursier/core/VersionInterval$;
  #203 = NameAndType        #28:#202      // MODULE$:Lcoursier/core/VersionInterval$;
  #204 = Fieldref           #201.#203     // coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
  #205 = Utf8               zero
  #206 = NameAndType        #205:#197     // zero:()Lcoursier/core/VersionInterval;
  #207 = Methodref          #201.#206     // coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
  #208 = Utf8               coursier/core/VersionInterval
  #209 = Class              #208          // coursier/core/VersionInterval
  #210 = Utf8               preferred
  #211 = NameAndType        #210:#49      // preferred:()Lscala/collection/immutable/Seq;
  #212 = Methodref          #195.#211     // coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
  #213 = Utf8               $anonfun$conflicted$1$adapted
  #214 = Utf8               (Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #215 = NameAndType        #213:#214     // $anonfun$conflicted$1$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #216 = Methodref          #2.#215       // coursier/graph/Conflict$.$anonfun$conflicted$1$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #217 = MethodHandle       6:#216        // REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$1$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #218 = Utf8               (Lcoursier/core/Version;)Ljava/lang/Object;
  #219 = MethodType         #218          //  (Lcoursier/core/Version;)Ljava/lang/Object;
  #220 = Utf8               (Lcoursier/core/Version;)Lscala/Function1;
  #221 = NameAndType        #52:#220      // apply:(Lcoursier/core/Version;)Lscala/Function1;
  #222 = InvokeDynamic      #3:#221       // #3:apply:(Lcoursier/core/Version;)Lscala/Function1;
  #223 = Utf8               exists
  #224 = Utf8               (Lscala/Function1;)Z
  #225 = NameAndType        #223:#224     // exists:(Lscala/Function1;)Z
  #226 = InterfaceMethodref #78.#225      // scala/collection/immutable/Seq.exists:(Lscala/Function1;)Z
  #227 = Utf8               contains
  #228 = NameAndType        #227:#166     // contains:(Ljava/lang/Object;)Z
  #229 = InterfaceMethodref #78.#228      // scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
  #230 = Utf8               (Lcoursier/core/Version;)Z
  #231 = NameAndType        #227:#230     // contains:(Lcoursier/core/Version;)Z
  #232 = Methodref          #209.#231     // coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
  #233 = Utf8               c
  #234 = Utf8               Lcoursier/core/VersionConstraint;
  #235 = Utf8               v
  #236 = Utf8               t
  #237 = Utf8               dependees
  #238 = NameAndType        #237:#49      // dependees:()Lscala/collection/immutable/Seq;
  #239 = Methodref          #21.#238      // coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
  #240 = Utf8               (Z)V
  #241 = NameAndType        #32:#240      // "<init>":(Z)V
  #242 = Methodref          #9.#241       // coursier/graph/Conflict$$anonfun$$nestedInanonfun$conflicted$2$1."<init>":(Z)V
  #243 = Utf8               collect
  #244 = Utf8               (Lscala/PartialFunction;)Ljava/lang/Object;
  #245 = NameAndType        #243:#244     // collect:(Lscala/PartialFunction;)Ljava/lang/Object;
  #246 = InterfaceMethodref #78.#245      // scala/collection/immutable/Seq.collect:(Lscala/PartialFunction;)Ljava/lang/Object;
  #247 = Utf8               Lcoursier/graph/ReverseModuleTree;
  #248 = Utf8               $anonfun$conflicted$4
  #249 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/String;
  #250 = Utf8               dep$1
  #251 = Utf8               coursier/core/Dependency
  #252 = Class              #251          // coursier/core/Dependency
  #253 = Utf8               ()Ljava/lang/String;
  #254 = NameAndType        #132:#253     // version:()Ljava/lang/String;
  #255 = Methodref          #252.#254     // coursier/core/Dependency.version:()Ljava/lang/String;
  #256 = Utf8               Lcoursier/core/Dependency;
  #257 = Utf8               resolution$1
  #258 = Utf8               dep
  #259 = Utf8               reconciledVersions
  #260 = Utf8               ()Lscala/collection/immutable/Map;
  #261 = NameAndType        #259:#260     // reconciledVersions:()Lscala/collection/immutable/Map;
  #262 = Methodref          #84.#261      // coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
  #263 = Utf8               ()Lcoursier/core/Module;
  #264 = NameAndType        #131:#263     // module:()Lcoursier/core/Module;
  #265 = Methodref          #252.#264     // coursier/core/Dependency.module:()Lcoursier/core/Module;
  #266 = MethodType         #144          //  ()Ljava/lang/Object;
  #267 = NameAndType        #248:#249     // $anonfun$conflicted$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #268 = Methodref          #2.#267       // coursier/graph/Conflict$.$anonfun$conflicted$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #269 = MethodHandle       6:#268        // REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #270 = MethodType         #253          //  ()Ljava/lang/String;
  #271 = Utf8               (Lcoursier/core/Dependency;)Lscala/Function0;
  #272 = NameAndType        #52:#271      // apply:(Lcoursier/core/Dependency;)Lscala/Function0;
  #273 = InvokeDynamic      #4:#272       // #4:apply:(Lcoursier/core/Dependency;)Lscala/Function0;
  #274 = Utf8               scala/collection/immutable/Map
  #275 = Class              #274          // scala/collection/immutable/Map
  #276 = Utf8               getOrElse
  #277 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #278 = NameAndType        #276:#277     // getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #279 = InterfaceMethodref #275.#278     // scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #280 = NameAndType        #170:#171     // coursier$graph$Conflict$$compatible$1:(Ljava/lang/String;Ljava/lang/String;Z)Z
  #281 = Methodref          #2.#280       // coursier/graph/Conflict$.coursier$graph$Conflict$$compatible$1:(Ljava/lang/String;Ljava/lang/String;Z)Z
  #282 = Utf8               scala/collection/immutable/Nil$
  #283 = Class              #282          // scala/collection/immutable/Nil$
  #284 = Utf8               Lscala/collection/immutable/Nil$;
  #285 = NameAndType        #28:#284      // MODULE$:Lscala/collection/immutable/Nil$;
  #286 = Fieldref           #283.#285     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #287 = Utf8               scala/Predef$
  #288 = Class              #287          // scala/Predef$
  #289 = Utf8               Lscala/Predef$;
  #290 = NameAndType        #28:#289      // MODULE$:Lscala/Predef$;
  #291 = Fieldref           #288.#290     // scala/Predef$.MODULE$:Lscala/Predef$;
  #292 = Utf8               Map
  #293 = Utf8               ()Lscala/collection/immutable/Map$;
  #294 = NameAndType        #292:#293     // Map:()Lscala/collection/immutable/Map$;
  #295 = Methodref          #288.#294     // scala/Predef$.Map:()Lscala/collection/immutable/Map$;
  #296 = Utf8               scala/collection/immutable/Map$
  #297 = Class              #296          // scala/collection/immutable/Map$
  #298 = Utf8               empty
  #299 = NameAndType        #298:#260     // empty:()Lscala/collection/immutable/Map;
  #300 = Methodref          #297.#299     // scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
  #301 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
  #302 = NameAndType        #32:#301      // "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
  #303 = Methodref          #19.#302      // coursier/graph/ReverseModuleTree$Node."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
  #304 = Utf8               scala/collection/immutable/$colon$colon
  #305 = Class              #304          // scala/collection/immutable/$colon$colon
  #306 = Utf8               Lcoursier/graph/Conflict$Conflicted$;
  #307 = NameAndType        #28:#306      // MODULE$:Lcoursier/graph/Conflict$Conflicted$;
  #308 = Fieldref           #16.#307      // coursier/graph/Conflict$Conflicted$.MODULE$:Lcoursier/graph/Conflict$Conflicted$;
  #309 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lcoursier/graph/Conflict$Conflicted;
  #310 = NameAndType        #52:#309      // apply:(Lcoursier/graph/ReverseModuleTree;)Lcoursier/graph/Conflict$Conflicted;
  #311 = Methodref          #16.#310      // coursier/graph/Conflict$Conflicted$.apply:(Lcoursier/graph/ReverseModuleTree;)Lcoursier/graph/Conflict$Conflicted;
  #312 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #313 = NameAndType        #32:#312      // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #314 = Methodref          #305.#313     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #315 = Utf8               node
  #316 = Utf8               Lcoursier/graph/ReverseModuleTree$Node;
  #317 = Utf8               matches
  #318 = Utf8               conflict
  #319 = Utf8               ()Lcoursier/graph/Conflict;
  #320 = NameAndType        #318:#319     // conflict:()Lcoursier/graph/Conflict;
  #321 = Methodref          #11.#320      // coursier/graph/Conflict$Conflicted.conflict:()Lcoursier/graph/Conflict;
  #322 = Utf8               Lcoursier/graph/Conflict$Conflicted;
  #323 = Methodref          #4.#33        // java/lang/Object."<init>":()V
  #324 = NameAndType        #150:#151     // $anonfun$conflicted$1:(Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #325 = Methodref          #2.#324       // coursier/graph/Conflict$.$anonfun$conflicted$1:(Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #326 = Utf8               scala/runtime/BoxesRunTime
  #327 = Class              #326          // scala/runtime/BoxesRunTime
  #328 = Utf8               boxToBoolean
  #329 = Utf8               (Z)Ljava/lang/Boolean;
  #330 = NameAndType        #328:#329     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #331 = Methodref          #327.#330     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #332 = Utf8               $deserializeLambda$
  #333 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #334 = Utf8               scala/runtime/LambdaDeserialize
  #335 = Class              #334          // scala/runtime/LambdaDeserialize
  #336 = Utf8               bootstrap
  #337 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #338 = NameAndType        #336:#337     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #339 = Methodref          #335.#338     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #340 = MethodHandle       6:#339        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #341 = Utf8               lambdaDeserialize
  #342 = NameAndType        #341:#333     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #343 = InvokeDynamic      #5:#342       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #344 = Utf8               Code
  #345 = Utf8               LineNumberTable
  #346 = Utf8               LocalVariableTable
  #347 = Utf8               Signature
  #348 = Utf8               MethodParameters
  #349 = Utf8               StackMapTable
  #350 = Utf8               InnerClasses
  #351 = Utf8               SourceFile
  #352 = Utf8               BootstrapMethods
  #353 = Utf8               ScalaInlineInfo
  #354 = Utf8               Scala
{
  public static final coursier.graph.Conflict$ MODULE$;
    descriptor: Lcoursier/graph/Conflict$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/graph/Conflict$
         3: dup
         4: invokespecial #34                 // Method "<init>":()V
         7: putstatic     #36                 // Field MODULE$:Lcoursier/graph/Conflict$;
        10: return
      LineNumberTable:
        line 9: 0

  public scala.collection.immutable.Seq<coursier.graph.Conflict$Conflicted> conflicted(coursier.core.Resolution, boolean, boolean);
    descriptor: (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=10, args_size=4
         0: aload_1
         1: astore        5
         3: iload_2
         4: istore        6
         6: getstatic     #47                 // Field coursier/graph/ReverseModuleTree$.MODULE$:Lcoursier/graph/ReverseModuleTree$;
         9: invokevirtual #51                 // Method coursier/graph/ReverseModuleTree$.apply$default$2:()Lscala/collection/immutable/Seq;
        12: astore        7
        14: getstatic     #47                 // Field coursier/graph/ReverseModuleTree$.MODULE$:Lcoursier/graph/ReverseModuleTree$;
        17: aload         5
        19: aload         7
        21: iload         6
        23: invokevirtual #55                 // Method coursier/graph/ReverseModuleTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
        26: astore        4
        28: aload         4
        30: iload_3
        31: invokedynamic #76,  0             // InvokeDynamic #0:apply:(Z)Lscala/Function1;
        36: invokeinterface #82,  2           // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        41: checkcast     #78                 // class scala/collection/immutable/Seq
        44: astore        8
        46: aload_1
        47: invokevirtual #87                 // Method coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
        50: aload_1
        51: iload_3
        52: invokedynamic #97,  0             // InvokeDynamic #1:apply:(Lcoursier/core/Resolution;Z)Lscala/Function1;
        57: invokeinterface #82,  2           // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        62: checkcast     #78                 // class scala/collection/immutable/Seq
        65: astore        9
        67: aload         9
        69: aload         8
        71: invokeinterface #101,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        76: checkcast     #78                 // class scala/collection/immutable/Seq
        79: areturn
      LineNumberTable:
        line 68: 0
        line 83: 28
        line 90: 46
        line 113: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      23     5   x$1   Lcoursier/core/Resolution;
            6      20     6   x$2   Z
           14      12     7   x$3   Lscala/collection/immutable/Seq;
           28      51     4  tree   Lscala/collection/immutable/Seq;
           46      33     8 transitive   Lscala/collection/immutable/Seq;
           67      12     9 fromRoots   Lscala/collection/immutable/Seq;
            0      80     0  this   Lcoursier/graph/Conflict$;
            0      80     1 resolution   Lcoursier/core/Resolution;
            0      80     2 withExclusions   Z
            0      80     3 semVer   Z
    Signature: #39                          // (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict$Conflicted;>;
    MethodParameters:
      Name                           Flags
      resolution                     final
      withExclusions                 final
      semVer                         final

  public boolean conflicted$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/Conflict$;

  public boolean conflicted$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/Conflict$;

  public scala.collection.immutable.Seq<coursier.graph.Conflict> apply(coursier.core.Resolution, boolean, boolean);
    descriptor: (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: invokevirtual #117                // Method conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
         7: invokedynamic #126,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        12: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        17: checkcast     #78                 // class scala/collection/immutable/Seq
        20: areturn
      LineNumberTable:
        line 117: 0
        line 118: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/graph/Conflict$;
            0      21     1 resolution   Lcoursier/core/Resolution;
            0      21     2 withExclusions   Z
            0      21     3 semVer   Z
    Signature: #115                         // (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict;>;
    MethodParameters:
      Name                           Flags
      resolution                     final
      withExclusions                 final
      semVer                         final

  public coursier.graph.Conflict apply(coursier.core.Module, java.lang.String, java.lang.String, boolean, coursier.core.Module, java.lang.String);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=7
         0: new           #13                 // class coursier/graph/Conflict
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: iload         4
         9: aload         5
        11: aload         6
        13: invokespecial #139                // Method coursier/graph/Conflict."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)V
        16: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/graph/Conflict$;
            0      17     1 module   Lcoursier/core/Module;
            0      17     2 version   Ljava/lang/String;
            0      17     3 wantedVersion   Ljava/lang/String;
            0      17     4 wasExcluded   Z
            0      17     5 dependeeModule   Lcoursier/core/Module;
            0      17     6 dependeeVersion   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      wantedVersion                  final
      wasExcluded                    final
      dependeeModule                 final
      dependeeVersion                final

  public boolean apply$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/Conflict$;

  public boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/Conflict$;

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #146                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/graph/Conflict$
         6: invokespecial #149                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/graph/Conflict$;

  public static final boolean $anonfun$conflicted$1(coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/Version;Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #158                // Method coursier/core/Version.items:()Lscala/collection/immutable/Vector;
         4: iconst_2
         5: invokevirtual #164                // Method scala/collection/immutable/Vector.take:(I)Lscala/collection/immutable/Vector;
         8: aload_0
         9: invokevirtual #158                // Method coursier/core/Version.items:()Lscala/collection/immutable/Vector;
        12: iconst_2
        13: invokevirtual #164                // Method scala/collection/immutable/Vector.take:(I)Lscala/collection/immutable/Vector;
        16: astore_2
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_2
        23: ifnull        36
        26: goto          40
        29: aload_2
        30: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifeq          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class coursier/core/Version, class coursier/core/Version, class scala/collection/immutable/Vector ]
          stack = [ class scala/collection/immutable/Vector ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0   v$1   Lcoursier/core/Version;
            0      42     1   x$2   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      v$1                            final
      x$2                            final

  public static final boolean coursier$graph$Conflict$$compatible$1(java.lang.String, java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Z)Z
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_0
         1: aload_1
         2: astore_3
         3: dup
         4: ifnonnull     15
         7: pop
         8: aload_3
         9: ifnull        126
        12: goto          22
        15: aload_3
        16: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        19: ifne          126
        22: getstatic     #181                // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
        25: aload_0
        26: invokevirtual #185                // Method coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
        29: astore        4
        31: getstatic     #190                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
        34: aload_1
        35: invokevirtual #193                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
        38: astore        5
        40: aload         4
        42: invokevirtual #199                // Method coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
        45: getstatic     #204                // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
        48: invokevirtual #207                // Method coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
        51: astore        6
        53: dup
        54: ifnonnull     66
        57: pop
        58: aload         6
        60: ifnull        74
        63: goto          113
        66: aload         6
        68: invokevirtual #168                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        71: ifeq          113
        74: iload_2
        75: ifeq          98
        78: aload         4
        80: invokevirtual #212                // Method coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
        83: aload         5
        85: invokedynamic #222,  0            // InvokeDynamic #3:apply:(Lcoursier/core/Version;)Lscala/Function1;
        90: invokeinterface #226,  2          // InterfaceMethod scala/collection/immutable/Seq.exists:(Lscala/Function1;)Z
        95: goto          110
        98: aload         4
       100: invokevirtual #212                // Method coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
       103: aload         5
       105: invokeinterface #229,  2          // InterfaceMethod scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
       110: goto          123
       113: aload         4
       115: invokevirtual #199                // Method coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
       118: aload         5
       120: invokevirtual #232                // Method coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
       123: ifeq          130
       126: iconst_1
       127: goto          131
       130: iconst_0
       131: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class java/lang/String, class java/lang/String, int, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class java/lang/String, class java/lang/String, int, class java/lang/String, class coursier/core/VersionConstraint, class coursier/core/Version, class coursier/core/VersionInterval ]
          stack = [ class coursier/core/VersionInterval ]
        frame_type = 7 /* same */
        frame_type = 23 /* same */
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 2 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 254 /* append */
          offset_delta = 3
          locals = [ class coursier/core/VersionConstraint, class coursier/core/Version, class coursier/core/VersionInterval ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/String, class java/lang/String, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 71: 0
        line 72: 22
        line 73: 31
        line 74: 40
        line 75: 74
        line 76: 78
        line 78: 98
        line 80: 113
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31      92     4     c   Lcoursier/core/VersionConstraint;
           40      83     5     v   Lcoursier/core/Version;
            0     132     0 wanted   Ljava/lang/String;
            0     132     1 selected   Ljava/lang/String;
            0     132     2 semVer$1   Z
    MethodParameters:
      Name                           Flags
      wanted                         final
      selected                       final
      semVer$1                       final

  public static final scala.collection.immutable.Seq $anonfun$conflicted$2(boolean, coursier.graph.ReverseModuleTree);
    descriptor: (ZLcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #239                // Method coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
         4: new           #9                  // class coursier/graph/Conflict$$anonfun$$nestedInanonfun$conflicted$2$1
         7: dup
         8: iload_0
         9: invokespecial #242                // Method coursier/graph/Conflict$$anonfun$$nestedInanonfun$conflicted$2$1."<init>":(Z)V
        12: invokeinterface #246,  2          // InterfaceMethod scala/collection/immutable/Seq.collect:(Lscala/PartialFunction;)Ljava/lang/Object;
        17: checkcast     #78                 // class scala/collection/immutable/Seq
        20: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 semVer$1   Z
            0      21     1     t   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      semVer$1                       final
      t                              final

  public static final java.lang.String $anonfun$conflicted$4(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #255                // Method coursier/core/Dependency.version:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 dep$1   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      dep$1                          final

  public static final scala.collection.immutable.Seq $anonfun$conflicted$3(coursier.core.Resolution, boolean, coursier.core.Dependency);
    descriptor: (Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=6, args_size=3
         0: aload_0
         1: invokevirtual #262                // Method coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
         4: aload_2
         5: invokevirtual #265                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         8: aload_2
         9: invokedynamic #273,  0            // InvokeDynamic #4:apply:(Lcoursier/core/Dependency;)Lscala/Function0;
        14: invokeinterface #279,  3          // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        19: checkcast     #176                // class java/lang/String
        22: astore_3
        23: aload_2
        24: invokevirtual #255                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        27: aload_3
        28: iload_1
        29: invokestatic  #281                // Method coursier$graph$Conflict$$compatible$1:(Ljava/lang/String;Ljava/lang/String;Z)Z
        32: istore        4
        34: iload         4
        36: ifeq          45
        39: getstatic     #286                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        42: goto          115
        45: new           #19                 // class coursier/graph/ReverseModuleTree$Node
        48: dup
        49: aload_2
        50: invokevirtual #265                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        53: aload_2
        54: invokevirtual #255                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        57: aload_2
        58: invokevirtual #255                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        61: aload_2
        62: invokevirtual #265                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        65: aload_2
        66: invokevirtual #255                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        69: aload_3
        70: iconst_0
        71: getstatic     #291                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        74: invokevirtual #295                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
        77: invokevirtual #300                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
        80: getstatic     #291                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        83: invokevirtual #295                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
        86: invokevirtual #300                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
        89: invokespecial #303                // Method coursier/graph/ReverseModuleTree$Node."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
        92: astore        5
        94: new           #305                // class scala/collection/immutable/$colon$colon
        97: dup
        98: getstatic     #308                // Field coursier/graph/Conflict$Conflicted$.MODULE$:Lcoursier/graph/Conflict$Conflicted$;
       101: aload         5
       103: invokevirtual #311                // Method coursier/graph/Conflict$Conflicted$.apply:(Lcoursier/graph/ReverseModuleTree;)Lcoursier/graph/Conflict$Conflicted;
       106: getstatic     #286                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       109: invokespecial #314                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       112: checkcast     #78                 // class scala/collection/immutable/Seq
       115: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 45
          locals = [ class java/lang/String, int ]
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 69
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 91: 0
        line 93: 4
        line 94: 23
        line 95: 34
        line 96: 39
        line 98: 45
        line 99: 49
        line 100: 53
        line 101: 57
        line 102: 61
        line 103: 65
        line 104: 69
        line 105: 70
        line 106: 71
        line 107: 80
        line 109: 94
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           94      21     5  node   Lcoursier/graph/ReverseModuleTree$Node;
           23      92     3 version   Ljava/lang/String;
           34      81     4 matches   Z
            0     116     0 resolution$1   Lcoursier/core/Resolution;
            0     116     1 semVer$1   Z
            0     116     2   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      resolution$1                   final
      semVer$1                       final
      dep                            final

  public static final coursier.graph.Conflict $anonfun$apply$1(coursier.graph.Conflict$Conflicted);
    descriptor: (Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #321                // Method coursier/graph/Conflict$Conflicted.conflict:()Lcoursier/graph/Conflict;
         4: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$3   Lcoursier/graph/Conflict$Conflicted;
    MethodParameters:
      Name                           Flags
      x$3                            final

  private coursier.graph.Conflict$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #323                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 120: 0
        line 9: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict$;

  public static final java.lang.Object $anonfun$conflicted$1$adapted(coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #325                // Method $anonfun$conflicted$1:(Lcoursier/core/Version;Lcoursier/core/Version;)Z
         5: invokestatic  #331                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   v$1   Lcoursier/core/Version;
            0       9     1   x$2   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      v$1                            final
      x$2                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #343,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public final #9;                        // class coursier/graph/Conflict$$anonfun$$nestedInanonfun$conflicted$2$1
  public static final #14= #11 of #13;    // Conflicted=class coursier/graph/Conflict$Conflicted of class coursier/graph/Conflict
  public static #17= #16 of #13;          // =class coursier/graph/Conflict$Conflicted$ of class coursier/graph/Conflict
  public static final #22= #19 of #21;    // Node=class coursier/graph/ReverseModuleTree$Node of class coursier/graph/ReverseModuleTree
  public static final #27= #24 of #26;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Conflict.scala"
BootstrapMethods:
  0: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 (Ljava/lang/Object;)Ljava/lang/Object;
      #62 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$2:(ZLcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #64 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #65 5
      #66 1
      #64 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  1: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 (Ljava/lang/Object;)Ljava/lang/Object;
      #92 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$3:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
      #94 (Lcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
      #65 5
      #66 1
      #94 (Lcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
  2: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 (Ljava/lang/Object;)Ljava/lang/Object;
      #122 REF_invokeStatic coursier/graph/Conflict$.$anonfun$apply$1:(Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
      #123 (Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
      #65 5
      #66 1
      #123 (Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
  3: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 (Ljava/lang/Object;)Ljava/lang/Object;
      #217 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$1$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #219 (Lcoursier/core/Version;)Ljava/lang/Object;
      #65 5
      #66 1
      #219 (Lcoursier/core/Version;)Ljava/lang/Object;
  4: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #266 ()Ljava/lang/Object;
      #269 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #270 ()Ljava/lang/String;
      #65 5
      #66 1
      #270 ()Ljava/lang/String;
  5: #340 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #122 REF_invokeStatic coursier/graph/Conflict$.$anonfun$apply$1:(Lcoursier/graph/Conflict$Conflicted;)Lcoursier/graph/Conflict;
      #217 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$1$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #62 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$2:(ZLcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #92 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$3:(Lcoursier/core/Resolution;ZLcoursier/core/Dependency;)Lscala/collection/immutable/Seq;
      #269 REF_invokeStatic coursier/graph/Conflict$.$anonfun$conflicted$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x54 (unknown attribute)
   01 01 00 10 00 76 00 77 01 00 96 00 97 01 00 D1
   00 D2 01 00 3A 00 3B 01 00 58 00 59 01 00 F8 00
   F9 01 00 20 00 1F 01 00 34 00 82 01 00 34 00 26
   01 00 30 00 71 01 00 8E 00 71 01 00 25 00 26 01
   00 70 00 71 01 00 72 00 71 01 00 AA 00 AB 01 00
   8F 00 90 01
  Scala: length = 0x0 (unknown attribute)

