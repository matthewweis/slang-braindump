Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/UniquenessCache.class
  Last modified May 29, 2022; size 3546 bytes
  SHA-256 checksum fed6fde52bc0bc5302a5968881da6d089b935f64ec8a7b52863c7f736686f4b0
  Compiled from "Symbol.scala"
public abstract class scala.UniquenessCache<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/UniquenessCache
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 4, methods: 7, attributes: 6
Constant pool:
    #1 = Utf8               scala/UniquenessCache
    #2 = Class              #1            // scala/UniquenessCache
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               Symbol.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\u00054aAC\u0006\u0002\u0002-i\u0001\"B\n\u0001\t\u0003)\u0002BB\u0015\u0001A\u0003%!\u0006\u0003\u00047\u0001\u0001\u0006Ia\u000e\u0005\u0007{\u0001\u0001\u000b\u0011\u0002 \t\r\u0005\u0003\u0001\u0015!\u0003C\u0011\u0015q\u0005A\"\u0005P\u0011\u0015\u0011\u0006A\"\u0005T\u0011\u0015I\u0006\u0001\"\u0001[\u0011\u0015i\u0006\u0001\"\u0001_\u0005=)f.[9vK:,7o]\"bG\",\'\"\u0001\u0007\u0002\u000bM\u001c\u0017\r\\1\u0016\u00079I2e\u0005\u0002\u0001\u001fA\u0011\u0001#E\u0007\u0002\u0017%\u0011!c\u0003\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?\u0007\u0001!\u0012A\u0006\t\u0005!\u00019\"\u0005\u0005\u0002\u001931\u0001A!\u0002\u000e\u0001\u0005\u0004Y\"!A&\u0012\u0005qy\u0002C\u0001\t\u001e\u0013\tq2BA\u0004O_RD\u0017N\\4\u0011\u0005A\u0001\u0013BA\u0011\f\u0005\r\te.\u001f\t\u00031\r\"Q\u0001\n\u0001C\u0002\u0015\u0012\u0011AV\t\u0003M}\u0001\"\u0001E\u0014\n\u0005!Z!\u0001\u0002(vY2\f1A]<m!\tYC\'D\u0001-\u0015\tic&A\u0003m_\u000e\\7O\u0003\u00020a\u0005Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005E\u0012\u0014\u0001B;uS2T\u0011aM\u0001\u0005U\u00064\u0018-\u0003\u00026Y\t1\"+Z3oiJ\fg\u000e\u001e*fC\u0012<&/\u001b;f\u0019>\u001c7.A\u0003sY>\u001c7\u000e\u0005\u00029w5\t\u0011H\u0003\u0002;Y\u00051\"+Z3oiJ\fg\u000e\u001e*fC\u0012<&/\u001b;f\u0019>\u001c7.\u0003\u0002=s\tA!+Z1e\u0019>\u001c7.A\u0003xY>\u001c7\u000e\u0005\u00029\u007f%\u0011\u0001)\u000f\u0002\n/JLG/\u001a\'pG.\f1!\\1q!\u0011\u0019Ei\u0006$\u000e\u0003AJ!!\u0012\u0019\u0003\u0017]+\u0017m\u001b%bg\"l\u0015\r\u001d\t\u0004\u000f2\u0013S\"\u0001%\u000b\u0005%S\u0015a\u0001:fM*\u00111JM\u0001\u0005Y\u0006tw-\u0003\u0002N\u0011\niq+Z1l%\u00164WM]3oG\u0016\fAB^1mk\u00164%o\\7LKf$\"A\t)\t\u000bE3\u0001\u0019A\f\u0002\u0003-\fAb[3z\rJ|WNV1mk\u0016$\"\u0001V,\u0011\u0007A)v#\u0003\u0002W\u0017\t1q\n\u001d;j_:DQ\u0001W\u0004A\u0002\t\n\u0011A^\u0001\u0006CB\u0004H.\u001f\u000b\u0003EmCQ\u0001\u0018\u0005A\u0002]\tAA\\1nK\u00069QO\\1qa2LHC\u0001+`\u0011\u0015\u0001\u0017\u00021\u0001#\u0003\u0015yG\u000f[3s\u0001
   #10 = Utf8               java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock
   #11 = Class              #10           // java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock
   #12 = Utf8               java/util/concurrent/locks/ReentrantReadWriteLock
   #13 = Class              #12           // java/util/concurrent/locks/ReentrantReadWriteLock
   #14 = Utf8               ReadLock
   #15 = Utf8               java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock
   #16 = Class              #15           // java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock
   #17 = Utf8               WriteLock
   #18 = Utf8               rwl
   #19 = Utf8               Ljava/util/concurrent/locks/ReentrantReadWriteLock;
   #20 = Utf8               rlock
   #21 = Utf8               Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
   #22 = Utf8               wlock
   #23 = Utf8               Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
   #24 = Utf8               map
   #25 = Utf8               Ljava/util/WeakHashMap;
   #26 = Utf8               Ljava/util/WeakHashMap<TK;Ljava/lang/ref/WeakReference<TV;>;>;
   #27 = Utf8               valueFromKey
   #28 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #29 = Utf8               (TK;)TV;
   #30 = Utf8               k
   #31 = Utf8               keyFromValue
   #32 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #33 = Utf8               (TV;)Lscala/Option<TK;>;
   #34 = Utf8               v
   #35 = Utf8               apply
   #36 = Utf8               name
   #37 = Utf8               cached$1
   #38 = NameAndType        #37:#28       // cached$1:(Ljava/lang/Object;)Ljava/lang/Object;
   #39 = Methodref          #2.#38        // scala/UniquenessCache.cached$1:(Ljava/lang/Object;)Ljava/lang/Object;
   #40 = Utf8               updateCache$1
   #41 = NameAndType        #40:#28       // updateCache$1:(Ljava/lang/Object;)Ljava/lang/Object;
   #42 = Methodref          #2.#41        // scala/UniquenessCache.updateCache$1:(Ljava/lang/Object;)Ljava/lang/Object;
   #43 = Utf8               this
   #44 = Utf8               Lscala/UniquenessCache;
   #45 = Utf8               Ljava/lang/Object;
   #46 = Utf8               unapply
   #47 = Utf8               other
   #48 = NameAndType        #31:#32       // keyFromValue:(Ljava/lang/Object;)Lscala/Option;
   #49 = Methodref          #2.#48        // scala/UniquenessCache.keyFromValue:(Ljava/lang/Object;)Lscala/Option;
   #50 = Utf8               name$1
   #51 = NameAndType        #20:#21       // rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
   #52 = Fieldref           #2.#51        // scala/UniquenessCache.rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
   #53 = Utf8               lock
   #54 = Utf8               ()V
   #55 = NameAndType        #53:#54       // lock:()V
   #56 = Methodref          #11.#55       // java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
   #57 = NameAndType        #24:#25       // map:Ljava/util/WeakHashMap;
   #58 = Fieldref           #2.#57        // scala/UniquenessCache.map:Ljava/util/WeakHashMap;
   #59 = Utf8               java/util/WeakHashMap
   #60 = Class              #59           // java/util/WeakHashMap
   #61 = Utf8               get
   #62 = NameAndType        #61:#28       // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #63 = Methodref          #60.#62       // java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #64 = Utf8               java/lang/ref/WeakReference
   #65 = Class              #64           // java/lang/ref/WeakReference
   #66 = Utf8               ()Ljava/lang/Object;
   #67 = NameAndType        #61:#66       // get:()Ljava/lang/Object;
   #68 = Methodref          #65.#67       // java/lang/ref/WeakReference.get:()Ljava/lang/Object;
   #69 = Utf8               unlock
   #70 = NameAndType        #69:#54       // unlock:()V
   #71 = Methodref          #11.#70       // java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
   #72 = Utf8               reference
   #73 = Utf8               Ljava/lang/ref/WeakReference;
   #74 = Utf8               java/lang/Throwable
   #75 = Class              #74           // java/lang/Throwable
   #76 = NameAndType        #22:#23       // wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
   #77 = Fieldref           #2.#76        // scala/UniquenessCache.wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
   #78 = Methodref          #16.#55       // java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
   #79 = Utf8               remove
   #80 = NameAndType        #79:#28       // remove:(Ljava/lang/Object;)Ljava/lang/Object;
   #81 = Methodref          #60.#80       // java/util/WeakHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
   #82 = NameAndType        #27:#28       // valueFromKey:(Ljava/lang/Object;)Ljava/lang/Object;
   #83 = Methodref          #2.#82        // scala/UniquenessCache.valueFromKey:(Ljava/lang/Object;)Ljava/lang/Object;
   #84 = Utf8               <init>
   #85 = Utf8               (Ljava/lang/Object;)V
   #86 = NameAndType        #84:#85       // "<init>":(Ljava/lang/Object;)V
   #87 = Methodref          #65.#86       // java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
   #88 = Utf8               put
   #89 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #90 = NameAndType        #88:#89       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #91 = Methodref          #60.#90       // java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #92 = Methodref          #16.#70       // java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
   #93 = Utf8               sym
   #94 = Utf8               res
   #95 = NameAndType        #84:#54       // "<init>":()V
   #96 = Methodref          #5.#95        // java/lang/Object."<init>":()V
   #97 = Methodref          #13.#95       // java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
   #98 = NameAndType        #18:#19       // rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
   #99 = Fieldref           #2.#98        // scala/UniquenessCache.rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
  #100 = Utf8               readLock
  #101 = Utf8               ()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
  #102 = NameAndType        #100:#101     // readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
  #103 = Methodref          #13.#102      // java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
  #104 = Utf8               writeLock
  #105 = Utf8               ()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
  #106 = NameAndType        #104:#105     // writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
  #107 = Methodref          #13.#106      // java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
  #108 = Methodref          #60.#95       // java/util/WeakHashMap."<init>":()V
  #109 = Utf8               Signature
  #110 = Utf8               MethodParameters
  #111 = Utf8               Code
  #112 = Utf8               StackMapTable
  #113 = Utf8               LineNumberTable
  #114 = Utf8               LocalVariableTable
  #115 = Utf8               InnerClasses
  #116 = Utf8               SourceFile
  #117 = Utf8               RuntimeVisibleAnnotations
  #118 = Utf8               ScalaInlineInfo
  #119 = Utf8               ScalaSig
{
  private final java.util.concurrent.locks.ReentrantReadWriteLock rwl;
    descriptor: Ljava/util/concurrent/locks/ReentrantReadWriteLock;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock rlock;
    descriptor: Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock wlock;
    descriptor: Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.WeakHashMap<K, java.lang.ref.WeakReference<V>> map;
    descriptor: Ljava/util/WeakHashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #26                          // Ljava/util/WeakHashMap<TK;Ljava/lang/ref/WeakReference<TV;>;>;

  public abstract V valueFromKey(K);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (TK;)TV;
    MethodParameters:
      Name                           Flags
      k                              final

  public abstract scala.Option<K> keyFromValue(V);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #33                          // (TV;)Lscala/Option<TK;>;
    MethodParameters:
      Name                           Flags
      v                              final

  public V apply(K);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #39                 // Method cached$1:(Ljava/lang/Object;)Ljava/lang/Object;
         5: astore_3
         6: aload_3
         7: ifnonnull     19
        10: aload_0
        11: aload_1
        12: invokespecial #42                 // Method updateCache$1:(Ljava/lang/Object;)Ljava/lang/Object;
        15: astore_2
        16: goto          21
        19: aload_3
        20: astore_2
        21: aload_2
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/UniquenessCache, class java/lang/Object, class java/lang/Object, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 78: 0
        line 79: 6
        line 80: 19
        line 78: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/UniquenessCache;
            0      23     1  name   Ljava/lang/Object;
    Signature: #29                          // (TK;)TV;
    MethodParameters:
      Name                           Flags
      name                           final

  public scala.Option<K> unapply(V);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #49                 // Method keyFromValue:(Ljava/lang/Object;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/UniquenessCache;
            0       6     1 other   Ljava/lang/Object;
    Signature: #33                          // (TV;)Lscala/Option<TK;>;
    MethodParameters:
      Name                           Flags
      other                          final

  private final java.lang.Object cached$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: getfield      #52                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
         4: invokevirtual #56                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
         7: aload_0
         8: getfield      #58                 // Field map:Ljava/util/WeakHashMap;
        11: aload_1
        12: invokevirtual #63                 // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        15: checkcast     #65                 // class java/lang/ref/WeakReference
        18: astore_2
        19: aload_2
        20: ifnonnull     27
        23: aconst_null
        24: goto          44
        27: aload_2
        28: invokevirtual #68                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
        31: goto          44
        34: astore_3
        35: aload_0
        36: getfield      #52                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
        39: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
        42: aload_3
        43: athrow
        44: aload_0
        45: getfield      #52                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
        48: invokevirtual #71                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
        51: areturn
      Exception table:
         from    to  target type
             7    34    34   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ class java/lang/ref/WeakReference ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/UniquenessCache, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/UniquenessCache, class java/lang/Object, class java/lang/ref/WeakReference ]
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 52: 0
        line 54: 7
        line 55: 19
        line 56: 27
        line 58: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      12     2 reference   Ljava/lang/ref/WeakReference;
            0      52     0  this   Lscala/UniquenessCache;
            0      52     1 name$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      name$1                         final

  private final java.lang.Object updateCache$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=5, args_size=2
         0: aload_0
         1: getfield      #77                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
         4: invokevirtual #78                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
         7: aload_0
         8: aload_1
         9: invokespecial #39                 // Method cached$1:(Ljava/lang/Object;)Ljava/lang/Object;
        12: astore_2
        13: aload_2
        14: ifnull        21
        17: aload_2
        18: goto          69
        21: aload_0
        22: getfield      #58                 // Field map:Ljava/util/WeakHashMap;
        25: aload_1
        26: invokevirtual #81                 // Method java/util/WeakHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        29: pop
        30: aload_0
        31: aload_1
        32: invokevirtual #83                 // Method valueFromKey:(Ljava/lang/Object;)Ljava/lang/Object;
        35: astore_3
        36: aload_0
        37: getfield      #58                 // Field map:Ljava/util/WeakHashMap;
        40: aload_1
        41: new           #65                 // class java/lang/ref/WeakReference
        44: dup
        45: aload_3
        46: invokespecial #87                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
        49: invokevirtual #91                 // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        52: pop
        53: aload_3
        54: goto          69
        57: astore        4
        59: aload_0
        60: getfield      #77                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
        63: invokevirtual #92                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
        66: aload         4
        68: athrow
        69: aload_0
        70: getfield      #77                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
        73: invokevirtual #92                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
        76: areturn
      Exception table:
         from    to  target type
             7    57    57   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class scala/UniquenessCache, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/UniquenessCache, class java/lang/Object, class java/lang/Object ]
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 61: 0
        line 63: 7
        line 64: 13
        line 70: 21
        line 71: 30
        line 72: 36
        line 73: 53
        line 76: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           36      18     3   sym   Ljava/lang/Object;
           13      41     2   res   Ljava/lang/Object;
            0      77     0  this   Lscala/UniquenessCache;
            0      77     1 name$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      name$1                         final

  public scala.UniquenessCache();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #96                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #13                 // class java/util/concurrent/locks/ReentrantReadWriteLock
         8: dup
         9: invokespecial #97                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
        12: putfield      #99                 // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
        15: aload_0
        16: aload_0
        17: getfield      #99                 // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
        20: invokevirtual #103                // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
        23: putfield      #52                 // Field rlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
        26: aload_0
        27: aload_0
        28: getfield      #99                 // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
        31: invokevirtual #107                // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
        34: putfield      #77                 // Field wlock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
        37: aload_0
        38: new           #60                 // class java/util/WeakHashMap
        41: dup
        42: invokespecial #108                // Method java/util/WeakHashMap."<init>":()V
        45: putfield      #58                 // Field map:Ljava/util/WeakHashMap;
        48: return
      LineNumberTable:
        line 37: 0
        line 42: 4
        line 43: 15
        line 44: 26
        line 45: 37
        line 37: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/UniquenessCache;
}
InnerClasses:
  public static #14= #11 of #13;          // ReadLock=class java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock of class java/util/concurrent/locks/ReentrantReadWriteLock
  public static #17= #16 of #13;          // WriteLock=class java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock of class java/util/concurrent/locks/ReentrantReadWriteLock
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "Symbol.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00054aAC\u0006\u0002\u0002-i\u0001\"B\n\u0001\t\u0003)\u0002BB\u0015\u0001A\u0003%!\u0006\u0003\u00047\u0001\u0001\u0006Ia\u000e\u0005\u0007{\u0001\u0001\u000b\u0011\u0002 \t\r\u0005\u0003\u0001\u0015!\u0003C\u0011\u0015q\u0005A\"\u0005P\u0011\u0015\u0011\u0006A\"\u0005T\u0011\u0015I\u0006\u0001\"\u0001[\u0011\u0015i\u0006\u0001\"\u0001_\u0005=)f.[9vK:,7o]\"bG\",\'\"\u0001\u0007\u0002\u000bM\u001c\u0017\r\\1\u0016\u00079I2e\u0005\u0002\u0001\u001fA\u0011\u0001#E\u0007\u0002\u0017%\u0011!c\u0003\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?\u0007\u0001!\u0012A\u0006\t\u0005!\u00019\"\u0005\u0005\u0002\u001931\u0001A!\u0002\u000e\u0001\u0005\u0004Y\"!A&\u0012\u0005qy\u0002C\u0001\t\u001e\u0013\tq2BA\u0004O_RD\u0017N\\4\u0011\u0005A\u0001\u0013BA\u0011\f\u0005\r\te.\u001f\t\u00031\r\"Q\u0001\n\u0001C\u0002\u0015\u0012\u0011AV\t\u0003M}\u0001\"\u0001E\u0014\n\u0005!Z!\u0001\u0002(vY2\f1A]<m!\tYC\'D\u0001-\u0015\tic&A\u0003m_\u000e\\7O\u0003\u00020a\u0005Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005E\u0012\u0014\u0001B;uS2T\u0011aM\u0001\u0005U\u00064\u0018-\u0003\u00026Y\t1\"+Z3oiJ\fg\u000e\u001e*fC\u0012<&/\u001b;f\u0019>\u001c7.A\u0003sY>\u001c7\u000e\u0005\u00029w5\t\u0011H\u0003\u0002;Y\u00051\"+Z3oiJ\fg\u000e\u001e*fC\u0012<&/\u001b;f\u0019>\u001c7.\u0003\u0002=s\tA!+Z1e\u0019>\u001c7.A\u0003xY>\u001c7\u000e\u0005\u00029\u007f%\u0011\u0001)\u000f\u0002\n/JLG/\u001a\'pG.\f1!\\1q!\u0011\u0019Ei\u0006$\u000e\u0003AJ!!\u0012\u0019\u0003\u0017]+\u0017m\u001b%bg\"l\u0015\r\u001d\t\u0004\u000f2\u0013S\"\u0001%\u000b\u0005%S\u0015a\u0001:fM*\u00111JM\u0001\u0005Y\u0006tw-\u0003\u0002N\u0011\niq+Z1l%\u00164WM]3oG\u0016\fAB^1mk\u00164%o\\7LKf$\"A\t)\t\u000bE3\u0001\u0019A\f\u0002\u0003-\fAb[3z\rJ|WNV1mk\u0016$\"\u0001V,\u0011\u0007A)v#\u0003\u0002W\u0017\t1q\n\u001d;j_:DQ\u0001W\u0004A\u0002\t\n\u0011A^\u0001\u0006CB\u0004H.\u001f\u000b\u0003EmCQ\u0001\u0018\u0005A\u0002]\tAA\\1nK\u00069QO\\1qa2LHC\u0001+`\u0011\u0015\u0001\u0017\u00021\u0001#\u0003\u0015yG\u000f[3s\u0001"
    )
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 00 00 07 00 54 00 36 00 00 23 00 1C 00 00 25
   00 1C 01 00 1F 00 20 00 00 2E 00 20 00 00 28 00
   1C 01 00 1B 00 1C 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
