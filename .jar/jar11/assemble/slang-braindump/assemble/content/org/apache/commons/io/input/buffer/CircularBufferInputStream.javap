Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/buffer/CircularBufferInputStream.class
  Last modified May 29, 2022; size 2812 bytes
  SHA-256 checksum 5a013ae832ad274e257c72a58cf43d9e637a43a533bddacb5d4721166b841ff6
  Compiled from "CircularBufferInputStream.java"
public class org.apache.commons.io.input.buffer.CircularBufferInputStream extends java.io.InputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #36                         // org/apache/commons/io/input/buffer/CircularBufferInputStream
  super_class: #12                        // java/io/InputStream
  interfaces: 0, fields: 4, methods: 8, attributes: 1
Constant pool:
    #1 = Methodref          #12.#81       // java/io/InputStream."<init>":()V
    #2 = Class              #82           // java/lang/IllegalArgumentException
    #3 = Class              #83           // java/lang/StringBuilder
    #4 = Methodref          #3.#81        // java/lang/StringBuilder."<init>":()V
    #5 = String             #84           // Invalid bufferSize:
    #6 = Methodref          #3.#85        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    #7 = Methodref          #3.#86        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
    #8 = Methodref          #3.#87        // java/lang/StringBuilder.toString:()Ljava/lang/String;
    #9 = Methodref          #2.#88        // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #10 = String             #52           // inputStream
   #11 = Methodref          #89.#90       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #12 = Class              #91           // java/io/InputStream
   #13 = Fieldref           #36.#92       // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;
   #14 = Class              #93           // org/apache/commons/io/input/buffer/CircularByteBuffer
   #15 = Methodref          #14.#94       // org/apache/commons/io/input/buffer/CircularByteBuffer."<init>":(I)V
   #16 = Fieldref           #36.#95       // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
   #17 = Fieldref           #36.#96       // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I
   #18 = Fieldref           #36.#97       // org/apache/commons/io/input/buffer/CircularBufferInputStream.eofSeen:Z
   #19 = Class              #98           // org/apache/commons/io/IOUtils
   #20 = Methodref          #36.#99       // org/apache/commons/io/input/buffer/CircularBufferInputStream."<init>":(Ljava/io/InputStream;I)V
   #21 = Methodref          #14.#100      // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I
   #22 = Methodref          #12.#101      // java/io/InputStream.read:([BII)I
   #23 = Methodref          #14.#102      // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V
   #24 = Methodref          #14.#103      // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I
   #25 = Methodref          #36.#104      // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V
   #26 = Methodref          #14.#105      // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z
   #27 = Methodref          #36.#106      // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z
   #28 = Methodref          #14.#107      // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B
   #29 = Methodref          #36.#101      // org/apache/commons/io/input/buffer/CircularBufferInputStream.read:([BII)I
   #30 = String             #108          // Buffer
   #31 = String             #109          // Offset must not be negative
   #32 = String             #110          // Length must not be negative
   #33 = Methodref          #111.#112     // java/lang/Math.min:(II)I
   #34 = Methodref          #12.#113      // java/io/InputStream.close:()V
   #35 = Methodref          #14.#114      // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V
   #36 = Class              #115          // org/apache/commons/io/input/buffer/CircularBufferInputStream
   #37 = Utf8               in
   #38 = Utf8               Ljava/io/InputStream;
   #39 = Utf8               buffer
   #40 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
   #41 = Utf8               bufferSize
   #42 = Utf8               I
   #43 = Utf8               eofSeen
   #44 = Utf8               Z
   #45 = Utf8               <init>
   #46 = Utf8               (Ljava/io/InputStream;I)V
   #47 = Utf8               Code
   #48 = Utf8               LineNumberTable
   #49 = Utf8               LocalVariableTable
   #50 = Utf8               this
   #51 = Utf8               Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
   #52 = Utf8               inputStream
   #53 = Utf8               StackMapTable
   #54 = Class              #115          // org/apache/commons/io/input/buffer/CircularBufferInputStream
   #55 = Class              #91           // java/io/InputStream
   #56 = Utf8               (Ljava/io/InputStream;)V
   #57 = Utf8               fillBuffer
   #58 = Utf8               ()V
   #59 = Utf8               res
   #60 = Utf8               space
   #61 = Utf8               buf
   #62 = Utf8               [B
   #63 = Class              #62           // "[B"
   #64 = Utf8               Exceptions
   #65 = Class              #116          // java/io/IOException
   #66 = Utf8               haveBytes
   #67 = Utf8               (I)Z
   #68 = Utf8               count
   #69 = Utf8               read
   #70 = Utf8               ()I
   #71 = Utf8               ([B)I
   #72 = Utf8               ([BII)I
   #73 = Utf8               i
   #74 = Utf8               targetBuffer
   #75 = Utf8               offset
   #76 = Utf8               length
   #77 = Utf8               result
   #78 = Utf8               close
   #79 = Utf8               SourceFile
   #80 = Utf8               CircularBufferInputStream.java
   #81 = NameAndType        #45:#58       // "<init>":()V
   #82 = Utf8               java/lang/IllegalArgumentException
   #83 = Utf8               java/lang/StringBuilder
   #84 = Utf8               Invalid bufferSize:
   #85 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #86 = NameAndType        #117:#119     // append:(I)Ljava/lang/StringBuilder;
   #87 = NameAndType        #120:#121     // toString:()Ljava/lang/String;
   #88 = NameAndType        #45:#122      // "<init>":(Ljava/lang/String;)V
   #89 = Class              #123          // java/util/Objects
   #90 = NameAndType        #124:#125     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #91 = Utf8               java/io/InputStream
   #92 = NameAndType        #37:#38       // in:Ljava/io/InputStream;
   #93 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer
   #94 = NameAndType        #45:#126      // "<init>":(I)V
   #95 = NameAndType        #39:#40       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
   #96 = NameAndType        #41:#42       // bufferSize:I
   #97 = NameAndType        #43:#44       // eofSeen:Z
   #98 = Utf8               org/apache/commons/io/IOUtils
   #99 = NameAndType        #45:#46       // "<init>":(Ljava/io/InputStream;I)V
  #100 = NameAndType        #127:#70      // getSpace:()I
  #101 = NameAndType        #69:#72       // read:([BII)I
  #102 = NameAndType        #128:#129     // add:([BII)V
  #103 = NameAndType        #130:#70      // getCurrentNumberOfBytes:()I
  #104 = NameAndType        #57:#58       // fillBuffer:()V
  #105 = NameAndType        #131:#132     // hasBytes:()Z
  #106 = NameAndType        #66:#67       // haveBytes:(I)Z
  #107 = NameAndType        #69:#133      // read:()B
  #108 = Utf8               Buffer
  #109 = Utf8               Offset must not be negative
  #110 = Utf8               Length must not be negative
  #111 = Class              #134          // java/lang/Math
  #112 = NameAndType        #135:#136     // min:(II)I
  #113 = NameAndType        #78:#58       // close:()V
  #114 = NameAndType        #137:#58      // clear:()V
  #115 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream
  #116 = Utf8               java/io/IOException
  #117 = Utf8               append
  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #119 = Utf8               (I)Ljava/lang/StringBuilder;
  #120 = Utf8               toString
  #121 = Utf8               ()Ljava/lang/String;
  #122 = Utf8               (Ljava/lang/String;)V
  #123 = Utf8               java/util/Objects
  #124 = Utf8               requireNonNull
  #125 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #126 = Utf8               (I)V
  #127 = Utf8               getSpace
  #128 = Utf8               add
  #129 = Utf8               ([BII)V
  #130 = Utf8               getCurrentNumberOfBytes
  #131 = Utf8               hasBytes
  #132 = Utf8               ()Z
  #133 = Utf8               ()B
  #134 = Utf8               java/lang/Math
  #135 = Utf8               min
  #136 = Utf8               (II)I
  #137 = Utf8               clear
{
  protected final java.io.InputStream in;
    descriptor: Ljava/io/InputStream;
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL

  protected final org.apache.commons.io.input.buffer.CircularByteBuffer buffer;
    descriptor: Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL

  protected final int bufferSize;
    descriptor: I
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL

  private boolean eofSeen;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.io.input.buffer.CircularBufferInputStream(java.io.InputStream, int);
    descriptor: (Ljava/io/InputStream;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
         4: iload_2
         5: ifgt          35
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: new           #3                  // class java/lang/StringBuilder
        15: dup
        16: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
        19: ldc           #5                  // String Invalid bufferSize:
        21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: iload_2
        25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        28: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        31: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        34: athrow
        35: aload_0
        36: aload_1
        37: ldc           #10                 // String inputStream
        39: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        42: checkcast     #12                 // class java/io/InputStream
        45: putfield      #13                 // Field in:Ljava/io/InputStream;
        48: aload_0
        49: new           #14                 // class org/apache/commons/io/input/buffer/CircularByteBuffer
        52: dup
        53: iload_2
        54: invokespecial #15                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer."<init>":(I)V
        57: putfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        60: aload_0
        61: iload_2
        62: putfield      #17                 // Field bufferSize:I
        65: aload_0
        66: iconst_0
        67: putfield      #18                 // Field eofSeen:Z
        70: return
      LineNumberTable:
        line 45: 0
        line 46: 4
        line 47: 8
        line 49: 35
        line 50: 48
        line 51: 60
        line 52: 65
        line 53: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
            0      71     1 inputStream   Ljava/io/InputStream;
            0      71     2 bufferSize   I
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/apache/commons/io/input/buffer/CircularBufferInputStream, class java/io/InputStream, int ]
          stack = []

  public org.apache.commons.io.input.buffer.CircularBufferInputStream(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: sipush        8192
         5: invokespecial #20                 // Method "<init>":(Ljava/io/InputStream;I)V
         8: return
      LineNumberTable:
        line 62: 0
        line 63: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
            0       9     1 inputStream   Ljava/io/InputStream;

  protected void fillBuffer() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: getfield      #18                 // Field eofSeen:Z
         4: ifeq          8
         7: return
         8: aload_0
         9: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        12: invokevirtual #21                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I
        15: istore_1
        16: iload_1
        17: newarray       byte
        19: astore_2
        20: iload_1
        21: ifle          67
        24: aload_0
        25: getfield      #13                 // Field in:Ljava/io/InputStream;
        28: aload_2
        29: iconst_0
        30: iload_1
        31: invokevirtual #22                 // Method java/io/InputStream.read:([BII)I
        34: istore_3
        35: iload_3
        36: iconst_m1
        37: if_icmpne     46
        40: aload_0
        41: iconst_1
        42: putfield      #18                 // Field eofSeen:Z
        45: return
        46: iload_3
        47: ifle          64
        50: aload_0
        51: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        54: aload_2
        55: iconst_0
        56: iload_3
        57: invokevirtual #23                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V
        60: iload_1
        61: iload_3
        62: isub
        63: istore_1
        64: goto          20
        67: return
      LineNumberTable:
        line 71: 0
        line 72: 7
        line 74: 8
        line 75: 16
        line 76: 20
        line 77: 24
        line 78: 35
        line 79: 40
        line 80: 45
        line 81: 46
        line 82: 50
        line 83: 60
        line 85: 64
        line 86: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           35      29     3   res   I
            0      68     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
           16      52     1 space   I
           20      48     2   buf   [B
      StackMapTable: number_of_entries = 5
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ int, class "[B" ]
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 17
        frame_type = 2 /* same */
    Exceptions:
      throws java.io.IOException

  protected boolean haveBytes(int) throws java.io.IOException;
    descriptor: (I)Z
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
         4: invokevirtual #24                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I
         7: iload_1
         8: if_icmpge     15
        11: aload_0
        12: invokevirtual #25                 // Method fillBuffer:()V
        15: aload_0
        16: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        19: invokevirtual #26                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z
        22: ireturn
      LineNumberTable:
        line 96: 0
        line 97: 11
        line 99: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
            0      23     1 count   I
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
    Exceptions:
      throws java.io.IOException

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_1
         2: invokevirtual #27                 // Method haveBytes:(I)Z
         5: ifne          10
         8: iconst_m1
         9: ireturn
        10: aload_0
        11: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        14: invokevirtual #28                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B
        17: sipush        255
        20: iand
        21: ireturn
      LineNumberTable:
        line 104: 0
        line 105: 8
        line 107: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
    Exceptions:
      throws java.io.IOException

  public int read(byte[]) throws java.io.IOException;
    descriptor: ([B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: aload_1
         4: arraylength
         5: invokevirtual #29                 // Method read:([BII)I
         8: ireturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
            0       9     1 buffer   [B
    Exceptions:
      throws java.io.IOException

  public int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=4
         0: aload_1
         1: ldc           #30                 // String Buffer
         3: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: iload_2
         8: ifge          21
        11: new           #2                  // class java/lang/IllegalArgumentException
        14: dup
        15: ldc           #31                 // String Offset must not be negative
        17: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        20: athrow
        21: iload_3
        22: ifge          35
        25: new           #2                  // class java/lang/IllegalArgumentException
        28: dup
        29: ldc           #32                 // String Length must not be negative
        31: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        34: athrow
        35: aload_0
        36: iload_3
        37: invokevirtual #27                 // Method haveBytes:(I)Z
        40: ifne          45
        43: iconst_m1
        44: ireturn
        45: iload_3
        46: aload_0
        47: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        50: invokevirtual #24                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I
        53: invokestatic  #33                 // Method java/lang/Math.min:(II)I
        56: istore        4
        58: iconst_0
        59: istore        5
        61: iload         5
        63: iload         4
        65: if_icmpge     87
        68: aload_1
        69: iload_2
        70: iload         5
        72: iadd
        73: aload_0
        74: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        77: invokevirtual #28                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B
        80: bastore
        81: iinc          5, 1
        84: goto          61
        87: iload         4
        89: ireturn
      LineNumberTable:
        line 117: 0
        line 118: 7
        line 119: 11
        line 121: 21
        line 122: 25
        line 124: 35
        line 125: 43
        line 127: 45
        line 128: 58
        line 129: 68
        line 128: 81
        line 131: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           61      26     5     i   I
            0      90     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
            0      90     1 targetBuffer   [B
            0      90     2 offset   I
            0      90     3 length   I
           58      32     4 result   I
      StackMapTable: number_of_entries = 5
        frame_type = 21 /* same */
        frame_type = 13 /* same */
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 15
          locals = [ int, int ]
        frame_type = 250 /* chop */
          offset_delta = 25
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #13                 // Field in:Ljava/io/InputStream;
         4: invokevirtual #34                 // Method java/io/InputStream.close:()V
         7: aload_0
         8: iconst_1
         9: putfield      #18                 // Field eofSeen:Z
        12: aload_0
        13: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        16: invokevirtual #35                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V
        19: return
      LineNumberTable:
        line 136: 0
        line 137: 7
        line 138: 12
        line 139: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "CircularBufferInputStream.java"
