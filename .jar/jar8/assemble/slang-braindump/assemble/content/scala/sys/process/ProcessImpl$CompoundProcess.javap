Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/sys/process/ProcessImpl$CompoundProcess.class
  Last modified May 29, 2022; size 9353 bytes
  SHA-256 checksum 282faeb2cf2e8728761222ff38d6a84b7f934e587a1dbdf358be0c8506b8ebd3
  Compiled from "ProcessImpl.scala"
public abstract class scala.sys.process.ProcessImpl$CompoundProcess extends scala.sys.process.ProcessImpl$BasicProcess
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/sys/process/ProcessImpl$CompoundProcess
  super_class: #4                         // scala/sys/process/ProcessImpl$BasicProcess
  interfaces: 0, fields: 6, methods: 24, attributes: 5
Constant pool:
    #1 = Utf8               scala/sys/process/ProcessImpl$CompoundProcess
    #2 = Class              #1            // scala/sys/process/ProcessImpl$CompoundProcess
    #3 = Utf8               scala/sys/process/ProcessImpl$BasicProcess
    #4 = Class              #3            // scala/sys/process/ProcessImpl$BasicProcess
    #5 = Utf8               ProcessImpl.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/sys/process/ProcessImpl
   #12 = Class              #11           // scala/sys/process/ProcessImpl
   #13 = Utf8               BasicProcess
   #14 = Utf8               CompoundProcess
   #15 = Utf8               scala/sys/process/ProcessImpl$Future$
   #16 = Class              #15           // scala/sys/process/ProcessImpl$Future$
   #17 = Utf8               Future$
   #18 = Utf8               scala/sys/process/ProcessImpl$Spawn$
   #19 = Class              #18           // scala/sys/process/ProcessImpl$Spawn$
   #20 = Utf8               Spawn$
   #21 = Utf8               scala/sys/process/ProcessImpl$Spawn$$anon$1
   #22 = Class              #21           // scala/sys/process/ProcessImpl$Spawn$$anon$1
   #23 = Utf8               scala/sys/process/processInternal$$anonfun$onInterrupt$1
   #24 = Class              #23           // scala/sys/process/processInternal$$anonfun$onInterrupt$1
   #25 = Utf8               x$4
   #26 = Utf8               Lscala/Tuple4;
   #27 = Utf8               Lscala/Tuple4<Ljava/lang/Thread;Ljava/lang/Thread;Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;>;
   #28 = Utf8               processThread
   #29 = Utf8               Ljava/lang/Thread;
   #30 = Utf8               futureThread
   #31 = Utf8               futureValue
   #32 = Utf8               Lscala/Function0;
   #33 = Utf8               Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;
   #34 = Utf8               destroyer
   #35 = Utf8               Lscala/Function0<Lscala/runtime/BoxedUnit;>;
   #36 = Utf8               bitmap$0
   #37 = Utf8               B
   #38 = Utf8               isAlive
   #39 = Utf8               ()Z
   #40 = Utf8               ()Ljava/lang/Thread;
   #41 = NameAndType        #28:#40       // processThread:()Ljava/lang/Thread;
   #42 = Methodref          #2.#41        // scala/sys/process/ProcessImpl$CompoundProcess.processThread:()Ljava/lang/Thread;
   #43 = Utf8               java/lang/Thread
   #44 = Class              #43           // java/lang/Thread
   #45 = NameAndType        #38:#39       // isAlive:()Z
   #46 = Methodref          #44.#45       // java/lang/Thread.isAlive:()Z
   #47 = Utf8               this
   #48 = Utf8               Lscala/sys/process/ProcessImpl$CompoundProcess;
   #49 = Utf8               destroy
   #50 = Utf8               ()V
   #51 = Utf8               ()Lscala/Function0;
   #52 = NameAndType        #34:#51       // destroyer:()Lscala/Function0;
   #53 = Methodref          #2.#52        // scala/sys/process/ProcessImpl$CompoundProcess.destroyer:()Lscala/Function0;
   #54 = Utf8               scala/Function0
   #55 = Class              #54           // scala/Function0
   #56 = Utf8               apply$mcV$sp
   #57 = NameAndType        #56:#50       // apply$mcV$sp:()V
   #58 = InterfaceMethodref #55.#57       // scala/Function0.apply$mcV$sp:()V
   #59 = Utf8               exitValue
   #60 = Utf8               ()I
   #61 = NameAndType        #31:#51       // futureValue:()Lscala/Function0;
   #62 = Methodref          #2.#61        // scala/sys/process/ProcessImpl$CompoundProcess.futureValue:()Lscala/Function0;
   #63 = Utf8               apply
   #64 = Utf8               ()Ljava/lang/Object;
   #65 = NameAndType        #63:#64       // apply:()Ljava/lang/Object;
   #66 = InterfaceMethodref #55.#65       // scala/Function0.apply:()Ljava/lang/Object;
   #67 = Utf8               scala/Option
   #68 = Class              #67           // scala/Option
   #69 = Utf8               isEmpty
   #70 = NameAndType        #69:#39       // isEmpty:()Z
   #71 = Methodref          #68.#70       // scala/Option.isEmpty:()Z
   #72 = Utf8               scala/sys/package$
   #73 = Class              #72           // scala/sys/package$
   #74 = Utf8               MODULE$
   #75 = Utf8               Lscala/sys/package$;
   #76 = NameAndType        #74:#75       // MODULE$:Lscala/sys/package$;
   #77 = Fieldref           #73.#76       // scala/sys/package$.MODULE$:Lscala/sys/package$;
   #78 = Utf8               No exit code: process destroyed.
   #79 = String             #78           // No exit code: process destroyed.
   #80 = Utf8               java/lang/RuntimeException
   #81 = Class              #80           // java/lang/RuntimeException
   #82 = Utf8               <init>
   #83 = Utf8               (Ljava/lang/String;)V
   #84 = NameAndType        #82:#83       // "<init>":(Ljava/lang/String;)V
   #85 = Methodref          #81.#84       // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #86 = Utf8               get
   #87 = NameAndType        #86:#64       // get:()Ljava/lang/Object;
   #88 = Methodref          #68.#87       // scala/Option.get:()Ljava/lang/Object;
   #89 = Utf8               scala/runtime/BoxesRunTime
   #90 = Class              #89           // scala/runtime/BoxesRunTime
   #91 = Utf8               unboxToInt
   #92 = Utf8               (Ljava/lang/Object;)I
   #93 = NameAndType        #91:#92       // unboxToInt:(Ljava/lang/Object;)I
   #94 = Methodref          #90.#93       // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   #95 = Utf8               getOrElse_this
   #96 = Utf8               Lscala/Option;
   #97 = Utf8               error_message
   #98 = Utf8               Ljava/lang/String;
   #99 = Utf8               start
  #100 = NameAndType        #30:#40       // futureThread:()Ljava/lang/Thread;
  #101 = Methodref          #2.#100       // scala/sys/process/ProcessImpl$CompoundProcess.futureThread:()Ljava/lang/Thread;
  #102 = Utf8               x$4$lzycompute
  #103 = Utf8               ()Lscala/Tuple4;
  #104 = Utf8               ()Lscala/Tuple4<Ljava/lang/Thread;Ljava/lang/Thread;Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;>;
  #105 = NameAndType        #36:#37       // bitmap$0:B
  #106 = Fieldref           #2.#105       // scala/sys/process/ProcessImpl$CompoundProcess.bitmap$0:B
  #107 = Utf8               java/util/concurrent/LinkedBlockingQueue
  #108 = Class              #107          // java/util/concurrent/LinkedBlockingQueue
  #109 = Utf8               (I)V
  #110 = NameAndType        #82:#109      // "<init>":(I)V
  #111 = Methodref          #108.#110     // java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
  #112 = Utf8               scala$sys$process$ProcessImpl$CompoundProcess$$$outer
  #113 = Utf8               ()Lscala/sys/process/Process$;
  #114 = NameAndType        #112:#113     // scala$sys$process$ProcessImpl$CompoundProcess$$$outer:()Lscala/sys/process/Process$;
  #115 = Methodref          #2.#114       // scala/sys/process/ProcessImpl$CompoundProcess.scala$sys$process$ProcessImpl$CompoundProcess$$$outer:()Lscala/sys/process/Process$;
  #116 = Utf8               scala/sys/process/Process$
  #117 = Class              #116          // scala/sys/process/Process$
  #118 = Utf8               Spawn
  #119 = Utf8               ()Lscala/sys/process/ProcessImpl$Spawn$;
  #120 = NameAndType        #118:#119     // Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
  #121 = Methodref          #117.#120     // scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
  #122 = String             #14           // CompoundProcess
  #123 = MethodType         #50           //  ()V
  #124 = Utf8               $anonfun$x$4$1
  #125 = Utf8               (Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)V
  #126 = NameAndType        #124:#125     // $anonfun$x$4$1:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)V
  #127 = Methodref          #2.#126       // scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$1:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)V
  #128 = MethodHandle       6:#127        // REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$1:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)V
  #129 = Integer            1
  #130 = Utf8               java/lang/invoke/LambdaMetafactory
  #131 = Class              #130          // java/lang/invoke/LambdaMetafactory
  #132 = Utf8               altMetafactory
  #133 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #134 = NameAndType        #132:#133     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #135 = Methodref          #131.#134     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = MethodHandle       6:#135        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #137 = Utf8               (Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #138 = NameAndType        #56:#137      // apply$mcV$sp:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #139 = InvokeDynamic      #0:#138       // #0:apply$mcV$sp:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #140 = Utf8               (Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #141 = NameAndType        #82:#140      // "<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #142 = Methodref          #22.#141      // scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #143 = Utf8               java/lang/StringBuilder
  #144 = Class              #143          // java/lang/StringBuilder
  #145 = Integer            7
  #146 = Methodref          #144.#110     // java/lang/StringBuilder."<init>":(I)V
  #147 = Utf8               append
  #148 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #149 = NameAndType        #147:#148     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #150 = Methodref          #144.#149     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #151 = Utf8               -spawn-
  #152 = String             #151          // -spawn-
  #153 = Utf8               getName
  #154 = Utf8               ()Ljava/lang/String;
  #155 = NameAndType        #153:#154     // getName:()Ljava/lang/String;
  #156 = Methodref          #44.#155      // java/lang/Thread.getName:()Ljava/lang/String;
  #157 = Utf8               toString
  #158 = NameAndType        #157:#154     // toString:()Ljava/lang/String;
  #159 = Methodref          #144.#158     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #160 = Utf8               setName
  #161 = NameAndType        #160:#83      // setName:(Ljava/lang/String;)V
  #162 = Methodref          #44.#161      // java/lang/Thread.setName:(Ljava/lang/String;)V
  #163 = Utf8               setDaemon
  #164 = Utf8               (Z)V
  #165 = NameAndType        #163:#164     // setDaemon:(Z)V
  #166 = Methodref          #44.#165      // java/lang/Thread.setDaemon:(Z)V
  #167 = NameAndType        #99:#50       // start:()V
  #168 = Methodref          #44.#167      // java/lang/Thread.start:()V
  #169 = Utf8               scala/Tuple3
  #170 = Class              #169          // scala/Tuple3
  #171 = Utf8               Future
  #172 = Utf8               ()Lscala/sys/process/ProcessImpl$Future$;
  #173 = NameAndType        #171:#172     // Future:()Lscala/sys/process/ProcessImpl$Future$;
  #174 = Methodref          #117.#173     // scala/sys/process/Process$.Future:()Lscala/sys/process/ProcessImpl$Future$;
  #175 = MethodType         #64           //  ()Ljava/lang/Object;
  #176 = Utf8               $anonfun$x$4$2
  #177 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
  #178 = NameAndType        #176:#177     // $anonfun$x$4$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
  #179 = Methodref          #2.#178       // scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
  #180 = MethodHandle       6:#179        // REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
  #181 = Utf8               ()Lscala/Option;
  #182 = MethodType         #181          //  ()Lscala/Option;
  #183 = Integer            5
  #184 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
  #185 = NameAndType        #63:#184      // apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
  #186 = InvokeDynamic      #1:#185       // #1:apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
  #187 = Utf8               (Lscala/Function0;)Lscala/Tuple2;
  #188 = NameAndType        #63:#187      // apply:(Lscala/Function0;)Lscala/Tuple2;
  #189 = Methodref          #16.#188      // scala/sys/process/ProcessImpl$Future$.apply:(Lscala/Function0;)Lscala/Tuple2;
  #190 = Utf8               $anonfun$x$4$3
  #191 = Utf8               (Ljava/lang/Thread;)V
  #192 = NameAndType        #190:#191     // $anonfun$x$4$3:(Ljava/lang/Thread;)V
  #193 = Methodref          #2.#192       // scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$3:(Ljava/lang/Thread;)V
  #194 = MethodHandle       6:#193        // REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$3:(Ljava/lang/Thread;)V
  #195 = Utf8               (Ljava/lang/Thread;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #196 = NameAndType        #56:#195      // apply$mcV$sp:(Ljava/lang/Thread;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #197 = InvokeDynamic      #2:#196       // #2:apply$mcV$sp:(Ljava/lang/Thread;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #198 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #199 = NameAndType        #82:#198      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #200 = Methodref          #170.#199     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #201 = Utf8               scala/Tuple2
  #202 = Class              #201          // scala/Tuple2
  #203 = Utf8               _1
  #204 = NameAndType        #203:#64      // _1:()Ljava/lang/Object;
  #205 = Methodref          #202.#204     // scala/Tuple2._1:()Ljava/lang/Object;
  #206 = Utf8               _2
  #207 = NameAndType        #206:#64      // _2:()Ljava/lang/Object;
  #208 = Methodref          #202.#207     // scala/Tuple2._2:()Ljava/lang/Object;
  #209 = Utf8               scala/Tuple4
  #210 = Class              #209          // scala/Tuple4
  #211 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #212 = NameAndType        #82:#211      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #213 = Methodref          #210.#212     // scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #214 = Utf8               scala/MatchError
  #215 = Class              #214          // scala/MatchError
  #216 = Utf8               (Ljava/lang/Object;)V
  #217 = NameAndType        #82:#216      // "<init>":(Ljava/lang/Object;)V
  #218 = Methodref          #215.#217     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #219 = NameAndType        #25:#26       // x$4:Lscala/Tuple4;
  #220 = Fieldref           #2.#219       // scala/sys/process/ProcessImpl$CompoundProcess.x$4:Lscala/Tuple4;
  #221 = Utf8               code
  #222 = Utf8               Ljava/util/concurrent/LinkedBlockingQueue;
  #223 = Utf8               thread
  #224 = Utf8               apply_thread
  #225 = Utf8               apply_prefix
  #226 = Utf8               apply_f
  #227 = Utf8               java/lang/String
  #228 = Class              #227          // java/lang/String
  #229 = Utf8               scala/runtime/java8/JFunction0$mcV$sp
  #230 = Class              #229          // scala/runtime/java8/JFunction0$mcV$sp
  #231 = Utf8               java/lang/Throwable
  #232 = Class              #231          // java/lang/Throwable
  #233 = NameAndType        #102:#103     // x$4$lzycompute:()Lscala/Tuple4;
  #234 = Methodref          #2.#233       // scala/sys/process/ProcessImpl$CompoundProcess.x$4$lzycompute:()Lscala/Tuple4;
  #235 = Utf8               processThread$lzycompute
  #236 = NameAndType        #25:#103      // x$4:()Lscala/Tuple4;
  #237 = Methodref          #2.#236       // scala/sys/process/ProcessImpl$CompoundProcess.x$4:()Lscala/Tuple4;
  #238 = Methodref          #210.#204     // scala/Tuple4._1:()Ljava/lang/Object;
  #239 = NameAndType        #28:#29       // processThread:Ljava/lang/Thread;
  #240 = Fieldref           #2.#239       // scala/sys/process/ProcessImpl$CompoundProcess.processThread:Ljava/lang/Thread;
  #241 = NameAndType        #235:#40      // processThread$lzycompute:()Ljava/lang/Thread;
  #242 = Methodref          #2.#241       // scala/sys/process/ProcessImpl$CompoundProcess.processThread$lzycompute:()Ljava/lang/Thread;
  #243 = Utf8               futureThread$lzycompute
  #244 = Methodref          #210.#207     // scala/Tuple4._2:()Ljava/lang/Object;
  #245 = NameAndType        #30:#29       // futureThread:Ljava/lang/Thread;
  #246 = Fieldref           #2.#245       // scala/sys/process/ProcessImpl$CompoundProcess.futureThread:Ljava/lang/Thread;
  #247 = NameAndType        #243:#40      // futureThread$lzycompute:()Ljava/lang/Thread;
  #248 = Methodref          #2.#247       // scala/sys/process/ProcessImpl$CompoundProcess.futureThread$lzycompute:()Ljava/lang/Thread;
  #249 = Utf8               futureValue$lzycompute
  #250 = Utf8               ()Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;
  #251 = Utf8               _3
  #252 = NameAndType        #251:#64      // _3:()Ljava/lang/Object;
  #253 = Methodref          #210.#252     // scala/Tuple4._3:()Ljava/lang/Object;
  #254 = NameAndType        #31:#32       // futureValue:Lscala/Function0;
  #255 = Fieldref           #2.#254       // scala/sys/process/ProcessImpl$CompoundProcess.futureValue:Lscala/Function0;
  #256 = NameAndType        #249:#51      // futureValue$lzycompute:()Lscala/Function0;
  #257 = Methodref          #2.#256       // scala/sys/process/ProcessImpl$CompoundProcess.futureValue$lzycompute:()Lscala/Function0;
  #258 = Utf8               destroyer$lzycompute
  #259 = Utf8               ()Lscala/Function0<Lscala/runtime/BoxedUnit;>;
  #260 = Utf8               _4
  #261 = NameAndType        #260:#64      // _4:()Ljava/lang/Object;
  #262 = Methodref          #210.#261     // scala/Tuple4._4:()Ljava/lang/Object;
  #263 = NameAndType        #34:#32       // destroyer:Lscala/Function0;
  #264 = Fieldref           #2.#263       // scala/sys/process/ProcessImpl$CompoundProcess.destroyer:Lscala/Function0;
  #265 = NameAndType        #258:#51      // destroyer$lzycompute:()Lscala/Function0;
  #266 = Methodref          #2.#265       // scala/sys/process/ProcessImpl$CompoundProcess.destroyer$lzycompute:()Lscala/Function0;
  #267 = Utf8               runAndExitValue
  #268 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
  #269 = Utf8               runInterruptible
  #270 = Utf8               (Lscala/Function0;Lscala/Function0;)Lscala/Option;
  #271 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lscala/Option<TT;>;
  #272 = Utf8               action
  #273 = Utf8               destroyImpl
  #274 = Utf8               scala/Some
  #275 = Class              #274          // scala/Some
  #276 = Methodref          #275.#217     // scala/Some."<init>":(Ljava/lang/Object;)V
  #277 = Utf8               scala/sys/process/processInternal$
  #278 = Class              #277          // scala/sys/process/processInternal$
  #279 = Utf8               Lscala/sys/process/processInternal$;
  #280 = NameAndType        #74:#279      // MODULE$:Lscala/sys/process/processInternal$;
  #281 = Fieldref           #278.#280     // scala/sys/process/processInternal$.MODULE$:Lscala/sys/process/processInternal$;
  #282 = Utf8               $anonfun$runInterruptible$1
  #283 = Utf8               (Lscala/Function0;)Lscala/None$;
  #284 = NameAndType        #282:#283     // $anonfun$runInterruptible$1:(Lscala/Function0;)Lscala/None$;
  #285 = Methodref          #2.#284       // scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$runInterruptible$1:(Lscala/Function0;)Lscala/None$;
  #286 = MethodHandle       6:#285        // REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$runInterruptible$1:(Lscala/Function0;)Lscala/None$;
  #287 = Utf8               ()Lscala/None$;
  #288 = MethodType         #287          //  ()Lscala/None$;
  #289 = Utf8               (Lscala/Function0;)Lscala/Function0;
  #290 = NameAndType        #63:#289      // apply:(Lscala/Function0;)Lscala/Function0;
  #291 = InvokeDynamic      #3:#290       // #3:apply:(Lscala/Function0;)Lscala/Function0;
  #292 = Utf8               (Lscala/Function0;)V
  #293 = NameAndType        #82:#292      // "<init>":(Lscala/Function0;)V
  #294 = Methodref          #24.#293      // scala/sys/process/processInternal$$anonfun$onInterrupt$1."<init>":(Lscala/Function0;)V
  #295 = Utf8               isDefinedAt
  #296 = Utf8               (Ljava/lang/Throwable;)Z
  #297 = NameAndType        #295:#296     // isDefinedAt:(Ljava/lang/Throwable;)Z
  #298 = Methodref          #24.#297      // scala/sys/process/processInternal$$anonfun$onInterrupt$1.isDefinedAt:(Ljava/lang/Throwable;)Z
  #299 = Utf8               scala/PartialFunction
  #300 = Class              #299          // scala/PartialFunction
  #301 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #302 = NameAndType        #63:#301      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #303 = InterfaceMethodref #300.#302     // scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #304 = Utf8               catchExpr$1
  #305 = Utf8               Lscala/PartialFunction;
  #306 = Utf8               x$9
  #307 = Utf8               Ljava/lang/Throwable;
  #308 = Utf8               onInterrupt_handler
  #309 = Utf8               $outer
  #310 = Utf8               Lscala/sys/process/Process$;
  #311 = NameAndType        #309:#310     // $outer:Lscala/sys/process/Process$;
  #312 = Fieldref           #2.#311       // scala/sys/process/ProcessImpl$CompoundProcess.$outer:Lscala/sys/process/Process$;
  #313 = Utf8               $anonfun$exitValue$1
  #314 = Utf8               ()Lscala/runtime/Nothing$;
  #315 = Utf8               error
  #316 = Utf8               (Ljava/lang/String;)Lscala/runtime/Nothing$;
  #317 = NameAndType        #315:#316     // error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #318 = Methodref          #73.#317      // scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #319 = Utf8               $this
  #320 = Utf8               code$1
  #321 = Utf8               scala/None$
  #322 = Class              #321          // scala/None$
  #323 = Utf8               Lscala/None$;
  #324 = NameAndType        #74:#323      // MODULE$:Lscala/None$;
  #325 = Fieldref           #322.#324     // scala/None$.MODULE$:Lscala/None$;
  #326 = NameAndType        #267:#181     // runAndExitValue:()Lscala/Option;
  #327 = Methodref          #2.#326       // scala/sys/process/ProcessImpl$CompoundProcess.runAndExitValue:()Lscala/Option;
  #328 = Utf8               java/lang/IndexOutOfBoundsException
  #329 = Class              #328          // java/lang/IndexOutOfBoundsException
  #330 = Utf8               java/io/IOException
  #331 = Class              #330          // java/io/IOException
  #332 = Utf8               java/lang/NullPointerException
  #333 = Class              #332          // java/lang/NullPointerException
  #334 = Utf8               java/lang/SecurityException
  #335 = Class              #334          // java/lang/SecurityException
  #336 = Utf8               java/lang/UnsupportedOperationException
  #337 = Class              #336          // java/lang/UnsupportedOperationException
  #338 = Utf8               java/lang/Integer
  #339 = Class              #338          // java/lang/Integer
  #340 = Utf8               valueOf
  #341 = Utf8               (I)Ljava/lang/Integer;
  #342 = NameAndType        #340:#341     // valueOf:(I)Ljava/lang/Integer;
  #343 = Methodref          #339.#342     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #344 = Utf8               put
  #345 = NameAndType        #344:#216     // put:(Ljava/lang/Object;)V
  #346 = Methodref          #108.#345     // java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
  #347 = Utf8               value
  #348 = Utf8               take
  #349 = NameAndType        #348:#64      // take:()Ljava/lang/Object;
  #350 = Methodref          #108.#349     // java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
  #351 = Utf8               thread$1
  #352 = Utf8               interrupt
  #353 = NameAndType        #352:#50      // interrupt:()V
  #354 = Methodref          #44.#353      // java/lang/Thread.interrupt:()V
  #355 = Utf8               destroyImpl$1
  #356 = Utf8               (Lscala/sys/process/Process$;)V
  #357 = NameAndType        #82:#356      // "<init>":(Lscala/sys/process/Process$;)V
  #358 = Methodref          #4.#357       // scala/sys/process/ProcessImpl$BasicProcess."<init>":(Lscala/sys/process/Process$;)V
  #359 = Utf8               $deserializeLambda$
  #360 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #361 = Utf8               scala/runtime/LambdaDeserialize
  #362 = Class              #361          // scala/runtime/LambdaDeserialize
  #363 = Utf8               bootstrap
  #364 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #365 = NameAndType        #363:#364     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #366 = Methodref          #362.#365     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #367 = MethodHandle       6:#366        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #368 = Utf8               lambdaDeserialize
  #369 = NameAndType        #368:#360     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #370 = InvokeDynamic      #4:#369       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #371 = Utf8               Signature
  #372 = Utf8               Code
  #373 = Utf8               LineNumberTable
  #374 = Utf8               LocalVariableTable
  #375 = Utf8               StackMapTable
  #376 = Utf8               MethodParameters
  #377 = Utf8               InnerClasses
  #378 = Utf8               SourceFile
  #379 = Utf8               BootstrapMethods
  #380 = Utf8               ScalaInlineInfo
  #381 = Utf8               Scala
{
  private scala.Tuple4<java.lang.Thread, java.lang.Thread, scala.Function0<scala.Option<java.lang.Object>>, scala.Function0<scala.runtime.BoxedUnit>> x$4;
    descriptor: Lscala/Tuple4;
    flags: (0x0002) ACC_PRIVATE
    Signature: #27                          // Lscala/Tuple4<Ljava/lang/Thread;Ljava/lang/Thread;Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;>;

  private java.lang.Thread processThread;
    descriptor: Ljava/lang/Thread;
    flags: (0x0002) ACC_PRIVATE

  private java.lang.Thread futureThread;
    descriptor: Ljava/lang/Thread;
    flags: (0x0002) ACC_PRIVATE

  private scala.Function0<scala.Option<java.lang.Object>> futureValue;
    descriptor: Lscala/Function0;
    flags: (0x0002) ACC_PRIVATE
    Signature: #33                          // Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;

  private scala.Function0<scala.runtime.BoxedUnit> destroyer;
    descriptor: Lscala/Function0;
    flags: (0x0002) ACC_PRIVATE
    Signature: #35                          // Lscala/Function0<Lscala/runtime/BoxedUnit;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public boolean isAlive();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #42                 // Method processThread:()Ljava/lang/Thread;
         4: invokevirtual #46                 // Method java/lang/Thread.isAlive:()Z
         7: ireturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  public void destroy();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method destroyer:()Lscala/Function0;
         4: invokeinterface #58,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
         9: return
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  public int exitValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #62                 // Method futureValue:()Lscala/Function0;
         4: invokeinterface #66,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
         9: checkcast     #68                 // class scala/Option
        12: dup
        13: ifnonnull     18
        16: aconst_null
        17: athrow
        18: astore_1
        19: aload_1
        20: invokevirtual #71                 // Method scala/Option.isEmpty:()Z
        23: ifeq          42
        26: getstatic     #77                 // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        29: pop
        30: ldc           #79                 // String No exit code: process destroyed.
        32: astore_2
        33: new           #81                 // class java/lang/RuntimeException
        36: dup
        37: aload_2
        38: invokespecial #85                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: aload_1
        43: invokevirtual #88                 // Method scala/Option.get:()Ljava/lang/Object;
        46: aconst_null
        47: astore_1
        48: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        51: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class scala/Option ]
      LineNumberTable:
        line 96: 0
        line 96: 26
        line 96: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
           19      27     1 getOrElse_this   Lscala/Option;
           33       9     2 error_message   Ljava/lang/String;

  public void start();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #101                // Method futureThread:()Ljava/lang/Thread;
         4: pop
         5: return
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  private scala.Tuple4<java.lang.Thread, java.lang.Thread, scala.Function0<scala.Option<java.lang.Object>>, scala.Function0<scala.runtime.BoxedUnit>> x$4$lzycompute();
    descriptor: ()Lscala/Tuple4;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=13, args_size=1
         0: aload_0
         1: monitorenter
         2: aload_0
         3: getfield      #106                // Field bitmap$0:B
         6: iconst_1
         7: iand
         8: i2b
         9: iconst_0
        10: if_icmpne     244
        13: aload_0
        14: new           #108                // class java/util/concurrent/LinkedBlockingQueue
        17: dup
        18: iconst_1
        19: invokespecial #111                // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
        22: astore_3
        23: aload_0
        24: invokevirtual #115                // Method scala$sys$process$ProcessImpl$CompoundProcess$$$outer:()Lscala/sys/process/Process$;
        27: invokevirtual #121                // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        30: ldc           #122                // String CompoundProcess
        32: aload_0
        33: invokevirtual #115                // Method scala$sys$process$ProcessImpl$CompoundProcess$$$outer:()Lscala/sys/process/Process$;
        36: invokevirtual #121                // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        39: ifnonnull     44
        42: aconst_null
        43: athrow
        44: iconst_0
        45: istore        10
        47: aload_0
        48: aload_3
        49: invokedynamic #139,  0            // InvokeDynamic #0:apply$mcV$sp:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
        54: astore        8
        56: astore        7
        58: ifnonnull     63
        61: aconst_null
        62: athrow
        63: new           #22                 // class scala/sys/process/ProcessImpl$Spawn$$anon$1
        66: dup
        67: aconst_null
        68: aload         8
        70: invokespecial #142                // Method scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
        73: astore        9
        75: aload         9
        77: new           #144                // class java/lang/StringBuilder
        80: dup
        81: ldc           #145                // int 7
        83: invokespecial #146                // Method java/lang/StringBuilder."<init>":(I)V
        86: aload         7
        88: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        91: ldc           #152                // String -spawn-
        93: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        96: aload         9
        98: invokevirtual #156                // Method java/lang/Thread.getName:()Ljava/lang/String;
       101: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       104: invokevirtual #159                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       107: invokevirtual #162                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
       110: aload         9
       112: iload         10
       114: invokevirtual #166                // Method java/lang/Thread.setDaemon:(Z)V
       117: aload         9
       119: invokevirtual #168                // Method java/lang/Thread.start:()V
       122: aload         9
       124: aconst_null
       125: astore        7
       127: aconst_null
       128: astore        8
       130: aconst_null
       131: astore        9
       133: astore        4
       135: new           #170                // class scala/Tuple3
       138: dup
       139: aload_0
       140: invokevirtual #115                // Method scala$sys$process$ProcessImpl$CompoundProcess$$$outer:()Lscala/sys/process/Process$;
       143: invokevirtual #174                // Method scala/sys/process/Process$.Future:()Lscala/sys/process/ProcessImpl$Future$;
       146: aload_3
       147: invokedynamic #186,  0            // InvokeDynamic #1:apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
       152: invokevirtual #189                // Method scala/sys/process/ProcessImpl$Future$.apply:(Lscala/Function0;)Lscala/Tuple2;
       155: aload         4
       157: invokedynamic #197,  0            // InvokeDynamic #2:apply$mcV$sp:(Ljava/lang/Thread;)Lscala/runtime/java8/JFunction0$mcV$sp;
       162: astore        12
       164: astore        11
       166: aload         4
       168: aload         11
       170: aload         12
       172: invokespecial #200                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       175: astore_2
       176: aload         11
       178: ifnull        220
       181: aload         11
       183: invokevirtual #205                // Method scala/Tuple2._1:()Ljava/lang/Object;
       186: checkcast     #44                 // class java/lang/Thread
       189: astore        5
       191: aload         11
       193: invokevirtual #208                // Method scala/Tuple2._2:()Ljava/lang/Object;
       196: checkcast     #55                 // class scala/Function0
       199: astore        6
       201: new           #210                // class scala/Tuple4
       204: dup
       205: aload         4
       207: aload         5
       209: aload         6
       211: aload         12
       213: invokespecial #213                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       216: astore_1
       217: goto          229
       220: new           #215                // class scala/MatchError
       223: dup
       224: aload_2
       225: invokespecial #218                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       228: athrow
       229: aload_1
       230: putfield      #220                // Field x$4:Lscala/Tuple4;
       233: aload_0
       234: aload_0
       235: getfield      #106                // Field bitmap$0:B
       238: iconst_1
       239: ior
       240: i2b
       241: putfield      #106                // Field bitmap$0:B
       244: aload_0
       245: monitorexit
       246: goto          252
       249: aload_0
       250: monitorexit
       251: athrow
       252: aload_0
       253: getfield      #220                // Field x$4:Lscala/Tuple4;
       256: areturn
      Exception table:
         from    to  target type
             2   244   249   any
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess, top, top, class java/util/concurrent/LinkedBlockingQueue ]
          stack = [ class scala/sys/process/ProcessImpl$CompoundProcess, class scala/sys/process/ProcessImpl$Spawn$, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess, top, top, class java/util/concurrent/LinkedBlockingQueue, top, top, top, class java/lang/String, class scala/runtime/java8/JFunction0$mcV$sp, top, int ]
          stack = [ class scala/sys/process/ProcessImpl$CompoundProcess ]
        frame_type = 255 /* full_frame */
          offset_delta = 156
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess, top, class scala/Tuple3, class java/util/concurrent/LinkedBlockingQueue, class scala/sys/process/ProcessImpl$Spawn$$anon$1, top, top, null, null, null, int, class scala/Tuple2, class scala/runtime/java8/JFunction0$mcV$sp ]
          stack = [ class scala/sys/process/ProcessImpl$CompoundProcess ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess, class scala/Tuple4, class scala/Tuple3, class java/util/concurrent/LinkedBlockingQueue, class scala/sys/process/ProcessImpl$Spawn$$anon$1, class java/lang/Thread, class scala/Function0, null, null, null, int, class scala/Tuple2, class scala/runtime/java8/JFunction0$mcV$sp ]
          stack = [ class scala/sys/process/ProcessImpl$CompoundProcess ]
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess ]
          stack = []
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 99: 0
        line 100: 14
        line 101: 23
        line 27: 44
        line 101: 47
        line 28: 63
        line 29: 75
        line 30: 110
        line 31: 117
        line 32: 122
        line 101: 122
        line 115: 135
        line 117: 139
        line 118: 155
        line 99: 176
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23     152     3  code   Ljava/util/concurrent/LinkedBlockingQueue;
          135      40     4 thread   Ljava/lang/Thread;
          191      29     5 futureThread   Ljava/lang/Thread;
          201      19     6 futureValue   Lscala/Function0;
            0     257     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
           75      47     9 apply_thread   Ljava/lang/Thread;
           63      59     7 apply_prefix   Ljava/lang/String;
           63      59     8 apply_f   Lscala/Function0;
    Signature: #104                         // ()Lscala/Tuple4<Ljava/lang/Thread;Ljava/lang/Thread;Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;>;

  private scala.Tuple4 x$4();
    descriptor: ()Lscala/Tuple4;
    flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     16
        11: aload_0
        12: invokespecial #234                // Method x$4$lzycompute:()Lscala/Tuple4;
        15: areturn
        16: aload_0
        17: getfield      #220                // Field x$4:Lscala/Tuple4;
        20: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  private java.lang.Thread processThread$lzycompute();
    descriptor: ()Ljava/lang/Thread;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: monitorenter
         2: aload_0
         3: getfield      #106                // Field bitmap$0:B
         6: iconst_2
         7: iand
         8: i2b
         9: iconst_0
        10: if_icmpne     38
        13: aload_0
        14: aload_0
        15: invokespecial #237                // Method x$4:()Lscala/Tuple4;
        18: invokevirtual #238                // Method scala/Tuple4._1:()Ljava/lang/Object;
        21: checkcast     #44                 // class java/lang/Thread
        24: putfield      #240                // Field processThread:Ljava/lang/Thread;
        27: aload_0
        28: aload_0
        29: getfield      #106                // Field bitmap$0:B
        32: iconst_2
        33: ior
        34: i2b
        35: putfield      #106                // Field bitmap$0:B
        38: aload_0
        39: monitorexit
        40: goto          46
        43: aload_0
        44: monitorexit
        45: athrow
        46: aload_0
        47: getfield      #240                // Field processThread:Ljava/lang/Thread;
        50: areturn
      Exception table:
         from    to  target type
             2    38    43   any
      StackMapTable: number_of_entries = 3
        frame_type = 38 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  public java.lang.Thread processThread();
    descriptor: ()Ljava/lang/Thread;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     16
        11: aload_0
        12: invokespecial #242                // Method processThread$lzycompute:()Ljava/lang/Thread;
        15: areturn
        16: aload_0
        17: getfield      #240                // Field processThread:Ljava/lang/Thread;
        20: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  private java.lang.Thread futureThread$lzycompute();
    descriptor: ()Ljava/lang/Thread;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: monitorenter
         2: aload_0
         3: getfield      #106                // Field bitmap$0:B
         6: iconst_4
         7: iand
         8: i2b
         9: iconst_0
        10: if_icmpne     38
        13: aload_0
        14: aload_0
        15: invokespecial #237                // Method x$4:()Lscala/Tuple4;
        18: invokevirtual #244                // Method scala/Tuple4._2:()Ljava/lang/Object;
        21: checkcast     #44                 // class java/lang/Thread
        24: putfield      #246                // Field futureThread:Ljava/lang/Thread;
        27: aload_0
        28: aload_0
        29: getfield      #106                // Field bitmap$0:B
        32: iconst_4
        33: ior
        34: i2b
        35: putfield      #106                // Field bitmap$0:B
        38: aload_0
        39: monitorexit
        40: goto          46
        43: aload_0
        44: monitorexit
        45: athrow
        46: aload_0
        47: getfield      #246                // Field futureThread:Ljava/lang/Thread;
        50: areturn
      Exception table:
         from    to  target type
             2    38    43   any
      StackMapTable: number_of_entries = 3
        frame_type = 38 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  public java.lang.Thread futureThread();
    descriptor: ()Ljava/lang/Thread;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field bitmap$0:B
         4: iconst_4
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     16
        11: aload_0
        12: invokespecial #248                // Method futureThread$lzycompute:()Ljava/lang/Thread;
        15: areturn
        16: aload_0
        17: getfield      #246                // Field futureThread:Ljava/lang/Thread;
        20: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  private scala.Function0<scala.Option<java.lang.Object>> futureValue$lzycompute();
    descriptor: ()Lscala/Function0;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: monitorenter
         2: aload_0
         3: getfield      #106                // Field bitmap$0:B
         6: bipush        8
         8: iand
         9: i2b
        10: iconst_0
        11: if_icmpne     40
        14: aload_0
        15: aload_0
        16: invokespecial #237                // Method x$4:()Lscala/Tuple4;
        19: invokevirtual #253                // Method scala/Tuple4._3:()Ljava/lang/Object;
        22: checkcast     #55                 // class scala/Function0
        25: putfield      #255                // Field futureValue:Lscala/Function0;
        28: aload_0
        29: aload_0
        30: getfield      #106                // Field bitmap$0:B
        33: bipush        8
        35: ior
        36: i2b
        37: putfield      #106                // Field bitmap$0:B
        40: aload_0
        41: monitorexit
        42: goto          48
        45: aload_0
        46: monitorexit
        47: athrow
        48: aload_0
        49: getfield      #255                // Field futureValue:Lscala/Function0;
        52: areturn
      Exception table:
         from    to  target type
             2    40    45   any
      StackMapTable: number_of_entries = 3
        frame_type = 40 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
    Signature: #250                         // ()Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;

  public scala.Function0<scala.Option<java.lang.Object>> futureValue();
    descriptor: ()Lscala/Function0;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field bitmap$0:B
         4: bipush        8
         6: iand
         7: i2b
         8: iconst_0
         9: if_icmpne     17
        12: aload_0
        13: invokespecial #257                // Method futureValue$lzycompute:()Lscala/Function0;
        16: areturn
        17: aload_0
        18: getfield      #255                // Field futureValue:Lscala/Function0;
        21: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
    Signature: #250                         // ()Lscala/Function0<Lscala/Option<Ljava/lang/Object;>;>;

  private scala.Function0<scala.runtime.BoxedUnit> destroyer$lzycompute();
    descriptor: ()Lscala/Function0;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: monitorenter
         2: aload_0
         3: getfield      #106                // Field bitmap$0:B
         6: bipush        16
         8: iand
         9: i2b
        10: iconst_0
        11: if_icmpne     40
        14: aload_0
        15: aload_0
        16: invokespecial #237                // Method x$4:()Lscala/Tuple4;
        19: invokevirtual #262                // Method scala/Tuple4._4:()Ljava/lang/Object;
        22: checkcast     #55                 // class scala/Function0
        25: putfield      #264                // Field destroyer:Lscala/Function0;
        28: aload_0
        29: aload_0
        30: getfield      #106                // Field bitmap$0:B
        33: bipush        16
        35: ior
        36: i2b
        37: putfield      #106                // Field bitmap$0:B
        40: aload_0
        41: monitorexit
        42: goto          48
        45: aload_0
        46: monitorexit
        47: athrow
        48: aload_0
        49: getfield      #264                // Field destroyer:Lscala/Function0;
        52: areturn
      Exception table:
         from    to  target type
             2    40    45   any
      StackMapTable: number_of_entries = 3
        frame_type = 40 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
    Signature: #259                         // ()Lscala/Function0<Lscala/runtime/BoxedUnit;>;

  public scala.Function0<scala.runtime.BoxedUnit> destroyer();
    descriptor: ()Lscala/Function0;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field bitmap$0:B
         4: bipush        16
         6: iand
         7: i2b
         8: iconst_0
         9: if_icmpne     17
        12: aload_0
        13: invokespecial #266                // Method destroyer$lzycompute:()Lscala/Function0;
        16: areturn
        17: aload_0
        18: getfield      #264                // Field destroyer:Lscala/Function0;
        21: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
    Signature: #259                         // ()Lscala/Function0<Lscala/runtime/BoxedUnit;>;

  public abstract scala.Option<java.lang.Object> runAndExitValue();
    descriptor: ()Lscala/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #268                         // ()Lscala/Option<Ljava/lang/Object;>;

  public <T extends java.lang.Object> scala.Option<T> runInterruptible(scala.Function0<T>, scala.Function0<scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function0;Lscala/Function0;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=3
         0: new           #275                // class scala/Some
         3: dup
         4: aload_1
         5: invokeinterface #66,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: invokespecial #276                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        13: areturn
        14: astore_3
        15: getstatic     #281                // Field scala/sys/process/processInternal$.MODULE$:Lscala/sys/process/processInternal$;
        18: pop
        19: aload_2
        20: invokedynamic #291,  0            // InvokeDynamic #3:apply:(Lscala/Function0;)Lscala/Function0;
        25: astore        5
        27: new           #24                 // class scala/sys/process/processInternal$$anonfun$onInterrupt$1
        30: dup
        31: aload         5
        33: invokespecial #294                // Method scala/sys/process/processInternal$$anonfun$onInterrupt$1."<init>":(Lscala/Function0;)V
        36: aconst_null
        37: astore        5
        39: astore        4
        41: aload         4
        43: aload_3
        44: invokevirtual #298                // Method scala/sys/process/processInternal$$anonfun$onInterrupt$1.isDefinedAt:(Ljava/lang/Throwable;)Z
        47: ifeq          62
        50: aload         4
        52: aload_3
        53: invokeinterface #303,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        58: checkcast     #68                 // class scala/Option
        61: areturn
        62: aload_3
        63: athrow
      Exception table:
         from    to  target type
             0    13    14   Class java/lang/Throwable
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 254 /* append */
          offset_delta = 47
          locals = [ class java/lang/Throwable, class scala/sys/process/processInternal$$anonfun$onInterrupt$1, null ]
      LineNumberTable:
        line 126: 0
        line 127: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           41      23     4 catchExpr$1   Lscala/PartialFunction;
           14      50     3   x$9   Ljava/lang/Throwable;
            0      64     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
            0      64     1 action   Lscala/Function0;
            0      64     2 destroyImpl   Lscala/Function0;
           27       9     5 onInterrupt_handler   Lscala/Function0;
    Signature: #271                         // <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lscala/Option<TT;>;
    MethodParameters:
      Name                           Flags
      action                         final
      destroyImpl                    final

  public scala.sys.process.Process$ scala$sys$process$ProcessImpl$CompoundProcess$$$outer();
    descriptor: ()Lscala/sys/process/Process$;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #312                // Field $outer:Lscala/sys/process/Process$;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;

  public static final scala.runtime.Nothing$ $anonfun$exitValue$1();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #77                 // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
         3: ldc           #79                 // String No exit code: process destroyed.
         5: invokevirtual #318                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
         8: areturn
      LineNumberTable:
        line 96: 0

  public static final void $anonfun$x$4$1(scala.sys.process.ProcessImpl$CompoundProcess, java.util.concurrent.LinkedBlockingQueue);
    descriptor: (Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: getstatic     #325                // Field scala/None$.MODULE$:Lscala/None$;
         3: astore_3
         4: aload_0
         5: invokevirtual #327                // Method runAndExitValue:()Lscala/Option;
         8: astore_3
         9: goto          113
        12: astore        4
        14: aload         4
        16: instanceof    #329                // class java/lang/IndexOutOfBoundsException
        19: ifeq          27
        22: iconst_1
        23: istore_2
        24: goto          81
        27: aload         4
        29: instanceof    #331                // class java/io/IOException
        32: ifeq          40
        35: iconst_1
        36: istore_2
        37: goto          81
        40: aload         4
        42: instanceof    #333                // class java/lang/NullPointerException
        45: ifeq          53
        48: iconst_1
        49: istore_2
        50: goto          81
        53: aload         4
        55: instanceof    #335                // class java/lang/SecurityException
        58: ifeq          66
        61: iconst_1
        62: istore_2
        63: goto          81
        66: aload         4
        68: instanceof    #337                // class java/lang/UnsupportedOperationException
        71: ifeq          79
        74: iconst_1
        75: istore_2
        76: goto          81
        79: iconst_0
        80: istore_2
        81: iload_2
        82: ifeq          100
        85: new           #275                // class scala/Some
        88: dup
        89: iconst_m1
        90: invokestatic  #343                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        93: invokespecial #276                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        96: astore_3
        97: goto          113
       100: aload         4
       102: athrow
       103: astore        5
       105: aload_1
       106: aload_3
       107: invokevirtual #346                // Method java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
       110: aload         5
       112: athrow
       113: aload_1
       114: aload_3
       115: invokevirtual #346                // Method java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
       118: return
      Exception table:
         from    to  target type
             4     9    12   Class java/lang/Throwable
             4   103   103   any
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess, class java/util/concurrent/LinkedBlockingQueue, top, class scala/Option ]
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/Throwable ]
        frame_type = 12 /* same */
        frame_type = 12 /* same */
        frame_type = 12 /* same */
        frame_type = 12 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess, class java/util/concurrent/LinkedBlockingQueue, int, class scala/Option, class java/lang/Throwable ]
          stack = []
        frame_type = 18 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/sys/process/ProcessImpl$CompoundProcess, class java/util/concurrent/LinkedBlockingQueue, top, class scala/Option ]
          stack = [ class java/lang/Throwable ]
        frame_type = 9 /* same */
      LineNumberTable:
        line 102: 0
        line 103: 4
        line 105: 14
        line 106: 27
        line 107: 40
        line 108: 53
        line 109: 66
        line 105: 79
        line 110: 85
        line 103: 100
        line 112: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4     114     3 value   Lscala/Option;
            0     119     0 $this   Lscala/sys/process/ProcessImpl$CompoundProcess;
            0     119     1 code$1   Ljava/util/concurrent/LinkedBlockingQueue;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      code$1                         final

  public static final scala.Option $anonfun$x$4$2(java.util.concurrent.LinkedBlockingQueue);
    descriptor: (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #350                // Method java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
         4: checkcast     #68                 // class scala/Option
         7: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 code$1   Ljava/util/concurrent/LinkedBlockingQueue;
    MethodParameters:
      Name                           Flags
      code$1                         final

  public static final void $anonfun$x$4$3(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #354                // Method java/lang/Thread.interrupt:()V
         4: return
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 thread$1   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      thread$1                       final

  public static final scala.None$ $anonfun$runInterruptible$1(scala.Function0);
    descriptor: (Lscala/Function0;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #58,  1           // InterfaceMethod scala/Function0.apply$mcV$sp:()V
         6: getstatic     #325                // Field scala/None$.MODULE$:Lscala/None$;
         9: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 destroyImpl$1   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      destroyImpl$1                  final

  public scala.sys.process.ProcessImpl$CompoundProcess(scala.sys.process.Process$);
    descriptor: (Lscala/sys/process/Process$;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #358                // Method scala/sys/process/ProcessImpl$BasicProcess."<init>":(Lscala/sys/process/Process$;)V
         5: return
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessImpl$CompoundProcess;
            0       6     1 $outer   Lscala/sys/process/Process$;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #370,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public abstract #13= #4 of #12;         // BasicProcess=class scala/sys/process/ProcessImpl$BasicProcess of class scala/sys/process/ProcessImpl
  public abstract #14= #2 of #12;         // CompoundProcess=class scala/sys/process/ProcessImpl$CompoundProcess of class scala/sys/process/ProcessImpl
  public #17= #16 of #12;                 // Future$=class scala/sys/process/ProcessImpl$Future$ of class scala/sys/process/ProcessImpl
  public #20= #19 of #12;                 // Spawn$=class scala/sys/process/ProcessImpl$Spawn$ of class scala/sys/process/ProcessImpl
  public final #22;                       // class scala/sys/process/ProcessImpl$Spawn$$anon$1
  public final #24;                       // class scala/sys/process/processInternal$$anonfun$onInterrupt$1
SourceFile: "ProcessImpl.scala"
BootstrapMethods:
  0: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #123 ()V
      #128 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$1:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)V
      #123 ()V
      #129 1
  1: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #175 ()Ljava/lang/Object;
      #180 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
      #182 ()Lscala/Option;
      #183 5
      #129 1
      #182 ()Lscala/Option;
  2: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #123 ()V
      #194 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$3:(Ljava/lang/Thread;)V
      #123 ()V
      #129 1
  3: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #175 ()Ljava/lang/Object;
      #286 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$runInterruptible$1:(Lscala/Function0;)Lscala/None$;
      #288 ()Lscala/None$;
      #183 5
      #129 1
      #288 ()Lscala/None$;
  4: #367 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #286 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$runInterruptible$1:(Lscala/Function0;)Lscala/None$;
      #128 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$1:(Lscala/sys/process/ProcessImpl$CompoundProcess;Ljava/util/concurrent/LinkedBlockingQueue;)V
      #180 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
      #194 REF_invokeStatic scala/sys/process/ProcessImpl$CompoundProcess.$anonfun$x$4$3:(Ljava/lang/Thread;)V
  ScalaInlineInfo: length = 0x77 (unknown attribute)
   01 00 00 17 01 39 01 3A 01 01 1A 01 1B 01 00 7C
   00 7D 01 00 B0 00 B1 01 00 BE 00 BF 01 00 52 01
   64 00 00 31 00 32 00 00 22 00 33 00 01 02 00 33
   01 00 3B 00 3C 00 00 1E 00 28 00 00 F3 00 28 01
   00 1F 00 33 00 00 F9 00 33 01 00 26 00 27 00 00
   1C 00 28 00 00 EB 00 28 01 01 0B 00 B5 00 01 0D
   01 0E 00 00 70 00 71 00 00 63 00 32 00 00 19 00
   67 01 00 66 00 67 01
  Scala: length = 0x0 (unknown attribute)

