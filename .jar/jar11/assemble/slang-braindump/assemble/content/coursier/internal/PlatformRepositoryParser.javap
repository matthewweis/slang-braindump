Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/internal/PlatformRepositoryParser.class
  Last modified May 29, 2022; size 11628 bytes
  SHA-256 checksum f0383231f8fcdd36663964d9cdec6f7ce573e2954511e80f4ba054b09e98bda5
  Compiled from "PlatformRepositoryParser.scala"
public abstract class coursier.internal.PlatformRepositoryParser
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // coursier/internal/PlatformRepositoryParser
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 15, attributes: 6
Constant pool:
    #1 = Utf8               coursier/internal/PlatformRepositoryParser
    #2 = Class              #1            // coursier/internal/PlatformRepositoryParser
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               PlatformRepositoryParser.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005i2Q\u0001B\u0003\u0002\u0002)AQ!\u0005\u0001\u0005\u0002IAQ!\u0006\u0001\u0005\u0002YAQ!\u0006\u0001\u0005\u0002M\u0012\u0001\u0004\u00157bi\u001a|\'/\u001c*fa>\u001c\u0018\u000e^8ssB\u000b\'o]3s\u0015\t1q!\u0001\u0005j]R,\'O\\1m\u0015\u0005A\u0011\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M\u0011\u0001a\u0003\t\u0003\u0019=i\u0011!\u0004\u0006\u0002\u001d\u0005)1oY1mC&\u0011\u0001#\u0004\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?)\u0005\u0019\u0002C\u0001\u000b\u0001\u001b\u0005)\u0011A\u0003:fa>\u001c\u0018\u000e^8ssR\u0011q#\r\t\u00051\u0001\u001a3F\u0004\u0002\u001a=9\u0011!$H\u0007\u00027)\u0011A$C\u0001\u0007yI|w\u000e\u001e \n\u00039I!aH\u0007\u0002\u000fA\f7m[1hK&\u0011\u0011E\t\u0002\u0007\u000b&$\b.\u001a:\u000b\u0005}i\u0001C\u0001\u0013)\u001d\t)c\u0005\u0005\u0002\u001b\u001b%\u0011q%D\u0001\u0007!J,G-\u001a4\n\u0005%R#AB*ue&twM\u0003\u0002(\u001bA\u0011AfL\u0007\u0002[)\u0011afB\u0001\u0005G>\u0014X-\u0003\u00021[\tQ!+\u001a9pg&$xN]=\t\u000bI\u0012\u0001\u0019A\u0012\u0002\u000b%t\u0007/\u001e;\u0015\u0007]!T\u0007C\u00033\u0007\u0001\u00071\u0005C\u00037\u0007\u0001\u0007q\'A\u0005nCf\u0014WMR5mKB\u0011A\u0002O\u0005\u0003s5\u0011qAQ8pY\u0016\fg\u000e
    #9 = Utf8               coursier/LocalRepositories$Dangerous$
   #10 = Class              #9            // coursier/LocalRepositories$Dangerous$
   #11 = Utf8               coursier/LocalRepositories
   #12 = Class              #11           // coursier/LocalRepositories
   #13 = Utf8
   #14 = Utf8               coursier/ivy/Pattern$Chunk
   #15 = Class              #14           // coursier/ivy/Pattern$Chunk
   #16 = Utf8               coursier/ivy/Pattern
   #17 = Class              #16           // coursier/ivy/Pattern
   #18 = Utf8               Chunk
   #19 = Utf8               coursier/ivy/Pattern$Chunk$
   #20 = Class              #19           // coursier/ivy/Pattern$Chunk$
   #21 = Utf8               coursier/ivy/Pattern$Chunk$Const
   #22 = Class              #21           // coursier/ivy/Pattern$Chunk$Const
   #23 = Utf8               Const
   #24 = Utf8               coursier/ivy/Pattern$Chunk$Const$
   #25 = Class              #24           // coursier/ivy/Pattern$Chunk$Const$
   #26 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #27 = Class              #26           // java/lang/invoke/MethodHandles$Lookup
   #28 = Utf8               java/lang/invoke/MethodHandles
   #29 = Class              #28           // java/lang/invoke/MethodHandles
   #30 = Utf8               Lookup
   #31 = Utf8               scala/Array$UnapplySeqWrapper
   #32 = Class              #31           // scala/Array$UnapplySeqWrapper
   #33 = Utf8               scala/Array
   #34 = Class              #33           // scala/Array
   #35 = Utf8               UnapplySeqWrapper
   #36 = Utf8               scala/Array$UnapplySeqWrapper$
   #37 = Class              #36           // scala/Array$UnapplySeqWrapper$
   #38 = Utf8               repository
   #39 = Utf8               (Ljava/lang/String;)Lscala/util/Either;
   #40 = Utf8               (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Repository;>;
   #41 = Utf8               input
   #42 = Utf8               (Ljava/lang/String;Z)Lscala/util/Either;
   #43 = NameAndType        #38:#42       // repository:(Ljava/lang/String;Z)Lscala/util/Either;
   #44 = Methodref          #2.#43        // coursier/internal/PlatformRepositoryParser.repository:(Ljava/lang/String;Z)Lscala/util/Either;
   #45 = Utf8               this
   #46 = Utf8               Lcoursier/internal/PlatformRepositoryParser;
   #47 = Utf8               Ljava/lang/String;
   #48 = Utf8               (Ljava/lang/String;Z)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Repository;>;
   #49 = Utf8               maybeFile
   #50 = Utf8               ivy2local
   #51 = String             #50           // ivy2local
   #52 = Utf8               java/lang/String
   #53 = Class              #52           // java/lang/String
   #54 = Utf8               equals
   #55 = Utf8               (Ljava/lang/Object;)Z
   #56 = NameAndType        #54:#55       // equals:(Ljava/lang/Object;)Z
   #57 = Methodref          #4.#56        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #58 = Utf8               ivy2Local
   #59 = String             #58           // ivy2Local
   #60 = Utf8               scala/package$
   #61 = Class              #60           // scala/package$
   #62 = Utf8               MODULE$
   #63 = Utf8               Lscala/package$;
   #64 = NameAndType        #62:#63       // MODULE$:Lscala/package$;
   #65 = Fieldref           #61.#64       // scala/package$.MODULE$:Lscala/package$;
   #66 = Utf8               Right
   #67 = Utf8               ()Lscala/util/Right$;
   #68 = NameAndType        #66:#67       // Right:()Lscala/util/Right$;
   #69 = Methodref          #61.#68       // scala/package$.Right:()Lscala/util/Right$;
   #70 = Utf8               coursier/LocalRepositories$
   #71 = Class              #70           // coursier/LocalRepositories$
   #72 = Utf8               Lcoursier/LocalRepositories$;
   #73 = NameAndType        #62:#72       // MODULE$:Lcoursier/LocalRepositories$;
   #74 = Fieldref           #71.#73       // coursier/LocalRepositories$.MODULE$:Lcoursier/LocalRepositories$;
   #75 = Utf8               ()Lcoursier/ivy/IvyRepository;
   #76 = NameAndType        #58:#75       // ivy2Local:()Lcoursier/ivy/IvyRepository;
   #77 = Methodref          #71.#76       // coursier/LocalRepositories$.ivy2Local:()Lcoursier/ivy/IvyRepository;
   #78 = Utf8               scala/util/Right$
   #79 = Class              #78           // scala/util/Right$
   #80 = Utf8               apply
   #81 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
   #82 = NameAndType        #80:#81       // apply:(Ljava/lang/Object;)Lscala/util/Right;
   #83 = Methodref          #79.#82       // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
   #84 = Utf8               ivy2cache
   #85 = String             #84           // ivy2cache
   #86 = Utf8               ivy2Cache
   #87 = String             #86           // ivy2Cache
   #88 = Utf8               Lcoursier/LocalRepositories$Dangerous$;
   #89 = NameAndType        #62:#88       // MODULE$:Lcoursier/LocalRepositories$Dangerous$;
   #90 = Fieldref           #10.#89       // coursier/LocalRepositories$Dangerous$.MODULE$:Lcoursier/LocalRepositories$Dangerous$;
   #91 = NameAndType        #86:#75       // ivy2Cache:()Lcoursier/ivy/IvyRepository;
   #92 = Methodref          #10.#91       // coursier/LocalRepositories$Dangerous$.ivy2Cache:()Lcoursier/ivy/IvyRepository;
   #93 = Utf8               m2Local
   #94 = String             #93           // m2Local
   #95 = Utf8               m2local
   #96 = String             #95           // m2local
   #97 = Utf8               maven2Local
   #98 = Utf8               ()Lcoursier/maven/MavenRepository;
   #99 = NameAndType        #97:#98       // maven2Local:()Lcoursier/maven/MavenRepository;
  #100 = Methodref          #10.#99       // coursier/LocalRepositories$Dangerous$.maven2Local:()Lcoursier/maven/MavenRepository;
  #101 = Utf8               coursier/internal/SharedRepositoryParser$
  #102 = Class              #101          // coursier/internal/SharedRepositoryParser$
  #103 = Utf8               Lcoursier/internal/SharedRepositoryParser$;
  #104 = NameAndType        #62:#103      // MODULE$:Lcoursier/internal/SharedRepositoryParser$;
  #105 = Fieldref           #102.#104     // coursier/internal/SharedRepositoryParser$.MODULE$:Lcoursier/internal/SharedRepositoryParser$;
  #106 = NameAndType        #38:#39       // repository:(Ljava/lang/String;)Lscala/util/Either;
  #107 = Methodref          #102.#106     // coursier/internal/SharedRepositoryParser$.repository:(Ljava/lang/String;)Lscala/util/Either;
  #108 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #109 = MethodType         #108          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #110 = Utf8               $anonfun$repository$1
  #111 = Utf8               (Lcoursier/core/Repository;)Ljava/lang/String;
  #112 = NameAndType        #110:#111     // $anonfun$repository$1:(Lcoursier/core/Repository;)Ljava/lang/String;
  #113 = Methodref          #2.#112       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$1:(Lcoursier/core/Repository;)Ljava/lang/String;
  #114 = MethodHandle       6:#113        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$1:(Lcoursier/core/Repository;)Ljava/lang/String;
  #115 = MethodType         #111          //  (Lcoursier/core/Repository;)Ljava/lang/String;
  #116 = Integer            5
  #117 = Integer            1
  #118 = Utf8               java/lang/invoke/LambdaMetafactory
  #119 = Class              #118          // java/lang/invoke/LambdaMetafactory
  #120 = Utf8               altMetafactory
  #121 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #122 = NameAndType        #120:#121     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #123 = Methodref          #119.#122     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #124 = MethodHandle       6:#123        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #125 = Utf8               ()Lscala/Function1;
  #126 = NameAndType        #80:#125      // apply:()Lscala/Function1;
  #127 = InvokeDynamic      #0:#126       // #0:apply:()Lscala/Function1;
  #128 = Utf8               scala/util/Either
  #129 = Class              #128          // scala/util/Either
  #130 = Utf8               map
  #131 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #132 = NameAndType        #130:#131     // map:(Lscala/Function1;)Lscala/util/Either;
  #133 = Methodref          #129.#132     // scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
  #134 = Utf8               $anonfun$repository$4
  #135 = NameAndType        #134:#39      // $anonfun$repository$4:(Ljava/lang/String;)Lscala/util/Either;
  #136 = Methodref          #2.#135       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$4:(Ljava/lang/String;)Lscala/util/Either;
  #137 = MethodHandle       6:#136        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$4:(Ljava/lang/String;)Lscala/util/Either;
  #138 = MethodType         #39           //  (Ljava/lang/String;)Lscala/util/Either;
  #139 = InvokeDynamic      #1:#126       // #1:apply:()Lscala/Function1;
  #140 = Utf8               flatMap
  #141 = NameAndType        #140:#131     // flatMap:(Lscala/Function1;)Lscala/util/Either;
  #142 = Methodref          #129.#141     // scala/util/Either.flatMap:(Lscala/Function1;)Lscala/util/Either;
  #143 = Utf8               $anonfun$repository$7
  #144 = Utf8               (Lscala/util/Either;Ljava/net/URL;)Lscala/util/Either;
  #145 = NameAndType        #143:#144     // $anonfun$repository$7:(Lscala/util/Either;Ljava/net/URL;)Lscala/util/Either;
  #146 = Methodref          #2.#145       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$7:(Lscala/util/Either;Ljava/net/URL;)Lscala/util/Either;
  #147 = MethodHandle       6:#146        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$7:(Lscala/util/Either;Ljava/net/URL;)Lscala/util/Either;
  #148 = Utf8               (Ljava/net/URL;)Lscala/util/Either;
  #149 = MethodType         #148          //  (Ljava/net/URL;)Lscala/util/Either;
  #150 = Utf8               (Lscala/util/Either;)Lscala/Function1;
  #151 = NameAndType        #80:#150      // apply:(Lscala/util/Either;)Lscala/Function1;
  #152 = InvokeDynamic      #2:#151       // #2:apply:(Lscala/util/Either;)Lscala/Function1;
  #153 = Utf8               repo
  #154 = Utf8               Lscala/util/Either;
  #155 = Utf8               url
  #156 = Utf8               validatedUrl
  #157 = Utf8               Z
  #158 = Utf8               $anonfun$repository$2
  #159 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Z
  #160 = Utf8               x0$2
  #161 = Utf8               Lcoursier/ivy/Pattern$Chunk;
  #162 = Utf8               $anonfun$repository$3
  #163 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #164 = Utf8               x$1
  #165 = Utf8               string
  #166 = Utf8               ()Ljava/lang/String;
  #167 = NameAndType        #165:#166     // string:()Ljava/lang/String;
  #168 = Methodref          #15.#167      // coursier/ivy/Pattern$Chunk.string:()Ljava/lang/String;
  #169 = Utf8               x0$1
  #170 = Utf8               coursier/maven/MavenRepository
  #171 = Class              #170          // coursier/maven/MavenRepository
  #172 = Utf8               root
  #173 = NameAndType        #172:#166     // root:()Ljava/lang/String;
  #174 = Methodref          #171.#173     // coursier/maven/MavenRepository.root:()Ljava/lang/String;
  #175 = Utf8               coursier/core/Repository
  #176 = Class              #175          // coursier/core/Repository
  #177 = Utf8               coursier/ivy/IvyRepository
  #178 = Class              #177          // coursier/ivy/IvyRepository
  #179 = Utf8               pattern
  #180 = Utf8               ()Lcoursier/ivy/Pattern;
  #181 = NameAndType        #179:#180     // pattern:()Lcoursier/ivy/Pattern;
  #182 = Methodref          #178.#181     // coursier/ivy/IvyRepository.pattern:()Lcoursier/ivy/Pattern;
  #183 = Utf8               chunks
  #184 = Utf8               ()Lscala/collection/immutable/Seq;
  #185 = NameAndType        #183:#184     // chunks:()Lscala/collection/immutable/Seq;
  #186 = Methodref          #17.#185      // coursier/ivy/Pattern.chunks:()Lscala/collection/immutable/Seq;
  #187 = Utf8               $anonfun$repository$2$adapted
  #188 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #189 = NameAndType        #187:#188     // $anonfun$repository$2$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #190 = Methodref          #2.#189       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$2$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #191 = MethodHandle       6:#190        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$2$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #192 = MethodType         #188          //  (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #193 = InvokeDynamic      #3:#126       // #3:apply:()Lscala/Function1;
  #194 = Utf8               scala/collection/immutable/Seq
  #195 = Class              #194          // scala/collection/immutable/Seq
  #196 = Utf8               takeWhile
  #197 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #198 = NameAndType        #196:#197     // takeWhile:(Lscala/Function1;)Ljava/lang/Object;
  #199 = InterfaceMethodref #195.#198     // scala/collection/immutable/Seq.takeWhile:(Lscala/Function1;)Ljava/lang/Object;
  #200 = Utf8               scala/collection/IterableOps
  #201 = Class              #200          // scala/collection/IterableOps
  #202 = NameAndType        #162:#163     // $anonfun$repository$3:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #203 = Methodref          #2.#202       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$3:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #204 = MethodHandle       6:#203        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$3:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #205 = MethodType         #163          //  (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #206 = InvokeDynamic      #4:#126       // #4:apply:()Lscala/Function1;
  #207 = NameAndType        #130:#197     // map:(Lscala/Function1;)Ljava/lang/Object;
  #208 = InterfaceMethodref #201.#207     // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #209 = Utf8               scala/collection/IterableOnceOps
  #210 = Class              #209          // scala/collection/IterableOnceOps
  #211 = Utf8               mkString
  #212 = NameAndType        #211:#166     // mkString:()Ljava/lang/String;
  #213 = InterfaceMethodref #210.#212     // scala/collection/IterableOnceOps.mkString:()Ljava/lang/String;
  #214 = Utf8               scala/sys/package$
  #215 = Class              #214          // scala/sys/package$
  #216 = Utf8               Lscala/sys/package$;
  #217 = NameAndType        #62:#216      // MODULE$:Lscala/sys/package$;
  #218 = Fieldref           #215.#217     // scala/sys/package$.MODULE$:Lscala/sys/package$;
  #219 = Utf8               java/lang/StringBuilder
  #220 = Class              #219          // java/lang/StringBuilder
  #221 = Integer            25
  #222 = Utf8               <init>
  #223 = Utf8               (I)V
  #224 = NameAndType        #222:#223     // "<init>":(I)V
  #225 = Methodref          #220.#224     // java/lang/StringBuilder."<init>":(I)V
  #226 = Utf8               Unrecognized repository:
  #227 = String             #226          // Unrecognized repository:
  #228 = Utf8               append
  #229 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #230 = NameAndType        #228:#229     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #231 = Methodref          #220.#230     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #232 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #233 = NameAndType        #228:#232     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #234 = Methodref          #220.#233     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #235 = Utf8               toString
  #236 = NameAndType        #235:#166     // toString:()Ljava/lang/String;
  #237 = Methodref          #220.#236     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #238 = Utf8               error
  #239 = Utf8               (Ljava/lang/String;)Lscala/runtime/Nothing$;
  #240 = NameAndType        #238:#239     // error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #241 = Methodref          #215.#240     // scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #242 = Utf8               Lcoursier/core/Repository;
  #243 = Utf8               $anonfun$repository$5
  #244 = String             #13           //
  #245 = Utf8               $anonfun$repository$6
  #246 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #247 = Utf8               x$2
  #248 = Integer            3
  #249 = Utf8                (
  #250 = String             #249          //  (
  #251 = Utf8               )
  #252 = String             #251          // )
  #253 = Utf8               url0
  #254 = Utf8               java/net/MalformedURLException
  #255 = Class              #254          // java/net/MalformedURLException
  #256 = Utf8               coursier/cache/CacheUrl$
  #257 = Class              #256          // coursier/cache/CacheUrl$
  #258 = Utf8               Lcoursier/cache/CacheUrl$;
  #259 = NameAndType        #62:#258      // MODULE$:Lcoursier/cache/CacheUrl$;
  #260 = Fieldref           #257.#259     // coursier/cache/CacheUrl$.MODULE$:Lcoursier/cache/CacheUrl$;
  #261 = Utf8               (Ljava/lang/String;)Ljava/net/URL;
  #262 = NameAndType        #155:#261     // url:(Ljava/lang/String;)Ljava/net/URL;
  #263 = Methodref          #257.#262     // coursier/cache/CacheUrl$.url:(Ljava/lang/String;)Ljava/net/URL;
  #264 = Integer            18
  #265 = Utf8               Error parsing URL
  #266 = String             #265          // Error parsing URL
  #267 = Utf8               scala/Option$
  #268 = Class              #267          // scala/Option$
  #269 = Utf8               Lscala/Option$;
  #270 = NameAndType        #62:#269      // MODULE$:Lscala/Option$;
  #271 = Fieldref           #268.#270     // scala/Option$.MODULE$:Lscala/Option$;
  #272 = Utf8               getMessage
  #273 = NameAndType        #272:#166     // getMessage:()Ljava/lang/String;
  #274 = Methodref          #255.#273     // java/net/MalformedURLException.getMessage:()Ljava/lang/String;
  #275 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #276 = NameAndType        #80:#275      // apply:(Ljava/lang/Object;)Lscala/Option;
  #277 = Methodref          #268.#276     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #278 = Utf8               ()Ljava/lang/Object;
  #279 = MethodType         #278          //  ()Ljava/lang/Object;
  #280 = NameAndType        #243:#166     // $anonfun$repository$5:()Ljava/lang/String;
  #281 = Methodref          #2.#280       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$5:()Ljava/lang/String;
  #282 = MethodHandle       6:#281        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$5:()Ljava/lang/String;
  #283 = MethodType         #166          //  ()Ljava/lang/String;
  #284 = Utf8               ()Lscala/Function0;
  #285 = NameAndType        #80:#284      // apply:()Lscala/Function0;
  #286 = InvokeDynamic      #5:#285       // #5:apply:()Lscala/Function0;
  #287 = NameAndType        #245:#246     // $anonfun$repository$6:(Ljava/lang/String;)Ljava/lang/String;
  #288 = Methodref          #2.#287       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$6:(Ljava/lang/String;)Ljava/lang/String;
  #289 = MethodHandle       6:#288        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$6:(Ljava/lang/String;)Ljava/lang/String;
  #290 = MethodType         #246          //  (Ljava/lang/String;)Ljava/lang/String;
  #291 = InvokeDynamic      #6:#126       // #6:apply:()Lscala/Function1;
  #292 = Utf8               scala/Option
  #293 = Class              #292          // scala/Option
  #294 = Utf8               fold
  #295 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #296 = NameAndType        #294:#295     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #297 = Methodref          #293.#296     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #298 = Utf8               scala/collection/StringOps$
  #299 = Class              #298          // scala/collection/StringOps$
  #300 = Utf8               Lscala/collection/StringOps$;
  #301 = NameAndType        #62:#300      // MODULE$:Lscala/collection/StringOps$;
  #302 = Fieldref           #299.#301     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #303 = Utf8               scala/Predef$
  #304 = Class              #303          // scala/Predef$
  #305 = Utf8               Lscala/Predef$;
  #306 = NameAndType        #62:#305      // MODULE$:Lscala/Predef$;
  #307 = Fieldref           #304.#306     // scala/Predef$.MODULE$:Lscala/Predef$;
  #308 = Utf8               augmentString
  #309 = NameAndType        #308:#246     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #310 = Methodref          #304.#309     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #311 = Utf8               java/io/File
  #312 = Class              #311          // java/io/File
  #313 = Utf8               separatorChar
  #314 = Utf8               C
  #315 = NameAndType        #313:#314     // separatorChar:C
  #316 = Fieldref           #312.#315     // java/io/File.separatorChar:C
  #317 = Utf8               contains$extension
  #318 = Utf8               (Ljava/lang/String;C)Z
  #319 = NameAndType        #317:#318     // contains$extension:(Ljava/lang/String;C)Z
  #320 = Methodref          #299.#319     // scala/collection/StringOps$.contains$extension:(Ljava/lang/String;C)Z
  #321 = Utf8               (Ljava/lang/String;)V
  #322 = NameAndType        #222:#321     // "<init>":(Ljava/lang/String;)V
  #323 = Methodref          #312.#322     // java/io/File."<init>":(Ljava/lang/String;)V
  #324 = Utf8               exists
  #325 = Utf8               ()Z
  #326 = NameAndType        #324:#325     // exists:()Z
  #327 = Methodref          #312.#326     // java/io/File.exists:()Z
  #328 = Utf8               isDirectory
  #329 = NameAndType        #328:#325     // isDirectory:()Z
  #330 = Methodref          #312.#329     // java/io/File.isDirectory:()Z
  #331 = Utf8               Left
  #332 = Utf8               ()Lscala/util/Left$;
  #333 = NameAndType        #331:#332     // Left:()Lscala/util/Left$;
  #334 = Methodref          #61.#333      // scala/package$.Left:()Lscala/util/Left$;
  #335 = Integer            22
  #336 = Utf8               , and
  #337 = String             #336          // , and
  #338 = Utf8                not a directory
  #339 = String             #338          //  not a directory
  #340 = Utf8               scala/util/Left$
  #341 = Class              #340          // scala/util/Left$
  #342 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #343 = NameAndType        #80:#342      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #344 = Methodref          #341.#343     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #345 = Utf8               toURI
  #346 = Utf8               ()Ljava/net/URI;
  #347 = NameAndType        #345:#346     // toURI:()Ljava/net/URI;
  #348 = Methodref          #312.#347     // java/io/File.toURI:()Ljava/net/URI;
  #349 = Utf8               java/net/URI
  #350 = Class              #349          // java/net/URI
  #351 = Utf8               toURL
  #352 = Utf8               ()Ljava/net/URL;
  #353 = NameAndType        #351:#352     // toURL:()Ljava/net/URL;
  #354 = Methodref          #350.#353     // java/net/URI.toURL:()Ljava/net/URL;
  #355 = Utf8               f
  #356 = Utf8               Ljava/io/File;
  #357 = Utf8               urlErrorMsg
  #358 = Utf8               e
  #359 = Utf8               Ljava/net/MalformedURLException;
  #360 = Utf8               $anonfun$repository$9
  #361 = Utf8               x0$4
  #362 = Utf8               $anonfun$repository$8
  #363 = Utf8               (Ljava/lang/String;Lcoursier/core/Authentication;Lcoursier/core/Repository;)Lcoursier/core/Repository;
  #364 = Utf8               baseUrl$1
  #365 = Utf8               auth$1
  #366 = Utf8               x0$3
  #367 = Utf8               withRoot
  #368 = Utf8               (Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #369 = NameAndType        #367:#368     // withRoot:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #370 = Methodref          #171.#369     // coursier/maven/MavenRepository.withRoot:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #371 = Utf8               scala/Some
  #372 = Class              #371          // scala/Some
  #373 = Utf8               (Ljava/lang/Object;)V
  #374 = NameAndType        #222:#373     // "<init>":(Ljava/lang/Object;)V
  #375 = Methodref          #372.#374     // scala/Some."<init>":(Ljava/lang/Object;)V
  #376 = Utf8               withAuthentication
  #377 = Utf8               (Lscala/Option;)Lcoursier/maven/MavenRepository;
  #378 = NameAndType        #376:#377     // withAuthentication:(Lscala/Option;)Lcoursier/maven/MavenRepository;
  #379 = Methodref          #171.#378     // coursier/maven/MavenRepository.withAuthentication:(Lscala/Option;)Lcoursier/maven/MavenRepository;
  #380 = Utf8               (Lscala/Option;)Lcoursier/ivy/IvyRepository;
  #381 = NameAndType        #376:#380     // withAuthentication:(Lscala/Option;)Lcoursier/ivy/IvyRepository;
  #382 = Methodref          #178.#381     // coursier/ivy/IvyRepository.withAuthentication:(Lscala/Option;)Lcoursier/ivy/IvyRepository;
  #383 = Utf8               coursier/ivy/Pattern$
  #384 = Class              #383          // coursier/ivy/Pattern$
  #385 = Utf8               Lcoursier/ivy/Pattern$;
  #386 = NameAndType        #62:#385      // MODULE$:Lcoursier/ivy/Pattern$;
  #387 = Fieldref           #384.#386     // coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
  #388 = Utf8               Lcoursier/ivy/Pattern$Chunk$Const$;
  #389 = NameAndType        #62:#388      // MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
  #390 = Fieldref           #25.#389      // coursier/ivy/Pattern$Chunk$Const$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
  #391 = Utf8               (Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
  #392 = NameAndType        #80:#391      // apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
  #393 = Methodref          #25.#392      // coursier/ivy/Pattern$Chunk$Const$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
  #394 = Utf8               $anonfun$repository$9$adapted
  #395 = NameAndType        #394:#188     // $anonfun$repository$9$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #396 = Methodref          #2.#395       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$9$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #397 = MethodHandle       6:#396        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$9$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #398 = InvokeDynamic      #7:#126       // #7:apply:()Lscala/Function1;
  #399 = Utf8               dropWhile
  #400 = NameAndType        #399:#197     // dropWhile:(Lscala/Function1;)Ljava/lang/Object;
  #401 = InterfaceMethodref #195.#400     // scala/collection/immutable/Seq.dropWhile:(Lscala/Function1;)Ljava/lang/Object;
  #402 = Utf8               scala/collection/SeqOps
  #403 = Class              #402          // scala/collection/SeqOps
  #404 = Utf8               $plus$colon
  #405 = NameAndType        #404:#108     // $plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
  #406 = InterfaceMethodref #403.#405     // scala/collection/SeqOps.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
  #407 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
  #408 = NameAndType        #80:#407      // apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
  #409 = Methodref          #384.#408     // coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
  #410 = Utf8               withPattern
  #411 = Utf8               (Lcoursier/ivy/Pattern;)Lcoursier/ivy/IvyRepository;
  #412 = NameAndType        #410:#411     // withPattern:(Lcoursier/ivy/Pattern;)Lcoursier/ivy/IvyRepository;
  #413 = Methodref          #178.#412     // coursier/ivy/IvyRepository.withPattern:(Lcoursier/ivy/Pattern;)Lcoursier/ivy/IvyRepository;
  #414 = Utf8               coursier/core/Authentication
  #415 = Class              #414          // coursier/core/Authentication
  #416 = Utf8               Lcoursier/core/Authentication;
  #417 = Utf8               repo$1
  #418 = Utf8               java/net/URL
  #419 = Class              #418          // java/net/URL
  #420 = Utf8               getUserInfo
  #421 = NameAndType        #420:#166     // getUserInfo:()Ljava/lang/String;
  #422 = Methodref          #419.#421     // java/net/URL.getUserInfo:()Ljava/lang/String;
  #423 = Utf8               scala/None$
  #424 = Class              #423          // scala/None$
  #425 = Utf8               Lscala/None$;
  #426 = NameAndType        #62:#425      // MODULE$:Lscala/None$;
  #427 = Fieldref           #424.#426     // scala/None$.MODULE$:Lscala/None$;
  #428 = Utf8               value
  #429 = NameAndType        #428:#278     // value:()Ljava/lang/Object;
  #430 = Methodref          #372.#429     // scala/Some.value:()Ljava/lang/Object;
  #431 = Utf8               :
  #432 = String             #431          // :
  #433 = Utf8               split
  #434 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;
  #435 = NameAndType        #433:#434     // split:(Ljava/lang/String;I)[Ljava/lang/String;
  #436 = Methodref          #53.#435      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
  #437 = Utf8               scala/Array$
  #438 = Class              #437          // scala/Array$
  #439 = Utf8               Lscala/Array$;
  #440 = NameAndType        #62:#439      // MODULE$:Lscala/Array$;
  #441 = Fieldref           #438.#440     // scala/Array$.MODULE$:Lscala/Array$;
  #442 = Utf8               unapplySeq
  #443 = NameAndType        #442:#108     // unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
  #444 = Methodref          #438.#443     // scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
  #445 = Utf8               Lscala/Array$UnapplySeqWrapper$;
  #446 = NameAndType        #62:#445      // MODULE$:Lscala/Array$UnapplySeqWrapper$;
  #447 = Fieldref           #37.#446      // scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
  #448 = Utf8               isEmpty$extension
  #449 = NameAndType        #448:#55      // isEmpty$extension:(Ljava/lang/Object;)Z
  #450 = Methodref          #37.#449      // scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
  #451 = Utf8               get$extension
  #452 = NameAndType        #451:#108     // get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #453 = Methodref          #37.#452      // scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #454 = Methodref          #32.#374      // scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
  #455 = Utf8               lengthCompare$extension
  #456 = Utf8               (Ljava/lang/Object;I)I
  #457 = NameAndType        #455:#456     // lengthCompare$extension:(Ljava/lang/Object;I)I
  #458 = Methodref          #37.#457      // scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
  #459 = Utf8               apply$extension
  #460 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #461 = NameAndType        #459:#460     // apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #462 = Methodref          #37.#461      // scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #463 = Utf8               getProtocol
  #464 = NameAndType        #463:#166     // getProtocol:()Ljava/lang/String;
  #465 = Methodref          #419.#464     // java/net/URL.getProtocol:()Ljava/lang/String;
  #466 = Utf8               getHost
  #467 = NameAndType        #466:#166     // getHost:()Ljava/lang/String;
  #468 = Methodref          #419.#467     // java/net/URL.getHost:()Ljava/lang/String;
  #469 = Utf8               getPort
  #470 = Utf8               ()I
  #471 = NameAndType        #469:#470     // getPort:()I
  #472 = Methodref          #419.#471     // java/net/URL.getPort:()I
  #473 = Utf8               getFile
  #474 = NameAndType        #473:#166     // getFile:()Ljava/lang/String;
  #475 = Methodref          #419.#474     // java/net/URL.getFile:()Ljava/lang/String;
  #476 = Utf8               (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
  #477 = NameAndType        #222:#476     // "<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
  #478 = Methodref          #419.#477     // java/net/URL."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
  #479 = Methodref          #419.#236     // java/net/URL.toString:()Ljava/lang/String;
  #480 = Utf8               coursier/core/Authentication$
  #481 = Class              #480          // coursier/core/Authentication$
  #482 = Utf8               Lcoursier/core/Authentication$;
  #483 = NameAndType        #62:#482      // MODULE$:Lcoursier/core/Authentication$;
  #484 = Fieldref           #481.#483     // coursier/core/Authentication$.MODULE$:Lcoursier/core/Authentication$;
  #485 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Authentication;
  #486 = NameAndType        #80:#485      // apply:(Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Authentication;
  #487 = Methodref          #481.#486     // coursier/core/Authentication$.apply:(Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Authentication;
  #488 = Utf8               http
  #489 = String             #488          // http
  #490 = Utf8               [Ljava/lang/String;
  #491 = Class              #490          // "[Ljava/lang/String;"
  #492 = Utf8               withHttpsOnly
  #493 = Utf8               (Z)Lcoursier/core/Authentication;
  #494 = NameAndType        #492:#493     // withHttpsOnly:(Z)Lcoursier/core/Authentication;
  #495 = Methodref          #415.#494     // coursier/core/Authentication.withHttpsOnly:(Z)Lcoursier/core/Authentication;
  #496 = NameAndType        #362:#363     // $anonfun$repository$8:(Ljava/lang/String;Lcoursier/core/Authentication;Lcoursier/core/Repository;)Lcoursier/core/Repository;
  #497 = Methodref          #2.#496       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$8:(Ljava/lang/String;Lcoursier/core/Authentication;Lcoursier/core/Repository;)Lcoursier/core/Repository;
  #498 = MethodHandle       6:#497        // REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$8:(Ljava/lang/String;Lcoursier/core/Authentication;Lcoursier/core/Repository;)Lcoursier/core/Repository;
  #499 = Utf8               (Lcoursier/core/Repository;)Lcoursier/core/Repository;
  #500 = MethodType         #499          //  (Lcoursier/core/Repository;)Lcoursier/core/Repository;
  #501 = Utf8               (Ljava/lang/String;Lcoursier/core/Authentication;)Lscala/Function1;
  #502 = NameAndType        #80:#501      // apply:(Ljava/lang/String;Lcoursier/core/Authentication;)Lscala/Function1;
  #503 = InvokeDynamic      #8:#502       // #8:apply:(Ljava/lang/String;Lcoursier/core/Authentication;)Lscala/Function1;
  #504 = Integer            38
  #505 = Utf8               No password found in user info of URL
  #506 = String             #505          // No password found in user info of URL
  #507 = Utf8               scala/MatchError
  #508 = Class              #507          // scala/MatchError
  #509 = Methodref          #508.#374     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #510 = Utf8               baseUrl
  #511 = Utf8               auth
  #512 = Utf8               user
  #513 = Utf8               password
  #514 = Utf8               userInfo
  #515 = Utf8               Ljava/net/URL;
  #516 = Utf8               ()V
  #517 = NameAndType        #222:#516     // "<init>":()V
  #518 = Methodref          #4.#517       // java/lang/Object."<init>":()V
  #519 = NameAndType        #158:#159     // $anonfun$repository$2:(Lcoursier/ivy/Pattern$Chunk;)Z
  #520 = Methodref          #2.#519       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$2:(Lcoursier/ivy/Pattern$Chunk;)Z
  #521 = Utf8               scala/runtime/BoxesRunTime
  #522 = Class              #521          // scala/runtime/BoxesRunTime
  #523 = Utf8               boxToBoolean
  #524 = Utf8               (Z)Ljava/lang/Boolean;
  #525 = NameAndType        #523:#524     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #526 = Methodref          #522.#525     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #527 = NameAndType        #360:#159     // $anonfun$repository$9:(Lcoursier/ivy/Pattern$Chunk;)Z
  #528 = Methodref          #2.#527       // coursier/internal/PlatformRepositoryParser.$anonfun$repository$9:(Lcoursier/ivy/Pattern$Chunk;)Z
  #529 = Utf8               $deserializeLambda$
  #530 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #531 = Utf8               scala/runtime/LambdaDeserialize
  #532 = Class              #531          // scala/runtime/LambdaDeserialize
  #533 = Utf8               bootstrap
  #534 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #535 = NameAndType        #533:#534     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #536 = Methodref          #532.#535     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #537 = MethodHandle       6:#536        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #538 = Utf8               lambdaDeserialize
  #539 = NameAndType        #538:#530     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #540 = InvokeDynamic      #9:#539       // #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #541 = Utf8               Code
  #542 = Utf8               LineNumberTable
  #543 = Utf8               LocalVariableTable
  #544 = Utf8               Signature
  #545 = Utf8               MethodParameters
  #546 = Utf8               StackMapTable
  #547 = Utf8               InnerClasses
  #548 = Utf8               SourceFile
  #549 = Utf8               RuntimeVisibleAnnotations
  #550 = Utf8               BootstrapMethods
  #551 = Utf8               ScalaInlineInfo
  #552 = Utf8               ScalaSig
{
  public scala.util.Either<java.lang.String, coursier.core.Repository> repository(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: invokevirtual #44                 // Method repository:(Ljava/lang/String;Z)Lscala/util/Either;
         6: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/internal/PlatformRepositoryParser;
            0       7     1 input   Ljava/lang/String;
    Signature: #40                          // (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Repository;>;
    MethodParameters:
      Name                           Flags
      input                          final

  public scala.util.Either<java.lang.String, coursier.core.Repository> repository(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=12, args_size=3
         0: aload_1
         1: ldc           #51                 // String ivy2local
         3: astore_3
         4: dup
         5: ifnonnull     16
         8: pop
         9: aload_3
        10: ifnull        49
        13: goto          23
        16: aload_3
        17: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        20: ifne          49
        23: aload_1
        24: ldc           #59                 // String ivy2Local
        26: astore        4
        28: dup
        29: ifnonnull     41
        32: pop
        33: aload         4
        35: ifnull        49
        38: goto          67
        41: aload         4
        43: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        46: ifeq          67
        49: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
        52: invokevirtual #69                 // Method scala/package$.Right:()Lscala/util/Right$;
        55: getstatic     #74                 // Field coursier/LocalRepositories$.MODULE$:Lcoursier/LocalRepositories$;
        58: invokevirtual #77                 // Method coursier/LocalRepositories$.ivy2Local:()Lcoursier/ivy/IvyRepository;
        61: invokevirtual #83                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        64: goto          252
        67: aload_1
        68: ldc           #85                 // String ivy2cache
        70: astore        5
        72: dup
        73: ifnonnull     85
        76: pop
        77: aload         5
        79: ifnull        119
        82: goto          93
        85: aload         5
        87: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifne          119
        93: aload_1
        94: ldc           #87                 // String ivy2Cache
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          137
       111: aload         6
       113: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          137
       119: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       122: invokevirtual #69                 // Method scala/package$.Right:()Lscala/util/Right$;
       125: getstatic     #90                 // Field coursier/LocalRepositories$Dangerous$.MODULE$:Lcoursier/LocalRepositories$Dangerous$;
       128: invokevirtual #92                 // Method coursier/LocalRepositories$Dangerous$.ivy2Cache:()Lcoursier/ivy/IvyRepository;
       131: invokevirtual #83                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       134: goto          252
       137: aload_1
       138: ldc           #94                 // String m2Local
       140: astore        7
       142: dup
       143: ifnonnull     155
       146: pop
       147: aload         7
       149: ifnull        189
       152: goto          163
       155: aload         7
       157: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       160: ifne          189
       163: aload_1
       164: ldc           #96                 // String m2local
       166: astore        8
       168: dup
       169: ifnonnull     181
       172: pop
       173: aload         8
       175: ifnull        189
       178: goto          207
       181: aload         8
       183: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       186: ifeq          207
       189: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       192: invokevirtual #69                 // Method scala/package$.Right:()Lscala/util/Right$;
       195: getstatic     #90                 // Field coursier/LocalRepositories$Dangerous$.MODULE$:Lcoursier/LocalRepositories$Dangerous$;
       198: invokevirtual #100                // Method coursier/LocalRepositories$Dangerous$.maven2Local:()Lcoursier/maven/MavenRepository;
       201: invokevirtual #83                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       204: goto          252
       207: getstatic     #105                // Field coursier/internal/SharedRepositoryParser$.MODULE$:Lcoursier/internal/SharedRepositoryParser$;
       210: aload_1
       211: invokevirtual #107                // Method coursier/internal/SharedRepositoryParser$.repository:(Ljava/lang/String;)Lscala/util/Either;
       214: astore        9
       216: aload         9
       218: invokedynamic #127,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       223: invokevirtual #133                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
       226: astore        10
       228: aload         10
       230: invokedynamic #139,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       235: invokevirtual #142                // Method scala/util/Either.flatMap:(Lscala/Function1;)Lscala/util/Either;
       238: astore        11
       240: aload         11
       242: aload         9
       244: invokedynamic #152,  0            // InvokeDynamic #2:apply:(Lscala/util/Either;)Lscala/Function1;
       249: invokevirtual #142                // Method scala/util/Either.flatMap:(Lscala/Function1;)Lscala/util/Either;
       252: areturn
      StackMapTable: number_of_entries = 16
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class coursier/internal/PlatformRepositoryParser, class java/lang/String, int, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/PlatformRepositoryParser, class java/lang/String, int, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/PlatformRepositoryParser, class java/lang/String, int, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/PlatformRepositoryParser, class java/lang/String, int, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/PlatformRepositoryParser, class java/lang/String, int, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/PlatformRepositoryParser, class java/lang/String, int, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class coursier/internal/PlatformRepositoryParser, class java/lang/String, int, class java/lang/String ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 18: 0
        line 19: 49
        line 20: 67
        line 21: 119
        line 22: 137
        line 23: 189
        line 25: 207
        line 27: 216
        line 40: 228
        line 58: 240
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          216      36     9  repo   Lscala/util/Either;
          228      24    10   url   Lscala/util/Either;
          240      12    11 validatedUrl   Lscala/util/Either;
            0     253     0  this   Lcoursier/internal/PlatformRepositoryParser;
            0     253     1 input   Ljava/lang/String;
            0     253     2 maybeFile   Z
    Signature: #48                          // (Ljava/lang/String;Z)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Repository;>;
    MethodParameters:
      Name                           Flags
      input                          final
      maybeFile                      final

  public static final boolean $anonfun$repository$2(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #22                 // class coursier/ivy/Pattern$Chunk$Const
         6: ifeq          14
         9: iconst_1
        10: istore_1
        11: goto          22
        14: goto          17
        17: iconst_0
        18: istore_1
        19: goto          22
        22: iload_1
        23: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ top, class coursier/ivy/Pattern$Chunk ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/ivy/Pattern$Chunk, int, class coursier/ivy/Pattern$Chunk ]
          stack = []
      LineNumberTable:
        line 32: 0
        line 33: 2
        line 34: 17
        line 32: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  x0$2   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public static final java.lang.String $anonfun$repository$3(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #168                // Method coursier/ivy/Pattern$Chunk.string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.String $anonfun$repository$1(coursier.core.Repository);
    descriptor: (Lcoursier/core/Repository;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #171                // class coursier/maven/MavenRepository
         6: ifeq          22
         9: aload_2
        10: checkcast     #171                // class coursier/maven/MavenRepository
        13: astore_3
        14: aload_3
        15: invokevirtual #174                // Method coursier/maven/MavenRepository.root:()Ljava/lang/String;
        18: astore_1
        19: goto          112
        22: goto          25
        25: aload_2
        26: instanceof    #178                // class coursier/ivy/IvyRepository
        29: ifeq          81
        32: aload_2
        33: checkcast     #178                // class coursier/ivy/IvyRepository
        36: astore        4
        38: aload         4
        40: invokevirtual #182                // Method coursier/ivy/IvyRepository.pattern:()Lcoursier/ivy/Pattern;
        43: invokevirtual #186                // Method coursier/ivy/Pattern.chunks:()Lscala/collection/immutable/Seq;
        46: invokedynamic #193,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        51: invokeinterface #199,  2          // InterfaceMethod scala/collection/immutable/Seq.takeWhile:(Lscala/Function1;)Ljava/lang/Object;
        56: checkcast     #201                // class scala/collection/IterableOps
        59: invokedynamic #206,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        64: invokeinterface #208,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        69: checkcast     #210                // class scala/collection/IterableOnceOps
        72: invokeinterface #213,  1          // InterfaceMethod scala/collection/IterableOnceOps.mkString:()Ljava/lang/String;
        77: astore_1
        78: goto          112
        81: goto          84
        84: getstatic     #218                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        87: new           #220                // class java/lang/StringBuilder
        90: dup
        91: ldc           #221                // int 25
        93: invokespecial #225                // Method java/lang/StringBuilder."<init>":(I)V
        96: ldc           #227                // String Unrecognized repository:
        98: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: aload_2
       102: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       105: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       108: invokevirtual #241                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       111: athrow
       112: aload_1
       113: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 22
          locals = [ top, class coursier/core/Repository ]
        frame_type = 2 /* same */
        frame_type = 55 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class coursier/core/Repository, class java/lang/String, class coursier/core/Repository ]
          stack = []
      LineNumberTable:
        line 27: 0
        line 28: 2
        line 29: 14
        line 28: 22
        line 30: 25
        line 32: 38
        line 35: 59
        line 30: 81
        line 37: 84
        line 27: 112
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     114     0  x0$1   Lcoursier/core/Repository;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final java.lang.String $anonfun$repository$5();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #244                // String
         2: areturn
      LineNumberTable:
        line 45: 0

  public static final java.lang.String $anonfun$repository$6(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #220                // class java/lang/StringBuilder
         3: dup
         4: ldc           #248                // int 3
         6: invokespecial #225                // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #250                // String  (
        11: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        18: ldc           #252                // String )
        20: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final scala.util.Either $anonfun$repository$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=1
         0: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #69                 // Method scala/package$.Right:()Lscala/util/Right$;
         6: getstatic     #260                // Field coursier/cache/CacheUrl$.MODULE$:Lcoursier/cache/CacheUrl$;
         9: aload_0
        10: invokevirtual #263                // Method coursier/cache/CacheUrl$.url:(Ljava/lang/String;)Ljava/net/URL;
        13: invokevirtual #83                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        16: goto          189
        19: astore_1
        20: new           #220                // class java/lang/StringBuilder
        23: dup
        24: ldc_w         #264                // int 18
        27: invokespecial #225                // Method java/lang/StringBuilder."<init>":(I)V
        30: ldc_w         #266                // String Error parsing URL
        33: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: aload_0
        37: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: getstatic     #271                // Field scala/Option$.MODULE$:Lscala/Option$;
        43: aload_1
        44: invokevirtual #274                // Method java/net/MalformedURLException.getMessage:()Ljava/lang/String;
        47: invokevirtual #277                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        50: invokedynamic #286,  0            // InvokeDynamic #5:apply:()Lscala/Function0;
        55: invokedynamic #291,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        60: invokevirtual #297                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        63: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        66: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        69: astore_2
        70: getstatic     #302                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        73: getstatic     #307                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        76: aload_0
        77: invokevirtual #310                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        80: getstatic     #316                // Field java/io/File.separatorChar:C
        83: invokevirtual #320                // Method scala/collection/StringOps$.contains$extension:(Ljava/lang/String;C)Z
        86: ifeq          176
        89: new           #312                // class java/io/File
        92: dup
        93: aload_0
        94: invokespecial #323                // Method java/io/File."<init>":(Ljava/lang/String;)V
        97: astore_3
        98: aload_3
        99: invokevirtual #327                // Method java/io/File.exists:()Z
       102: ifeq          157
       105: aload_3
       106: invokevirtual #330                // Method java/io/File.isDirectory:()Z
       109: ifne          157
       112: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       115: invokevirtual #334                // Method scala/package$.Left:()Lscala/util/Left$;
       118: new           #220                // class java/lang/StringBuilder
       121: dup
       122: ldc_w         #335                // int 22
       125: invokespecial #225                // Method java/lang/StringBuilder."<init>":(I)V
       128: aload_2
       129: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       132: ldc_w         #337                // String , and
       135: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       138: aload_0
       139: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       142: ldc_w         #339                // String  not a directory
       145: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       148: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       151: invokevirtual #344                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       154: goto          173
       157: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       160: invokevirtual #69                 // Method scala/package$.Right:()Lscala/util/Right$;
       163: aload_3
       164: invokevirtual #348                // Method java/io/File.toURI:()Ljava/net/URI;
       167: invokevirtual #354                // Method java/net/URI.toURL:()Ljava/net/URL;
       170: invokevirtual #83                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       173: goto          186
       176: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       179: invokevirtual #334                // Method scala/package$.Left:()Lscala/util/Left$;
       182: aload_2
       183: invokevirtual #344                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       186: goto          189
       189: areturn
      Exception table:
         from    to  target type
             0    16    19   Class java/net/MalformedURLException
      StackMapTable: number_of_entries = 6
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class java/net/MalformedURLException ]
        frame_type = 254 /* append */
          offset_delta = 137
          locals = [ class java/net/MalformedURLException, class java/lang/String, class java/io/File ]
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/lang/String ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 41: 0
        line 45: 20
        line 47: 70
        line 48: 89
        line 49: 98
        line 50: 112
        line 52: 157
        line 54: 176
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           98      75     3     f   Ljava/io/File;
           70     116     2 urlErrorMsg   Ljava/lang/String;
           19     167     1     e   Ljava/net/MalformedURLException;
            0     190     0  url0   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url0                           final

  public static final boolean $anonfun$repository$9(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #22                 // class coursier/ivy/Pattern$Chunk$Const
         6: ifeq          14
         9: iconst_1
        10: istore_1
        11: goto          22
        14: goto          17
        17: iconst_0
        18: istore_1
        19: goto          22
        22: iload_1
        23: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ top, class coursier/ivy/Pattern$Chunk ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/ivy/Pattern$Chunk, int, class coursier/ivy/Pattern$Chunk ]
          stack = []
      LineNumberTable:
        line 81: 0
        line 82: 2
        line 83: 17
        line 81: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  x0$4   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x0$4                           final

  public static final coursier.core.Repository $anonfun$repository$8(java.lang.String, coursier.core.Authentication, coursier.core.Repository);
    descriptor: (Ljava/lang/String;Lcoursier/core/Authentication;Lcoursier/core/Repository;)Lcoursier/core/Repository;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=8, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #171                // class coursier/maven/MavenRepository
         8: ifeq          39
        11: aload         4
        13: checkcast     #171                // class coursier/maven/MavenRepository
        16: astore        5
        18: aload         5
        20: aload_0
        21: invokevirtual #370                // Method coursier/maven/MavenRepository.withRoot:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
        24: new           #372                // class scala/Some
        27: dup
        28: aload_1
        29: invokespecial #375                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        32: invokevirtual #379                // Method coursier/maven/MavenRepository.withAuthentication:(Lscala/Option;)Lcoursier/maven/MavenRepository;
        35: astore_3
        36: goto          155
        39: goto          42
        42: aload         4
        44: instanceof    #178                // class coursier/ivy/IvyRepository
        47: ifeq          123
        50: aload         4
        52: checkcast     #178                // class coursier/ivy/IvyRepository
        55: astore        6
        57: aload         6
        59: new           #372                // class scala/Some
        62: dup
        63: aload_1
        64: invokespecial #375                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        67: invokevirtual #382                // Method coursier/ivy/IvyRepository.withAuthentication:(Lscala/Option;)Lcoursier/ivy/IvyRepository;
        70: getstatic     #387                // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
        73: getstatic     #390                // Field coursier/ivy/Pattern$Chunk$Const$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
        76: aload_0
        77: invokevirtual #393                // Method coursier/ivy/Pattern$Chunk$Const$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
        80: astore        7
        82: aload         6
        84: invokevirtual #182                // Method coursier/ivy/IvyRepository.pattern:()Lcoursier/ivy/Pattern;
        87: invokevirtual #186                // Method coursier/ivy/Pattern.chunks:()Lscala/collection/immutable/Seq;
        90: invokedynamic #398,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        95: invokeinterface #401,  2          // InterfaceMethod scala/collection/immutable/Seq.dropWhile:(Lscala/Function1;)Ljava/lang/Object;
       100: checkcast     #403                // class scala/collection/SeqOps
       103: aload         7
       105: invokeinterface #406,  2          // InterfaceMethod scala/collection/SeqOps.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
       110: checkcast     #195                // class scala/collection/immutable/Seq
       113: invokevirtual #409                // Method coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
       116: invokevirtual #413                // Method coursier/ivy/IvyRepository.withPattern:(Lcoursier/ivy/Pattern;)Lcoursier/ivy/IvyRepository;
       119: astore_3
       120: goto          155
       123: goto          126
       126: getstatic     #218                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
       129: new           #220                // class java/lang/StringBuilder
       132: dup
       133: ldc           #221                // int 25
       135: invokespecial #225                // Method java/lang/StringBuilder."<init>":(I)V
       138: ldc           #227                // String Unrecognized repository:
       140: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       143: aload         4
       145: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       148: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       151: invokevirtual #241                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       154: athrow
       155: aload_3
       156: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 39
          locals = [ top, class coursier/core/Repository ]
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 80
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class java/lang/String, class coursier/core/Authentication, class coursier/core/Repository, class java/lang/Object, class coursier/core/Repository ]
          stack = []
      LineNumberTable:
        line 75: 0
        line 76: 3
        line 77: 18
        line 76: 39
        line 78: 42
        line 79: 57
        line 80: 70
        line 81: 73
        line 78: 123
        line 88: 126
        line 75: 155
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     157     0 baseUrl$1   Ljava/lang/String;
            0     157     1 auth$1   Lcoursier/core/Authentication;
            0     157     2  x0$3   Lcoursier/core/Repository;
    MethodParameters:
      Name                           Flags
      baseUrl$1                      final
      auth$1                         final
      x0$3                           final

  public static final scala.util.Either $anonfun$repository$7(scala.util.Either, java.net.URL);
    descriptor: (Lscala/util/Either;Ljava/net/URL;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=14, args_size=2
         0: getstatic     #271                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_1
         4: invokevirtual #422                // Method java/net/URL.getUserInfo:()Ljava/lang/String;
         7: invokevirtual #277                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        10: astore        4
        12: getstatic     #427                // Field scala/None$.MODULE$:Lscala/None$;
        15: aload         4
        17: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        20: ifeq          28
        23: aload_0
        24: astore_2
        25: goto          325
        28: goto          31
        31: aload         4
        33: instanceof    #372                // class scala/Some
        36: ifeq          312
        39: aload         4
        41: checkcast     #372                // class scala/Some
        44: astore        5
        46: aload         5
        48: invokevirtual #430                // Method scala/Some.value:()Ljava/lang/Object;
        51: checkcast     #53                 // class java/lang/String
        54: astore        6
        56: aload         6
        58: ldc_w         #432                // String :
        61: iconst_2
        62: invokevirtual #436                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
        65: astore        7
        67: aload         7
        69: ifnull        268
        72: getstatic     #441                // Field scala/Array$.MODULE$:Lscala/Array$;
        75: aload         7
        77: invokevirtual #444                // Method scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
        80: astore        8
        82: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        85: aload         8
        87: invokevirtual #450                // Method scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
        90: ifne          265
        93: new           #32                 // class scala/Array$UnapplySeqWrapper
        96: dup
        97: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       100: aload         8
       102: invokevirtual #453                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       105: invokespecial #454                // Method scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
       108: ifnull        265
       111: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       114: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       117: aload         8
       119: invokevirtual #453                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       122: iconst_2
       123: invokevirtual #458                // Method scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
       126: iconst_0
       127: if_icmpne     265
       130: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       133: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       136: aload         8
       138: invokevirtual #453                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       141: iconst_0
       142: invokevirtual #462                // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       145: checkcast     #53                 // class java/lang/String
       148: astore        9
       150: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       153: getstatic     #447                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       156: aload         8
       158: invokevirtual #453                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       161: iconst_1
       162: invokevirtual #462                // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       165: checkcast     #53                 // class java/lang/String
       168: astore        10
       170: new           #419                // class java/net/URL
       173: dup
       174: aload_1
       175: invokevirtual #465                // Method java/net/URL.getProtocol:()Ljava/lang/String;
       178: aload_1
       179: invokevirtual #468                // Method java/net/URL.getHost:()Ljava/lang/String;
       182: aload_1
       183: invokevirtual #472                // Method java/net/URL.getPort:()I
       186: aload_1
       187: invokevirtual #475                // Method java/net/URL.getFile:()Ljava/lang/String;
       190: invokespecial #478                // Method java/net/URL."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
       193: invokevirtual #479                // Method java/net/URL.toString:()Ljava/lang/String;
       196: astore        11
       198: getstatic     #484                // Field coursier/core/Authentication$.MODULE$:Lcoursier/core/Authentication$;
       201: aload         9
       203: aload         10
       205: invokevirtual #487                // Method coursier/core/Authentication$.apply:(Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Authentication;
       208: aload_1
       209: invokevirtual #465                // Method java/net/URL.getProtocol:()Ljava/lang/String;
       212: ldc_w         #489                // String http
       215: astore        13
       217: dup
       218: ifnonnull     230
       221: pop
       222: aload         13
       224: ifnull        242
       227: goto          238
       230: aload         13
       232: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       235: ifne          242
       238: iconst_1
       239: goto          243
       242: iconst_0
       243: invokevirtual #495                // Method coursier/core/Authentication.withHttpsOnly:(Z)Lcoursier/core/Authentication;
       246: astore        12
       248: aload_0
       249: aload         11
       251: aload         12
       253: invokedynamic #503,  0            // InvokeDynamic #8:apply:(Ljava/lang/String;Lcoursier/core/Authentication;)Lscala/Function1;
       258: invokevirtual #133                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
       261: astore_3
       262: goto          307
       265: goto          271
       268: goto          271
       271: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       274: invokevirtual #334                // Method scala/package$.Left:()Lscala/util/Left$;
       277: new           #220                // class java/lang/StringBuilder
       280: dup
       281: ldc_w         #504                // int 38
       284: invokespecial #225                // Method java/lang/StringBuilder."<init>":(I)V
       287: ldc_w         #506                // String No password found in user info of URL
       290: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       293: aload_1
       294: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       297: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       300: invokevirtual #344                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       303: astore_3
       304: goto          307
       307: aload_3
       308: astore_2
       309: goto          325
       312: goto          315
       315: new           #508                // class scala/MatchError
       318: dup
       319: aload         4
       321: invokespecial #509                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       324: athrow
       325: aload_2
       326: areturn
      StackMapTable: number_of_entries = 13
        frame_type = 254 /* append */
          offset_delta = 28
          locals = [ top, top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 198
          locals = [ class scala/util/Either, class java/net/URL, top, top, class scala/Option, class scala/Some, class java/lang/String, class "[Ljava/lang/String;", class java/lang/Object, class java/lang/String, class java/lang/String, class java/lang/String, top, class java/lang/String ]
          stack = [ class coursier/core/Authentication, class java/lang/String ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Authentication ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Authentication ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/util/Either, class java/net/URL, top, top, class scala/Option, class scala/Some, class java/lang/String, class "[Ljava/lang/String;", class java/lang/Object, class java/lang/String, class java/lang/String, class java/lang/String, top, class java/lang/String ]
          stack = [ class coursier/core/Authentication, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/util/Either, class java/net/URL, top, top, class scala/Option, class scala/Some, class java/lang/String, class "[Ljava/lang/String;", class java/lang/Object ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class scala/util/Either, class java/net/URL, top, class scala/util/Either, class scala/Option, class scala/Some, class java/lang/String, class "[Ljava/lang/String;" ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/util/Either, class java/net/URL, top, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/util/Either, class java/net/URL, class scala/util/Either, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 59: 0
        line 60: 12
        line 61: 23
        line 60: 28
        line 62: 31
        line 63: 56
        line 64: 67
        line 65: 170
        line 66: 174
        line 67: 178
        line 68: 182
        line 69: 186
        line 72: 198
        line 73: 208
        line 75: 248
        line 64: 265
        line 92: 271
        line 63: 307
        line 62: 312
        line 59: 315
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          198      63    11 baseUrl   Ljava/lang/String;
          248      13    12  auth   Lcoursier/core/Authentication;
          150     115     9  user   Ljava/lang/String;
          170      95    10 password   Ljava/lang/String;
           56     256     6 userInfo   Ljava/lang/String;
            0     327     0 repo$1   Lscala/util/Either;
            0     327     1   url   Ljava/net/URL;
    MethodParameters:
      Name                           Flags
      repo$1                         final
      url                            final

  public coursier.internal.PlatformRepositoryParser();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #518                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 98: 0
        line 12: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/PlatformRepositoryParser;

  public static final java.lang.Object $anonfun$repository$2$adapted(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #520                // Method $anonfun$repository$2:(Lcoursier/ivy/Pattern$Chunk;)Z
         4: invokestatic  #526                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$2   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public static final java.lang.Object $anonfun$repository$9$adapted(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #528                // Method $anonfun$repository$9:(Lcoursier/ivy/Pattern$Chunk;)Z
         4: invokestatic  #526                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$4   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x0$4                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #540,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #13= #10 of #12;          // =class coursier/LocalRepositories$Dangerous$ of class coursier/LocalRepositories
  public static abstract #18= #15 of #17; // Chunk=class coursier/ivy/Pattern$Chunk of class coursier/ivy/Pattern
  public static #13= #20 of #17;          // =class coursier/ivy/Pattern$Chunk$ of class coursier/ivy/Pattern
  public static final #23= #22 of #20;    // Const=class coursier/ivy/Pattern$Chunk$Const of class coursier/ivy/Pattern$Chunk$
  public static #13= #25 of #20;          // =class coursier/ivy/Pattern$Chunk$Const$ of class coursier/ivy/Pattern$Chunk$
  public static final #30= #27 of #29;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #35= #32 of #34;    // UnapplySeqWrapper=class scala/Array$UnapplySeqWrapper of class scala/Array
  public static #13= #37 of #34;          // =class scala/Array$UnapplySeqWrapper$ of class scala/Array
SourceFile: "PlatformRepositoryParser.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005i2Q\u0001B\u0003\u0002\u0002)AQ!\u0005\u0001\u0005\u0002IAQ!\u0006\u0001\u0005\u0002YAQ!\u0006\u0001\u0005\u0002M\u0012\u0001\u0004\u00157bi\u001a|\'/\u001c*fa>\u001c\u0018\u000e^8ssB\u000b\'o]3s\u0015\t1q!\u0001\u0005j]R,\'O\\1m\u0015\u0005A\u0011\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M\u0011\u0001a\u0003\t\u0003\u0019=i\u0011!\u0004\u0006\u0002\u001d\u0005)1oY1mC&\u0011\u0001#\u0004\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?)\u0005\u0019\u0002C\u0001\u000b\u0001\u001b\u0005)\u0011A\u0003:fa>\u001c\u0018\u000e^8ssR\u0011q#\r\t\u00051\u0001\u001a3F\u0004\u0002\u001a=9\u0011!$H\u0007\u00027)\u0011A$C\u0001\u0007yI|w\u000e\u001e \n\u00039I!aH\u0007\u0002\u000fA\f7m[1hK&\u0011\u0011E\t\u0002\u0007\u000b&$\b.\u001a:\u000b\u0005}i\u0001C\u0001\u0013)\u001d\t)c\u0005\u0005\u0002\u001b\u001b%\u0011q%D\u0001\u0007!J,G-\u001a4\n\u0005%R#AB*ue&twM\u0003\u0002(\u001bA\u0011AfL\u0007\u0002[)\u0011afB\u0001\u0005G>\u0014X-\u0003\u00021[\tQ!+\u001a9pg&$xN]=\t\u000bI\u0012\u0001\u0019A\u0012\u0002\u000b%t\u0007/\u001e;\u0015\u0007]!T\u0007C\u00033\u0007\u0001\u00071\u0005C\u00037\u0007\u0001\u0007q\'A\u0005nCf\u0014WMR5mKB\u0011A\u0002O\u0005\u0003s5\u0011qAQ8pY\u0016\fg\u000e"
    )
BootstrapMethods:
  0: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #114 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$1:(Lcoursier/core/Repository;)Ljava/lang/String;
      #115 (Lcoursier/core/Repository;)Ljava/lang/String;
      #116 5
      #117 1
      #115 (Lcoursier/core/Repository;)Ljava/lang/String;
  1: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #137 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$4:(Ljava/lang/String;)Lscala/util/Either;
      #138 (Ljava/lang/String;)Lscala/util/Either;
      #116 5
      #117 1
      #138 (Ljava/lang/String;)Lscala/util/Either;
  2: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #147 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$7:(Lscala/util/Either;Ljava/net/URL;)Lscala/util/Either;
      #149 (Ljava/net/URL;)Lscala/util/Either;
      #116 5
      #117 1
      #149 (Ljava/net/URL;)Lscala/util/Either;
  3: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #191 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$2$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #192 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #116 5
      #117 1
      #192 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  4: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #204 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$3:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
      #205 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
      #116 5
      #117 1
      #205 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  5: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #279 ()Ljava/lang/Object;
      #282 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$5:()Ljava/lang/String;
      #283 ()Ljava/lang/String;
      #116 5
      #117 1
      #283 ()Ljava/lang/String;
  6: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #289 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$6:(Ljava/lang/String;)Ljava/lang/String;
      #290 (Ljava/lang/String;)Ljava/lang/String;
      #116 5
      #117 1
      #290 (Ljava/lang/String;)Ljava/lang/String;
  7: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #397 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$9$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #192 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #116 5
      #117 1
      #192 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  8: #124 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 (Ljava/lang/Object;)Ljava/lang/Object;
      #498 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$8:(Ljava/lang/String;Lcoursier/core/Authentication;Lcoursier/core/Repository;)Lcoursier/core/Repository;
      #500 (Lcoursier/core/Repository;)Lcoursier/core/Repository;
      #116 5
      #117 1
      #500 (Lcoursier/core/Repository;)Lcoursier/core/Repository;
  9: #537 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #114 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$1:(Lcoursier/core/Repository;)Ljava/lang/String;
      #191 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$2$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #204 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$3:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
      #137 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$4:(Ljava/lang/String;)Lscala/util/Either;
      #282 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$5:()Ljava/lang/String;
      #289 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$6:(Ljava/lang/String;)Ljava/lang/String;
      #147 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$7:(Lscala/util/Either;Ljava/net/URL;)Lscala/util/Either;
      #498 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$8:(Ljava/lang/String;Lcoursier/core/Authentication;Lcoursier/core/Repository;)Lcoursier/core/Repository;
      #397 REF_invokeStatic coursier/internal/PlatformRepositoryParser.$anonfun$repository$9$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 00 00 0E 00 6F 00 70 01 00 A1 00 A2 01 00 BC
   00 BD 01 00 A5 00 A6 01 00 87 00 2A 01 00 F6 00
   A9 01 00 F9 00 FA 01 00 90 00 91 01 01 6E 01 6F
   01 01 6C 00 A2 01 01 8E 00 BD 01 00 DF 02 08 00
   00 29 00 2A 00 00 29 00 2D 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
