Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/ser/std/StdArraySerializers.class
  Last modified May 29, 2022; size 2523 bytes
  SHA-256 checksum 321f0920445953d1c7d149f7ad7cb2cb47d3d293ea080c10cdfa73e7ac127ef0
  Compiled from "StdArraySerializers.java"
public class com.fasterxml.jackson.databind.ser.std.StdArraySerializers
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #33                         // com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  super_class: #34                        // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 2
Constant pool:
    #1 = Methodref          #34.#66       // java/lang/Object."<init>":()V
    #2 = Fieldref           #33.#67       // com/fasterxml/jackson/databind/ser/std/StdArraySerializers._arraySerializers:Ljava/util/HashMap;
    #3 = Methodref          #68.#69       // java/lang/Class.getName:()Ljava/lang/String;
    #4 = Methodref          #6.#70        // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
    #5 = Class              #71           // com/fasterxml/jackson/databind/JsonSerializer
    #6 = Class              #72           // java/util/HashMap
    #7 = Methodref          #6.#66        // java/util/HashMap."<init>":()V
    #8 = Class              #73           // "[Z"
    #9 = Class              #74           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer
   #10 = Methodref          #9.#66        // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer."<init>":()V
   #11 = Methodref          #6.#75        // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #12 = Class              #76           // "[B"
   #13 = Class              #77           // com/fasterxml/jackson/databind/ser/std/ByteArraySerializer
   #14 = Methodref          #13.#66       // com/fasterxml/jackson/databind/ser/std/ByteArraySerializer."<init>":()V
   #15 = Class              #78           // "[C"
   #16 = Class              #79           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer
   #17 = Methodref          #16.#66       // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer."<init>":()V
   #18 = Class              #80           // "[S"
   #19 = Class              #81           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$ShortArraySerializer
   #20 = Methodref          #19.#66       // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$ShortArraySerializer."<init>":()V
   #21 = Class              #82           // "[I"
   #22 = Class              #83           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$IntArraySerializer
   #23 = Methodref          #22.#66       // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$IntArraySerializer."<init>":()V
   #24 = Class              #84           // "[J"
   #25 = Class              #85           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$LongArraySerializer
   #26 = Methodref          #25.#66       // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$LongArraySerializer."<init>":()V
   #27 = Class              #86           // "[F"
   #28 = Class              #87           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer
   #29 = Methodref          #28.#66       // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer."<init>":()V
   #30 = Class              #88           // "[D"
   #31 = Class              #89           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer
   #32 = Methodref          #31.#66       // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer."<init>":()V
   #33 = Class              #90           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers
   #34 = Class              #91           // java/lang/Object
   #35 = Utf8               DoubleArraySerializer
   #36 = Utf8               InnerClasses
   #37 = Utf8               FloatArraySerializer
   #38 = Utf8               LongArraySerializer
   #39 = Utf8               IntArraySerializer
   #40 = Utf8               CharArraySerializer
   #41 = Utf8               ShortArraySerializer
   #42 = Utf8               BooleanArraySerializer
   #43 = Class              #92           // com/fasterxml/jackson/databind/ser/std/StdArraySerializers$TypedPrimitiveArraySerializer
   #44 = Utf8               TypedPrimitiveArraySerializer
   #45 = Utf8               _arraySerializers
   #46 = Utf8               Ljava/util/HashMap;
   #47 = Utf8               Signature
   #48 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;>;
   #49 = Utf8               <init>
   #50 = Utf8               ()V
   #51 = Utf8               Code
   #52 = Utf8               LineNumberTable
   #53 = Utf8               LocalVariableTable
   #54 = Utf8               this
   #55 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers;
   #56 = Utf8               findStandardImpl
   #57 = Utf8               (Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonSerializer;
   #58 = Utf8               cls
   #59 = Utf8               Ljava/lang/Class;
   #60 = Utf8               LocalVariableTypeTable
   #61 = Utf8               Ljava/lang/Class<*>;
   #62 = Utf8               (Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;
   #63 = Utf8               <clinit>
   #64 = Utf8               SourceFile
   #65 = Utf8               StdArraySerializers.java
   #66 = NameAndType        #49:#50       // "<init>":()V
   #67 = NameAndType        #45:#46       // _arraySerializers:Ljava/util/HashMap;
   #68 = Class              #93           // java/lang/Class
   #69 = NameAndType        #94:#95       // getName:()Ljava/lang/String;
   #70 = NameAndType        #96:#97       // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #71 = Utf8               com/fasterxml/jackson/databind/JsonSerializer
   #72 = Utf8               java/util/HashMap
   #73 = Utf8               [Z
   #74 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer
   #75 = NameAndType        #98:#99       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #76 = Utf8               [B
   #77 = Utf8               com/fasterxml/jackson/databind/ser/std/ByteArraySerializer
   #78 = Utf8               [C
   #79 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer
   #80 = Utf8               [S
   #81 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$ShortArraySerializer
   #82 = Utf8               [I
   #83 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$IntArraySerializer
   #84 = Utf8               [J
   #85 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$LongArraySerializer
   #86 = Utf8               [F
   #87 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer
   #88 = Utf8               [D
   #89 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer
   #90 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers
   #91 = Utf8               java/lang/Object
   #92 = Utf8               com/fasterxml/jackson/databind/ser/std/StdArraySerializers$TypedPrimitiveArraySerializer
   #93 = Utf8               java/lang/Class
   #94 = Utf8               getName
   #95 = Utf8               ()Ljava/lang/String;
   #96 = Utf8               get
   #97 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #98 = Utf8               put
   #99 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
{
  protected static final java.util.HashMap<java.lang.String, com.fasterxml.jackson.databind.JsonSerializer<?>> _arraySerializers;
    descriptor: Ljava/util/HashMap;
    flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL
    Signature: #48                          // Ljava/util/HashMap<Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;>;

  protected com.fasterxml.jackson.databind.ser.std.StdArraySerializers();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdArraySerializers;

  public static com.fasterxml.jackson.databind.JsonSerializer<?> findStandardImpl(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonSerializer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
         3: aload_0
         4: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
         7: invokevirtual #4                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #5                  // class com/fasterxml/jackson/databind/JsonSerializer
        13: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   cls   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      14     0   cls   Ljava/lang/Class<*>;
    Signature: #62                          // (Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #6                  // class java/util/HashMap
         3: dup
         4: invokespecial #7                  // Method java/util/HashMap."<init>":()V
         7: putstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
        10: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
        13: ldc           #8                  // class "[Z"
        15: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
        18: new           #9                  // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer
        21: dup
        22: invokespecial #10                 // Method com/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer."<init>":()V
        25: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        28: pop
        29: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
        32: ldc           #12                 // class "[B"
        34: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
        37: new           #13                 // class com/fasterxml/jackson/databind/ser/std/ByteArraySerializer
        40: dup
        41: invokespecial #14                 // Method com/fasterxml/jackson/databind/ser/std/ByteArraySerializer."<init>":()V
        44: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        47: pop
        48: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
        51: ldc           #15                 // class "[C"
        53: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
        56: new           #16                 // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer
        59: dup
        60: invokespecial #17                 // Method com/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer."<init>":()V
        63: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        66: pop
        67: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
        70: ldc           #18                 // class "[S"
        72: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
        75: new           #19                 // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$ShortArraySerializer
        78: dup
        79: invokespecial #20                 // Method com/fasterxml/jackson/databind/ser/std/StdArraySerializers$ShortArraySerializer."<init>":()V
        82: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        85: pop
        86: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
        89: ldc           #21                 // class "[I"
        91: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
        94: new           #22                 // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$IntArraySerializer
        97: dup
        98: invokespecial #23                 // Method com/fasterxml/jackson/databind/ser/std/StdArraySerializers$IntArraySerializer."<init>":()V
       101: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       104: pop
       105: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
       108: ldc           #24                 // class "[J"
       110: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       113: new           #25                 // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$LongArraySerializer
       116: dup
       117: invokespecial #26                 // Method com/fasterxml/jackson/databind/ser/std/StdArraySerializers$LongArraySerializer."<init>":()V
       120: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       123: pop
       124: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
       127: ldc           #27                 // class "[F"
       129: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       132: new           #28                 // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer
       135: dup
       136: invokespecial #29                 // Method com/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer."<init>":()V
       139: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       142: pop
       143: getstatic     #2                  // Field _arraySerializers:Ljava/util/HashMap;
       146: ldc           #30                 // class "[D"
       148: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       151: new           #31                 // class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer
       154: dup
       155: invokespecial #32                 // Method com/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer."<init>":()V
       158: invokevirtual #11                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       161: pop
       162: return
      LineNumberTable:
        line 25: 0
        line 29: 10
        line 30: 29
        line 31: 48
        line 32: 67
        line 33: 86
        line 34: 105
        line 35: 124
        line 36: 143
        line 37: 162
}
SourceFile: "StdArraySerializers.java"
InnerClasses:
  public static #35= #31 of #33;          // DoubleArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$DoubleArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  public static #37= #28 of #33;          // FloatArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$FloatArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  public static #38= #25 of #33;          // LongArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$LongArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  public static #39= #22 of #33;          // IntArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$IntArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  public static #40= #16 of #33;          // CharArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$CharArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  public static #41= #19 of #33;          // ShortArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$ShortArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  public static #42= #9 of #33;           // BooleanArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$BooleanArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
  protected static abstract #44= #43 of #33; // TypedPrimitiveArraySerializer=class com/fasterxml/jackson/databind/ser/std/StdArraySerializers$TypedPrimitiveArraySerializer of class com/fasterxml/jackson/databind/ser/std/StdArraySerializers
