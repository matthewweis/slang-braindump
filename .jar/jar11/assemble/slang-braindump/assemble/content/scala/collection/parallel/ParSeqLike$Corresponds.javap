Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParSeqLike$Corresponds.class
  Last modified May 29, 2022; size 9801 bytes
  SHA-256 checksum f45b1c9091d03efa827fd96b30cc88f80552151cc1d1e56e3677292f8299ae58
  Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$Corresponds<S extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeAccessor<java.lang.Object, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.Corresponds<S>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParSeqLike$Corresponds
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 33, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParSeqLike$Corresponds
    #2 = Class              #1            // scala/collection/parallel/ParSeqLike$Corresponds
    #3 = Utf8               <S:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeAccessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Corresponds<TS;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParSeqLike$ParSeqLikeAccessor
    #7 = Class              #6            // scala/collection/parallel/ParSeqLike$ParSeqLikeAccessor
    #8 = Utf8               ParSeqLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #20 = Class              #19           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #21 = Utf8               StrictSplitterCheckTask
   #22 = Utf8               scala/collection/parallel/ParSeqLike
   #23 = Class              #22           // scala/collection/parallel/ParSeqLike
   #24 = Utf8               Corresponds
   #25 = Utf8               ParSeqLikeAccessor
   #26 = Utf8               corr
   #27 = Utf8               Lscala/Function2;
   #28 = Utf8               Lscala/Function2<TT;TS;Ljava/lang/Object;>;
   #29 = Utf8               pit
   #30 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #31 = Utf8               Lscala/collection/parallel/SeqSplitter<TT;>;
   #32 = Utf8               otherpit
   #33 = Utf8               Lscala/collection/parallel/SeqSplitter<TS;>;
   #34 = Utf8               result
   #35 = Utf8               Z
   #36 = Utf8               throwable
   #37 = Utf8               Ljava/lang/Throwable;
   #38 = Utf8               $outer
   #39 = Utf8               Lscala/collection/parallel/ParSeqLike;
   #40 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #41 = Utf8               ()Ljava/lang/String;
   #42 = Utf8               toString
   #43 = NameAndType        #42:#41       // toString:()Ljava/lang/String;
   #44 = Methodref          #5.#43        // java/lang/Object.toString:()Ljava/lang/String;
   #45 = Utf8               this
   #46 = Utf8               Lscala/collection/parallel/ParSeqLike$Corresponds;
   #47 = Utf8               shouldSplitFurther
   #48 = Utf8               ()Z
   #49 = Utf8               shouldSplitFurther$
   #50 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #51 = NameAndType        #49:#50       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #52 = InterfaceMethodref #15.#51       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #53 = Utf8               signalAbort
   #54 = Utf8               ()V
   #55 = Utf8               signalAbort$
   #56 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #57 = NameAndType        #55:#56       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #58 = InterfaceMethodref #15.#57       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #59 = Utf8               toString$
   #60 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #61 = NameAndType        #59:#60       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #62 = InterfaceMethodref #15.#61       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #63 = Utf8               repr
   #64 = Utf8               ()Ljava/lang/Object;
   #65 = Utf8               scala/collection/parallel/Task
   #66 = Class              #65           // scala/collection/parallel/Task
   #67 = Utf8               repr$
   #68 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #69 = NameAndType        #67:#68       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #70 = InterfaceMethodref #66.#69       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #71 = Utf8               forwardThrowable
   #72 = Utf8               forwardThrowable$
   #73 = Utf8               (Lscala/collection/parallel/Task;)V
   #74 = NameAndType        #72:#73       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #75 = InterfaceMethodref #66.#74       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #76 = Utf8               tryLeaf
   #77 = Utf8               (Lscala/Option;)V
   #78 = Utf8               (Lscala/Option<Ljava/lang/Object;>;)V
   #79 = Utf8               lastres
   #80 = Utf8               tryLeaf$
   #81 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #82 = NameAndType        #80:#81       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #83 = InterfaceMethodref #66.#82       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #84 = Utf8               Lscala/Option;
   #85 = Utf8               tryMerge
   #86 = Utf8               (Ljava/lang/Object;)V
   #87 = Utf8               t
   #88 = Utf8               tryMerge$
   #89 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #90 = NameAndType        #88:#89       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #91 = InterfaceMethodref #66.#90       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #92 = Utf8               Ljava/lang/Object;
   #93 = Utf8               mergeThrowables
   #94 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #95 = Utf8               that
   #96 = Utf8               mergeThrowables$
   #97 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #98 = NameAndType        #96:#97       // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #99 = InterfaceMethodref #66.#98       // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #100 = Utf8               Lscala/collection/parallel/Task;
  #101 = Utf8               ()Ljava/lang/Throwable;
  #102 = NameAndType        #36:#37       // throwable:Ljava/lang/Throwable;
  #103 = Fieldref           #2.#102       // scala/collection/parallel/ParSeqLike$Corresponds.throwable:Ljava/lang/Throwable;
  #104 = Utf8               throwable_$eq
  #105 = Utf8               (Ljava/lang/Throwable;)V
  #106 = Utf8               x$1
  #107 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
  #108 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TT;>;
  #109 = NameAndType        #29:#30       // pit:Lscala/collection/parallel/SeqSplitter;
  #110 = Fieldref           #2.#109       // scala/collection/parallel/ParSeqLike$Corresponds.pit:Lscala/collection/parallel/SeqSplitter;
  #111 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TS;>;
  #112 = NameAndType        #32:#30       // otherpit:Lscala/collection/parallel/SeqSplitter;
  #113 = Fieldref           #2.#112       // scala/collection/parallel/ParSeqLike$Corresponds.otherpit:Lscala/collection/parallel/SeqSplitter;
  #114 = NameAndType        #34:#35       // result:Z
  #115 = Fieldref           #2.#114       // scala/collection/parallel/ParSeqLike$Corresponds.result:Z
  #116 = Utf8               result_$eq
  #117 = Utf8               (Z)V
  #118 = Utf8               leaf
  #119 = Utf8               prev
  #120 = NameAndType        #29:#107      // pit:()Lscala/collection/parallel/SeqSplitter;
  #121 = Methodref          #2.#120       // scala/collection/parallel/ParSeqLike$Corresponds.pit:()Lscala/collection/parallel/SeqSplitter;
  #122 = Utf8               scala/collection/parallel/SeqSplitter
  #123 = Class              #122          // scala/collection/parallel/SeqSplitter
  #124 = Utf8               isAborted
  #125 = NameAndType        #124:#48      // isAborted:()Z
  #126 = InterfaceMethodref #123.#125     // scala/collection/parallel/SeqSplitter.isAborted:()Z
  #127 = NameAndType        #26:#27       // corr:Lscala/Function2;
  #128 = Fieldref           #2.#127       // scala/collection/parallel/ParSeqLike$Corresponds.corr:Lscala/Function2;
  #129 = NameAndType        #32:#107      // otherpit:()Lscala/collection/parallel/SeqSplitter;
  #130 = Methodref          #2.#129       // scala/collection/parallel/ParSeqLike$Corresponds.otherpit:()Lscala/collection/parallel/SeqSplitter;
  #131 = Utf8               corresponds
  #132 = Utf8               (Lscala/Function2;Lscala/collection/Iterator;)Z
  #133 = NameAndType        #131:#132     // corresponds:(Lscala/Function2;Lscala/collection/Iterator;)Z
  #134 = InterfaceMethodref #123.#133     // scala/collection/parallel/SeqSplitter.corresponds:(Lscala/Function2;Lscala/collection/Iterator;)Z
  #135 = NameAndType        #116:#117     // result_$eq:(Z)V
  #136 = Methodref          #2.#135       // scala/collection/parallel/ParSeqLike$Corresponds.result_$eq:(Z)V
  #137 = NameAndType        #34:#48       // result:()Z
  #138 = Methodref          #2.#137       // scala/collection/parallel/ParSeqLike$Corresponds.result:()Z
  #139 = Utf8               abort
  #140 = NameAndType        #139:#54      // abort:()V
  #141 = InterfaceMethodref #123.#140     // scala/collection/parallel/SeqSplitter.abort:()V
  #142 = Utf8               newSubtask
  #143 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #144 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #145 = Utf8               p
  #146 = Utf8               java/lang/UnsupportedOperationException
  #147 = Class              #146          // java/lang/UnsupportedOperationException
  #148 = Utf8               <init>
  #149 = NameAndType        #148:#54      // "<init>":()V
  #150 = Methodref          #147.#149     // java/lang/UnsupportedOperationException."<init>":()V
  #151 = Utf8               Lscala/collection/parallel/IterableSplitter;
  #152 = Utf8               split
  #153 = Utf8               ()Lscala/collection/immutable/Seq;
  #154 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Corresponds<TS;>;>;>;
  #155 = Utf8               remaining
  #156 = Utf8               ()I
  #157 = NameAndType        #155:#156     // remaining:()I
  #158 = InterfaceMethodref #123.#157     // scala/collection/parallel/SeqSplitter.remaining:()I
  #159 = Utf8               scala/runtime/ScalaRunTime$
  #160 = Class              #159          // scala/runtime/ScalaRunTime$
  #161 = Utf8               MODULE$
  #162 = Utf8               Lscala/runtime/ScalaRunTime$;
  #163 = NameAndType        #161:#162     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #164 = Fieldref           #160.#163     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #165 = Utf8               wrapIntArray
  #166 = Utf8               ([I)Lscala/collection/immutable/ArraySeq;
  #167 = NameAndType        #165:#166     // wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
  #168 = Methodref          #160.#167     // scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
  #169 = Utf8               psplitWithSignalling
  #170 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #171 = NameAndType        #169:#170     // psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #172 = InterfaceMethodref #123.#171     // scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #173 = Utf8               scala/collection/immutable/Seq
  #174 = Class              #173          // scala/collection/immutable/Seq
  #175 = Utf8               zip
  #176 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #177 = NameAndType        #175:#176     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #178 = InterfaceMethodref #174.#177     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #179 = Utf8               scala/collection/IterableOps
  #180 = Class              #179          // scala/collection/IterableOps
  #181 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #182 = MethodType         #181          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #183 = Utf8               $anonfun$split$15$adapted
  #184 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #185 = NameAndType        #183:#184     // $anonfun$split$15$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #186 = Methodref          #2.#185       // scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$15$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #187 = MethodHandle       6:#186        // REF_invokeStatic scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$15$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #188 = MethodType         #184          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #189 = Integer            5
  #190 = Integer            1
  #191 = Utf8               java/lang/invoke/LambdaMetafactory
  #192 = Class              #191          // java/lang/invoke/LambdaMetafactory
  #193 = Utf8               altMetafactory
  #194 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #195 = NameAndType        #193:#194     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #196 = Methodref          #192.#195     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #197 = MethodHandle       6:#196        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #198 = Utf8               apply
  #199 = Utf8               ()Lscala/Function1;
  #200 = NameAndType        #198:#199     // apply:()Lscala/Function1;
  #201 = InvokeDynamic      #0:#200       // #0:apply:()Lscala/Function1;
  #202 = Utf8               withFilter
  #203 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #204 = NameAndType        #202:#203     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #205 = InterfaceMethodref #180.#204     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #206 = Utf8               $anonfun$split$16
  #207 = Utf8               (Lscala/collection/parallel/ParSeqLike$Corresponds;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #208 = NameAndType        #206:#207     // $anonfun$split$16:(Lscala/collection/parallel/ParSeqLike$Corresponds;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #209 = Methodref          #2.#208       // scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$16:(Lscala/collection/parallel/ParSeqLike$Corresponds;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #210 = MethodHandle       6:#209        // REF_invokeStatic scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$16:(Lscala/collection/parallel/ParSeqLike$Corresponds;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #211 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #212 = MethodType         #211          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #213 = Utf8               (Lscala/collection/parallel/ParSeqLike$Corresponds;)Lscala/Function1;
  #214 = NameAndType        #198:#213     // apply:(Lscala/collection/parallel/ParSeqLike$Corresponds;)Lscala/Function1;
  #215 = InvokeDynamic      #1:#214       // #1:apply:(Lscala/collection/parallel/ParSeqLike$Corresponds;)Lscala/Function1;
  #216 = Utf8               scala/collection/WithFilter
  #217 = Class              #216          // scala/collection/WithFilter
  #218 = Utf8               map
  #219 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #220 = NameAndType        #218:#219     // map:(Lscala/Function1;)Ljava/lang/Object;
  #221 = Methodref          #217.#220     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #222 = Utf8               fp
  #223 = Utf8               I
  #224 = Utf8               sp
  #225 = Utf8               merge
  #226 = Utf8               (Lscala/collection/parallel/ParSeqLike$Corresponds;)V
  #227 = Utf8               (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Corresponds<TS;>;)V
  #228 = Utf8               requiresStrictSplitters
  #229 = Utf8               scala$collection$parallel$ParSeqLike$Corresponds$$$outer
  #230 = Utf8               ()Lscala/collection/parallel/ParSeqLike;
  #231 = NameAndType        #38:#39       // $outer:Lscala/collection/parallel/ParSeqLike;
  #232 = Fieldref           #2.#231       // scala/collection/parallel/ParSeqLike$Corresponds.$outer:Lscala/collection/parallel/ParSeqLike;
  #233 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #234 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #235 = NameAndType        #229:#230     // scala$collection$parallel$ParSeqLike$Corresponds$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #236 = Methodref          #2.#235       // scala/collection/parallel/ParSeqLike$Corresponds.scala$collection$parallel$ParSeqLike$Corresponds$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #237 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #238 = NameAndType        #225:#226     // merge:(Lscala/collection/parallel/ParSeqLike$Corresponds;)V
  #239 = Methodref          #2.#238       // scala/collection/parallel/ParSeqLike$Corresponds.merge:(Lscala/collection/parallel/ParSeqLike$Corresponds;)V
  #240 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #241 = NameAndType        #142:#143     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #242 = Methodref          #2.#241       // scala/collection/parallel/ParSeqLike$Corresponds.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #243 = Utf8               scala/runtime/BoxesRunTime
  #244 = Class              #243          // scala/runtime/BoxesRunTime
  #245 = Utf8               unboxToBoolean
  #246 = Utf8               (Ljava/lang/Object;)Z
  #247 = NameAndType        #245:#246     // unboxToBoolean:(Ljava/lang/Object;)Z
  #248 = Methodref          #244.#247     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #249 = Utf8               boxToBoolean
  #250 = Utf8               (Z)Ljava/lang/Boolean;
  #251 = NameAndType        #249:#250     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #252 = Methodref          #244.#251     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #253 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #254 = Utf8               $anonfun$split$15
  #255 = Utf8               (Lscala/Tuple2;)Z
  #256 = Utf8               check$ifrefutable$7
  #257 = Utf8               Lscala/Tuple2;
  #258 = Utf8               scala/Tuple2
  #259 = Class              #258          // scala/Tuple2
  #260 = Utf8               $this
  #261 = Utf8               x$32
  #262 = Utf8               _1
  #263 = NameAndType        #262:#64      // _1:()Ljava/lang/Object;
  #264 = Methodref          #259.#263     // scala/Tuple2._1:()Ljava/lang/Object;
  #265 = Utf8               _2
  #266 = NameAndType        #265:#64      // _2:()Ljava/lang/Object;
  #267 = Methodref          #259.#266     // scala/Tuple2._2:()Ljava/lang/Object;
  #268 = Utf8               (Lscala/collection/parallel/ParSeqLike;Lscala/Function2;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #269 = NameAndType        #148:#268     // "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function2;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #270 = Methodref          #2.#269       // scala/collection/parallel/ParSeqLike$Corresponds."<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function2;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #271 = Utf8               scala/MatchError
  #272 = Class              #271          // scala/MatchError
  #273 = NameAndType        #148:#86      // "<init>":(Ljava/lang/Object;)V
  #274 = Methodref          #272.#273     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #275 = Utf8               op
  #276 = Utf8               (Lscala/Function2<TT;TS;Ljava/lang/Object;>;Lscala/collection/parallel/SeqSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
  #277 = Methodref          #5.#149       // java/lang/Object."<init>":()V
  #278 = Utf8               $init$
  #279 = NameAndType        #278:#73      // $init$:(Lscala/collection/parallel/Task;)V
  #280 = InterfaceMethodref #66.#279      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #281 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #282 = NameAndType        #278:#281     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #283 = InterfaceMethodref #20.#282      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #284 = NameAndType        #278:#56      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #285 = InterfaceMethodref #15.#284      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #286 = NameAndType        #254:#255     // $anonfun$split$15:(Lscala/Tuple2;)Z
  #287 = Methodref          #2.#286       // scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$15:(Lscala/Tuple2;)Z
  #288 = Utf8               $deserializeLambda$
  #289 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #290 = Utf8               scala/runtime/LambdaDeserialize
  #291 = Class              #290          // scala/runtime/LambdaDeserialize
  #292 = Utf8               bootstrap
  #293 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #294 = NameAndType        #292:#293     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #295 = Methodref          #291.#294     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #296 = MethodHandle       6:#295        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #297 = Utf8               lambdaDeserialize
  #298 = NameAndType        #297:#289     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #299 = InvokeDynamic      #2:#298       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #300 = Utf8               Signature
  #301 = Utf8               Code
  #302 = Utf8               LineNumberTable
  #303 = Utf8               LocalVariableTable
  #304 = Utf8               MethodParameters
  #305 = Utf8               StackMapTable
  #306 = Utf8               InnerClasses
  #307 = Utf8               SourceFile
  #308 = Utf8               BootstrapMethods
  #309 = Utf8               ScalaInlineInfo
  #310 = Utf8               Scala
{
  private final scala.Function2<T, S, java.lang.Object> corr;
    descriptor: Lscala/Function2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/Function2<TT;TS;Ljava/lang/Object;>;

  private final scala.collection.parallel.SeqSplitter<T> pit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #31                          // Lscala/collection/parallel/SeqSplitter<TT;>;

  private final scala.collection.parallel.SeqSplitter<S> otherpit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #33                          // Lscala/collection/parallel/SeqSplitter<TS;>;

  private volatile boolean result;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParSeqLike $outer;
    descriptor: Lscala/collection/parallel/ParSeqLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #52                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public void tryLeaf(scala.Option<java.lang.Object>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #83                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       6     1 lastres   Lscala/Option;
    Signature: #78                          // (Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #91                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #99                 // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #94                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #103                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #103                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.SeqSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #110                // Field pit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
    Signature: #108                         // ()Lscala/collection/parallel/SeqSplitter<TT;>;

  public scala.collection.parallel.SeqSplitter<S> otherpit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #113                // Field otherpit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
    Signature: #111                         // ()Lscala/collection/parallel/SeqSplitter<TS;>;

  public boolean result();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #115                // Field result:Z
         4: ireturn
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public void result_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #115                // Field result:Z
         5: return
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<java.lang.Object>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #121                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: invokeinterface #126,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.isAborted:()Z
         9: ifne          55
        12: aload_0
        13: aload_0
        14: invokevirtual #121                // Method pit:()Lscala/collection/parallel/SeqSplitter;
        17: aload_0
        18: getfield      #128                // Field corr:Lscala/Function2;
        21: aload_0
        22: invokevirtual #130                // Method otherpit:()Lscala/collection/parallel/SeqSplitter;
        25: invokeinterface #134,  3          // InterfaceMethod scala/collection/parallel/SeqSplitter.corresponds:(Lscala/Function2;Lscala/collection/Iterator;)Z
        30: invokevirtual #136                // Method result_$eq:(Z)V
        33: aload_0
        34: invokevirtual #138                // Method result:()Z
        37: ifne          52
        40: aload_0
        41: invokevirtual #121                // Method pit:()Lscala/collection/parallel/SeqSplitter;
        44: invokeinterface #141,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.abort:()V
        49: goto          52
        52: goto          55
        55: return
      StackMapTable: number_of_entries = 2
        frame_type = 52 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 605: 0
        line 606: 12
        line 607: 33
        line 605: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0      56     1  prev   Lscala/Option;
    Signature: #78                          // (Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #147                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #150                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 609: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #144                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<java.lang.Object, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.Corresponds<S>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #121                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: invokeinterface #158,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
         9: iconst_2
        10: idiv
        11: istore_1
        12: aload_0
        13: invokevirtual #121                // Method pit:()Lscala/collection/parallel/SeqSplitter;
        16: invokeinterface #158,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
        21: iload_1
        22: isub
        23: istore_2
        24: aload_0
        25: invokevirtual #121                // Method pit:()Lscala/collection/parallel/SeqSplitter;
        28: getstatic     #164                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        31: iconst_2
        32: newarray       int
        34: dup
        35: iconst_0
        36: iload_1
        37: iastore
        38: dup
        39: iconst_1
        40: iload_2
        41: iastore
        42: invokevirtual #168                // Method scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
        45: invokeinterface #172,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        50: aload_0
        51: invokevirtual #130                // Method otherpit:()Lscala/collection/parallel/SeqSplitter;
        54: getstatic     #164                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        57: iconst_2
        58: newarray       int
        60: dup
        61: iconst_0
        62: iload_1
        63: iastore
        64: dup
        65: iconst_1
        66: iload_2
        67: iastore
        68: invokevirtual #168                // Method scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
        71: invokeinterface #172,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        76: invokeinterface #178,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        81: checkcast     #180                // class scala/collection/IterableOps
        84: invokedynamic #201,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        89: invokeinterface #205,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        94: aload_0
        95: invokedynamic #215,  0            // InvokeDynamic #1:apply:(Lscala/collection/parallel/ParSeqLike$Corresponds;)Lscala/Function1;
       100: invokevirtual #221                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
       103: checkcast     #174                // class scala/collection/immutable/Seq
       106: areturn
      LineNumberTable:
        line 611: 0
        line 612: 12
        line 613: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      94     1    fp   I
           24      82     2    sp   I
            0     107     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
    Signature: #154                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Corresponds<TS;>;>;>;

  public void merge(scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.Corresponds<S>);
    descriptor: (Lscala/collection/parallel/ParSeqLike$Corresponds;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #138                // Method result:()Z
         5: ifeq          19
         8: aload_1
         9: invokevirtual #138                // Method result:()Z
        12: ifeq          19
        15: iconst_1
        16: goto          20
        19: iconst_0
        20: invokevirtual #136                // Method result_$eq:(Z)V
        23: return
      StackMapTable: number_of_entries = 2
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/ParSeqLike$Corresponds ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/parallel/ParSeqLike$Corresponds, class scala/collection/parallel/ParSeqLike$Corresponds ]
          stack = [ class scala/collection/parallel/ParSeqLike$Corresponds, int ]
      LineNumberTable:
        line 615: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0      24     1  that   Lscala/collection/parallel/ParSeqLike$Corresponds;
    Signature: #227                         // (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Corresponds<TS;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 616: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$Corresponds$$$outer();
    descriptor: ()Lscala/collection/parallel/ParSeqLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #232                // Field $outer:Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #236                // Method scala$collection$parallel$ParSeqLike$Corresponds$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #236                // Method scala$collection$parallel$ParSeqLike$Corresponds$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$Corresponds
         5: invokevirtual #239                // Method merge:(Lscala/collection/parallel/ParSeqLike$Corresponds;)V
         8: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #242                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #248                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         5: invokevirtual #136                // Method result_$eq:(Z)V
         8: return
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method result:()Z
         4: invokestatic  #252                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public scala.collection.parallel.IterableSplitter pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #121                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 602: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;

  public static final boolean $anonfun$split$15(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 613: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$7   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$7            final

  public static final scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$16(scala.collection.parallel.ParSeqLike$Corresponds, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParSeqLike$Corresponds;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        47
         6: aload_3
         7: invokevirtual #264                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #123                // class scala/collection/parallel/SeqSplitter
        13: astore        4
        15: aload_3
        16: invokevirtual #267                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #123                // class scala/collection/parallel/SeqSplitter
        22: astore        5
        24: new           #2                  // class scala/collection/parallel/ParSeqLike$Corresponds
        27: dup
        28: aload_0
        29: invokevirtual #236                // Method scala$collection$parallel$ParSeqLike$Corresponds$$$outer:()Lscala/collection/parallel/ParSeqLike;
        32: aload_0
        33: getfield      #128                // Field corr:Lscala/Function2;
        36: aload         4
        38: aload         5
        40: invokespecial #270                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function2;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
        43: astore_2
        44: goto          59
        47: goto          50
        50: new           #272                // class scala/MatchError
        53: dup
        54: aload_3
        55: invokespecial #274                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        58: athrow
        59: aload_2
        60: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 47
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParSeqLike$Corresponds, class scala/Tuple2, class scala/collection/parallel/ParSeqLike$Corresponds, class scala/Tuple2, class scala/collection/parallel/SeqSplitter, class scala/collection/parallel/SeqSplitter ]
          stack = []
      LineNumberTable:
        line 613: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      32     4     p   Lscala/collection/parallel/SeqSplitter;
           24      23     5    op   Lscala/collection/parallel/SeqSplitter;
            0      61     0 $this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0      61     1  x$32   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$32                           final

  public scala.collection.parallel.ParSeqLike$Corresponds(scala.Function2<T, S, java.lang.Object>, scala.collection.parallel.SeqSplitter<T>, scala.collection.parallel.SeqSplitter<S>);
    descriptor: (Lscala/collection/parallel/ParSeqLike;Lscala/Function2;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_2
         2: putfield      #128                // Field corr:Lscala/Function2;
         5: aload_0
         6: aload_3
         7: putfield      #110                // Field pit:Lscala/collection/parallel/SeqSplitter;
        10: aload_0
        11: aload         4
        13: putfield      #113                // Field otherpit:Lscala/collection/parallel/SeqSplitter;
        16: aload_1
        17: ifnonnull     22
        20: aconst_null
        21: athrow
        22: aload_0
        23: aload_1
        24: putfield      #232                // Field $outer:Lscala/collection/parallel/ParSeqLike;
        27: aload_0
        28: invokespecial #277                // Method java/lang/Object."<init>":()V
        31: aload_0
        32: invokestatic  #280                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        35: aload_0
        36: invokestatic  #283                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        39: aload_0
        40: invokestatic  #285                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        43: aload_0
        44: iconst_1
        45: putfield      #115                // Field result:Z
        48: return
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 602: 0
        line 603: 27
        line 604: 43
        line 602: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/collection/parallel/ParSeqLike$Corresponds;
            0      49     1 $outer   Lscala/collection/parallel/ParSeqLike;
            0      49     2  corr   Lscala/Function2;
            0      49     3   pit   Lscala/collection/parallel/SeqSplitter;
            0      49     4 otherpit   Lscala/collection/parallel/SeqSplitter;
    Signature: #276                         // (Lscala/Function2<TT;TS;Ljava/lang/Object;>;Lscala/collection/parallel/SeqSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      corr                           final
      pit                            final
      otherpit                       final

  public static final java.lang.Object $anonfun$split$15$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #287                // Method $anonfun$split$15:(Lscala/Tuple2;)Z
         4: invokestatic  #252                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 613: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$7   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$7            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #299,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #21= #20 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #24= #2 of #23;                  // Corresponds=class scala/collection/parallel/ParSeqLike$Corresponds of class scala/collection/parallel/ParSeqLike
  public #25= #7 of #23;                  // ParSeqLikeAccessor=class scala/collection/parallel/ParSeqLike$ParSeqLikeAccessor of class scala/collection/parallel/ParSeqLike
Signature: #3                           // <S:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeAccessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Corresponds<TS;>;>;
SourceFile: "ParSeqLike.scala"
BootstrapMethods:
  0: #197 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #182 (Ljava/lang/Object;)Ljava/lang/Object;
      #187 REF_invokeStatic scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$15$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #188 (Lscala/Tuple2;)Ljava/lang/Object;
      #189 5
      #190 1
      #188 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #197 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #182 (Ljava/lang/Object;)Ljava/lang/Object;
      #210 REF_invokeStatic scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$16:(Lscala/collection/parallel/ParSeqLike$Corresponds;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #212 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #189 5
      #190 1
      #212 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  2: #296 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #187 REF_invokeStatic scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$15$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #210 REF_invokeStatic scala/collection/parallel/ParSeqLike$Corresponds.$anonfun$split$16:(Lscala/collection/parallel/ParSeqLike$Corresponds;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0xA4 (unknown attribute)
   01 00 00 20 00 FE 00 FF 01 00 B7 00 B8 01 00 CE
   00 CF 01 00 94 01 0C 00 00 47 00 36 00 00 76 00
   4D 00 00 E1 00 56 00 00 E1 00 E2 00 00 5D 00 49
   00 00 8E 00 F0 00 00 8E 00 8F 00 00 20 00 6B 00
   00 1D 00 FD 00 00 1D 00 6B 00 00 3F 00 40 00 00
   E4 00 30 00 00 22 00 40 00 00 22 00 30 00 00 74
   00 56 00 00 74 00 75 00 00 E9 00 EA 00 00 28 00
   29 01 00 ED 00 EA 00 00 E5 00 E6 00 00 2F 00 30
   00 00 35 00 36 00 00 98 00 99 00 00 24 00 65 00
   00 68 00 69 00 00 2A 00 29 00 00 4C 00 4D 00 00
   55 00 56 00
  Scala: length = 0x0 (unknown attribute)

