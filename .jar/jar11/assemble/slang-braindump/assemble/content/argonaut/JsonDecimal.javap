Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/JsonDecimal.class
  Last modified May 29, 2022; size 9775 bytes
  SHA-256 checksum 6026088916e3bb0308d077e24f7f310dc9e069eac8236d01f89f60a49e0e11a1
  Compiled from "JsonNumber.scala"
public class argonaut.JsonDecimal extends argonaut.JsonNumber implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // argonaut/JsonDecimal
  super_class: #4                         // argonaut/JsonNumber
  interfaces: 2, fields: 3, methods: 21, attributes: 4
Constant pool:
    #1 = Utf8               argonaut/JsonDecimal
    #2 = Class              #1            // argonaut/JsonDecimal
    #3 = Utf8               argonaut/JsonNumber
    #4 = Class              #3            // argonaut/JsonNumber
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               JsonNumber.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005Mc\u0001B\f\u0019\u0001nA\u0001B\r\u0001\u0003\u0016\u0004%\ta\r\u0005\ty\u0001\u0011\t\u0012)A\u0005i!1Q\b\u0001C\u00011yB\u0001\"\u0011\u0001\t\u0006\u0004%\tA\u0011\u0005\u0006\r\u0002!\ta\u0012\u0005\u0006\u001d\u0002!\ta\u0014\u0005\b-\u0002\t\t\u0011\"\u0001X\u0011\u001dI\u0006!%A\u0005\u0002iCq!\u001a\u0001\u0002\u0002\u0013\u0005c\rC\u0004o\u0001\u0005\u0005I\u0011A8\t\u000fM\u0004\u0011\u0011!C\u0001i\"9!\u0010AA\u0001\n\u0003Z\b\"CA\u0003\u0001\u0005\u0005I\u0011AA\u0004\u0011%\t\t\u0002AA\u0001\n\u0003\n\u0019\u0002C\u0005\u0002\u0018\u0001\t\t\u0011\"\u0011\u0002\u001a\u001dI\u00111\u0004\r\u0002\u0002#\u0005\u0011Q\u0004\u0004\t/a\t\t\u0011#\u0001\u0002 !1Q(\u0005C\u0001\u0003oA\u0011\"a\u0006\u0012\u0003\u0003%)%!\u0007\t\u0013\u0005e\u0012#!A\u0005\u0002\u0006m\u0002\"CA #\u0005\u0005I\u0011QA!\u0011%\tI%EA\u0001\n\u0013\tYEA\u0006Kg>tG)Z2j[\u0006d\'\"A\r\u0002\u0011\u0005\u0014xm\u001c8bkR\u001c\u0001a\u0005\u0003\u00019\u00012\u0003CA\u000f\u001f\u001b\u0005A\u0012BA\u0010\u0019\u0005)Q5o\u001c8Ok6\u0014WM\u001d\t\u0003C\u0011j\u0011A\t\u0006\u0002G\u0005)1oY1mC&\u0011QE\t\u0002\b!J|G-^2u!\t9sF\u0004\u0002)[9\u0011\u0011\u0006L\u0007\u0002U)\u00111FG\u0001\u0007yI|w\u000e\u001e \n\u0003\rJ!A\f\u0012\u0002\u000fA\f7m[1hK&\u0011\u0001\'\r\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003]\t\nQA^1mk\u0016,\u0012\u0001\u000e\t\u0003ker!AN\u001c\u0011\u0005%\u0012\u0013B\u0001\u001d#\u0003\u0019\u0001&/\u001a3fM&\u0011!h\u000f\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005a\u0012\u0013A\u0002<bYV,\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0003\u007f\u0001\u0003\"!\b\u0001\t\u000bI\u001a\u0001\u0019\u0001\u001b\u0002\u0019Q|\')[4EK\u000eLW.\u00197\u0016\u0003\r\u0003\"a\n#\n\u0005\u0015\u000b$A\u0003\"jO\u0012+7-[7bY\u00061Ao\u001c\'p]\u001e,\u0012\u0001\u0013\t\u0004C%[\u0015B\u0001&#\u0005\u0019y\u0005\u000f^5p]B\u0011\u0011\u0005T\u0005\u0003\u001b\n\u0012A\u0001T8oO\u0006Qan\u001c:nC2L\'0\u001a3\u0016\u0003A\u0003B!I)T\u0007&\u0011!K\t\u0002\u0007)V\u0004H.\u001a\u001a\u0011\u0005\u001d\"\u0016BA+2\u0005\u0019\u0011\u0015nZ%oi\u0006!1m\u001c9z)\ty\u0004\fC\u00043\u000fA\u0005\t\u0019\u0001\u001b\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\t1L\u000b\u000259.\nQ\f\u0005\u0002_G6\tqL\u0003\u0002aC\u0006IQO\\2iK\u000e\\W\r\u001a\u0006\u0003E\n\n!\"\u00198o_R\fG/[8o\u0013\t!wLA\tv]\u000eDWmY6fIZ\u000b\'/[1oG\u0016\fQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DX#A4\u0011\u0005!lW\"A5\u000b\u0005)\\\u0017\u0001\u00027b]\u001eT\u0011\u0001\\\u0001\u0005U\u00064\u0018-\u0003\u0002;S\u0006a\u0001O]8ek\u000e$\u0018I]5usV\t\u0001\u000f\u0005\u0002\"c&\u0011!O\t\u0002\u0004\u0013:$\u0018A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0003kb\u0004\"!\t<\n\u0005]\u0014#aA!os\"9\u0011pCA\u0001\u0002\u0004\u0001\u0018a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/F\u0001}!\u0011i\u0018\u0011A;\u000e\u0003yT!a \u0012\u0002\u0015\r|G\u000e\\3di&|g.C\u0002\u0002\u0004y\u0014\u0001\"\u0013;fe\u0006$xN]\u0001\tG\u0006tW)];bYR!\u0011\u0011BA\b!\r\t\u00131B\u0005\u0004\u0003\u001b\u0011#a\u0002\"p_2,\u0017M\u001c\u0005\bs6\t\t\u00111\u0001v\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\u0007\u001d\f)\u0002C\u0004z\u001d\u0005\u0005\t\u0019\u00019\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012aZ\u0001\f\u0015N|g\u000eR3dS6\fG\u000e\u0005\u0002\u001e#M)\u0011#!\t\u0002.A1\u00111EA\u0015i}j!!!\n\u000b\u0007\u0005\u001d\"%A\u0004sk:$\u0018.\\3\n\t\u0005-\u0012Q\u0005\u0002\u0012\u0003\n\u001cHO]1di\u001a+hn\u0019;j_:\f\u0004\u0003BA\u0018\u0003ki!!!\r\u000b\u0007\u0005M2.\u0001\u0002j_&\u0019\u0001\'!\r\u0015\u0005\u0005u\u0011!B1qa2LHcA \u0002>!)!\u0007\u0006a\u0001i\u00059QO\\1qa2LH\u0003BA\"\u0003\u000b\u00022!I%5\u0011!\t9%FA\u0001\u0002\u0004y\u0014a\u0001=%a\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011Q\n\t\u0004Q\u0006=\u0013bAA)S\n1qJ\u00196fGR\u0004
   #13 = Utf8               toBigDecimal
   #14 = Utf8               Lscala/math/BigDecimal;
   #15 = Utf8               value
   #16 = Utf8               Ljava/lang/String;
   #17 = Utf8               bitmap$0
   #18 = Utf8               Z
   #19 = Utf8               unapply
   #20 = Utf8               (Largonaut/JsonDecimal;)Lscala/Option;
   #21 = Utf8               (Largonaut/JsonDecimal;)Lscala/Option<Ljava/lang/String;>;
   #22 = Utf8               x$0
   #23 = Utf8               argonaut/JsonDecimal$
   #24 = Class              #23           // argonaut/JsonDecimal$
   #25 = Utf8               MODULE$
   #26 = Utf8               Largonaut/JsonDecimal$;
   #27 = NameAndType        #25:#26       // MODULE$:Largonaut/JsonDecimal$;
   #28 = Fieldref           #24.#27       // argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
   #29 = NameAndType        #19:#20       // unapply:(Largonaut/JsonDecimal;)Lscala/Option;
   #30 = Methodref          #24.#29       // argonaut/JsonDecimal$.unapply:(Largonaut/JsonDecimal;)Lscala/Option;
   #31 = Utf8               apply
   #32 = Utf8               (Ljava/lang/String;)Largonaut/JsonDecimal;
   #33 = NameAndType        #31:#32       // apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
   #34 = Methodref          #24.#33       // argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
   #35 = Utf8               andThen
   #36 = Utf8               (Lscala/Function1;)Lscala/Function1;
   #37 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Largonaut/JsonDecimal;TA;>;)Lscala/Function1<Ljava/lang/String;TA;>;
   #38 = Utf8               g
   #39 = NameAndType        #35:#36       // andThen:(Lscala/Function1;)Lscala/Function1;
   #40 = Methodref          #24.#39       // argonaut/JsonDecimal$.andThen:(Lscala/Function1;)Lscala/Function1;
   #41 = Utf8               compose
   #42 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<TA;Ljava/lang/String;>;)Lscala/Function1<TA;Largonaut/JsonDecimal;>;
   #43 = NameAndType        #41:#36       // compose:(Lscala/Function1;)Lscala/Function1;
   #44 = Methodref          #24.#43       // argonaut/JsonDecimal$.compose:(Lscala/Function1;)Lscala/Function1;
   #45 = Utf8               productElementNames
   #46 = Utf8               ()Lscala/collection/Iterator;
   #47 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #48 = Utf8               productElementNames$
   #49 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #50 = NameAndType        #48:#49       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #51 = InterfaceMethodref #6.#50        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #52 = Utf8               this
   #53 = Utf8               Largonaut/JsonDecimal;
   #54 = Utf8               ()Ljava/lang/String;
   #55 = NameAndType        #15:#16       // value:Ljava/lang/String;
   #56 = Fieldref           #2.#55        // argonaut/JsonDecimal.value:Ljava/lang/String;
   #57 = Utf8               toBigDecimal$lzycompute
   #58 = Utf8               ()Lscala/math/BigDecimal;
   #59 = NameAndType        #17:#18       // bitmap$0:Z
   #60 = Fieldref           #2.#59        // argonaut/JsonDecimal.bitmap$0:Z
   #61 = Utf8               scala/package$
   #62 = Class              #61           // scala/package$
   #63 = Utf8               Lscala/package$;
   #64 = NameAndType        #25:#63       // MODULE$:Lscala/package$;
   #65 = Fieldref           #62.#64       // scala/package$.MODULE$:Lscala/package$;
   #66 = Utf8               BigDecimal
   #67 = Utf8               ()Lscala/math/BigDecimal$;
   #68 = NameAndType        #66:#67       // BigDecimal:()Lscala/math/BigDecimal$;
   #69 = Methodref          #62.#68       // scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
   #70 = NameAndType        #15:#54       // value:()Ljava/lang/String;
   #71 = Methodref          #2.#70        // argonaut/JsonDecimal.value:()Ljava/lang/String;
   #72 = Utf8               java/math/MathContext
   #73 = Class              #72           // java/math/MathContext
   #74 = Utf8               UNLIMITED
   #75 = Utf8               Ljava/math/MathContext;
   #76 = NameAndType        #74:#75       // UNLIMITED:Ljava/math/MathContext;
   #77 = Fieldref           #73.#76       // java/math/MathContext.UNLIMITED:Ljava/math/MathContext;
   #78 = Utf8               scala/math/BigDecimal$
   #79 = Class              #78           // scala/math/BigDecimal$
   #80 = Utf8               (Ljava/lang/String;Ljava/math/MathContext;)Lscala/math/BigDecimal;
   #81 = NameAndType        #31:#80       // apply:(Ljava/lang/String;Ljava/math/MathContext;)Lscala/math/BigDecimal;
   #82 = Methodref          #79.#81       // scala/math/BigDecimal$.apply:(Ljava/lang/String;Ljava/math/MathContext;)Lscala/math/BigDecimal;
   #83 = NameAndType        #13:#14       // toBigDecimal:Lscala/math/BigDecimal;
   #84 = Fieldref           #2.#83        // argonaut/JsonDecimal.toBigDecimal:Lscala/math/BigDecimal;
   #85 = Utf8               java/lang/Throwable
   #86 = Class              #85           // java/lang/Throwable
   #87 = NameAndType        #57:#58       // toBigDecimal$lzycompute:()Lscala/math/BigDecimal;
   #88 = Methodref          #2.#87        // argonaut/JsonDecimal.toBigDecimal$lzycompute:()Lscala/math/BigDecimal;
   #89 = Utf8               scala/math/BigDecimal
   #90 = Class              #89           // scala/math/BigDecimal
   #91 = Utf8               toLong
   #92 = Utf8               ()Lscala/Option;
   #93 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
   #94 = NameAndType        #13:#58       // toBigDecimal:()Lscala/math/BigDecimal;
   #95 = Methodref          #2.#94        // argonaut/JsonDecimal.toBigDecimal:()Lscala/math/BigDecimal;
   #96 = Utf8               isValidLong
   #97 = Utf8               ()Z
   #98 = NameAndType        #96:#97       // isValidLong:()Z
   #99 = Methodref          #90.#98       // scala/math/BigDecimal.isValidLong:()Z
  #100 = Utf8               scala/Some
  #101 = Class              #100          // scala/Some
  #102 = Utf8               ()J
  #103 = NameAndType        #91:#102      // toLong:()J
  #104 = Methodref          #90.#103      // scala/math/BigDecimal.toLong:()J
  #105 = Utf8               scala/runtime/BoxesRunTime
  #106 = Class              #105          // scala/runtime/BoxesRunTime
  #107 = Utf8               boxToLong
  #108 = Utf8               (J)Ljava/lang/Long;
  #109 = NameAndType        #107:#108     // boxToLong:(J)Ljava/lang/Long;
  #110 = Methodref          #106.#109     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #111 = Utf8               <init>
  #112 = Utf8               (Ljava/lang/Object;)V
  #113 = NameAndType        #111:#112     // "<init>":(Ljava/lang/Object;)V
  #114 = Methodref          #101.#113     // scala/Some."<init>":(Ljava/lang/Object;)V
  #115 = Utf8               scala/None$
  #116 = Class              #115          // scala/None$
  #117 = Utf8               Lscala/None$;
  #118 = NameAndType        #25:#117      // MODULE$:Lscala/None$;
  #119 = Fieldref           #116.#118     // scala/None$.MODULE$:Lscala/None$;
  #120 = Utf8               n
  #121 = Utf8               scala/Option
  #122 = Class              #121          // scala/Option
  #123 = Utf8               normalized
  #124 = Utf8               ()Lscala/Tuple2;
  #125 = Utf8               ()Lscala/Tuple2<Lscala/math/BigInt;Lscala/math/BigDecimal;>;
  #126 = Utf8               argonaut/JsonNumber$
  #127 = Class              #126          // argonaut/JsonNumber$
  #128 = Utf8               Largonaut/JsonNumber$;
  #129 = NameAndType        #25:#128      // MODULE$:Largonaut/JsonNumber$;
  #130 = Fieldref           #127.#129     // argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
  #131 = Utf8               JsonNumberRegex
  #132 = Utf8               ()Lscala/util/matching/Regex;
  #133 = NameAndType        #131:#132     // JsonNumberRegex:()Lscala/util/matching/Regex;
  #134 = Methodref          #127.#133     // argonaut/JsonNumber$.JsonNumberRegex:()Lscala/util/matching/Regex;
  #135 = Utf8               scala/util/matching/Regex
  #136 = Class              #135          // scala/util/matching/Regex
  #137 = Utf8               unapplySeq
  #138 = Utf8               (Ljava/lang/CharSequence;)Lscala/Option;
  #139 = NameAndType        #137:#138     // unapplySeq:(Ljava/lang/CharSequence;)Lscala/Option;
  #140 = Methodref          #136.#139     // scala/util/matching/Regex.unapplySeq:(Ljava/lang/CharSequence;)Lscala/Option;
  #141 = Utf8               isEmpty
  #142 = NameAndType        #141:#97      // isEmpty:()Z
  #143 = Methodref          #122.#142     // scala/Option.isEmpty:()Z
  #144 = Utf8               get
  #145 = Utf8               ()Ljava/lang/Object;
  #146 = NameAndType        #144:#145     // get:()Ljava/lang/Object;
  #147 = Methodref          #122.#146     // scala/Option.get:()Ljava/lang/Object;
  #148 = Utf8               scala/collection/immutable/List
  #149 = Class              #148          // scala/collection/immutable/List
  #150 = Utf8               lengthCompare
  #151 = Utf8               (I)I
  #152 = NameAndType        #150:#151     // lengthCompare:(I)I
  #153 = Methodref          #149.#152     // scala/collection/immutable/List.lengthCompare:(I)I
  #154 = Utf8               scala/collection/LinearSeqOps
  #155 = Class              #154          // scala/collection/LinearSeqOps
  #156 = Utf8               (I)Ljava/lang/Object;
  #157 = NameAndType        #31:#156      // apply:(I)Ljava/lang/Object;
  #158 = InterfaceMethodref #155.#157     // scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
  #159 = Utf8               java/lang/String
  #160 = Class              #159          // java/lang/String
  #161 = Utf8               scala/Tuple4
  #162 = Class              #161          // scala/Tuple4
  #163 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #164 = NameAndType        #111:#163     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #165 = Methodref          #162.#164     // scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #166 = Utf8               scala/MatchError
  #167 = Class              #166          // scala/MatchError
  #168 = Methodref          #167.#113     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #169 = Utf8               _1
  #170 = NameAndType        #169:#145     // _1:()Ljava/lang/Object;
  #171 = Methodref          #162.#170     // scala/Tuple4._1:()Ljava/lang/Object;
  #172 = Utf8               _2
  #173 = NameAndType        #172:#145     // _2:()Ljava/lang/Object;
  #174 = Methodref          #162.#173     // scala/Tuple4._2:()Ljava/lang/Object;
  #175 = Utf8               _3
  #176 = NameAndType        #175:#145     // _3:()Ljava/lang/Object;
  #177 = Methodref          #162.#176     // scala/Tuple4._3:()Ljava/lang/Object;
  #178 = Utf8               _4
  #179 = NameAndType        #178:#145     // _4:()Ljava/lang/Object;
  #180 = Methodref          #162.#179     // scala/Tuple4._4:()Ljava/lang/Object;
  #181 = Utf8               0
  #182 = String             #181          // 0
  #183 = Utf8               java/lang/Object
  #184 = Class              #183          // java/lang/Object
  #185 = Utf8               equals
  #186 = Utf8               (Ljava/lang/Object;)Z
  #187 = NameAndType        #185:#186     // equals:(Ljava/lang/Object;)Z
  #188 = Methodref          #184.#187     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #189 = Utf8               length
  #190 = Utf8               ()I
  #191 = NameAndType        #189:#190     // length:()I
  #192 = Methodref          #160.#191     // java/lang/String.length:()I
  #193 = Utf8               boxToInteger
  #194 = Utf8               (I)Ljava/lang/Integer;
  #195 = NameAndType        #193:#194     // boxToInteger:(I)Ljava/lang/Integer;
  #196 = Methodref          #106.#195     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #197 = Utf8               decScale$1
  #198 = Utf8               (ILjava/lang/String;)Lscala/Option;
  #199 = NameAndType        #197:#198     // decScale$1:(ILjava/lang/String;)Lscala/Option;
  #200 = Methodref          #2.#199       // argonaut/JsonDecimal.decScale$1:(ILjava/lang/String;)Lscala/Option;
  #201 = Utf8               scala/Option$
  #202 = Class              #201          // scala/Option$
  #203 = Utf8               Lscala/Option$;
  #204 = NameAndType        #25:#203      // MODULE$:Lscala/Option$;
  #205 = Fieldref           #202.#204     // scala/Option$.MODULE$:Lscala/Option$;
  #206 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #207 = NameAndType        #31:#206      // apply:(Ljava/lang/Object;)Lscala/Option;
  #208 = Methodref          #202.#207     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #209 = NameAndType        #15:#145      // value:()Ljava/lang/Object;
  #210 = Methodref          #101.#209     // scala/Some.value:()Ljava/lang/Object;
  #211 = Utf8               +
  #212 = String             #211          // +
  #213 = Utf8               startsWith
  #214 = Utf8               (Ljava/lang/String;)Z
  #215 = NameAndType        #213:#214     // startsWith:(Ljava/lang/String;)Z
  #216 = Methodref          #160.#215     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #217 = Utf8               BigInt
  #218 = Utf8               ()Lscala/math/BigInt$;
  #219 = NameAndType        #217:#218     // BigInt:()Lscala/math/BigInt$;
  #220 = Methodref          #62.#219      // scala/package$.BigInt:()Lscala/math/BigInt$;
  #221 = Utf8               substring
  #222 = Utf8               (I)Ljava/lang/String;
  #223 = NameAndType        #221:#222     // substring:(I)Ljava/lang/String;
  #224 = Methodref          #160.#223     // java/lang/String.substring:(I)Ljava/lang/String;
  #225 = Utf8               scala/math/BigInt$
  #226 = Class              #225          // scala/math/BigInt$
  #227 = Utf8               (Ljava/lang/String;)Lscala/math/BigInt;
  #228 = NameAndType        #31:#227      // apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #229 = Methodref          #226.#228     // scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #230 = Utf8               (I)Lscala/math/BigInt;
  #231 = NameAndType        #31:#230      // apply:(I)Lscala/math/BigInt;
  #232 = Methodref          #226.#231     // scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
  #233 = Utf8               unboxToInt
  #234 = Utf8               (Ljava/lang/Object;)I
  #235 = NameAndType        #233:#234     // unboxToInt:(Ljava/lang/Object;)I
  #236 = Methodref          #106.#235     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #237 = Utf8               java/lang/StringBuilder
  #238 = Class              #237          // java/lang/StringBuilder
  #239 = Integer            1
  #240 = Utf8               (I)V
  #241 = NameAndType        #111:#240     // "<init>":(I)V
  #242 = Methodref          #238.#241     // java/lang/StringBuilder."<init>":(I)V
  #243 = Utf8               append
  #244 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #245 = NameAndType        #243:#244     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #246 = Methodref          #238.#245     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #247 = Utf8               .
  #248 = String             #247          // .
  #249 = Utf8               toString
  #250 = NameAndType        #249:#54      // toString:()Ljava/lang/String;
  #251 = Methodref          #238.#250     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #252 = Utf8               bigDecimal
  #253 = Utf8               ()Ljava/math/BigDecimal;
  #254 = NameAndType        #252:#253     // bigDecimal:()Ljava/math/BigDecimal;
  #255 = Methodref          #90.#254      // scala/math/BigDecimal.bigDecimal:()Ljava/math/BigDecimal;
  #256 = Utf8               java/math/BigDecimal
  #257 = Class              #256          // java/math/BigDecimal
  #258 = Utf8               movePointLeft
  #259 = Utf8               (I)Ljava/math/BigDecimal;
  #260 = NameAndType        #258:#259     // movePointLeft:(I)Ljava/math/BigDecimal;
  #261 = Methodref          #257.#260     // java/math/BigDecimal.movePointLeft:(I)Ljava/math/BigDecimal;
  #262 = Utf8               (Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
  #263 = NameAndType        #31:#262      // apply:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
  #264 = Methodref          #79.#263      // scala/math/BigDecimal$.apply:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
  #265 = Utf8               scala/Tuple2
  #266 = Class              #265          // scala/Tuple2
  #267 = Utf8               Lscala/math/BigInt$;
  #268 = NameAndType        #25:#267      // MODULE$:Lscala/math/BigInt$;
  #269 = Fieldref           #226.#268     // scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
  #270 = Utf8               int2bigInt
  #271 = NameAndType        #270:#230     // int2bigInt:(I)Lscala/math/BigInt;
  #272 = Methodref          #226.#271     // scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
  #273 = Utf8               scala/math/BigInt
  #274 = Class              #273          // scala/math/BigInt
  #275 = Utf8               $plus
  #276 = Utf8               (Lscala/math/BigInt;)Lscala/math/BigInt;
  #277 = NameAndType        #275:#276     // $plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #278 = Methodref          #274.#277     // scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #279 = Utf8               unary_$minus
  #280 = NameAndType        #279:#58      // unary_$minus:()Lscala/math/BigDecimal;
  #281 = Methodref          #90.#280      // scala/math/BigDecimal.unary_$minus:()Lscala/math/BigDecimal;
  #282 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #283 = NameAndType        #111:#282     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #284 = Methodref          #266.#283     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #285 = Utf8               (I)Lscala/math/BigDecimal;
  #286 = NameAndType        #31:#285      // apply:(I)Lscala/math/BigDecimal;
  #287 = Methodref          #79.#286      // scala/math/BigDecimal$.apply:(I)Lscala/math/BigDecimal;
  #288 = Utf8               negative
  #289 = Utf8               intStr
  #290 = Utf8               decStr
  #291 = Utf8               expStr
  #292 = Utf8               exp
  #293 = Utf8               unscaledValue
  #294 = Utf8               scaledValue
  #295 = Utf8               shift
  #296 = Utf8               I
  #297 = Utf8               rescale
  #298 = Utf8               Lscala/Option;
  #299 = Utf8               unscaledExponent
  #300 = Utf8               Lscala/math/BigInt;
  #301 = Utf8               copy
  #302 = Utf8               (Ljava/lang/String;)V
  #303 = NameAndType        #111:#302     // "<init>":(Ljava/lang/String;)V
  #304 = Methodref          #2.#303       // argonaut/JsonDecimal."<init>":(Ljava/lang/String;)V
  #305 = Utf8               copy$default$1
  #306 = Utf8               productPrefix
  #307 = Utf8               JsonDecimal
  #308 = String             #307          // JsonDecimal
  #309 = Utf8               productArity
  #310 = Utf8               productElement
  #311 = Utf8               x$1
  #312 = Utf8               scala/runtime/Statics
  #313 = Class              #312          // scala/runtime/Statics
  #314 = Utf8               ioobe
  #315 = NameAndType        #314:#156     // ioobe:(I)Ljava/lang/Object;
  #316 = Methodref          #313.#315     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #317 = Utf8               productIterator
  #318 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #319 = Utf8               scala/runtime/ScalaRunTime$
  #320 = Class              #319          // scala/runtime/ScalaRunTime$
  #321 = Utf8               Lscala/runtime/ScalaRunTime$;
  #322 = NameAndType        #25:#321      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #323 = Fieldref           #320.#322     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #324 = Utf8               typedProductIterator
  #325 = NameAndType        #324:#49      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #326 = Methodref          #320.#325     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #327 = Utf8               canEqual
  #328 = Utf8               Ljava/lang/Object;
  #329 = Utf8               productElementName
  #330 = String             #15           // value
  #331 = Utf8               _toString
  #332 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #333 = NameAndType        #331:#332     // _toString:(Lscala/Product;)Ljava/lang/String;
  #334 = Methodref          #320.#333     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #335 = Utf8               i
  #336 = Utf8               decStr$1
  #337 = Utf8               scala/collection/StringOps$
  #338 = Class              #337          // scala/collection/StringOps$
  #339 = Utf8               Lscala/collection/StringOps$;
  #340 = NameAndType        #25:#339      // MODULE$:Lscala/collection/StringOps$;
  #341 = Fieldref           #338.#340     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #342 = Utf8               scala/Predef$
  #343 = Class              #342          // scala/Predef$
  #344 = Utf8               Lscala/Predef$;
  #345 = NameAndType        #25:#344      // MODULE$:Lscala/Predef$;
  #346 = Fieldref           #343.#345     // scala/Predef$.MODULE$:Lscala/Predef$;
  #347 = Utf8               augmentString
  #348 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #349 = NameAndType        #347:#348     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #350 = Methodref          #343.#349     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #351 = Utf8               apply$extension
  #352 = Utf8               (Ljava/lang/String;I)C
  #353 = NameAndType        #351:#352     // apply$extension:(Ljava/lang/String;I)C
  #354 = Methodref          #338.#353     // scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
  #355 = Utf8               ()V
  #356 = NameAndType        #111:#355     // "<init>":()V
  #357 = Methodref          #4.#356       // argonaut/JsonNumber."<init>":()V
  #358 = Utf8               $init$
  #359 = Utf8               (Lscala/Product;)V
  #360 = NameAndType        #358:#359     // $init$:(Lscala/Product;)V
  #361 = InterfaceMethodref #6.#360       // scala/Product.$init$:(Lscala/Product;)V
  #362 = Utf8               Code
  #363 = Utf8               Signature
  #364 = Utf8               MethodParameters
  #365 = Utf8               LineNumberTable
  #366 = Utf8               LocalVariableTable
  #367 = Utf8               StackMapTable
  #368 = Utf8               SourceFile
  #369 = Utf8               RuntimeVisibleAnnotations
  #370 = Utf8               ScalaInlineInfo
  #371 = Utf8               ScalaSig
{
  private scala.math.BigDecimal toBigDecimal;
    descriptor: Lscala/math/BigDecimal;
    flags: (0x0002) ACC_PRIVATE

  private final java.lang.String value;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static scala.Option<java.lang.String> unapply(argonaut.JsonDecimal);
    descriptor: (Largonaut/JsonDecimal;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #28                 // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
         3: aload_0
         4: invokevirtual #30                 // Method argonaut/JsonDecimal$.unapply:(Largonaut/JsonDecimal;)Lscala/Option;
         7: areturn
    Signature: #21                          // (Largonaut/JsonDecimal;)Lscala/Option<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static argonaut.JsonDecimal apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Largonaut/JsonDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #28                 // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
         3: aload_0
         4: invokevirtual #34                 // Method argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
         7: areturn
    MethodParameters:
      Name                           Flags
      value                          final

  public static <A extends java.lang.Object> scala.Function1<java.lang.String, A> andThen(scala.Function1<argonaut.JsonDecimal, A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #28                 // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
         3: aload_0
         4: invokevirtual #40                 // Method argonaut/JsonDecimal$.andThen:(Lscala/Function1;)Lscala/Function1;
         7: areturn
    Signature: #37                          // <A:Ljava/lang/Object;>(Lscala/Function1<Largonaut/JsonDecimal;TA;>;)Lscala/Function1<Ljava/lang/String;TA;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public static <A extends java.lang.Object> scala.Function1<A, argonaut.JsonDecimal> compose(scala.Function1<A, java.lang.String>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #28                 // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
         3: aload_0
         4: invokevirtual #44                 // Method argonaut/JsonDecimal$.compose:(Lscala/Function1;)Lscala/Function1;
         7: areturn
    Signature: #42                          // <A:Ljava/lang/Object;>(Lscala/Function1<TA;Ljava/lang/String;>;)Lscala/Function1<TA;Largonaut/JsonDecimal;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #51                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonDecimal;
    Signature: #47                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String value();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field value:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonDecimal;

  private scala.math.BigDecimal toBigDecimal$lzycompute();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #60                 // Field bitmap$0:Z
         8: ifne          36
        11: aload_0
        12: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
        15: invokevirtual #69                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
        18: aload_0
        19: invokevirtual #71                 // Method value:()Ljava/lang/String;
        22: getstatic     #77                 // Field java/math/MathContext.UNLIMITED:Ljava/math/MathContext;
        25: invokevirtual #82                 // Method scala/math/BigDecimal$.apply:(Ljava/lang/String;Ljava/math/MathContext;)Lscala/math/BigDecimal;
        28: putfield      #84                 // Field toBigDecimal:Lscala/math/BigDecimal;
        31: aload_0
        32: iconst_1
        33: putfield      #60                 // Field bitmap$0:Z
        36: aload_1
        37: monitorexit
        38: goto          44
        41: aload_1
        42: monitorexit
        43: athrow
        44: aload_0
        45: getfield      #84                 // Field toBigDecimal:Lscala/math/BigDecimal;
        48: areturn
      Exception table:
         from    to  target type
             4    36    41   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class argonaut/JsonDecimal ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Largonaut/JsonDecimal;

  public scala.math.BigDecimal toBigDecimal();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #60                 // Field bitmap$0:Z
         4: ifne          14
         7: aload_0
         8: invokespecial #88                 // Method toBigDecimal$lzycompute:()Lscala/math/BigDecimal;
        11: goto          18
        14: aload_0
        15: getfield      #84                 // Field toBigDecimal:Lscala/math/BigDecimal;
        18: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigDecimal ]
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Largonaut/JsonDecimal;

  public scala.Option<java.lang.Object> toLong();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #95                 // Method toBigDecimal:()Lscala/math/BigDecimal;
         4: astore_1
         5: aload_1
         6: invokevirtual #99                 // Method scala/math/BigDecimal.isValidLong:()Z
         9: ifeq          29
        12: new           #101                // class scala/Some
        15: dup
        16: aload_1
        17: invokevirtual #104                // Method scala/math/BigDecimal.toLong:()J
        20: invokestatic  #110                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        23: invokespecial #114                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        26: goto          32
        29: getstatic     #119                // Field scala/None$.MODULE$:Lscala/None$;
        32: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class scala/math/BigDecimal ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 183: 0
        line 184: 5
        line 185: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      28     1     n   Lscala/math/BigDecimal;
            0      33     0  this   Largonaut/JsonDecimal;
    Signature: #93                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Tuple2<scala.math.BigInt, scala.math.BigDecimal> normalized();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=28, args_size=1
         0: aload_0
         1: invokevirtual #71                 // Method value:()Ljava/lang/String;
         4: astore        5
         6: aload         5
         8: ifnull        154
        11: getstatic     #130                // Field argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
        14: invokevirtual #134                // Method argonaut/JsonNumber$.JsonNumberRegex:()Lscala/util/matching/Regex;
        17: aload         5
        19: invokevirtual #140                // Method scala/util/matching/Regex.unapplySeq:(Ljava/lang/CharSequence;)Lscala/Option;
        22: astore        6
        24: aload         6
        26: invokevirtual #143                // Method scala/Option.isEmpty:()Z
        29: ifne          151
        32: aload         6
        34: invokevirtual #147                // Method scala/Option.get:()Ljava/lang/Object;
        37: ifnull        151
        40: aload         6
        42: invokevirtual #147                // Method scala/Option.get:()Ljava/lang/Object;
        45: checkcast     #149                // class scala/collection/immutable/List
        48: iconst_4
        49: invokevirtual #153                // Method scala/collection/immutable/List.lengthCompare:(I)I
        52: iconst_0
        53: if_icmpne     151
        56: aload         6
        58: invokevirtual #147                // Method scala/Option.get:()Ljava/lang/Object;
        61: checkcast     #155                // class scala/collection/LinearSeqOps
        64: iconst_0
        65: invokeinterface #158,  2          // InterfaceMethod scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
        70: checkcast     #160                // class java/lang/String
        73: astore        7
        75: aload         6
        77: invokevirtual #147                // Method scala/Option.get:()Ljava/lang/Object;
        80: checkcast     #155                // class scala/collection/LinearSeqOps
        83: iconst_1
        84: invokeinterface #158,  2          // InterfaceMethod scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
        89: checkcast     #160                // class java/lang/String
        92: astore        8
        94: aload         6
        96: invokevirtual #147                // Method scala/Option.get:()Ljava/lang/Object;
        99: checkcast     #155                // class scala/collection/LinearSeqOps
       102: iconst_2
       103: invokeinterface #158,  2          // InterfaceMethod scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
       108: checkcast     #160                // class java/lang/String
       111: astore        9
       113: aload         6
       115: invokevirtual #147                // Method scala/Option.get:()Ljava/lang/Object;
       118: checkcast     #155                // class scala/collection/LinearSeqOps
       121: iconst_3
       122: invokeinterface #158,  2          // InterfaceMethod scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
       127: checkcast     #160                // class java/lang/String
       130: astore        10
       132: new           #162                // class scala/Tuple4
       135: dup
       136: aload         7
       138: aload         8
       140: aload         9
       142: aload         10
       144: invokespecial #165                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       147: astore_3
       148: goto          167
       151: goto          157
       154: goto          157
       157: new           #167                // class scala/MatchError
       160: dup
       161: aload         5
       163: invokespecial #168                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       166: athrow
       167: aload_3
       168: astore        4
       170: aload         4
       172: invokevirtual #171                // Method scala/Tuple4._1:()Ljava/lang/Object;
       175: checkcast     #160                // class java/lang/String
       178: astore        11
       180: aload         4
       182: invokevirtual #174                // Method scala/Tuple4._2:()Ljava/lang/Object;
       185: checkcast     #160                // class java/lang/String
       188: astore        12
       190: aload         4
       192: invokevirtual #177                // Method scala/Tuple4._3:()Ljava/lang/Object;
       195: checkcast     #160                // class java/lang/String
       198: astore        13
       200: aload         4
       202: invokevirtual #180                // Method scala/Tuple4._4:()Ljava/lang/Object;
       205: checkcast     #160                // class java/lang/String
       208: astore        14
       210: aload         12
       212: ldc           #182                // String 0
       214: astore        16
       216: dup
       217: ifnonnull     229
       220: pop
       221: aload         16
       223: ifnull        257
       226: goto          237
       229: aload         16
       231: invokevirtual #188                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       234: ifne          257
       237: new           #101                // class scala/Some
       240: dup
       241: aload         12
       243: invokevirtual #192                // Method java/lang/String.length:()I
       246: iconst_1
       247: isub
       248: invokestatic  #196                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       251: invokespecial #114                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       254: goto          275
       257: aload         13
       259: ifnull        272
       262: aload_0
       263: iconst_0
       264: aload         13
       266: invokespecial #200                // Method decScale$1:(ILjava/lang/String;)Lscala/Option;
       269: goto          275
       272: getstatic     #119                // Field scala/None$.MODULE$:Lscala/None$;
       275: astore        15
       277: iconst_0
       278: istore        18
       280: aconst_null
       281: astore        19
       283: getstatic     #205                // Field scala/Option$.MODULE$:Lscala/Option$;
       286: aload         14
       288: invokevirtual #208                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
       291: astore        20
       293: aload         20
       295: instanceof    #101                // class scala/Some
       298: ifeq          353
       301: iconst_1
       302: istore        18
       304: aload         20
       306: checkcast     #101                // class scala/Some
       309: astore        19
       311: aload         19
       313: invokevirtual #210                // Method scala/Some.value:()Ljava/lang/Object;
       316: checkcast     #160                // class java/lang/String
       319: astore        21
       321: aload         21
       323: ldc           #212                // String +
       325: invokevirtual #216                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       328: ifeq          350
       331: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       334: invokevirtual #220                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
       337: aload         21
       339: iconst_1
       340: invokevirtual #224                // Method java/lang/String.substring:(I)Ljava/lang/String;
       343: invokevirtual #229                // Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
       346: astore_2
       347: goto          427
       350: goto          356
       353: goto          356
       356: iload         18
       358: ifeq          386
       361: aload         19
       363: invokevirtual #210                // Method scala/Some.value:()Ljava/lang/Object;
       366: checkcast     #160                // class java/lang/String
       369: astore        22
       371: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       374: invokevirtual #220                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
       377: aload         22
       379: invokevirtual #229                // Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
       382: astore_2
       383: goto          427
       386: goto          389
       389: getstatic     #119                // Field scala/None$.MODULE$:Lscala/None$;
       392: aload         20
       394: invokevirtual #188                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       397: ifeq          414
       400: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       403: invokevirtual #220                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
       406: iconst_0
       407: invokevirtual #232                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
       410: astore_2
       411: goto          427
       414: goto          417
       417: new           #167                // class scala/MatchError
       420: dup
       421: aload         20
       423: invokespecial #168                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       426: athrow
       427: aload_2
       428: astore        17
       430: aload         15
       432: astore        23
       434: aload         23
       436: instanceof    #101                // class scala/Some
       439: ifeq          582
       442: aload         23
       444: checkcast     #101                // class scala/Some
       447: astore        24
       449: aload         24
       451: invokevirtual #210                // Method scala/Some.value:()Ljava/lang/Object;
       454: invokestatic  #236                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       457: istore        25
       459: aload         13
       461: ifnonnull     481
       464: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       467: invokevirtual #69                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
       470: aload         12
       472: getstatic     #77                 // Field java/math/MathContext.UNLIMITED:Ljava/math/MathContext;
       475: invokevirtual #82                 // Method scala/math/BigDecimal$.apply:(Ljava/lang/String;Ljava/math/MathContext;)Lscala/math/BigDecimal;
       478: goto          520
       481: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       484: invokevirtual #69                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
       487: new           #238                // class java/lang/StringBuilder
       490: dup
       491: ldc           #239                // int 1
       493: invokespecial #242                // Method java/lang/StringBuilder."<init>":(I)V
       496: aload         12
       498: invokevirtual #246                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       501: ldc           #248                // String .
       503: invokevirtual #246                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       506: aload         13
       508: invokevirtual #246                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       511: invokevirtual #251                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       514: getstatic     #77                 // Field java/math/MathContext.UNLIMITED:Ljava/math/MathContext;
       517: invokevirtual #82                 // Method scala/math/BigDecimal$.apply:(Ljava/lang/String;Ljava/math/MathContext;)Lscala/math/BigDecimal;
       520: astore        26
       522: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       525: invokevirtual #69                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
       528: aload         26
       530: invokevirtual #255                // Method scala/math/BigDecimal.bigDecimal:()Ljava/math/BigDecimal;
       533: iload         25
       535: invokevirtual #261                // Method java/math/BigDecimal.movePointLeft:(I)Ljava/math/BigDecimal;
       538: invokevirtual #264                // Method scala/math/BigDecimal$.apply:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
       541: astore        27
       543: new           #266                // class scala/Tuple2
       546: dup
       547: aload         17
       549: getstatic     #269                // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
       552: iload         25
       554: invokevirtual #272                // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
       557: invokevirtual #278                // Method scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
       560: aload         11
       562: ifnull        573
       565: aload         27
       567: invokevirtual #281                // Method scala/math/BigDecimal.unary_$minus:()Lscala/math/BigDecimal;
       570: goto          575
       573: aload         27
       575: invokespecial #284                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       578: astore_1
       579: goto          640
       582: goto          585
       585: getstatic     #119                // Field scala/None$.MODULE$:Lscala/None$;
       588: aload         23
       590: invokevirtual #188                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       593: ifeq          627
       596: new           #266                // class scala/Tuple2
       599: dup
       600: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       603: invokevirtual #220                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
       606: iconst_0
       607: invokevirtual #232                // Method scala/math/BigInt$.apply:(I)Lscala/math/BigInt;
       610: getstatic     #65                 // Field scala/package$.MODULE$:Lscala/package$;
       613: invokevirtual #69                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
       616: iconst_0
       617: invokevirtual #287                // Method scala/math/BigDecimal$.apply:(I)Lscala/math/BigDecimal;
       620: invokespecial #284                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       623: astore_1
       624: goto          640
       627: goto          630
       630: new           #167                // class scala/MatchError
       633: dup
       634: aload         23
       636: invokespecial #168                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       639: athrow
       640: aload_1
       641: areturn
      StackMapTable: number_of_entries = 26
        frame_type = 255 /* full_frame */
          offset_delta = 151
          locals = [ class argonaut/JsonDecimal, top, top, top, top, class java/lang/String, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonDecimal, top, top, class scala/Tuple4, top, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 61
          locals = [ class argonaut/JsonDecimal, top, top, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, top, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 19 /* same */
        frame_type = 14 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 74
          locals = [ class argonaut/JsonDecimal, top, top, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, top, int, class scala/Some, class scala/Option, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonDecimal, top, top, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, top, int, null, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonDecimal, top, top, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, top, int, class scala/Some, class scala/Option ]
          stack = []
        frame_type = 29 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonDecimal, top, class scala/math/BigInt, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, top, int, class scala/Some, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class argonaut/JsonDecimal, top, class scala/math/BigInt, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, class scala/math/BigInt, int, class scala/Some, class scala/Option, top, top, class scala/Option, class scala/Some, int ]
          stack = []
        frame_type = 102 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigDecimal ]
        frame_type = 255 /* full_frame */
          offset_delta = 52
          locals = [ class argonaut/JsonDecimal, top, class scala/math/BigInt, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, class scala/math/BigInt, int, class scala/Some, class scala/Option, top, top, class scala/Option, class scala/Some, int, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ uninitialized 543, uninitialized 543, class scala/math/BigInt ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class argonaut/JsonDecimal, top, class scala/math/BigInt, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, class scala/math/BigInt, int, class scala/Some, class scala/Option, top, top, class scala/Option, class scala/Some, int, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ uninitialized 543, uninitialized 543, class scala/math/BigInt, class scala/math/BigDecimal ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class argonaut/JsonDecimal, top, class scala/math/BigInt, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, class scala/math/BigInt, int, class scala/Some, class scala/Option, top, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 41 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonDecimal, class scala/Tuple2, class scala/math/BigInt, class scala/Tuple4, class scala/Tuple4, class java/lang/String, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Option, class java/lang/String, class scala/math/BigInt, int, class scala/Some, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 201: 0
        line 210: 210
        line 211: 257
        line 212: 272
        line 215: 277
        line 216: 293
        line 217: 356
        line 218: 389
        line 215: 417
        line 220: 430
        line 221: 434
        line 223: 459
        line 224: 481
        line 225: 522
        line 226: 543
        line 221: 582
        line 229: 585
        line 220: 630
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           73      78     7 negative   Ljava/lang/String;
           92      59     8 intStr   Ljava/lang/String;
          111      40     9 decStr   Ljava/lang/String;
          130      21    10 expStr   Ljava/lang/String;
          319      34    21   exp   Ljava/lang/String;
          369      17    22   exp   Ljava/lang/String;
          520      58    26 unscaledValue   Lscala/math/BigDecimal;
          541      37    27 scaledValue   Lscala/math/BigDecimal;
          457     125    25 shift   I
          178     463    11 negative   Ljava/lang/String;
          188     453    12 intStr   Ljava/lang/String;
          198     443    13 decStr   Ljava/lang/String;
          208     433    14 expStr   Ljava/lang/String;
          275     366    15 rescale   Lscala/Option;
          428     213    17 unscaledExponent   Lscala/math/BigInt;
            0     642     0  this   Largonaut/JsonDecimal;
    Signature: #125                         // ()Lscala/Tuple2<Lscala/math/BigInt;Lscala/math/BigDecimal;>;

  public argonaut.JsonDecimal copy(java.lang.String);
    descriptor: (Ljava/lang/String;)Largonaut/JsonDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class argonaut/JsonDecimal
         3: dup
         4: aload_1
         5: invokespecial #304                // Method "<init>":(Ljava/lang/String;)V
         8: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Largonaut/JsonDecimal;
            0       9     1 value   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      value                          final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #71                 // Method value:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonDecimal;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #308                // String JsonDecimal
         3: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/JsonDecimal;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Largonaut/JsonDecimal;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #71                 // Method value:()Ljava/lang/String;
        24: goto          34
        27: iload_1
        28: invokestatic  #316                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        31: goto          34
        34: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Largonaut/JsonDecimal;
            0      35     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #323                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #326                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonDecimal;
    Signature: #318                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class argonaut/JsonDecimal
         4: ireturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonDecimal;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #330                // String value
        23: goto          36
        26: iload_1
        27: invokestatic  #316                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        30: checkcast     #160                // class java/lang/String
        33: goto          36
        36: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Largonaut/JsonDecimal;
            0      37     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #323                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #334                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonDecimal;

  private final scala.Option decScale$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: iload_1
         1: aload_2
         2: invokevirtual #192                // Method java/lang/String.length:()I
         5: if_icmplt     14
         8: getstatic     #119                // Field scala/None$.MODULE$:Lscala/None$;
        11: goto          54
        14: getstatic     #341                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        17: getstatic     #346                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_2
        21: invokevirtual #350                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        24: iload_1
        25: invokevirtual #354                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        28: bipush        48
        30: if_icmpne     40
        33: iload_1
        34: iconst_1
        35: iadd
        36: istore_1
        37: goto          0
        40: new           #101                // class scala/Some
        43: dup
        44: iload_1
        45: ineg
        46: iconst_1
        47: isub
        48: invokestatic  #196                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        51: invokespecial #114                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        54: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 0 /* same */
        frame_type = 13 /* same */
        frame_type = 25 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 204: 0
        line 205: 14
        line 206: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0  this   Largonaut/JsonDecimal;
            0      55     1     i   I
            0      55     2 decStr$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      i                              final
      decStr$1                       final

  public argonaut.JsonDecimal(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #56                 // Field value:Ljava/lang/String;
         5: aload_0
         6: invokespecial #357                // Method argonaut/JsonNumber."<init>":()V
         9: aload_0
        10: invokestatic  #361                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/JsonDecimal;
            0      14     1 value   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      value                          final
}
SourceFile: "JsonNumber.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Mc\u0001B\f\u0019\u0001nA\u0001B\r\u0001\u0003\u0016\u0004%\ta\r\u0005\ty\u0001\u0011\t\u0012)A\u0005i!1Q\b\u0001C\u00011yB\u0001\"\u0011\u0001\t\u0006\u0004%\tA\u0011\u0005\u0006\r\u0002!\ta\u0012\u0005\u0006\u001d\u0002!\ta\u0014\u0005\b-\u0002\t\t\u0011\"\u0001X\u0011\u001dI\u0006!%A\u0005\u0002iCq!\u001a\u0001\u0002\u0002\u0013\u0005c\rC\u0004o\u0001\u0005\u0005I\u0011A8\t\u000fM\u0004\u0011\u0011!C\u0001i\"9!\u0010AA\u0001\n\u0003Z\b\"CA\u0003\u0001\u0005\u0005I\u0011AA\u0004\u0011%\t\t\u0002AA\u0001\n\u0003\n\u0019\u0002C\u0005\u0002\u0018\u0001\t\t\u0011\"\u0011\u0002\u001a\u001dI\u00111\u0004\r\u0002\u0002#\u0005\u0011Q\u0004\u0004\t/a\t\t\u0011#\u0001\u0002 !1Q(\u0005C\u0001\u0003oA\u0011\"a\u0006\u0012\u0003\u0003%)%!\u0007\t\u0013\u0005e\u0012#!A\u0005\u0002\u0006m\u0002\"CA #\u0005\u0005I\u0011QA!\u0011%\tI%EA\u0001\n\u0013\tYEA\u0006Kg>tG)Z2j[\u0006d\'\"A\r\u0002\u0011\u0005\u0014xm\u001c8bkR\u001c\u0001a\u0005\u0003\u00019\u00012\u0003CA\u000f\u001f\u001b\u0005A\u0012BA\u0010\u0019\u0005)Q5o\u001c8Ok6\u0014WM\u001d\t\u0003C\u0011j\u0011A\t\u0006\u0002G\u0005)1oY1mC&\u0011QE\t\u0002\b!J|G-^2u!\t9sF\u0004\u0002)[9\u0011\u0011\u0006L\u0007\u0002U)\u00111FG\u0001\u0007yI|w\u000e\u001e \n\u0003\rJ!A\f\u0012\u0002\u000fA\f7m[1hK&\u0011\u0001\'\r\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003]\t\nQA^1mk\u0016,\u0012\u0001\u000e\t\u0003ker!AN\u001c\u0011\u0005%\u0012\u0013B\u0001\u001d#\u0003\u0019\u0001&/\u001a3fM&\u0011!h\u000f\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005a\u0012\u0013A\u0002<bYV,\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0003\u007f\u0001\u0003\"!\b\u0001\t\u000bI\u001a\u0001\u0019\u0001\u001b\u0002\u0019Q|\')[4EK\u000eLW.\u00197\u0016\u0003\r\u0003\"a\n#\n\u0005\u0015\u000b$A\u0003\"jO\u0012+7-[7bY\u00061Ao\u001c\'p]\u001e,\u0012\u0001\u0013\t\u0004C%[\u0015B\u0001&#\u0005\u0019y\u0005\u000f^5p]B\u0011\u0011\u0005T\u0005\u0003\u001b\n\u0012A\u0001T8oO\u0006Qan\u001c:nC2L\'0\u001a3\u0016\u0003A\u0003B!I)T\u0007&\u0011!K\t\u0002\u0007)V\u0004H.\u001a\u001a\u0011\u0005\u001d\"\u0016BA+2\u0005\u0019\u0011\u0015nZ%oi\u0006!1m\u001c9z)\ty\u0004\fC\u00043\u000fA\u0005\t\u0019\u0001\u001b\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\t1L\u000b\u000259.\nQ\f\u0005\u0002_G6\tqL\u0003\u0002aC\u0006IQO\\2iK\u000e\\W\r\u001a\u0006\u0003E\n\n!\"\u00198o_R\fG/[8o\u0013\t!wLA\tv]\u000eDWmY6fIZ\u000b\'/[1oG\u0016\fQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DX#A4\u0011\u0005!lW\"A5\u000b\u0005)\\\u0017\u0001\u00027b]\u001eT\u0011\u0001\\\u0001\u0005U\u00064\u0018-\u0003\u0002;S\u0006a\u0001O]8ek\u000e$\u0018I]5usV\t\u0001\u000f\u0005\u0002\"c&\u0011!O\t\u0002\u0004\u0013:$\u0018A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0003kb\u0004\"!\t<\n\u0005]\u0014#aA!os\"9\u0011pCA\u0001\u0002\u0004\u0001\u0018a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/F\u0001}!\u0011i\u0018\u0011A;\u000e\u0003yT!a \u0012\u0002\u0015\r|G\u000e\\3di&|g.C\u0002\u0002\u0004y\u0014\u0001\"\u0013;fe\u0006$xN]\u0001\tG\u0006tW)];bYR!\u0011\u0011BA\b!\r\t\u00131B\u0005\u0004\u0003\u001b\u0011#a\u0002\"p_2,\u0017M\u001c\u0005\bs6\t\t\u00111\u0001v\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\u0007\u001d\f)\u0002C\u0004z\u001d\u0005\u0005\t\u0019\u00019\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012aZ\u0001\f\u0015N|g\u000eR3dS6\fG\u000e\u0005\u0002\u001e#M)\u0011#!\t\u0002.A1\u00111EA\u0015i}j!!!\n\u000b\u0007\u0005\u001d\"%A\u0004sk:$\u0018.\\3\n\t\u0005-\u0012Q\u0005\u0002\u0012\u0003\n\u001cHO]1di\u001a+hn\u0019;j_:\f\u0004\u0003BA\u0018\u0003ki!!!\r\u000b\u0007\u0005M2.\u0001\u0002j_&\u0019\u0001\'!\r\u0015\u0005\u0005u\u0011!B1qa2LHcA \u0002>!)!\u0007\u0006a\u0001i\u00059QO\\1qa2LH\u0003BA\"\u0003\u000b\u00022!I%5\u0011!\t9%FA\u0001\u0002\u0004y\u0014a\u0001=%a\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011Q\n\t\u0004Q\u0006=\u0013bAA)S\n1qJ\u00196fGR\u0004"
    )
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 00 00 11 00 6F 01 2E 00 01 47 00 BA 00 01 2D
   00 20 00 01 31 00 36 00 00 C5 00 C6 01 00 7B 00
   7C 00 01 35 00 BE 00 01 36 00 9C 00 01 49 00 DE
   00 00 2D 00 2E 00 01 3D 00 2E 00 01 32 00 36 00
   00 0D 00 3A 00 00 39 00 3A 01 00 5B 00 5C 00 00
   F9 00 36 00 00 0F 00 36 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
