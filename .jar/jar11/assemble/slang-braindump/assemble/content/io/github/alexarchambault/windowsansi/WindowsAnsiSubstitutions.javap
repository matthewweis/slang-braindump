Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/io/github/alexarchambault/windowsansi/WindowsAnsiSubstitutions.class
  Last modified May 29, 2022; size 1271 bytes
  SHA-256 checksum 9184bf656e76ce1250e67cc06fe242f7db739c079eb721c488a5a04e14bb14ec
  Compiled from "WindowsAnsiSubstitutions.java"
final class io.github.alexarchambault.windowsansi.WindowsAnsiSubstitutions
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #5                          // io/github/alexarchambault/windowsansi/WindowsAnsiSubstitutions
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 3, attributes: 3
Constant pool:
   #1 = Methodref          #6.#35         // java/lang/Object."<init>":()V
   #2 = Class              #36            // java/lang/RuntimeException
   #3 = String             #37            // Not available on this platform
   #4 = Methodref          #2.#38         // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #5 = Class              #39            // io/github/alexarchambault/windowsansi/WindowsAnsiSubstitutions
   #6 = Class              #40            // java/lang/Object
   #7 = Utf8               <init>
   #8 = Utf8               ()V
   #9 = Utf8               Code
  #10 = Utf8               LineNumberTable
  #11 = Utf8               terminalSize
  #12 = Class              #42            // io/github/alexarchambault/windowsansi/WindowsAnsi$Size
  #13 = Utf8               Size
  #14 = Utf8               InnerClasses
  #15 = Utf8               ()Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
  #16 = Utf8               RuntimeVisibleAnnotations
  #17 = Utf8               Lcom/oracle/svm/core/annotate/Substitute;
  #18 = Utf8               setup
  #19 = Utf8               ()Z
  #20 = Utf8               Exceptions
  #21 = Class              #43            // java/io/IOException
  #22 = Utf8               SourceFile
  #23 = Utf8               WindowsAnsiSubstitutions.java
  #24 = Utf8               Lcom/oracle/svm/core/annotate/TargetClass;
  #25 = Utf8               className
  #26 = Utf8               io.github.alexarchambault.windowsansi.WindowsAnsi
  #27 = Utf8               Lorg/graalvm/nativeimage/Platforms;
  #28 = Utf8               value
  #29 = Class              #45            // org/graalvm/nativeimage/Platform$DARWIN
  #30 = Utf8               DARWIN
  #31 = Utf8               Lorg/graalvm/nativeimage/Platform$DARWIN;
  #32 = Class              #46            // org/graalvm/nativeimage/Platform$LINUX
  #33 = Utf8               LINUX
  #34 = Utf8               Lorg/graalvm/nativeimage/Platform$LINUX;
  #35 = NameAndType        #7:#8          // "<init>":()V
  #36 = Utf8               java/lang/RuntimeException
  #37 = Utf8               Not available on this platform
  #38 = NameAndType        #7:#47         // "<init>":(Ljava/lang/String;)V
  #39 = Utf8               io/github/alexarchambault/windowsansi/WindowsAnsiSubstitutions
  #40 = Utf8               java/lang/Object
  #41 = Class              #48            // io/github/alexarchambault/windowsansi/WindowsAnsi
  #42 = Utf8               io/github/alexarchambault/windowsansi/WindowsAnsi$Size
  #43 = Utf8               java/io/IOException
  #44 = Class              #49            // org/graalvm/nativeimage/Platform
  #45 = Utf8               org/graalvm/nativeimage/Platform$DARWIN
  #46 = Utf8               org/graalvm/nativeimage/Platform$LINUX
  #47 = Utf8               (Ljava/lang/String;)V
  #48 = Utf8               io/github/alexarchambault/windowsansi/WindowsAnsi
  #49 = Utf8               org/graalvm/nativeimage/Platform
{
  io.github.alexarchambault.windowsansi.WindowsAnsiSubstitutions();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 12: 0

  public static io.github.alexarchambault.windowsansi.WindowsAnsi$Size terminalSize();
    descriptor: ()Lio/github/alexarchambault/windowsansi/WindowsAnsi$Size;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class java/lang/RuntimeException
         3: dup
         4: ldc           #3                  // String Not available on this platform
         6: invokespecial #4                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 16: 0
    RuntimeVisibleAnnotations:
      0: #17()
        com.oracle.svm.core.annotate.Substitute

  public static boolean setup() throws java.io.IOException;
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 21: 0
    Exceptions:
      throws java.io.IOException
    RuntimeVisibleAnnotations:
      0: #17()
        com.oracle.svm.core.annotate.Substitute
}
SourceFile: "WindowsAnsiSubstitutions.java"
RuntimeVisibleAnnotations:
  0: #24(#25=s#26)
    com.oracle.svm.core.annotate.TargetClass(
      className="io.github.alexarchambault.windowsansi.WindowsAnsi"
    )
  1: #27(#28=[c#31,c#34])
    org.graalvm.nativeimage.Platforms(
      value=[class Lorg/graalvm/nativeimage/Platform$DARWIN;,class Lorg/graalvm/nativeimage/Platform$LINUX;]
    )
InnerClasses:
  public static final #13= #12 of #41;    // Size=class io/github/alexarchambault/windowsansi/WindowsAnsi$Size of class io/github/alexarchambault/windowsansi/WindowsAnsi
  public static #30= #29 of #44;          // DARWIN=class org/graalvm/nativeimage/Platform$DARWIN of class org/graalvm/nativeimage/Platform
  public static #33= #32 of #44;          // LINUX=class org/graalvm/nativeimage/Platform$LINUX of class org/graalvm/nativeimage/Platform
