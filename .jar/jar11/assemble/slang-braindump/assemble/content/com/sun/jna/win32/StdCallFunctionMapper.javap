Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/sun/jna/win32/StdCallFunctionMapper.class
  Last modified May 29, 2022; size 2777 bytes
  SHA-256 checksum a2b46b65ae656fc91a96fa8475a51759cae89fee0235f617821d10f9952315a4
  Compiled from "StdCallFunctionMapper.java"
public class com.sun.jna.win32.StdCallFunctionMapper implements com.sun.jna.FunctionMapper
  minor version: 0
  major version: 50
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #27                         // com/sun/jna/win32/StdCallFunctionMapper
  super_class: #28                        // java/lang/Object
  interfaces: 1, fields: 0, methods: 3, attributes: 1
Constant pool:
    #1 = Methodref          #28.#75       // java/lang/Object."<init>":()V
    #2 = Class              #76           // com/sun/jna/NativeMapped
    #3 = Methodref          #77.#78       // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
    #4 = Methodref          #79.#80       // com/sun/jna/NativeMappedConverter.getInstance:(Ljava/lang/Class;)Lcom/sun/jna/NativeMappedConverter;
    #5 = Methodref          #79.#81       // com/sun/jna/NativeMappedConverter.nativeType:()Ljava/lang/Class;
    #6 = Methodref          #77.#82       // java/lang/Class.isArray:()Z
    #7 = Fieldref           #83.#84       // com/sun/jna/Native.POINTER_SIZE:I
    #8 = Methodref          #83.#85       // com/sun/jna/Native.getNativeSize:(Ljava/lang/Class;)I
    #9 = Class              #86           // java/lang/IllegalArgumentException
   #10 = Class              #87           // java/lang/StringBuilder
   #11 = Methodref          #10.#75       // java/lang/StringBuilder."<init>":()V
   #12 = String             #88           // Unknown native stack allocation size for
   #13 = Methodref          #10.#89       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #14 = Methodref          #10.#90       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #15 = Methodref          #10.#91       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #16 = Methodref          #9.#92        // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #17 = Methodref          #93.#94       // java/lang/reflect/Method.getName:()Ljava/lang/String;
   #18 = Methodref          #93.#95       // java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
   #19 = Methodref          #27.#96       // com/sun/jna/win32/StdCallFunctionMapper.getArgumentNativeStackSize:(Ljava/lang/Class;)I
   #20 = String             #97           // @
   #21 = Methodref          #10.#98       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #22 = Class              #99           // com/sun/jna/win32/StdCallLibrary
   #23 = Methodref          #100.#101     // com/sun/jna/NativeLibrary.getFunction:(Ljava/lang/String;I)Lcom/sun/jna/Function;
   #24 = Methodref          #102.#94      // com/sun/jna/Function.getName:()Ljava/lang/String;
   #25 = Class              #103          // java/lang/UnsatisfiedLinkError
   #26 = String             #104          // _
   #27 = Class              #105          // com/sun/jna/win32/StdCallFunctionMapper
   #28 = Class              #106          // java/lang/Object
   #29 = Class              #107          // com/sun/jna/FunctionMapper
   #30 = Utf8               <init>
   #31 = Utf8               ()V
   #32 = Utf8               Code
   #33 = Utf8               LineNumberTable
   #34 = Utf8               LocalVariableTable
   #35 = Utf8               this
   #36 = Utf8               Lcom/sun/jna/win32/StdCallFunctionMapper;
   #37 = Utf8               getArgumentNativeStackSize
   #38 = Utf8               (Ljava/lang/Class;)I
   #39 = Utf8               e
   #40 = Utf8               Ljava/lang/IllegalArgumentException;
   #41 = Utf8               cls
   #42 = Utf8               Ljava/lang/Class;
   #43 = Utf8               LocalVariableTypeTable
   #44 = Utf8               Ljava/lang/Class<*>;
   #45 = Utf8               StackMapTable
   #46 = Class              #86           // java/lang/IllegalArgumentException
   #47 = Utf8               Signature
   #48 = Utf8               (Ljava/lang/Class<*>;)I
   #49 = Utf8               getFunctionName
   #50 = Utf8               (Lcom/sun/jna/NativeLibrary;Ljava/lang/reflect/Method;)Ljava/lang/String;
   #51 = Utf8               func
   #52 = Utf8               Lcom/sun/jna/Function;
   #53 = Utf8               Ljava/lang/UnsatisfiedLinkError;
   #54 = Utf8               library
   #55 = Utf8               Lcom/sun/jna/NativeLibrary;
   #56 = Utf8               method
   #57 = Utf8               Ljava/lang/reflect/Method;
   #58 = Utf8               name
   #59 = Utf8               Ljava/lang/String;
   #60 = Utf8               pop
   #61 = Utf8               I
   #62 = Utf8               argTypes
   #63 = Utf8               [Ljava/lang/Class;
   #64 = Utf8               decorated
   #65 = Utf8               conv
   #66 = Utf8               [Ljava/lang/Class<*>;
   #67 = Class              #105          // com/sun/jna/win32/StdCallFunctionMapper
   #68 = Class              #108          // com/sun/jna/NativeLibrary
   #69 = Class              #109          // java/lang/reflect/Method
   #70 = Class              #110          // java/lang/String
   #71 = Class              #63           // "[Ljava/lang/Class;"
   #72 = Class              #103          // java/lang/UnsatisfiedLinkError
   #73 = Utf8               SourceFile
   #74 = Utf8               StdCallFunctionMapper.java
   #75 = NameAndType        #30:#31       // "<init>":()V
   #76 = Utf8               com/sun/jna/NativeMapped
   #77 = Class              #111          // java/lang/Class
   #78 = NameAndType        #112:#113     // isAssignableFrom:(Ljava/lang/Class;)Z
   #79 = Class              #114          // com/sun/jna/NativeMappedConverter
   #80 = NameAndType        #115:#116     // getInstance:(Ljava/lang/Class;)Lcom/sun/jna/NativeMappedConverter;
   #81 = NameAndType        #117:#118     // nativeType:()Ljava/lang/Class;
   #82 = NameAndType        #119:#120     // isArray:()Z
   #83 = Class              #121          // com/sun/jna/Native
   #84 = NameAndType        #122:#61      // POINTER_SIZE:I
   #85 = NameAndType        #123:#38      // getNativeSize:(Ljava/lang/Class;)I
   #86 = Utf8               java/lang/IllegalArgumentException
   #87 = Utf8               java/lang/StringBuilder
   #88 = Utf8               Unknown native stack allocation size for
   #89 = NameAndType        #124:#125     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #90 = NameAndType        #124:#126     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #91 = NameAndType        #127:#128     // toString:()Ljava/lang/String;
   #92 = NameAndType        #30:#129      // "<init>":(Ljava/lang/String;)V
   #93 = Class              #109          // java/lang/reflect/Method
   #94 = NameAndType        #130:#128     // getName:()Ljava/lang/String;
   #95 = NameAndType        #131:#132     // getParameterTypes:()[Ljava/lang/Class;
   #96 = NameAndType        #37:#38       // getArgumentNativeStackSize:(Ljava/lang/Class;)I
   #97 = Utf8               @
   #98 = NameAndType        #124:#133     // append:(I)Ljava/lang/StringBuilder;
   #99 = Utf8               com/sun/jna/win32/StdCallLibrary
  #100 = Class              #108          // com/sun/jna/NativeLibrary
  #101 = NameAndType        #134:#135     // getFunction:(Ljava/lang/String;I)Lcom/sun/jna/Function;
  #102 = Class              #136          // com/sun/jna/Function
  #103 = Utf8               java/lang/UnsatisfiedLinkError
  #104 = Utf8               _
  #105 = Utf8               com/sun/jna/win32/StdCallFunctionMapper
  #106 = Utf8               java/lang/Object
  #107 = Utf8               com/sun/jna/FunctionMapper
  #108 = Utf8               com/sun/jna/NativeLibrary
  #109 = Utf8               java/lang/reflect/Method
  #110 = Utf8               java/lang/String
  #111 = Utf8               java/lang/Class
  #112 = Utf8               isAssignableFrom
  #113 = Utf8               (Ljava/lang/Class;)Z
  #114 = Utf8               com/sun/jna/NativeMappedConverter
  #115 = Utf8               getInstance
  #116 = Utf8               (Ljava/lang/Class;)Lcom/sun/jna/NativeMappedConverter;
  #117 = Utf8               nativeType
  #118 = Utf8               ()Ljava/lang/Class;
  #119 = Utf8               isArray
  #120 = Utf8               ()Z
  #121 = Utf8               com/sun/jna/Native
  #122 = Utf8               POINTER_SIZE
  #123 = Utf8               getNativeSize
  #124 = Utf8               append
  #125 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #126 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #127 = Utf8               toString
  #128 = Utf8               ()Ljava/lang/String;
  #129 = Utf8               (Ljava/lang/String;)V
  #130 = Utf8               getName
  #131 = Utf8               getParameterTypes
  #132 = Utf8               ()[Ljava/lang/Class;
  #133 = Utf8               (I)Ljava/lang/StringBuilder;
  #134 = Utf8               getFunction
  #135 = Utf8               (Ljava/lang/String;I)Lcom/sun/jna/Function;
  #136 = Utf8               com/sun/jna/Function
{
  public com.sun.jna.win32.StdCallFunctionMapper();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/win32/StdCallFunctionMapper;

  protected int getArgumentNativeStackSize(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)I
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=3, args_size=2
         0: ldc           #2                  // class com/sun/jna/NativeMapped
         2: aload_1
         3: invokevirtual #3                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
         6: ifeq          17
         9: aload_1
        10: invokestatic  #4                  // Method com/sun/jna/NativeMappedConverter.getInstance:(Ljava/lang/Class;)Lcom/sun/jna/NativeMappedConverter;
        13: invokevirtual #5                  // Method com/sun/jna/NativeMappedConverter.nativeType:()Ljava/lang/Class;
        16: astore_1
        17: aload_1
        18: invokevirtual #6                  // Method java/lang/Class.isArray:()Z
        21: ifeq          28
        24: getstatic     #7                  // Field com/sun/jna/Native.POINTER_SIZE:I
        27: ireturn
        28: aload_1
        29: invokestatic  #8                  // Method com/sun/jna/Native.getNativeSize:(Ljava/lang/Class;)I
        32: ireturn
        33: astore_2
        34: new           #9                  // class java/lang/IllegalArgumentException
        37: dup
        38: new           #10                 // class java/lang/StringBuilder
        41: dup
        42: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
        45: ldc           #12                 // String Unknown native stack allocation size for
        47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: aload_1
        51: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        54: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        57: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        60: athrow
      Exception table:
         from    to  target type
            28    32    33   Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 48: 0
        line 49: 9
        line 51: 17
        line 52: 24
        line 55: 28
        line 56: 33
        line 57: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           34      27     2     e   Ljava/lang/IllegalArgumentException;
            0      61     0  this   Lcom/sun/jna/win32/StdCallFunctionMapper;
            0      61     1   cls   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      61     1   cls   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 3
        frame_type = 17 /* same */
        frame_type = 10 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
    Signature: #48                          // (Ljava/lang/Class<*>;)I

  public java.lang.String getFunctionName(com.sun.jna.NativeLibrary, java.lang.reflect.Method);
    descriptor: (Lcom/sun/jna/NativeLibrary;Ljava/lang/reflect/Method;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=3
         0: aload_2
         1: invokevirtual #17                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
         4: astore_3
         5: iconst_0
         6: istore        4
         8: aload_2
         9: invokevirtual #18                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
        12: astore        5
        14: aload         5
        16: astore        6
        18: aload         6
        20: arraylength
        21: istore        7
        23: iconst_0
        24: istore        8
        26: iload         8
        28: iload         7
        30: if_icmpge     57
        33: aload         6
        35: iload         8
        37: aaload
        38: astore        9
        40: iload         4
        42: aload_0
        43: aload         9
        45: invokevirtual #19                 // Method getArgumentNativeStackSize:(Ljava/lang/Class;)I
        48: iadd
        49: istore        4
        51: iinc          8, 1
        54: goto          26
        57: new           #10                 // class java/lang/StringBuilder
        60: dup
        61: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
        64: aload_3
        65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        68: ldc           #20                 // String @
        70: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        73: iload         4
        75: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        78: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        81: astore        6
        83: bipush        63
        85: istore        7
        87: aload_1
        88: aload         6
        90: iload         7
        92: invokevirtual #23                 // Method com/sun/jna/NativeLibrary.getFunction:(Ljava/lang/String;I)Lcom/sun/jna/Function;
        95: astore        8
        97: aload         8
        99: invokevirtual #24                 // Method com/sun/jna/Function.getName:()Ljava/lang/String;
       102: astore_3
       103: goto          147
       106: astore        8
       108: aload_1
       109: new           #10                 // class java/lang/StringBuilder
       112: dup
       113: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       116: ldc           #26                 // String _
       118: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       121: aload         6
       123: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       126: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       129: iload         7
       131: invokevirtual #23                 // Method com/sun/jna/NativeLibrary.getFunction:(Ljava/lang/String;I)Lcom/sun/jna/Function;
       134: astore        9
       136: aload         9
       138: invokevirtual #24                 // Method com/sun/jna/Function.getName:()Ljava/lang/String;
       141: astore_3
       142: goto          147
       145: astore        9
       147: aload_3
       148: areturn
      Exception table:
         from    to  target type
            87   103   106   Class java/lang/UnsatisfiedLinkError
           108   142   145   Class java/lang/UnsatisfiedLinkError
      LineNumberTable:
        line 70: 0
        line 71: 5
        line 72: 8
        line 73: 14
        line 74: 40
        line 73: 51
        line 77: 57
        line 78: 83
        line 80: 87
        line 81: 97
        line 90: 103
        line 82: 106
        line 85: 108
        line 86: 136
        line 89: 142
        line 87: 145
        line 92: 147
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      11     9   cls   Ljava/lang/Class;
           97       6     8  func   Lcom/sun/jna/Function;
          136       6     9  func   Lcom/sun/jna/Function;
          108      39     8     e   Ljava/lang/UnsatisfiedLinkError;
            0     149     0  this   Lcom/sun/jna/win32/StdCallFunctionMapper;
            0     149     1 library   Lcom/sun/jna/NativeLibrary;
            0     149     2 method   Ljava/lang/reflect/Method;
            5     144     3  name   Ljava/lang/String;
            8     141     4   pop   I
           14     135     5 argTypes   [Ljava/lang/Class;
           83      66     6 decorated   Ljava/lang/String;
           87      62     7  conv   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           40      11     9   cls   Ljava/lang/Class<*>;
           14     135     5 argTypes   [Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class com/sun/jna/win32/StdCallFunctionMapper, class com/sun/jna/NativeLibrary, class java/lang/reflect/Method, class java/lang/String, int, class "[Ljava/lang/Class;", class "[Ljava/lang/Class;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 30
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class com/sun/jna/win32/StdCallFunctionMapper, class com/sun/jna/NativeLibrary, class java/lang/reflect/Method, class java/lang/String, int, class "[Ljava/lang/Class;", class java/lang/String, int ]
          stack = [ class java/lang/UnsatisfiedLinkError ]
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class com/sun/jna/win32/StdCallFunctionMapper, class com/sun/jna/NativeLibrary, class java/lang/reflect/Method, class java/lang/String, int, class "[Ljava/lang/Class;", class java/lang/String, int, class java/lang/UnsatisfiedLinkError ]
          stack = [ class java/lang/UnsatisfiedLinkError ]
        frame_type = 250 /* chop */
          offset_delta = 1
}
SourceFile: "StdCallFunctionMapper.java"
