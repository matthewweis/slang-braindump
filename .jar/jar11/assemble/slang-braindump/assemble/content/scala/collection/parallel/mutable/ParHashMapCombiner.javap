Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/mutable/ParHashMapCombiner.class
  Last modified May 29, 2022; size 11518 bytes
  SHA-256 checksum 6b2e25b88d382d8d59f3920b51f7be9fffba17cc122429f53adb1cd2ea496794
  Compiled from "ParHashMap.scala"
public abstract class scala.collection.parallel.mutable.ParHashMapCombiner<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.parallel.BucketCombiner<scala.Tuple2<K, V>, scala.collection.parallel.mutable.ParHashMap<K, V>, scala.collection.parallel.mutable.ParHashMap$DefaultEntry<K, V>, scala.collection.parallel.mutable.ParHashMapCombiner<K, V>> implements scala.collection.mutable.HashTable$HashUtils<K>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/collection/parallel/mutable/ParHashMapCombiner
  super_class: #5                         // scala/collection/parallel/BucketCombiner
  interfaces: 1, fields: 3, methods: 19, attributes: 7
Constant pool:
    #1 = Utf8               scala/collection/parallel/mutable/ParHashMapCombiner
    #2 = Class              #1            // scala/collection/parallel/mutable/ParHashMapCombiner
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/parallel/BucketCombiner<Lscala/Tuple2<TK;TV;>;Lscala/collection/parallel/mutable/ParHashMap<TK;TV;>;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry<TK;TV;>;Lscala/collection/parallel/mutable/ParHashMapCombiner<TK;TV;>;>;Lscala/collection/mutable/HashTable$HashUtils<TK;>;
    #4 = Utf8               scala/collection/parallel/BucketCombiner
    #5 = Class              #4            // scala/collection/parallel/BucketCombiner
    #6 = Utf8               scala/collection/mutable/HashTable$HashUtils
    #7 = Class              #6            // scala/collection/mutable/HashTable$HashUtils
    #8 = Utf8               ParHashMap.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u0005EhA\u0002\u0017.\u0003\u0003iS\u0007\u0003\u0005p\u0001\t\u0015\r\u0011\"\u0003q\u0011!!\bA!A!\u0002\u0013\t\b\"B;\u0001\t\u00031\bb\u0002=\u0001\u0005\u0004%I\u0001\u001d\u0005\u0007s\u0002\u0001\u000b\u0011B9\t\u000fi\u0004!\u0019!C\u0005a\"11\u0010\u0001Q\u0001\nEDQ\u0001 \u0001\u0005\u0002uDq!a\u0001\u0001\t\u0003\t)A\u0002\u0004\u0002\b\u0001\u0001\u0011\u0011\u0002\u0005\u000b\u00033Q!\u0011!Q\u0001\n\u0005m\u0001BCA\u0019\u0015\t\u0005\t\u0015!\u0003\u00024!I\u00111\u0010\u0006\u0003\u0002\u0003\u0006I!\u001d\u0005\n\u0003{R!\u0011!Q\u0001\nEDa!\u001e\u0006\u0005\u0002\u0005}\u0004\u0002CA\u0002\u0015\u0001\u0007I\u0011\u00019\t\u0013\u0005%%\u00021A\u0005\u0002\u0005-\u0005bBAI\u0015\u0001\u0006K!\u001d\u0005\b\u0003\'SA\u0011AAK\u0011\u001d\t\tK\u0003C\u0005\u0003GCq!!,\u000b\t\u0003\ty\u000bC\u0004\u0002>*!\t%a0\t\u000f\u0005\u0015\'\u0002\"\u0001\u0002H\u001a9\u0011Q\u0007\u0001\u0001\u0001\u0005]\u0002\"CA#1\t\u0005\t\u0015!\u0003r\u0011%\t9\u0005\u0007B\u0001B\u0003%\u0011\u000fC\u0005\u0002Ja\u0011\t\u0011)A\u0005c\"1Q\u000f\u0007C\u0001\u0003\u0017Bq!a\u0015\u0019\t\u0003\t)\u0006C\u0004\u0002ba!\t!a\u0019\t\u000f\u0005=\u0004\u0004\"\u0001\u0002r\u001dA\u0011\u0011Z\u0017\t\u0002=\nYMB\u0004-[!\u0005q&!4\t\rU\fC\u0011AAh\u0011%\t\t.\tb\u0001\n\u0003i\u0003\u000fC\u0004\u0002T\u0006\u0002\u000b\u0011B9\t\u0013\u0005U\u0017E1A\u0005\u00025\u0002\bbBAlC\u0001\u0006I!\u001d\u0005\n\u00033\f#\u0019!C\u0001[ADq!a7\"A\u0003%\u0011\u000fC\u0005\u0002^\u0006\u0012\r\u0011\"\u0001.a\"9\u0011q\\\u0011!\u0002\u0013\t\bbBAqC\u0011\u0005\u00111\u001d\u0002\u0013!\u0006\u0014\b*Y:i\u001b\u0006\u00048i\\7cS:,\'O\u0003\u0002/_\u00059Q.\u001e;bE2,\'B\u0001\u00192\u0003!\u0001\u0018M]1mY\u0016d\'B\u0001\u001a4\u0003)\u0019w\u000e\u001c7fGRLwN\u001c\u0006\u0002i\u0005)1oY1mCV\u0019a\'\u0011\'\u0014\u0007\u00019T\r\u0005\u00049smr%\u000bZ\u0007\u0002_%\u0011!h\f\u0002\u000f\u0005V\u001c7.\u001a;D_6\u0014\u0017N\\3s!\u0011aThP&\u000e\u0003MJ!AP\u001a\u0003\rQ+\b\u000f\\33!\t\u0001\u0015\t\u0004\u0001\u0005\u000b\t\u0003!\u0019\u0001#\u0003\u0003-\u001b\u0001!\u0005\u0002F\u0011B\u0011AHR\u0005\u0003\u000fN\u0012qAT8uQ&tw\r\u0005\u0002=\u0013&\u0011!j\r\u0002\u0004\u0003:L\bC\u0001!M\t\u0015i\u0005A1\u0001E\u0005\u00051\u0006\u0003B(Q\u007f-k\u0011!L\u0005\u0003#6\u0012!\u0002U1s\u0011\u0006\u001c\b.T1q!\u0011\u0019\u0016mP&\u000f\u0005Q{fBA+_\u001d\t1VL\u0004\u0002X9:\u0011\u0001lW\u0007\u00023*\u0011!lQ\u0001\u0007yI|w\u000e\u001e \n\u0003QJ!AM\u001a\n\u0005A\n\u0014B\u0001\u00180\u0013\t\u0001W&\u0001\u0006QCJD\u0015m\u001d5NCBL!AY2\u0003\u0019\u0011+g-Y;mi\u0016sGO]=\u000b\u0005\u0001l\u0003\u0003B(\u0001\u007f-\u00032A\u001a7@\u001d\t9\u0017N\u0004\u0002WQ&\u0011a&M\u0005\u0003U.\f\u0011\u0002S1tQR\u000b\'\r\\3\u000b\u00059\n\u0014BA7o\u0005%A\u0015m\u001d5Vi&d7O\u0003\u0002kW\u0006yA/\u00192mK2{\u0017\r\u001a$bGR|\'/F\u0001r!\ta$/\u0003\u0002tg\t\u0019\u0011J\u001c;\u0002!Q\f\'\r\\3M_\u0006$g)Y2u_J\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002eo\")qn\u0001a\u0001c\u0006Qan\u001c8nCN\\G.\u001a8\u0002\u00179|g.\\1tW2,g\u000eI\u0001\ng\u0016,GM^1mk\u0016\f!b]3fIZ\fG.^3!\u0003\u0019\tG\rZ(oKR\u0011ap`\u0007\u0002\u0001!1\u0011\u0011\u0001\u0005A\u0002m\nA!\u001a7f[\u00061!/Z:vYR$\u0012A\u0014\u0002\u000b\r&dGN\u00117pG.\u001c8#\u0002\u0006\u0002\f\u0005E\u0001c\u0001\u001f\u0002\u000e%\u0019\u0011qB\u001a\u0003\r\u0005s\u0017PU3g!\u0019A\u00141C9\u0002\u0018%\u0019\u0011QC\u0018\u0003\tQ\u000b7o\u001b\t\u0003}*\tqAY;dW\u0016$8\u000fE\u0003=\u0003;\t\t#C\u0002\u0002 M\u0012Q!\u0011:sCf\u0004R!a\t\u0002,IsA!!\n\u0002(5\t1.C\u0002\u0002*-\fa\"\u00168s_2dW\r\u001a\"vM\u001a,\'/\u0003\u0003\u0002.\u0005=\"\u0001C+oe>dG.\u001a3\u000b\u0007\u0005%2.A\u0003uC\ndW\r\u0005\u0002\u007f1\ty\u0011\t\u001a3j]\u001eD\u0015m\u001d5UC\ndWmE\u0004\u0019\u0003\u0017\tI$a\u0010\u0011\u000f\u0005\u0015\u00121H L%&\u0019\u0011QH6\u0003\u0013!\u000b7\u000f\u001b+bE2,\u0007CB(\u0002B}Z%+C\u0002\u0002D5\u0012AbV5uQ\u000e{g\u000e^3oiN\f\u0001B\\;nK2,Wn]\u0001\u0003Y\u001a\f!bX:fK\u00124\u0018\r\\;f)!\t\u0019$!\u0014\u0002P\u0005E\u0003BBA#9\u0001\u0007\u0011\u000f\u0003\u0004\u0002Hq\u0001\r!\u001d\u0005\u0007\u0003\u0013b\u0002\u0019A9\u0002\u000fM,GoU5{KR!\u0011qKA/!\ra\u0014\u0011L\u0005\u0004\u00037\u001a$\u0001B+oSRDa!a\u0018\u001e\u0001\u0004\t\u0018AA:{\u0003-Ign]3si\u0016sGO]=\u0015\t\u0005\u0015\u00141\u000e\t\u0004y\u0005\u001d\u0014bAA5g\t9!i\\8mK\u0006t\u0007BBA7=\u0001\u0007!+A\u0001f\u00039\u0019\'/Z1uK:+w/\u00128uef$R!RA:\u0003oBa!!\u001e \u0001\u0004y\u0014aA6fs\"1\u0011\u0011P\u0010A\u0002-\u000b\u0011\u0001_\u0001\u0007_\u001a47/\u001a;\u0002\u000f!|w/\\1osRQ\u0011qCAA\u0003\u0007\u000b))a\"\t\u000f\u0005eq\u00021\u0001\u0002\u001c!9\u0011\u0011G\bA\u0002\u0005M\u0002BBA>\u001f\u0001\u0007\u0011\u000f\u0003\u0004\u0002~=\u0001\r!]\u0001\u000be\u0016\u001cX\u000f\u001c;`I\u0015\fH\u0003BA,\u0003\u001bC\u0001\"a$\u0012\u0003\u0003\u0005\r!]\u0001\u0004q\u0012\n\u0014a\u0002:fgVdG\u000fI\u0001\u0005Y\u0016\fg\r\u0006\u0003\u0002X\u0005]\u0005bBAM\'\u0001\u0007\u00111T\u0001\u0005aJ,g\u000f\u0005\u0003=\u0003;\u000b\u0018bAAPg\t1q\n\u001d;j_:\f\u0011BZ5mY\ncwnY6\u0015\u000bE\f)+!+\t\r\u0005\u001dF\u00031\u0001r\u0003\u0015\u0011Gn\\2l\u0011\u001d\tY\u000b\u0006a\u0001\u0003C\tQ!\u001a7f[N\fQa\u001d9mSR,\"!!-\u0011\r\u0005M\u0016\u0011XA\f\u001b\t\t)LC\u0002\u00028F\n\u0011\"[7nkR\f\'\r\\3\n\t\u0005m\u0016Q\u0017\u0002\u0005\u0019&\u001cH/A\u0003nKJ<W\r\u0006\u0003\u0002X\u0005\u0005\u0007bBAb-\u0001\u0007\u0011qC\u0001\u0005i\"\fG/\u0001\ntQ>,H\u000eZ*qY&$h)\u001e:uQ\u0016\u0014XCAA3\u0003I\u0001\u0016M\u001d%bg\"l\u0015\r]\"p[\nLg.\u001a:\u0011\u0005=\u000b3cA\u0011\u0002\fQ\u0011\u00111Z\u0001\u0011I&\u001c8M]5nS:\fg\u000e\u001e2jiN\f\u0011\u0003Z5tGJLW.\u001b8b]R\u0014\u0017\u000e^:!\u0003%qW/\u001c2m_\u000e\\7/\u0001\u0006ok6\u0014Gn\\2lg\u0002\n\u0001\u0003Z5tGJLW.\u001b8b]Rl\u0017m]6\u0002#\u0011L7o\u0019:j[&t\u0017M\u001c;nCN\\\u0007%A\u0007o_:l\u0017m]6mK:<G\u000f[\u0001\u000f]>tW.Y:lY\u0016tw\r\u001e5!\u0003\u0015\t\u0007\u000f\u001d7z+\u0019\t)/a;\u0002pV\u0011\u0011q\u001d\t\u0007\u001f\u0002\tI/!<\u0011\u0007\u0001\u000bY\u000fB\u0003CW\t\u0007A\tE\u0002A\u0003_$Q!T\u0016C\u0002\u0011\u0003
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               scala/collection/mutable/HashTable
   #18 = Class              #17           // scala/collection/mutable/HashTable
   #19 = Utf8               HashUtils
   #20 = Utf8               scala/collection/mutable/UnrolledBuffer$Unrolled
   #21 = Class              #20           // scala/collection/mutable/UnrolledBuffer$Unrolled
   #22 = Utf8               scala/collection/mutable/UnrolledBuffer
   #23 = Class              #22           // scala/collection/mutable/UnrolledBuffer
   #24 = Utf8               Unrolled
   #25 = Utf8               scala/collection/parallel/mutable/ParHashMap$DefaultEntry
   #26 = Class              #25           // scala/collection/parallel/mutable/ParHashMap$DefaultEntry
   #27 = Utf8               scala/collection/parallel/mutable/ParHashMap
   #28 = Class              #27           // scala/collection/parallel/mutable/ParHashMap
   #29 = Utf8               DefaultEntry
   #30 = Utf8               scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable
   #31 = Class              #30           // scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable
   #32 = Utf8               AddingHashTable
   #33 = Utf8               scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks
   #34 = Class              #33           // scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks
   #35 = Utf8               FillBlocks
   #36 = Utf8               scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$
   #37 = Class              #36           // scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$
   #38 = Utf8               newTable$1$
   #39 = Utf8               scala/collection/parallel/mutable/ParHashTable$Contents
   #40 = Class              #39           // scala/collection/parallel/mutable/ParHashTable$Contents
   #41 = Utf8               scala/collection/parallel/mutable/ParHashTable
   #42 = Class              #41           // scala/collection/parallel/mutable/ParHashTable
   #43 = Utf8               Contents
   #44 = Utf8               tableLoadFactor
   #45 = Utf8               I
   #46 = Utf8               nonmasklen
   #47 = Utf8               seedvalue
   #48 = Utf8               apply
   #49 = Utf8               ()Lscala/collection/parallel/mutable/ParHashMapCombiner;
   #50 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/parallel/mutable/ParHashMapCombiner<TK;TV;>;
   #51 = Utf8               scala/collection/parallel/mutable/ParHashMapCombiner$
   #52 = Class              #51           // scala/collection/parallel/mutable/ParHashMapCombiner$
   #53 = Utf8               MODULE$
   #54 = Utf8               Lscala/collection/parallel/mutable/ParHashMapCombiner$;
   #55 = NameAndType        #53:#54       // MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
   #56 = Fieldref           #52.#55       // scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
   #57 = NameAndType        #48:#49       // apply:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
   #58 = Methodref          #52.#57       // scala/collection/parallel/mutable/ParHashMapCombiner$.apply:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
   #59 = Utf8               sizeMapBucketBitSize
   #60 = Utf8               ()I
   #61 = Utf8               sizeMapBucketBitSize$
   #62 = Utf8               (Lscala/collection/mutable/HashTable$HashUtils;)I
   #63 = NameAndType        #61:#62       // sizeMapBucketBitSize$:(Lscala/collection/mutable/HashTable$HashUtils;)I
   #64 = InterfaceMethodref #7.#63        // scala/collection/mutable/HashTable$HashUtils.sizeMapBucketBitSize$:(Lscala/collection/mutable/HashTable$HashUtils;)I
   #65 = Utf8               this
   #66 = Utf8               Lscala/collection/parallel/mutable/ParHashMapCombiner;
   #67 = Utf8               sizeMapBucketSize
   #68 = Utf8               sizeMapBucketSize$
   #69 = NameAndType        #68:#62       // sizeMapBucketSize$:(Lscala/collection/mutable/HashTable$HashUtils;)I
   #70 = InterfaceMethodref #7.#69        // scala/collection/mutable/HashTable$HashUtils.sizeMapBucketSize$:(Lscala/collection/mutable/HashTable$HashUtils;)I
   #71 = Utf8               elemHashCode
   #72 = Utf8               (Ljava/lang/Object;)I
   #73 = Utf8               (TK;)I
   #74 = Utf8               key
   #75 = Utf8               elemHashCode$
   #76 = Utf8               (Lscala/collection/mutable/HashTable$HashUtils;Ljava/lang/Object;)I
   #77 = NameAndType        #75:#76       // elemHashCode$:(Lscala/collection/mutable/HashTable$HashUtils;Ljava/lang/Object;)I
   #78 = InterfaceMethodref #7.#77        // scala/collection/mutable/HashTable$HashUtils.elemHashCode$:(Lscala/collection/mutable/HashTable$HashUtils;Ljava/lang/Object;)I
   #79 = Utf8               Ljava/lang/Object;
   #80 = Utf8               improve
   #81 = Utf8               (II)I
   #82 = Utf8               hcode
   #83 = Utf8               seed
   #84 = Utf8               improve$
   #85 = Utf8               (Lscala/collection/mutable/HashTable$HashUtils;II)I
   #86 = NameAndType        #84:#85       // improve$:(Lscala/collection/mutable/HashTable$HashUtils;II)I
   #87 = InterfaceMethodref #7.#86        // scala/collection/mutable/HashTable$HashUtils.improve$:(Lscala/collection/mutable/HashTable$HashUtils;II)I
   #88 = NameAndType        #44:#45       // tableLoadFactor:I
   #89 = Fieldref           #2.#88        // scala/collection/parallel/mutable/ParHashMapCombiner.tableLoadFactor:I
   #90 = NameAndType        #46:#45       // nonmasklen:I
   #91 = Fieldref           #2.#90        // scala/collection/parallel/mutable/ParHashMapCombiner.nonmasklen:I
   #92 = NameAndType        #47:#45       // seedvalue:I
   #93 = Fieldref           #2.#92        // scala/collection/parallel/mutable/ParHashMapCombiner.seedvalue:I
   #94 = Utf8               addOne
   #95 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParHashMapCombiner;
   #96 = Utf8               (Lscala/Tuple2<TK;TV;>;)Lscala/collection/parallel/mutable/ParHashMapCombiner<TK;TV;>;
   #97 = Utf8               elem
   #98 = Utf8               sz
   #99 = NameAndType        #98:#60       // sz:()I
  #100 = Methodref          #2.#99        // scala/collection/parallel/mutable/ParHashMapCombiner.sz:()I
  #101 = Utf8               sz_$eq
  #102 = Utf8               (I)V
  #103 = NameAndType        #101:#102     // sz_$eq:(I)V
  #104 = Methodref          #2.#103       // scala/collection/parallel/mutable/ParHashMapCombiner.sz_$eq:(I)V
  #105 = Utf8               scala/Tuple2
  #106 = Class              #105          // scala/Tuple2
  #107 = Utf8               _1
  #108 = Utf8               ()Ljava/lang/Object;
  #109 = NameAndType        #107:#108     // _1:()Ljava/lang/Object;
  #110 = Methodref          #106.#109     // scala/Tuple2._1:()Ljava/lang/Object;
  #111 = NameAndType        #71:#72       // elemHashCode:(Ljava/lang/Object;)I
  #112 = Methodref          #2.#111       // scala/collection/parallel/mutable/ParHashMapCombiner.elemHashCode:(Ljava/lang/Object;)I
  #113 = NameAndType        #47:#60       // seedvalue:()I
  #114 = Methodref          #2.#113       // scala/collection/parallel/mutable/ParHashMapCombiner.seedvalue:()I
  #115 = NameAndType        #80:#81       // improve:(II)I
  #116 = Methodref          #2.#115       // scala/collection/parallel/mutable/ParHashMapCombiner.improve:(II)I
  #117 = NameAndType        #46:#60       // nonmasklen:()I
  #118 = Methodref          #2.#117       // scala/collection/parallel/mutable/ParHashMapCombiner.nonmasklen:()I
  #119 = Utf8               buckets
  #120 = Utf8               ()[Lscala/collection/mutable/UnrolledBuffer;
  #121 = NameAndType        #119:#120     // buckets:()[Lscala/collection/mutable/UnrolledBuffer;
  #122 = Methodref          #2.#121       // scala/collection/parallel/mutable/ParHashMapCombiner.buckets:()[Lscala/collection/mutable/UnrolledBuffer;
  #123 = Utf8               scala/reflect/ClassTag$
  #124 = Class              #123          // scala/reflect/ClassTag$
  #125 = Utf8               Lscala/reflect/ClassTag$;
  #126 = NameAndType        #53:#125      // MODULE$:Lscala/reflect/ClassTag$;
  #127 = Fieldref           #124.#126     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #128 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #129 = NameAndType        #48:#128      // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #130 = Methodref          #124.#129     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #131 = Utf8               <init>
  #132 = Utf8               (Lscala/reflect/ClassTag;)V
  #133 = NameAndType        #131:#132     // "<init>":(Lscala/reflect/ClassTag;)V
  #134 = Methodref          #23.#133      // scala/collection/mutable/UnrolledBuffer."<init>":(Lscala/reflect/ClassTag;)V
  #135 = Utf8               _2
  #136 = NameAndType        #135:#108     // _2:()Ljava/lang/Object;
  #137 = Methodref          #106.#136     // scala/Tuple2._2:()Ljava/lang/Object;
  #138 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #139 = NameAndType        #131:#138     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #140 = Methodref          #26.#139      // scala/collection/parallel/mutable/ParHashMap$DefaultEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #141 = Utf8               $plus$eq
  #142 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #143 = NameAndType        #141:#142     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #144 = Methodref          #23.#143      // scala/collection/mutable/UnrolledBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #145 = Utf8               hc
  #146 = Utf8               pos
  #147 = Utf8               Lscala/Tuple2;
  #148 = Utf8               result
  #149 = Utf8               ()Lscala/collection/parallel/mutable/ParHashMap;
  #150 = Utf8               ()Lscala/collection/parallel/mutable/ParHashMap<TK;TV;>;
  #151 = Utf8               size
  #152 = NameAndType        #151:#60      // size:()I
  #153 = Methodref          #2.#152       // scala/collection/parallel/mutable/ParHashMapCombiner.size:()I
  #154 = Utf8               numblocks
  #155 = NameAndType        #154:#60      // numblocks:()I
  #156 = Methodref          #52.#155      // scala/collection/parallel/mutable/ParHashMapCombiner$.numblocks:()I
  #157 = NameAndType        #67:#60       // sizeMapBucketSize:()I
  #158 = Methodref          #2.#157       // scala/collection/parallel/mutable/ParHashMapCombiner.sizeMapBucketSize:()I
  #159 = NameAndType        #44:#60       // tableLoadFactor:()I
  #160 = Methodref          #2.#159       // scala/collection/parallel/mutable/ParHashMapCombiner.tableLoadFactor:()I
  #161 = Utf8               (Lscala/collection/parallel/mutable/ParHashMapCombiner;III)V
  #162 = NameAndType        #131:#161     // "<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;III)V
  #163 = Methodref          #31.#162      // scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable."<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;III)V
  #164 = Utf8               scala/collection/ArrayOps$
  #165 = Class              #164          // scala/collection/ArrayOps$
  #166 = Utf8               Lscala/collection/ArrayOps$;
  #167 = NameAndType        #53:#166      // MODULE$:Lscala/collection/ArrayOps$;
  #168 = Fieldref           #165.#167     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #169 = Utf8               scala/Predef$
  #170 = Class              #169          // scala/Predef$
  #171 = Utf8               Lscala/Predef$;
  #172 = NameAndType        #53:#171      // MODULE$:Lscala/Predef$;
  #173 = Fieldref           #170.#172     // scala/Predef$.MODULE$:Lscala/Predef$;
  #174 = Utf8               [Ljava/lang/Object;
  #175 = Class              #174          // "[Ljava/lang/Object;"
  #176 = Utf8               refArrayOps
  #177 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #178 = NameAndType        #176:#177     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #179 = Methodref          #170.#178     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #180 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #181 = MethodType         #180          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #182 = Utf8               $anonfun$result$1
  #183 = Utf8               (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #184 = NameAndType        #182:#183     // $anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #185 = Methodref          #2.#184       // scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #186 = MethodHandle       6:#185        // REF_invokeStatic scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #187 = MethodType         #183          //  (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #188 = Integer            5
  #189 = Integer            1
  #190 = Utf8               java/lang/invoke/LambdaMetafactory
  #191 = Class              #190          // java/lang/invoke/LambdaMetafactory
  #192 = Utf8               altMetafactory
  #193 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #194 = NameAndType        #192:#193     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #195 = Methodref          #191.#194     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #196 = MethodHandle       6:#195        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #197 = Utf8               ()Lscala/Function1;
  #198 = NameAndType        #48:#197      // apply:()Lscala/Function1;
  #199 = InvokeDynamic      #0:#198       // #0:apply:()Lscala/Function1;
  #200 = Utf8               map$extension
  #201 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #202 = NameAndType        #200:#201     // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #203 = Methodref          #165.#202     // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #204 = Utf8               [Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #205 = Class              #204          // "[Lscala/collection/mutable/UnrolledBuffer$Unrolled;"
  #206 = Utf8               combinerTaskSupport
  #207 = Utf8               ()Lscala/collection/parallel/TaskSupport;
  #208 = NameAndType        #206:#207     // combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
  #209 = Methodref          #2.#208       // scala/collection/parallel/mutable/ParHashMapCombiner.combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
  #210 = Utf8               (Lscala/collection/parallel/mutable/ParHashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;II)V
  #211 = NameAndType        #131:#210     // "<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;II)V
  #212 = Methodref          #34.#211      // scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks."<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;II)V
  #213 = Utf8               scala/collection/parallel/TaskSupport
  #214 = Class              #213          // scala/collection/parallel/TaskSupport
  #215 = Utf8               executeAndWaitResult
  #216 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
  #217 = NameAndType        #215:#216     // executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
  #218 = InterfaceMethodref #214.#217     // scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
  #219 = Utf8               scala/runtime/BoxesRunTime
  #220 = Class              #219          // scala/runtime/BoxesRunTime
  #221 = Utf8               unboxToInt
  #222 = NameAndType        #221:#72      // unboxToInt:(Ljava/lang/Object;)I
  #223 = Methodref          #220.#222     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #224 = Utf8               setSize
  #225 = NameAndType        #224:#102     // setSize:(I)V
  #226 = Methodref          #31.#225      // scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable.setSize:(I)V
  #227 = Utf8               hashTableContents
  #228 = Utf8               ()Lscala/collection/parallel/mutable/ParHashTable$Contents;
  #229 = NameAndType        #227:#228     // hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
  #230 = Methodref          #31.#229      // scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable.hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
  #231 = Utf8               (Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
  #232 = NameAndType        #131:#231     // "<init>":(Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
  #233 = Methodref          #28.#232      // scala/collection/parallel/mutable/ParHashMap."<init>":(Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
  #234 = Utf8               scala/runtime/LazyRef
  #235 = Class              #234          // scala/runtime/LazyRef
  #236 = Utf8               ()V
  #237 = NameAndType        #131:#236     // "<init>":()V
  #238 = Methodref          #235.#237     // scala/runtime/LazyRef."<init>":()V
  #239 = Utf8               $anonfun$result$2$adapted
  #240 = Utf8               (Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  #241 = NameAndType        #239:#240     // $anonfun$result$2$adapted:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  #242 = Methodref          #2.#241       // scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$2$adapted:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  #243 = MethodHandle       6:#242        // REF_invokeStatic scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$2$adapted:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  #244 = Utf8               (Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  #245 = MethodType         #244          //  (Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  #246 = Utf8               (Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;)Lscala/Function1;
  #247 = NameAndType        #48:#246      // apply:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;)Lscala/Function1;
  #248 = InvokeDynamic      #1:#247       // #1:apply:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;)Lscala/Function1;
  #249 = Utf8               foreach
  #250 = Utf8               (Lscala/Function1;)V
  #251 = NameAndType        #249:#250     // foreach:(Lscala/Function1;)V
  #252 = Methodref          #23.#251      // scala/collection/mutable/UnrolledBuffer.foreach:(Lscala/Function1;)V
  #253 = Utf8               newTable$2
  #254 = Utf8               (Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
  #255 = NameAndType        #253:#254     // newTable$2:(Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
  #256 = Methodref          #2.#255       // scala/collection/parallel/mutable/ParHashMapCombiner.newTable$2:(Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
  #257 = Methodref          #37.#229      // scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$.hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
  #258 = Utf8               table
  #259 = Utf8               Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;
  #260 = Utf8               bucks
  #261 = Utf8               insertcount
  #262 = Utf8               c
  #263 = Utf8               Lscala/collection/parallel/mutable/ParHashTable$Contents;
  #264 = Utf8               newTable$module
  #265 = Utf8               Lscala/runtime/LazyRef;
  #266 = Utf8               i
  #267 = NameAndType        #148:#149     // result:()Lscala/collection/parallel/mutable/ParHashMap;
  #268 = Methodref          #2.#267       // scala/collection/parallel/mutable/ParHashMapCombiner.result:()Lscala/collection/parallel/mutable/ParHashMap;
  #269 = NameAndType        #94:#95       // addOne:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParHashMapCombiner;
  #270 = Methodref          #2.#269       // scala/collection/parallel/mutable/ParHashMapCombiner.addOne:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParHashMapCombiner;
  #271 = Utf8               b
  #272 = Utf8               headPtr
  #273 = Utf8               ()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #274 = NameAndType        #272:#273     // headPtr:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #275 = Methodref          #23.#274      // scala/collection/mutable/UnrolledBuffer.headPtr:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #276 = Utf8               Lscala/collection/mutable/UnrolledBuffer;
  #277 = Utf8               newTable$lzycompute$1
  #278 = Utf8               newTable$module$1
  #279 = Utf8               initialized
  #280 = Utf8               ()Z
  #281 = NameAndType        #279:#280     // initialized:()Z
  #282 = Methodref          #235.#281     // scala/runtime/LazyRef.initialized:()Z
  #283 = Utf8               value
  #284 = NameAndType        #283:#108     // value:()Ljava/lang/Object;
  #285 = Methodref          #235.#284     // scala/runtime/LazyRef.value:()Ljava/lang/Object;
  #286 = Utf8               (Lscala/collection/parallel/mutable/ParHashMapCombiner;)V
  #287 = NameAndType        #131:#286     // "<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;)V
  #288 = Methodref          #37.#287      // scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$."<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;)V
  #289 = Utf8               initialize
  #290 = NameAndType        #289:#180     // initialize:(Ljava/lang/Object;)Ljava/lang/Object;
  #291 = Methodref          #235.#290     // scala/runtime/LazyRef.initialize:(Ljava/lang/Object;)Ljava/lang/Object;
  #292 = Utf8               java/lang/Throwable
  #293 = Class              #292          // java/lang/Throwable
  #294 = Utf8               ()Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
  #295 = NameAndType        #277:#254     // newTable$lzycompute$1:(Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
  #296 = Methodref          #2.#295       // scala/collection/parallel/mutable/ParHashMapCombiner.newTable$lzycompute$1:(Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
  #297 = Utf8               $anonfun$result$2
  #298 = Utf8               (Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
  #299 = Utf8               $this
  #300 = Utf8               insertEntry
  #301 = Utf8               (Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
  #302 = NameAndType        #300:#301     // insertEntry:(Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
  #303 = Methodref          #37.#302      // scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$.insertEntry:(Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
  #304 = Utf8               Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;
  #305 = NameAndType        #131:#102     // "<init>":(I)V
  #306 = Methodref          #5.#305       // scala/collection/parallel/BucketCombiner."<init>":(I)V
  #307 = Utf8               $init$
  #308 = Utf8               (Lscala/collection/mutable/HashTable$HashUtils;)V
  #309 = NameAndType        #307:#308     // $init$:(Lscala/collection/mutable/HashTable$HashUtils;)V
  #310 = InterfaceMethodref #7.#309       // scala/collection/mutable/HashTable$HashUtils.$init$:(Lscala/collection/mutable/HashTable$HashUtils;)V
  #311 = Utf8               nonmasklength
  #312 = NameAndType        #311:#60      // nonmasklength:()I
  #313 = Methodref          #52.#312      // scala/collection/parallel/mutable/ParHashMapCombiner$.nonmasklength:()I
  #314 = NameAndType        #297:#298     // $anonfun$result$2:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
  #315 = Methodref          #2.#314       // scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$2:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
  #316 = Utf8               scala/runtime/BoxedUnit
  #317 = Class              #316          // scala/runtime/BoxedUnit
  #318 = Utf8               UNIT
  #319 = Utf8               Lscala/runtime/BoxedUnit;
  #320 = NameAndType        #318:#319     // UNIT:Lscala/runtime/BoxedUnit;
  #321 = Fieldref           #317.#320     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #322 = Utf8               $deserializeLambda$
  #323 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #324 = Utf8               scala/runtime/LambdaDeserialize
  #325 = Class              #324          // scala/runtime/LambdaDeserialize
  #326 = Utf8               bootstrap
  #327 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #328 = NameAndType        #326:#327     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #329 = Methodref          #325.#328     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #330 = MethodHandle       6:#329        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #331 = Utf8               lambdaDeserialize
  #332 = NameAndType        #331:#323     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #333 = InvokeDynamic      #2:#332       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #334 = Utf8               Code
  #335 = Utf8               Signature
  #336 = Utf8               LineNumberTable
  #337 = Utf8               LocalVariableTable
  #338 = Utf8               MethodParameters
  #339 = Utf8               StackMapTable
  #340 = Utf8               InnerClasses
  #341 = Utf8               SourceFile
  #342 = Utf8               RuntimeVisibleAnnotations
  #343 = Utf8               BootstrapMethods
  #344 = Utf8               ScalaInlineInfo
  #345 = Utf8               ScalaSig
{
  private final int tableLoadFactor;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int nonmasklen;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int seedvalue;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static <K extends java.lang.Object, V extends java.lang.Object> scala.collection.parallel.mutable.ParHashMapCombiner<K, V> apply();
    descriptor: ()Lscala/collection/parallel/mutable/ParHashMapCombiner;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #56                 // Field scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
         3: invokevirtual #58                 // Method scala/collection/parallel/mutable/ParHashMapCombiner$.apply:()Lscala/collection/parallel/mutable/ParHashMapCombiner;
         6: areturn
    Signature: #50                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/parallel/mutable/ParHashMapCombiner<TK;TV;>;

  public final int sizeMapBucketBitSize();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/collection/mutable/HashTable$HashUtils.sizeMapBucketBitSize$:(Lscala/collection/mutable/HashTable$HashUtils;)I
         4: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;

  public final int sizeMapBucketSize();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod scala/collection/mutable/HashTable$HashUtils.sizeMapBucketSize$:(Lscala/collection/mutable/HashTable$HashUtils;)I
         4: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;

  public int elemHashCode(K);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #78                 // InterfaceMethod scala/collection/mutable/HashTable$HashUtils.elemHashCode$:(Lscala/collection/mutable/HashTable$HashUtils;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0       6     1   key   Ljava/lang/Object;
    Signature: #73                          // (TK;)I
    MethodParameters:
      Name                           Flags
      key                            final

  public final int improve(int, int);
    descriptor: (II)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokestatic  #87                 // InterfaceMethod scala/collection/mutable/HashTable$HashUtils.improve$:(Lscala/collection/mutable/HashTable$HashUtils;II)I
         6: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0       7     1 hcode   I
            0       7     2  seed   I
    MethodParameters:
      Name                           Flags
      hcode                          final
      seed                           final

  private int tableLoadFactor();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field tableLoadFactor:I
         4: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;

  private int nonmasklen();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #91                 // Field nonmasklen:I
         4: ireturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;

  private int seedvalue();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #93                 // Field seedvalue:I
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;

  public scala.collection.parallel.mutable.ParHashMapCombiner<K, V> addOne(scala.Tuple2<K, V>);
    descriptor: (Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParHashMapCombiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #100                // Method sz:()I
         5: iconst_1
         6: iadd
         7: invokevirtual #104                // Method sz_$eq:(I)V
        10: aload_0
        11: aload_0
        12: aload_1
        13: invokevirtual #110                // Method scala/Tuple2._1:()Ljava/lang/Object;
        16: invokevirtual #112                // Method elemHashCode:(Ljava/lang/Object;)I
        19: aload_0
        20: invokespecial #114                // Method seedvalue:()I
        23: invokevirtual #116                // Method improve:(II)I
        26: istore_2
        27: iload_2
        28: aload_0
        29: invokespecial #118                // Method nonmasklen:()I
        32: iushr
        33: istore_3
        34: aload_0
        35: invokevirtual #122                // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        38: iload_3
        39: aaload
        40: ifnonnull     67
        43: aload_0
        44: invokevirtual #122                // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        47: iload_3
        48: new           #23                 // class scala/collection/mutable/UnrolledBuffer
        51: dup
        52: getstatic     #127                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        55: ldc           #26                 // class scala/collection/parallel/mutable/ParHashMap$DefaultEntry
        57: invokevirtual #130                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        60: invokespecial #134                // Method scala/collection/mutable/UnrolledBuffer."<init>":(Lscala/reflect/ClassTag;)V
        63: aastore
        64: goto          67
        67: aload_0
        68: invokevirtual #122                // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        71: iload_3
        72: aaload
        73: new           #26                 // class scala/collection/parallel/mutable/ParHashMap$DefaultEntry
        76: dup
        77: aload_1
        78: invokevirtual #110                // Method scala/Tuple2._1:()Ljava/lang/Object;
        81: aload_1
        82: invokevirtual #137                // Method scala/Tuple2._2:()Ljava/lang/Object;
        85: invokespecial #140                // Method scala/collection/parallel/mutable/ParHashMap$DefaultEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        88: invokevirtual #144                // Method scala/collection/mutable/UnrolledBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        91: pop
        92: aload_0
        93: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 67
          locals = [ int, int ]
      LineNumberTable:
        line 175: 0
        line 176: 10
        line 177: 27
        line 178: 34
        line 180: 43
        line 183: 67
        line 184: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      66     2    hc   I
           34      59     3   pos   I
            0      94     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0      94     1  elem   Lscala/Tuple2;
    Signature: #96                          // (Lscala/Tuple2<TK;TV;>;)Lscala/collection/parallel/mutable/ParHashMapCombiner<TK;TV;>;
    MethodParameters:
      Name                           Flags
      elem                           final

  public scala.collection.parallel.mutable.ParHashMap<K, V> result();
    descriptor: ()Lscala/collection/parallel/mutable/ParHashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=1
         0: aload_0
         1: invokevirtual #153                // Method size:()I
         4: getstatic     #56                 // Field scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
         7: invokevirtual #156                // Method scala/collection/parallel/mutable/ParHashMapCombiner$.numblocks:()I
        10: aload_0
        11: invokevirtual #158                // Method sizeMapBucketSize:()I
        14: imul
        15: if_icmplt     124
        18: new           #31                 // class scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable
        21: dup
        22: aload_0
        23: aload_0
        24: invokevirtual #153                // Method size:()I
        27: aload_0
        28: invokespecial #160                // Method tableLoadFactor:()I
        31: aload_0
        32: invokespecial #114                // Method seedvalue:()I
        35: invokespecial #163                // Method scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable."<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;III)V
        38: astore_1
        39: getstatic     #168                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        42: getstatic     #173                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        45: aload_0
        46: invokevirtual #122                // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        49: checkcast     #175                // class "[Ljava/lang/Object;"
        52: invokevirtual #179                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        55: invokedynamic #199,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        60: getstatic     #127                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        63: ldc           #21                 // class scala/collection/mutable/UnrolledBuffer$Unrolled
        65: invokevirtual #130                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        68: invokevirtual #203                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        71: checkcast     #205                // class "[Lscala/collection/mutable/UnrolledBuffer$Unrolled;"
        74: astore_2
        75: aload_0
        76: invokevirtual #209                // Method combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
        79: new           #34                 // class scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks
        82: dup
        83: aload_0
        84: aload_2
        85: aload_1
        86: iconst_0
        87: aload_2
        88: arraylength
        89: invokespecial #212                // Method scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks."<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;II)V
        92: invokeinterface #218,  2          // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
        97: invokestatic  #223                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       100: istore_3
       101: aload_1
       102: iload_3
       103: invokevirtual #226                // Method scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable.setSize:(I)V
       106: aload_1
       107: invokevirtual #230                // Method scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable.hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
       110: astore        4
       112: new           #28                 // class scala/collection/parallel/mutable/ParHashMap
       115: dup
       116: aload         4
       118: invokespecial #233                // Method scala/collection/parallel/mutable/ParHashMap."<init>":(Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
       121: goto          203
       124: new           #235                // class scala/runtime/LazyRef
       127: dup
       128: invokespecial #238                // Method scala/runtime/LazyRef."<init>":()V
       131: astore        5
       133: iconst_0
       134: istore        6
       136: iload         6
       138: getstatic     #56                 // Field scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
       141: invokevirtual #156                // Method scala/collection/parallel/mutable/ParHashMapCombiner$.numblocks:()I
       144: if_icmpge     187
       147: aload_0
       148: invokevirtual #122                // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
       151: iload         6
       153: aaload
       154: ifnull        178
       157: aload_0
       158: invokevirtual #122                // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
       161: iload         6
       163: aaload
       164: aload_0
       165: aload         5
       167: invokedynamic #248,  0            // InvokeDynamic #1:apply:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;)Lscala/Function1;
       172: invokevirtual #252                // Method scala/collection/mutable/UnrolledBuffer.foreach:(Lscala/Function1;)V
       175: goto          178
       178: iload         6
       180: iconst_1
       181: iadd
       182: istore        6
       184: goto          136
       187: new           #28                 // class scala/collection/parallel/mutable/ParHashMap
       190: dup
       191: aload_0
       192: aload         5
       194: invokespecial #256                // Method newTable$2:(Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
       197: invokevirtual #257                // Method scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$.hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
       200: invokespecial #233                // Method scala/collection/parallel/mutable/ParHashMap."<init>":(Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
       203: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 251 /* same_frame_extended */
          offset_delta = 124
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/parallel/mutable/ParHashMapCombiner, top, top, top, top, class scala/runtime/LazyRef, int ]
          stack = []
        frame_type = 41 /* same */
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class scala/collection/parallel/mutable/ParHashMapCombiner ]
          stack = [ class scala/collection/parallel/mutable/ParHashMap ]
      LineNumberTable:
        line 187: 0
        line 189: 18
        line 190: 39
        line 191: 75
        line 192: 101
        line 194: 106
        line 195: 112
        line 199: 124
        line 205: 133
        line 206: 136
        line 207: 147
        line 208: 157
        line 210: 178
        line 206: 184
        line 212: 187
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      82     1 table   Lscala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable;
           75      46     2 bucks   [Lscala/collection/mutable/UnrolledBuffer$Unrolled;
          101      20     3 insertcount   I
          112       9     4     c   Lscala/collection/parallel/mutable/ParHashTable$Contents;
          133      70     5 newTable$module   Lscala/runtime/LazyRef;
          136      67     6     i   I
            0     204     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
    Signature: #150                         // ()Lscala/collection/parallel/mutable/ParHashMap<TK;TV;>;

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #268                // Method result:()Lscala/collection/parallel/mutable/ParHashMap;
         4: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;

  public scala.collection.mutable.Growable addOne(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #106                // class scala/Tuple2
         5: invokevirtual #270                // Method addOne:(Lscala/Tuple2;)Lscala/collection/parallel/mutable/ParHashMapCombiner;
         8: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0       9     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static final scala.collection.mutable.UnrolledBuffer$Unrolled $anonfun$result$1(scala.collection.mutable.UnrolledBuffer);
    descriptor: (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnull        11
         4: aload_0
         5: invokevirtual #275                // Method scala/collection/mutable/UnrolledBuffer.headPtr:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
         8: goto          12
        11: aconst_null
        12: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class scala/collection/mutable/UnrolledBuffer$Unrolled ]
      LineNumberTable:
        line 190: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0     b   Lscala/collection/mutable/UnrolledBuffer;
    MethodParameters:
      Name                           Flags
      b                              final

  private static final scala.collection.parallel.mutable.ParHashMapCombiner$newTable$1$ newTable$lzycompute$1(scala.runtime.LazyRef);
    descriptor: (Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
    flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: invokevirtual #282                // Method scala/runtime/LazyRef.initialized:()Z
         8: ifeq          21
        11: aload_0
        12: invokevirtual #285                // Method scala/runtime/LazyRef.value:()Ljava/lang/Object;
        15: checkcast     #37                 // class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$
        18: goto          36
        21: aload_0
        22: new           #37                 // class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$
        25: dup
        26: aconst_null
        27: invokespecial #288                // Method scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$."<init>":(Lscala/collection/parallel/mutable/ParHashMapCombiner;)V
        30: invokevirtual #291                // Method scala/runtime/LazyRef.initialize:(Ljava/lang/Object;)Ljava/lang/Object;
        33: checkcast     #37                 // class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$
        36: astore_2
        37: aload_1
        38: monitorexit
        39: aload_2
        40: goto          46
        43: aload_1
        44: monitorexit
        45: athrow
        46: areturn
      Exception table:
         from    to  target type
             4    37    43   any
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ class scala/runtime/LazyRef ]
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$ ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/runtime/LazyRef, class scala/runtime/LazyRef, class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$ ]
          stack = [ class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$ ]
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0 newTable$module$1   Lscala/runtime/LazyRef;
    MethodParameters:
      Name                           Flags
      newTable$module$1              final

  private final scala.collection.parallel.mutable.ParHashMapCombiner$newTable$1$ newTable$2();
    descriptor: (Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #282                // Method scala/runtime/LazyRef.initialized:()Z
         4: ifeq          17
         7: aload_1
         8: invokevirtual #285                // Method scala/runtime/LazyRef.value:()Ljava/lang/Object;
        11: checkcast     #37                 // class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$
        14: goto          21
        17: aload_1
        18: invokestatic  #296                // Method newTable$lzycompute$1:(Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
        21: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$ ]
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0      22     1 newTable$module$1   Lscala/runtime/LazyRef;
    Signature: #294                         // ()Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
    MethodParameters:
      Name                           Flags
      newTable$module$1              final

  public static final void $anonfun$result$2(scala.collection.parallel.mutable.ParHashMapCombiner, scala.runtime.LazyRef, scala.collection.parallel.mutable.ParHashMap$DefaultEntry);
    descriptor: (Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokespecial #256                // Method newTable$2:(Lscala/runtime/LazyRef;)Lscala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$;
         5: aload_2
         6: invokevirtual #303                // Method scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$.insertEntry:(Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
         9: return
      LineNumberTable:
        line 208: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0      10     1 newTable$module$1   Lscala/runtime/LazyRef;
            0      10     2  elem   Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      newTable$module$1              final
      elem                           final

  public scala.collection.parallel.mutable.ParHashMapCombiner(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #89                 // Field tableLoadFactor:I
         5: aload_0
         6: getstatic     #56                 // Field scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
         9: invokevirtual #156                // Method scala/collection/parallel/mutable/ParHashMapCombiner$.numblocks:()I
        12: invokespecial #306                // Method scala/collection/parallel/BucketCombiner."<init>":(I)V
        15: aload_0
        16: invokestatic  #310                // InterfaceMethod scala/collection/mutable/HashTable$HashUtils.$init$:(Lscala/collection/mutable/HashTable$HashUtils;)V
        19: aload_0
        20: getstatic     #56                 // Field scala/collection/parallel/mutable/ParHashMapCombiner$.MODULE$:Lscala/collection/parallel/mutable/ParHashMapCombiner$;
        23: invokevirtual #313                // Method scala/collection/parallel/mutable/ParHashMapCombiner$.nonmasklength:()I
        26: putfield      #91                 // Field nonmasklen:I
        29: aload_0
        30: bipush        27
        32: putfield      #93                 // Field seedvalue:I
        35: return
      LineNumberTable:
        line 167: 0
        line 168: 5
        line 171: 19
        line 172: 29
        line 167: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0      36     1 tableLoadFactor   I
    MethodParameters:
      Name                           Flags
      tableLoadFactor                final

  public static final java.lang.Object $anonfun$result$2$adapted(scala.collection.parallel.mutable.ParHashMapCombiner, scala.runtime.LazyRef, scala.collection.parallel.mutable.ParHashMap$DefaultEntry);
    descriptor: (Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #315                // Method $anonfun$result$2:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)V
         6: getstatic     #321                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 208: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lscala/collection/parallel/mutable/ParHashMapCombiner;
            0      10     1 newTable$module$1   Lscala/runtime/LazyRef;
            0      10     2  elem   Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;
    MethodParameters:
      Name                           Flags
      $this                          final
      newTable$module$1              final
      elem                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #333,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #19= #7 of #18;           // HashUtils=class scala/collection/mutable/HashTable$HashUtils of class scala/collection/mutable/HashTable
  public static #24= #21 of #23;          // Unrolled=class scala/collection/mutable/UnrolledBuffer$Unrolled of class scala/collection/mutable/UnrolledBuffer
  public static final #29= #26 of #28;    // DefaultEntry=class scala/collection/parallel/mutable/ParHashMap$DefaultEntry of class scala/collection/parallel/mutable/ParHashMap
  public #32= #31 of #2;                  // AddingHashTable=class scala/collection/parallel/mutable/ParHashMapCombiner$AddingHashTable of class scala/collection/parallel/mutable/ParHashMapCombiner
  public #35= #34 of #2;                  // FillBlocks=class scala/collection/parallel/mutable/ParHashMapCombiner$FillBlocks of class scala/collection/parallel/mutable/ParHashMapCombiner
  public #38= #37;                        // newTable$1$=class scala/collection/parallel/mutable/ParHashMapCombiner$newTable$1$
  public static #43= #40 of #42;          // Contents=class scala/collection/parallel/mutable/ParHashTable$Contents of class scala/collection/parallel/mutable/ParHashTable
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/parallel/BucketCombiner<Lscala/Tuple2<TK;TV;>;Lscala/collection/parallel/mutable/ParHashMap<TK;TV;>;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry<TK;TV;>;Lscala/collection/parallel/mutable/ParHashMapCombiner<TK;TV;>;>;Lscala/collection/mutable/HashTable$HashUtils<TK;>;
SourceFile: "ParHashMap.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005EhA\u0002\u0017.\u0003\u0003iS\u0007\u0003\u0005p\u0001\t\u0015\r\u0011\"\u0003q\u0011!!\bA!A!\u0002\u0013\t\b\"B;\u0001\t\u00031\bb\u0002=\u0001\u0005\u0004%I\u0001\u001d\u0005\u0007s\u0002\u0001\u000b\u0011B9\t\u000fi\u0004!\u0019!C\u0005a\"11\u0010\u0001Q\u0001\nEDQ\u0001 \u0001\u0005\u0002uDq!a\u0001\u0001\t\u0003\t)A\u0002\u0004\u0002\b\u0001\u0001\u0011\u0011\u0002\u0005\u000b\u00033Q!\u0011!Q\u0001\n\u0005m\u0001BCA\u0019\u0015\t\u0005\t\u0015!\u0003\u00024!I\u00111\u0010\u0006\u0003\u0002\u0003\u0006I!\u001d\u0005\n\u0003{R!\u0011!Q\u0001\nEDa!\u001e\u0006\u0005\u0002\u0005}\u0004\u0002CA\u0002\u0015\u0001\u0007I\u0011\u00019\t\u0013\u0005%%\u00021A\u0005\u0002\u0005-\u0005bBAI\u0015\u0001\u0006K!\u001d\u0005\b\u0003\'SA\u0011AAK\u0011\u001d\t\tK\u0003C\u0005\u0003GCq!!,\u000b\t\u0003\ty\u000bC\u0004\u0002>*!\t%a0\t\u000f\u0005\u0015\'\u0002\"\u0001\u0002H\u001a9\u0011Q\u0007\u0001\u0001\u0001\u0005]\u0002\"CA#1\t\u0005\t\u0015!\u0003r\u0011%\t9\u0005\u0007B\u0001B\u0003%\u0011\u000fC\u0005\u0002Ja\u0011\t\u0011)A\u0005c\"1Q\u000f\u0007C\u0001\u0003\u0017Bq!a\u0015\u0019\t\u0003\t)\u0006C\u0004\u0002ba!\t!a\u0019\t\u000f\u0005=\u0004\u0004\"\u0001\u0002r\u001dA\u0011\u0011Z\u0017\t\u0002=\nYMB\u0004-[!\u0005q&!4\t\rU\fC\u0011AAh\u0011%\t\t.\tb\u0001\n\u0003i\u0003\u000fC\u0004\u0002T\u0006\u0002\u000b\u0011B9\t\u0013\u0005U\u0017E1A\u0005\u00025\u0002\bbBAlC\u0001\u0006I!\u001d\u0005\n\u00033\f#\u0019!C\u0001[ADq!a7\"A\u0003%\u0011\u000fC\u0005\u0002^\u0006\u0012\r\u0011\"\u0001.a\"9\u0011q\\\u0011!\u0002\u0013\t\bbBAqC\u0011\u0005\u00111\u001d\u0002\u0013!\u0006\u0014\b*Y:i\u001b\u0006\u00048i\\7cS:,\'O\u0003\u0002/_\u00059Q.\u001e;bE2,\'B\u0001\u00192\u0003!\u0001\u0018M]1mY\u0016d\'B\u0001\u001a4\u0003)\u0019w\u000e\u001c7fGRLwN\u001c\u0006\u0002i\u0005)1oY1mCV\u0019a\'\u0011\'\u0014\u0007\u00019T\r\u0005\u00049smr%\u000bZ\u0007\u0002_%\u0011!h\f\u0002\u000f\u0005V\u001c7.\u001a;D_6\u0014\u0017N\\3s!\u0011aThP&\u000e\u0003MJ!AP\u001a\u0003\rQ+\b\u000f\\33!\t\u0001\u0015\t\u0004\u0001\u0005\u000b\t\u0003!\u0019\u0001#\u0003\u0003-\u001b\u0001!\u0005\u0002F\u0011B\u0011AHR\u0005\u0003\u000fN\u0012qAT8uQ&tw\r\u0005\u0002=\u0013&\u0011!j\r\u0002\u0004\u0003:L\bC\u0001!M\t\u0015i\u0005A1\u0001E\u0005\u00051\u0006\u0003B(Q\u007f-k\u0011!L\u0005\u0003#6\u0012!\u0002U1s\u0011\u0006\u001c\b.T1q!\u0011\u0019\u0016mP&\u000f\u0005Q{fBA+_\u001d\t1VL\u0004\u0002X9:\u0011\u0001lW\u0007\u00023*\u0011!lQ\u0001\u0007yI|w\u000e\u001e \n\u0003QJ!AM\u001a\n\u0005A\n\u0014B\u0001\u00180\u0013\t\u0001W&\u0001\u0006QCJD\u0015m\u001d5NCBL!AY2\u0003\u0019\u0011+g-Y;mi\u0016sGO]=\u000b\u0005\u0001l\u0003\u0003B(\u0001\u007f-\u00032A\u001a7@\u001d\t9\u0017N\u0004\u0002WQ&\u0011a&M\u0005\u0003U.\f\u0011\u0002S1tQR\u000b\'\r\\3\u000b\u00059\n\u0014BA7o\u0005%A\u0015m\u001d5Vi&d7O\u0003\u0002kW\u0006yA/\u00192mK2{\u0017\r\u001a$bGR|\'/F\u0001r!\ta$/\u0003\u0002tg\t\u0019\u0011J\u001c;\u0002!Q\f\'\r\\3M_\u0006$g)Y2u_J\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002eo\")qn\u0001a\u0001c\u0006Qan\u001c8nCN\\G.\u001a8\u0002\u00179|g.\\1tW2,g\u000eI\u0001\ng\u0016,GM^1mk\u0016\f!b]3fIZ\fG.^3!\u0003\u0019\tG\rZ(oKR\u0011ap`\u0007\u0002\u0001!1\u0011\u0011\u0001\u0005A\u0002m\nA!\u001a7f[\u00061!/Z:vYR$\u0012A\u0014\u0002\u000b\r&dGN\u00117pG.\u001c8#\u0002\u0006\u0002\f\u0005E\u0001c\u0001\u001f\u0002\u000e%\u0019\u0011qB\u001a\u0003\r\u0005s\u0017PU3g!\u0019A\u00141C9\u0002\u0018%\u0019\u0011QC\u0018\u0003\tQ\u000b7o\u001b\t\u0003}*\tqAY;dW\u0016$8\u000fE\u0003=\u0003;\t\t#C\u0002\u0002 M\u0012Q!\u0011:sCf\u0004R!a\t\u0002,IsA!!\n\u0002(5\t1.C\u0002\u0002*-\fa\"\u00168s_2dW\r\u001a\"vM\u001a,\'/\u0003\u0003\u0002.\u0005=\"\u0001C+oe>dG.\u001a3\u000b\u0007\u0005%2.A\u0003uC\ndW\r\u0005\u0002\u007f1\ty\u0011\t\u001a3j]\u001eD\u0015m\u001d5UC\ndWmE\u0004\u0019\u0003\u0017\tI$a\u0010\u0011\u000f\u0005\u0015\u00121H L%&\u0019\u0011QH6\u0003\u0013!\u000b7\u000f\u001b+bE2,\u0007CB(\u0002B}Z%+C\u0002\u0002D5\u0012AbV5uQ\u000e{g\u000e^3oiN\f\u0001B\\;nK2,Wn]\u0001\u0003Y\u001a\f!bX:fK\u00124\u0018\r\\;f)!\t\u0019$!\u0014\u0002P\u0005E\u0003BBA#9\u0001\u0007\u0011\u000f\u0003\u0004\u0002Hq\u0001\r!\u001d\u0005\u0007\u0003\u0013b\u0002\u0019A9\u0002\u000fM,GoU5{KR!\u0011qKA/!\ra\u0014\u0011L\u0005\u0004\u00037\u001a$\u0001B+oSRDa!a\u0018\u001e\u0001\u0004\t\u0018AA:{\u0003-Ign]3si\u0016sGO]=\u0015\t\u0005\u0015\u00141\u000e\t\u0004y\u0005\u001d\u0014bAA5g\t9!i\\8mK\u0006t\u0007BBA7=\u0001\u0007!+A\u0001f\u00039\u0019\'/Z1uK:+w/\u00128uef$R!RA:\u0003oBa!!\u001e \u0001\u0004y\u0014aA6fs\"1\u0011\u0011P\u0010A\u0002-\u000b\u0011\u0001_\u0001\u0007_\u001a47/\u001a;\u0002\u000f!|w/\\1osRQ\u0011qCAA\u0003\u0007\u000b))a\"\t\u000f\u0005eq\u00021\u0001\u0002\u001c!9\u0011\u0011G\bA\u0002\u0005M\u0002BBA>\u001f\u0001\u0007\u0011\u000f\u0003\u0004\u0002~=\u0001\r!]\u0001\u000be\u0016\u001cX\u000f\u001c;`I\u0015\fH\u0003BA,\u0003\u001bC\u0001\"a$\u0012\u0003\u0003\u0005\r!]\u0001\u0004q\u0012\n\u0014a\u0002:fgVdG\u000fI\u0001\u0005Y\u0016\fg\r\u0006\u0003\u0002X\u0005]\u0005bBAM\'\u0001\u0007\u00111T\u0001\u0005aJ,g\u000f\u0005\u0003=\u0003;\u000b\u0018bAAPg\t1q\n\u001d;j_:\f\u0011BZ5mY\ncwnY6\u0015\u000bE\f)+!+\t\r\u0005\u001dF\u00031\u0001r\u0003\u0015\u0011Gn\\2l\u0011\u001d\tY\u000b\u0006a\u0001\u0003C\tQ!\u001a7f[N\fQa\u001d9mSR,\"!!-\u0011\r\u0005M\u0016\u0011XA\f\u001b\t\t)LC\u0002\u00028F\n\u0011\"[7nkR\f\'\r\\3\n\t\u0005m\u0016Q\u0017\u0002\u0005\u0019&\u001cH/A\u0003nKJ<W\r\u0006\u0003\u0002X\u0005\u0005\u0007bBAb-\u0001\u0007\u0011qC\u0001\u0005i\"\fG/\u0001\ntQ>,H\u000eZ*qY&$h)\u001e:uQ\u0016\u0014XCAA3\u0003I\u0001\u0016M\u001d%bg\"l\u0015\r]\"p[\nLg.\u001a:\u0011\u0005=\u000b3cA\u0011\u0002\fQ\u0011\u00111Z\u0001\u0011I&\u001c8M]5nS:\fg\u000e\u001e2jiN\f\u0011\u0003Z5tGJLW.\u001b8b]R\u0014\u0017\u000e^:!\u0003%qW/\u001c2m_\u000e\\7/\u0001\u0006ok6\u0014Gn\\2lg\u0002\n\u0001\u0003Z5tGJLW.\u001b8b]Rl\u0017m]6\u0002#\u0011L7o\u0019:j[&t\u0017M\u001c;nCN\\\u0007%A\u0007o_:l\u0017m]6mK:<G\u000f[\u0001\u000f]>tW.Y:lY\u0016tw\r\u001e5!\u0003\u0015\t\u0007\u000f\u001d7z+\u0019\t)/a;\u0002pV\u0011\u0011q\u001d\t\u0007\u001f\u0002\tI/!<\u0011\u0007\u0001\u000bY\u000fB\u0003CW\t\u0007A\tE\u0002A\u0003_$Q!T\u0016C\u0002\u0011\u0003"
    )
BootstrapMethods:
  0: #196 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #181 (Ljava/lang/Object;)Ljava/lang/Object;
      #186 REF_invokeStatic scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #187 (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #188 5
      #189 1
      #187 (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  1: #196 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #181 (Ljava/lang/Object;)Ljava/lang/Object;
      #243 REF_invokeStatic scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$2$adapted:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
      #245 (Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
      #188 5
      #189 1
      #245 (Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  2: #330 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #186 REF_invokeStatic scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #243 REF_invokeStatic scala/collection/parallel/mutable/ParHashMapCombiner.$anonfun$result$2$adapted:(Lscala/collection/parallel/mutable/ParHashMapCombiner;Lscala/runtime/LazyRef;Lscala/collection/parallel/mutable/ParHashMap$DefaultEntry;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 00 00 11 00 B6 00 B7 01 01 29 01 2A 01 00 EF
   00 F0 01 00 83 00 66 00 00 5E 00 8E 00 00 5E 00
   5F 00 00 47 00 48 00 00 50 00 51 01 00 FD 00 FE
   01 01 15 00 FE 01 00 2E 00 3C 01 00 94 00 6C 00
   00 94 00 95 00 00 2F 00 3C 01 00 3B 00 3C 01 00
   43 00 3C 01 00 2C 00 3C 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
