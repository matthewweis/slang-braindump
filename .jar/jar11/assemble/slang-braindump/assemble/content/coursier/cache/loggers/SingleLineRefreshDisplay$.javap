Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/cache/loggers/SingleLineRefreshDisplay$.class
  Last modified May 29, 2022; size 9717 bytes
  SHA-256 checksum ad7a667eafd9cf8dd2c304f437b9a7a826c7f04759cfaff75a8e0db557c8da96
  Compiled from "SingleLineRefreshDisplay.scala"
public final class coursier.cache.loggers.SingleLineRefreshDisplay$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/loggers/SingleLineRefreshDisplay$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 17, attributes: 5
Constant pool:
    #1 = Utf8               coursier/cache/loggers/SingleLineRefreshDisplay$
    #2 = Class              #1            // coursier/cache/loggers/SingleLineRefreshDisplay$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               SingleLineRefreshDisplay.scala
    #6 = Utf8               coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
    #7 = Class              #6            // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
    #8 = Utf8               coursier/cache/loggers/RefreshInfo
    #9 = Class              #8            // coursier/cache/loggers/RefreshInfo
   #10 = Utf8               CheckUpdateInfo
   #11 = Utf8               coursier/cache/loggers/RefreshInfo$DownloadInfo
   #12 = Class              #11           // coursier/cache/loggers/RefreshInfo$DownloadInfo
   #13 = Utf8               DownloadInfo
   #14 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #15 = Class              #14           // java/lang/invoke/MethodHandles$Lookup
   #16 = Utf8               java/lang/invoke/MethodHandles
   #17 = Class              #16           // java/lang/invoke/MethodHandles
   #18 = Utf8               Lookup
   #19 = Utf8               MODULE$
   #20 = Utf8               Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
   #21 = Utf8               format
   #22 = Utf8               Ljava/text/SimpleDateFormat;
   #23 = Utf8               <clinit>
   #24 = Utf8               ()V
   #25 = Utf8               <init>
   #26 = NameAndType        #25:#24       // "<init>":()V
   #27 = Methodref          #2.#26        // coursier/cache/loggers/SingleLineRefreshDisplay$."<init>":()V
   #28 = NameAndType        #19:#20       // MODULE$:Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
   #29 = Fieldref           #2.#28        // coursier/cache/loggers/SingleLineRefreshDisplay$.MODULE$:Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
   #30 = Utf8               java/text/SimpleDateFormat
   #31 = Class              #30           // java/text/SimpleDateFormat
   #32 = Utf8               yyyy-MM-dd HH:mm:ss
   #33 = String             #32           // yyyy-MM-dd HH:mm:ss
   #34 = Utf8               (Ljava/lang/String;)V
   #35 = NameAndType        #25:#34       // "<init>":(Ljava/lang/String;)V
   #36 = Methodref          #31.#35       // java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
   #37 = NameAndType        #21:#22       // format:Ljava/text/SimpleDateFormat;
   #38 = Fieldref           #2.#37        // coursier/cache/loggers/SingleLineRefreshDisplay$.format:Ljava/text/SimpleDateFormat;
   #39 = Utf8               create
   #40 = Utf8               ()Lcoursier/cache/loggers/SingleLineRefreshDisplay;
   #41 = Utf8               coursier/cache/loggers/SingleLineRefreshDisplay
   #42 = Class              #41           // coursier/cache/loggers/SingleLineRefreshDisplay
   #43 = MethodType         #24           //  ()V
   #44 = Utf8               $anonfun$create$1
   #45 = NameAndType        #44:#24       // $anonfun$create$1:()V
   #46 = Methodref          #2.#45        // coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$1:()V
   #47 = MethodHandle       6:#46         // REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$1:()V
   #48 = Integer            1
   #49 = Utf8               java/lang/invoke/LambdaMetafactory
   #50 = Class              #49           // java/lang/invoke/LambdaMetafactory
   #51 = Utf8               altMetafactory
   #52 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #53 = NameAndType        #51:#52       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #54 = Methodref          #50.#53       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #55 = MethodHandle       6:#54         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #56 = Utf8               apply$mcV$sp
   #57 = Utf8               ()Lscala/runtime/java8/JFunction0$mcV$sp;
   #58 = NameAndType        #56:#57       // apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
   #59 = InvokeDynamic      #0:#58        // #0:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
   #60 = Utf8               $anonfun$create$2
   #61 = NameAndType        #60:#24       // $anonfun$create$2:()V
   #62 = Methodref          #2.#61        // coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$2:()V
   #63 = MethodHandle       6:#62         // REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$2:()V
   #64 = InvokeDynamic      #1:#58        // #1:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
   #65 = Utf8               (Lscala/Function0;Lscala/Function0;)V
   #66 = NameAndType        #25:#65       // "<init>":(Lscala/Function0;Lscala/Function0;)V
   #67 = Methodref          #42.#66       // coursier/cache/loggers/SingleLineRefreshDisplay."<init>":(Lscala/Function0;Lscala/Function0;)V
   #68 = Utf8               this
   #69 = Utf8               (Lscala/Function0;Lscala/Function0;)Lcoursier/cache/loggers/SingleLineRefreshDisplay;
   #70 = Utf8               (Lscala/Function0<Lscala/runtime/BoxedUnit;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lcoursier/cache/loggers/SingleLineRefreshDisplay;
   #71 = Utf8               beforeOutput
   #72 = Utf8               afterOutput
   #73 = Utf8               Lscala/Function0;
   #74 = Utf8               byteCount
   #75 = Utf8               (JZ)Ljava/lang/String;
   #76 = Utf8               bytes
   #77 = Utf8               si
   #78 = Utf8               java/lang/StringBuilder
   #79 = Class              #78           // java/lang/StringBuilder
   #80 = Integer            2
   #81 = Utf8               (I)V
   #82 = NameAndType        #25:#81       // "<init>":(I)V
   #83 = Methodref          #79.#82       // java/lang/StringBuilder."<init>":(I)V
   #84 = Utf8               scala/runtime/BoxesRunTime
   #85 = Class              #84           // scala/runtime/BoxesRunTime
   #86 = Utf8               boxToLong
   #87 = Utf8               (J)Ljava/lang/Long;
   #88 = NameAndType        #86:#87       // boxToLong:(J)Ljava/lang/Long;
   #89 = Methodref          #85.#88       // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   #90 = Utf8               toString
   #91 = Utf8               ()Ljava/lang/String;
   #92 = NameAndType        #90:#91       // toString:()Ljava/lang/String;
   #93 = Methodref          #4.#92        // java/lang/Object.toString:()Ljava/lang/String;
   #94 = Utf8               append
   #95 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #96 = NameAndType        #94:#95       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #97 = Methodref          #79.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #98 = Utf8                B
   #99 = String             #98           //  B
  #100 = Methodref          #79.#92       // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #101 = Utf8               kMGTPE
  #102 = String             #101          // kMGTPE
  #103 = Utf8               KMGTPE
  #104 = String             #103          // KMGTPE
  #105 = Utf8               java/lang/String
  #106 = Class              #105          // java/lang/String
  #107 = Utf8               scala/runtime/RichInt$
  #108 = Class              #107          // scala/runtime/RichInt$
  #109 = Utf8               Lscala/runtime/RichInt$;
  #110 = NameAndType        #19:#109      // MODULE$:Lscala/runtime/RichInt$;
  #111 = Fieldref           #108.#110     // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #112 = Utf8               scala/Predef$
  #113 = Class              #112          // scala/Predef$
  #114 = Utf8               Lscala/Predef$;
  #115 = NameAndType        #19:#114      // MODULE$:Lscala/Predef$;
  #116 = Fieldref           #113.#115     // scala/Predef$.MODULE$:Lscala/Predef$;
  #117 = Utf8               scala/math/package$
  #118 = Class              #117          // scala/math/package$
  #119 = Utf8               Lscala/math/package$;
  #120 = NameAndType        #19:#119      // MODULE$:Lscala/math/package$;
  #121 = Fieldref           #118.#120     // scala/math/package$.MODULE$:Lscala/math/package$;
  #122 = Utf8               log
  #123 = Utf8               (D)D
  #124 = NameAndType        #122:#123     // log:(D)D
  #125 = Methodref          #118.#124     // scala/math/package$.log:(D)D
  #126 = Utf8               intWrapper
  #127 = Utf8               (I)I
  #128 = NameAndType        #126:#127     // intWrapper:(I)I
  #129 = Methodref          #113.#128     // scala/Predef$.intWrapper:(I)I
  #130 = Utf8               length
  #131 = Utf8               ()I
  #132 = NameAndType        #130:#131     // length:()I
  #133 = Methodref          #106.#132     // java/lang/String.length:()I
  #134 = Utf8               min$extension
  #135 = Utf8               (II)I
  #136 = NameAndType        #134:#135     // min$extension:(II)I
  #137 = Methodref          #108.#136     // scala/runtime/RichInt$.min$extension:(II)I
  #138 = Integer            0
  #139 = Utf8               charAt
  #140 = Utf8               (I)C
  #141 = NameAndType        #139:#140     // charAt:(I)C
  #142 = Methodref          #106.#141     // java/lang/String.charAt:(I)C
  #143 = Utf8               boxToCharacter
  #144 = Utf8               (C)Ljava/lang/Character;
  #145 = NameAndType        #143:#144     // boxToCharacter:(C)Ljava/lang/Character;
  #146 = Methodref          #85.#145      // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #147 = Utf8
  #148 = String             #147          //
  #149 = Utf8               i
  #150 = String             #149          // i
  #151 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #152 = NameAndType        #94:#151      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #153 = Methodref          #79.#152      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #154 = Utf8               pow
  #155 = Utf8               (DD)D
  #156 = NameAndType        #154:#155     // pow:(DD)D
  #157 = Methodref          #118.#156     // scala/math/package$.pow:(DD)D
  #158 = Utf8               scala/collection/StringOps$
  #159 = Class              #158          // scala/collection/StringOps$
  #160 = Utf8               Lscala/collection/StringOps$;
  #161 = NameAndType        #19:#160      // MODULE$:Lscala/collection/StringOps$;
  #162 = Fieldref           #159.#161     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #163 = Utf8               %.1f %sB
  #164 = String             #163          // %.1f %sB
  #165 = Utf8               scala/runtime/ScalaRunTime$
  #166 = Class              #165          // scala/runtime/ScalaRunTime$
  #167 = Utf8               Lscala/runtime/ScalaRunTime$;
  #168 = NameAndType        #19:#167      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #169 = Fieldref           #166.#168     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #170 = Utf8               boxToDouble
  #171 = Utf8               (D)Ljava/lang/Double;
  #172 = NameAndType        #170:#171     // boxToDouble:(D)Ljava/lang/Double;
  #173 = Methodref          #85.#172      // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #174 = Utf8               genericWrapArray
  #175 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #176 = NameAndType        #174:#175     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #177 = Methodref          #166.#176     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #178 = Utf8               format$extension
  #179 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #180 = NameAndType        #178:#179     // format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #181 = Methodref          #159.#180     // scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #182 = Utf8               arg$macro$1
  #183 = Utf8               D
  #184 = Utf8               arg$macro$2
  #185 = Utf8               Ljava/lang/Object;
  #186 = Utf8               prefixes
  #187 = Utf8               Ljava/lang/String;
  #188 = Utf8               exp
  #189 = Utf8               I
  #190 = Utf8               pre
  #191 = Utf8               unit
  #192 = Utf8               J
  #193 = Utf8               Z
  #194 = Utf8               byteCount$default$2
  #195 = Utf8               ()Z
  #196 = Utf8               ()Ljava/text/SimpleDateFormat;
  #197 = Utf8               formatTimestamp
  #198 = Utf8               (J)Ljava/lang/String;
  #199 = Utf8               ts
  #200 = NameAndType        #21:#196      // format:()Ljava/text/SimpleDateFormat;
  #201 = Methodref          #2.#200       // coursier/cache/loggers/SingleLineRefreshDisplay$.format:()Ljava/text/SimpleDateFormat;
  #202 = Utf8               java/sql/Timestamp
  #203 = Class              #202          // java/sql/Timestamp
  #204 = Utf8               (J)V
  #205 = NameAndType        #25:#204      // "<init>":(J)V
  #206 = Methodref          #203.#205     // java/sql/Timestamp."<init>":(J)V
  #207 = Utf8               (Ljava/util/Date;)Ljava/lang/String;
  #208 = NameAndType        #21:#207      // format:(Ljava/util/Date;)Ljava/lang/String;
  #209 = Methodref          #31.#208      // java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
  #210 = Utf8               coursier$cache$loggers$SingleLineRefreshDisplay$$display
  #211 = Utf8               (Lcoursier/cache/loggers/RefreshInfo;Z)Ljava/lang/String;
  #212 = Utf8               info
  #213 = Utf8               isDone
  #214 = Utf8               fraction
  #215 = Utf8               ()Lscala/Option;
  #216 = NameAndType        #214:#215     // fraction:()Lscala/Option;
  #217 = Methodref          #12.#216      // coursier/cache/loggers/RefreshInfo$DownloadInfo.fraction:()Lscala/Option;
  #218 = Utf8               ()Ljava/lang/Object;
  #219 = MethodType         #218          //  ()Ljava/lang/Object;
  #220 = Utf8               $anonfun$display$1
  #221 = Utf8               (Z)Lscala/Option;
  #222 = NameAndType        #220:#221     // $anonfun$display$1:(Z)Lscala/Option;
  #223 = Methodref          #2.#222       // coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$1:(Z)Lscala/Option;
  #224 = MethodHandle       6:#223        // REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$1:(Z)Lscala/Option;
  #225 = MethodType         #215          //  ()Lscala/Option;
  #226 = Integer            5
  #227 = Utf8               apply
  #228 = Utf8               (Z)Lscala/Function0;
  #229 = NameAndType        #227:#228     // apply:(Z)Lscala/Function0;
  #230 = InvokeDynamic      #2:#229       // #2:apply:(Z)Lscala/Function0;
  #231 = Utf8               scala/Option
  #232 = Class              #231          // scala/Option
  #233 = Utf8               orElse
  #234 = Utf8               (Lscala/Function0;)Lscala/Option;
  #235 = NameAndType        #233:#234     // orElse:(Lscala/Function0;)Lscala/Option;
  #236 = Methodref          #232.#235     // scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
  #237 = Utf8               $anonfun$display$2
  #238 = Utf8               (Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Option;
  #239 = NameAndType        #237:#238     // $anonfun$display$2:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Option;
  #240 = Methodref          #2.#239       // coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$2:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Option;
  #241 = MethodHandle       6:#240        // REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$2:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Option;
  #242 = Utf8               (Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Function0;
  #243 = NameAndType        #227:#242     // apply:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Function0;
  #244 = InvokeDynamic      #3:#243       // #3:apply:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Function0;
  #245 = Utf8               scala/None$
  #246 = Class              #245          // scala/None$
  #247 = Utf8               Lscala/None$;
  #248 = NameAndType        #19:#247      // MODULE$:Lscala/None$;
  #249 = Fieldref           #246.#248     // scala/None$.MODULE$:Lscala/None$;
  #250 = Utf8               equals
  #251 = Utf8               (Ljava/lang/Object;)Z
  #252 = NameAndType        #250:#251     // equals:(Ljava/lang/Object;)Z
  #253 = Methodref          #4.#252       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #254 = Utf8                      [          ]
  #255 = String             #254          //        [          ]
  #256 = Utf8               scala/Some
  #257 = Class              #256          // scala/Some
  #258 = Utf8               value
  #259 = NameAndType        #258:#218     // value:()Ljava/lang/Object;
  #260 = Methodref          #257.#259     // scala/Some.value:()Ljava/lang/Object;
  #261 = Utf8               unboxToDouble
  #262 = Utf8               (Ljava/lang/Object;)D
  #263 = NameAndType        #261:#262     // unboxToDouble:(Ljava/lang/Object;)D
  #264 = Methodref          #85.#263      // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #265 = Utf8               watching
  #266 = NameAndType        #265:#195     // watching:()Z
  #267 = Methodref          #12.#266      // coursier/cache/loggers/RefreshInfo$DownloadInfo.watching:()Z
  #268 = Utf8               .
  #269 = String             #268          // .
  #270 = Utf8               #
  #271 = String             #270          // #
  #272 = Double             10.0d
  #274 = Utf8               assert
  #275 = Utf8               (Z)V
  #276 = NameAndType        #274:#275     // assert:(Z)V
  #277 = Methodref          #113.#276     // scala/Predef$.assert:(Z)V
  #278 = Integer            4
  #279 = Double             100.0d
  #281 = Utf8               %5.1f%%
  #282 = String             #281          // %5.1f%%
  #283 = Utf8                [
  #284 = String             #283          //  [
  #285 = Utf8               augmentString
  #286 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #287 = NameAndType        #285:#286     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #288 = Methodref          #113.#287     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #289 = Utf8               $times$extension
  #290 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #291 = NameAndType        #289:#290     // $times$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #292 = Methodref          #159.#291     // scala/collection/StringOps$.$times$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #293 = Utf8
  #294 = String             #293          //
  #295 = Utf8               ]
  #296 = String             #295          // ]
  #297 = Utf8               scala/MatchError
  #298 = Class              #297          // scala/MatchError
  #299 = Utf8               (Ljava/lang/Object;)V
  #300 = NameAndType        #25:#299      // "<init>":(Ljava/lang/Object;)V
  #301 = Methodref          #298.#300     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #302 = Utf8               downloaded
  #303 = Utf8               ()J
  #304 = NameAndType        #302:#303     // downloaded:()J
  #305 = Methodref          #12.#304      // coursier/cache/loggers/RefreshInfo$DownloadInfo.downloaded:()J
  #306 = NameAndType        #194:#195     // byteCount$default$2:()Z
  #307 = Methodref          #2.#306       // coursier/cache/loggers/SingleLineRefreshDisplay$.byteCount$default$2:()Z
  #308 = NameAndType        #74:#75       // byteCount:(JZ)Ljava/lang/String;
  #309 = Methodref          #2.#308       // coursier/cache/loggers/SingleLineRefreshDisplay$.byteCount:(JZ)Ljava/lang/String;
  #310 = Utf8               rate
  #311 = NameAndType        #310:#215     // rate:()Lscala/Option;
  #312 = Methodref          #12.#311      // coursier/cache/loggers/RefreshInfo$DownloadInfo.rate:()Lscala/Option;
  #313 = Utf8               $anonfun$display$3
  #314 = NameAndType        #313:#91      // $anonfun$display$3:()Ljava/lang/String;
  #315 = Methodref          #2.#314       // coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$3:()Ljava/lang/String;
  #316 = MethodHandle       6:#315        // REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$3:()Ljava/lang/String;
  #317 = MethodType         #91           //  ()Ljava/lang/String;
  #318 = Utf8               ()Lscala/Function0;
  #319 = NameAndType        #227:#318     // apply:()Lscala/Function0;
  #320 = InvokeDynamic      #4:#319       // #4:apply:()Lscala/Function0;
  #321 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #322 = MethodType         #321          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #323 = Utf8               $anonfun$display$4$adapted
  #324 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #325 = NameAndType        #323:#324     // $anonfun$display$4$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #326 = Methodref          #2.#325       // coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$4$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #327 = MethodHandle       6:#326        // REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$4$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #328 = MethodType         #324          //  (Ljava/lang/Object;)Ljava/lang/String;
  #329 = Utf8               ()Lscala/Function1;
  #330 = NameAndType        #227:#329     // apply:()Lscala/Function1;
  #331 = InvokeDynamic      #5:#330       // #5:apply:()Lscala/Function1;
  #332 = Utf8               fold
  #333 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #334 = NameAndType        #332:#333     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #335 = Methodref          #232.#334     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #336 = Utf8               scala/Tuple2
  #337 = Class              #336          // scala/Tuple2
  #338 = Utf8               currentTimeOpt
  #339 = NameAndType        #338:#215     // currentTimeOpt:()Lscala/Option;
  #340 = Methodref          #7.#339       // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.currentTimeOpt:()Lscala/Option;
  #341 = Utf8               remoteTimeOpt
  #342 = NameAndType        #341:#215     // remoteTimeOpt:()Lscala/Option;
  #343 = Methodref          #7.#342       // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.remoteTimeOpt:()Lscala/Option;
  #344 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #345 = NameAndType        #25:#344      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #346 = Methodref          #337.#345     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #347 = Utf8               _1
  #348 = NameAndType        #347:#218     // _1:()Ljava/lang/Object;
  #349 = Methodref          #337.#348     // scala/Tuple2._1:()Ljava/lang/Object;
  #350 = Utf8               _2
  #351 = NameAndType        #350:#218     // _2:()Ljava/lang/Object;
  #352 = Methodref          #337.#351     // scala/Tuple2._2:()Ljava/lang/Object;
  #353 = Utf8               unboxToLong
  #354 = Utf8               (Ljava/lang/Object;)J
  #355 = NameAndType        #353:#354     // unboxToLong:(Ljava/lang/Object;)J
  #356 = Methodref          #85.#355      // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #357 = Integer            17
  #358 = Utf8               Updated since
  #359 = String             #358          // Updated since
  #360 = NameAndType        #197:#198     // formatTimestamp:(J)Ljava/lang/String;
  #361 = Methodref          #2.#360       // coursier/cache/loggers/SingleLineRefreshDisplay$.formatTimestamp:(J)Ljava/lang/String;
  #362 = Utf8                (
  #363 = String             #362          //  (
  #364 = Utf8               )
  #365 = String             #364          // )
  #366 = Integer            20
  #367 = Utf8               No new update since
  #368 = String             #367          // No new update since
  #369 = Integer            47
  #370 = Utf8               Warning: local copy newer than remote one (
  #371 = String             #370          // Warning: local copy newer than remote one (
  #372 = Utf8                >
  #373 = String             #372          //  >
  #374 = Utf8               No modified time in response
  #375 = String             #374          // No modified time in response
  #376 = Integer            13
  #377 = Utf8               Last update:
  #378 = String             #377          // Last update:
  #379 = Integer            27
  #380 = Utf8               Checking for updates since
  #381 = String             #380          // Checking for updates since
  #382 = Utf8               elem
  #383 = Utf8               decile
  #384 = Utf8               frac
  #385 = Utf8               actualFraction
  #386 = Utf8               Lscala/Option;
  #387 = Utf8               start
  #388 = Utf8               remote
  #389 = Utf8               current
  #390 = Utf8               Lcoursier/cache/loggers/RefreshInfo;
  #391 = Utf8               isDone$1
  #392 = Methodref          #257.#300     // scala/Some."<init>":(Ljava/lang/Object;)V
  #393 = Utf8               x2$1
  #394 = Utf8               Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #395 = Utf8               $anonfun$display$4
  #396 = Utf8               (D)Ljava/lang/String;
  #397 = Utf8               r
  #398 = Integer            7
  #399 = Utf8                / s)
  #400 = String             #399          //  / s)
  #401 = Methodref          #4.#26        // java/lang/Object."<init>":()V
  #402 = NameAndType        #395:#396     // $anonfun$display$4:(D)Ljava/lang/String;
  #403 = Methodref          #2.#402       // coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$4:(D)Ljava/lang/String;
  #404 = Utf8               $deserializeLambda$
  #405 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #406 = Utf8               scala/runtime/LambdaDeserialize
  #407 = Class              #406          // scala/runtime/LambdaDeserialize
  #408 = Utf8               bootstrap
  #409 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #410 = NameAndType        #408:#409     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #411 = Methodref          #407.#410     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #412 = MethodHandle       6:#411        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #413 = Utf8               lambdaDeserialize
  #414 = NameAndType        #413:#405     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #415 = InvokeDynamic      #6:#414       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #416 = Utf8               Code
  #417 = Utf8               LineNumberTable
  #418 = Utf8               LocalVariableTable
  #419 = Utf8               Signature
  #420 = Utf8               MethodParameters
  #421 = Utf8               StackMapTable
  #422 = Utf8               InnerClasses
  #423 = Utf8               SourceFile
  #424 = Utf8               BootstrapMethods
  #425 = Utf8               ScalaInlineInfo
  #426 = Utf8               Scala
{
  public static final coursier.cache.loggers.SingleLineRefreshDisplay$ MODULE$;
    descriptor: Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.text.SimpleDateFormat format;
    descriptor: Ljava/text/SimpleDateFormat;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class coursier/cache/loggers/SingleLineRefreshDisplay$
         3: dup
         4: invokespecial #27                 // Method "<init>":()V
         7: putstatic     #29                 // Field MODULE$:Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
        10: new           #31                 // class java/text/SimpleDateFormat
        13: dup
        14: ldc           #33                 // String yyyy-MM-dd HH:mm:ss
        16: invokespecial #36                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
        19: putstatic     #38                 // Field format:Ljava/text/SimpleDateFormat;
        22: return
      LineNumberTable:
        line 102: 0
        line 128: 10
        line 127: 19
        line 102: 22

  public coursier.cache.loggers.SingleLineRefreshDisplay create();
    descriptor: ()Lcoursier/cache/loggers/SingleLineRefreshDisplay;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #42                 // class coursier/cache/loggers/SingleLineRefreshDisplay
         3: dup
         4: invokedynamic #59,  0             // InvokeDynamic #0:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
         9: invokedynamic #64,  0             // InvokeDynamic #1:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
        14: invokespecial #67                 // Method coursier/cache/loggers/SingleLineRefreshDisplay."<init>":(Lscala/Function0;Lscala/Function0;)V
        17: areturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;

  public coursier.cache.loggers.SingleLineRefreshDisplay create(scala.Function0<scala.runtime.BoxedUnit>, scala.Function0<scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function0;Lscala/Function0;)Lcoursier/cache/loggers/SingleLineRefreshDisplay;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #42                 // class coursier/cache/loggers/SingleLineRefreshDisplay
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #67                 // Method coursier/cache/loggers/SingleLineRefreshDisplay."<init>":(Lscala/Function0;Lscala/Function0;)V
         9: areturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
            0      10     1 beforeOutput   Lscala/Function0;
            0      10     2 afterOutput   Lscala/Function0;
    Signature: #70                          // (Lscala/Function0<Lscala/runtime/BoxedUnit;>;Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lcoursier/cache/loggers/SingleLineRefreshDisplay;
    MethodParameters:
      Name                           Flags
      beforeOutput                   final
      afterOutput                    final

  public java.lang.String byteCount(long, boolean);
    descriptor: (JZ)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=11, args_size=3
         0: iload_3
         1: ifeq          10
         4: sipush        1000
         7: goto          13
        10: sipush        1024
        13: istore        4
        15: lload_1
        16: iload         4
        18: i2l
        19: lcmp
        20: ifge          53
        23: new           #79                 // class java/lang/StringBuilder
        26: dup
        27: ldc           #80                 // int 2
        29: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
        32: lload_1
        33: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        36: invokevirtual #93                 // Method java/lang/Object.toString:()Ljava/lang/String;
        39: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: ldc           #99                 // String  B
        44: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        50: goto          202
        53: iload_3
        54: ifeq          62
        57: ldc           #102                // String kMGTPE
        59: goto          64
        62: ldc           #104                // String KMGTPE
        64: astore        5
        66: getstatic     #111                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        69: getstatic     #116                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        72: getstatic     #121                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        75: lload_1
        76: l2d
        77: invokevirtual #125                // Method scala/math/package$.log:(D)D
        80: getstatic     #121                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        83: iload         4
        85: i2d
        86: invokevirtual #125                // Method scala/math/package$.log:(D)D
        89: ddiv
        90: d2i
        91: invokevirtual #129                // Method scala/Predef$.intWrapper:(I)I
        94: aload         5
        96: invokevirtual #133                // Method java/lang/String.length:()I
        99: invokevirtual #137                // Method scala/runtime/RichInt$.min$extension:(II)I
       102: istore        6
       104: new           #79                 // class java/lang/StringBuilder
       107: dup
       108: ldc           #138                // int 0
       110: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       113: aload         5
       115: iload         6
       117: iconst_1
       118: isub
       119: invokevirtual #142                // Method java/lang/String.charAt:(I)C
       122: invokestatic  #146                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       125: invokevirtual #93                 // Method java/lang/Object.toString:()Ljava/lang/String;
       128: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       131: iload_3
       132: ifeq          140
       135: ldc           #148                // String
       137: goto          142
       140: ldc           #150                // String i
       142: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       145: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       148: astore        7
       150: lload_1
       151: l2d
       152: getstatic     #121                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       155: iload         4
       157: i2d
       158: iload         6
       160: i2d
       161: invokevirtual #157                // Method scala/math/package$.pow:(DD)D
       164: ddiv
       165: dstore        8
       167: aload         7
       169: astore        10
       171: getstatic     #162                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       174: ldc           #164                // String %.1f %sB
       176: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       179: iconst_2
       180: anewarray     #4                  // class java/lang/Object
       183: dup
       184: iconst_0
       185: dload         8
       187: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       190: aastore
       191: dup
       192: iconst_1
       193: aload         10
       195: aastore
       196: invokevirtual #177                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       199: invokevirtual #181                // Method scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
       202: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 10 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ int ]
        frame_type = 8 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 75
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, long, int, int, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, long, int, int, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, long, int, int ]
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 116: 0
        line 117: 15
        line 118: 23
        line 120: 53
        line 121: 66
        line 122: 104
        line 123: 150
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          167      35     8 arg$macro$1   D
          171      31    10 arg$macro$2   Ljava/lang/Object;
           66     136     5 prefixes   Ljava/lang/String;
          104      98     6   exp   I
          150      52     7   pre   Ljava/lang/String;
           15     187     4  unit   I
            0     203     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
            0     203     1 bytes   J
            0     203     3    si   Z
    MethodParameters:
      Name                           Flags
      bytes                          final
      si                             final

  public boolean byteCount$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;

  private java.text.SimpleDateFormat format();
    descriptor: ()Ljava/text/SimpleDateFormat;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #38                 // Field format:Ljava/text/SimpleDateFormat;
         3: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;

  private java.lang.String formatTimestamp(long);
    descriptor: (J)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: invokespecial #201                // Method format:()Ljava/text/SimpleDateFormat;
         4: new           #203                // class java/sql/Timestamp
         7: dup
         8: lload_1
         9: invokespecial #206                // Method java/sql/Timestamp."<init>":(J)V
        12: invokevirtual #209                // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
        15: areturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
            0      16     1    ts   J
    MethodParameters:
      Name                           Flags
      ts                             final

  public java.lang.String coursier$cache$loggers$SingleLineRefreshDisplay$$display(coursier.cache.loggers.RefreshInfo, boolean);
    descriptor: (Lcoursier/cache/loggers/RefreshInfo;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=42, args_size=3
         0: aload_1
         1: astore        7
         3: aload         7
         5: instanceof    #12                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
         8: ifeq          342
        11: aload         7
        13: checkcast     #12                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        16: astore        8
        18: aload         8
        20: invokevirtual #217                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.fraction:()Lscala/Option;
        23: iload_2
        24: invokedynamic #230,  0            // InvokeDynamic #2:apply:(Z)Lscala/Function0;
        29: invokevirtual #236                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        32: aload         8
        34: invokedynamic #244,  0            // InvokeDynamic #3:apply:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Function0;
        39: invokevirtual #236                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        42: astore        9
        44: aload         9
        46: astore        11
        48: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
        51: aload         11
        53: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          66
        59: ldc           #255                // String        [          ]
        61: astore        6
        63: goto          280
        66: goto          69
        69: aload         11
        71: instanceof    #257                // class scala/Some
        74: ifeq          267
        77: aload         11
        79: checkcast     #257                // class scala/Some
        82: astore        12
        84: aload         12
        86: invokevirtual #260                // Method scala/Some.value:()Ljava/lang/Object;
        89: invokestatic  #264                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        92: dstore        13
        94: aload         8
        96: invokevirtual #267                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.watching:()Z
        99: ifeq          108
       102: ldc_w         #269                // String .
       105: goto          111
       108: ldc_w         #271                // String #
       111: astore        15
       113: ldc2_w        #272                // double 10.0d
       116: dload         13
       118: dmul
       119: d2i
       120: istore        16
       122: getstatic     #116                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       125: iload         16
       127: iconst_0
       128: if_icmplt     135
       131: iconst_1
       132: goto          136
       135: iconst_0
       136: invokevirtual #277                // Method scala/Predef$.assert:(Z)V
       139: getstatic     #116                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       142: iload         16
       144: bipush        10
       146: if_icmpgt     153
       149: iconst_1
       150: goto          154
       153: iconst_0
       154: invokevirtual #277                // Method scala/Predef$.assert:(Z)V
       157: new           #79                 // class java/lang/StringBuilder
       160: dup
       161: ldc_w         #278                // int 4
       164: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       167: ldc2_w        #279                // double 100.0d
       170: dload         13
       172: dmul
       173: dstore        17
       175: getstatic     #162                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       178: ldc_w         #282                // String %5.1f%%
       181: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       184: iconst_1
       185: anewarray     #4                  // class java/lang/Object
       188: dup
       189: iconst_0
       190: dload         17
       192: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       195: aastore
       196: invokevirtual #177                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       199: invokevirtual #181                // Method scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
       202: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       205: ldc_w         #284                // String  [
       208: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       211: getstatic     #162                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       214: getstatic     #116                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       217: aload         15
       219: invokevirtual #288                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       222: iload         16
       224: invokevirtual #292                // Method scala/collection/StringOps$.$times$extension:(Ljava/lang/String;I)Ljava/lang/String;
       227: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       230: getstatic     #162                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       233: getstatic     #116                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       236: ldc_w         #294                // String
       239: invokevirtual #288                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       242: bipush        10
       244: iload         16
       246: isub
       247: invokevirtual #292                // Method scala/collection/StringOps$.$times$extension:(Ljava/lang/String;I)Ljava/lang/String;
       250: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       253: ldc_w         #296                // String ]
       256: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       259: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       262: astore        6
       264: goto          280
       267: goto          270
       270: new           #298                // class scala/MatchError
       273: dup
       274: aload         11
       276: invokespecial #301                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       279: athrow
       280: aload         6
       282: astore        10
       284: new           #79                 // class java/lang/StringBuilder
       287: dup
       288: ldc           #138                // int 0
       290: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       293: aload         10
       295: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       298: aload_0
       299: aload         8
       301: invokevirtual #305                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.downloaded:()J
       304: aload_0
       305: invokevirtual #307                // Method byteCount$default$2:()Z
       308: invokevirtual #309                // Method byteCount:(JZ)Ljava/lang/String;
       311: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       314: aload         8
       316: invokevirtual #312                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.rate:()Lscala/Option;
       319: invokedynamic #320,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
       324: invokedynamic #331,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
       329: invokevirtual #335                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       332: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       335: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       338: astore_3
       339: goto          971
       342: goto          345
       345: aload         7
       347: instanceof    #7                  // class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
       350: ifeq          958
       353: aload         7
       355: checkcast     #7                  // class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
       358: astore        19
       360: iload_2
       361: ifeq          853
       364: new           #337                // class scala/Tuple2
       367: dup
       368: aload         19
       370: invokevirtual #340                // Method coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.currentTimeOpt:()Lscala/Option;
       373: aload         19
       375: invokevirtual #343                // Method coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.remoteTimeOpt:()Lscala/Option;
       378: invokespecial #346                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       381: astore        20
       383: aload         20
       385: ifnull        617
       388: aload         20
       390: invokevirtual #349                // Method scala/Tuple2._1:()Ljava/lang/Object;
       393: checkcast     #232                // class scala/Option
       396: astore        21
       398: aload         20
       400: invokevirtual #352                // Method scala/Tuple2._2:()Ljava/lang/Object;
       403: checkcast     #232                // class scala/Option
       406: astore        22
       408: aload         21
       410: instanceof    #257                // class scala/Some
       413: ifeq          614
       416: aload         21
       418: checkcast     #257                // class scala/Some
       421: astore        23
       423: aload         23
       425: invokevirtual #260                // Method scala/Some.value:()Ljava/lang/Object;
       428: invokestatic  #356                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       431: lstore        24
       433: aload         22
       435: instanceof    #257                // class scala/Some
       438: ifeq          611
       441: aload         22
       443: checkcast     #257                // class scala/Some
       446: astore        26
       448: aload         26
       450: invokevirtual #260                // Method scala/Some.value:()Ljava/lang/Object;
       453: invokestatic  #356                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       456: lstore        27
       458: lload         24
       460: lload         27
       462: lcmp
       463: ifge          518
       466: new           #79                 // class java/lang/StringBuilder
       469: dup
       470: ldc_w         #357                // int 17
       473: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       476: ldc_w         #359                // String Updated since
       479: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       482: aload_0
       483: lload         24
       485: invokespecial #361                // Method formatTimestamp:(J)Ljava/lang/String;
       488: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       491: ldc_w         #363                // String  (
       494: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       497: aload_0
       498: lload         27
       500: invokespecial #361                // Method formatTimestamp:(J)Ljava/lang/String;
       503: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       506: ldc_w         #365                // String )
       509: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       512: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       515: goto          606
       518: lload         24
       520: lload         27
       522: lcmp
       523: ifne          557
       526: new           #79                 // class java/lang/StringBuilder
       529: dup
       530: ldc_w         #366                // int 20
       533: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       536: ldc_w         #368                // String No new update since
       539: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       542: aload_0
       543: lload         24
       545: invokespecial #361                // Method formatTimestamp:(J)Ljava/lang/String;
       548: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       551: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       554: goto          606
       557: new           #79                 // class java/lang/StringBuilder
       560: dup
       561: ldc_w         #369                // int 47
       564: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       567: ldc_w         #371                // String Warning: local copy newer than remote one (
       570: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       573: aload_0
       574: lload         24
       576: invokespecial #361                // Method formatTimestamp:(J)Ljava/lang/String;
       579: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       582: ldc_w         #373                // String  >
       585: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       588: aload_0
       589: lload         27
       591: invokespecial #361                // Method formatTimestamp:(J)Ljava/lang/String;
       594: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       597: ldc_w         #365                // String )
       600: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       603: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       606: astore        5
       608: goto          848
       611: goto          620
       614: goto          620
       617: goto          620
       620: aload         20
       622: ifnull        675
       625: aload         20
       627: invokevirtual #349                // Method scala/Tuple2._1:()Ljava/lang/Object;
       630: checkcast     #232                // class scala/Option
       633: astore        29
       635: aload         20
       637: invokevirtual #352                // Method scala/Tuple2._2:()Ljava/lang/Object;
       640: checkcast     #232                // class scala/Option
       643: astore        30
       645: aload         29
       647: instanceof    #257                // class scala/Some
       650: ifeq          672
       653: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
       656: aload         30
       658: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       661: ifeq          672
       664: ldc_w         #375                // String No modified time in response
       667: astore        5
       669: goto          848
       672: goto          678
       675: goto          678
       678: aload         20
       680: ifnull        775
       683: aload         20
       685: invokevirtual #349                // Method scala/Tuple2._1:()Ljava/lang/Object;
       688: checkcast     #232                // class scala/Option
       691: astore        31
       693: aload         20
       695: invokevirtual #352                // Method scala/Tuple2._2:()Ljava/lang/Object;
       698: checkcast     #232                // class scala/Option
       701: astore        32
       703: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
       706: aload         31
       708: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       711: ifeq          772
       714: aload         32
       716: instanceof    #257                // class scala/Some
       719: ifeq          772
       722: aload         32
       724: checkcast     #257                // class scala/Some
       727: astore        33
       729: aload         33
       731: invokevirtual #260                // Method scala/Some.value:()Ljava/lang/Object;
       734: invokestatic  #356                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       737: lstore        34
       739: new           #79                 // class java/lang/StringBuilder
       742: dup
       743: ldc_w         #376                // int 13
       746: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       749: ldc_w         #378                // String Last update:
       752: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       755: aload_0
       756: lload         34
       758: invokespecial #361                // Method formatTimestamp:(J)Ljava/lang/String;
       761: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       764: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       767: astore        5
       769: goto          848
       772: goto          778
       775: goto          778
       778: aload         20
       780: ifnull        835
       783: aload         20
       785: invokevirtual #349                // Method scala/Tuple2._1:()Ljava/lang/Object;
       788: checkcast     #232                // class scala/Option
       791: astore        36
       793: aload         20
       795: invokevirtual #352                // Method scala/Tuple2._2:()Ljava/lang/Object;
       798: checkcast     #232                // class scala/Option
       801: astore        37
       803: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
       806: aload         36
       808: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       811: ifeq          832
       814: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
       817: aload         37
       819: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       822: ifeq          832
       825: ldc           #148                // String
       827: astore        5
       829: goto          848
       832: goto          838
       835: goto          838
       838: new           #298                // class scala/MatchError
       841: dup
       842: aload         20
       844: invokespecial #301                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       847: athrow
       848: aload         5
       850: goto          954
       853: aload         19
       855: invokevirtual #340                // Method coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.currentTimeOpt:()Lscala/Option;
       858: astore        38
       860: aload         38
       862: instanceof    #257                // class scala/Some
       865: ifeq          918
       868: aload         38
       870: checkcast     #257                // class scala/Some
       873: astore        39
       875: aload         39
       877: invokevirtual #260                // Method scala/Some.value:()Ljava/lang/Object;
       880: invokestatic  #356                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
       883: lstore        40
       885: new           #79                 // class java/lang/StringBuilder
       888: dup
       889: ldc_w         #379                // int 27
       892: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
       895: ldc_w         #381                // String Checking for updates since
       898: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       901: aload_0
       902: lload         40
       904: invokespecial #361                // Method formatTimestamp:(J)Ljava/lang/String;
       907: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       910: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       913: astore        4
       915: goto          952
       918: goto          921
       921: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
       924: aload         38
       926: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       929: ifeq          939
       932: ldc           #148                // String
       934: astore        4
       936: goto          952
       939: goto          942
       942: new           #298                // class scala/MatchError
       945: dup
       946: aload         38
       948: invokespecial #301                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       951: athrow
       952: aload         4
       954: astore_3
       955: goto          971
       958: goto          961
       961: new           #298                // class scala/MatchError
       964: dup
       965: aload         7
       967: invokespecial #301                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       970: athrow
       971: aload_3
       972: areturn
      StackMapTable: number_of_entries = 40
        frame_type = 255 /* full_frame */
          offset_delta = 66
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class scala/Option, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ class scala/Some, double ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class scala/Option, top, class scala/Option, class scala/Some, double, class java/lang/String, int ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class scala/Option, top, class scala/Option, class scala/Some, double, class java/lang/String, int ]
          stack = [ class scala/Predef$, int ]
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class scala/Option, top, class scala/Option, class scala/Some, double, class java/lang/String, int ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 112
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class scala/Option, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, class java/lang/String, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class scala/Option, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 61
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 172
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, long, class scala/Some, long ]
          stack = []
        frame_type = 38 /* same */
        frame_type = 112 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 249 /* chop */
          offset_delta = 4
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2, top, top, top, top, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 93
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, class java/lang/String, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 17 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, class java/lang/String, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo, top, top, top, top, top, top, top, top, top, top, top, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo ]
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, top, top, top, top, class coursier/cache/loggers/RefreshInfo ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/loggers/SingleLineRefreshDisplay$, class coursier/cache/loggers/RefreshInfo, int, class java/lang/String, top, top, top, class coursier/cache/loggers/RefreshInfo ]
          stack = []
      LineNumberTable:
        line 134: 0
        line 135: 3
        line 137: 18
        line 138: 23
        line 139: 32
        line 142: 44
        line 143: 48
        line 144: 59
        line 143: 66
        line 145: 69
        line 146: 94
        line 148: 113
        line 149: 122
        line 150: 139
        line 153: 157
        line 152: 167
        line 153: 205
        line 145: 267
        line 142: 270
        line 157: 284
        line 156: 293
        line 157: 298
        line 158: 314
        line 135: 342
        line 160: 345
        line 162: 360
        line 163: 364
        line 164: 383
        line 165: 458
        line 166: 466
        line 167: 518
        line 168: 526
        line 170: 557
        line 164: 611
        line 171: 620
        line 173: 664
        line 171: 672
        line 174: 678
        line 175: 739
        line 174: 772
        line 176: 778
        line 177: 825
        line 176: 832
        line 163: 838
        line 180: 853
        line 181: 860
        line 182: 885
        line 181: 918
        line 183: 921
        line 184: 932
        line 183: 939
        line 180: 942
        line 160: 958
        line 134: 961
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          175      27    17 arg$macro$1   D
          113     149    15  elem   Ljava/lang/String;
          122     140    16 decile   I
           94     173    13  frac   D
           44     294     9 actualFraction   Lscala/Option;
          284      54    10 start   Ljava/lang/String;
          458     153    27 remote   J
          433     181    24 current   J
          739      33    34 remote   J
          885      33    40 current   J
            0     973     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
            0     973     1  info   Lcoursier/cache/loggers/RefreshInfo;
            0     973     2 isDone   Z
    MethodParameters:
      Name                           Flags
      info                           final
      isDone                         final

  public static final void $anonfun$create$1();
    descriptor: ()V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=0, locals=0, args_size=0
         0: return
      LineNumberTable:
        line 105: 0

  public static final void $anonfun$create$2();
    descriptor: ()V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=0, locals=0, args_size=0
         0: return
      LineNumberTable:
        line 105: 0

  public static final scala.Option $anonfun$display$1(boolean);
    descriptor: (Z)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: iload_0
         1: ifeq          18
         4: new           #257                // class scala/Some
         7: dup
         8: dconst_1
         9: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        12: invokespecial #392                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        15: goto          21
        18: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
        21: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 isDone$1   Z
    MethodParameters:
      Name                           Flags
      isDone$1                       final

  public static final scala.Option $anonfun$display$2(coursier.cache.loggers.RefreshInfo$DownloadInfo);
    descriptor: (Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #305                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.downloaded:()J
         4: lconst_0
         5: lcmp
         6: ifne          23
         9: new           #257                // class scala/Some
        12: dup
        13: dconst_0
        14: invokestatic  #173                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        17: invokespecial #392                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        20: goto          26
        23: getstatic     #249                // Field scala/None$.MODULE$:Lscala/None$;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  x2$1   Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
    MethodParameters:
      Name                           Flags
      x2$1                           final

  public static final java.lang.String $anonfun$display$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #148                // String
         2: areturn
      LineNumberTable:
        line 158: 0

  public static final java.lang.String $anonfun$display$4(double);
    descriptor: (D)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=1
         0: new           #79                 // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #398                // int 7
         7: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #363                // String  (
        13: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: getstatic     #29                 // Field MODULE$:Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
        19: dload_0
        20: d2l
        21: getstatic     #29                 // Field MODULE$:Lcoursier/cache/loggers/SingleLineRefreshDisplay$;
        24: invokevirtual #307                // Method byteCount$default$2:()Z
        27: invokevirtual #309                // Method byteCount:(JZ)Ljava/lang/String;
        30: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: ldc_w         #400                // String  / s)
        36: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        42: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0     r   D
    MethodParameters:
      Name                           Flags
      r                              final

  private coursier.cache.loggers.SingleLineRefreshDisplay$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #401                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 189: 0
        line 102: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/SingleLineRefreshDisplay$;

  public static final java.lang.String $anonfun$display$4$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #264                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         4: invokestatic  #403                // Method $anonfun$display$4:(D)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     r   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #415,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // CheckUpdateInfo=class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo of class coursier/cache/loggers/RefreshInfo
  public static final #13= #12 of #9;     // DownloadInfo=class coursier/cache/loggers/RefreshInfo$DownloadInfo of class coursier/cache/loggers/RefreshInfo
  public static final #18= #15 of #17;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "SingleLineRefreshDisplay.scala"
BootstrapMethods:
  0: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #43 ()V
      #47 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$1:()V
      #43 ()V
      #48 1
  1: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #43 ()V
      #63 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$2:()V
      #43 ()V
      #48 1
  2: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 ()Ljava/lang/Object;
      #224 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$1:(Z)Lscala/Option;
      #225 ()Lscala/Option;
      #226 5
      #48 1
      #225 ()Lscala/Option;
  3: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 ()Ljava/lang/Object;
      #241 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$2:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Option;
      #225 ()Lscala/Option;
      #226 5
      #48 1
      #225 ()Lscala/Option;
  4: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 ()Ljava/lang/Object;
      #316 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$3:()Ljava/lang/String;
      #317 ()Ljava/lang/String;
      #226 5
      #48 1
      #317 ()Ljava/lang/String;
  5: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #322 (Ljava/lang/Object;)Ljava/lang/Object;
      #327 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$4$adapted:(Ljava/lang/Object;)Ljava/lang/String;
      #328 (Ljava/lang/Object;)Ljava/lang/String;
      #226 5
      #48 1
      #328 (Ljava/lang/Object;)Ljava/lang/String;
  6: #412 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #47 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$1:()V
      #63 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$create$2:()V
      #224 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$1:(Z)Lscala/Option;
      #241 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$2:(Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;)Lscala/Option;
      #316 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$3:()Ljava/lang/String;
      #327 REF_invokeStatic coursier/cache/loggers/SingleLineRefreshDisplay$.$anonfun$display$4$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 01 00 0F 00 2C 00 18 01 00 3C 00 18 01 00 DC
   00 DD 01 00 ED 00 EE 01 01 39 00 5B 01 01 8B 01
   8C 01 01 43 01 44 01 00 19 00 18 01 00 4A 00 4B
   01 00 C2 00 C3 01 00 D2 00 D3 01 00 27 00 28 01
   00 27 00 45 01 00 15 00 C4 01 00 C5 00 C6 01
  Scala: length = 0x0 (unknown attribute)

