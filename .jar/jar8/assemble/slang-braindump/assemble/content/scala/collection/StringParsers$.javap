Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/StringParsers$.class
  Last modified May 29, 2022; size 16331 bytes
  SHA-256 checksum fe5276beedf439c39c1638698e162cb464d276f5aa8c311ee25d96e053c7dc73
  Compiled from "StringParsers.scala"
public final class scala.collection.StringParsers$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/StringParsers$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 69, attributes: 3
Constant pool:
    #1 = Utf8               scala/collection/StringParsers$
    #2 = Class              #1            // scala/collection/StringParsers$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               StringParsers.scala
    #6 = Utf8               MODULE$
    #7 = Utf8               Lscala/collection/StringParsers$;
    #8 = Utf8               <clinit>
    #9 = Utf8               ()V
   #10 = Utf8               <init>
   #11 = NameAndType        #10:#9        // "<init>":()V
   #12 = Methodref          #2.#11        // scala/collection/StringParsers$."<init>":()V
   #13 = NameAndType        #6:#7         // MODULE$:Lscala/collection/StringParsers$;
   #14 = Fieldref           #2.#13        // scala/collection/StringParsers$.MODULE$:Lscala/collection/StringParsers$;
   #15 = Utf8               intOverflowBoundary
   #16 = Utf8               ()I
   #17 = Integer            -214748364
   #18 = Utf8               this
   #19 = Utf8               intOverflowDigit
   #20 = Utf8               longOverflowBoundary
   #21 = Utf8               ()J
   #22 = Long               -922337203685477580l
   #24 = Utf8               longOverflowDigit
   #25 = Utf8               decValue
   #26 = Utf8               (C)I
   #27 = Utf8               ch
   #28 = Utf8               java/lang/Character
   #29 = Class              #28           // java/lang/Character
   #30 = Utf8               digit
   #31 = Utf8               (CI)I
   #32 = NameAndType        #30:#31       // digit:(CI)I
   #33 = Methodref          #29.#32       // java/lang/Character.digit:(CI)I
   #34 = Utf8               C
   #35 = Utf8               stepToOverflow
   #36 = Utf8               (Ljava/lang/String;IIZI)Lscala/Option;
   #37 = Utf8               (Ljava/lang/String;IIZI)Lscala/Option<Ljava/lang/Object;>;
   #38 = Utf8               from
   #39 = Utf8               len
   #40 = Utf8               agg
   #41 = Utf8               isPositive
   #42 = Utf8               min
   #43 = Utf8               rec$1
   #44 = Utf8               (IIIIZLjava/lang/String;)Lscala/Option;
   #45 = NameAndType        #43:#44       // rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
   #46 = Methodref          #2.#45        // scala/collection/StringParsers$.rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
   #47 = Utf8               Ljava/lang/String;
   #48 = Utf8               I
   #49 = Utf8               Z
   #50 = Utf8               isDigit
   #51 = Utf8               (C)Z
   #52 = Utf8               c
   #53 = Utf8               parseBool
   #54 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #55 = Utf8               (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
   #56 = Utf8               true
   #57 = String             #56           // true
   #58 = Utf8               java/lang/String
   #59 = Class              #58           // java/lang/String
   #60 = Utf8               equalsIgnoreCase
   #61 = Utf8               (Ljava/lang/String;)Z
   #62 = NameAndType        #60:#61       // equalsIgnoreCase:(Ljava/lang/String;)Z
   #63 = Methodref          #59.#62       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
   #64 = Utf8               scala/Some
   #65 = Class              #64           // scala/Some
   #66 = Utf8               java/lang/Boolean
   #67 = Class              #66           // java/lang/Boolean
   #68 = Utf8               valueOf
   #69 = Utf8               (Z)Ljava/lang/Boolean;
   #70 = NameAndType        #68:#69       // valueOf:(Z)Ljava/lang/Boolean;
   #71 = Methodref          #67.#70       // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
   #72 = Utf8               (Ljava/lang/Object;)V
   #73 = NameAndType        #10:#72       // "<init>":(Ljava/lang/Object;)V
   #74 = Methodref          #65.#73       // scala/Some."<init>":(Ljava/lang/Object;)V
   #75 = Utf8               false
   #76 = String             #75           // false
   #77 = Utf8               scala/None$
   #78 = Class              #77           // scala/None$
   #79 = Utf8               Lscala/None$;
   #80 = NameAndType        #6:#79        // MODULE$:Lscala/None$;
   #81 = Fieldref           #78.#80       // scala/None$.MODULE$:Lscala/None$;
   #82 = Utf8               parseByte
   #83 = Utf8               length
   #84 = NameAndType        #83:#16       // length:()I
   #85 = Methodref          #59.#84       // java/lang/String.length:()I
   #86 = Utf8               charAt
   #87 = Utf8               (I)C
   #88 = NameAndType        #86:#87       // charAt:(I)C
   #89 = Methodref          #59.#88       // java/lang/String.charAt:(I)C
   #90 = Utf8               java/lang/Byte
   #91 = Class              #90           // java/lang/Byte
   #92 = Utf8               (B)Ljava/lang/Byte;
   #93 = NameAndType        #68:#92       // valueOf:(B)Ljava/lang/Byte;
   #94 = Methodref          #91.#93       // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
   #95 = Utf8               scala/Option
   #96 = Class              #95           // scala/Option
   #97 = Utf8               isEmpty
   #98 = Utf8               ()Z
   #99 = NameAndType        #97:#98       // isEmpty:()Z
  #100 = Methodref          #96.#99       // scala/Option.isEmpty:()Z
  #101 = Utf8               get
  #102 = Utf8               ()Ljava/lang/Object;
  #103 = NameAndType        #101:#102     // get:()Ljava/lang/Object;
  #104 = Methodref          #96.#103      // scala/Option.get:()Ljava/lang/Object;
  #105 = Utf8               scala/runtime/BoxesRunTime
  #106 = Class              #105          // scala/runtime/BoxesRunTime
  #107 = Utf8               unboxToInt
  #108 = Utf8               (Ljava/lang/Object;)I
  #109 = NameAndType        #107:#108     // unboxToInt:(Ljava/lang/Object;)I
  #110 = Methodref          #106.#109     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #111 = Utf8               first
  #112 = Utf8               stepToOverflow_agg
  #113 = Utf8               stepToOverflow_isPositive
  #114 = Utf8               stepToOverflow_min
  #115 = Utf8               map_this
  #116 = Utf8               Lscala/Option;
  #117 = Utf8               parseShort
  #118 = Utf8               java/lang/Short
  #119 = Class              #118          // java/lang/Short
  #120 = Utf8               (S)Ljava/lang/Short;
  #121 = NameAndType        #68:#120      // valueOf:(S)Ljava/lang/Short;
  #122 = Methodref          #119.#121     // java/lang/Short.valueOf:(S)Ljava/lang/Short;
  #123 = Utf8               parseInt
  #124 = Utf8               java/lang/Integer
  #125 = Class              #124          // java/lang/Integer
  #126 = Utf8               (I)Ljava/lang/Integer;
  #127 = NameAndType        #68:#126      // valueOf:(I)Ljava/lang/Integer;
  #128 = Methodref          #125.#127     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #129 = Utf8               step$1
  #130 = Utf8               (IIZILjava/lang/String;)Lscala/Option;
  #131 = NameAndType        #129:#130     // step$1:(IIZILjava/lang/String;)Lscala/Option;
  #132 = Methodref          #2.#131       // scala/collection/StringParsers$.step$1:(IIZILjava/lang/String;)Lscala/Option;
  #133 = Utf8               parseLong
  #134 = Long               -1l
  #136 = Utf8               java/lang/Long
  #137 = Class              #136          // java/lang/Long
  #138 = Utf8               (J)Ljava/lang/Long;
  #139 = NameAndType        #68:#138      // valueOf:(J)Ljava/lang/Long;
  #140 = Methodref          #137.#139     // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #141 = Utf8               step$2
  #142 = Utf8               (IJZILjava/lang/String;)Lscala/Option;
  #143 = NameAndType        #141:#142     // step$2:(IJZILjava/lang/String;)Lscala/Option;
  #144 = Methodref          #2.#143       // scala/collection/StringParsers$.step$2:(IJZILjava/lang/String;)Lscala/Option;
  #145 = Utf8               v
  #146 = Utf8               J
  #147 = Utf8               checkFloatFormat
  #148 = Utf8               format
  #149 = Utf8               $anonfun$checkFloatFormat$12
  #150 = NameAndType        #149:#51      // $anonfun$checkFloatFormat$12:(C)Z
  #151 = Methodref          #2.#150       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$12:(C)Z
  #152 = Integer            2147483647
  #153 = Utf8               scala/math/package$
  #154 = Class              #153          // scala/math/package$
  #155 = Utf8               Lscala/math/package$;
  #156 = NameAndType        #6:#155       // MODULE$:Lscala/math/package$;
  #157 = Fieldref           #154.#156     // scala/math/package$.MODULE$:Lscala/math/package$;
  #158 = Utf8               java/lang/Math
  #159 = Class              #158          // java/lang/Math
  #160 = Utf8               (II)I
  #161 = NameAndType        #42:#160      // min:(II)I
  #162 = Methodref          #159.#161     // java/lang/Math.min:(II)I
  #163 = Utf8               $anonfun$checkFloatFormat$13
  #164 = NameAndType        #163:#51      // $anonfun$checkFloatFormat$13:(C)Z
  #165 = Methodref          #2.#164       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$13:(C)Z
  #166 = Utf8               substring
  #167 = Utf8               (II)Ljava/lang/String;
  #168 = NameAndType        #166:#167     // substring:(II)Ljava/lang/String;
  #169 = Methodref          #59.#168      // java/lang/String.substring:(II)Ljava/lang/String;
  #170 = Utf8               NaN
  #171 = String             #170          // NaN
  #172 = Utf8               equals
  #173 = Utf8               (Ljava/lang/Object;)Z
  #174 = NameAndType        #172:#173     // equals:(Ljava/lang/Object;)Z
  #175 = Methodref          #4.#174       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #176 = Utf8               Infinity
  #177 = String             #176          // Infinity
  #178 = Utf8               isHexFloatLiteral$1
  #179 = Utf8               (IILjava/lang/String;)Z
  #180 = NameAndType        #178:#179     // isHexFloatLiteral$1:(IILjava/lang/String;)Z
  #181 = Methodref          #2.#180       // scala/collection/StringParsers$.isHexFloatLiteral$1:(IILjava/lang/String;)Z
  #182 = Utf8               isDecFloatLiteral$1
  #183 = NameAndType        #182:#179     // isDecFloatLiteral$1:(IILjava/lang/String;)Z
  #184 = Methodref          #2.#183       // scala/collection/StringParsers$.isDecFloatLiteral$1:(IILjava/lang/String;)Z
  #185 = Utf8               startchar
  #186 = Utf8               endchar
  #187 = Utf8               desuffixed
  #188 = Utf8               unsigned
  #189 = Utf8               unspacedEnd
  #190 = Utf8               indexWhere$extension_len
  #191 = Utf8               indexWhere$extension_i
  #192 = Utf8               lastIndexWhere$extension_len
  #193 = Utf8               lastIndexWhere$extension_i
  #194 = Utf8               lastIndexWhere$extension_min_y
  #195 = Utf8               parseFloat
  #196 = NameAndType        #147:#61      // checkFloatFormat:(Ljava/lang/String;)Z
  #197 = Methodref          #2.#196       // scala/collection/StringParsers$.checkFloatFormat:(Ljava/lang/String;)Z
  #198 = Utf8               java/lang/Float
  #199 = Class              #198          // java/lang/Float
  #200 = Utf8               (Ljava/lang/String;)F
  #201 = NameAndType        #195:#200     // parseFloat:(Ljava/lang/String;)F
  #202 = Methodref          #199.#201     // java/lang/Float.parseFloat:(Ljava/lang/String;)F
  #203 = Utf8               (F)Ljava/lang/Float;
  #204 = NameAndType        #68:#203      // valueOf:(F)Ljava/lang/Float;
  #205 = Methodref          #199.#204     // java/lang/Float.valueOf:(F)Ljava/lang/Float;
  #206 = Utf8               parseDouble
  #207 = Utf8               java/lang/Double
  #208 = Class              #207          // java/lang/Double
  #209 = Utf8               (Ljava/lang/String;)D
  #210 = NameAndType        #206:#209     // parseDouble:(Ljava/lang/String;)D
  #211 = Methodref          #208.#210     // java/lang/Double.parseDouble:(Ljava/lang/String;)D
  #212 = Utf8               (D)Ljava/lang/Double;
  #213 = NameAndType        #68:#212      // valueOf:(D)Ljava/lang/Double;
  #214 = Methodref          #208.#213     // java/lang/Double.valueOf:(D)Ljava/lang/Double;
  #215 = Utf8               i
  #216 = Utf8               min$1
  #217 = Utf8               len$1
  #218 = Utf8               isPositive$1
  #219 = Utf8               from$1
  #220 = Utf8               $anonfun$parseByte$1
  #221 = Utf8               (I)B
  #222 = Utf8               x$1
  #223 = Utf8               $anonfun$parseByte$2
  #224 = Utf8               x$2
  #225 = Utf8               $anonfun$parseByte$3
  #226 = Utf8               x$3
  #227 = Utf8               $anonfun$parseShort$1
  #228 = Utf8               (I)S
  #229 = Utf8               x$4
  #230 = Utf8               $anonfun$parseShort$2
  #231 = Utf8               x$5
  #232 = Utf8               $anonfun$parseShort$3
  #233 = Utf8               x$6
  #234 = Utf8               len$2
  #235 = Utf8               from$2
  #236 = Integer            -2147483648
  #237 = Utf8               len$3
  #238 = Utf8               from$3
  #239 = Long               -9223372036854775808l
  #241 = Long               10l
  #243 = Utf8               rec$2
  #244 = Utf8               (IILscala/Function1;Ljava/lang/String;)Z
  #245 = Utf8               end$1
  #246 = Utf8               pred$1
  #247 = Utf8               format$1
  #248 = Utf8               (C)Ljava/lang/Character;
  #249 = NameAndType        #68:#248      // valueOf:(C)Ljava/lang/Character;
  #250 = Methodref          #29.#249      // java/lang/Character.valueOf:(C)Ljava/lang/Character;
  #251 = Utf8               scala/Function1
  #252 = Class              #251          // scala/Function1
  #253 = Utf8               apply
  #254 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #255 = NameAndType        #253:#254     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #256 = InterfaceMethodref #252.#255     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #257 = Utf8               unboxToBoolean
  #258 = NameAndType        #257:#173     // unboxToBoolean:(Ljava/lang/Object;)Z
  #259 = Methodref          #106.#258     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #260 = Utf8               Lscala/Function1;
  #261 = Utf8               forAllBetween$1
  #262 = Utf8               start
  #263 = Utf8               end
  #264 = Utf8               pred
  #265 = Utf8               rec$2_i
  #266 = Utf8               rec$3
  #267 = Utf8               (IILscala/Function1;Ljava/lang/String;)I
  #268 = Utf8               until$1
  #269 = Utf8               predicate$1
  #270 = Utf8               skipIndexWhile$1
  #271 = Utf8               (Lscala/Function1;IILjava/lang/String;)I
  #272 = Utf8               predicate
  #273 = Utf8               until
  #274 = Utf8               rec$3_i
  #275 = Utf8               isHexDigit$1
  #276 = Utf8               $anonfun$checkFloatFormat$1
  #277 = NameAndType        #275:#51      // isHexDigit$1:(C)Z
  #278 = Methodref          #2.#277       // scala/collection/StringParsers$.isHexDigit$1:(C)Z
  #279 = Utf8               $anonfun$checkFloatFormat$2
  #280 = Utf8               $anonfun$checkFloatFormat$3
  #281 = Utf8               prefixOK$1
  #282 = Utf8               startIndex
  #283 = Utf8               endIndex
  #284 = Utf8               forAllBetween$1_rec$2_i
  #285 = Utf8               skipIndexWhile$1_rec$3_i
  #286 = Utf8               $anonfun$checkFloatFormat$4
  #287 = NameAndType        #50:#51       // isDigit:(C)Z
  #288 = Methodref          #2.#287       // scala/collection/StringParsers$.isDigit:(C)Z
  #289 = Utf8               $anonfun$checkFloatFormat$5
  #290 = Utf8               postfixOK$1
  #291 = NameAndType        #286:#51      // $anonfun$checkFloatFormat$4:(C)Z
  #292 = Methodref          #2.#291       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$4:(C)Z
  #293 = NameAndType        #289:#51      // $anonfun$checkFloatFormat$5:(C)Z
  #294 = Methodref          #2.#293       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$5:(C)Z
  #295 = Utf8               $anonfun$checkFloatFormat$6
  #296 = NameAndType        #295:#51      // $anonfun$checkFloatFormat$6:(C)Z
  #297 = Methodref          #2.#296       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$6:(C)Z
  #298 = NameAndType        #281:#179     // prefixOK$1:(IILjava/lang/String;)Z
  #299 = Methodref          #2.#298       // scala/collection/StringParsers$.prefixOK$1:(IILjava/lang/String;)Z
  #300 = NameAndType        #290:#179     // postfixOK$1:(IILjava/lang/String;)Z
  #301 = Methodref          #2.#300       // scala/collection/StringParsers$.postfixOK$1:(IILjava/lang/String;)Z
  #302 = Utf8               isExp$1
  #303 = Utf8               $anonfun$checkFloatFormat$7
  #304 = Utf8               $anonfun$checkFloatFormat$8
  #305 = Utf8               expOK$1
  #306 = NameAndType        #303:#51      // $anonfun$checkFloatFormat$7:(C)Z
  #307 = Methodref          #2.#306       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$7:(C)Z
  #308 = NameAndType        #304:#51      // $anonfun$checkFloatFormat$8:(C)Z
  #309 = Methodref          #2.#308       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$8:(C)Z
  #310 = Utf8               startChar
  #311 = Utf8               $anonfun$checkFloatFormat$9
  #312 = Utf8               $anonfun$checkFloatFormat$10
  #313 = Utf8               $anonfun$checkFloatFormat$11
  #314 = NameAndType        #311:#51      // $anonfun$checkFloatFormat$9:(C)Z
  #315 = Methodref          #2.#314       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$9:(C)Z
  #316 = NameAndType        #302:#51      // isExp$1:(C)Z
  #317 = Methodref          #2.#316       // scala/collection/StringParsers$.isExp$1:(C)Z
  #318 = NameAndType        #305:#179     // expOK$1:(IILjava/lang/String;)Z
  #319 = Methodref          #2.#318       // scala/collection/StringParsers$.expOK$1:(IILjava/lang/String;)Z
  #320 = NameAndType        #312:#51      // $anonfun$checkFloatFormat$10:(C)Z
  #321 = Methodref          #2.#320       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$10:(C)Z
  #322 = NameAndType        #313:#51      // $anonfun$checkFloatFormat$11:(C)Z
  #323 = Methodref          #2.#322       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$11:(C)Z
  #324 = Methodref          #4.#11        // java/lang/Object."<init>":()V
  #325 = Utf8               $anonfun$parseByte$1$adapted
  #326 = NameAndType        #220:#221     // $anonfun$parseByte$1:(I)B
  #327 = Methodref          #2.#326       // scala/collection/StringParsers$.$anonfun$parseByte$1:(I)B
  #328 = Utf8               boxToByte
  #329 = NameAndType        #328:#92      // boxToByte:(B)Ljava/lang/Byte;
  #330 = Methodref          #106.#329     // scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
  #331 = Utf8               Ljava/lang/Object;
  #332 = Utf8               $anonfun$parseByte$2$adapted
  #333 = NameAndType        #223:#221     // $anonfun$parseByte$2:(I)B
  #334 = Methodref          #2.#333       // scala/collection/StringParsers$.$anonfun$parseByte$2:(I)B
  #335 = Utf8               $anonfun$parseByte$3$adapted
  #336 = NameAndType        #225:#221     // $anonfun$parseByte$3:(I)B
  #337 = Methodref          #2.#336       // scala/collection/StringParsers$.$anonfun$parseByte$3:(I)B
  #338 = Utf8               $anonfun$parseShort$1$adapted
  #339 = NameAndType        #227:#228     // $anonfun$parseShort$1:(I)S
  #340 = Methodref          #2.#339       // scala/collection/StringParsers$.$anonfun$parseShort$1:(I)S
  #341 = Utf8               boxToShort
  #342 = NameAndType        #341:#120     // boxToShort:(S)Ljava/lang/Short;
  #343 = Methodref          #106.#342     // scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
  #344 = Utf8               $anonfun$parseShort$2$adapted
  #345 = NameAndType        #230:#228     // $anonfun$parseShort$2:(I)S
  #346 = Methodref          #2.#345       // scala/collection/StringParsers$.$anonfun$parseShort$2:(I)S
  #347 = Utf8               $anonfun$parseShort$3$adapted
  #348 = NameAndType        #232:#228     // $anonfun$parseShort$3:(I)S
  #349 = Methodref          #2.#348       // scala/collection/StringParsers$.$anonfun$parseShort$3:(I)S
  #350 = Utf8               $anonfun$checkFloatFormat$12$adapted
  #351 = Utf8               unboxToChar
  #352 = Utf8               (Ljava/lang/Object;)C
  #353 = NameAndType        #351:#352     // unboxToChar:(Ljava/lang/Object;)C
  #354 = Methodref          #106.#353     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #355 = Utf8               boxToBoolean
  #356 = NameAndType        #355:#69      // boxToBoolean:(Z)Ljava/lang/Boolean;
  #357 = Methodref          #106.#356     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #358 = Utf8               $anonfun$checkFloatFormat$13$adapted
  #359 = Utf8               $anonfun$checkFloatFormat$1$adapted
  #360 = NameAndType        #276:#51      // $anonfun$checkFloatFormat$1:(C)Z
  #361 = Methodref          #2.#360       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$1:(C)Z
  #362 = Utf8               $anonfun$checkFloatFormat$2$adapted
  #363 = NameAndType        #279:#51      // $anonfun$checkFloatFormat$2:(C)Z
  #364 = Methodref          #2.#363       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$2:(C)Z
  #365 = Utf8               $anonfun$checkFloatFormat$3$adapted
  #366 = NameAndType        #280:#51      // $anonfun$checkFloatFormat$3:(C)Z
  #367 = Methodref          #2.#366       // scala/collection/StringParsers$.$anonfun$checkFloatFormat$3:(C)Z
  #368 = Utf8               $anonfun$checkFloatFormat$4$adapted
  #369 = Utf8               $anonfun$checkFloatFormat$5$adapted
  #370 = Utf8               $anonfun$checkFloatFormat$6$adapted
  #371 = Utf8               $anonfun$checkFloatFormat$7$adapted
  #372 = Utf8               $anonfun$checkFloatFormat$8$adapted
  #373 = Utf8               $anonfun$checkFloatFormat$9$adapted
  #374 = Utf8               $anonfun$checkFloatFormat$10$adapted
  #375 = Utf8               $anonfun$checkFloatFormat$11$adapted
  #376 = Utf8               Code
  #377 = Utf8               LineNumberTable
  #378 = Utf8               LocalVariableTable
  #379 = Utf8               MethodParameters
  #380 = Utf8               Signature
  #381 = Utf8               StackMapTable
  #382 = Utf8               SourceFile
  #383 = Utf8               ScalaInlineInfo
  #384 = Utf8               Scala
{
  public static final scala.collection.StringParsers$ MODULE$;
    descriptor: Lscala/collection/StringParsers$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/collection/StringParsers$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
        10: return
      LineNumberTable:
        line 20: 0

  private final int intOverflowBoundary();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #17                 // int -214748364
         2: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/StringParsers$;

  private final int intOverflowDigit();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        9
         2: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/StringParsers$;

  private final long longOverflowBoundary();
    descriptor: ()J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: ldc2_w        #22                 // long -922337203685477580l
         3: lreturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/StringParsers$;

  private final int longOverflowDigit();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        9
         2: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/StringParsers$;

  private final int decValue(char);
    descriptor: (C)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: bipush        10
         3: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
         6: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/StringParsers$;
            0       7     1    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  private final scala.Option<java.lang.Object> stepToOverflow(java.lang.String, int, int, boolean, int);
    descriptor: (Ljava/lang/String;IIZI)Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=7, locals=6, args_size=6
         0: aload_0
         1: iconst_1
         2: iload_3
         3: iload         5
         5: iload_2
         6: iload         4
         8: aload_1
         9: invokespecial #46                 // Method rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/StringParsers$;
            0      13     1  from   Ljava/lang/String;
            0      13     2   len   I
            0      13     3   agg   I
            0      13     4 isPositive   Z
            0      13     5   min   I
    Signature: #37                          // (Ljava/lang/String;IIZI)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final
      len                            final
      agg                            final
      isPositive                     final
      min                            final

  private final boolean isDigit(char);
    descriptor: (C)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: bipush        48
         3: if_icmplt     14
         6: iload_1
         7: bipush        57
         9: if_icmpgt     14
        12: iconst_1
        13: ireturn
        14: iconst_0
        15: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/collection/StringParsers$;
            0      16     1     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public final scala.Option<java.lang.Object> parseBool(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ldc           #57                 // String true
         3: invokevirtual #63                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
         6: ifeq          21
         9: new           #65                 // class scala/Some
        12: dup
        13: iconst_1
        14: invokestatic  #71                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        17: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        20: areturn
        21: aload_1
        22: ldc           #76                 // String false
        24: invokevirtual #63                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        27: ifeq          42
        30: new           #65                 // class scala/Some
        33: dup
        34: iconst_0
        35: invokestatic  #71                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        38: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        41: areturn
        42: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        45: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 20 /* same */
      LineNumberTable:
        line 58: 0
        line 59: 21
        line 60: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lscala/collection/StringParsers$;
            0      46     1  from   Ljava/lang/String;
    Signature: #55                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final

  public final scala.Option<java.lang.Object> parseByte(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=7, locals=17, args_size=2
         0: aload_1
         1: invokevirtual #85                 // Method java/lang/String.length:()I
         4: istore_2
         5: iload_2
         6: iconst_0
         7: if_icmpne     14
        10: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        13: areturn
        14: aload_1
        15: iconst_0
        16: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        19: istore_3
        20: iload_3
        21: bipush        10
        23: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
        26: istore        4
        28: iload_2
        29: iconst_1
        30: if_icmpne     57
        33: iload         4
        35: iconst_m1
        36: if_icmple     53
        39: new           #65                 // class scala/Some
        42: dup
        43: iload         4
        45: i2b
        46: invokestatic  #94                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
        49: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        52: areturn
        53: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        56: areturn
        57: iload         4
        59: iconst_m1
        60: if_icmple     128
        63: iload         4
        65: ineg
        66: iconst_1
        67: bipush        -128
        69: istore        7
        71: istore        6
        73: istore        5
        75: aload_0
        76: iconst_1
        77: iload         5
        79: iload         7
        81: iload_2
        82: iload         6
        84: aload_1
        85: invokespecial #46                 // Method rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
        88: dup
        89: ifnonnull     94
        92: aconst_null
        93: athrow
        94: astore        8
        96: aload         8
        98: invokevirtual #100                // Method scala/Option.isEmpty:()Z
       101: ifeq          108
       104: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       107: areturn
       108: new           #65                 // class scala/Some
       111: dup
       112: aload         8
       114: invokevirtual #104                // Method scala/Option.get:()Ljava/lang/Object;
       117: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       120: i2b
       121: invokestatic  #94                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       124: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       127: areturn
       128: iload_3
       129: bipush        43
       131: if_icmpne     197
       134: iconst_0
       135: iconst_1
       136: bipush        -128
       138: istore        11
       140: istore        10
       142: istore        9
       144: aload_0
       145: iconst_1
       146: iload         9
       148: iload         11
       150: iload_2
       151: iload         10
       153: aload_1
       154: invokespecial #46                 // Method rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
       157: dup
       158: ifnonnull     163
       161: aconst_null
       162: athrow
       163: astore        12
       165: aload         12
       167: invokevirtual #100                // Method scala/Option.isEmpty:()Z
       170: ifeq          177
       173: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       176: areturn
       177: new           #65                 // class scala/Some
       180: dup
       181: aload         12
       183: invokevirtual #104                // Method scala/Option.get:()Ljava/lang/Object;
       186: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       189: i2b
       190: invokestatic  #94                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       193: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       196: areturn
       197: iload_3
       198: bipush        45
       200: if_icmpne     266
       203: iconst_0
       204: iconst_0
       205: bipush        -128
       207: istore        15
       209: istore        14
       211: istore        13
       213: aload_0
       214: iconst_1
       215: iload         13
       217: iload         15
       219: iload_2
       220: iload         14
       222: aload_1
       223: invokespecial #46                 // Method rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
       226: dup
       227: ifnonnull     232
       230: aconst_null
       231: athrow
       232: astore        16
       234: aload         16
       236: invokevirtual #100                // Method scala/Option.isEmpty:()Z
       239: ifeq          246
       242: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       245: areturn
       246: new           #65                 // class scala/Some
       249: dup
       250: aload         16
       252: invokevirtual #104                // Method scala/Option.get:()Ljava/lang/Object;
       255: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       258: i2b
       259: invokestatic  #94                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       262: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       265: areturn
       266: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       269: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ int, int ]
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, int, int, int ]
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, top, int, int, int ]
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, top, top, top, top, top, int, int, int ]
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int ]
          stack = []
      LineNumberTable:
        line 64: 0
        line 66: 5
        line 68: 14
        line 32: 20
        line 70: 28
        line 72: 33
        line 73: 53
        line 75: 57
        line 49: 75
        line 75: 88
        line 75: 117
        line 75: 120
        line 75: 121
        line 75: 124
        line 76: 128
        line 49: 144
        line 76: 157
        line 76: 186
        line 76: 189
        line 76: 190
        line 76: 193
        line 77: 197
        line 49: 213
        line 77: 226
        line 77: 255
        line 77: 258
        line 77: 259
        line 77: 262
        line 78: 266
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20     249     3 first   C
            5     264     2   len   I
            0     270     0  this   Lscala/collection/StringParsers$;
            0     270     1  from   Ljava/lang/String;
           75      13     5 stepToOverflow_agg   I
           75      13     6 stepToOverflow_isPositive   Z
           75      13     7 stepToOverflow_min   I
           96      31     8 map_this   Lscala/Option;
          144      13     9 stepToOverflow_agg   I
          144      13    10 stepToOverflow_isPositive   Z
          144      13    11 stepToOverflow_min   I
          165      31    12 map_this   Lscala/Option;
          213      13    13 stepToOverflow_agg   I
          213      13    14 stepToOverflow_isPositive   Z
          213      13    15 stepToOverflow_min   I
          234      31    16 map_this   Lscala/Option;
    Signature: #55                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final

  public final scala.Option<java.lang.Object> parseShort(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=7, locals=17, args_size=2
         0: aload_1
         1: invokevirtual #85                 // Method java/lang/String.length:()I
         4: istore_2
         5: iload_2
         6: iconst_0
         7: if_icmpne     14
        10: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        13: areturn
        14: aload_1
        15: iconst_0
        16: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        19: istore_3
        20: iload_3
        21: bipush        10
        23: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
        26: istore        4
        28: iload_2
        29: iconst_1
        30: if_icmpne     57
        33: iload         4
        35: iconst_m1
        36: if_icmple     53
        39: new           #65                 // class scala/Some
        42: dup
        43: iload         4
        45: i2s
        46: invokestatic  #122                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
        49: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        52: areturn
        53: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        56: areturn
        57: iload         4
        59: iconst_m1
        60: if_icmple     129
        63: iload         4
        65: ineg
        66: iconst_1
        67: sipush        -32768
        70: istore        7
        72: istore        6
        74: istore        5
        76: aload_0
        77: iconst_1
        78: iload         5
        80: iload         7
        82: iload_2
        83: iload         6
        85: aload_1
        86: invokespecial #46                 // Method rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
        89: dup
        90: ifnonnull     95
        93: aconst_null
        94: athrow
        95: astore        8
        97: aload         8
        99: invokevirtual #100                // Method scala/Option.isEmpty:()Z
       102: ifeq          109
       105: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       108: areturn
       109: new           #65                 // class scala/Some
       112: dup
       113: aload         8
       115: invokevirtual #104                // Method scala/Option.get:()Ljava/lang/Object;
       118: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       121: i2s
       122: invokestatic  #122                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       125: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       128: areturn
       129: iload_3
       130: bipush        43
       132: if_icmpne     199
       135: iconst_0
       136: iconst_1
       137: sipush        -32768
       140: istore        11
       142: istore        10
       144: istore        9
       146: aload_0
       147: iconst_1
       148: iload         9
       150: iload         11
       152: iload_2
       153: iload         10
       155: aload_1
       156: invokespecial #46                 // Method rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
       159: dup
       160: ifnonnull     165
       163: aconst_null
       164: athrow
       165: astore        12
       167: aload         12
       169: invokevirtual #100                // Method scala/Option.isEmpty:()Z
       172: ifeq          179
       175: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       178: areturn
       179: new           #65                 // class scala/Some
       182: dup
       183: aload         12
       185: invokevirtual #104                // Method scala/Option.get:()Ljava/lang/Object;
       188: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       191: i2s
       192: invokestatic  #122                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       195: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       198: areturn
       199: iload_3
       200: bipush        45
       202: if_icmpne     269
       205: iconst_0
       206: iconst_0
       207: sipush        -32768
       210: istore        15
       212: istore        14
       214: istore        13
       216: aload_0
       217: iconst_1
       218: iload         13
       220: iload         15
       222: iload_2
       223: iload         14
       225: aload_1
       226: invokespecial #46                 // Method rec$1:(IIIIZLjava/lang/String;)Lscala/Option;
       229: dup
       230: ifnonnull     235
       233: aconst_null
       234: athrow
       235: astore        16
       237: aload         16
       239: invokevirtual #100                // Method scala/Option.isEmpty:()Z
       242: ifeq          249
       245: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       248: areturn
       249: new           #65                 // class scala/Some
       252: dup
       253: aload         16
       255: invokevirtual #104                // Method scala/Option.get:()Ljava/lang/Object;
       258: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       261: i2s
       262: invokestatic  #122                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       265: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       268: areturn
       269: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       272: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ int, int ]
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, int, int, int ]
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, top, int, int, int ]
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, top, top, top, top, top, int, int, int ]
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int ]
          stack = []
      LineNumberTable:
        line 83: 0
        line 85: 5
        line 87: 14
        line 32: 20
        line 89: 28
        line 91: 33
        line 92: 53
        line 94: 57
        line 49: 76
        line 94: 89
        line 94: 118
        line 94: 121
        line 94: 122
        line 94: 125
        line 95: 129
        line 49: 146
        line 95: 159
        line 95: 188
        line 95: 191
        line 95: 192
        line 95: 195
        line 96: 199
        line 49: 216
        line 96: 229
        line 96: 258
        line 96: 261
        line 96: 262
        line 96: 265
        line 97: 269
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20     252     3 first   C
            5     267     2   len   I
            0     273     0  this   Lscala/collection/StringParsers$;
            0     273     1  from   Ljava/lang/String;
           76      13     5 stepToOverflow_agg   I
           76      13     6 stepToOverflow_isPositive   Z
           76      13     7 stepToOverflow_min   I
           97      31     8 map_this   Lscala/Option;
          146      13     9 stepToOverflow_agg   I
          146      13    10 stepToOverflow_isPositive   Z
          146      13    11 stepToOverflow_min   I
          167      31    12 map_this   Lscala/Option;
          216      13    13 stepToOverflow_agg   I
          216      13    14 stepToOverflow_isPositive   Z
          216      13    15 stepToOverflow_min   I
          237      31    16 map_this   Lscala/Option;
    Signature: #55                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final

  public final scala.Option<java.lang.Object> parseInt(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=6, locals=5, args_size=2
         0: aload_1
         1: invokevirtual #85                 // Method java/lang/String.length:()I
         4: istore_2
         5: iload_2
         6: iconst_0
         7: if_icmpne     14
        10: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        13: areturn
        14: aload_1
        15: iconst_0
        16: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        19: istore_3
        20: iload_3
        21: bipush        10
        23: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
        26: istore        4
        28: iload_2
        29: iconst_1
        30: if_icmpne     56
        33: iload         4
        35: iconst_m1
        36: if_icmple     52
        39: new           #65                 // class scala/Some
        42: dup
        43: iload         4
        45: invokestatic  #128                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        48: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        51: areturn
        52: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        55: areturn
        56: iload         4
        58: iconst_m1
        59: if_icmple     74
        62: aload_0
        63: iconst_1
        64: iload         4
        66: ineg
        67: iconst_1
        68: iload_2
        69: aload_1
        70: invokespecial #132                // Method step$1:(IIZILjava/lang/String;)Lscala/Option;
        73: areturn
        74: iload_3
        75: bipush        43
        77: if_icmpne     90
        80: aload_0
        81: iconst_1
        82: iconst_0
        83: iconst_1
        84: iload_2
        85: aload_1
        86: invokespecial #132                // Method step$1:(IIZILjava/lang/String;)Lscala/Option;
        89: areturn
        90: iload_3
        91: bipush        45
        93: if_icmpne     106
        96: aload_0
        97: iconst_1
        98: iconst_0
        99: iconst_0
       100: iload_2
       101: aload_1
       102: invokespecial #132                // Method step$1:(IIZILjava/lang/String;)Lscala/Option;
       105: areturn
       106: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       109: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ int, int ]
        frame_type = 3 /* same */
        frame_type = 17 /* same */
        frame_type = 15 /* same */
        frame_type = 15 /* same */
      LineNumberTable:
        line 102: 0
        line 119: 5
        line 121: 14
        line 32: 20
        line 123: 28
        line 125: 33
        line 126: 52
        line 128: 56
        line 129: 74
        line 130: 90
        line 131: 106
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      89     3 first   C
            5     104     2   len   I
            0     110     0  this   Lscala/collection/StringParsers$;
            0     110     1  from   Ljava/lang/String;
    Signature: #55                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final

  public final scala.Option<java.lang.Object> parseLong(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=7, locals=6, args_size=2
         0: aload_1
         1: invokevirtual #85                 // Method java/lang/String.length:()I
         4: istore_2
         5: iload_2
         6: iconst_0
         7: if_icmpne     14
        10: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        13: areturn
        14: aload_1
        15: iconst_0
        16: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        19: istore_3
        20: iload_3
        21: bipush        10
        23: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
        26: i2l
        27: lstore        4
        29: iload_2
        30: iconst_1
        31: if_icmpne     60
        34: lload         4
        36: ldc2_w        #134                // long -1l
        39: lcmp
        40: ifle          56
        43: new           #65                 // class scala/Some
        46: dup
        47: lload         4
        49: invokestatic  #140                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        52: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        55: areturn
        56: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        59: areturn
        60: lload         4
        62: ldc2_w        #134                // long -1l
        65: lcmp
        66: ifle          81
        69: aload_0
        70: iconst_1
        71: lload         4
        73: lneg
        74: iconst_1
        75: iload_2
        76: aload_1
        77: invokespecial #144                // Method step$2:(IJZILjava/lang/String;)Lscala/Option;
        80: areturn
        81: iload_3
        82: bipush        43
        84: if_icmpne     97
        87: aload_0
        88: iconst_1
        89: lconst_0
        90: iconst_1
        91: iload_2
        92: aload_1
        93: invokespecial #144                // Method step$2:(IJZILjava/lang/String;)Lscala/Option;
        96: areturn
        97: iload_3
        98: bipush        45
       100: if_icmpne     113
       103: aload_0
       104: iconst_1
       105: lconst_0
       106: iconst_0
       107: iload_2
       108: aload_1
       109: invokespecial #144                // Method step$2:(IJZILjava/lang/String;)Lscala/Option;
       112: areturn
       113: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       116: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ int, long ]
        frame_type = 3 /* same */
        frame_type = 20 /* same */
        frame_type = 15 /* same */
        frame_type = 15 /* same */
      LineNumberTable:
        line 137: 0
        line 154: 5
        line 156: 14
        line 32: 20
        line 157: 26
        line 158: 29
        line 160: 34
        line 161: 56
        line 163: 60
        line 164: 81
        line 165: 97
        line 166: 113
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      96     3 first   C
           29      87     4     v   J
            5     111     2   len   I
            0     117     0  this   Lscala/collection/StringParsers$;
            0     117     1  from   Ljava/lang/String;
    Signature: #55                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final

  public final boolean checkFloatFormat(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=19, args_size=2
         0: iconst_0
         1: istore        17
         3: aload_1
         4: invokevirtual #85                 // Method java/lang/String.length:()I
         7: istore        10
         9: iload         17
        11: istore        11
        13: iload         11
        15: iload         10
        17: if_icmpge     45
        20: aload_1
        21: iload         11
        23: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        26: invokestatic  #151                // Method $anonfun$checkFloatFormat$12:(C)Z
        29: ifeq          39
        32: iload         11
        34: istore        12
        36: goto          48
        39: iinc          11, 1
        42: goto          13
        45: iconst_m1
        46: istore        12
        48: ldc           #152                // int 2147483647
        50: istore        18
        52: aload_1
        53: invokevirtual #85                 // Method java/lang/String.length:()I
        56: istore        13
        58: getstatic     #157                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        61: pop
        62: iload         13
        64: iconst_1
        65: isub
        66: istore        15
        68: iload         18
        70: iload         15
        72: invokestatic  #162                // Method java/lang/Math.min:(II)I
        75: istore        14
        77: iload         14
        79: iconst_0
        80: if_icmplt     108
        83: aload_1
        84: iload         14
        86: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        89: invokestatic  #165                // Method $anonfun$checkFloatFormat$13:(C)Z
        92: ifeq          102
        95: iload         14
        97: istore        16
        99: goto          111
       102: iinc          14, -1
       105: goto          77
       108: iconst_m1
       109: istore        16
       111: iload         16
       113: iconst_1
       114: iadd
       115: istore_2
       116: iload         12
       118: iconst_m1
       119: if_icmpeq     133
       122: iload         12
       124: iload_2
       125: if_icmpge     133
       128: iload_2
       129: iconst_0
       130: if_icmpgt     135
       133: iconst_0
       134: ireturn
       135: aload_1
       136: iload         12
       138: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       141: istore        4
       143: iload         4
       145: bipush        45
       147: if_icmpeq     157
       150: iload         4
       152: bipush        43
       154: if_icmpne     164
       157: iload         12
       159: iconst_1
       160: iadd
       161: goto          166
       164: iload         12
       166: istore_3
       167: iload_3
       168: iload_2
       169: if_icmplt     174
       172: iconst_0
       173: ireturn
       174: aload_1
       175: iload_3
       176: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       179: bipush        78
       181: if_icmpne     214
       184: aload_1
       185: iload_3
       186: iload_2
       187: invokevirtual #169                // Method java/lang/String.substring:(II)Ljava/lang/String;
       190: ldc           #171                // String NaN
       192: astore        5
       194: dup
       195: ifnonnull     202
       198: pop
       199: goto          212
       202: aload         5
       204: invokevirtual #175                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       207: ifeq          212
       210: iconst_1
       211: ireturn
       212: iconst_0
       213: ireturn
       214: aload_1
       215: iload_3
       216: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       219: bipush        73
       221: if_icmpne     254
       224: aload_1
       225: iload_3
       226: iload_2
       227: invokevirtual #169                // Method java/lang/String.substring:(II)Ljava/lang/String;
       230: ldc           #177                // String Infinity
       232: astore        6
       234: dup
       235: ifnonnull     242
       238: pop
       239: goto          252
       242: aload         6
       244: invokevirtual #175                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       247: ifeq          252
       250: iconst_1
       251: ireturn
       252: iconst_0
       253: ireturn
       254: aload_1
       255: iload_2
       256: iconst_1
       257: isub
       258: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       261: istore        8
       263: iload         8
       265: bipush        102
       267: if_icmpeq     291
       270: iload         8
       272: bipush        70
       274: if_icmpeq     291
       277: iload         8
       279: bipush        100
       281: if_icmpeq     291
       284: iload         8
       286: bipush        68
       288: if_icmpne     297
       291: iload_2
       292: iconst_1
       293: isub
       294: goto          298
       297: iload_2
       298: istore        7
       300: iload         7
       302: iload_3
       303: isub
       304: istore        9
       306: iload         9
       308: iconst_0
       309: if_icmpgt     314
       312: iconst_0
       313: ireturn
       314: iload         9
       316: iconst_2
       317: if_icmplt     371
       320: aload_1
       321: iload_3
       322: iconst_1
       323: iadd
       324: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       327: bipush        120
       329: if_icmpeq     344
       332: aload_1
       333: iload_3
       334: iconst_1
       335: iadd
       336: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       339: bipush        88
       341: if_icmpne     371
       344: aload_1
       345: iload_3
       346: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       349: bipush        48
       351: if_icmpne     369
       354: aload_0
       355: iload_3
       356: iconst_2
       357: iadd
       358: iload         7
       360: aload_1
       361: invokespecial #181                // Method isHexFloatLiteral$1:(IILjava/lang/String;)Z
       364: ifeq          369
       367: iconst_1
       368: ireturn
       369: iconst_0
       370: ireturn
       371: aload_0
       372: iload_3
       373: iload         7
       375: aload_1
       376: invokespecial #184                // Method isDecFloatLiteral$1:(IILjava/lang/String;)Z
       379: ireturn
      StackMapTable: number_of_entries = 27
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/StringParsers$, class java/lang/String, top, top, top, top, top, top, top, top, int, int, top, top, top, top, top, int ]
          stack = []
        frame_type = 25 /* same */
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/StringParsers$, class java/lang/String, top, top, top, top, top, top, top, top, int, int, int, top, top, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class scala/collection/StringParsers$, class java/lang/String, top, top, top, top, top, top, top, top, int, int, int, int, int, int, top, int, int ]
          stack = []
        frame_type = 24 /* same */
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/StringParsers$, class java/lang/String, top, top, top, top, top, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, top, top, top, top, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 1 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, top, int, top, top, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 6 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, class java/lang/String, top, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = [ class java/lang/String ]
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, class java/lang/String, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = [ class java/lang/String ]
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, top, top, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, top, int, top, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 5 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class scala/collection/StringParsers$, class java/lang/String, int, int, int, top, top, int, int, int, int, int, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 29 /* same */
        frame_type = 24 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 279: 0
        line 279: 26
        line 279: 29
        line 280: 48
        line 280: 89
        line 280: 92
        line 282: 116
        line 286: 135
        line 287: 143
        line 289: 167
        line 291: 174
        line 292: 214
        line 296: 254
        line 297: 263
        line 298: 297
        line 300: 300
        line 301: 306
        line 302: 314
        line 303: 344
        line 304: 371
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          143      23     4 startchar   C
          263      35     8 endchar   C
          300      79     7 desuffixed   I
          306      73     9   len   I
          167     212     3 unsigned   I
          116     263     2 unspacedEnd   I
            0     380     0  this   Lscala/collection/StringParsers$;
            0     380     1 format   Ljava/lang/String;
            9      37    10 indexWhere$extension_len   I
           13      33    11 indexWhere$extension_i   I
           58      51    13 lastIndexWhere$extension_len   I
           77      32    14 lastIndexWhere$extension_i   I
           68       7    15 lastIndexWhere$extension_min_y   I
    MethodParameters:
      Name                           Flags
      format                         final

  public scala.Option<java.lang.Object> parseFloat(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #197                // Method checkFloatFormat:(Ljava/lang/String;)Z
         5: ifeq          23
         8: new           #65                 // class scala/Some
        11: dup
        12: aload_1
        13: invokestatic  #202                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
        16: invokestatic  #205                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
        19: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        22: areturn
        23: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        26: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 23 /* same */
      LineNumberTable:
        line 311: 0
        line 312: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/StringParsers$;
            0      27     1  from   Ljava/lang/String;
    Signature: #55                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final

  public scala.Option<java.lang.Object> parseDouble(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #197                // Method checkFloatFormat:(Ljava/lang/String;)Z
         5: ifeq          23
         8: new           #65                 // class scala/Some
        11: dup
        12: aload_1
        13: invokestatic  #211                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
        16: invokestatic  #214                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        19: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        22: areturn
        23: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        26: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 23 /* same */
      LineNumberTable:
        line 316: 0
        line 317: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/StringParsers$;
            0      27     1  from   Ljava/lang/String;
    Signature: #55                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      from                           final

  private final scala.Option rec$1(int, int, int, int, boolean, java.lang.String);
    descriptor: (IIIIZLjava/lang/String;)Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=8, args_size=7
         0: iload_2
         1: iload_3
         2: if_icmpge     9
         5: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
         8: areturn
         9: iload_1
        10: iload         4
        12: if_icmpne     54
        15: iload         5
        17: ifne          32
        20: new           #65                 // class scala/Some
        23: dup
        24: iload_2
        25: invokestatic  #128                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        28: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        31: areturn
        32: iload_2
        33: iload_3
        34: if_icmpne     41
        37: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        40: areturn
        41: new           #65                 // class scala/Some
        44: dup
        45: iload_2
        46: ineg
        47: invokestatic  #128                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        50: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        53: areturn
        54: aload         6
        56: iload_1
        57: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        60: bipush        10
        62: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
        65: istore        7
        67: iload         7
        69: iconst_m1
        70: if_icmpne     77
        73: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        76: areturn
        77: iload_1
        78: iconst_1
        79: iadd
        80: iload_2
        81: bipush        10
        83: imul
        84: iload         7
        86: isub
        87: istore_2
        88: istore_1
        89: goto          0
      StackMapTable: number_of_entries = 6
        frame_type = 0 /* same */
        frame_type = 8 /* same */
        frame_type = 22 /* same */
        frame_type = 8 /* same */
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ int ]
      LineNumberTable:
        line 38: 0
        line 39: 9
        line 40: 15
        line 41: 32
        line 42: 41
        line 45: 54
        line 32: 60
        line 46: 67
        line 47: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      92     0  this   Lscala/collection/StringParsers$;
            0      92     1     i   I
            0      92     2   agg   I
            0      92     3 min$1   I
            0      92     4 len$1   I
            0      92     5 isPositive$1   Z
            0      92     6 from$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      i                              final
      agg                            final
      min$1                          final
      len$1                          final
      isPositive$1                   final
      from$1                         final

  public static final byte $anonfun$parseByte$1(int);
    descriptor: (I)B
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: i2b
         2: ireturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final byte $anonfun$parseByte$2(int);
    descriptor: (I)B
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: i2b
         2: ireturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0   x$2   I
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final byte $anonfun$parseByte$3(int);
    descriptor: (I)B
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: i2b
         2: ireturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0   x$3   I
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final short $anonfun$parseShort$1(int);
    descriptor: (I)S
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: i2s
         2: ireturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0   x$4   I
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final short $anonfun$parseShort$2(int);
    descriptor: (I)S
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: i2s
         2: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0   x$5   I
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final short $anonfun$parseShort$3(int);
    descriptor: (I)S
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: i2s
         2: ireturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0   x$6   I
    MethodParameters:
      Name                           Flags
      x$6                            final

  private final scala.Option step$1(int, int, boolean, int, java.lang.String);
    descriptor: (IIZILjava/lang/String;)Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=7, args_size=6
         0: iload_1
         1: iload         4
         3: if_icmpne     45
         6: iload_3
         7: ifne          22
        10: new           #65                 // class scala/Some
        13: dup
        14: iload_2
        15: invokestatic  #128                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        18: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
        22: iload_2
        23: ldc           #236                // int -2147483648
        25: if_icmpne     32
        28: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        31: areturn
        32: new           #65                 // class scala/Some
        35: dup
        36: iload_2
        37: ineg
        38: invokestatic  #128                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        41: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        44: areturn
        45: iload_2
        46: ldc           #17                 // int -214748364
        48: if_icmpge     55
        51: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        54: areturn
        55: aload         5
        57: iload_1
        58: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        61: bipush        10
        63: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
        66: istore        6
        68: iload         6
        70: iconst_m1
        71: if_icmpeq     87
        74: iload_2
        75: ldc           #17                 // int -214748364
        77: if_icmpne     91
        80: iload         6
        82: bipush        9
        84: if_icmpne     91
        87: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        90: areturn
        91: iload_1
        92: iconst_1
        93: iadd
        94: iload_2
        95: bipush        10
        97: imul
        98: iload         6
       100: isub
       101: iload_3
       102: istore_3
       103: istore_2
       104: istore_1
       105: goto          0
      StackMapTable: number_of_entries = 7
        frame_type = 0 /* same */
        frame_type = 21 /* same */
        frame_type = 9 /* same */
        frame_type = 12 /* same */
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ int ]
        frame_type = 3 /* same */
      LineNumberTable:
        line 106: 0
        line 107: 6
        line 108: 22
        line 109: 32
        line 111: 45
        line 113: 55
        line 32: 61
        line 114: 68
        line 115: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lscala/collection/StringParsers$;
            0     108     1     i   I
            0     108     2   agg   I
            0     108     3 isPositive   Z
            0     108     4 len$2   I
            0     108     5 from$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      i                              final
      agg                            final
      isPositive                     final
      len$2                          final
      from$2                         final

  private final scala.Option step$2(int, long, boolean, int, java.lang.String);
    descriptor: (IJZILjava/lang/String;)Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=8, args_size=6
         0: iload_1
         1: iload         5
         3: if_icmpne     53
         6: iload         4
         8: ifeq          23
        11: lload_2
        12: ldc2_w        #239                // long -9223372036854775808l
        15: lcmp
        16: ifne          23
        19: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        22: areturn
        23: iload         4
        25: ifeq          41
        28: new           #65                 // class scala/Some
        31: dup
        32: lload_2
        33: lneg
        34: invokestatic  #140                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        37: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        40: areturn
        41: new           #65                 // class scala/Some
        44: dup
        45: lload_2
        46: invokestatic  #140                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        49: invokespecial #74                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        52: areturn
        53: lload_2
        54: ldc2_w        #22                 // long -922337203685477580l
        57: lcmp
        58: ifge          65
        61: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        64: areturn
        65: aload         6
        67: iload_1
        68: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        71: bipush        10
        73: invokestatic  #33                 // Method java/lang/Character.digit:(CI)I
        76: istore        7
        78: iload         7
        80: iconst_m1
        81: if_icmpeq     99
        84: lload_2
        85: ldc2_w        #22                 // long -922337203685477580l
        88: lcmp
        89: ifne          103
        92: iload         7
        94: bipush        9
        96: if_icmpne     103
        99: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
       102: areturn
       103: iload_1
       104: iconst_1
       105: iadd
       106: lload_2
       107: ldc2_w        #241                // long 10l
       110: lmul
       111: iload         7
       113: i2l
       114: lsub
       115: iload         4
       117: istore        4
       119: lstore_2
       120: istore_1
       121: goto          0
      StackMapTable: number_of_entries = 7
        frame_type = 0 /* same */
        frame_type = 22 /* same */
        frame_type = 17 /* same */
        frame_type = 11 /* same */
        frame_type = 11 /* same */
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [ int ]
        frame_type = 3 /* same */
      LineNumberTable:
        line 141: 0
        line 142: 6
        line 143: 23
        line 144: 41
        line 146: 53
        line 148: 65
        line 32: 71
        line 149: 78
        line 150: 103
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     124     0  this   Lscala/collection/StringParsers$;
            0     124     1     i   I
            0     124     2   agg   J
            0     124     4 isPositive   Z
            0     124     5 len$3   I
            0     124     6 from$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      i                              final
      agg                            final
      isPositive                     final
      len$3                          final
      from$3                         final

  private final boolean rec$2(int, int, scala.Function1, java.lang.String);
    descriptor: (IILscala/Function1;Ljava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=5
         0: iload_1
         1: iload_2
         2: if_icmpge     33
         5: aload_3
         6: aload         4
         8: iload_1
         9: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        12: invokestatic  #250                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        15: invokeinterface #256,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        20: invokestatic  #259                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        23: ifeq          35
        26: iload_1
        27: iconst_1
        28: iadd
        29: istore_1
        30: goto          0
        33: iconst_1
        34: ireturn
        35: iconst_0
        36: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 32 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lscala/collection/StringParsers$;
            0      37     1     i   I
            0      37     2 end$1   I
            0      37     3 pred$1   Lscala/Function1;
            0      37     4 format$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      i                              final
      end$1                          final
      pred$1                         final
      format$1                       final

  private final boolean forAllBetween$1(int, int, scala.Function1, java.lang.String);
    descriptor: (IILscala/Function1;Ljava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=6, args_size=5
         0: iload_1
         1: istore        5
         3: iload         5
         5: iload_2
         6: if_icmpge     40
         9: aload_3
        10: aload         4
        12: iload         5
        14: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        17: invokestatic  #250                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        20: invokeinterface #256,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        25: invokestatic  #259                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        28: ifeq          42
        31: iload         5
        33: iconst_1
        34: iadd
        35: istore        5
        37: goto          3
        40: iconst_1
        41: ireturn
        42: iconst_0
        43: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ int ]
        frame_type = 36 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 183: 0
        line 182: 3
        line 183: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lscala/collection/StringParsers$;
            0      44     1 start   I
            0      44     2   end   I
            0      44     3  pred   Lscala/Function1;
            0      44     4 format$1   Ljava/lang/String;
            3      40     5 rec$2_i   I
    MethodParameters:
      Name                           Flags
      start                          final
      end                            final
      pred                           final
      format$1                       final

  private final int rec$3(int, int, scala.Function1, java.lang.String);
    descriptor: (IILscala/Function1;Ljava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=5
         0: iload_1
         1: iload_2
         2: if_icmpge     33
         5: aload_3
         6: aload         4
         8: iload_1
         9: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        12: invokestatic  #250                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        15: invokeinterface #256,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        20: invokestatic  #259                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        23: ifeq          33
        26: iload_1
        27: iconst_1
        28: iadd
        29: istore_1
        30: goto          0
        33: iload_1
        34: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 32 /* same */
      LineNumberTable:
        line 191: 0
        line 192: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lscala/collection/StringParsers$;
            0      35     1     i   I
            0      35     2 until$1   I
            0      35     3 predicate$1   Lscala/Function1;
            0      35     4 format$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      i                              final
      until$1                        final
      predicate$1                    final
      format$1                       final

  private final int skipIndexWhile$1(scala.Function1, int, int, java.lang.String);
    descriptor: (Lscala/Function1;IILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=6, args_size=5
         0: iload_2
         1: istore        5
         3: iload         5
         5: iload_3
         6: if_icmpge     40
         9: aload_1
        10: aload         4
        12: iload         5
        14: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        17: invokestatic  #250                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        20: invokeinterface #256,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        25: invokestatic  #259                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        28: ifeq          40
        31: iload         5
        33: iconst_1
        34: iadd
        35: istore        5
        37: goto          3
        40: iload         5
        42: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ int ]
        frame_type = 36 /* same */
      LineNumberTable:
        line 193: 0
        line 191: 3
        line 192: 40
        line 193: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lscala/collection/StringParsers$;
            0      43     1 predicate   Lscala/Function1;
            0      43     2  from   I
            0      43     3 until   I
            0      43     4 format$1   Ljava/lang/String;
            3      37     5 rec$3_i   I
    MethodParameters:
      Name                           Flags
      predicate                      final
      from                           final
      until                          final
      format$1                       final

  private static final boolean isHexDigit$1(char);
    descriptor: (C)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        48
         3: if_icmplt     12
         6: iload_0
         7: bipush        57
         9: if_icmple     36
        12: iload_0
        13: bipush        97
        15: if_icmplt     24
        18: iload_0
        19: bipush        102
        21: if_icmple     36
        24: iload_0
        25: bipush        65
        27: if_icmplt     38
        30: iload_0
        31: bipush        70
        33: if_icmpgt     38
        36: iconst_1
        37: ireturn
        38: iconst_0
        39: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 12 /* same */
        frame_type = 11 /* same */
        frame_type = 11 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 198: 0
        line 199: 12
        line 200: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final boolean $anonfun$checkFloatFormat$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: invokestatic  #278                // Method isHexDigit$1:(C)Z
         4: ireturn
      LineNumberTable:
        line 212: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final boolean $anonfun$checkFloatFormat$2(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: invokestatic  #278                // Method isHexDigit$1:(C)Z
         4: ireturn
      LineNumberTable:
        line 214: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final boolean $anonfun$checkFloatFormat$3(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: invokestatic  #278                // Method isHexDigit$1:(C)Z
         4: ireturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  private final boolean prefixOK$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=8, args_size=4
         0: iload_2
         1: iload_1
         2: isub
         3: istore        4
         5: iload         4
         7: iconst_0
         8: if_icmple     173
        11: aload_3
        12: iload_1
        13: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        16: bipush        46
        18: if_icmpne     75
        21: iload         4
        23: iconst_1
        24: if_icmple     71
        27: iload_1
        28: iconst_1
        29: iadd
        30: istore        5
        32: iload         5
        34: iload_2
        35: if_icmpge     59
        38: aload_3
        39: iload         5
        41: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        44: invokestatic  #278                // Method isHexDigit$1:(C)Z
        47: ifeq          63
        50: iload         5
        52: iconst_1
        53: iadd
        54: istore        5
        56: goto          32
        59: iconst_1
        60: goto          64
        63: iconst_0
        64: ifeq          71
        67: iconst_1
        68: goto          168
        71: iconst_0
        72: goto          168
        75: iload_1
        76: istore        6
        78: iload         6
        80: iload_2
        81: if_icmpge     105
        84: aload_3
        85: iload         6
        87: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        90: invokestatic  #278                // Method isHexDigit$1:(C)Z
        93: ifeq          105
        96: iload         6
        98: iconst_1
        99: iadd
       100: istore        6
       102: goto          78
       105: iload         6
       107: iload_2
       108: if_icmpge     163
       111: aload_3
       112: iload         6
       114: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       117: bipush        46
       119: if_icmpne     167
       122: iload         6
       124: iconst_1
       125: iadd
       126: istore        7
       128: iload         7
       130: iload_2
       131: if_icmpge     155
       134: aload_3
       135: iload         7
       137: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       140: invokestatic  #278                // Method isHexDigit$1:(C)Z
       143: ifeq          159
       146: iload         7
       148: iconst_1
       149: iadd
       150: istore        7
       152: goto          128
       155: iconst_1
       156: goto          160
       159: iconst_0
       160: ifeq          167
       163: iconst_1
       164: goto          168
       167: iconst_0
       168: ifeq          173
       171: iconst_1
       172: ireturn
       173: iconst_0
       174: ireturn
      StackMapTable: number_of_entries = 16
        frame_type = 253 /* append */
          offset_delta = 32
          locals = [ int, int ]
        frame_type = 26 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 3 /* same */
        frame_type = 253 /* append */
          offset_delta = 2
          locals = [ top, int ]
        frame_type = 26 /* same */
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ int ]
        frame_type = 26 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/StringParsers$, int, int, class java/lang/String, int ]
          stack = [ int ]
        frame_type = 4 /* same */
      LineNumberTable:
        line 203: 0
        line 204: 5
        line 211: 11
        line 212: 21
        line 183: 30
        line 182: 32
        line 212: 44
        line 182: 47
        line 212: 64
        line 193: 75
        line 191: 78
        line 214: 90
        line 191: 93
        line 215: 105
        line 216: 111
        line 183: 126
        line 182: 128
        line 216: 140
        line 182: 143
        line 216: 160
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     169     4   len   I
            0     175     0  this   Lscala/collection/StringParsers$;
            0     175     1 startIndex   I
            0     175     2 endIndex   I
            0     175     3 format$1   Ljava/lang/String;
           32      32     5 forAllBetween$1_rec$2_i   I
           78      27     6 skipIndexWhile$1_rec$3_i   I
          128      32     7 forAllBetween$1_rec$2_i   I
    MethodParameters:
      Name                           Flags
      startIndex                     final
      endIndex                       final
      format$1                       final

  public static final boolean $anonfun$checkFloatFormat$4(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
         3: iload_0
         4: invokespecial #288                // Method isDigit:(C)Z
         7: ireturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final boolean $anonfun$checkFloatFormat$5(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
         3: iload_0
         4: invokespecial #288                // Method isDigit:(C)Z
         7: ireturn
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  private final boolean postfixOK$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=4
         0: iload_1
         1: iload_2
         2: if_icmpge     121
         5: iload_1
         6: istore        5
         8: iload         5
        10: iload_2
        11: if_icmpge     35
        14: aload_3
        15: iload         5
        17: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        20: invokestatic  #292                // Method $anonfun$checkFloatFormat$4:(C)Z
        23: ifeq          39
        26: iload         5
        28: iconst_1
        29: iadd
        30: istore        5
        32: goto          8
        35: iconst_1
        36: goto          40
        39: iconst_0
        40: ifne          119
        43: aload_3
        44: iload_1
        45: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        48: istore        4
        50: iload         4
        52: bipush        43
        54: if_icmpeq     64
        57: iload         4
        59: bipush        45
        61: if_icmpne     115
        64: iload_2
        65: iload_1
        66: isub
        67: iconst_1
        68: if_icmple     115
        71: iload_1
        72: iconst_1
        73: iadd
        74: istore        6
        76: iload         6
        78: iload_2
        79: if_icmpge     103
        82: aload_3
        83: iload         6
        85: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        88: invokestatic  #294                // Method $anonfun$checkFloatFormat$5:(C)Z
        91: ifeq          107
        94: iload         6
        96: iconst_1
        97: iadd
        98: istore        6
       100: goto          76
       103: iconst_1
       104: goto          108
       107: iconst_0
       108: ifeq          115
       111: iconst_1
       112: goto          116
       115: iconst_0
       116: ifeq          121
       119: iconst_1
       120: ireturn
       121: iconst_0
       122: ireturn
      StackMapTable: number_of_entries = 13
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ top, int ]
        frame_type = 26 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class scala/collection/StringParsers$, int, int, class java/lang/String, int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ int ]
        frame_type = 26 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/StringParsers$, int, int, class java/lang/String, top, int ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 1
      LineNumberTable:
        line 222: 0
        line 183: 5
        line 182: 8
        line 223: 20
        line 182: 23
        line 223: 40
        line 224: 43
        line 225: 50
        line 226: 64
        line 227: 71
        line 183: 74
        line 182: 76
        line 227: 88
        line 182: 91
        line 227: 108
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           50      66     4 startchar   C
            0     123     0  this   Lscala/collection/StringParsers$;
            0     123     1 startIndex   I
            0     123     2 endIndex   I
            0     123     3 format$1   Ljava/lang/String;
            8      32     5 forAllBetween$1_rec$2_i   I
           76      32     6 forAllBetween$1_rec$2_i   I
    MethodParameters:
      Name                           Flags
      startIndex                     final
      endIndex                       final
      format$1                       final

  public static final boolean $anonfun$checkFloatFormat$6(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        112
         3: if_icmpeq     12
         6: iload_0
         7: bipush        80
         9: if_icmpne     14
        12: iconst_1
        13: ireturn
        14: iconst_0
        15: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  private final boolean isHexFloatLiteral$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=7, args_size=4
         0: aload_3
         1: invokevirtual #85                 // Method java/lang/String.length:()I
         4: istore        4
         6: iload_1
         7: istore        5
         9: iload         5
        11: iload         4
        13: if_icmpge     41
        16: aload_3
        17: iload         5
        19: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        22: invokestatic  #297                // Method $anonfun$checkFloatFormat$6:(C)Z
        25: ifeq          35
        28: iload         5
        30: istore        6
        32: goto          44
        35: iinc          5, 1
        38: goto          9
        41: iconst_m1
        42: istore        6
        44: iload         6
        46: iload_2
        47: if_icmpgt     76
        50: aload_0
        51: iload_1
        52: iload         6
        54: aload_3
        55: invokespecial #299                // Method prefixOK$1:(IILjava/lang/String;)Z
        58: ifeq          76
        61: aload_0
        62: iload         6
        64: iconst_1
        65: iadd
        66: iload_2
        67: aload_3
        68: invokespecial #301                // Method postfixOK$1:(IILjava/lang/String;)Z
        71: ifeq          76
        74: iconst_1
        75: ireturn
        76: iconst_0
        77: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 9
          locals = [ int, int ]
        frame_type = 25 /* same */
        frame_type = 5 /* same */
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 31 /* same */
      LineNumberTable:
        line 231: 0
        line 231: 22
        line 231: 25
        line 232: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      78     0  this   Lscala/collection/StringParsers$;
            0      78     1 startIndex   I
            0      78     2 endIndex   I
            0      78     3 format$1   Ljava/lang/String;
            6      36     4 indexWhere$extension_len   I
            9      33     5 indexWhere$extension_i   I
    MethodParameters:
      Name                           Flags
      startIndex                     final
      endIndex                       final
      format$1                       final

  private static final boolean isExp$1(char);
    descriptor: (C)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        101
         3: if_icmpeq     12
         6: iload_0
         7: bipush        69
         9: if_icmpne     14
        12: iconst_1
        13: ireturn
        14: iconst_0
        15: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final boolean $anonfun$checkFloatFormat$7(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
         3: iload_0
         4: invokespecial #288                // Method isDigit:(C)Z
         7: ireturn
      LineNumberTable:
        line 245: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final boolean $anonfun$checkFloatFormat$8(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
         3: iload_0
         4: invokespecial #288                // Method isDigit:(C)Z
         7: ireturn
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  private final boolean expOK$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=7, args_size=4
         0: iload_1
         1: iload_2
         2: if_icmpge     125
         5: aload_3
         6: iload_1
         7: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        10: istore        4
        12: iload         4
        14: bipush        43
        16: if_icmpeq     26
        19: iload         4
        21: bipush        45
        23: if_icmpne     79
        26: iload_2
        27: iload_1
        28: iconst_1
        29: iadd
        30: if_icmple     75
        33: iload_1
        34: iconst_1
        35: iadd
        36: istore        5
        38: iload         5
        40: iload_2
        41: if_icmpge     65
        44: aload_3
        45: iload         5
        47: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        50: invokestatic  #307                // Method $anonfun$checkFloatFormat$7:(C)Z
        53: ifeq          65
        56: iload         5
        58: iconst_1
        59: iadd
        60: istore        5
        62: goto          38
        65: iload         5
        67: iload_2
        68: if_icmpne     75
        71: iconst_1
        72: goto          120
        75: iconst_0
        76: goto          120
        79: iload_1
        80: istore        6
        82: iload         6
        84: iload_2
        85: if_icmpge     109
        88: aload_3
        89: iload         6
        91: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        94: invokestatic  #309                // Method $anonfun$checkFloatFormat$8:(C)Z
        97: ifeq          109
       100: iload         6
       102: iconst_1
       103: iadd
       104: istore        6
       106: goto          82
       109: iload         6
       111: iload_2
       112: if_icmpne     119
       115: iconst_1
       116: goto          120
       119: iconst_0
       120: ifeq          125
       123: iconst_1
       124: ireturn
       125: iconst_0
       126: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ int ]
        frame_type = 26 /* same */
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 3 /* same */
        frame_type = 253 /* append */
          offset_delta = 2
          locals = [ top, int ]
        frame_type = 26 /* same */
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/StringParsers$, int, int, class java/lang/String, int ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 4
      LineNumberTable:
        line 241: 0
        line 242: 5
        line 243: 12
        line 244: 26
        line 245: 33
        line 193: 36
        line 191: 38
        line 245: 50
        line 191: 53
        line 193: 65
        line 245: 65
        line 193: 79
        line 191: 82
        line 246: 94
        line 191: 97
        line 193: 109
        line 246: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12     108     4 startChar   C
            0     127     0  this   Lscala/collection/StringParsers$;
            0     127     1 startIndex   I
            0     127     2 endIndex   I
            0     127     3 format$1   Ljava/lang/String;
           38      27     5 skipIndexWhile$1_rec$3_i   I
           82      27     6 skipIndexWhile$1_rec$3_i   I
    MethodParameters:
      Name                           Flags
      startIndex                     final
      endIndex                       final
      format$1                       final

  public static final boolean $anonfun$checkFloatFormat$9(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
         3: iload_0
         4: invokespecial #288                // Method isDigit:(C)Z
         7: ireturn
      LineNumberTable:
        line 256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final boolean $anonfun$checkFloatFormat$10(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
         3: iload_0
         4: invokespecial #288                // Method isDigit:(C)Z
         7: ireturn
      LineNumberTable:
        line 264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final boolean $anonfun$checkFloatFormat$11(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #14                 // Field MODULE$:Lscala/collection/StringParsers$;
         3: iload_0
         4: invokespecial #288                // Method isDigit:(C)Z
         7: ireturn
      LineNumberTable:
        line 268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  private final boolean isDecFloatLiteral$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=8, args_size=4
         0: aload_3
         1: iload_1
         2: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
         5: istore        4
         7: iload         4
         9: bipush        46
        11: if_icmpne     89
        14: iload_1
        15: iconst_1
        16: iadd
        17: istore        5
        19: iload         5
        21: iload_2
        22: if_icmpge     46
        25: aload_3
        26: iload         5
        28: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        31: invokestatic  #315                // Method $anonfun$checkFloatFormat$9:(C)Z
        34: ifeq          46
        37: iload         5
        39: iconst_1
        40: iadd
        41: istore        5
        43: goto          19
        46: iload         5
        48: iload_1
        49: iconst_1
        50: iadd
        51: if_icmple     87
        54: iload         5
        56: iload_2
        57: if_icmpge     85
        60: aload_3
        61: iload         5
        63: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
        66: invokestatic  #317                // Method isExp$1:(C)Z
        69: ifeq          87
        72: aload_0
        73: iload         5
        75: iconst_1
        76: iadd
        77: iload_2
        78: aload_3
        79: invokespecial #319                // Method expOK$1:(IILjava/lang/String;)Z
        82: ifeq          87
        85: iconst_1
        86: ireturn
        87: iconst_0
        88: ireturn
        89: iload         4
        91: bipush        48
        93: if_icmplt     107
        96: iload         4
        98: bipush        57
       100: if_icmpgt     107
       103: iconst_1
       104: goto          108
       107: iconst_0
       108: ifeq          267
       111: iload_1
       112: istore        6
       114: iload         6
       116: iload_2
       117: if_icmpge     141
       120: aload_3
       121: iload         6
       123: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       126: invokestatic  #321                // Method $anonfun$checkFloatFormat$10:(C)Z
       129: ifeq          141
       132: iload         6
       134: iconst_1
       135: iadd
       136: istore        6
       138: goto          114
       141: iload         6
       143: iload_2
       144: if_icmpeq     263
       147: aload_3
       148: iload         6
       150: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       153: bipush        46
       155: if_icmpne     230
       158: iload         6
       160: iconst_1
       161: iadd
       162: istore        7
       164: iload         7
       166: iload_2
       167: if_icmpge     191
       170: aload_3
       171: iload         7
       173: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       176: invokestatic  #323                // Method $anonfun$checkFloatFormat$11:(C)Z
       179: ifeq          191
       182: iload         7
       184: iconst_1
       185: iadd
       186: istore        7
       188: goto          164
       191: iload         7
       193: iload_2
       194: if_icmpge     222
       197: aload_3
       198: iload         7
       200: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       203: invokestatic  #317                // Method isExp$1:(C)Z
       206: ifeq          226
       209: aload_0
       210: iload         7
       212: iconst_1
       213: iadd
       214: iload_2
       215: aload_3
       216: invokespecial #319                // Method expOK$1:(IILjava/lang/String;)Z
       219: ifeq          226
       222: iconst_1
       223: goto          260
       226: iconst_0
       227: goto          260
       230: aload_3
       231: iload         6
       233: invokevirtual #89                 // Method java/lang/String.charAt:(I)C
       236: invokestatic  #317                // Method isExp$1:(C)Z
       239: ifeq          259
       242: aload_0
       243: iload         6
       245: iconst_1
       246: iadd
       247: iload_2
       248: aload_3
       249: invokespecial #319                // Method expOK$1:(IILjava/lang/String;)Z
       252: ifeq          259
       255: iconst_1
       256: goto          260
       259: iconst_0
       260: ifeq          265
       263: iconst_1
       264: ireturn
       265: iconst_0
       266: ireturn
       267: iconst_0
       268: ireturn
      StackMapTable: number_of_entries = 19
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ int, int ]
        frame_type = 26 /* same */
        frame_type = 38 /* same */
        frame_type = 1 /* same */
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 253 /* append */
          offset_delta = 5
          locals = [ top, int ]
        frame_type = 26 /* same */
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ int ]
        frame_type = 26 /* same */
        frame_type = 30 /* same */
        frame_type = 3 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 28 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 2 /* same */
        frame_type = 1 /* same */
        frame_type = 249 /* chop */
          offset_delta = 1
      LineNumberTable:
        line 254: 0
        line 255: 7
        line 256: 14
        line 193: 17
        line 191: 19
        line 256: 31
        line 191: 34
        line 258: 46
        line 259: 60
        line 53: 89
        line 262: 108
        line 193: 111
        line 191: 114
        line 264: 126
        line 191: 129
        line 266: 141
        line 267: 147
        line 268: 158
        line 193: 162
        line 191: 164
        line 268: 176
        line 191: 179
        line 269: 191
        line 270: 197
        line 272: 230
        line 275: 267
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7     261     4 startChar   C
            0     269     0  this   Lscala/collection/StringParsers$;
            0     269     1 startIndex   I
            0     269     2 endIndex   I
            0     269     3 format$1   Ljava/lang/String;
           19      27     5 skipIndexWhile$1_rec$3_i   I
          114      27     6 skipIndexWhile$1_rec$3_i   I
          164      27     7 skipIndexWhile$1_rec$3_i   I
    MethodParameters:
      Name                           Flags
      startIndex                     final
      endIndex                       final
      format$1                       final

  public static final boolean $anonfun$checkFloatFormat$12(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        32
         3: if_icmple     8
         6: iconst_1
         7: ireturn
         8: iconst_0
         9: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 8 /* same */
      LineNumberTable:
        line 279: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final boolean $anonfun$checkFloatFormat$13(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        32
         3: if_icmple     8
         6: iconst_1
         7: ireturn
         8: iconst_0
         9: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 8 /* same */
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  private scala.collection.StringParsers$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #324                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/StringParsers$;

  public static final java.lang.Object $anonfun$parseByte$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: invokestatic  #327                // Method $anonfun$parseByte$1:(I)B
         7: invokestatic  #330                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
        10: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.Object $anonfun$parseByte$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: invokestatic  #334                // Method $anonfun$parseByte$2:(I)B
         7: invokestatic  #330                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
        10: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.lang.Object $anonfun$parseByte$3$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: invokestatic  #337                // Method $anonfun$parseByte$3:(I)B
         7: invokestatic  #330                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
        10: areturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$3   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final java.lang.Object $anonfun$parseShort$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: invokestatic  #340                // Method $anonfun$parseShort$1:(I)S
         7: invokestatic  #343                // Method scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
        10: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$4   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final java.lang.Object $anonfun$parseShort$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: invokestatic  #346                // Method $anonfun$parseShort$2:(I)S
         7: invokestatic  #343                // Method scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
        10: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$5   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.Object $anonfun$parseShort$3$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #110                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: invokestatic  #349                // Method $anonfun$parseShort$3:(I)S
         7: invokestatic  #343                // Method scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
        10: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$6   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final java.lang.Object $anonfun$checkFloatFormat$12$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #151                // Method $anonfun$checkFloatFormat$12:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 279: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final java.lang.Object $anonfun$checkFloatFormat$13$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #165                // Method $anonfun$checkFloatFormat$13:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final java.lang.Object $anonfun$checkFloatFormat$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #361                // Method $anonfun$checkFloatFormat$1:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 212: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final java.lang.Object $anonfun$checkFloatFormat$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #364                // Method $anonfun$checkFloatFormat$2:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 214: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final java.lang.Object $anonfun$checkFloatFormat$3$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #367                // Method $anonfun$checkFloatFormat$3:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final java.lang.Object $anonfun$checkFloatFormat$4$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #292                // Method $anonfun$checkFloatFormat$4:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$checkFloatFormat$5$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #294                // Method $anonfun$checkFloatFormat$5:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$checkFloatFormat$6$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #297                // Method $anonfun$checkFloatFormat$6:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final java.lang.Object $anonfun$checkFloatFormat$7$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #307                // Method $anonfun$checkFloatFormat$7:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 245: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$checkFloatFormat$8$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #309                // Method $anonfun$checkFloatFormat$8:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$checkFloatFormat$9$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #315                // Method $anonfun$checkFloatFormat$9:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$checkFloatFormat$10$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #321                // Method $anonfun$checkFloatFormat$10:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$checkFloatFormat$11$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #354                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #323                // Method $anonfun$checkFloatFormat$11:(C)Z
         7: invokestatic  #357                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final
}
SourceFile: "StringParsers.scala"
  ScalaInlineInfo: length = 0x158 (unknown attribute)
   01 01 00 44 01 14 00 33 01 01 67 00 FE 01 01 38
   00 33 01 01 76 00 FE 01 01 39 00 33 01 01 77 00
   FE 01 00 95 00 33 01 01 5E 00 FE 01 00 A3 00 33
   01 01 66 00 FE 01 01 17 00 33 01 01 6A 00 FE 01
   01 18 00 33 01 01 6D 00 FE 01 01 1E 00 33 01 01
   70 00 FE 01 01 21 00 33 01 01 71 00 FE 01 01 27
   00 33 01 01 72 00 FE 01 01 2F 00 33 01 01 73 00
   FE 01 01 30 00 33 01 01 74 00 FE 01 01 37 00 33
   01 01 75 00 FE 01 00 DC 00 DD 01 01 45 00 FE 01
   00 DF 00 DD 01 01 4C 00 FE 01 00 E1 00 DD 01 01
   4F 00 FE 01 00 E3 00 E4 01 01 52 00 FE 01 00 E6
   00 E4 01 01 58 00 FE 01 00 E8 00 E4 01 01 5B 00
   FE 01 00 0A 00 09 01 00 93 00 3D 01 00 19 00 1A
   05 01 31 00 B3 01 01 05 00 F4 05 00 0F 00 10 01
   00 13 00 10 01 00 B6 00 B3 01 00 32 00 33 05 01
   2E 00 33 01 01 13 00 33 01 00 B2 00 B3 01 00 14
   00 15 01 00 18 00 10 01 00 35 00 36 05 00 52 00
   36 01 00 CE 00 36 05 00 C3 00 36 05 00 7B 00 36
   01 00 85 00 36 01 00 75 00 36 01 01 22 00 B3 01
   01 19 00 B3 01 00 2B 00 2C 01 00 F3 00 F4 01 01
   0A 01 0B 05 01 0E 01 0F 05 00 81 00 82 01 00 8D
   00 8E 01 00 23 00 24 05
  Scala: length = 0x0 (unknown attribute)

