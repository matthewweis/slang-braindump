Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/Resolve.class
  Last modified May 29, 2022; size 43767 bytes
  SHA-256 checksum 2b32dad4838a63612d3e3700d9960a3920b6063bade85a93c5a830d0613c9423
  Compiled from "Resolve.scala"
public final class coursier.Resolve<F extends java.lang.Object> extends java.lang.Object implements scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/Resolve
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 10, methods: 95, attributes: 7
Constant pool:
     #1 = Utf8               coursier/Resolve
     #2 = Class              #1           // coursier/Resolve
     #3 = Utf8               <F:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
     #4 = Utf8               java/lang/Object
     #5 = Class              #4           // java/lang/Object
     #6 = Utf8               scala/Product
     #7 = Class              #6           // scala/Product
     #8 = Utf8               java/io/Serializable
     #9 = Class              #8           // java/io/Serializable
    #10 = Utf8               Resolve.scala
    #11 = Utf8               Lscala/reflect/ScalaSignature;
    #12 = Utf8               bytes
    #13 = Utf8               \u0006\u0005\u0015Mb\u0001B5k\u00055D!\"!\u0003\u0001\u0005\u000b\u0007I\u0011AA\u0006\u0011)\t\u0019\u0004\u0001B\u0001B\u0003%\u0011Q\u0002\u0005\u000b\u0003k\u0001!Q1A\u0005\u0002\u0005]\u0002BCA\'\u0001\t\u0005\t\u0015!\u0003\u0002:!Q\u0011q\n\u0001\u0003\u0006\u0004%\t!!\u0015\t\u0015\u0005m\u0003A!A!\u0002\u0013\t\u0019\u0006\u0003\u0006\u0002^\u0001\u0011)\u0019!C\u0001\u0003?B!\"a\u001c\u0001\u0005\u0003\u0005\u000b\u0011BA1\u0011)\t\t\b\u0001BC\u0002\u0013\u0005\u00111\u000f\u0005\u000b\u0003{\u0002!\u0011!Q\u0001\n\u0005U\u0004BCA@\u0001\t\u0015\r\u0011\"\u0001\u0002\u0002\"Q\u0011\u0011\u0012\u0001\u0003\u0002\u0003\u0006I!a!\t\u0015\u0005-\u0005A!b\u0001\n\u0003\ti\t\u0003\u0006\u0002$\u0002\u0011\t\u0011)A\u0005\u0003\u001fC!\"!*\u0001\u0005\u000b\u0007I\u0011AAT\u0011)\ty\f\u0001B\u0001B\u0003%\u0011\u0011\u0016\u0005\u000b\u0003\u0003\u0004!Q1A\u0005\u0002\u0005\r\u0007BCAd\u0001\t\u0005\t\u0015!\u0003\u0002F\"Q\u0011\u0011\u001a\u0001\u0003\u0006\u0004%\u0019!a3\t\u0015\u0005e\u0007A!A!\u0002\u0013\ti\rC\u0004\u0002\\\u0002!\t!!8\t\u000f\u0005m\u0007\u0001\"\u0001\u0002x\"9\u00111\u001c\u0001\u0005\u0002\t5\u0001b\u0002B\u000b\u0001\u0011%\u00111\u001a\u0005\b\u0005/\u0001A\u0011\u0002B\r\u0011\u001d\u0011Y\u0002\u0001C\u0005\u0005;AqAa\b\u0001\t\u0003\t9\u0004C\u0004\u0003\"\u0001!\tAa\t\t\u000f\t\u001d\u0002\u0001\"\u0001\u0003*!9!1\u0007\u0001\u0005\u0002\tU\u0002b\u0002B\u001e\u0001\u0011\u0005!Q\b\u0005\b\u0005\u007f\u0001A\u0011\u0001B!\u0011\u001d\u00119\u0005\u0001C\u0001\u0005\u0013BqAa\u0014\u0001\t\u0003\u0011\t\u0006C\u0004\u0003Z\u0001!\tAa\u0017\t\u000f\t}\u0003\u0001\"\u0001\u0003b!9!1\r\u0001\u0005\u0002\t\u0015\u0004b\u0002B\u000e\u0001\u0011\u0005!1\u000e\u0005\b\u0005_\u0002A\u0011\u0001B1\u0011\u001d\u0011\t\b\u0001C\u0001\u0005gBqAa\u001e\u0001\t\u0013\u0011I\bC\u0004\u0003\n\u0002!\tAa#\t\u000f\t=\u0005\u0001\"\u0003\u0003\u0012\"9!Q\u0013\u0001\u0005\n\t]\u0005b\u0002B\\\u0001\u0011\u0005!\u0011\u0018\u0005\b\u0005w\u0003A\u0011\u0001B_\u0011\u001d\u0011y\f\u0001C\u0001\u0005\u0003DqA!2\u0001\t\u0003\u00119\rC\u0004\u0003L\u0002!\tA!4\t\u000f\tE\u0007\u0001\"\u0001\u0003T\"9!q\u001b\u0001\u0005\u0002\te\u0007b\u0002Bo\u0001\u0011\u0005!q\u001c\u0005\b\u0005G\u0004A\u0011\u0001Bs\u0011\u001d\u0011I\u000f\u0001C\u0001\u0005WDqAa<\u0001\t\u0003\u0011\t\u0010C\u0004\u0003v\u0002!\tAa>\t\u000f\tm\b\u0001\"\u0011\u0003~\"91q\u0002\u0001\u0005B\rE\u0001bBB\u000f\u0001\u0011\u00053q\u0004\u0005\b\u0007G\u0001A\u0011IB\u0013\u0011\u001d\u0019i\u0003\u0001C\u0005\u0007_Aqaa\u000e\u0001\t\u0003\u001aI\u0004C\u0004\u0004<\u0001!\te!\u0010\t\u000f\r}\u0002\u0001\"\u0011\u0004B!91q\t\u0001\u0005B\r%saBB\'U\"\u00051q\n\u0004\u0007S*D\ta!\u0015\t\u000f\u0005m7\t\"\u0001\u0004b!911M\"\u0005\u0002\r\u0015dABB8\u0007\u000e\u0019\t\b\u0003\b\u0004z\u0019#\t\u0011!B\u0003\u0006\u0004%Iaa\u001f\t\u0017\rudI!B\u0001B\u0003%1q\r\u0005\b\u000374E\u0011AB@\u0011\u001d\u0019II\u0012C\u0001\u0007\u0017C\u0011b!*G#\u0003%\taa*\t\u000f\ruf\t\"\u0001\u0004@\"I11\u001b$\u0012\u0002\u0013\u00051q\u0015\u0005\b\u0007+4E\u0011ABl\u0011%\u0019iNRI\u0001\n\u0003\u00199\u000bC\u0005\u0004$\u0019\u000b\t\u0011\"\u0011\u0004&!I1Q\u0004$\u0002\u0002\u0013\u00053q\u001c\u0005\n\u0007K\u001c\u0015\u0011!C\u0002\u0007OD\u0001\"!1D\t\u0003Q71\u001e\u0005\u000b\u0007k\u001c\u0015\u0013!C\u0001U\u000e]\bBCB~\u0007F\u0005I\u0011\u00016\u0004~\"AA\u0011A\"\u0005\u0002)$\u0019\u0001\u0003\u0006\u0005.\r\u000b\n\u0011\"\u0001k\t_A!\u0002b\u000fD#\u0003%\tA\u001bC\u001f\u0011\u001d!Ie\u0011C\u0001\t\u0017Bqaa\u0019D\t\u0003!i\u0006C\u0004\u0004d\r#\t\u0001\"\u001e\t\u000f\r\r4\t\"\u0001\u0005(\u001eI1Q]\"\u0002\u0002#\u0005A1\u001c\u0004\n\u0007_\u001a\u0015\u0011!E\u0001\t;Dq!a7_\t\u0003!y\u000eC\u0004\u0005bz#)\u0001b9\t\u0013\u0011=h,%A\u0005\u0006\u0011E\bb\u0002C{=\u0012\u0015Aq\u001f\u0005\n\u000b\u0003q\u0016\u0013!C\u0003\u000b\u0007Aq!b\u0002_\t\u000b)I\u0001C\u0005\u0006\u0014y\u000b\n\u0011\"\u0002\u0006\u0016!IQ\u0011\u00040\u0002\u0002\u0013\u0015Q1\u0004\u0005\n\u000b?q\u0016\u0011!C\u0003\u000bCA\u0011\"\"\u000bD\u0003\u0003%I!b\u000b\u0003\u000fI+7o\u001c7wK*\t1.\u0001\u0005d_V\u00148/[3s\u0007\u0001)2A\\A\u000e\'\u0011\u0001q.\u001e=\u0011\u0005A\u001cX\"A9\u000b\u0003I\fQa]2bY\u0006L!\u0001^9\u0003\r\u0005s\u0017PU3g!\t\u0001h/\u0003\u0002xc\n9\u0001K]8ek\u000e$\bcA=\u0002\u00049\u0011!p \b\u0003wzl\u0011\u0001 \u0006\u0003{2\fa\u0001\u0010:p_Rt\u0014\"\u0001:\n\u0007\u0005\u0005\u0011/A\u0004qC\u000e\\\u0017mZ3\n\t\u0005\u0015\u0011q\u0001\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0004\u0003\u0003\t\u0018!B2bG\",WCAA\u0007!\u0019\ty!a\u0005\u0002\u00185\u0011\u0011\u0011\u0003\u0006\u0004\u0003\u0013Q\u0017\u0002BA\u000b\u0003#\u0011QaQ1dQ\u0016\u0004B!!\u0007\u0002\u001c1\u0001AaBA\u000f\u0001\t\u0007\u0011q\u0004\u0002\u0002\rV!\u0011\u0011EA\u0018#\u0011\t\u0019#!\u000b\u0011\u0007A\f)#C\u0002\u0002(E\u0014qAT8uQ&tw\rE\u0002q\u0003WI1!!\fr\u0005\r\te.\u001f\u0003\t\u0003c\tYB1\u0001\u0002\"\t\tq,\u0001\u0004dC\u000eDW\rI\u0001\rI\u0016\u0004XM\u001c3f]\u000eLWm]\u000b\u0003\u0003s\u0001R!_A\u001e\u0003\u007fIA!!\u0010\u0002\b\t\u00191+Z9\u0011\t\u0005\u0005\u0013q\t\b\u0005\u0003\u0007\n)%D\u0001k\u0013\r\t\tA[\u0005\u0005\u0003\u0013\nYE\u0001\u0006EKB,g\u000eZ3oGfT1!!\u0001k\u00035!W\r]3oI\u0016t7-[3tA\u0005a!/\u001a9pg&$xN]5fgV\u0011\u00111\u000b\t\u0006s\u0006m\u0012Q\u000b\t\u0005\u0003\u0003\n9&\u0003\u0003\u0002Z\u0005-#A\u0003*fa>\u001c\u0018\u000e^8ss\u0006i!/\u001a9pg&$xN]5fg\u0002\nq\"\\5se>\u00148i\u001c8g\r&dWm]\u000b\u0003\u0003C\u0002R!_A\u001e\u0003G\u0002B!!\u001a\u0002l5\u0011\u0011q\r\u0006\u0004\u0003SR\u0017A\u00029be\u0006l7/\u0003\u0003\u0002n\u0005\u001d$AD\'jeJ|\'oQ8oM\u001aKG.Z\u0001\u0011[&\u0014(o\u001c:D_:4g)\u001b7fg\u0002\nq!\\5se>\u00148/\u0006\u0002\u0002vA)\u00110a\u000f\u0002xA!\u0011QMA=\u0013\u0011\tY(a\u001a\u0003\r5K\'O]8s\u0003!i\u0017N\u001d:peN\u0004\u0013\u0001\u0005:fg>dW\u000f^5p]B\u000b\'/Y7t+\t\t\u0019\t\u0005\u0003\u0002f\u0005\u0015\u0015\u0002BAD\u0003O\u0012\u0001CU3t_2,H/[8o!\u0006\u0014\u0018-\\:\u0002#I,7o\u001c7vi&|g\u000eU1sC6\u001c\b%\u0001\u0006uQJ|Wo\u001a5PaR,\"!a$\u0011\u000bA\f\t*!&\n\u0007\u0005M\u0015O\u0001\u0004PaRLwN\u001c\t\ba\u0006]\u00151TAN\u0013\r\tI*\u001d\u0002\n\rVt7\r^5p]F\u0002b!!\u0007\u0002\u001c\u0005u\u0005\u0003BA!\u0003?KA!!)\u0002L\tQ!+Z:pYV$\u0018n\u001c8\u0002\u0017QD\'o\\;hQ>\u0003H\u000fI\u0001\u0014iJ\fgn\u001d4pe64U\r^2iKJ|\u0005\u000f^\u000b\u0003\u0003S\u0003R\u0001]AI\u0003W\u0003r\u0001]AL\u0003[\u000bi\u000b\u0005\u0004\u00020\u0006U\u0016q\u0003\b\u0005\u0003\u0003\n\t,\u0003\u0003\u00024\u0006-\u0013!\u0005*fg>dW\u000f^5p]B\u0013xnY3tg&!\u0011qWA]\u0005\u00151U\r^2i\u0015\u0011\t\u0019,a/\u000b\u0007\u0005u&.\u0001\u0003d_J,\u0017\u0001\u0006;sC:\u001chm\u001c:n\r\u0016$8\r[3s\u001fB$\b%A\tj]&$\u0018.\u00197SKN|G.\u001e;j_:,\"!!2\u0011\u000bA\f\t*!(\u0002%%t\u0017\u000e^5bYJ+7o\u001c7vi&|g\u000eI\u0001\u0005gft7-\u0006\u0002\u0002NB1\u0011qZAk\u0003/i!!!5\u000b\u0007\u0005M\'.\u0001\u0003vi&d\u0017\u0002BAl\u0003#\u0014AaU=oG\u0006)1/\u001f8dA\u00051A(\u001b8jiz\"B#a8\u0002f\u0006\u001d\u0018\u0011^Av\u0003[\fy/!=\u0002t\u0006UH\u0003BAq\u0003G\u0004R!a\u0011\u0001\u0003/Aq!!3\u0016\u0001\b\ti\rC\u0004\u0002\nU\u0001\r!!\u0004\t\u000f\u0005UR\u00031\u0001\u0002:!9\u0011qJ\u000bA\u0002\u0005M\u0003bBA/+\u0001\u0007\u0011\u0011\r\u0005\b\u0003c*\u0002\u0019AA;\u0011\u001d\ty(\u0006a\u0001\u0003\u0007Cq!a#\u0016\u0001\u0004\ty\tC\u0004\u0002&V\u0001\r!!+\t\u000f\u0005\u0005W\u00031\u0001\u0002FR\u0011\u0012\u0011`A\u007f\u0003\u007f\u0014\tAa\u0001\u0003\u0006\t\u001d!\u0011\u0002B\u0006)\u0011\t\t/a?\t\u000f\u0005%g\u0003q\u0001\u0002N\"9\u0011\u0011\u0002\fA\u0002\u00055\u0001bBA\u001b-\u0001\u0007\u0011\u0011\b\u0005\b\u0003\u001f2\u0002\u0019AA*\u0011\u001d\tiF\u0006a\u0001\u0003CBq!!\u001d\u0017\u0001\u0004\t)\bC\u0004\u0002\u0000Y\u0001\r!a!\t\u000f\u0005-e\u00031\u0001\u0002\u0010\"9\u0011Q\u0015\fA\u0002\u0005%F\u0003\u0002B\b\u0005\'!B!!9\u0003\u0012!9\u0011\u0011Z\fA\u0004\u00055\u0007bBA\u0005/\u0001\u0007\u0011QB\u0001\u0002\'\u00069A\u000f\u001b:pk\u001eDWCAAK\u0003A!(/\u00198tM>\u0014XNR3uG\",\'/\u0006\u0002\u0002,\u0006\tb-\u001b8bY\u0012+\u0007/\u001a8eK:\u001c\u0017.Z:\u0002#\u0019Lg.\u00197SKB|7/\u001b;pe&,7/\u0006\u0002\u0003&A1\u0011\u0011DA\u000e\u0003\'\nq\"\u00193e\t\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u000b\u0005\u0003C\u0014Y\u0003C\u0004\u00026u\u0001\rA!\f\u0011\u000bA\u0014y#a\u0010\n\u0007\tE\u0012O\u0001\u0006=e\u0016\u0004X-\u0019;fIz\nq\"\u00193e%\u0016\u0004xn]5u_JLWm\u001d\u000b\u0005\u0003C\u00149\u0004C\u0004\u0002Py\u0001\rA!\u000f\u0011\u000bA\u0014y#!\u0016\u0002\u00139|W*\u001b:s_J\u001cXCAAq\u0003)\tG\rZ\'jeJ|\'o\u001d\u000b\u0005\u0003C\u0014\u0019\u0005C\u0004\u0002r\u0001\u0002\rA!\u0012\u0011\u000bA\u0014y#a\u001e\u0002%\u0005$G-T5se>\u00148i\u001c8g\r&dWm\u001d\u000b\u0005\u0003C\u0014Y\u0005C\u0004\u0002^\u0005\u0002\rA!\u0014\u0011\u000bA\u0014y#a\u0019\u0002\'5\f\u0007OU3t_2,H/[8o!\u0006\u0014\u0018-\\:\u0015\t\u0005\u0005(1\u000b\u0005\b\u0005+\u0012\u0003\u0019\u0001B,\u0003\u00051\u0007c\u00029\u0002\u0018\u0006\r\u00151Q\u0001\u0014iJ\fgn\u001d4pe6\u0014Vm]8mkRLwN\u001c\u000b\u0005\u0003C\u0014i\u0006C\u0004\u0003V\r\u0002\r!!&\u0002+9|GK]1og\u001a|\'/\u001c*fg>dW\u000f^5p]R\u0011\u0011\u0011]\u0001\u0018o&$\b\u000e\u0016:b]N4wN]7SKN|G.\u001e;j_:$B!!9\u0003h!9!\u0011N\u0013A\u0002\u0005=\u0015\u0001\u00024PaR$B!!9\u0003n!9!Q\u000b\u0014A\u0002\u0005-\u0016A\u00058p)J\fgn\u001d4pe64U\r^2iKJ\fAc^5uQR\u0013\u0018M\\:g_Jlg)\u001a;dQ\u0016\u0014H\u0003BAq\u0005kBqA!\u001b)\u0001\u0004\tI+A\u0006bY2l\u0015N\u001d:peN\u0004TC\u0001B>!\u0019\u0011iHa\"\u0002x5\u0011!q\u0010\u0006\u0005\u0005\u0003\u0013\u0019)A\u0005j[6,H/\u00192mK*\u0019!QQ9\u0002\u0015\r|G\u000e\\3di&|g.\u0003\u0003\u0002>\t}\u0014AC1mY6K\'O]8sgV\u0011!Q\u0012\t\u0007\u00033\tY\"!\u001e\u0002\u0011\u0019,Go\u00195WS\u0006,\"Aa%\u0011\r\u0005e\u00111DAW\u0003AIwnV5uQ\u000e{gN\u001a7jGR\u001c\b\u0007\u0006\u0003\u0003\u001a\nM\u0006CBA\r\u00037\u0011Y\nE\u0004q\u0005;\u000biJ!)\n\u0007\t}\u0015O\u0001\u0004UkBdWM\r\t\u0006s\u0006m\"1\u0015\t\u0005\u0005K\u0013y+\u0004\u0002\u0003(*!!\u0011\u0016BV\u0003!\u0019wN\u001c4mS\u000e$(b\u0001BWU\u0006)QM\u001d:pe&!!\u0011\u0017BT\u0005=)fn]1uSN4\u0017.\u001a3Sk2,\u0007b\u0002B[Y\u0001\u0007\u0011QV\u0001\u0006M\u0016$8\r[\u0001\u0010S><\u0016\u000e\u001e5D_:4G.[2ugV\u0011!\u0011T\u0001\u0003S>,\"!a\'\u0002\u0013]LG\u000f[\"bG\",G\u0003BAq\u0005\u0007Dq!!\u00030\u0001\u0004\ti!\u0001\txSRDG)\u001a9f]\u0012,gnY5fgR!\u0011\u0011\u001dBe\u0011\u001d\t)\u0004\ra\u0001\u0003s\t\u0001c^5uQJ+\u0007o\\:ji>\u0014\u0018.Z:\u0015\t\u0005\u0005(q\u001a\u0005\b\u0003\u001f\n\u0004\u0019AA*\u0003M9\u0018\u000e\u001e5NSJ\u0014xN]\"p]\u001a4\u0015\u000e\\3t)\u0011\t\tO!6\t\u000f\u0005u#\u00071\u0001\u0002b\u0005Yq/\u001b;i\u001b&\u0014(o\u001c:t)\u0011\t\tOa7\t\u000f\u0005E4\u00071\u0001\u0002v\u0005!r/\u001b;i%\u0016\u001cx\u000e\\;uS>t\u0007+\u0019:b[N$B!!9\u0003b\"9\u0011q\u0010\u001bA\u0002\u0005\r\u0015AD<ji\"$\u0006N]8vO\"|\u0005\u000f\u001e\u000b\u0005\u0003C\u00149\u000fC\u0004\u0002\fV\u0002\r!a$\u0002/]LG\u000f\u001b+sC:\u001chm\u001c:n\r\u0016$8\r[3s\u001fB$H\u0003BAq\u0005[Dq!!*7\u0001\u0004\tI+A\u000bxSRD\u0017J\\5uS\u0006d\'+Z:pYV$\u0018n\u001c8\u0015\t\u0005\u0005(1\u001f\u0005\b\u0003\u0003<\u0004\u0019AAc\u0003!9\u0018\u000e\u001e5Ts:\u001cG\u0003BAq\u0005sDq!!39\u0001\u0004\ti-\u0001\u0005u_N#(/\u001b8h)\t\u0011y\u0010\u0005\u0003\u0004\u0002\r-QBAB\u0002\u0015\u0011\u0019)aa\u0002\u0002\t1\fgn\u001a\u0006\u0003\u0007\u0013\tAA[1wC&!1QBB\u0002\u0005\u0019\u0019FO]5oO\u0006A1-\u00198FcV\fG\u000e\u0006\u0003\u0004\u0014\re\u0001c\u00019\u0004\u0016%\u00191qC9\u0003\u000f\t{w\u000e\\3b]\"911\u0004\u001eA\u0002\u0005%\u0012aA8cU\u00061Q-];bYN$Baa\u0005\u0004\"!911D\u001eA\u0002\u0005%\u0012\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\r\u001d\u0002c\u00019\u0004*%\u001911F9\u0003\u0007%sG/A\u0003ukBdW-\u0006\u0002\u00042A9\u0002oa\r\u0002\u000e\u0005e\u00121KA1\u0003k\n\u0019)a$\u0002*\u0006\u0015\u0017QZ\u0005\u0004\u0007k\t(a\u0002+va2,\u0017\u0007M\u0001\u000eaJ|G-^2u!J,g-\u001b=\u0016\u0005\t}\u0018\u0001\u00049s_\u0012,8\r^!sSRLXCAB\u0014\u00039\u0001(o\u001c3vGR,E.Z7f]R$B!!\u000b\u0004D!91Q\t!A\u0002\r\u001d\u0012!\u00018\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\u0005\u007f\u001cY\u0005C\u0004\u0004F\u0005\u0003\raa\n\u0002\u000fI+7o\u001c7wKB\u0019\u00111I\"\u0014\u000b\r\u001b\u0019f!\u0017\u0011\t\u0005\r3QK\u0005\u0004\u0007/R\'a\u0004)mCR4wN]7SKN|GN^3\u0011\t\rm3qL\u0007\u0003\u0007;RAAa/\u0004\b%!\u0011QAB/)\t\u0019y%A\u0003baBd\u0017\u0010\u0006\u0002\u0004hA)\u00111\t\u0001\u0004jA!\u0011qZB6\u0013\u0011\u0019i\'!5\u0003\tQ\u000b7o\u001b\u0002\u000f%\u0016\u001cx\u000e\u001c<f)\u0006\u001c8n\u00149t\'\r151\u000f\t\u0004a\u000eU\u0014bAB<c\n1\u0011I\\=WC2\f\u0001fY8veNLWM\u001d\u0013SKN|GN^3%%\u0016\u001cx\u000e\u001c<f)\u0006\u001c8n\u00149tI\u0011\u0012Xm]8mm\u0016,\"aa\u001a\u0002S\r|WO]:jKJ$#+Z:pYZ,GEU3t_24X\rV1tW>\u00038\u000f\n\u0013sKN|GN^3!)\u0011\u0019\ti!\"\u0011\u0007\r\re)D\u0001D\u0011\u001d\u00199)\u0013a\u0001\u0007O\nqA]3t_24X-\u0001\u0004gkR,(/\u001a\u000b\u0003\u0007\u001b#Baa$\u0004\u001cB11\u0011SBL\u0003;k!aa%\u000b\u0007\rU\u0015/\u0001\u0006d_:\u001cWO\u001d:f]RLAa!\'\u0004\u0014\n1a)\u001e;ve\u0016D\u0011b!(K!\u0003\u0005\u001daa(\u0002\u0005\u0015\u001c\u0007\u0003BBI\u0007CKAaa)\u0004\u0014\n\u0001R\t_3dkRLwN\\\"p]R,\u0007\u0010^\u0001\u0011MV$XO]3%I\u00164\u0017-\u001e7uIE\"\"a!++\t\r}51V\u0016\u0003\u0007[\u0003Baa,\u0004:6\u00111\u0011\u0017\u0006\u0005\u0007g\u001b),A\u0005v]\u000eDWmY6fI*\u00191qW9\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0003\u0004<\u000eE&!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dK\u00061Q-\u001b;iKJ$\"a!1\u0015\t\r\r7\u0011\u001b\t\bs\u000e\u00157\u0011ZAO\u0013\u0011\u00199-a\u0002\u0003\r\u0015KG\u000f[3s!\u0011\u0019Ym!4\u000e\u0005\t-\u0016\u0002BBh\u0005W\u0013qBU3t_2,H/[8o\u000bJ\u0014xN\u001d\u0005\n\u0007;c\u0005\u0013!a\u0002\u0007?\u000b\u0001#Z5uQ\u0016\u0014H\u0005Z3gCVdG\u000fJ\u0019\u0002\u0007I,h\u000e\u0006\u0002\u0004ZR!\u0011QTBn\u0011%\u0019iJ\u0014I\u0001\u0002\b\u0019y*A\u0007sk:$C-\u001a4bk2$H%\r\u000b\u0005\u0007\'\u0019\t\u000fC\u0005\u0004dF\u000b\t\u00111\u0001\u0002*\u0005\u0019\u0001\u0010J\u0019\u0002\u001dI+7o\u001c7wKR\u000b7o[(qgR!1\u0011QBu\u0011\u001d\u00199I\u0015a\u0001\u0007O\"\u0002\"!(\u0004n\u000e=8\u0011\u001f\u0005\b\u0003k\u0019\u0006\u0019AA\u001d\u0011%\tIg\u0015I\u0001\u0002\u0004\t\u0019\tC\u0005\u0004tN\u0003\n\u00111\u0001\u0002F\u0006!\u0012N\\5uS\u0006d\'+Z:pYV$\u0018n\u001c8PaR\f1$\u001b8ji&\fGNU3t_2,H/[8oI\u0011,g-Y;mi\u0012\u0012TCAB}U\u0011\t\u0019ia+\u00027%t\u0017\u000e^5bYJ+7o\u001c7vi&|g\u000e\n3fM\u0006,H\u000e\u001e\u00134+\t\u0019yP\u000b\u0003\u0002F\u000e-\u0016A\u0003:v]B\u0013xnY3tgV!AQ\u0001C\u0006))!9\u0001b\u0006\u0005\u001a\u0011uA\u0011\u0005\u000b\u0005\t\u0013!\t\u0002\u0005\u0004\u0002\u001a\u0011-\u0011Q\u0014\u0003\b\u0003;1&\u0019\u0001C\u0007+\u0011\t\t\u0003b\u0004\u0005\u0011\u0005EB1\u0002b\u0001\u0003CAqA!\u0006W\u0001\b!\u0019\u0002\u0005\u0004\u0002P\u0006UGQ\u0003\t\u0005\u00033!Y\u0001C\u0004\u0002BZ\u0003\r!!(\t\u000f\tUf\u000b1\u0001\u0005\u001cA1\u0011qVA[\t+A\u0011\u0002b\bW!\u0003\u0005\raa\n\u0002\u001b5\f\u00070\u0013;fe\u0006$\u0018n\u001c8t\u0011%!\u0019C\u0016I\u0001\u0002\u0004!)#A\u0005m_\u001e<WM](qiB)\u0001/!%\u0005(A!\u0011q\u0002C\u0015\u0013\u0011!Y#!\u0005\u0003\u0017\r\u000b7\r[3M_\u001e<WM]\u0001\u0015eVt\u0007K]8dKN\u001cH\u0005Z3gCVdG\u000fJ\u001a\u0016\t\u0011EBQG\u000b\u0003\tgQCaa\n\u0004,\u00129\u0011QD,C\u0002\u0011]R\u0003BA\u0011\ts!\u0001\"!\r\u00056\t\u0007\u0011\u0011E\u0001\u0015eVt\u0007K]8dKN\u001cH\u0005Z3gCVdG\u000f\n\u001b\u0016\t\u0011}B1I\u000b\u0003\t\u0003RC\u0001\"\n\u0004,\u00129\u0011Q\u0004-C\u0002\u0011\u0015S\u0003BA\u0011\t\u000f\"\u0001\"!\r\u0005D\t\u0007\u0011\u0011E\u0001\tm\u0006d\u0017\u000eZ1uKR!AQ\nC-!!\ty\rb\u0014\u0004J\u0012M\u0013\u0002\u0002C)\u0003#\u0014QBV1mS\u0012\fG/[8o\u001d\u0016d\u0007c\u00019\u0005V%\u0019AqK9\u0003\tUs\u0017\u000e\u001e\u0005\b\t7J\u0006\u0019AAO\u0003\r\u0011Xm]\u000b\u0005\t?\"9\u0007\u0006\u0003\u0005b\u0011ED\u0003\u0002C2\t[\u0002R!a\u0011\u0001\tK\u0002B!!\u0007\u0005h\u00119\u0011Q\u0004.C\u0002\u0011%T\u0003BA\u0011\tW\"\u0001\"!\r\u0005h\t\u0007\u0011\u0011\u0005\u0005\b\u0003\u0013T\u00069\u0001C8!\u0019\ty-!6\u0005f!9\u0011\u0011\u0002.A\u0002\u0011M\u0004CBA\b\u0003\'!)\'\u0006\u0003\u0005x\u0011}DC\u0005C=\t\u0013#i\tb$\u0005\u0012\u0012MEQ\u0013CL\t?#B\u0001b\u001f\u0005\u0006B)\u00111\t\u0001\u0005~A!\u0011\u0011\u0004C@\t\u001d\tib\u0017b\u0001\t\u0003+B!!\t\u0005\u0004\u0012A\u0011\u0011\u0007C@\u0005\u0004\t\t\u0003C\u0004\u0002Jn\u0003\u001d\u0001b\"\u0011\r\u0005=\u0017Q\u001bC?\u0011\u001d\tIa\u0017a\u0001\t\u0017\u0003b!a\u0004\u0002\u0014\u0011u\u0004bBA\u001b7\u0002\u0007\u0011\u0011\b\u0005\b\u0003\u001fZ\u0006\u0019AA*\u0011\u001d\tif\u0017a\u0001\u0003CBq!!\u001d\\\u0001\u0004\t)\bC\u0004\u0002\u0000m\u0003\r!a!\t\u000f\u0005-5\f1\u0001\u0005\u001aB)\u0001/!%\u0005\u001cB9\u0001/a&\u0005\u001e\u0012u\u0005CBA\r\t\u007f\ni\nC\u0004\u0002&n\u0003\r\u0001\")\u0011\u000bA\f\t\nb)\u0011\u000fA\f9\n\"*\u0005&B1\u0011qVA[\t{*B\u0001\"+\u00052R!B1\u0016C^\t\u007f#\t\rb1\u0005F\u0012\u001dG\u0011\u001aCi\t3$B\u0001\",\u00058B)\u00111\t\u0001\u00050B!\u0011\u0011\u0004CY\t\u001d\ti\u0002\u0018b\u0001\tg+B!!\t\u00056\u0012A\u0011\u0011\u0007CY\u0005\u0004\t\t\u0003C\u0004\u0002Jr\u0003\u001d\u0001\"/\u0011\r\u0005=\u0017Q\u001bCX\u0011\u001d\tI\u0001\u0018a\u0001\t{\u0003b!a\u0004\u0002\u0014\u0011=\u0006bBA\u001b9\u0002\u0007\u0011\u0011\b\u0005\b\u0003\u001fb\u0006\u0019AA*\u0011\u001d\ti\u0006\u0018a\u0001\u0003CBq!!\u001d]\u0001\u0004\t)\bC\u0004\u0002\u0000q\u0003\r!a!\t\u000f\u0005-E\f1\u0001\u0005LB)\u0001/!%\u0005NB9\u0001/a&\u0005P\u0012=\u0007CBA\r\tc\u000bi\nC\u0004\u0002&r\u0003\r\u0001b5\u0011\u000bA\f\t\n\"6\u0011\u000fA\f9\nb6\u0005XB1\u0011qVA[\t_Cq!!1]\u0001\u0004\t)\rE\u0002\u0004\u0004z\u001b\"AX8\u0015\u0005\u0011m\u0017\u0001\u00054viV\u0014X\rJ3yi\u0016t7/[8o)\u0011!)\u000fb;\u0015\u0005\u0011\u001dH\u0003BBH\tSD\u0011b!(a!\u0003\u0005\u001daa(\t\u000f\u00115\b\r1\u0001\u0004\u0002\u0006)A\u0005\u001e5jg\u0006Qb-\u001e;ve\u0016$C-\u001a4bk2$H%\r\u0013fqR,gn]5p]R!1q\u0015Cz\u0011\u001d!i/\u0019a\u0001\u0007\u0003\u000b\u0001#Z5uQ\u0016\u0014H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0011eHq \u000b\u0003\tw$Baa1\u0005~\"I1Q\u00142\u0011\u0002\u0003\u000f1q\u0014\u0005\b\t[\u0014\u0007\u0019ABA\u0003i)\u0017\u000e\u001e5fe\u0012\"WMZ1vYR$\u0013\u0007J3yi\u0016t7/[8o)\u0011\u00199+\"\u0002\t\u000f\u001158\r1\u0001\u0004\u0002\u0006i!/\u001e8%Kb$XM\\:j_:$B!b\u0003\u0006\u0012Q\u0011QQ\u0002\u000b\u0005\u0003;+y\u0001C\u0005\u0004\u001e\u0012\u0004\n\u0011q\u0001\u0004 \"9AQ\u001e3A\u0002\r\u0005\u0015a\u0006:v]\u0012\"WMZ1vYR$\u0013\u0007J3yi\u0016t7/[8o)\u0011\u00199+b\u0006\t\u000f\u00115X\r1\u0001\u0004\u0002\u0006\u0011\u0002.Y:i\u0007>$W\rJ3yi\u0016t7/[8o)\u0011\u0019)#\"\b\t\u000f\u00115h\r1\u0001\u0004\u0002\u0006\u0001R-];bYN$S\r\u001f;f]NLwN\u001c\u000b\u0005\u000bG)9\u0003\u0006\u0003\u0004\u0014\u0015\u0015\u0002\"CBrO\u0006\u0005\t\u0019AA\u0015\u0011\u001d!io\u001aa\u0001\u0007\u0003\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!\"\f\u0011\t\r\u0005QqF\u0005\u0005\u000bc\u0019\u0019A\u0001\u0004PE*,7\r\u001e
    #14 = Utf8               coursier/Resolve$ResolveTaskOps
    #15 = Class              #14          // coursier/Resolve$ResolveTaskOps
    #16 = Utf8               ResolveTaskOps
    #17 = Utf8               coursier/Resolve$ResolveTaskOps$
    #18 = Class              #17          // coursier/Resolve$ResolveTaskOps$
    #19 = Utf8
    #20 = Utf8               coursier/error/ResolutionError$UnsatisfiableRule
    #21 = Class              #20          // coursier/error/ResolutionError$UnsatisfiableRule
    #22 = Utf8               coursier/error/ResolutionError
    #23 = Class              #22          // coursier/error/ResolutionError
    #24 = Utf8               UnsatisfiableRule
    #25 = Utf8               coursier/util/Monad$AllOps
    #26 = Class              #25          // coursier/util/Monad$AllOps
    #27 = Utf8               coursier/util/Monad
    #28 = Class              #27          // coursier/util/Monad
    #29 = Utf8               AllOps
    #30 = Utf8               coursier/util/Monad$ops$
    #31 = Class              #30          // coursier/util/Monad$ops$
    #32 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #33 = Class              #32          // java/lang/invoke/MethodHandles$Lookup
    #34 = Utf8               java/lang/invoke/MethodHandles
    #35 = Class              #34          // java/lang/invoke/MethodHandles
    #36 = Utf8               Lookup
    #37 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
    #38 = Class              #37          // scala/collection/SeqFactory$UnapplySeqWrapper
    #39 = Utf8               scala/collection/SeqFactory
    #40 = Class              #39          // scala/collection/SeqFactory
    #41 = Utf8               UnapplySeqWrapper
    #42 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
    #43 = Class              #42          // scala/collection/SeqFactory$UnapplySeqWrapper$
    #44 = Utf8               cache
    #45 = Utf8               Lcoursier/cache/Cache;
    #46 = Utf8               Lcoursier/cache/Cache<TF;>;
    #47 = Utf8               dependencies
    #48 = Utf8               Lscala/collection/immutable/Seq;
    #49 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
    #50 = Utf8               repositories
    #51 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;
    #52 = Utf8               mirrorConfFiles
    #53 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;
    #54 = Utf8               mirrors
    #55 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;
    #56 = Utf8               resolutionParams
    #57 = Utf8               Lcoursier/params/ResolutionParams;
    #58 = Utf8               throughOpt
    #59 = Utf8               Lscala/Option;
    #60 = Utf8               Lscala/Option<Lscala/Function1<TF;TF;>;>;
    #61 = Utf8               transformFetcherOpt
    #62 = Utf8               Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;
    #63 = Utf8               initialResolution
    #64 = Utf8               Lscala/Option<Lcoursier/core/Resolution;>;
    #65 = Utf8               sync
    #66 = Utf8               Lcoursier/util/Sync;
    #67 = Utf8               Lcoursier/util/Sync<TF;>;
    #68 = Utf8               apply
    #69 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #70 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    #71 = Utf8               coursier/Resolve$
    #72 = Class              #71          // coursier/Resolve$
    #73 = Utf8               MODULE$
    #74 = Utf8               Lcoursier/Resolve$;
    #75 = NameAndType        #73:#74      // MODULE$:Lcoursier/Resolve$;
    #76 = Fieldref           #72.#75      // coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
    #77 = NameAndType        #68:#69      // apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #78 = Methodref          #72.#77      // coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #79 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #80 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    #81 = NameAndType        #68:#79      // apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #82 = Methodref          #72.#81      // coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #83 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #84 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    #85 = NameAndType        #68:#83      // apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #86 = Methodref          #72.#85      // coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
    #87 = Utf8               validate
    #88 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
    #89 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel<Lcoursier/error/ResolutionError;Lscala/runtime/BoxedUnit;>;
    #90 = Utf8               res
    #91 = NameAndType        #87:#88      // validate:(Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
    #92 = Methodref          #72.#91      // coursier/Resolve$.validate:(Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
    #93 = Utf8               (Lcoursier/Resolve;)Lcoursier/Resolve;
    #94 = Utf8               resolve
    #95 = NameAndType        #16:#93      // ResolveTaskOps:(Lcoursier/Resolve;)Lcoursier/Resolve;
    #96 = Methodref          #72.#95      // coursier/Resolve$.ResolveTaskOps:(Lcoursier/Resolve;)Lcoursier/Resolve;
    #97 = Utf8               ()Lcoursier/Resolve;
    #98 = Utf8               ()Lcoursier/Resolve<Lcoursier/util/Task;>;
    #99 = NameAndType        #68:#97      // apply:()Lcoursier/Resolve;
   #100 = Methodref          #72.#99      // coursier/Resolve$.apply:()Lcoursier/Resolve;
   #101 = Utf8               defaultRepositories
   #102 = Utf8               ()Lscala/collection/immutable/Seq;
   #103 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;
   #104 = NameAndType        #101:#102    // defaultRepositories:()Lscala/collection/immutable/Seq;
   #105 = Methodref          #72.#104     // coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
   #106 = Utf8               defaultMirrorConfFiles
   #107 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;
   #108 = NameAndType        #106:#102    // defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
   #109 = Methodref          #72.#108     // coursier/Resolve$.defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
   #110 = Utf8               productIterator
   #111 = Utf8               ()Lscala/collection/Iterator;
   #112 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #113 = Utf8               productIterator$
   #114 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #115 = NameAndType        #113:#114    // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #116 = InterfaceMethodref #7.#115      // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #117 = Utf8               this
   #118 = Utf8               Lcoursier/Resolve;
   #119 = Utf8               productElementNames
   #120 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #121 = Utf8               productElementNames$
   #122 = NameAndType        #121:#114    // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #123 = InterfaceMethodref #7.#122      // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #124 = Utf8               ()Lcoursier/cache/Cache;
   #125 = Utf8               ()Lcoursier/cache/Cache<TF;>;
   #126 = NameAndType        #44:#45      // cache:Lcoursier/cache/Cache;
   #127 = Fieldref           #2.#126      // coursier/Resolve.cache:Lcoursier/cache/Cache;
   #128 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
   #129 = NameAndType        #47:#48      // dependencies:Lscala/collection/immutable/Seq;
   #130 = Fieldref           #2.#129      // coursier/Resolve.dependencies:Lscala/collection/immutable/Seq;
   #131 = NameAndType        #50:#48      // repositories:Lscala/collection/immutable/Seq;
   #132 = Fieldref           #2.#131      // coursier/Resolve.repositories:Lscala/collection/immutable/Seq;
   #133 = NameAndType        #52:#48      // mirrorConfFiles:Lscala/collection/immutable/Seq;
   #134 = Fieldref           #2.#133      // coursier/Resolve.mirrorConfFiles:Lscala/collection/immutable/Seq;
   #135 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;
   #136 = NameAndType        #54:#48      // mirrors:Lscala/collection/immutable/Seq;
   #137 = Fieldref           #2.#136      // coursier/Resolve.mirrors:Lscala/collection/immutable/Seq;
   #138 = Utf8               ()Lcoursier/params/ResolutionParams;
   #139 = NameAndType        #56:#57      // resolutionParams:Lcoursier/params/ResolutionParams;
   #140 = Fieldref           #2.#139      // coursier/Resolve.resolutionParams:Lcoursier/params/ResolutionParams;
   #141 = Utf8               ()Lscala/Option;
   #142 = Utf8               ()Lscala/Option<Lscala/Function1<TF;TF;>;>;
   #143 = NameAndType        #58:#59      // throughOpt:Lscala/Option;
   #144 = Fieldref           #2.#143      // coursier/Resolve.throughOpt:Lscala/Option;
   #145 = Utf8               ()Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;
   #146 = NameAndType        #61:#59      // transformFetcherOpt:Lscala/Option;
   #147 = Fieldref           #2.#146      // coursier/Resolve.transformFetcherOpt:Lscala/Option;
   #148 = Utf8               ()Lscala/Option<Lcoursier/core/Resolution;>;
   #149 = NameAndType        #63:#59      // initialResolution:Lscala/Option;
   #150 = Fieldref           #2.#149      // coursier/Resolve.initialResolution:Lscala/Option;
   #151 = Utf8               ()Lcoursier/util/Sync;
   #152 = Utf8               ()Lcoursier/util/Sync<TF;>;
   #153 = NameAndType        #65:#66      // sync:Lcoursier/util/Sync;
   #154 = Fieldref           #2.#153      // coursier/Resolve.sync:Lcoursier/util/Sync;
   #155 = Utf8               S
   #156 = NameAndType        #65:#151     // sync:()Lcoursier/util/Sync;
   #157 = Methodref          #2.#156      // coursier/Resolve.sync:()Lcoursier/util/Sync;
   #158 = Utf8               through
   #159 = Utf8               ()Lscala/Function1;
   #160 = Utf8               ()Lscala/Function1<TF;TF;>;
   #161 = NameAndType        #58:#141     // throughOpt:()Lscala/Option;
   #162 = Methodref          #2.#161      // coursier/Resolve.throughOpt:()Lscala/Option;
   #163 = Utf8               ()Ljava/lang/Object;
   #164 = MethodType         #163         //  ()Ljava/lang/Object;
   #165 = Utf8               $anonfun$through$1
   #166 = NameAndType        #165:#159    // $anonfun$through$1:()Lscala/Function1;
   #167 = Methodref          #2.#166      // coursier/Resolve.$anonfun$through$1:()Lscala/Function1;
   #168 = MethodHandle       6:#167       // REF_invokeStatic coursier/Resolve.$anonfun$through$1:()Lscala/Function1;
   #169 = MethodType         #159         //  ()Lscala/Function1;
   #170 = Integer            5
   #171 = Integer            1
   #172 = Utf8               java/lang/invoke/LambdaMetafactory
   #173 = Class              #172         // java/lang/invoke/LambdaMetafactory
   #174 = Utf8               altMetafactory
   #175 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #176 = NameAndType        #174:#175    // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #177 = Methodref          #173.#176    // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #178 = MethodHandle       6:#177       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #179 = Utf8               ()Lscala/Function0;
   #180 = NameAndType        #68:#179     // apply:()Lscala/Function0;
   #181 = InvokeDynamic      #0:#180      // #0:apply:()Lscala/Function0;
   #182 = Utf8               scala/Option
   #183 = Class              #182         // scala/Option
   #184 = Utf8               getOrElse
   #185 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #186 = NameAndType        #184:#185    // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #187 = Methodref          #183.#186    // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #188 = Utf8               scala/Function1
   #189 = Class              #188         // scala/Function1
   #190 = Utf8               transformFetcher
   #191 = Utf8               ()Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;
   #192 = NameAndType        #61:#141     // transformFetcherOpt:()Lscala/Option;
   #193 = Methodref          #2.#192      // coursier/Resolve.transformFetcherOpt:()Lscala/Option;
   #194 = Utf8               $anonfun$transformFetcher$1
   #195 = NameAndType        #194:#159    // $anonfun$transformFetcher$1:()Lscala/Function1;
   #196 = Methodref          #2.#195      // coursier/Resolve.$anonfun$transformFetcher$1:()Lscala/Function1;
   #197 = MethodHandle       6:#196       // REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$1:()Lscala/Function1;
   #198 = InvokeDynamic      #1:#180      // #1:apply:()Lscala/Function0;
   #199 = Utf8               finalDependencies
   #200 = Utf8               coursier/core/Exclusions$
   #201 = Class              #200         // coursier/core/Exclusions$
   #202 = Utf8               Lcoursier/core/Exclusions$;
   #203 = NameAndType        #73:#202     // MODULE$:Lcoursier/core/Exclusions$;
   #204 = Fieldref           #201.#203    // coursier/core/Exclusions$.MODULE$:Lcoursier/core/Exclusions$;
   #205 = NameAndType        #56:#138     // resolutionParams:()Lcoursier/params/ResolutionParams;
   #206 = Methodref          #2.#205      // coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
   #207 = Utf8               coursier/params/ResolutionParams
   #208 = Class              #207         // coursier/params/ResolutionParams
   #209 = Utf8               exclusions
   #210 = Utf8               ()Lscala/collection/immutable/Set;
   #211 = NameAndType        #209:#210    // exclusions:()Lscala/collection/immutable/Set;
   #212 = Methodref          #208.#211    // coursier/params/ResolutionParams.exclusions:()Lscala/collection/immutable/Set;
   #213 = Utf8               (Lscala/collection/immutable/Set;)Lscala/Function2;
   #214 = NameAndType        #68:#213     // apply:(Lscala/collection/immutable/Set;)Lscala/Function2;
   #215 = Methodref          #201.#214    // coursier/core/Exclusions$.apply:(Lscala/collection/immutable/Set;)Lscala/Function2;
   #216 = NameAndType        #47:#102     // dependencies:()Lscala/collection/immutable/Seq;
   #217 = Methodref          #2.#216      // coursier/Resolve.dependencies:()Lscala/collection/immutable/Seq;
   #218 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #219 = MethodType         #218         //  (Ljava/lang/Object;)Ljava/lang/Object;
   #220 = Utf8               $anonfun$finalDependencies$1$adapted
   #221 = Utf8               (Lscala/Function2;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #222 = NameAndType        #220:#221    // $anonfun$finalDependencies$1$adapted:(Lscala/Function2;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #223 = Methodref          #2.#222      // coursier/Resolve.$anonfun$finalDependencies$1$adapted:(Lscala/Function2;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #224 = MethodHandle       6:#223       // REF_invokeStatic coursier/Resolve.$anonfun$finalDependencies$1$adapted:(Lscala/Function2;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #225 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/Object;
   #226 = MethodType         #225         //  (Lcoursier/core/Dependency;)Ljava/lang/Object;
   #227 = Utf8               (Lscala/Function2;)Lscala/Function1;
   #228 = NameAndType        #68:#227     // apply:(Lscala/Function2;)Lscala/Function1;
   #229 = InvokeDynamic      #2:#228      // #2:apply:(Lscala/Function2;)Lscala/Function1;
   #230 = Utf8               scala/collection/immutable/Seq
   #231 = Class              #230         // scala/collection/immutable/Seq
   #232 = Utf8               filter
   #233 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #234 = NameAndType        #232:#233    // filter:(Lscala/Function1;)Ljava/lang/Object;
   #235 = InterfaceMethodref #231.#234    // scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
   #236 = Utf8               scala/collection/IterableOps
   #237 = Class              #236         // scala/collection/IterableOps
   #238 = Utf8               $anonfun$finalDependencies$2
   #239 = Utf8               (Lcoursier/Resolve;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
   #240 = NameAndType        #238:#239    // $anonfun$finalDependencies$2:(Lcoursier/Resolve;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
   #241 = Methodref          #2.#240      // coursier/Resolve.$anonfun$finalDependencies$2:(Lcoursier/Resolve;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
   #242 = MethodHandle       6:#241       // REF_invokeStatic coursier/Resolve.$anonfun$finalDependencies$2:(Lcoursier/Resolve;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
   #243 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
   #244 = MethodType         #243         //  (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
   #245 = Utf8               (Lcoursier/Resolve;)Lscala/Function1;
   #246 = NameAndType        #68:#245     // apply:(Lcoursier/Resolve;)Lscala/Function1;
   #247 = InvokeDynamic      #3:#246      // #3:apply:(Lcoursier/Resolve;)Lscala/Function1;
   #248 = Utf8               map
   #249 = NameAndType        #248:#233    // map:(Lscala/Function1;)Ljava/lang/Object;
   #250 = InterfaceMethodref #237.#249    // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
   #251 = Utf8               Lscala/Function2;
   #252 = Utf8               finalRepositories
   #253 = Utf8               ()TF;
   #254 = Utf8               Lcoursier/util/Monad$ops$;
   #255 = NameAndType        #73:#254     // MODULE$:Lcoursier/util/Monad$ops$;
   #256 = Fieldref           #31.#255     // coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
   #257 = Utf8               allMirrors
   #258 = NameAndType        #257:#163    // allMirrors:()Ljava/lang/Object;
   #259 = Methodref          #2.#258      // coursier/Resolve.allMirrors:()Ljava/lang/Object;
   #260 = Utf8               toAllMonadOps
   #261 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #262 = NameAndType        #260:#261    // toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #263 = Methodref          #31.#262     // coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #264 = Utf8               $anonfun$finalRepositories$1
   #265 = Utf8               (Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #266 = NameAndType        #264:#265    // $anonfun$finalRepositories$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #267 = Methodref          #2.#266      // coursier/Resolve.$anonfun$finalRepositories$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #268 = MethodHandle       6:#267       // REF_invokeStatic coursier/Resolve.$anonfun$finalRepositories$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #269 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #270 = MethodType         #269         //  (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #271 = InvokeDynamic      #4:#246      // #4:apply:(Lcoursier/Resolve;)Lscala/Function1;
   #272 = InterfaceMethodref #26.#249     // coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
   #273 = Utf8               addDependencies
   #274 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #275 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lcoursier/Resolve<TF;>;
   #276 = Utf8               $plus$plus
   #277 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #278 = NameAndType        #276:#277    // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #279 = InterfaceMethodref #231.#278    // scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #280 = Utf8               withDependencies
   #281 = NameAndType        #280:#274    // withDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #282 = Methodref          #2.#281      // coursier/Resolve.withDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #283 = Utf8               addRepositories
   #284 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/Resolve<TF;>;
   #285 = NameAndType        #50:#102     // repositories:()Lscala/collection/immutable/Seq;
   #286 = Methodref          #2.#285      // coursier/Resolve.repositories:()Lscala/collection/immutable/Seq;
   #287 = Utf8               withRepositories
   #288 = NameAndType        #287:#274    // withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #289 = Methodref          #2.#288      // coursier/Resolve.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #290 = Utf8               noMirrors
   #291 = Utf8               ()Lcoursier/Resolve<TF;>;
   #292 = Utf8               scala/collection/immutable/Nil$
   #293 = Class              #292         // scala/collection/immutable/Nil$
   #294 = Utf8               Lscala/collection/immutable/Nil$;
   #295 = NameAndType        #73:#294     // MODULE$:Lscala/collection/immutable/Nil$;
   #296 = Fieldref           #293.#295    // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #297 = Utf8               withMirrors
   #298 = NameAndType        #297:#274    // withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #299 = Methodref          #2.#298      // coursier/Resolve.withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #300 = Utf8               withMirrorConfFiles
   #301 = NameAndType        #300:#274    // withMirrorConfFiles:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #302 = Methodref          #2.#301      // coursier/Resolve.withMirrorConfFiles:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
   #303 = Utf8               addMirrors
   #304 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;)Lcoursier/Resolve<TF;>;
   #305 = NameAndType        #54:#102     // mirrors:()Lscala/collection/immutable/Seq;
   #306 = Methodref          #2.#305      // coursier/Resolve.mirrors:()Lscala/collection/immutable/Seq;
   #307 = Utf8               addMirrorConfFiles
   #308 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;)Lcoursier/Resolve<TF;>;
   #309 = NameAndType        #52:#102     // mirrorConfFiles:()Lscala/collection/immutable/Seq;
   #310 = Methodref          #2.#309      // coursier/Resolve.mirrorConfFiles:()Lscala/collection/immutable/Seq;
   #311 = Utf8               mapResolutionParams
   #312 = Utf8               (Lscala/Function1;)Lcoursier/Resolve;
   #313 = Utf8               (Lscala/Function1<Lcoursier/params/ResolutionParams;Lcoursier/params/ResolutionParams;>;)Lcoursier/Resolve<TF;>;
   #314 = Utf8               f
   #315 = NameAndType        #68:#218     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #316 = InterfaceMethodref #189.#315    // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #317 = Utf8               withResolutionParams
   #318 = Utf8               (Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
   #319 = NameAndType        #317:#318    // withResolutionParams:(Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
   #320 = Methodref          #2.#319      // coursier/Resolve.withResolutionParams:(Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
   #321 = Utf8               Lscala/Function1;
   #322 = Utf8               transformResolution
   #323 = Utf8               (Lscala/Function1<TF;TF;>;)Lcoursier/Resolve<TF;>;
   #324 = Utf8               scala/Some
   #325 = Class              #324         // scala/Some
   #326 = Utf8               $anonfun$transformResolution$1
   #327 = Utf8               (Lscala/Function1;)Lscala/Function1;
   #328 = NameAndType        #326:#327    // $anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
   #329 = Methodref          #2.#328      // coursier/Resolve.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
   #330 = MethodHandle       6:#329       // REF_invokeStatic coursier/Resolve.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
   #331 = Utf8               (Lscala/Function1;)Lscala/Function0;
   #332 = NameAndType        #68:#331     // apply:(Lscala/Function1;)Lscala/Function0;
   #333 = InvokeDynamic      #5:#332      // #5:apply:(Lscala/Function1;)Lscala/Function0;
   #334 = Utf8               $anonfun$transformResolution$2
   #335 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #336 = NameAndType        #334:#335    // $anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #337 = Methodref          #2.#336      // coursier/Resolve.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #338 = MethodHandle       6:#337       // REF_invokeStatic coursier/Resolve.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #339 = MethodType         #327         //  (Lscala/Function1;)Lscala/Function1;
   #340 = NameAndType        #68:#327     // apply:(Lscala/Function1;)Lscala/Function1;
   #341 = InvokeDynamic      #6:#340      // #6:apply:(Lscala/Function1;)Lscala/Function1;
   #342 = Utf8               fold
   #343 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
   #344 = NameAndType        #342:#343    // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
   #345 = Methodref          #183.#344    // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
   #346 = Utf8               <init>
   #347 = Utf8               (Ljava/lang/Object;)V
   #348 = NameAndType        #346:#347    // "<init>":(Ljava/lang/Object;)V
   #349 = Methodref          #325.#348    // scala/Some."<init>":(Ljava/lang/Object;)V
   #350 = Utf8               withThroughOpt
   #351 = Utf8               (Lscala/Option;)Lcoursier/Resolve;
   #352 = NameAndType        #350:#351    // withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
   #353 = Methodref          #2.#352      // coursier/Resolve.withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
   #354 = Utf8               noTransformResolution
   #355 = Utf8               scala/None$
   #356 = Class              #355         // scala/None$
   #357 = Utf8               Lscala/None$;
   #358 = NameAndType        #73:#357     // MODULE$:Lscala/None$;
   #359 = Fieldref           #356.#358    // scala/None$.MODULE$:Lscala/None$;
   #360 = Utf8               withTransformResolution
   #361 = Utf8               (Lscala/Option<Lscala/Function1<TF;TF;>;>;)Lcoursier/Resolve<TF;>;
   #362 = Utf8               fOpt
   #363 = Utf8               (Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;)Lcoursier/Resolve<TF;>;
   #364 = Utf8               $anonfun$transformFetcher$3
   #365 = NameAndType        #364:#327    // $anonfun$transformFetcher$3:(Lscala/Function1;)Lscala/Function1;
   #366 = Methodref          #2.#365      // coursier/Resolve.$anonfun$transformFetcher$3:(Lscala/Function1;)Lscala/Function1;
   #367 = MethodHandle       6:#366       // REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$3:(Lscala/Function1;)Lscala/Function1;
   #368 = InvokeDynamic      #7:#332      // #7:apply:(Lscala/Function1;)Lscala/Function0;
   #369 = Utf8               $anonfun$transformFetcher$4
   #370 = NameAndType        #369:#335    // $anonfun$transformFetcher$4:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #371 = Methodref          #2.#370      // coursier/Resolve.$anonfun$transformFetcher$4:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #372 = MethodHandle       6:#371       // REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$4:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #373 = InvokeDynamic      #8:#340      // #8:apply:(Lscala/Function1;)Lscala/Function1;
   #374 = Utf8               withTransformFetcherOpt
   #375 = NameAndType        #374:#351    // withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
   #376 = Methodref          #2.#375      // coursier/Resolve.withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
   #377 = Utf8               noTransformFetcher
   #378 = Utf8               withTransformFetcher
   #379 = Utf8               (Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;)Lcoursier/Resolve<TF;>;
   #380 = Utf8               allMirrors0
   #381 = Utf8               $anonfun$allMirrors0$1
   #382 = Utf8               (Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
   #383 = NameAndType        #381:#382    // $anonfun$allMirrors0$1:(Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
   #384 = Methodref          #2.#383      // coursier/Resolve.$anonfun$allMirrors0$1:(Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
   #385 = MethodHandle       6:#384       // REF_invokeStatic coursier/Resolve.$anonfun$allMirrors0$1:(Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
   #386 = MethodType         #382         //  (Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
   #387 = NameAndType        #68:#159     // apply:()Lscala/Function1;
   #388 = InvokeDynamic      #9:#387      // #9:apply:()Lscala/Function1;
   #389 = Utf8               flatMap
   #390 = NameAndType        #389:#233    // flatMap:(Lscala/Function1;)Ljava/lang/Object;
   #391 = InterfaceMethodref #231.#390    // scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
   #392 = Utf8               scala/collection/IterableOnce
   #393 = Class              #392         // scala/collection/IterableOnce
   #394 = NameAndType        #155:#151    // S:()Lcoursier/util/Sync;
   #395 = Methodref          #2.#394      // coursier/Resolve.S:()Lcoursier/util/Sync;
   #396 = Utf8               $anonfun$allMirrors$1
   #397 = Utf8               (Lcoursier/Resolve;)Lscala/collection/immutable/Seq;
   #398 = NameAndType        #396:#397    // $anonfun$allMirrors$1:(Lcoursier/Resolve;)Lscala/collection/immutable/Seq;
   #399 = Methodref          #2.#398      // coursier/Resolve.$anonfun$allMirrors$1:(Lcoursier/Resolve;)Lscala/collection/immutable/Seq;
   #400 = MethodHandle       6:#399       // REF_invokeStatic coursier/Resolve.$anonfun$allMirrors$1:(Lcoursier/Resolve;)Lscala/collection/immutable/Seq;
   #401 = MethodType         #102         //  ()Lscala/collection/immutable/Seq;
   #402 = Utf8               (Lcoursier/Resolve;)Lscala/Function0;
   #403 = NameAndType        #68:#402     // apply:(Lcoursier/Resolve;)Lscala/Function0;
   #404 = InvokeDynamic      #10:#403     // #10:apply:(Lcoursier/Resolve;)Lscala/Function0;
   #405 = Utf8               coursier/util/Sync
   #406 = Class              #405         // coursier/util/Sync
   #407 = Utf8               delay
   #408 = NameAndType        #407:#185    // delay:(Lscala/Function0;)Ljava/lang/Object;
   #409 = InterfaceMethodref #406.#408    // coursier/util/Sync.delay:(Lscala/Function0;)Ljava/lang/Object;
   #410 = Utf8               fetchVia
   #411 = NameAndType        #44:#124     // cache:()Lcoursier/cache/Cache;
   #412 = Methodref          #2.#411      // coursier/Resolve.cache:()Lcoursier/cache/Cache;
   #413 = Utf8               coursier/cache/Cache
   #414 = Class              #413         // coursier/cache/Cache
   #415 = Utf8               fetchs
   #416 = NameAndType        #415:#102    // fetchs:()Lscala/collection/immutable/Seq;
   #417 = Methodref          #414.#416    // coursier/cache/Cache.fetchs:()Lscala/collection/immutable/Seq;
   #418 = NameAndType        #252:#163    // finalRepositories:()Ljava/lang/Object;
   #419 = Methodref          #2.#418      // coursier/Resolve.finalRepositories:()Ljava/lang/Object;
   #420 = Utf8               $anonfun$fetchVia$1
   #421 = Utf8               (Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/Function1;
   #422 = NameAndType        #420:#421    // $anonfun$fetchVia$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/Function1;
   #423 = Methodref          #2.#422      // coursier/Resolve.$anonfun$fetchVia$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/Function1;
   #424 = MethodHandle       6:#423       // REF_invokeStatic coursier/Resolve.$anonfun$fetchVia$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/Function1;
   #425 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/Function1;
   #426 = MethodType         #425         //  (Lscala/collection/immutable/Seq;)Lscala/Function1;
   #427 = Utf8               (Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/Function1;
   #428 = NameAndType        #68:#427     // apply:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/Function1;
   #429 = InvokeDynamic      #11:#428     // #11:apply:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/Function1;
   #430 = Utf8               ioWithConflicts0
   #431 = Utf8               (Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;)TF;
   #432 = Utf8               fetch
   #433 = NameAndType        #199:#102    // finalDependencies:()Lscala/collection/immutable/Seq;
   #434 = Methodref          #2.#433      // coursier/Resolve.finalDependencies:()Lscala/collection/immutable/Seq;
   #435 = NameAndType        #63:#141     // initialResolution:()Lscala/Option;
   #436 = Methodref          #2.#435      // coursier/Resolve.initialResolution:()Lscala/Option;
   #437 = Utf8               (Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;)Lcoursier/core/Resolution;
   #438 = NameAndType        #63:#437     // initialResolution:(Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;)Lcoursier/core/Resolution;
   #439 = Methodref          #72.#438     // coursier/Resolve$.initialResolution:(Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;)Lcoursier/core/Resolution;
   #440 = Utf8               run$1
   #441 = Utf8               (Lcoursier/core/Resolution;Lscala/Function1;)Ljava/lang/Object;
   #442 = NameAndType        #440:#441    // run$1:(Lcoursier/core/Resolution;Lscala/Function1;)Ljava/lang/Object;
   #443 = Methodref          #2.#442      // coursier/Resolve.run$1:(Lcoursier/core/Resolution;Lscala/Function1;)Ljava/lang/Object;
   #444 = Utf8               $anonfun$ioWithConflicts0$4
   #445 = Utf8               (Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #446 = NameAndType        #444:#445    // $anonfun$ioWithConflicts0$4:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #447 = Methodref          #2.#446      // coursier/Resolve.$anonfun$ioWithConflicts0$4:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #448 = MethodHandle       6:#447       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$4:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #449 = Utf8               (Lcoursier/core/Resolution;)Ljava/lang/Object;
   #450 = MethodType         #449         //  (Lcoursier/core/Resolution;)Ljava/lang/Object;
   #451 = Utf8               (Lcoursier/Resolve;Lscala/Function1;)Lscala/Function1;
   #452 = NameAndType        #68:#451     // apply:(Lcoursier/Resolve;Lscala/Function1;)Lscala/Function1;
   #453 = InvokeDynamic      #12:#452     // #12:apply:(Lcoursier/Resolve;Lscala/Function1;)Lscala/Function1;
   #454 = InterfaceMethodref #26.#390     // coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
   #455 = Utf8               initialRes
   #456 = Utf8               Lcoursier/core/Resolution;
   #457 = Utf8               ioWithConflicts
   #458 = NameAndType        #410:#163    // fetchVia:()Ljava/lang/Object;
   #459 = Methodref          #2.#458      // coursier/Resolve.fetchVia:()Ljava/lang/Object;
   #460 = Utf8               $anonfun$ioWithConflicts$1
   #461 = Utf8               (Lcoursier/Resolve;Lscala/Function1;)Ljava/lang/Object;
   #462 = NameAndType        #460:#461    // $anonfun$ioWithConflicts$1:(Lcoursier/Resolve;Lscala/Function1;)Ljava/lang/Object;
   #463 = Methodref          #2.#462      // coursier/Resolve.$anonfun$ioWithConflicts$1:(Lcoursier/Resolve;Lscala/Function1;)Ljava/lang/Object;
   #464 = MethodHandle       6:#463       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts$1:(Lcoursier/Resolve;Lscala/Function1;)Ljava/lang/Object;
   #465 = MethodType         #233         //  (Lscala/Function1;)Ljava/lang/Object;
   #466 = InvokeDynamic      #13:#246     // #13:apply:(Lcoursier/Resolve;)Lscala/Function1;
   #467 = Utf8               io
   #468 = NameAndType        #457:#163    // ioWithConflicts:()Ljava/lang/Object;
   #469 = Methodref          #2.#468      // coursier/Resolve.ioWithConflicts:()Ljava/lang/Object;
   #470 = Utf8               $anonfun$io$1
   #471 = Utf8               (Lscala/Tuple2;)Lcoursier/core/Resolution;
   #472 = NameAndType        #470:#471    // $anonfun$io$1:(Lscala/Tuple2;)Lcoursier/core/Resolution;
   #473 = Methodref          #2.#472      // coursier/Resolve.$anonfun$io$1:(Lscala/Tuple2;)Lcoursier/core/Resolution;
   #474 = MethodHandle       6:#473       // REF_invokeStatic coursier/Resolve.$anonfun$io$1:(Lscala/Tuple2;)Lcoursier/core/Resolution;
   #475 = MethodType         #471         //  (Lscala/Tuple2;)Lcoursier/core/Resolution;
   #476 = InvokeDynamic      #14:#387     // #14:apply:()Lscala/Function1;
   #477 = Utf8               withCache
   #478 = Utf8               (Lcoursier/cache/Cache;)Lcoursier/Resolve;
   #479 = Utf8               (Lcoursier/cache/Cache<TF;>;)Lcoursier/Resolve<TF;>;
   #480 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
   #481 = NameAndType        #346:#480    // "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
   #482 = Methodref          #2.#481      // coursier/Resolve."<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
   #483 = Utf8               (Lcoursier/params/ResolutionParams;)Lcoursier/Resolve<TF;>;
   #484 = Utf8               withInitialResolution
   #485 = Utf8               (Lscala/Option<Lcoursier/core/Resolution;>;)Lcoursier/Resolve<TF;>;
   #486 = Utf8               withSync
   #487 = Utf8               (Lcoursier/util/Sync;)Lcoursier/Resolve;
   #488 = Utf8               (Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
   #489 = Utf8               toString
   #490 = Utf8               ()Ljava/lang/String;
   #491 = Utf8               java/lang/StringBuilder
   #492 = Class              #491         // java/lang/StringBuilder
   #493 = Utf8               Resolve(
   #494 = String             #493         // Resolve(
   #495 = Utf8               (Ljava/lang/String;)V
   #496 = NameAndType        #346:#495    // "<init>":(Ljava/lang/String;)V
   #497 = Methodref          #492.#496    // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
   #498 = Utf8               java/lang/String
   #499 = Class              #498         // java/lang/String
   #500 = Utf8               valueOf
   #501 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #502 = NameAndType        #500:#501    // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #503 = Methodref          #499.#502    // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #504 = Utf8               append
   #505 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #506 = NameAndType        #504:#505    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #507 = Methodref          #492.#506    // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #508 = Utf8               ,
   #509 = String             #508         // ,
   #510 = Utf8               )
   #511 = String             #510         // )
   #512 = NameAndType        #489:#490    // toString:()Ljava/lang/String;
   #513 = Methodref          #492.#512    // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #514 = Utf8               b
   #515 = Utf8               Ljava/lang/StringBuilder;
   #516 = Utf8               canEqual
   #517 = Utf8               (Ljava/lang/Object;)Z
   #518 = Utf8               obj
   #519 = Utf8               Ljava/lang/Object;
   #520 = Utf8               equals
   #521 = NameAndType        #516:#517    // canEqual:(Ljava/lang/Object;)Z
   #522 = Methodref          #2.#521      // coursier/Resolve.canEqual:(Ljava/lang/Object;)Z
   #523 = NameAndType        #520:#517    // equals:(Ljava/lang/Object;)Z
   #524 = Methodref          #5.#523      // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #525 = Utf8               other
   #526 = Utf8               hashCode
   #527 = Utf8               ()I
   #528 = Utf8               Resolve
   #529 = String             #528         // Resolve
   #530 = Utf8               scala/runtime/Statics
   #531 = Class              #530         // scala/runtime/Statics
   #532 = Utf8               anyHash
   #533 = Utf8               (Ljava/lang/Object;)I
   #534 = NameAndType        #532:#533    // anyHash:(Ljava/lang/Object;)I
   #535 = Methodref          #531.#534    // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
   #536 = Utf8               code
   #537 = Utf8               I
   #538 = Utf8               tuple
   #539 = Utf8               ()Lscala/Tuple10;
   #540 = Utf8               ()Lscala/Tuple10<Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;>;
   #541 = Utf8               scala/Tuple10
   #542 = Class              #541         // scala/Tuple10
   #543 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #544 = NameAndType        #346:#543    // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #545 = Methodref          #542.#544    // scala/Tuple10."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #546 = Utf8               productPrefix
   #547 = Utf8               productArity
   #548 = Utf8               productElement
   #549 = Utf8               (I)Ljava/lang/Object;
   #550 = Utf8               n
   #551 = Utf8               java/lang/IndexOutOfBoundsException
   #552 = Class              #551         // java/lang/IndexOutOfBoundsException
   #553 = Utf8               scala/runtime/BoxesRunTime
   #554 = Class              #553         // scala/runtime/BoxesRunTime
   #555 = Utf8               boxToInteger
   #556 = Utf8               (I)Ljava/lang/Integer;
   #557 = NameAndType        #555:#556    // boxToInteger:(I)Ljava/lang/Integer;
   #558 = Methodref          #554.#557    // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #559 = Methodref          #5.#512      // java/lang/Object.toString:()Ljava/lang/String;
   #560 = Methodref          #552.#496    // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #561 = Utf8               productElementName
   #562 = Utf8               (I)Ljava/lang/String;
   #563 = String             #44          // cache
   #564 = String             #47          // dependencies
   #565 = String             #50          // repositories
   #566 = String             #52          // mirrorConfFiles
   #567 = String             #54          // mirrors
   #568 = String             #56          // resolutionParams
   #569 = String             #58          // throughOpt
   #570 = String             #61          // transformFetcherOpt
   #571 = String             #63          // initialResolution
   #572 = String             #65          // sync
   #573 = Utf8               $anonfun$through$2
   #574 = Utf8               x
   #575 = Utf8               scala/Predef$
   #576 = Class              #575         // scala/Predef$
   #577 = Utf8               Lscala/Predef$;
   #578 = NameAndType        #73:#577     // MODULE$:Lscala/Predef$;
   #579 = Fieldref           #576.#578    // scala/Predef$.MODULE$:Lscala/Predef$;
   #580 = Utf8               identity
   #581 = NameAndType        #580:#218    // identity:(Ljava/lang/Object;)Ljava/lang/Object;
   #582 = Methodref          #576.#581    // scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
   #583 = NameAndType        #573:#218    // $anonfun$through$2:(Ljava/lang/Object;)Ljava/lang/Object;
   #584 = Methodref          #2.#583      // coursier/Resolve.$anonfun$through$2:(Ljava/lang/Object;)Ljava/lang/Object;
   #585 = MethodHandle       6:#584       // REF_invokeStatic coursier/Resolve.$anonfun$through$2:(Ljava/lang/Object;)Ljava/lang/Object;
   #586 = InvokeDynamic      #15:#387     // #15:apply:()Lscala/Function1;
   #587 = Utf8               $anonfun$transformFetcher$2
   #588 = NameAndType        #587:#327    // $anonfun$transformFetcher$2:(Lscala/Function1;)Lscala/Function1;
   #589 = Methodref          #2.#588      // coursier/Resolve.$anonfun$transformFetcher$2:(Lscala/Function1;)Lscala/Function1;
   #590 = MethodHandle       6:#589       // REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$2:(Lscala/Function1;)Lscala/Function1;
   #591 = InvokeDynamic      #16:#387     // #16:apply:()Lscala/Function1;
   #592 = Utf8               $anonfun$finalDependencies$1
   #593 = Utf8               (Lscala/Function2;Lcoursier/core/Dependency;)Z
   #594 = Utf8               filter$1
   #595 = Utf8               dep
   #596 = Utf8               coursier/core/Organization
   #597 = Class              #596         // coursier/core/Organization
   #598 = Utf8               coursier/core/Dependency
   #599 = Class              #598         // coursier/core/Dependency
   #600 = Utf8               module
   #601 = Utf8               ()Lcoursier/core/Module;
   #602 = NameAndType        #600:#601    // module:()Lcoursier/core/Module;
   #603 = Methodref          #599.#602    // coursier/core/Dependency.module:()Lcoursier/core/Module;
   #604 = Utf8               coursier/core/Module
   #605 = Class              #604         // coursier/core/Module
   #606 = Utf8               organization
   #607 = NameAndType        #606:#490    // organization:()Ljava/lang/String;
   #608 = Methodref          #605.#607    // coursier/core/Module.organization:()Ljava/lang/String;
   #609 = Methodref          #597.#496    // coursier/core/Organization."<init>":(Ljava/lang/String;)V
   #610 = Utf8               coursier/core/ModuleName
   #611 = Class              #610         // coursier/core/ModuleName
   #612 = Utf8               name
   #613 = NameAndType        #612:#490    // name:()Ljava/lang/String;
   #614 = Methodref          #605.#613    // coursier/core/Module.name:()Ljava/lang/String;
   #615 = Methodref          #611.#496    // coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
   #616 = Utf8               scala/Function2
   #617 = Class              #616         // scala/Function2
   #618 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #619 = NameAndType        #68:#618     // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #620 = InterfaceMethodref #617.#619    // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #621 = Utf8               unboxToBoolean
   #622 = NameAndType        #621:#517    // unboxToBoolean:(Ljava/lang/Object;)Z
   #623 = Methodref          #554.#622    // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   #624 = Utf8               Lcoursier/core/Dependency;
   #625 = Utf8               $this
   #626 = Methodref          #599.#211    // coursier/core/Dependency.exclusions:()Lscala/collection/immutable/Set;
   #627 = Utf8               scala/collection/immutable/Set
   #628 = Class              #627         // scala/collection/immutable/Set
   #629 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
   #630 = NameAndType        #276:#629    // $plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
   #631 = InterfaceMethodref #628.#630    // scala/collection/immutable/Set.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
   #632 = Utf8               minimize
   #633 = Utf8               (Lscala/collection/immutable/Set;)Lscala/collection/immutable/Set;
   #634 = NameAndType        #632:#633    // minimize:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Set;
   #635 = Methodref          #201.#634    // coursier/core/Exclusions$.minimize:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Set;
   #636 = Utf8               withExclusions
   #637 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
   #638 = NameAndType        #636:#637    // withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
   #639 = Methodref          #599.#638    // coursier/core/Dependency.withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
   #640 = Utf8               x$1
   #641 = Utf8               coursier/params/Mirror$
   #642 = Class              #641         // coursier/params/Mirror$
   #643 = Utf8               Lcoursier/params/Mirror$;
   #644 = NameAndType        #73:#643     // MODULE$:Lcoursier/params/Mirror$;
   #645 = Fieldref           #642.#644    // coursier/params/Mirror$.MODULE$:Lcoursier/params/Mirror$;
   #646 = Utf8               replace
   #647 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #648 = NameAndType        #646:#647    // replace:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #649 = Methodref          #642.#648    // coursier/params/Mirror$.replace:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #650 = Utf8               f$1
   #651 = Utf8               x$2
   #652 = Utf8               andThen
   #653 = NameAndType        #652:#327    // andThen:(Lscala/Function1;)Lscala/Function1;
   #654 = InterfaceMethodref #189.#653    // scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
   #655 = Utf8               f$2
   #656 = Utf8               x$3
   #657 = Utf8               x$4
   #658 = Utf8               coursier/params/MirrorConfFile
   #659 = Class              #658         // coursier/params/MirrorConfFile
   #660 = Methodref          #659.#305    // coursier/params/MirrorConfFile.mirrors:()Lscala/collection/immutable/Seq;
   #661 = Utf8               Lcoursier/params/MirrorConfFile;
   #662 = NameAndType        #380:#102    // allMirrors0:()Lscala/collection/immutable/Seq;
   #663 = Methodref          #2.#662      // coursier/Resolve.allMirrors0:()Lscala/collection/immutable/Seq;
   #664 = Utf8               fetchs$1
   #665 = Utf8               r
   #666 = Utf8               coursier/package$
   #667 = Class              #666         // coursier/package$
   #668 = Utf8               Lcoursier/package$;
   #669 = NameAndType        #73:#668     // MODULE$:Lcoursier/package$;
   #670 = Fieldref           #667.#669    // coursier/package$.MODULE$:Lcoursier/package$;
   #671 = Utf8               ResolutionProcess
   #672 = Utf8               ()Lcoursier/core/ResolutionProcess$;
   #673 = NameAndType        #671:#672    // ResolutionProcess:()Lcoursier/core/ResolutionProcess$;
   #674 = Methodref          #667.#673    // coursier/package$.ResolutionProcess:()Lcoursier/core/ResolutionProcess$;
   #675 = Utf8               head
   #676 = NameAndType        #675:#163    // head:()Ljava/lang/Object;
   #677 = InterfaceMethodref #231.#676    // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
   #678 = Utf8               tail
   #679 = NameAndType        #678:#163    // tail:()Ljava/lang/Object;
   #680 = InterfaceMethodref #231.#679    // scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
   #681 = Utf8               coursier/core/ResolutionProcess$
   #682 = Class              #681         // coursier/core/ResolutionProcess$
   #683 = Utf8               (Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
   #684 = NameAndType        #432:#683    // fetch:(Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
   #685 = Methodref          #682.#684    // coursier/core/ResolutionProcess$.fetch:(Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
   #686 = Utf8               fetch$1
   #687 = Utf8               maxIterations
   #688 = NameAndType        #687:#527    // maxIterations:()I
   #689 = Methodref          #208.#688    // coursier/params/ResolutionParams.maxIterations:()I
   #690 = Utf8               loggerOpt
   #691 = NameAndType        #690:#141    // loggerOpt:()Lscala/Option;
   #692 = Methodref          #414.#691    // coursier/cache/Cache.loggerOpt:()Lscala/Option;
   #693 = Utf8               runProcess
   #694 = Utf8               (Lcoursier/core/Resolution;Lscala/Function1;ILscala/Option;Lcoursier/util/Sync;)Ljava/lang/Object;
   #695 = NameAndType        #693:#694    // runProcess:(Lcoursier/core/Resolution;Lscala/Function1;ILscala/Option;Lcoursier/util/Sync;)Ljava/lang/Object;
   #696 = Methodref          #72.#695     // coursier/Resolve$.runProcess:(Lcoursier/core/Resolution;Lscala/Function1;ILscala/Option;Lcoursier/util/Sync;)Ljava/lang/Object;
   #697 = NameAndType        #158:#159    // through:()Lscala/Function1;
   #698 = Methodref          #2.#697      // coursier/Resolve.through:()Lscala/Function1;
   #699 = Utf8               t
   #700 = Utf8               validate0$1
   #701 = Utf8               coursier/util/ValidationNel
   #702 = Class              #701         // coursier/util/ValidationNel
   #703 = Utf8               either
   #704 = Utf8               ()Lscala/util/Either;
   #705 = NameAndType        #703:#704    // either:()Lscala/util/Either;
   #706 = Methodref          #702.#705    // coursier/util/ValidationNel.either:()Lscala/util/Either;
   #707 = Utf8               scala/util/Left
   #708 = Class              #707         // scala/util/Left
   #709 = Utf8               value
   #710 = NameAndType        #709:#163    // value:()Ljava/lang/Object;
   #711 = Methodref          #708.#710    // scala/util/Left.value:()Ljava/lang/Object;
   #712 = Utf8               scala/collection/immutable/$colon$colon
   #713 = Class              #712         // scala/collection/immutable/$colon$colon
   #714 = Utf8               coursier/error/ResolutionError$
   #715 = Class              #714         // coursier/error/ResolutionError$
   #716 = Utf8               Lcoursier/error/ResolutionError$;
   #717 = NameAndType        #73:#716     // MODULE$:Lcoursier/error/ResolutionError$;
   #718 = Fieldref           #715.#717    // coursier/error/ResolutionError$.MODULE$:Lcoursier/error/ResolutionError$;
   #719 = Methodref          #713.#676    // scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
   #720 = Utf8               ()Lscala/collection/immutable/List;
   #721 = NameAndType        #678:#720    // tail:()Lscala/collection/immutable/List;
   #722 = Methodref          #713.#721    // scala/collection/immutable/$colon$colon.tail:()Lscala/collection/immutable/List;
   #723 = Utf8               from
   #724 = Utf8               (Lcoursier/error/ResolutionError;Lscala/collection/immutable/Seq;)Lcoursier/error/ResolutionError;
   #725 = NameAndType        #723:#724    // from:(Lcoursier/error/ResolutionError;Lscala/collection/immutable/Seq;)Lcoursier/error/ResolutionError;
   #726 = Methodref          #715.#725    // coursier/error/ResolutionError$.from:(Lcoursier/error/ResolutionError;Lscala/collection/immutable/Seq;)Lcoursier/error/ResolutionError;
   #727 = Utf8               scala/package$
   #728 = Class              #727         // scala/package$
   #729 = Utf8               Lscala/package$;
   #730 = NameAndType        #73:#729     // MODULE$:Lscala/package$;
   #731 = Fieldref           #728.#730    // scala/package$.MODULE$:Lscala/package$;
   #732 = Utf8               Left
   #733 = Utf8               ()Lscala/util/Left$;
   #734 = NameAndType        #732:#733    // Left:()Lscala/util/Left$;
   #735 = Methodref          #728.#734    // scala/package$.Left:()Lscala/util/Left$;
   #736 = Utf8               scala/util/Left$
   #737 = Class              #736         // scala/util/Left$
   #738 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
   #739 = NameAndType        #68:#738     // apply:(Ljava/lang/Object;)Lscala/util/Left;
   #740 = Methodref          #737.#739    // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
   #741 = Utf8               fromAttempt
   #742 = Utf8               (Lscala/util/Either;)Ljava/lang/Object;
   #743 = NameAndType        #741:#742    // fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
   #744 = InterfaceMethodref #406.#743    // coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
   #745 = Utf8               scala/util/Either
   #746 = Class              #745         // scala/util/Either
   #747 = Utf8               scala/util/Right
   #748 = Class              #747         // scala/util/Right
   #749 = Methodref          #748.#710    // scala/util/Right.value:()Ljava/lang/Object;
   #750 = Utf8               scala/runtime/BoxedUnit
   #751 = Class              #750         // scala/runtime/BoxedUnit
   #752 = Utf8               UNIT
   #753 = Utf8               Lscala/runtime/BoxedUnit;
   #754 = NameAndType        #752:#753    // UNIT:Lscala/runtime/BoxedUnit;
   #755 = Fieldref           #751.#754    // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   #756 = Utf8               coursier/core/Resolution
   #757 = Class              #756         // coursier/core/Resolution
   #758 = Utf8               point
   #759 = NameAndType        #758:#218    // point:(Ljava/lang/Object;)Ljava/lang/Object;
   #760 = InterfaceMethodref #406.#759    // coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
   #761 = Utf8               scala/MatchError
   #762 = Class              #761         // scala/MatchError
   #763 = Methodref          #762.#348    // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #764 = Utf8               err
   #765 = Utf8               Lcoursier/error/ResolutionError;
   #766 = Utf8               errors
   #767 = Utf8               Lscala/collection/immutable/$colon$colon;
   #768 = Utf8               $anonfun$ioWithConflicts0$1
   #769 = Utf8               (Lcoursier/error/conflict/UnsatisfiedRule;Lscala/Tuple2;)Lscala/Tuple2;
   #770 = Utf8               c$1
   #771 = Utf8               x0$1
   #772 = Utf8               scala/Tuple2
   #773 = Class              #772         // scala/Tuple2
   #774 = Utf8               _1
   #775 = NameAndType        #774:#163    // _1:()Ljava/lang/Object;
   #776 = Methodref          #773.#775    // scala/Tuple2._1:()Ljava/lang/Object;
   #777 = Utf8               _2
   #778 = NameAndType        #777:#163    // _2:()Ljava/lang/Object;
   #779 = Methodref          #773.#778    // scala/Tuple2._2:()Ljava/lang/Object;
   #780 = Utf8               scala/collection/immutable/List
   #781 = Class              #780         // scala/collection/immutable/List
   #782 = Utf8               $colon$colon
   #783 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/List;
   #784 = NameAndType        #782:#783    // $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   #785 = Methodref          #781.#784    // scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
   #786 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #787 = NameAndType        #346:#786    // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #788 = Methodref          #773.#787    // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #789 = Utf8               coursier/error/conflict/UnsatisfiedRule
   #790 = Class              #789         // coursier/error/conflict/UnsatisfiedRule
   #791 = Utf8               res0
   #792 = Utf8               conflicts
   #793 = Utf8               Lscala/collection/immutable/List;
   #794 = Utf8               Lcoursier/error/conflict/UnsatisfiedRule;
   #795 = Utf8               Lscala/Tuple2;
   #796 = Utf8               $anonfun$ioWithConflicts0$2
   #797 = Utf8               (Lcoursier/Resolve;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #798 = NameAndType        #700:#449    // validate0$1:(Lcoursier/core/Resolution;)Ljava/lang/Object;
   #799 = Methodref          #2.#798      // coursier/Resolve.validate0$1:(Lcoursier/core/Resolution;)Ljava/lang/Object;
   #800 = Utf8               $anonfun$ioWithConflicts0$3
   #801 = Utf8               (Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #802 = Utf8               t$1
   #803 = Utf8               recurseOnRules$1
   #804 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/Function1;)Ljava/lang/Object;
   #805 = NameAndType        #803:#804    // recurseOnRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/Function1;)Ljava/lang/Object;
   #806 = Methodref          #2.#805      // coursier/Resolve.recurseOnRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/Function1;)Ljava/lang/Object;
   #807 = Utf8               rules
   #808 = Utf8               scala/collection/immutable/Seq$
   #809 = Class              #808         // scala/collection/immutable/Seq$
   #810 = Utf8               Lscala/collection/immutable/Seq$;
   #811 = NameAndType        #73:#810     // MODULE$:Lscala/collection/immutable/Seq$;
   #812 = Fieldref           #809.#811    // scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
   #813 = Utf8               unapplySeq
   #814 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
   #815 = NameAndType        #813:#814    // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
   #816 = Methodref          #809.#815    // scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
   #817 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
   #818 = NameAndType        #73:#817     // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
   #819 = Fieldref           #43.#818     // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
   #820 = Utf8               isEmpty$extension
   #821 = Utf8               (Lscala/collection/SeqOps;)Z
   #822 = NameAndType        #820:#821    // isEmpty$extension:(Lscala/collection/SeqOps;)Z
   #823 = Methodref          #43.#822     // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
   #824 = Utf8               get$extension
   #825 = NameAndType        #824:#814    // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
   #826 = Methodref          #43.#825     // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
   #827 = Utf8               (Lscala/collection/SeqOps;)V
   #828 = NameAndType        #346:#827    // "<init>":(Lscala/collection/SeqOps;)V
   #829 = Methodref          #38.#828     // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
   #830 = Utf8               lengthCompare$extension
   #831 = Utf8               (Lscala/collection/SeqOps;I)I
   #832 = NameAndType        #830:#831    // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
   #833 = Methodref          #43.#832     // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
   #834 = Utf8               scala/collection/SeqOps
   #835 = Class              #834         // scala/collection/SeqOps
   #836 = Utf8               apply$extension
   #837 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
   #838 = NameAndType        #836:#837    // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
   #839 = Methodref          #43.#838     // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
   #840 = Utf8               drop$extension
   #841 = Utf8               (Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
   #842 = NameAndType        #840:#841    // drop$extension:(Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
   #843 = Methodref          #43.#842     // scala/collection/SeqFactory$UnapplySeqWrapper$.drop$extension:(Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
   #844 = Utf8               coursier/params/rule/Rule
   #845 = Class              #844         // coursier/params/rule/Rule
   #846 = Utf8               coursier/params/rule/RuleResolution
   #847 = Class              #846         // coursier/params/rule/RuleResolution
   #848 = Utf8               enforce
   #849 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/RuleResolution;)Lscala/util/Either;
   #850 = NameAndType        #848:#849    // enforce:(Lcoursier/core/Resolution;Lcoursier/params/rule/RuleResolution;)Lscala/util/Either;
   #851 = Methodref          #845.#850    // coursier/params/rule/Rule.enforce:(Lcoursier/core/Resolution;Lcoursier/params/rule/RuleResolution;)Lscala/util/Either;
   #852 = NameAndType        #768:#769    // $anonfun$ioWithConflicts0$1:(Lcoursier/error/conflict/UnsatisfiedRule;Lscala/Tuple2;)Lscala/Tuple2;
   #853 = Methodref          #2.#852      // coursier/Resolve.$anonfun$ioWithConflicts0$1:(Lcoursier/error/conflict/UnsatisfiedRule;Lscala/Tuple2;)Lscala/Tuple2;
   #854 = MethodHandle       6:#853       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$1:(Lcoursier/error/conflict/UnsatisfiedRule;Lscala/Tuple2;)Lscala/Tuple2;
   #855 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
   #856 = MethodType         #855         //  (Lscala/Tuple2;)Lscala/Tuple2;
   #857 = Utf8               (Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/Function1;
   #858 = NameAndType        #68:#857     // apply:(Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/Function1;
   #859 = InvokeDynamic      #17:#858     // #17:apply:(Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/Function1;
   #860 = Methodref          #325.#710    // scala/Some.value:()Ljava/lang/Object;
   #861 = Utf8               coursier/core/DependencySet$
   #862 = Class              #861         // coursier/core/DependencySet$
   #863 = Utf8               Lcoursier/core/DependencySet$;
   #864 = NameAndType        #73:#863     // MODULE$:Lcoursier/core/DependencySet$;
   #865 = Fieldref           #862.#864    // coursier/core/DependencySet$.MODULE$:Lcoursier/core/DependencySet$;
   #866 = Utf8               empty
   #867 = Utf8               ()Lcoursier/core/DependencySet;
   #868 = NameAndType        #866:#867    // empty:()Lcoursier/core/DependencySet;
   #869 = Methodref          #862.#868    // coursier/core/DependencySet$.empty:()Lcoursier/core/DependencySet;
   #870 = Utf8               withDependencySet
   #871 = Utf8               (Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
   #872 = NameAndType        #870:#871    // withDependencySet:(Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
   #873 = Methodref          #757.#872    // coursier/core/Resolution.withDependencySet:(Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
   #874 = NameAndType        #796:#797    // $anonfun$ioWithConflicts0$2:(Lcoursier/Resolve;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #875 = Methodref          #2.#874      // coursier/Resolve.$anonfun$ioWithConflicts0$2:(Lcoursier/Resolve;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #876 = MethodHandle       6:#875       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$2:(Lcoursier/Resolve;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #877 = InvokeDynamic      #18:#246     // #18:apply:(Lcoursier/Resolve;)Lscala/Function1;
   #878 = NameAndType        #800:#801    // $anonfun$ioWithConflicts0$3:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #879 = Methodref          #2.#878      // coursier/Resolve.$anonfun$ioWithConflicts0$3:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #880 = MethodHandle       6:#879       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$3:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #881 = Utf8               (Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/Function1;
   #882 = NameAndType        #68:#881     // apply:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/Function1;
   #883 = InvokeDynamic      #19:#882     // #19:apply:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/Function1;
   #884 = Utf8               c
   #885 = Utf8               Lcoursier/error/ResolutionError$UnsatisfiableRule;
   #886 = Utf8               newRes
   #887 = Utf8               rule
   #888 = Utf8               Lcoursier/params/rule/Rule;
   #889 = Utf8               ruleRes
   #890 = Utf8               Lcoursier/params/rule/RuleResolution;
   #891 = Utf8               validateAllRules$1
   #892 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #893 = Utf8               check
   #894 = Utf8               (Lcoursier/core/Resolution;)Lscala/Option;
   #895 = NameAndType        #893:#894    // check:(Lcoursier/core/Resolution;)Lscala/Option;
   #896 = Methodref          #845.#895    // coursier/params/rule/Rule.check:(Lcoursier/core/Resolution;)Lscala/Option;
   #897 = Utf8               $anonfun$ioWithConflicts0$6
   #898 = Utf8               scala/Tuple3
   #899 = Class              #898         // scala/Tuple3
   #900 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #901 = NameAndType        #346:#900    // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #902 = Methodref          #899.#901    // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #903 = Methodref          #899.#775    // scala/Tuple3._1:()Ljava/lang/Object;
   #904 = Methodref          #899.#778    // scala/Tuple3._2:()Ljava/lang/Object;
   #905 = Utf8               _3
   #906 = NameAndType        #905:#163    // _3:()Ljava/lang/Object;
   #907 = Methodref          #899.#906    // scala/Tuple3._3:()Ljava/lang/Object;
   #908 = Utf8               res2
   #909 = Utf8               x$5
   #910 = Utf8               $anonfun$ioWithConflicts0$8
   #911 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/List;Lcoursier/core/Resolution;)Lscala/Tuple2;
   #912 = Utf8               res2$1
   #913 = Utf8               conflicts$1
   #914 = Utf8               x$7
   #915 = Utf8               $anonfun$ioWithConflicts0$7
   #916 = Utf8               (Lcoursier/Resolve;Lscala/Tuple2;)Ljava/lang/Object;
   #917 = Utf8               x$8
   #918 = Utf8               actualRules
   #919 = NameAndType        #918:#102    // actualRules:()Lscala/collection/immutable/Seq;
   #920 = Methodref          #208.#919    // coursier/params/ResolutionParams.actualRules:()Lscala/collection/immutable/Seq;
   #921 = NameAndType        #891:#892    // validateAllRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #922 = Methodref          #2.#921      // coursier/Resolve.validateAllRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #923 = NameAndType        #910:#911    // $anonfun$ioWithConflicts0$8:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;Lcoursier/core/Resolution;)Lscala/Tuple2;
   #924 = Methodref          #2.#923      // coursier/Resolve.$anonfun$ioWithConflicts0$8:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;Lcoursier/core/Resolution;)Lscala/Tuple2;
   #925 = MethodHandle       6:#924       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$8:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;Lcoursier/core/Resolution;)Lscala/Tuple2;
   #926 = Utf8               (Lcoursier/core/Resolution;)Lscala/Tuple2;
   #927 = MethodType         #926         //  (Lcoursier/core/Resolution;)Lscala/Tuple2;
   #928 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/List;)Lscala/Function1;
   #929 = NameAndType        #68:#928     // apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;)Lscala/Function1;
   #930 = InvokeDynamic      #20:#929     // #20:apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;)Lscala/Function1;
   #931 = Utf8               $anonfun$ioWithConflicts0$5
   #932 = Utf8               res1
   #933 = NameAndType        #897:#855    // $anonfun$ioWithConflicts0$6:(Lscala/Tuple2;)Lscala/Tuple2;
   #934 = Methodref          #2.#933      // coursier/Resolve.$anonfun$ioWithConflicts0$6:(Lscala/Tuple2;)Lscala/Tuple2;
   #935 = MethodHandle       6:#934       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$6:(Lscala/Tuple2;)Lscala/Tuple2;
   #936 = InvokeDynamic      #21:#387     // #21:apply:()Lscala/Function1;
   #937 = NameAndType        #915:#916    // $anonfun$ioWithConflicts0$7:(Lcoursier/Resolve;Lscala/Tuple2;)Ljava/lang/Object;
   #938 = Methodref          #2.#937      // coursier/Resolve.$anonfun$ioWithConflicts0$7:(Lcoursier/Resolve;Lscala/Tuple2;)Ljava/lang/Object;
   #939 = MethodHandle       6:#938       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$7:(Lcoursier/Resolve;Lscala/Tuple2;)Ljava/lang/Object;
   #940 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
   #941 = MethodType         #940         //  (Lscala/Tuple2;)Ljava/lang/Object;
   #942 = InvokeDynamic      #22:#246     // #22:apply:(Lcoursier/Resolve;)Lscala/Function1;
   #943 = NameAndType        #931:#445    // $anonfun$ioWithConflicts0$5:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #944 = Methodref          #2.#943      // coursier/Resolve.$anonfun$ioWithConflicts0$5:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #945 = MethodHandle       6:#944       // REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$5:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
   #946 = InvokeDynamic      #23:#452     // #23:apply:(Lcoursier/Resolve;Lscala/Function1;)Lscala/Function1;
   #947 = NameAndType        #190:#159    // transformFetcher:()Lscala/Function1;
   #948 = Methodref          #2.#947      // coursier/Resolve.transformFetcher:()Lscala/Function1;
   #949 = NameAndType        #430:#233    // ioWithConflicts0:(Lscala/Function1;)Ljava/lang/Object;
   #950 = Methodref          #2.#949      // coursier/Resolve.ioWithConflicts0:(Lscala/Function1;)Ljava/lang/Object;
   #951 = Utf8               fetchVia0
   #952 = Utf8               x$9
   #953 = Utf8               (Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;)V
   #954 = Utf8               ()V
   #955 = NameAndType        #346:#954    // "<init>":()V
   #956 = Methodref          #5.#955      // java/lang/Object."<init>":()V
   #957 = Utf8               $init$
   #958 = Utf8               (Lscala/Product;)V
   #959 = NameAndType        #957:#958    // $init$:(Lscala/Product;)V
   #960 = InterfaceMethodref #7.#959      // scala/Product.$init$:(Lscala/Product;)V
   #961 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
   #962 = Utf8               (Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lcoursier/util/Sync<TF;>;)V
   #963 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)V
   #964 = Utf8               (Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)V
   #965 = Utf8               coursier/params/ResolutionParams$
   #966 = Class              #965         // coursier/params/ResolutionParams$
   #967 = Utf8               Lcoursier/params/ResolutionParams$;
   #968 = NameAndType        #73:#967     // MODULE$:Lcoursier/params/ResolutionParams$;
   #969 = Fieldref           #966.#968    // coursier/params/ResolutionParams$.MODULE$:Lcoursier/params/ResolutionParams$;
   #970 = NameAndType        #68:#138     // apply:()Lcoursier/params/ResolutionParams;
   #971 = Methodref          #966.#970    // coursier/params/ResolutionParams$.apply:()Lcoursier/params/ResolutionParams;
   #972 = NameAndType        #592:#593    // $anonfun$finalDependencies$1:(Lscala/Function2;Lcoursier/core/Dependency;)Z
   #973 = Methodref          #2.#972      // coursier/Resolve.$anonfun$finalDependencies$1:(Lscala/Function2;Lcoursier/core/Dependency;)Z
   #974 = Utf8               boxToBoolean
   #975 = Utf8               (Z)Ljava/lang/Boolean;
   #976 = NameAndType        #974:#975    // boxToBoolean:(Z)Ljava/lang/Boolean;
   #977 = Methodref          #554.#976    // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #978 = Utf8               $deserializeLambda$
   #979 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #980 = Utf8               scala/runtime/LambdaDeserialize
   #981 = Class              #980         // scala/runtime/LambdaDeserialize
   #982 = Utf8               bootstrap
   #983 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #984 = NameAndType        #982:#983    // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #985 = Methodref          #981.#984    // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #986 = MethodHandle       6:#985       // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #987 = Utf8               lambdaDeserialize
   #988 = NameAndType        #987:#979    // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #989 = InvokeDynamic      #24:#988     // #24:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #990 = Utf8               Signature
   #991 = Utf8               Code
   #992 = Utf8               MethodParameters
   #993 = Utf8               LineNumberTable
   #994 = Utf8               LocalVariableTable
   #995 = Utf8               StackMapTable
   #996 = Utf8               InnerClasses
   #997 = Utf8               SourceFile
   #998 = Utf8               RuntimeVisibleAnnotations
   #999 = Utf8               BootstrapMethods
  #1000 = Utf8               ScalaInlineInfo
  #1001 = Utf8               ScalaSig
{
  private final coursier.cache.Cache<F> cache;
    descriptor: Lcoursier/cache/Cache;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #46                          // Lcoursier/cache/Cache<TF;>;

  private final scala.collection.immutable.Seq<coursier.core.Dependency> dependencies;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #49                          // Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;

  private final scala.collection.immutable.Seq<coursier.core.Repository> repositories;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #51                          // Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;

  private final scala.collection.immutable.Seq<coursier.params.MirrorConfFile> mirrorConfFiles;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #53                          // Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;

  private final scala.collection.immutable.Seq<coursier.params.Mirror> mirrors;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #55                          // Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;

  private final coursier.params.ResolutionParams resolutionParams;
    descriptor: Lcoursier/params/ResolutionParams;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Option<scala.Function1<F, F>> throughOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #60                          // Lscala/Option<Lscala/Function1<TF;TF;>;>;

  private final scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>> transformFetcherOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #62                          // Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;

  private final scala.Option<coursier.core.Resolution> initialResolution;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #64                          // Lscala/Option<Lcoursier/core/Resolution;>;

  private final coursier.util.Sync<F> sync;
    descriptor: Lcoursier/util/Sync;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #67                          // Lcoursier/util/Sync<TF;>;

  public static <F extends java.lang.Object> coursier.Resolve<F> apply(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.params.ResolutionParams, scala.Option<scala.Function1<F, F>>, scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>, scala.Option<coursier.core.Resolution>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=11, locals=10, args_size=10
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: aload         8
        17: aload         9
        19: invokevirtual #78                 // Method coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
        22: areturn
    Signature: #70                          // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      dependencies                   final
      repositories                   final
      mirrorConfFiles                final
      mirrors                        final
      resolutionParams               final
      throughOpt                     final
      transformFetcherOpt            final
      initialResolution              final
      sync                           final

  public static <F extends java.lang.Object> coursier.Resolve<F> apply(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.params.ResolutionParams, scala.Option<scala.Function1<F, F>>, scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=10, locals=9, args_size=9
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: aload         8
        17: invokevirtual #82                 // Method coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
        20: areturn
    Signature: #80                          // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      dependencies                   final
      repositories                   final
      mirrorConfFiles                final
      mirrors                        final
      resolutionParams               final
      throughOpt                     final
      transformFetcherOpt            final
      sync                           final

  public static <F extends java.lang.Object> coursier.Resolve<F> apply(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_0
         4: aload_1
         5: invokevirtual #86                 // Method coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
         8: areturn
    Signature: #84                          // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      sync                           final

  public static coursier.util.ValidationNel<coursier.error.ResolutionError, scala.runtime.BoxedUnit> validate(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_0
         4: invokevirtual #92                 // Method coursier/Resolve$.validate:(Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
         7: areturn
    Signature: #89                          // (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel<Lcoursier/error/ResolutionError;Lscala/runtime/BoxedUnit;>;
    MethodParameters:
      Name                           Flags
      res                            final

  public static coursier.Resolve ResolveTaskOps(coursier.Resolve);
    descriptor: (Lcoursier/Resolve;)Lcoursier/Resolve;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_0
         4: invokevirtual #96                 // Method coursier/Resolve$.ResolveTaskOps:(Lcoursier/Resolve;)Lcoursier/Resolve;
         7: areturn
    MethodParameters:
      Name                           Flags
      resolve                        final

  public static coursier.Resolve<coursier.util.Task> apply();
    descriptor: ()Lcoursier/Resolve;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: invokevirtual #100                // Method coursier/Resolve$.apply:()Lcoursier/Resolve;
         6: areturn
    Signature: #98                          // ()Lcoursier/Resolve<Lcoursier/util/Task;>;

  public static scala.collection.immutable.Seq<coursier.core.Repository> defaultRepositories();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: invokevirtual #105                // Method coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
         6: areturn
    Signature: #103                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;

  public static scala.collection.immutable.Seq<coursier.params.MirrorConfFile> defaultMirrorConfFiles();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: invokevirtual #109                // Method coursier/Resolve$.defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
         6: areturn
    Signature: #107                         // ()Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #116                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #112                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #123                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #120                         // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.cache.Cache<F> cache();
    descriptor: ()Lcoursier/cache/Cache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #127                // Field cache:Lcoursier/cache/Cache;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #125                         // ()Lcoursier/cache/Cache<TF;>;

  public scala.collection.immutable.Seq<coursier.core.Dependency> dependencies();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #130                // Field dependencies:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #128                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;

  public scala.collection.immutable.Seq<coursier.core.Repository> repositories();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #132                // Field repositories:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #103                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;

  public scala.collection.immutable.Seq<coursier.params.MirrorConfFile> mirrorConfFiles();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #134                // Field mirrorConfFiles:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #107                         // ()Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;

  public scala.collection.immutable.Seq<coursier.params.Mirror> mirrors();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #137                // Field mirrors:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #135                         // ()Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;

  public coursier.params.ResolutionParams resolutionParams();
    descriptor: ()Lcoursier/params/ResolutionParams;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #140                // Field resolutionParams:Lcoursier/params/ResolutionParams;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;

  public scala.Option<scala.Function1<F, F>> throughOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #144                // Field throughOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #142                         // ()Lscala/Option<Lscala/Function1<TF;TF;>;>;

  public scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>> transformFetcherOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #147                // Field transformFetcherOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #145                         // ()Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;

  public scala.Option<coursier.core.Resolution> initialResolution();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #150                // Field initialResolution:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #148                         // ()Lscala/Option<Lcoursier/core/Resolution;>;

  public coursier.util.Sync<F> sync();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #154                // Field sync:Lcoursier/util/Sync;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #152                         // ()Lcoursier/util/Sync<TF;>;

  private coursier.util.Sync<F> S();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve;
    Signature: #152                         // ()Lcoursier/util/Sync<TF;>;

  private scala.Function1<F, F> through();
    descriptor: ()Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #162                // Method throughOpt:()Lscala/Option;
         4: invokedynamic #181,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
         9: invokevirtual #187                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        12: checkcast     #189                // class scala/Function1
        15: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/Resolve;
    Signature: #160                         // ()Lscala/Function1<TF;TF;>;

  private scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>> transformFetcher();
    descriptor: ()Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
         4: invokedynamic #198,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
         9: invokevirtual #187                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        12: checkcast     #189                // class scala/Function1
        15: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/Resolve;
    Signature: #191                         // ()Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;

  public scala.collection.immutable.Seq<coursier.core.Dependency> finalDependencies();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #204                // Field coursier/core/Exclusions$.MODULE$:Lcoursier/core/Exclusions$;
         3: aload_0
         4: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
         7: invokevirtual #212                // Method coursier/params/ResolutionParams.exclusions:()Lscala/collection/immutable/Set;
        10: invokevirtual #215                // Method coursier/core/Exclusions$.apply:(Lscala/collection/immutable/Set;)Lscala/Function2;
        13: astore_1
        14: aload_0
        15: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        18: aload_1
        19: invokedynamic #229,  0            // InvokeDynamic #2:apply:(Lscala/Function2;)Lscala/Function1;
        24: invokeinterface #235,  2          // InterfaceMethod scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
        29: checkcast     #237                // class scala/collection/IterableOps
        32: aload_0
        33: invokedynamic #247,  0            // InvokeDynamic #3:apply:(Lcoursier/Resolve;)Lscala/Function1;
        38: invokeinterface #250,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        43: checkcast     #231                // class scala/collection/immutable/Seq
        46: areturn
      LineNumberTable:
        line 45: 0
        line 47: 14
        line 48: 18
        line 51: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      32     1 filter   Lscala/Function2;
            0      47     0  this   Lcoursier/Resolve;
    Signature: #128                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;

  public F finalRepositories();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: invokevirtual #259                // Method allMirrors:()Ljava/lang/Object;
         7: aload_0
         8: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        11: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        14: aload_0
        15: invokedynamic #271,  0            // InvokeDynamic #4:apply:(Lcoursier/Resolve;)Lscala/Function1;
        20: invokeinterface #272,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        25: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcoursier/Resolve;
    Signature: #253                         // ()TF;

  public coursier.Resolve<F> addDependencies(scala.collection.immutable.Seq<coursier.core.Dependency>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
         5: aload_1
         6: invokeinterface #279,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        11: checkcast     #231                // class scala/collection/immutable/Seq
        14: invokevirtual #282                // Method withDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        17: areturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/Resolve;
            0      18     1 dependencies   Lscala/collection/immutable/Seq;
    Signature: #275                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      dependencies                   final

  public coursier.Resolve<F> addRepositories(scala.collection.immutable.Seq<coursier.core.Repository>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
         5: aload_1
         6: invokeinterface #279,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        11: checkcast     #231                // class scala/collection/immutable/Seq
        14: invokevirtual #289                // Method withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        17: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/Resolve;
            0      18     1 repositories   Lscala/collection/immutable/Seq;
    Signature: #284                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      repositories                   final

  public coursier.Resolve<F> noMirrors();
    descriptor: ()Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #296                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         4: invokevirtual #299                // Method withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
         7: getstatic     #296                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        10: invokevirtual #302                // Method withMirrorConfFiles:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        13: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/Resolve;
    Signature: #291                         // ()Lcoursier/Resolve<TF;>;

  public coursier.Resolve<F> addMirrors(scala.collection.immutable.Seq<coursier.params.Mirror>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
         5: aload_1
         6: invokeinterface #279,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        11: checkcast     #231                // class scala/collection/immutable/Seq
        14: invokevirtual #299                // Method withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        17: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/Resolve;
            0      18     1 mirrors   Lscala/collection/immutable/Seq;
    Signature: #304                         // (Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      mirrors                        final

  public coursier.Resolve<F> addMirrorConfFiles(scala.collection.immutable.Seq<coursier.params.MirrorConfFile>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
         5: aload_1
         6: invokeinterface #279,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        11: checkcast     #231                // class scala/collection/immutable/Seq
        14: invokevirtual #302                // Method withMirrorConfFiles:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        17: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/Resolve;
            0      18     1 mirrorConfFiles   Lscala/collection/immutable/Seq;
    Signature: #308                         // (Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      mirrorConfFiles                final

  public coursier.Resolve<F> mapResolutionParams(scala.Function1<coursier.params.ResolutionParams, coursier.params.ResolutionParams>);
    descriptor: (Lscala/Function1;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: aload_0
         3: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
         6: invokeinterface #316,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        11: checkcast     #208                // class coursier/params/ResolutionParams
        14: invokevirtual #320                // Method withResolutionParams:(Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
        17: areturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/Resolve;
            0      18     1     f   Lscala/Function1;
    Signature: #313                         // (Lscala/Function1<Lcoursier/params/ResolutionParams;Lcoursier/params/ResolutionParams;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Resolve<F> transformResolution(scala.Function1<F, F>);
    descriptor: (Lscala/Function1;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: new           #325                // class scala/Some
         4: dup
         5: aload_0
         6: invokevirtual #162                // Method throughOpt:()Lscala/Option;
         9: aload_1
        10: invokedynamic #333,  0            // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function0;
        15: aload_1
        16: invokedynamic #341,  0            // InvokeDynamic #6:apply:(Lscala/Function1;)Lscala/Function1;
        21: invokevirtual #345                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        24: invokespecial #349                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        27: invokevirtual #353                // Method withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
        30: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcoursier/Resolve;
            0      31     1     f   Lscala/Function1;
    Signature: #323                         // (Lscala/Function1<TF;TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Resolve<F> noTransformResolution();
    descriptor: ()Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
         4: invokevirtual #353                // Method withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
         7: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Resolve;
    Signature: #291                         // ()Lcoursier/Resolve<TF;>;

  public coursier.Resolve<F> withTransformResolution(scala.Option<scala.Function1<F, F>>);
    descriptor: (Lscala/Option;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #353                // Method withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
         5: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/Resolve;
            0       6     1  fOpt   Lscala/Option;
    Signature: #361                         // (Lscala/Option<Lscala/Function1<TF;TF;>;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      fOpt                           final

  public coursier.Resolve<F> transformFetcher(scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>);
    descriptor: (Lscala/Function1;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: new           #325                // class scala/Some
         4: dup
         5: aload_0
         6: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
         9: aload_1
        10: invokedynamic #368,  0            // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function0;
        15: aload_1
        16: invokedynamic #373,  0            // InvokeDynamic #8:apply:(Lscala/Function1;)Lscala/Function1;
        21: invokevirtual #345                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        24: invokespecial #349                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        27: invokevirtual #376                // Method withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
        30: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcoursier/Resolve;
            0      31     1     f   Lscala/Function1;
    Signature: #363                         // (Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Resolve<F> noTransformFetcher();
    descriptor: ()Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
         4: invokevirtual #376                // Method withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
         7: areturn
      LineNumberTable:
        line 89: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Resolve;
    Signature: #291                         // ()Lcoursier/Resolve<TF;>;

  public coursier.Resolve<F> withTransformFetcher(scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>);
    descriptor: (Lscala/Option;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #376                // Method withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
         5: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/Resolve;
            0       6     1  fOpt   Lscala/Option;
    Signature: #379                         // (Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      fOpt                           final

  private scala.collection.immutable.Seq<coursier.params.Mirror> allMirrors0();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
         4: aload_0
         5: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
         8: invokedynamic #388,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
        13: invokeinterface #391,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        18: checkcast     #393                // class scala/collection/IterableOnce
        21: invokeinterface #279,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        26: checkcast     #231                // class scala/collection/immutable/Seq
        29: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/Resolve;
    Signature: #135                         // ()Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;

  public F allMirrors();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #395                // Method S:()Lcoursier/util/Sync;
         4: aload_0
         5: invokedynamic #404,  0            // InvokeDynamic #10:apply:(Lcoursier/Resolve;)Lscala/Function0;
        10: invokeinterface #409,  2          // InterfaceMethod coursier/util/Sync.delay:(Lscala/Function0;)Ljava/lang/Object;
        15: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/Resolve;
    Signature: #253                         // ()TF;

  private F fetchVia();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         4: invokevirtual #417                // Method coursier/cache/Cache.fetchs:()Lscala/collection/immutable/Seq;
         7: astore_1
         8: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        11: aload_0
        12: invokevirtual #419                // Method finalRepositories:()Ljava/lang/Object;
        15: aload_0
        16: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        19: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        22: aload_0
        23: aload_1
        24: invokedynamic #429,  0            // InvokeDynamic #11:apply:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/Function1;
        29: invokeinterface #272,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        34: areturn
      LineNumberTable:
        line 101: 0
        line 102: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      26     1 fetchs   Lscala/collection/immutable/Seq;
            0      35     0  this   Lcoursier/Resolve;
    Signature: #253                         // ()TF;

  private F ioWithConflicts0(scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_0
         4: invokevirtual #434                // Method finalDependencies:()Lscala/collection/immutable/Seq;
         7: aload_0
         8: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        11: aload_0
        12: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        15: invokevirtual #439                // Method coursier/Resolve$.initialResolution:(Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;)Lcoursier/core/Resolution;
        18: astore_2
        19: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        22: aload_0
        23: aload_2
        24: aload_1
        25: invokespecial #443                // Method run$1:(Lcoursier/core/Resolution;Lscala/Function1;)Ljava/lang/Object;
        28: aload_0
        29: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        32: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        35: aload_0
        36: aload_1
        37: invokedynamic #453,  0            // InvokeDynamic #12:apply:(Lcoursier/Resolve;Lscala/Function1;)Lscala/Function1;
        42: invokeinterface #454,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        47: areturn
      LineNumberTable:
        line 107: 0
        line 160: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      28     2 initialRes   Lcoursier/core/Resolution;
            0      48     0  this   Lcoursier/Resolve;
            0      48     1 fetch   Lscala/Function1;
    Signature: #431                         // (Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;)TF;
    MethodParameters:
      Name                           Flags
      fetch                          final

  public F ioWithConflicts();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: invokespecial #459                // Method fetchVia:()Ljava/lang/Object;
         7: aload_0
         8: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        11: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        14: aload_0
        15: invokedynamic #466,  0            // InvokeDynamic #13:apply:(Lcoursier/Resolve;)Lscala/Function1;
        20: invokeinterface #454,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        25: areturn
      LineNumberTable:
        line 169: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcoursier/Resolve;
    Signature: #253                         // ()TF;

  public F io();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: invokevirtual #469                // Method ioWithConflicts:()Ljava/lang/Object;
         7: aload_0
         8: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        11: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        14: invokedynamic #476,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
        19: invokeinterface #272,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        24: areturn
      LineNumberTable:
        line 175: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/Resolve;
    Signature: #253                         // ()TF;

  public coursier.Resolve<F> withCache(coursier.cache.Cache<F>);
    descriptor: (Lcoursier/cache/Cache;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
         9: aload_0
        10: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        13: aload_0
        14: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        17: aload_0
        18: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        21: aload_0
        22: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        25: aload_0
        26: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        29: aload_0
        30: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 cache   Lcoursier/cache/Cache;
    Signature: #479                         // (Lcoursier/cache/Cache<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final

  public coursier.Resolve<F> withDependencies(scala.collection.immutable.Seq<coursier.core.Dependency>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_1
         9: aload_0
        10: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        13: aload_0
        14: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        17: aload_0
        18: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        21: aload_0
        22: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        25: aload_0
        26: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        29: aload_0
        30: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 dependencies   Lscala/collection/immutable/Seq;
    Signature: #275                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      dependencies                   final

  public coursier.Resolve<F> withRepositories(scala.collection.immutable.Seq<coursier.core.Repository>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_1
        13: aload_0
        14: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        17: aload_0
        18: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        21: aload_0
        22: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        25: aload_0
        26: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        29: aload_0
        30: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 repositories   Lscala/collection/immutable/Seq;
    Signature: #284                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      repositories                   final

  public coursier.Resolve<F> withMirrorConfFiles(scala.collection.immutable.Seq<coursier.params.MirrorConfFile>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_1
        17: aload_0
        18: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        21: aload_0
        22: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        25: aload_0
        26: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        29: aload_0
        30: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 mirrorConfFiles   Lscala/collection/immutable/Seq;
    Signature: #308                         // (Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      mirrorConfFiles                final

  public coursier.Resolve<F> withMirrors(scala.collection.immutable.Seq<coursier.params.Mirror>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: aload_1
        21: aload_0
        22: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        25: aload_0
        26: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        29: aload_0
        30: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 mirrors   Lscala/collection/immutable/Seq;
    Signature: #304                         // (Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      mirrors                        final

  public coursier.Resolve<F> withResolutionParams(coursier.params.ResolutionParams);
    descriptor: (Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        24: aload_1
        25: aload_0
        26: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        29: aload_0
        30: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 resolutionParams   Lcoursier/params/ResolutionParams;
    Signature: #483                         // (Lcoursier/params/ResolutionParams;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      resolutionParams               final

  public coursier.Resolve<F> withThroughOpt(scala.Option<scala.Function1<F, F>>);
    descriptor: (Lscala/Option;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        24: aload_0
        25: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        28: aload_1
        29: aload_0
        30: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 throughOpt   Lscala/Option;
    Signature: #361                         // (Lscala/Option<Lscala/Function1<TF;TF;>;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      throughOpt                     final

  public coursier.Resolve<F> withTransformFetcherOpt(scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>);
    descriptor: (Lscala/Option;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        24: aload_0
        25: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        28: aload_0
        29: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        32: aload_1
        33: aload_0
        34: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 transformFetcherOpt   Lscala/Option;
    Signature: #379                         // (Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      transformFetcherOpt            final

  public coursier.Resolve<F> withInitialResolution(scala.Option<coursier.core.Resolution>);
    descriptor: (Lscala/Option;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        24: aload_0
        25: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        28: aload_0
        29: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        32: aload_0
        33: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        36: aload_1
        37: aload_0
        38: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1 initialResolution   Lscala/Option;
    Signature: #485                         // (Lscala/Option<Lcoursier/core/Resolution;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      initialResolution              final

  public coursier.Resolve<F> withSync(coursier.util.Sync<F>);
    descriptor: (Lcoursier/util/Sync;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class coursier/Resolve
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        24: aload_0
        25: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        28: aload_0
        29: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        32: aload_0
        33: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        36: aload_0
        37: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        40: aload_1
        41: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        44: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lcoursier/Resolve;
            0      45     1  sync   Lcoursier/util/Sync;
    Signature: #488                         // (Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      sync                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #492                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #494                // String Resolve(
         7: invokespecial #497                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
        16: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #509                // String ,
        27: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        36: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        39: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #509                // String ,
        47: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        56: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        59: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #509                // String ,
        67: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: aload_0
        73: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        76: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        79: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: pop
        83: aload_1
        84: ldc_w         #509                // String ,
        87: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: pop
        91: aload_1
        92: aload_0
        93: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        96: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        99: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       102: pop
       103: aload_1
       104: ldc_w         #509                // String ,
       107: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       110: pop
       111: aload_1
       112: aload_0
       113: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
       116: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       119: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       122: pop
       123: aload_1
       124: ldc_w         #509                // String ,
       127: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: aload_0
       133: invokevirtual #162                // Method throughOpt:()Lscala/Option;
       136: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       139: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       142: pop
       143: aload_1
       144: ldc_w         #509                // String ,
       147: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       150: pop
       151: aload_1
       152: aload_0
       153: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
       156: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       159: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       162: pop
       163: aload_1
       164: ldc_w         #509                // String ,
       167: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       170: pop
       171: aload_1
       172: aload_0
       173: invokevirtual #436                // Method initialResolution:()Lscala/Option;
       176: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       179: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       182: pop
       183: aload_1
       184: ldc_w         #509                // String ,
       187: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: pop
       191: aload_1
       192: aload_0
       193: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       196: invokestatic  #503                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       199: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       202: pop
       203: aload_1
       204: ldc_w         #511                // String )
       207: invokevirtual #507                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       210: pop
       211: aload_1
       212: invokevirtual #513                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       215: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     204     1     b   Ljava/lang/StringBuilder;
            0     216     0  this   Lcoursier/Resolve;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/Resolve
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Resolve;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=13, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     337
         5: aload_0
         6: aload_1
         7: invokevirtual #522                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          341
        13: aload_1
        14: checkcast     #2                  // class coursier/Resolve
        17: astore_2
        18: iconst_1
        19: ifeq          333
        22: aload_0
        23: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
        26: aload_2
        27: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          333
        43: aload_3
        44: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          333
        50: aload_0
        51: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        54: aload_2
        55: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          333
        73: aload         4
        75: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          333
        81: aload_0
        82: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        85: aload_2
        86: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        89: astore        5
        91: dup
        92: ifnonnull     104
        95: pop
        96: aload         5
        98: ifnull        112
       101: goto          333
       104: aload         5
       106: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       109: ifeq          333
       112: aload_0
       113: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
       116: aload_2
       117: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
       120: astore        6
       122: dup
       123: ifnonnull     135
       126: pop
       127: aload         6
       129: ifnull        143
       132: goto          333
       135: aload         6
       137: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       140: ifeq          333
       143: aload_0
       144: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
       147: aload_2
       148: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
       151: astore        7
       153: dup
       154: ifnonnull     166
       157: pop
       158: aload         7
       160: ifnull        174
       163: goto          333
       166: aload         7
       168: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       171: ifeq          333
       174: aload_0
       175: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
       178: aload_2
       179: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
       182: astore        8
       184: dup
       185: ifnonnull     197
       188: pop
       189: aload         8
       191: ifnull        205
       194: goto          333
       197: aload         8
       199: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       202: ifeq          333
       205: aload_0
       206: invokevirtual #162                // Method throughOpt:()Lscala/Option;
       209: aload_2
       210: invokevirtual #162                // Method throughOpt:()Lscala/Option;
       213: astore        9
       215: dup
       216: ifnonnull     228
       219: pop
       220: aload         9
       222: ifnull        236
       225: goto          333
       228: aload         9
       230: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       233: ifeq          333
       236: aload_0
       237: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
       240: aload_2
       241: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
       244: astore        10
       246: dup
       247: ifnonnull     259
       250: pop
       251: aload         10
       253: ifnull        267
       256: goto          333
       259: aload         10
       261: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       264: ifeq          333
       267: aload_0
       268: invokevirtual #436                // Method initialResolution:()Lscala/Option;
       271: aload_2
       272: invokevirtual #436                // Method initialResolution:()Lscala/Option;
       275: astore        11
       277: dup
       278: ifnonnull     290
       281: pop
       282: aload         11
       284: ifnull        298
       287: goto          333
       290: aload         11
       292: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       295: ifeq          333
       298: aload_0
       299: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       302: aload_2
       303: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       306: astore        12
       308: dup
       309: ifnonnull     321
       312: pop
       313: aload         12
       315: ifnull        329
       318: goto          333
       321: aload         12
       323: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       326: ifeq          333
       329: iconst_1
       330: goto          334
       333: iconst_0
       334: ifeq          341
       337: iconst_1
       338: goto          342
       341: iconst_0
       342: ireturn
      StackMapTable: number_of_entries = 25
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache ]
          stack = [ class coursier/cache/Cache ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams ]
          stack = [ class coursier/params/ResolutionParams ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option, class scala/Option, class scala/Option, class coursier/util/Sync ]
          stack = [ class coursier/util/Sync ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/Resolve, class java/lang/Object, class coursier/Resolve ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     316     2 other   Lcoursier/Resolve;
            0     343     0  this   Lcoursier/Resolve;
            0     343     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #529                // String Resolve
         5: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
        18: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        31: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        44: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        47: iadd
        48: istore_1
        49: bipush        37
        51: iload_1
        52: imul
        53: aload_0
        54: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        57: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        60: iadd
        61: istore_1
        62: bipush        37
        64: iload_1
        65: imul
        66: aload_0
        67: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        70: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        73: iadd
        74: istore_1
        75: bipush        37
        77: iload_1
        78: imul
        79: aload_0
        80: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        83: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        86: iadd
        87: istore_1
        88: bipush        37
        90: iload_1
        91: imul
        92: aload_0
        93: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        96: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        99: iadd
       100: istore_1
       101: bipush        37
       103: iload_1
       104: imul
       105: aload_0
       106: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
       109: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       112: iadd
       113: istore_1
       114: bipush        37
       116: iload_1
       117: imul
       118: aload_0
       119: invokevirtual #436                // Method initialResolution:()Lscala/Option;
       122: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       125: iadd
       126: istore_1
       127: bipush        37
       129: iload_1
       130: imul
       131: aload_0
       132: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       135: invokestatic  #535                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       138: iadd
       139: istore_1
       140: bipush        37
       142: iload_1
       143: imul
       144: ireturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10     134     1  code   I
            0     145     0  this   Lcoursier/Resolve;

  private scala.Tuple10<coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.params.ResolutionParams, scala.Option<scala.Function1<F, F>>, scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>, scala.Option<coursier.core.Resolution>, coursier.util.Sync<F>> tuple();
    descriptor: ()Lscala/Tuple10;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=12, locals=1, args_size=1
         0: new           #542                // class scala/Tuple10
         3: dup
         4: aload_0
         5: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        24: aload_0
        25: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        28: aload_0
        29: invokevirtual #162                // Method throughOpt:()Lscala/Option;
        32: aload_0
        33: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
        36: aload_0
        37: invokevirtual #436                // Method initialResolution:()Lscala/Option;
        40: aload_0
        41: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        44: invokespecial #545                // Method scala/Tuple10."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        47: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lcoursier/Resolve;
    Signature: #540                         // ()Lscala/Tuple10<Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #529                // String Resolve
         3: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/Resolve;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        10
         2: ireturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/Resolve;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 9
                       0: 56
                       1: 63
                       2: 70
                       3: 77
                       4: 84
                       5: 91
                       6: 98
                       7: 105
                       8: 112
                       9: 119
                 default: 126
            }
        56: aload_0
        57: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
        60: goto          141
        63: aload_0
        64: invokevirtual #217                // Method dependencies:()Lscala/collection/immutable/Seq;
        67: goto          141
        70: aload_0
        71: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
        74: goto          141
        77: aload_0
        78: invokevirtual #310                // Method mirrorConfFiles:()Lscala/collection/immutable/Seq;
        81: goto          141
        84: aload_0
        85: invokevirtual #306                // Method mirrors:()Lscala/collection/immutable/Seq;
        88: goto          141
        91: aload_0
        92: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        95: goto          141
        98: aload_0
        99: invokevirtual #162                // Method throughOpt:()Lscala/Option;
       102: goto          141
       105: aload_0
       106: invokevirtual #193                // Method transformFetcherOpt:()Lscala/Option;
       109: goto          141
       112: aload_0
       113: invokevirtual #436                // Method initialResolution:()Lscala/Option;
       116: goto          141
       119: aload_0
       120: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       123: goto          141
       126: new           #552                // class java/lang/IndexOutOfBoundsException
       129: dup
       130: iload_2
       131: invokestatic  #558                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       134: invokevirtual #559                // Method java/lang/Object.toString:()Ljava/lang/String;
       137: invokespecial #560                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       140: athrow
       141: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 252 /* append */
          offset_delta = 56
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     142     0  this   Lcoursier/Resolve;
            0     142     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 9
                       0: 56
                       1: 62
                       2: 68
                       3: 74
                       4: 80
                       5: 86
                       6: 92
                       7: 98
                       8: 104
                       9: 110
                 default: 116
            }
        56: ldc_w         #563                // String cache
        59: goto          131
        62: ldc_w         #564                // String dependencies
        65: goto          131
        68: ldc_w         #565                // String repositories
        71: goto          131
        74: ldc_w         #566                // String mirrorConfFiles
        77: goto          131
        80: ldc_w         #567                // String mirrors
        83: goto          131
        86: ldc_w         #568                // String resolutionParams
        89: goto          131
        92: ldc_w         #569                // String throughOpt
        95: goto          131
        98: ldc_w         #570                // String transformFetcherOpt
       101: goto          131
       104: ldc_w         #571                // String initialResolution
       107: goto          131
       110: ldc_w         #572                // String sync
       113: goto          131
       116: new           #552                // class java/lang/IndexOutOfBoundsException
       119: dup
       120: iload_2
       121: invokestatic  #558                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       124: invokevirtual #559                // Method java/lang/Object.toString:()Ljava/lang/String;
       127: invokespecial #560                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       130: athrow
       131: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 252 /* append */
          offset_delta = 56
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     132     0  this   Lcoursier/Resolve;
            0     132     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final java.lang.Object $anonfun$through$2(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #579                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #582                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public static final scala.Function1 $anonfun$through$1();
    descriptor: ()Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: invokedynamic #586,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 39: 0

  public static final scala.Function1 $anonfun$transformFetcher$2(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #579                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #582                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
         7: checkcast     #189                // class scala/Function1
        10: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     x   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final

  public static final scala.Function1 $anonfun$transformFetcher$1();
    descriptor: ()Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: invokedynamic #591,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 41: 0

  public static final boolean $anonfun$finalDependencies$1(scala.Function2, coursier.core.Dependency);
    descriptor: (Lscala/Function2;Lcoursier/core/Dependency;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: new           #597                // class coursier/core/Organization
         4: dup
         5: aload_1
         6: invokevirtual #603                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         9: invokevirtual #608                // Method coursier/core/Module.organization:()Ljava/lang/String;
        12: invokespecial #609                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
        15: new           #611                // class coursier/core/ModuleName
        18: dup
        19: aload_1
        20: invokevirtual #603                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        23: invokevirtual #614                // Method coursier/core/Module.name:()Ljava/lang/String;
        26: invokespecial #615                // Method coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
        29: invokeinterface #620,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        34: invokestatic  #623                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        37: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0 filter$1   Lscala/Function2;
            0      38     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      filter$1                       final
      dep                            final

  public static final coursier.core.Dependency $anonfun$finalDependencies$2(coursier.Resolve, coursier.core.Dependency);
    descriptor: (Lcoursier/Resolve;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: getstatic     #204                // Field coursier/core/Exclusions$.MODULE$:Lcoursier/core/Exclusions$;
         4: aload_1
         5: invokevirtual #626                // Method coursier/core/Dependency.exclusions:()Lscala/collection/immutable/Set;
         8: aload_0
         9: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        12: invokevirtual #212                // Method coursier/params/ResolutionParams.exclusions:()Lscala/collection/immutable/Set;
        15: invokeinterface #631,  2          // InterfaceMethod scala/collection/immutable/Set.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
        20: checkcast     #628                // class scala/collection/immutable/Set
        23: invokevirtual #635                // Method coursier/core/Exclusions$.minimize:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Set;
        26: invokevirtual #639                // Method coursier/core/Dependency.withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
        29: areturn
      LineNumberTable:
        line 52: 0
        line 53: 1
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 $this   Lcoursier/Resolve;
            0      30     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      dep                            final

  public static final scala.collection.immutable.Seq $anonfun$finalRepositories$1(coursier.Resolve, scala.collection.immutable.Seq);
    descriptor: (Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #645                // Field coursier/params/Mirror$.MODULE$:Lcoursier/params/Mirror$;
         3: aload_0
         4: invokevirtual #286                // Method repositories:()Lscala/collection/immutable/Seq;
         7: aload_1
         8: invokevirtual #649                // Method coursier/params/Mirror$.replace:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        11: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lcoursier/Resolve;
            0      12     1   x$1   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$1                            final

  public static final scala.Function1 $anonfun$transformResolution$1(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   f$1   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$1                            final

  public static final scala.Function1 $anonfun$transformResolution$2(scala.Function1, scala.Function1);
    descriptor: (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #654,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   f$1   Lscala/Function1;
            0       8     1   x$2   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x$2                            final

  public static final scala.Function1 $anonfun$transformFetcher$3(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   f$2   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$2                            final

  public static final scala.Function1 $anonfun$transformFetcher$4(scala.Function1, scala.Function1);
    descriptor: (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #654,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   f$2   Lscala/Function1;
            0       8     1   x$3   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$2                            final
      x$3                            final

  public static final scala.collection.immutable.Seq $anonfun$allMirrors0$1(coursier.params.MirrorConfFile);
    descriptor: (Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #660                // Method coursier/params/MirrorConfFile.mirrors:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Lcoursier/params/MirrorConfFile;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final scala.collection.immutable.Seq $anonfun$allMirrors$1(coursier.Resolve);
    descriptor: (Lcoursier/Resolve;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #663                // Method allMirrors0:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/Resolve;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final scala.Function1 $anonfun$fetchVia$1(coursier.Resolve, scala.collection.immutable.Seq, scala.collection.immutable.Seq);
    descriptor: (Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #670                // Field coursier/package$.MODULE$:Lcoursier/package$;
         3: invokevirtual #674                // Method coursier/package$.ResolutionProcess:()Lcoursier/core/ResolutionProcess$;
         6: aload_2
         7: aload_1
         8: invokeinterface #677,  1          // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        13: checkcast     #189                // class scala/Function1
        16: aload_1
        17: invokeinterface #680,  1          // InterfaceMethod scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
        22: checkcast     #231                // class scala/collection/immutable/Seq
        25: aload_0
        26: invokespecial #395                // Method S:()Lcoursier/util/Sync;
        29: invokevirtual #685                // Method coursier/core/ResolutionProcess$.fetch:(Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
        32: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 $this   Lcoursier/Resolve;
            0      33     1 fetchs$1   Lscala/collection/immutable/Seq;
            0      33     2     r   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      fetchs$1                       final
      r                              final

  private final java.lang.Object run$1(coursier.core.Resolution, scala.Function1);
    descriptor: (Lcoursier/core/Resolution;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=6, locals=4, args_size=3
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_1
         4: aload_2
         5: aload_0
         6: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
         9: invokevirtual #689                // Method coursier/params/ResolutionParams.maxIterations:()I
        12: aload_0
        13: invokevirtual #412                // Method cache:()Lcoursier/cache/Cache;
        16: invokevirtual #692                // Method coursier/cache/Cache.loggerOpt:()Lscala/Option;
        19: aload_0
        20: invokespecial #395                // Method S:()Lcoursier/util/Sync;
        23: invokevirtual #696                // Method coursier/Resolve$.runProcess:(Lcoursier/core/Resolution;Lscala/Function1;ILscala/Option;Lcoursier/util/Sync;)Ljava/lang/Object;
        26: astore_3
        27: aload_0
        28: invokespecial #698                // Method through:()Lscala/Function1;
        31: aload_3
        32: invokeinterface #316,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        37: areturn
      LineNumberTable:
        line 110: 0
        line 111: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      10     3     t   Ljava/lang/Object;
            0      38     0  this   Lcoursier/Resolve;
            0      38     1   res   Lcoursier/core/Resolution;
            0      38     2 fetch$1   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      res                            final
      fetch$1                        final

  private final java.lang.Object validate0$1(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=10, args_size=2
         0: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         3: aload_1
         4: invokevirtual #92                 // Method coursier/Resolve$.validate:(Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
         7: invokevirtual #706                // Method coursier/util/ValidationNel.either:()Lscala/util/Either;
        10: astore_3
        11: aload_3
        12: instanceof    #708                // class scala/util/Left
        15: ifeq          79
        18: aload_3
        19: checkcast     #708                // class scala/util/Left
        22: astore        4
        24: aload         4
        26: invokevirtual #711                // Method scala/util/Left.value:()Ljava/lang/Object;
        29: checkcast     #713                // class scala/collection/immutable/$colon$colon
        32: astore        5
        34: getstatic     #718                // Field coursier/error/ResolutionError$.MODULE$:Lcoursier/error/ResolutionError$;
        37: aload         5
        39: invokevirtual #719                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
        42: checkcast     #23                 // class coursier/error/ResolutionError
        45: aload         5
        47: invokevirtual #722                // Method scala/collection/immutable/$colon$colon.tail:()Lscala/collection/immutable/List;
        50: invokevirtual #726                // Method coursier/error/ResolutionError$.from:(Lcoursier/error/ResolutionError;Lscala/collection/immutable/Seq;)Lcoursier/error/ResolutionError;
        53: astore        6
        55: aload_0
        56: invokespecial #395                // Method S:()Lcoursier/util/Sync;
        59: getstatic     #731                // Field scala/package$.MODULE$:Lscala/package$;
        62: invokevirtual #735                // Method scala/package$.Left:()Lscala/util/Left$;
        65: aload         6
        67: invokevirtual #740                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        70: invokeinterface #744,  2          // InterfaceMethod coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
        75: astore_2
        76: goto          162
        79: goto          82
        82: aload_3
        83: instanceof    #748                // class scala/util/Right
        86: ifeq          150
        89: aload_3
        90: checkcast     #748                // class scala/util/Right
        93: astore        7
        95: aload         7
        97: invokevirtual #749                // Method scala/util/Right.value:()Ljava/lang/Object;
       100: checkcast     #751                // class scala/runtime/BoxedUnit
       103: astore        8
       105: getstatic     #755                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       108: aload         8
       110: astore        9
       112: dup
       113: ifnonnull     125
       116: pop
       117: aload         9
       119: ifnull        133
       122: goto          147
       125: aload         9
       127: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       130: ifeq          147
       133: aload_0
       134: invokespecial #395                // Method S:()Lcoursier/util/Sync;
       137: aload_1
       138: invokeinterface #760,  2          // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
       143: astore_2
       144: goto          162
       147: goto          153
       150: goto          153
       153: new           #762                // class scala/MatchError
       156: dup
       157: aload_3
       158: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       161: athrow
       162: aload_2
       163: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 79
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class coursier/Resolve, class coursier/core/Resolution, top, class scala/util/Either, top, top, top, class scala/util/Right, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit ]
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 7 /* same */
        frame_type = 13 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/Resolve, class coursier/core/Resolution, top, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class java/lang/Object, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 115: 0
        line 116: 11
        line 117: 34
        line 118: 55
        line 116: 79
        line 119: 82
        line 120: 133
        line 119: 147
        line 115: 153
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55      20     6   err   Lcoursier/error/ResolutionError;
           34      45     5 errors   Lscala/collection/immutable/$colon$colon;
            0     164     0  this   Lcoursier/Resolve;
            0     164     1   res   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      res                            final

  public static final scala.Tuple2 $anonfun$ioWithConflicts0$1(coursier.error.conflict.UnsatisfiedRule, scala.Tuple2);
    descriptor: (Lcoursier/error/conflict/UnsatisfiedRule;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        47
         6: aload_3
         7: invokevirtual #776                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #757                // class coursier/core/Resolution
        13: astore        4
        15: aload_3
        16: invokevirtual #779                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #781                // class scala/collection/immutable/List
        22: astore        5
        24: new           #773                // class scala/Tuple2
        27: dup
        28: aload         4
        30: aload_0
        31: astore        6
        33: aload         5
        35: aload         6
        37: invokevirtual #785                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
        40: invokespecial #788                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        43: astore_2
        44: goto          59
        47: goto          50
        50: new           #762                // class scala/MatchError
        53: dup
        54: aload_3
        55: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        58: athrow
        59: aload_2
        60: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 47
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/error/conflict/UnsatisfiedRule, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class coursier/core/Resolution, class scala/collection/immutable/List, class coursier/error/conflict/UnsatisfiedRule ]
          stack = []
      LineNumberTable:
        line 132: 0
        line 133: 2
        line 134: 24
        line 133: 47
        line 132: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      32     4  res0   Lcoursier/core/Resolution;
           24      23     5 conflicts   Lscala/collection/immutable/List;
            0      61     0   c$1   Lcoursier/error/conflict/UnsatisfiedRule;
            0      61     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      c$1                            final
      x0$1                           final

  public static final java.lang.Object $anonfun$ioWithConflicts0$2(coursier.Resolve, coursier.core.Resolution);
    descriptor: (Lcoursier/Resolve;Lcoursier/core/Resolution;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #799                // Method validate0$1:(Lcoursier/core/Resolution;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lcoursier/Resolve;
            0       6     1   res   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      res                            final

  public static final java.lang.Object $anonfun$ioWithConflicts0$3(coursier.Resolve, scala.collection.immutable.Seq, scala.Function1, coursier.core.Resolution);
    descriptor: (Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: aload_1
         3: aload_2
         4: invokespecial #806                // Method recurseOnRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/Function1;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/Resolve;
            0       8     1   t$1   Lscala/collection/immutable/Seq;
            0       8     2 fetch$1   Lscala/Function1;
            0       8     3  res0   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      t$1                            final
      fetch$1                        final
      res0                           final

  private final java.lang.Object recurseOnRules$1(coursier.core.Resolution, scala.collection.immutable.Seq, scala.Function1);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=30, args_size=4
         0: aload_2
         1: astore        7
         3: aload         7
         5: ifnull        94
         8: getstatic     #812                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
        11: aload         7
        13: invokevirtual #816                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        16: astore        8
        18: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        21: aload         8
        23: invokevirtual #823                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        26: ifne          91
        29: new           #38                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        32: dup
        33: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        36: aload         8
        38: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        41: invokespecial #829                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        44: ifnull        91
        47: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        50: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        53: aload         8
        55: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        58: iconst_0
        59: invokevirtual #833                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        62: iconst_0
        63: if_icmpne     91
        66: aload_0
        67: invokespecial #395                // Method S:()Lcoursier/util/Sync;
        70: new           #773                // class scala/Tuple2
        73: dup
        74: aload_1
        75: getstatic     #296                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        78: invokespecial #788                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        81: invokeinterface #760,  2          // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
        86: astore        5
        88: goto          629
        91: goto          97
        94: goto          97
        97: aload         7
        99: ifnull        616
       102: getstatic     #812                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
       105: aload         7
       107: invokevirtual #816                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       110: astore        9
       112: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       115: aload         9
       117: invokevirtual #823                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
       120: ifne          613
       123: new           #38                 // class scala/collection/SeqFactory$UnapplySeqWrapper
       126: dup
       127: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       130: aload         9
       132: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       135: invokespecial #829                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
       138: ifnull        613
       141: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       144: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       147: aload         9
       149: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       152: iconst_1
       153: invokevirtual #833                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
       156: iconst_0
       157: if_icmplt     613
       160: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       163: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       166: aload         9
       168: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       171: iconst_0
       172: invokevirtual #839                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
       175: checkcast     #773                // class scala/Tuple2
       178: astore        10
       180: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       183: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       186: aload         9
       188: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       191: iconst_1
       192: invokevirtual #843                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.drop$extension:(Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
       195: astore        11
       197: aload         10
       199: ifnull        610
       202: aload         10
       204: invokevirtual #776                // Method scala/Tuple2._1:()Ljava/lang/Object;
       207: checkcast     #845                // class coursier/params/rule/Rule
       210: astore        12
       212: aload         10
       214: invokevirtual #779                // Method scala/Tuple2._2:()Ljava/lang/Object;
       217: checkcast     #847                // class coursier/params/rule/RuleResolution
       220: astore        13
       222: iconst_0
       223: istore        14
       225: aconst_null
       226: astore        15
       228: aload         12
       230: aload_1
       231: aload         13
       233: invokevirtual #851                // Method coursier/params/rule/Rule.enforce:(Lcoursier/core/Resolution;Lcoursier/params/rule/RuleResolution;)Lscala/util/Either;
       236: astore        16
       238: aload         16
       240: instanceof    #708                // class scala/util/Left
       243: ifeq          288
       246: aload         16
       248: checkcast     #708                // class scala/util/Left
       251: astore        17
       253: aload         17
       255: invokevirtual #711                // Method scala/util/Left.value:()Ljava/lang/Object;
       258: checkcast     #21                 // class coursier/error/ResolutionError$UnsatisfiableRule
       261: astore        18
       263: aload_0
       264: invokespecial #395                // Method S:()Lcoursier/util/Sync;
       267: getstatic     #731                // Field scala/package$.MODULE$:Lscala/package$;
       270: invokevirtual #735                // Method scala/package$.Left:()Lscala/util/Left$;
       273: aload         18
       275: invokevirtual #740                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       278: invokeinterface #744,  2          // InterfaceMethod coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
       283: astore        6
       285: goto          603
       288: goto          291
       291: aload         16
       293: instanceof    #748                // class scala/util/Right
       296: ifeq          382
       299: iconst_1
       300: istore        14
       302: aload         16
       304: checkcast     #748                // class scala/util/Right
       307: astore        15
       309: aload         15
       311: invokevirtual #749                // Method scala/util/Right.value:()Ljava/lang/Object;
       314: checkcast     #746                // class scala/util/Either
       317: astore        19
       319: aload         19
       321: instanceof    #708                // class scala/util/Left
       324: ifeq          379
       327: aload         19
       329: checkcast     #708                // class scala/util/Left
       332: astore        20
       334: aload         20
       336: invokevirtual #711                // Method scala/util/Left.value:()Ljava/lang/Object;
       339: checkcast     #790                // class coursier/error/conflict/UnsatisfiedRule
       342: astore        21
       344: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
       347: aload_0
       348: aload_1
       349: aload         11
       351: aload_3
       352: invokespecial #806                // Method recurseOnRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/Function1;)Ljava/lang/Object;
       355: aload_0
       356: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       359: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       362: aload         21
       364: invokedynamic #859,  0            // InvokeDynamic #17:apply:(Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/Function1;
       369: invokeinterface #272,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
       374: astore        6
       376: goto          603
       379: goto          385
       382: goto          385
       385: iload         14
       387: ifeq          450
       390: aload         15
       392: invokevirtual #749                // Method scala/util/Right.value:()Ljava/lang/Object;
       395: checkcast     #746                // class scala/util/Either
       398: astore        22
       400: aload         22
       402: instanceof    #748                // class scala/util/Right
       405: ifeq          447
       408: aload         22
       410: checkcast     #748                // class scala/util/Right
       413: astore        23
       415: aload         23
       417: invokevirtual #749                // Method scala/util/Right.value:()Ljava/lang/Object;
       420: checkcast     #183                // class scala/Option
       423: astore        24
       425: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
       428: aload         24
       430: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       433: ifeq          444
       436: aload_1
       437: aload         11
       439: astore_2
       440: astore_1
       441: goto          0
       444: goto          453
       447: goto          453
       450: goto          453
       453: iload         14
       455: ifeq          590
       458: aload         15
       460: invokevirtual #749                // Method scala/util/Right.value:()Ljava/lang/Object;
       463: checkcast     #746                // class scala/util/Either
       466: astore        25
       468: aload         25
       470: instanceof    #748                // class scala/util/Right
       473: ifeq          587
       476: aload         25
       478: checkcast     #748                // class scala/util/Right
       481: astore        26
       483: aload         26
       485: invokevirtual #749                // Method scala/util/Right.value:()Ljava/lang/Object;
       488: checkcast     #183                // class scala/Option
       491: astore        27
       493: aload         27
       495: instanceof    #325                // class scala/Some
       498: ifeq          584
       501: aload         27
       503: checkcast     #325                // class scala/Some
       506: astore        28
       508: aload         28
       510: invokevirtual #860                // Method scala/Some.value:()Ljava/lang/Object;
       513: checkcast     #757                // class coursier/core/Resolution
       516: astore        29
       518: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
       521: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
       524: aload_0
       525: aload         29
       527: getstatic     #865                // Field coursier/core/DependencySet$.MODULE$:Lcoursier/core/DependencySet$;
       530: invokevirtual #869                // Method coursier/core/DependencySet$.empty:()Lcoursier/core/DependencySet;
       533: invokevirtual #873                // Method coursier/core/Resolution.withDependencySet:(Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
       536: aload_3
       537: invokespecial #443                // Method run$1:(Lcoursier/core/Resolution;Lscala/Function1;)Ljava/lang/Object;
       540: aload_0
       541: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       544: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       547: aload_0
       548: invokedynamic #877,  0            // InvokeDynamic #18:apply:(Lcoursier/Resolve;)Lscala/Function1;
       553: invokeinterface #454,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       558: aload_0
       559: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
       562: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       565: aload_0
       566: aload         11
       568: aload_3
       569: invokedynamic #883,  0            // InvokeDynamic #19:apply:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;)Lscala/Function1;
       574: invokeinterface #454,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       579: astore        6
       581: goto          603
       584: goto          593
       587: goto          593
       590: goto          593
       593: new           #762                // class scala/MatchError
       596: dup
       597: aload         16
       599: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       602: athrow
       603: aload         6
       605: astore        5
       607: goto          629
       610: goto          619
       613: goto          619
       616: goto          619
       619: new           #762                // class scala/MatchError
       622: dup
       623: aload         7
       625: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       628: athrow
       629: aload         5
       631: areturn
      StackMapTable: number_of_entries = 23
        frame_type = 0 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 90
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, class scala/collection/SeqOps ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 190
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, null, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 87
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, class scala/util/Right, class scala/util/Either, top, top, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, null, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, class scala/util/Right, class scala/util/Either, top, top, top, top, top, class scala/util/Either, class scala/util/Right, class scala/Option ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 130
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, class scala/util/Right, class scala/util/Either, top, top, top, top, top, top, top, top, class scala/util/Either, class scala/util/Right, class scala/Option ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, class java/lang/Object, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class coursier/params/rule/RuleResolution, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, class scala/Function1, top, class java/lang/Object, top, class scala/collection/immutable/Seq ]
          stack = []
      LineNumberTable:
        line 124: 0
        line 125: 3
        line 126: 66
        line 125: 91
        line 127: 97
        line 128: 222
        line 129: 238
        line 130: 263
        line 129: 288
        line 131: 291
        line 132: 344
        line 131: 379
        line 136: 385
        line 137: 436
        line 136: 444
        line 138: 453
        line 139: 518
        line 138: 584
        line 128: 593
        line 127: 610
        line 124: 619
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          263      25    18     c   Lcoursier/error/ResolutionError$UnsatisfiableRule;
          344      35    21     c   Lcoursier/error/conflict/UnsatisfiedRule;
          518      66    29 newRes   Lcoursier/core/Resolution;
          212     398    12  rule   Lcoursier/params/rule/Rule;
          222     388    13 ruleRes   Lcoursier/params/rule/RuleResolution;
          197     416    11     t   Lscala/collection/immutable/Seq;
            0     632     0  this   Lcoursier/Resolve;
            0     632     1   res   Lcoursier/core/Resolution;
            0     632     2 rules   Lscala/collection/immutable/Seq;
            0     632     3 fetch$1   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      res                            final
      rules                          final
      fetch$1                        final

  private final java.lang.Object validateAllRules$1(coursier.core.Resolution, scala.collection.immutable.Seq);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=15, args_size=3
         0: aload_2
         1: astore        6
         3: aload         6
         5: ifnull        84
         8: getstatic     #812                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
        11: aload         6
        13: invokevirtual #816                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        16: astore        7
        18: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        21: aload         7
        23: invokevirtual #823                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        26: ifne          81
        29: new           #38                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        32: dup
        33: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        36: aload         7
        38: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        41: invokespecial #829                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        44: ifnull        81
        47: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        50: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        53: aload         7
        55: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        58: iconst_0
        59: invokevirtual #833                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        62: iconst_0
        63: if_icmpne     81
        66: aload_0
        67: invokespecial #395                // Method S:()Lcoursier/util/Sync;
        70: aload_1
        71: invokeinterface #760,  2          // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
        76: astore        4
        78: goto          321
        81: goto          87
        84: goto          87
        87: aload         6
        89: ifnull        308
        92: getstatic     #812                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
        95: aload         6
        97: invokevirtual #816                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       100: astore        8
       102: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       105: aload         8
       107: invokevirtual #823                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
       110: ifne          305
       113: new           #38                 // class scala/collection/SeqFactory$UnapplySeqWrapper
       116: dup
       117: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       120: aload         8
       122: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       125: invokespecial #829                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
       128: ifnull        305
       131: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       134: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       137: aload         8
       139: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       142: iconst_1
       143: invokevirtual #833                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
       146: iconst_0
       147: if_icmplt     305
       150: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       153: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       156: aload         8
       158: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       161: iconst_0
       162: invokevirtual #839                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
       165: checkcast     #773                // class scala/Tuple2
       168: astore        9
       170: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       173: getstatic     #819                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       176: aload         8
       178: invokevirtual #826                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       181: iconst_1
       182: invokevirtual #843                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.drop$extension:(Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
       185: astore        10
       187: aload         9
       189: ifnull        302
       192: aload         9
       194: invokevirtual #776                // Method scala/Tuple2._1:()Ljava/lang/Object;
       197: checkcast     #845                // class coursier/params/rule/Rule
       200: astore        11
       202: aload         11
       204: aload_1
       205: invokevirtual #896                // Method coursier/params/rule/Rule.check:(Lcoursier/core/Resolution;)Lscala/Option;
       208: astore        12
       210: aload         12
       212: instanceof    #325                // class scala/Some
       215: ifeq          260
       218: aload         12
       220: checkcast     #325                // class scala/Some
       223: astore        13
       225: aload         13
       227: invokevirtual #860                // Method scala/Some.value:()Ljava/lang/Object;
       230: checkcast     #790                // class coursier/error/conflict/UnsatisfiedRule
       233: astore        14
       235: aload_0
       236: invokespecial #395                // Method S:()Lcoursier/util/Sync;
       239: getstatic     #731                // Field scala/package$.MODULE$:Lscala/package$;
       242: invokevirtual #735                // Method scala/package$.Left:()Lscala/util/Left$;
       245: aload         14
       247: invokevirtual #740                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       250: invokeinterface #744,  2          // InterfaceMethod coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
       255: astore        5
       257: goto          295
       260: goto          263
       263: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
       266: aload         12
       268: invokevirtual #524                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       271: ifeq          282
       274: aload_1
       275: aload         10
       277: astore_2
       278: astore_1
       279: goto          0
       282: goto          285
       285: new           #762                // class scala/MatchError
       288: dup
       289: aload         12
       291: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       294: athrow
       295: aload         5
       297: astore        4
       299: goto          321
       302: goto          311
       305: goto          311
       308: goto          311
       311: new           #762                // class scala/MatchError
       314: dup
       315: aload         6
       317: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       320: athrow
       321: aload         4
       323: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 0 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, top, top, top, class scala/collection/immutable/Seq, class scala/collection/SeqOps ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 172
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 18 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, top, top, class java/lang/Object, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/params/rule/Rule, class scala/Option, class scala/Some, class coursier/error/conflict/UnsatisfiedRule ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, top, top, top, class scala/collection/immutable/Seq, top, class scala/collection/SeqOps, class scala/Tuple2, class scala/collection/immutable/Seq ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Resolve, class coursier/core/Resolution, class scala/collection/immutable/Seq, top, class java/lang/Object, top, class scala/collection/immutable/Seq ]
          stack = []
      LineNumberTable:
        line 147: 0
        line 148: 3
        line 149: 66
        line 148: 81
        line 150: 87
        line 151: 202
        line 152: 210
        line 153: 235
        line 152: 260
        line 154: 263
        line 155: 274
        line 154: 282
        line 151: 285
        line 150: 302
        line 147: 311
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          235      25    14     c   Lcoursier/error/conflict/UnsatisfiedRule;
          202     100    11  rule   Lcoursier/params/rule/Rule;
          187     118    10     t   Lscala/collection/immutable/Seq;
            0     324     0  this   Lcoursier/Resolve;
            0     324     1   res   Lcoursier/core/Resolution;
            0     324     2 rules   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      res                            final
      rules                          final

  public static final scala.Tuple2 $anonfun$ioWithConflicts0$6(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=9, args_size=1
         0: aload_0
         1: astore_3
         2: aload_3
         3: ifnull        40
         6: aload_3
         7: invokevirtual #776                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #757                // class coursier/core/Resolution
        13: astore        4
        15: aload_3
        16: invokevirtual #779                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #781                // class scala/collection/immutable/List
        22: astore        5
        24: new           #899                // class scala/Tuple3
        27: dup
        28: aload_3
        29: aload         4
        31: aload         5
        33: invokespecial #902                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        36: astore_1
        37: goto          52
        40: goto          43
        43: new           #762                // class scala/MatchError
        46: dup
        47: aload_3
        48: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        51: athrow
        52: aload_1
        53: astore_2
        54: aload_2
        55: invokevirtual #903                // Method scala/Tuple3._1:()Ljava/lang/Object;
        58: checkcast     #773                // class scala/Tuple2
        61: astore        6
        63: aload_2
        64: invokevirtual #904                // Method scala/Tuple3._2:()Ljava/lang/Object;
        67: checkcast     #757                // class coursier/core/Resolution
        70: astore        7
        72: aload_2
        73: invokevirtual #907                // Method scala/Tuple3._3:()Ljava/lang/Object;
        76: checkcast     #781                // class scala/collection/immutable/List
        79: astore        8
        81: new           #773                // class scala/Tuple2
        84: dup
        85: aload_0
        86: aload         6
        88: invokespecial #788                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        91: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 40
          locals = [ top, top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class scala/Tuple3, top, class scala/Tuple2, class coursier/core/Resolution, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 163: 0
        line 162: 81
        line 163: 86
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      25     4  res2   Lcoursier/core/Resolution;
           24      16     5 conflicts   Lscala/collection/immutable/List;
           63      28     6   x$5   Lscala/Tuple2;
            0      92     0     t   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      t                              final

  public static final scala.Tuple2 $anonfun$ioWithConflicts0$8(coursier.core.Resolution, scala.collection.immutable.List, coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/List;Lcoursier/core/Resolution;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=3
         0: aload_2
         1: astore        4
         3: new           #773                // class scala/Tuple2
         6: dup
         7: aload_0
         8: aload_1
         9: invokespecial #788                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        12: astore_3
        13: goto          16
        16: aload_3
        17: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ class scala/Tuple2, class coursier/core/Resolution ]
      LineNumberTable:
        line 164: 0
        line 165: 3
        line 164: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 res2$1   Lcoursier/core/Resolution;
            0      18     1 conflicts$1   Lscala/collection/immutable/List;
            0      18     2   x$7   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      res2$1                         final
      conflicts$1                    final
      x$7                            final

  public static final java.lang.Object $anonfun$ioWithConflicts0$7(coursier.Resolve, scala.Tuple2);
    descriptor: (Lcoursier/Resolve;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        84
         6: aload_3
         7: invokevirtual #779                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #773                // class scala/Tuple2
        13: astore        4
        15: aload         4
        17: ifnull        81
        20: aload         4
        22: invokevirtual #776                // Method scala/Tuple2._1:()Ljava/lang/Object;
        25: checkcast     #757                // class coursier/core/Resolution
        28: astore        5
        30: aload         4
        32: invokevirtual #779                // Method scala/Tuple2._2:()Ljava/lang/Object;
        35: checkcast     #781                // class scala/collection/immutable/List
        38: astore        6
        40: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        43: aload_0
        44: aload         5
        46: aload_0
        47: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        50: invokevirtual #920                // Method coursier/params/ResolutionParams.actualRules:()Lscala/collection/immutable/Seq;
        53: invokespecial #922                // Method validateAllRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        56: aload_0
        57: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        60: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        63: aload         5
        65: aload         6
        67: invokedynamic #930,  0            // InvokeDynamic #20:apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;)Lscala/Function1;
        72: invokeinterface #272,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        77: astore_2
        78: goto          96
        81: goto          87
        84: goto          87
        87: new           #762                // class scala/MatchError
        90: dup
        91: aload_3
        92: invokespecial #763                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        95: athrow
        96: aload_2
        97: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 81
          locals = [ top, class scala/Tuple2, class scala/Tuple2 ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/Resolve, class scala/Tuple2, class java/lang/Object, class scala/Tuple2, class scala/Tuple2, class coursier/core/Resolution, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 162: 0
        line 163: 6
        line 164: 40
        line 163: 81
        line 162: 84
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30      51     5  res2   Lcoursier/core/Resolution;
           40      41     6 conflicts   Lscala/collection/immutable/List;
            0      98     0 $this   Lcoursier/Resolve;
            0      98     1   x$8   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$8                            final

  public static final java.lang.Object $anonfun$ioWithConflicts0$5(coursier.Resolve, scala.Function1, coursier.core.Resolution);
    descriptor: (Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=3, args_size=3
         0: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         6: aload_0
         7: aload_2
         8: aload_0
         9: invokevirtual #206                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        12: invokevirtual #920                // Method coursier/params/ResolutionParams.actualRules:()Lscala/collection/immutable/Seq;
        15: aload_1
        16: invokespecial #806                // Method recurseOnRules$1:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/Function1;)Ljava/lang/Object;
        19: aload_0
        20: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        23: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        26: invokedynamic #936,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
        31: invokeinterface #272,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        36: aload_0
        37: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        40: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        43: aload_0
        44: invokedynamic #942,  0            // InvokeDynamic #22:apply:(Lcoursier/Resolve;)Lscala/Function1;
        49: invokeinterface #454,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        54: areturn
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0 $this   Lcoursier/Resolve;
            0      55     1 fetch$1   Lscala/Function1;
            0      55     2  res1   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      fetch$1                        final
      res1                           final

  public static final java.lang.Object $anonfun$ioWithConflicts0$4(coursier.Resolve, scala.Function1, coursier.core.Resolution);
    descriptor: (Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #256                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: aload_2
         5: invokespecial #799                // Method validate0$1:(Lcoursier/core/Resolution;)Ljava/lang/Object;
         8: aload_0
         9: invokevirtual #157                // Method sync:()Lcoursier/util/Sync;
        12: invokevirtual #263                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        15: aload_0
        16: aload_1
        17: invokedynamic #946,  0            // InvokeDynamic #23:apply:(Lcoursier/Resolve;Lscala/Function1;)Lscala/Function1;
        22: invokeinterface #454,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        27: areturn
      LineNumberTable:
        line 161: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 $this   Lcoursier/Resolve;
            0      28     1 fetch$1   Lscala/Function1;
            0      28     2  res0   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      fetch$1                        final
      res0                           final

  public static final java.lang.Object $anonfun$ioWithConflicts$1(coursier.Resolve, scala.Function1);
    descriptor: (Lcoursier/Resolve;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokespecial #948                // Method transformFetcher:()Lscala/Function1;
         4: aload_1
         5: invokeinterface #316,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #189                // class scala/Function1
        13: astore_2
        14: aload_0
        15: aload_2
        16: invokespecial #950                // Method ioWithConflicts0:(Lscala/Function1;)Ljava/lang/Object;
        19: areturn
      LineNumberTable:
        line 170: 0
        line 171: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14       5     2 fetchVia0   Lscala/Function1;
            0      20     0 $this   Lcoursier/Resolve;
            0      20     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public static final coursier.core.Resolution $anonfun$io$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lcoursier/core/Resolution;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #776                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #757                // class coursier/core/Resolution
         7: areturn
      LineNumberTable:
        line 175: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$9   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$9                            final

  public coursier.Resolve(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.params.ResolutionParams, scala.Option<scala.Function1<F, F>>, scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>, scala.Option<coursier.core.Resolution>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=11, args_size=11
         0: aload_0
         1: aload_1
         2: putfield      #127                // Field cache:Lcoursier/cache/Cache;
         5: aload_0
         6: aload_2
         7: putfield      #130                // Field dependencies:Lscala/collection/immutable/Seq;
        10: aload_0
        11: aload_3
        12: putfield      #132                // Field repositories:Lscala/collection/immutable/Seq;
        15: aload_0
        16: aload         4
        18: putfield      #134                // Field mirrorConfFiles:Lscala/collection/immutable/Seq;
        21: aload_0
        22: aload         5
        24: putfield      #137                // Field mirrors:Lscala/collection/immutable/Seq;
        27: aload_0
        28: aload         6
        30: putfield      #140                // Field resolutionParams:Lcoursier/params/ResolutionParams;
        33: aload_0
        34: aload         7
        36: putfield      #144                // Field throughOpt:Lscala/Option;
        39: aload_0
        40: aload         8
        42: putfield      #147                // Field transformFetcherOpt:Lscala/Option;
        45: aload_0
        46: aload         9
        48: putfield      #150                // Field initialResolution:Lscala/Option;
        51: aload_0
        52: aload         10
        54: putfield      #154                // Field sync:Lcoursier/util/Sync;
        57: aload_0
        58: invokespecial #956                // Method java/lang/Object."<init>":()V
        61: aload_0
        62: invokestatic  #960                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        65: return
      LineNumberTable:
        line 21: 0
        line 179: 57
        line 21: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lcoursier/Resolve;
            0      66     1 cache   Lcoursier/cache/Cache;
            0      66     2 dependencies   Lscala/collection/immutable/Seq;
            0      66     3 repositories   Lscala/collection/immutable/Seq;
            0      66     4 mirrorConfFiles   Lscala/collection/immutable/Seq;
            0      66     5 mirrors   Lscala/collection/immutable/Seq;
            0      66     6 resolutionParams   Lcoursier/params/ResolutionParams;
            0      66     7 throughOpt   Lscala/Option;
            0      66     8 transformFetcherOpt   Lscala/Option;
            0      66     9 initialResolution   Lscala/Option;
            0      66    10  sync   Lcoursier/util/Sync;
    Signature: #953                         // (Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      cache                          final
      dependencies                   final
      repositories                   final
      mirrorConfFiles                final
      mirrors                        final
      resolutionParams               final
      throughOpt                     final
      transformFetcherOpt            final
      initialResolution              final
      sync                           final

  public coursier.Resolve(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.params.ResolutionParams, scala.Option<scala.Function1<F, F>>, scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=10, args_size=10
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: aload         6
        10: aload         7
        12: aload         8
        14: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
        17: aload         9
        19: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        22: return
      LineNumberTable:
        line 21: 0
        line 31: 14
        line 21: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/Resolve;
            0      23     1 cache   Lcoursier/cache/Cache;
            0      23     2 dependencies   Lscala/collection/immutable/Seq;
            0      23     3 repositories   Lscala/collection/immutable/Seq;
            0      23     4 mirrorConfFiles   Lscala/collection/immutable/Seq;
            0      23     5 mirrors   Lscala/collection/immutable/Seq;
            0      23     6 resolutionParams   Lcoursier/params/ResolutionParams;
            0      23     7 throughOpt   Lscala/Option;
            0      23     8 transformFetcherOpt   Lscala/Option;
            0      23     9  sync   Lcoursier/util/Sync;
    Signature: #962                         // (Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      cache                          final
      dependencies                   final
      repositories                   final
      mirrorConfFiles                final
      mirrors                        final
      resolutionParams               final
      throughOpt                     final
      transformFetcherOpt            final
      sync                           final

  public coursier.Resolve(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #296                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         5: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         8: invokevirtual #105                // Method coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
        11: getstatic     #76                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
        14: invokevirtual #109                // Method coursier/Resolve$.defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
        17: getstatic     #296                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        20: getstatic     #969                // Field coursier/params/ResolutionParams$.MODULE$:Lcoursier/params/ResolutionParams$;
        23: invokevirtual #971                // Method coursier/params/ResolutionParams$.apply:()Lcoursier/params/ResolutionParams;
        26: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
        29: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
        32: getstatic     #359                // Field scala/None$.MODULE$:Lscala/None$;
        35: aload_2
        36: invokespecial #482                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        39: return
      LineNumberTable:
        line 21: 0
        line 23: 2
        line 24: 5
        line 25: 11
        line 26: 17
        line 27: 20
        line 28: 26
        line 29: 29
        line 31: 32
        line 21: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lcoursier/Resolve;
            0      40     1 cache   Lcoursier/cache/Cache;
            0      40     2  sync   Lcoursier/util/Sync;
    Signature: #964                         // (Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      cache                          final
      sync                           final

  public static final java.lang.Object $anonfun$finalDependencies$1$adapted(scala.Function2, coursier.core.Dependency);
    descriptor: (Lscala/Function2;Lcoursier/core/Dependency;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #973                // Method $anonfun$finalDependencies$1:(Lscala/Function2;Lcoursier/core/Dependency;)Z
         5: invokestatic  #977                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 filter$1   Lscala/Function2;
            0       9     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      filter$1                       final
      dep                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #989,  0            // InvokeDynamic #24:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #15 of #2;     // ResolveTaskOps=class coursier/Resolve$ResolveTaskOps of class coursier/Resolve
  public static #19= #18 of #2;           // =class coursier/Resolve$ResolveTaskOps$ of class coursier/Resolve
  public static abstract #24= #21 of #23; // UnsatisfiableRule=class coursier/error/ResolutionError$UnsatisfiableRule of class coursier/error/ResolutionError
  public static #29= #26 of #28;          // AllOps=class coursier/util/Monad$AllOps of class coursier/util/Monad
  public static #19= #31 of #28;          // =class coursier/util/Monad$ops$ of class coursier/util/Monad
  public static final #36= #33 of #35;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #41= #38 of #40;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #19= #43 of #40;          // =class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
Signature: #3                           // <F:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
SourceFile: "Resolve.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0015Mb\u0001B5k\u00055D!\"!\u0003\u0001\u0005\u000b\u0007I\u0011AA\u0006\u0011)\t\u0019\u0004\u0001B\u0001B\u0003%\u0011Q\u0002\u0005\u000b\u0003k\u0001!Q1A\u0005\u0002\u0005]\u0002BCA\'\u0001\t\u0005\t\u0015!\u0003\u0002:!Q\u0011q\n\u0001\u0003\u0006\u0004%\t!!\u0015\t\u0015\u0005m\u0003A!A!\u0002\u0013\t\u0019\u0006\u0003\u0006\u0002^\u0001\u0011)\u0019!C\u0001\u0003?B!\"a\u001c\u0001\u0005\u0003\u0005\u000b\u0011BA1\u0011)\t\t\b\u0001BC\u0002\u0013\u0005\u00111\u000f\u0005\u000b\u0003{\u0002!\u0011!Q\u0001\n\u0005U\u0004BCA@\u0001\t\u0015\r\u0011\"\u0001\u0002\u0002\"Q\u0011\u0011\u0012\u0001\u0003\u0002\u0003\u0006I!a!\t\u0015\u0005-\u0005A!b\u0001\n\u0003\ti\t\u0003\u0006\u0002$\u0002\u0011\t\u0011)A\u0005\u0003\u001fC!\"!*\u0001\u0005\u000b\u0007I\u0011AAT\u0011)\ty\f\u0001B\u0001B\u0003%\u0011\u0011\u0016\u0005\u000b\u0003\u0003\u0004!Q1A\u0005\u0002\u0005\r\u0007BCAd\u0001\t\u0005\t\u0015!\u0003\u0002F\"Q\u0011\u0011\u001a\u0001\u0003\u0006\u0004%\u0019!a3\t\u0015\u0005e\u0007A!A!\u0002\u0013\ti\rC\u0004\u0002\\\u0002!\t!!8\t\u000f\u0005m\u0007\u0001\"\u0001\u0002x\"9\u00111\u001c\u0001\u0005\u0002\t5\u0001b\u0002B\u000b\u0001\u0011%\u00111\u001a\u0005\b\u0005/\u0001A\u0011\u0002B\r\u0011\u001d\u0011Y\u0002\u0001C\u0005\u0005;AqAa\b\u0001\t\u0003\t9\u0004C\u0004\u0003\"\u0001!\tAa\t\t\u000f\t\u001d\u0002\u0001\"\u0001\u0003*!9!1\u0007\u0001\u0005\u0002\tU\u0002b\u0002B\u001e\u0001\u0011\u0005!Q\b\u0005\b\u0005\u007f\u0001A\u0011\u0001B!\u0011\u001d\u00119\u0005\u0001C\u0001\u0005\u0013BqAa\u0014\u0001\t\u0003\u0011\t\u0006C\u0004\u0003Z\u0001!\tAa\u0017\t\u000f\t}\u0003\u0001\"\u0001\u0003b!9!1\r\u0001\u0005\u0002\t\u0015\u0004b\u0002B\u000e\u0001\u0011\u0005!1\u000e\u0005\b\u0005_\u0002A\u0011\u0001B1\u0011\u001d\u0011\t\b\u0001C\u0001\u0005gBqAa\u001e\u0001\t\u0013\u0011I\bC\u0004\u0003\n\u0002!\tAa#\t\u000f\t=\u0005\u0001\"\u0003\u0003\u0012\"9!Q\u0013\u0001\u0005\n\t]\u0005b\u0002B\\\u0001\u0011\u0005!\u0011\u0018\u0005\b\u0005w\u0003A\u0011\u0001B_\u0011\u001d\u0011y\f\u0001C\u0001\u0005\u0003DqA!2\u0001\t\u0003\u00119\rC\u0004\u0003L\u0002!\tA!4\t\u000f\tE\u0007\u0001\"\u0001\u0003T\"9!q\u001b\u0001\u0005\u0002\te\u0007b\u0002Bo\u0001\u0011\u0005!q\u001c\u0005\b\u0005G\u0004A\u0011\u0001Bs\u0011\u001d\u0011I\u000f\u0001C\u0001\u0005WDqAa<\u0001\t\u0003\u0011\t\u0010C\u0004\u0003v\u0002!\tAa>\t\u000f\tm\b\u0001\"\u0011\u0003~\"91q\u0002\u0001\u0005B\rE\u0001bBB\u000f\u0001\u0011\u00053q\u0004\u0005\b\u0007G\u0001A\u0011IB\u0013\u0011\u001d\u0019i\u0003\u0001C\u0005\u0007_Aqaa\u000e\u0001\t\u0003\u001aI\u0004C\u0004\u0004<\u0001!\te!\u0010\t\u000f\r}\u0002\u0001\"\u0011\u0004B!91q\t\u0001\u0005B\r%saBB\'U\"\u00051q\n\u0004\u0007S*D\ta!\u0015\t\u000f\u0005m7\t\"\u0001\u0004b!911M\"\u0005\u0002\r\u0015dABB8\u0007\u000e\u0019\t\b\u0003\b\u0004z\u0019#\t\u0011!B\u0003\u0006\u0004%Iaa\u001f\t\u0017\rudI!B\u0001B\u0003%1q\r\u0005\b\u000374E\u0011AB@\u0011\u001d\u0019II\u0012C\u0001\u0007\u0017C\u0011b!*G#\u0003%\taa*\t\u000f\ruf\t\"\u0001\u0004@\"I11\u001b$\u0012\u0002\u0013\u00051q\u0015\u0005\b\u0007+4E\u0011ABl\u0011%\u0019iNRI\u0001\n\u0003\u00199\u000bC\u0005\u0004$\u0019\u000b\t\u0011\"\u0011\u0004&!I1Q\u0004$\u0002\u0002\u0013\u00053q\u001c\u0005\n\u0007K\u001c\u0015\u0011!C\u0002\u0007OD\u0001\"!1D\t\u0003Q71\u001e\u0005\u000b\u0007k\u001c\u0015\u0013!C\u0001U\u000e]\bBCB~\u0007F\u0005I\u0011\u00016\u0004~\"AA\u0011A\"\u0005\u0002)$\u0019\u0001\u0003\u0006\u0005.\r\u000b\n\u0011\"\u0001k\t_A!\u0002b\u000fD#\u0003%\tA\u001bC\u001f\u0011\u001d!Ie\u0011C\u0001\t\u0017Bqaa\u0019D\t\u0003!i\u0006C\u0004\u0004d\r#\t\u0001\"\u001e\t\u000f\r\r4\t\"\u0001\u0005(\u001eI1Q]\"\u0002\u0002#\u0005A1\u001c\u0004\n\u0007_\u001a\u0015\u0011!E\u0001\t;Dq!a7_\t\u0003!y\u000eC\u0004\u0005bz#)\u0001b9\t\u0013\u0011=h,%A\u0005\u0006\u0011E\bb\u0002C{=\u0012\u0015Aq\u001f\u0005\n\u000b\u0003q\u0016\u0013!C\u0003\u000b\u0007Aq!b\u0002_\t\u000b)I\u0001C\u0005\u0006\u0014y\u000b\n\u0011\"\u0002\u0006\u0016!IQ\u0011\u00040\u0002\u0002\u0013\u0015Q1\u0004\u0005\n\u000b?q\u0016\u0011!C\u0003\u000bCA\u0011\"\"\u000bD\u0003\u0003%I!b\u000b\u0003\u000fI+7o\u001c7wK*\t1.\u0001\u0005d_V\u00148/[3s\u0007\u0001)2A\\A\u000e\'\u0011\u0001q.\u001e=\u0011\u0005A\u001cX\"A9\u000b\u0003I\fQa]2bY\u0006L!\u0001^9\u0003\r\u0005s\u0017PU3g!\t\u0001h/\u0003\u0002xc\n9\u0001K]8ek\u000e$\bcA=\u0002\u00049\u0011!p \b\u0003wzl\u0011\u0001 \u0006\u0003{2\fa\u0001\u0010:p_Rt\u0014\"\u0001:\n\u0007\u0005\u0005\u0011/A\u0004qC\u000e\\\u0017mZ3\n\t\u0005\u0015\u0011q\u0001\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0004\u0003\u0003\t\u0018!B2bG\",WCAA\u0007!\u0019\ty!a\u0005\u0002\u00185\u0011\u0011\u0011\u0003\u0006\u0004\u0003\u0013Q\u0017\u0002BA\u000b\u0003#\u0011QaQ1dQ\u0016\u0004B!!\u0007\u0002\u001c1\u0001AaBA\u000f\u0001\t\u0007\u0011q\u0004\u0002\u0002\rV!\u0011\u0011EA\u0018#\u0011\t\u0019#!\u000b\u0011\u0007A\f)#C\u0002\u0002(E\u0014qAT8uQ&tw\rE\u0002q\u0003WI1!!\fr\u0005\r\te.\u001f\u0003\t\u0003c\tYB1\u0001\u0002\"\t\tq,\u0001\u0004dC\u000eDW\rI\u0001\rI\u0016\u0004XM\u001c3f]\u000eLWm]\u000b\u0003\u0003s\u0001R!_A\u001e\u0003\u007fIA!!\u0010\u0002\b\t\u00191+Z9\u0011\t\u0005\u0005\u0013q\t\b\u0005\u0003\u0007\n)%D\u0001k\u0013\r\t\tA[\u0005\u0005\u0003\u0013\nYE\u0001\u0006EKB,g\u000eZ3oGfT1!!\u0001k\u00035!W\r]3oI\u0016t7-[3tA\u0005a!/\u001a9pg&$xN]5fgV\u0011\u00111\u000b\t\u0006s\u0006m\u0012Q\u000b\t\u0005\u0003\u0003\n9&\u0003\u0003\u0002Z\u0005-#A\u0003*fa>\u001c\u0018\u000e^8ss\u0006i!/\u001a9pg&$xN]5fg\u0002\nq\"\\5se>\u00148i\u001c8g\r&dWm]\u000b\u0003\u0003C\u0002R!_A\u001e\u0003G\u0002B!!\u001a\u0002l5\u0011\u0011q\r\u0006\u0004\u0003SR\u0017A\u00029be\u0006l7/\u0003\u0003\u0002n\u0005\u001d$AD\'jeJ|\'oQ8oM\u001aKG.Z\u0001\u0011[&\u0014(o\u001c:D_:4g)\u001b7fg\u0002\nq!\\5se>\u00148/\u0006\u0002\u0002vA)\u00110a\u000f\u0002xA!\u0011QMA=\u0013\u0011\tY(a\u001a\u0003\r5K\'O]8s\u0003!i\u0017N\u001d:peN\u0004\u0013\u0001\u0005:fg>dW\u000f^5p]B\u000b\'/Y7t+\t\t\u0019\t\u0005\u0003\u0002f\u0005\u0015\u0015\u0002BAD\u0003O\u0012\u0001CU3t_2,H/[8o!\u0006\u0014\u0018-\\:\u0002#I,7o\u001c7vi&|g\u000eU1sC6\u001c\b%\u0001\u0006uQJ|Wo\u001a5PaR,\"!a$\u0011\u000bA\f\t*!&\n\u0007\u0005M\u0015O\u0001\u0004PaRLwN\u001c\t\ba\u0006]\u00151TAN\u0013\r\tI*\u001d\u0002\n\rVt7\r^5p]F\u0002b!!\u0007\u0002\u001c\u0005u\u0005\u0003BA!\u0003?KA!!)\u0002L\tQ!+Z:pYV$\u0018n\u001c8\u0002\u0017QD\'o\\;hQ>\u0003H\u000fI\u0001\u0014iJ\fgn\u001d4pe64U\r^2iKJ|\u0005\u000f^\u000b\u0003\u0003S\u0003R\u0001]AI\u0003W\u0003r\u0001]AL\u0003[\u000bi\u000b\u0005\u0004\u00020\u0006U\u0016q\u0003\b\u0005\u0003\u0003\n\t,\u0003\u0003\u00024\u0006-\u0013!\u0005*fg>dW\u000f^5p]B\u0013xnY3tg&!\u0011qWA]\u0005\u00151U\r^2i\u0015\u0011\t\u0019,a/\u000b\u0007\u0005u&.\u0001\u0003d_J,\u0017\u0001\u0006;sC:\u001chm\u001c:n\r\u0016$8\r[3s\u001fB$\b%A\tj]&$\u0018.\u00197SKN|G.\u001e;j_:,\"!!2\u0011\u000bA\f\t*!(\u0002%%t\u0017\u000e^5bYJ+7o\u001c7vi&|g\u000eI\u0001\u0005gft7-\u0006\u0002\u0002NB1\u0011qZAk\u0003/i!!!5\u000b\u0007\u0005M\'.\u0001\u0003vi&d\u0017\u0002BAl\u0003#\u0014AaU=oG\u0006)1/\u001f8dA\u00051A(\u001b8jiz\"B#a8\u0002f\u0006\u001d\u0018\u0011^Av\u0003[\fy/!=\u0002t\u0006UH\u0003BAq\u0003G\u0004R!a\u0011\u0001\u0003/Aq!!3\u0016\u0001\b\ti\rC\u0004\u0002\nU\u0001\r!!\u0004\t\u000f\u0005UR\u00031\u0001\u0002:!9\u0011qJ\u000bA\u0002\u0005M\u0003bBA/+\u0001\u0007\u0011\u0011\r\u0005\b\u0003c*\u0002\u0019AA;\u0011\u001d\ty(\u0006a\u0001\u0003\u0007Cq!a#\u0016\u0001\u0004\ty\tC\u0004\u0002&V\u0001\r!!+\t\u000f\u0005\u0005W\u00031\u0001\u0002FR\u0011\u0012\u0011`A\u007f\u0003\u007f\u0014\tAa\u0001\u0003\u0006\t\u001d!\u0011\u0002B\u0006)\u0011\t\t/a?\t\u000f\u0005%g\u0003q\u0001\u0002N\"9\u0011\u0011\u0002\fA\u0002\u00055\u0001bBA\u001b-\u0001\u0007\u0011\u0011\b\u0005\b\u0003\u001f2\u0002\u0019AA*\u0011\u001d\tiF\u0006a\u0001\u0003CBq!!\u001d\u0017\u0001\u0004\t)\bC\u0004\u0002\u0000Y\u0001\r!a!\t\u000f\u0005-e\u00031\u0001\u0002\u0010\"9\u0011Q\u0015\fA\u0002\u0005%F\u0003\u0002B\b\u0005\'!B!!9\u0003\u0012!9\u0011\u0011Z\fA\u0004\u00055\u0007bBA\u0005/\u0001\u0007\u0011QB\u0001\u0002\'\u00069A\u000f\u001b:pk\u001eDWCAAK\u0003A!(/\u00198tM>\u0014XNR3uG\",\'/\u0006\u0002\u0002,\u0006\tb-\u001b8bY\u0012+\u0007/\u001a8eK:\u001c\u0017.Z:\u0002#\u0019Lg.\u00197SKB|7/\u001b;pe&,7/\u0006\u0002\u0003&A1\u0011\u0011DA\u000e\u0003\'\nq\"\u00193e\t\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u000b\u0005\u0003C\u0014Y\u0003C\u0004\u00026u\u0001\rA!\f\u0011\u000bA\u0014y#a\u0010\n\u0007\tE\u0012O\u0001\u0006=e\u0016\u0004X-\u0019;fIz\nq\"\u00193e%\u0016\u0004xn]5u_JLWm\u001d\u000b\u0005\u0003C\u00149\u0004C\u0004\u0002Py\u0001\rA!\u000f\u0011\u000bA\u0014y#!\u0016\u0002\u00139|W*\u001b:s_J\u001cXCAAq\u0003)\tG\rZ\'jeJ|\'o\u001d\u000b\u0005\u0003C\u0014\u0019\u0005C\u0004\u0002r\u0001\u0002\rA!\u0012\u0011\u000bA\u0014y#a\u001e\u0002%\u0005$G-T5se>\u00148i\u001c8g\r&dWm\u001d\u000b\u0005\u0003C\u0014Y\u0005C\u0004\u0002^\u0005\u0002\rA!\u0014\u0011\u000bA\u0014y#a\u0019\u0002\'5\f\u0007OU3t_2,H/[8o!\u0006\u0014\u0018-\\:\u0015\t\u0005\u0005(1\u000b\u0005\b\u0005+\u0012\u0003\u0019\u0001B,\u0003\u00051\u0007c\u00029\u0002\u0018\u0006\r\u00151Q\u0001\u0014iJ\fgn\u001d4pe6\u0014Vm]8mkRLwN\u001c\u000b\u0005\u0003C\u0014i\u0006C\u0004\u0003V\r\u0002\r!!&\u0002+9|GK]1og\u001a|\'/\u001c*fg>dW\u000f^5p]R\u0011\u0011\u0011]\u0001\u0018o&$\b\u000e\u0016:b]N4wN]7SKN|G.\u001e;j_:$B!!9\u0003h!9!\u0011N\u0013A\u0002\u0005=\u0015\u0001\u00024PaR$B!!9\u0003n!9!Q\u000b\u0014A\u0002\u0005-\u0016A\u00058p)J\fgn\u001d4pe64U\r^2iKJ\fAc^5uQR\u0013\u0018M\\:g_Jlg)\u001a;dQ\u0016\u0014H\u0003BAq\u0005kBqA!\u001b)\u0001\u0004\tI+A\u0006bY2l\u0015N\u001d:peN\u0004TC\u0001B>!\u0019\u0011iHa\"\u0002x5\u0011!q\u0010\u0006\u0005\u0005\u0003\u0013\u0019)A\u0005j[6,H/\u00192mK*\u0019!QQ9\u0002\u0015\r|G\u000e\\3di&|g.\u0003\u0003\u0002>\t}\u0014AC1mY6K\'O]8sgV\u0011!Q\u0012\t\u0007\u00033\tY\"!\u001e\u0002\u0011\u0019,Go\u00195WS\u0006,\"Aa%\u0011\r\u0005e\u00111DAW\u0003AIwnV5uQ\u000e{gN\u001a7jGR\u001c\b\u0007\u0006\u0003\u0003\u001a\nM\u0006CBA\r\u00037\u0011Y\nE\u0004q\u0005;\u000biJ!)\n\u0007\t}\u0015O\u0001\u0004UkBdWM\r\t\u0006s\u0006m\"1\u0015\t\u0005\u0005K\u0013y+\u0004\u0002\u0003(*!!\u0011\u0016BV\u0003!\u0019wN\u001c4mS\u000e$(b\u0001BWU\u0006)QM\u001d:pe&!!\u0011\u0017BT\u0005=)fn]1uSN4\u0017.\u001a3Sk2,\u0007b\u0002B[Y\u0001\u0007\u0011QV\u0001\u0006M\u0016$8\r[\u0001\u0010S><\u0016\u000e\u001e5D_:4G.[2ugV\u0011!\u0011T\u0001\u0003S>,\"!a\'\u0002\u0013]LG\u000f[\"bG\",G\u0003BAq\u0005\u0007Dq!!\u00030\u0001\u0004\ti!\u0001\txSRDG)\u001a9f]\u0012,gnY5fgR!\u0011\u0011\u001dBe\u0011\u001d\t)\u0004\ra\u0001\u0003s\t\u0001c^5uQJ+\u0007o\\:ji>\u0014\u0018.Z:\u0015\t\u0005\u0005(q\u001a\u0005\b\u0003\u001f\n\u0004\u0019AA*\u0003M9\u0018\u000e\u001e5NSJ\u0014xN]\"p]\u001a4\u0015\u000e\\3t)\u0011\t\tO!6\t\u000f\u0005u#\u00071\u0001\u0002b\u0005Yq/\u001b;i\u001b&\u0014(o\u001c:t)\u0011\t\tOa7\t\u000f\u0005E4\u00071\u0001\u0002v\u0005!r/\u001b;i%\u0016\u001cx\u000e\\;uS>t\u0007+\u0019:b[N$B!!9\u0003b\"9\u0011q\u0010\u001bA\u0002\u0005\r\u0015AD<ji\"$\u0006N]8vO\"|\u0005\u000f\u001e\u000b\u0005\u0003C\u00149\u000fC\u0004\u0002\fV\u0002\r!a$\u0002/]LG\u000f\u001b+sC:\u001chm\u001c:n\r\u0016$8\r[3s\u001fB$H\u0003BAq\u0005[Dq!!*7\u0001\u0004\tI+A\u000bxSRD\u0017J\\5uS\u0006d\'+Z:pYV$\u0018n\u001c8\u0015\t\u0005\u0005(1\u001f\u0005\b\u0003\u0003<\u0004\u0019AAc\u0003!9\u0018\u000e\u001e5Ts:\u001cG\u0003BAq\u0005sDq!!39\u0001\u0004\ti-\u0001\u0005u_N#(/\u001b8h)\t\u0011y\u0010\u0005\u0003\u0004\u0002\r-QBAB\u0002\u0015\u0011\u0019)aa\u0002\u0002\t1\fgn\u001a\u0006\u0003\u0007\u0013\tAA[1wC&!1QBB\u0002\u0005\u0019\u0019FO]5oO\u0006A1-\u00198FcV\fG\u000e\u0006\u0003\u0004\u0014\re\u0001c\u00019\u0004\u0016%\u00191qC9\u0003\u000f\t{w\u000e\\3b]\"911\u0004\u001eA\u0002\u0005%\u0012aA8cU\u00061Q-];bYN$Baa\u0005\u0004\"!911D\u001eA\u0002\u0005%\u0012\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\r\u001d\u0002c\u00019\u0004*%\u001911F9\u0003\u0007%sG/A\u0003ukBdW-\u0006\u0002\u00042A9\u0002oa\r\u0002\u000e\u0005e\u00121KA1\u0003k\n\u0019)a$\u0002*\u0006\u0015\u0017QZ\u0005\u0004\u0007k\t(a\u0002+va2,\u0017\u0007M\u0001\u000eaJ|G-^2u!J,g-\u001b=\u0016\u0005\t}\u0018\u0001\u00049s_\u0012,8\r^!sSRLXCAB\u0014\u00039\u0001(o\u001c3vGR,E.Z7f]R$B!!\u000b\u0004D!91Q\t!A\u0002\r\u001d\u0012!\u00018\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\u0005\u007f\u001cY\u0005C\u0004\u0004F\u0005\u0003\raa\n\u0002\u000fI+7o\u001c7wKB\u0019\u00111I\"\u0014\u000b\r\u001b\u0019f!\u0017\u0011\t\u0005\r3QK\u0005\u0004\u0007/R\'a\u0004)mCR4wN]7SKN|GN^3\u0011\t\rm3qL\u0007\u0003\u0007;RAAa/\u0004\b%!\u0011QAB/)\t\u0019y%A\u0003baBd\u0017\u0010\u0006\u0002\u0004hA)\u00111\t\u0001\u0004jA!\u0011qZB6\u0013\u0011\u0019i\'!5\u0003\tQ\u000b7o\u001b\u0002\u000f%\u0016\u001cx\u000e\u001c<f)\u0006\u001c8n\u00149t\'\r151\u000f\t\u0004a\u000eU\u0014bAB<c\n1\u0011I\\=WC2\f\u0001fY8veNLWM\u001d\u0013SKN|GN^3%%\u0016\u001cx\u000e\u001c<f)\u0006\u001c8n\u00149tI\u0011\u0012Xm]8mm\u0016,\"aa\u001a\u0002S\r|WO]:jKJ$#+Z:pYZ,GEU3t_24X\rV1tW>\u00038\u000f\n\u0013sKN|GN^3!)\u0011\u0019\ti!\"\u0011\u0007\r\re)D\u0001D\u0011\u001d\u00199)\u0013a\u0001\u0007O\nqA]3t_24X-\u0001\u0004gkR,(/\u001a\u000b\u0003\u0007\u001b#Baa$\u0004\u001cB11\u0011SBL\u0003;k!aa%\u000b\u0007\rU\u0015/\u0001\u0006d_:\u001cWO\u001d:f]RLAa!\'\u0004\u0014\n1a)\u001e;ve\u0016D\u0011b!(K!\u0003\u0005\u001daa(\u0002\u0005\u0015\u001c\u0007\u0003BBI\u0007CKAaa)\u0004\u0014\n\u0001R\t_3dkRLwN\\\"p]R,\u0007\u0010^\u0001\u0011MV$XO]3%I\u00164\u0017-\u001e7uIE\"\"a!++\t\r}51V\u0016\u0003\u0007[\u0003Baa,\u0004:6\u00111\u0011\u0017\u0006\u0005\u0007g\u001b),A\u0005v]\u000eDWmY6fI*\u00191qW9\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0003\u0004<\u000eE&!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dK\u00061Q-\u001b;iKJ$\"a!1\u0015\t\r\r7\u0011\u001b\t\bs\u000e\u00157\u0011ZAO\u0013\u0011\u00199-a\u0002\u0003\r\u0015KG\u000f[3s!\u0011\u0019Ym!4\u000e\u0005\t-\u0016\u0002BBh\u0005W\u0013qBU3t_2,H/[8o\u000bJ\u0014xN\u001d\u0005\n\u0007;c\u0005\u0013!a\u0002\u0007?\u000b\u0001#Z5uQ\u0016\u0014H\u0005Z3gCVdG\u000fJ\u0019\u0002\u0007I,h\u000e\u0006\u0002\u0004ZR!\u0011QTBn\u0011%\u0019iJ\u0014I\u0001\u0002\b\u0019y*A\u0007sk:$C-\u001a4bk2$H%\r\u000b\u0005\u0007\'\u0019\t\u000fC\u0005\u0004dF\u000b\t\u00111\u0001\u0002*\u0005\u0019\u0001\u0010J\u0019\u0002\u001dI+7o\u001c7wKR\u000b7o[(qgR!1\u0011QBu\u0011\u001d\u00199I\u0015a\u0001\u0007O\"\u0002\"!(\u0004n\u000e=8\u0011\u001f\u0005\b\u0003k\u0019\u0006\u0019AA\u001d\u0011%\tIg\u0015I\u0001\u0002\u0004\t\u0019\tC\u0005\u0004tN\u0003\n\u00111\u0001\u0002F\u0006!\u0012N\\5uS\u0006d\'+Z:pYV$\u0018n\u001c8PaR\f1$\u001b8ji&\fGNU3t_2,H/[8oI\u0011,g-Y;mi\u0012\u0012TCAB}U\u0011\t\u0019ia+\u00027%t\u0017\u000e^5bYJ+7o\u001c7vi&|g\u000e\n3fM\u0006,H\u000e\u001e\u00134+\t\u0019yP\u000b\u0003\u0002F\u000e-\u0016A\u0003:v]B\u0013xnY3tgV!AQ\u0001C\u0006))!9\u0001b\u0006\u0005\u001a\u0011uA\u0011\u0005\u000b\u0005\t\u0013!\t\u0002\u0005\u0004\u0002\u001a\u0011-\u0011Q\u0014\u0003\b\u0003;1&\u0019\u0001C\u0007+\u0011\t\t\u0003b\u0004\u0005\u0011\u0005EB1\u0002b\u0001\u0003CAqA!\u0006W\u0001\b!\u0019\u0002\u0005\u0004\u0002P\u0006UGQ\u0003\t\u0005\u00033!Y\u0001C\u0004\u0002BZ\u0003\r!!(\t\u000f\tUf\u000b1\u0001\u0005\u001cA1\u0011qVA[\t+A\u0011\u0002b\bW!\u0003\u0005\raa\n\u0002\u001b5\f\u00070\u0013;fe\u0006$\u0018n\u001c8t\u0011%!\u0019C\u0016I\u0001\u0002\u0004!)#A\u0005m_\u001e<WM](qiB)\u0001/!%\u0005(A!\u0011q\u0002C\u0015\u0013\u0011!Y#!\u0005\u0003\u0017\r\u000b7\r[3M_\u001e<WM]\u0001\u0015eVt\u0007K]8dKN\u001cH\u0005Z3gCVdG\u000fJ\u001a\u0016\t\u0011EBQG\u000b\u0003\tgQCaa\n\u0004,\u00129\u0011QD,C\u0002\u0011]R\u0003BA\u0011\ts!\u0001\"!\r\u00056\t\u0007\u0011\u0011E\u0001\u0015eVt\u0007K]8dKN\u001cH\u0005Z3gCVdG\u000f\n\u001b\u0016\t\u0011}B1I\u000b\u0003\t\u0003RC\u0001\"\n\u0004,\u00129\u0011Q\u0004-C\u0002\u0011\u0015S\u0003BA\u0011\t\u000f\"\u0001\"!\r\u0005D\t\u0007\u0011\u0011E\u0001\tm\u0006d\u0017\u000eZ1uKR!AQ\nC-!!\ty\rb\u0014\u0004J\u0012M\u0013\u0002\u0002C)\u0003#\u0014QBV1mS\u0012\fG/[8o\u001d\u0016d\u0007c\u00019\u0005V%\u0019AqK9\u0003\tUs\u0017\u000e\u001e\u0005\b\t7J\u0006\u0019AAO\u0003\r\u0011Xm]\u000b\u0005\t?\"9\u0007\u0006\u0003\u0005b\u0011ED\u0003\u0002C2\t[\u0002R!a\u0011\u0001\tK\u0002B!!\u0007\u0005h\u00119\u0011Q\u0004.C\u0002\u0011%T\u0003BA\u0011\tW\"\u0001\"!\r\u0005h\t\u0007\u0011\u0011\u0005\u0005\b\u0003\u0013T\u00069\u0001C8!\u0019\ty-!6\u0005f!9\u0011\u0011\u0002.A\u0002\u0011M\u0004CBA\b\u0003\'!)\'\u0006\u0003\u0005x\u0011}DC\u0005C=\t\u0013#i\tb$\u0005\u0012\u0012MEQ\u0013CL\t?#B\u0001b\u001f\u0005\u0006B)\u00111\t\u0001\u0005~A!\u0011\u0011\u0004C@\t\u001d\tib\u0017b\u0001\t\u0003+B!!\t\u0005\u0004\u0012A\u0011\u0011\u0007C@\u0005\u0004\t\t\u0003C\u0004\u0002Jn\u0003\u001d\u0001b\"\u0011\r\u0005=\u0017Q\u001bC?\u0011\u001d\tIa\u0017a\u0001\t\u0017\u0003b!a\u0004\u0002\u0014\u0011u\u0004bBA\u001b7\u0002\u0007\u0011\u0011\b\u0005\b\u0003\u001fZ\u0006\u0019AA*\u0011\u001d\tif\u0017a\u0001\u0003CBq!!\u001d\\\u0001\u0004\t)\bC\u0004\u0002\u0000m\u0003\r!a!\t\u000f\u0005-5\f1\u0001\u0005\u001aB)\u0001/!%\u0005\u001cB9\u0001/a&\u0005\u001e\u0012u\u0005CBA\r\t\u007f\ni\nC\u0004\u0002&n\u0003\r\u0001\")\u0011\u000bA\f\t\nb)\u0011\u000fA\f9\n\"*\u0005&B1\u0011qVA[\t{*B\u0001\"+\u00052R!B1\u0016C^\t\u007f#\t\rb1\u0005F\u0012\u001dG\u0011\u001aCi\t3$B\u0001\",\u00058B)\u00111\t\u0001\u00050B!\u0011\u0011\u0004CY\t\u001d\ti\u0002\u0018b\u0001\tg+B!!\t\u00056\u0012A\u0011\u0011\u0007CY\u0005\u0004\t\t\u0003C\u0004\u0002Jr\u0003\u001d\u0001\"/\u0011\r\u0005=\u0017Q\u001bCX\u0011\u001d\tI\u0001\u0018a\u0001\t{\u0003b!a\u0004\u0002\u0014\u0011=\u0006bBA\u001b9\u0002\u0007\u0011\u0011\b\u0005\b\u0003\u001fb\u0006\u0019AA*\u0011\u001d\ti\u0006\u0018a\u0001\u0003CBq!!\u001d]\u0001\u0004\t)\bC\u0004\u0002\u0000q\u0003\r!a!\t\u000f\u0005-E\f1\u0001\u0005LB)\u0001/!%\u0005NB9\u0001/a&\u0005P\u0012=\u0007CBA\r\tc\u000bi\nC\u0004\u0002&r\u0003\r\u0001b5\u0011\u000bA\f\t\n\"6\u0011\u000fA\f9\nb6\u0005XB1\u0011qVA[\t_Cq!!1]\u0001\u0004\t)\rE\u0002\u0004\u0004z\u001b\"AX8\u0015\u0005\u0011m\u0017\u0001\u00054viV\u0014X\rJ3yi\u0016t7/[8o)\u0011!)\u000fb;\u0015\u0005\u0011\u001dH\u0003BBH\tSD\u0011b!(a!\u0003\u0005\u001daa(\t\u000f\u00115\b\r1\u0001\u0004\u0002\u0006)A\u0005\u001e5jg\u0006Qb-\u001e;ve\u0016$C-\u001a4bk2$H%\r\u0013fqR,gn]5p]R!1q\u0015Cz\u0011\u001d!i/\u0019a\u0001\u0007\u0003\u000b\u0001#Z5uQ\u0016\u0014H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0011eHq \u000b\u0003\tw$Baa1\u0005~\"I1Q\u00142\u0011\u0002\u0003\u000f1q\u0014\u0005\b\t[\u0014\u0007\u0019ABA\u0003i)\u0017\u000e\u001e5fe\u0012\"WMZ1vYR$\u0013\u0007J3yi\u0016t7/[8o)\u0011\u00199+\"\u0002\t\u000f\u001158\r1\u0001\u0004\u0002\u0006i!/\u001e8%Kb$XM\\:j_:$B!b\u0003\u0006\u0012Q\u0011QQ\u0002\u000b\u0005\u0003;+y\u0001C\u0005\u0004\u001e\u0012\u0004\n\u0011q\u0001\u0004 \"9AQ\u001e3A\u0002\r\u0005\u0015a\u0006:v]\u0012\"WMZ1vYR$\u0013\u0007J3yi\u0016t7/[8o)\u0011\u00199+b\u0006\t\u000f\u00115X\r1\u0001\u0004\u0002\u0006\u0011\u0002.Y:i\u0007>$W\rJ3yi\u0016t7/[8o)\u0011\u0019)#\"\b\t\u000f\u00115h\r1\u0001\u0004\u0002\u0006\u0001R-];bYN$S\r\u001f;f]NLwN\u001c\u000b\u0005\u000bG)9\u0003\u0006\u0003\u0004\u0014\u0015\u0015\u0002\"CBrO\u0006\u0005\t\u0019AA\u0015\u0011\u001d!io\u001aa\u0001\u0007\u0003\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!\"\f\u0011\t\r\u0005QqF\u0005\u0005\u000bc\u0019\u0019A\u0001\u0004PE*,7\r\u001e"
    )
BootstrapMethods:
  0: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #168 REF_invokeStatic coursier/Resolve.$anonfun$through$1:()Lscala/Function1;
      #169 ()Lscala/Function1;
      #170 5
      #171 1
      #169 ()Lscala/Function1;
  1: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #197 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$1:()Lscala/Function1;
      #169 ()Lscala/Function1;
      #170 5
      #171 1
      #169 ()Lscala/Function1;
  2: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #224 REF_invokeStatic coursier/Resolve.$anonfun$finalDependencies$1$adapted:(Lscala/Function2;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #226 (Lcoursier/core/Dependency;)Ljava/lang/Object;
      #170 5
      #171 1
      #226 (Lcoursier/core/Dependency;)Ljava/lang/Object;
  3: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #242 REF_invokeStatic coursier/Resolve.$anonfun$finalDependencies$2:(Lcoursier/Resolve;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #244 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #170 5
      #171 1
      #244 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  4: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #268 REF_invokeStatic coursier/Resolve.$anonfun$finalRepositories$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #270 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #170 5
      #171 1
      #270 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  5: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #330 REF_invokeStatic coursier/Resolve.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
      #169 ()Lscala/Function1;
      #170 5
      #171 1
      #169 ()Lscala/Function1;
  6: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #338 REF_invokeStatic coursier/Resolve.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #339 (Lscala/Function1;)Lscala/Function1;
      #170 5
      #171 1
      #339 (Lscala/Function1;)Lscala/Function1;
  7: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #367 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$3:(Lscala/Function1;)Lscala/Function1;
      #169 ()Lscala/Function1;
      #170 5
      #171 1
      #169 ()Lscala/Function1;
  8: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #372 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$4:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #339 (Lscala/Function1;)Lscala/Function1;
      #170 5
      #171 1
      #339 (Lscala/Function1;)Lscala/Function1;
  9: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #385 REF_invokeStatic coursier/Resolve.$anonfun$allMirrors0$1:(Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
      #386 (Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
      #170 5
      #171 1
      #386 (Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
  10: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #400 REF_invokeStatic coursier/Resolve.$anonfun$allMirrors$1:(Lcoursier/Resolve;)Lscala/collection/immutable/Seq;
      #401 ()Lscala/collection/immutable/Seq;
      #170 5
      #171 1
      #401 ()Lscala/collection/immutable/Seq;
  11: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #424 REF_invokeStatic coursier/Resolve.$anonfun$fetchVia$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/Function1;
      #426 (Lscala/collection/immutable/Seq;)Lscala/Function1;
      #170 5
      #171 1
      #426 (Lscala/collection/immutable/Seq;)Lscala/Function1;
  12: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #448 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$4:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
      #170 5
      #171 1
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
  13: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #464 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts$1:(Lcoursier/Resolve;Lscala/Function1;)Ljava/lang/Object;
      #465 (Lscala/Function1;)Ljava/lang/Object;
      #170 5
      #171 1
      #465 (Lscala/Function1;)Ljava/lang/Object;
  14: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #474 REF_invokeStatic coursier/Resolve.$anonfun$io$1:(Lscala/Tuple2;)Lcoursier/core/Resolution;
      #475 (Lscala/Tuple2;)Lcoursier/core/Resolution;
      #170 5
      #171 1
      #475 (Lscala/Tuple2;)Lcoursier/core/Resolution;
  15: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #585 REF_invokeStatic coursier/Resolve.$anonfun$through$2:(Ljava/lang/Object;)Ljava/lang/Object;
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #171 1
  16: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #590 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$2:(Lscala/Function1;)Lscala/Function1;
      #339 (Lscala/Function1;)Lscala/Function1;
      #170 5
      #171 1
      #339 (Lscala/Function1;)Lscala/Function1;
  17: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #854 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$1:(Lcoursier/error/conflict/UnsatisfiedRule;Lscala/Tuple2;)Lscala/Tuple2;
      #856 (Lscala/Tuple2;)Lscala/Tuple2;
      #170 5
      #171 1
      #856 (Lscala/Tuple2;)Lscala/Tuple2;
  18: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #876 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$2:(Lcoursier/Resolve;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
      #170 5
      #171 1
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
  19: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #880 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$3:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
      #170 5
      #171 1
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
  20: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #925 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$8:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;Lcoursier/core/Resolution;)Lscala/Tuple2;
      #927 (Lcoursier/core/Resolution;)Lscala/Tuple2;
      #170 5
      #171 1
      #927 (Lcoursier/core/Resolution;)Lscala/Tuple2;
  21: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #935 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$6:(Lscala/Tuple2;)Lscala/Tuple2;
      #856 (Lscala/Tuple2;)Lscala/Tuple2;
      #170 5
      #171 1
      #856 (Lscala/Tuple2;)Lscala/Tuple2;
  22: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #939 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$7:(Lcoursier/Resolve;Lscala/Tuple2;)Ljava/lang/Object;
      #941 (Lscala/Tuple2;)Ljava/lang/Object;
      #170 5
      #171 1
      #941 (Lscala/Tuple2;)Ljava/lang/Object;
  23: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #219 (Ljava/lang/Object;)Ljava/lang/Object;
      #945 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$5:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
      #170 5
      #171 1
      #450 (Lcoursier/core/Resolution;)Ljava/lang/Object;
  24: #986 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #400 REF_invokeStatic coursier/Resolve.$anonfun$allMirrors$1:(Lcoursier/Resolve;)Lscala/collection/immutable/Seq;
      #385 REF_invokeStatic coursier/Resolve.$anonfun$allMirrors0$1:(Lcoursier/params/MirrorConfFile;)Lscala/collection/immutable/Seq;
      #424 REF_invokeStatic coursier/Resolve.$anonfun$fetchVia$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/Function1;
      #224 REF_invokeStatic coursier/Resolve.$anonfun$finalDependencies$1$adapted:(Lscala/Function2;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #242 REF_invokeStatic coursier/Resolve.$anonfun$finalDependencies$2:(Lcoursier/Resolve;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #268 REF_invokeStatic coursier/Resolve.$anonfun$finalRepositories$1:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #474 REF_invokeStatic coursier/Resolve.$anonfun$io$1:(Lscala/Tuple2;)Lcoursier/core/Resolution;
      #464 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts$1:(Lcoursier/Resolve;Lscala/Function1;)Ljava/lang/Object;
      #854 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$1:(Lcoursier/error/conflict/UnsatisfiedRule;Lscala/Tuple2;)Lscala/Tuple2;
      #876 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$2:(Lcoursier/Resolve;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #880 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$3:(Lcoursier/Resolve;Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #448 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$4:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #945 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$5:(Lcoursier/Resolve;Lscala/Function1;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #935 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$6:(Lscala/Tuple2;)Lscala/Tuple2;
      #939 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$7:(Lcoursier/Resolve;Lscala/Tuple2;)Ljava/lang/Object;
      #925 REF_invokeStatic coursier/Resolve.$anonfun$ioWithConflicts0$8:(Lcoursier/core/Resolution;Lscala/collection/immutable/List;Lcoursier/core/Resolution;)Lscala/Tuple2;
      #168 REF_invokeStatic coursier/Resolve.$anonfun$through$1:()Lscala/Function1;
      #585 REF_invokeStatic coursier/Resolve.$anonfun$through$2:(Ljava/lang/Object;)Ljava/lang/Object;
      #197 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$1:()Lscala/Function1;
      #590 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$2:(Lscala/Function1;)Lscala/Function1;
      #367 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$3:(Lscala/Function1;)Lscala/Function1;
      #372 REF_invokeStatic coursier/Resolve.$anonfun$transformFetcher$4:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #330 REF_invokeStatic coursier/Resolve.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
      #338 REF_invokeStatic coursier/Resolve.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  ScalaInlineInfo: length = 0x1B2 (unknown attribute)
   01 01 00 56 01 8E 01 8F 01 01 7F 01 80 01 01 A6
   01 A7 01 02 52 02 53 01 00 DE 00 DF 01 00 F0 00
   F1 01 01 0A 01 0B 01 01 D8 01 D9 01 01 CE 01 CF
   01 03 02 03 03 01 03 1E 03 1F 01 03 22 03 23 01
   01 BE 01 BF 01 03 A5 01 BF 01 03 83 03 57 01 03
   95 03 96 01 03 90 03 91 01 00 A7 00 A1 01 02 3F
   00 DC 01 00 C4 00 A1 01 02 4D 01 49 01 01 6E 01
   49 01 01 73 01 51 01 01 48 01 49 01 01 50 01 51
   01 01 5C 03 C5 01 01 5C 03 C3 01 01 5C 01 E2 01
   00 9D 00 99 01 01 13 01 14 01 01 35 01 14 01 01
   31 01 14 01 01 1D 01 14 01 01 03 00 A5 01 01 7E
   00 68 01 00 2E 00 7E 01 02 06 02 07 01 00 31 00
   68 01 02 0A 02 07 01 01 9C 00 A5 01 00 C9 00 68
   01 00 FE 00 A5 01 02 10 02 11 01 00 41 00 8F 01
   01 D5 00 A5 01 01 CB 00 A5 01 01 B0 00 EB 01 01
   39 01 3A 01 00 36 00 68 01 00 38 00 68 01 01 24
   00 63 01 01 7B 00 63 01 01 64 00 63 01 02 25 02
   11 01 02 26 02 27 01 02 33 02 34 01 00 79 00 71
   01 00 70 00 71 01 02 24 01 EC 01 03 25 03 26 01
   00 34 00 68 01 00 3A 00 8C 01 01 BA 01 BB 01 00
   43 00 99 01 00 A0 00 A1 01 00 3C 00 8F 01 01 EB
   01 EC 01 00 C0 00 A1 01 00 C0 01 3A 01 00 3F 00
   8F 01 01 44 01 3A 01 02 1C 02 1D 01 02 BE 01 C3
   01 03 7D 03 7E 01 01 DF 01 E0 01 01 1A 01 14 01
   01 E6 01 61 01 01 2E 01 14 01 01 2B 01 14 01 01
   21 01 14 01 01 3F 01 40 01 01 E8 01 E9 01 01 60
   01 61 01 01 7C 01 61 01 01 78 01 61 01 01 6A 01
   61 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
