Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/ops/ISOps_Ext$.class
  Last modified May 29, 2022; size 9367 bytes
  SHA-256 checksum 23f999d8d143f96aa0e9d2dbd5c98b54e079508e5f003b65099b95794931aba4
  Compiled from "SOps_Ext.scala"
public final class org.sireum.ops.ISOps_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ops/ISOps_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 17, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/ops/ISOps_Ext$
    #2 = Class              #1            // org/sireum/ops/ISOps_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               SOps_Ext.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/Z$MP$
   #12 = Class              #11           // org/sireum/Z$MP$
   #13 = Utf8               org/sireum/Z
   #14 = Class              #13           // org/sireum/Z
   #15 = Utf8               MP$
   #16 = Utf8               MODULE$
   #17 = Utf8               Lorg/sireum/ops/ISOps_Ext$;
   #18 = Utf8               MinimumParallelThreshold
   #19 = Utf8               I
   #20 = Utf8               poolRef
   #21 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;
   #22 = Utf8               Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;
   #23 = Utf8               <clinit>
   #24 = Utf8               ()V
   #25 = Utf8               <init>
   #26 = NameAndType        #25:#24       // "<init>":()V
   #27 = Methodref          #2.#26        // org/sireum/ops/ISOps_Ext$."<init>":()V
   #28 = NameAndType        #16:#17       // MODULE$:Lorg/sireum/ops/ISOps_Ext$;
   #29 = Fieldref           #2.#28        // org/sireum/ops/ISOps_Ext$.MODULE$:Lorg/sireum/ops/ISOps_Ext$;
   #30 = NameAndType        #18:#19       // MinimumParallelThreshold:I
   #31 = Fieldref           #2.#30        // org/sireum/ops/ISOps_Ext$.MinimumParallelThreshold:I
   #32 = Utf8               java/util/concurrent/atomic/AtomicReference
   #33 = Class              #32           // java/util/concurrent/atomic/AtomicReference
   #34 = Utf8               (Ljava/lang/Object;)V
   #35 = NameAndType        #25:#34       // "<init>":(Ljava/lang/Object;)V
   #36 = Methodref          #33.#35       // java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
   #37 = NameAndType        #20:#21       // poolRef:Ljava/util/concurrent/atomic/AtomicReference;
   #38 = Fieldref           #2.#37        // org/sireum/ops/ISOps_Ext$.poolRef:Ljava/util/concurrent/atomic/AtomicReference;
   #39 = Utf8               ()I
   #40 = Utf8               this
   #41 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference;
   #42 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;
   #43 = Utf8               mParMap
   #44 = Utf8               (Lorg/sireum/IS;Lscala/Function1;Lorg/sireum/Z;)Lorg/sireum/IS;
   #45 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TV;>;Lscala/Function1<TV;TU;>;Lorg/sireum/Z;)Lorg/sireum/IS<TI;TU;>;
   #46 = Utf8               s
   #47 = Utf8               f
   #48 = Utf8               numOfCores
   #49 = Utf8               org/sireum/IS
   #50 = Class              #49           // org/sireum/IS
   #51 = Utf8               elements
   #52 = Utf8               ()Lscala/collection/immutable/Seq;
   #53 = NameAndType        #51:#52       // elements:()Lscala/collection/immutable/Seq;
   #54 = Methodref          #50.#53       // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
   #55 = Utf8               scala/collection/immutable/Seq
   #56 = Class              #55           // scala/collection/immutable/Seq
   #57 = Utf8               indices
   #58 = Utf8               ()Lscala/collection/immutable/Range;
   #59 = NameAndType        #57:#58       // indices:()Lscala/collection/immutable/Range;
   #60 = InterfaceMethodref #56.#59       // scala/collection/immutable/Seq.indices:()Lscala/collection/immutable/Range;
   #61 = Utf8               scala/collection/immutable/Range
   #62 = Class              #61           // scala/collection/immutable/Range
   #63 = Utf8               zip
   #64 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #65 = NameAndType        #63:#64       // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #66 = Methodref          #62.#65       // scala/collection/immutable/Range.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #67 = Utf8               scala/collection/immutable/IndexedSeq
   #68 = Class              #67           // scala/collection/immutable/IndexedSeq
   #69 = Utf8               java/lang/Thread
   #70 = Class              #69           // java/lang/Thread
   #71 = Utf8               currentThread
   #72 = Utf8               ()Ljava/lang/Thread;
   #73 = NameAndType        #71:#72       // currentThread:()Ljava/lang/Thread;
   #74 = Methodref          #70.#73       // java/lang/Thread.currentThread:()Ljava/lang/Thread;
   #75 = Utf8               org/sireum/B$
   #76 = Class              #75           // org/sireum/B$
   #77 = Utf8               Lorg/sireum/B$;
   #78 = NameAndType        #16:#77       // MODULE$:Lorg/sireum/B$;
   #79 = Fieldref           #76.#78       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #80 = Utf8               org/sireum/Z$
   #81 = Class              #80           // org/sireum/Z$
   #82 = Utf8               Lorg/sireum/Z$;
   #83 = NameAndType        #16:#82       // MODULE$:Lorg/sireum/Z$;
   #84 = Fieldref           #81.#83       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #85 = Utf8               apply
   #86 = Utf8               (I)Lorg/sireum/Z;
   #87 = NameAndType        #85:#86       // apply:(I)Lorg/sireum/Z;
   #88 = Methodref          #81.#87       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #89 = Utf8               $greater$eq
   #90 = Utf8               (Lorg/sireum/Z;)Z
   #91 = NameAndType        #89:#90       // $greater$eq:(Lorg/sireum/Z;)Z
   #92 = InterfaceMethodref #14.#91       // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
   #93 = Utf8               $4B
   #94 = Utf8               (Z)Z
   #95 = NameAndType        #93:#94       // $4B:(Z)Z
   #96 = Methodref          #76.#95       // org/sireum/B$.$4B:(Z)Z
   #97 = Utf8               toInt
   #98 = NameAndType        #97:#39       // toInt:()I
   #99 = InterfaceMethodref #14.#98       // org/sireum/Z.toInt:()I
  #100 = Utf8               java/lang/Runtime
  #101 = Class              #100          // java/lang/Runtime
  #102 = Utf8               getRuntime
  #103 = Utf8               ()Ljava/lang/Runtime;
  #104 = NameAndType        #102:#103     // getRuntime:()Ljava/lang/Runtime;
  #105 = Methodref          #101.#104     // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
  #106 = Utf8               availableProcessors
  #107 = NameAndType        #106:#39      // availableProcessors:()I
  #108 = Methodref          #101.#107     // java/lang/Runtime.availableProcessors:()I
  #109 = Utf8               size
  #110 = NameAndType        #109:#39      // size:()I
  #111 = InterfaceMethodref #68.#110      // scala/collection/immutable/IndexedSeq.size:()I
  #112 = NameAndType        #18:#39       // MinimumParallelThreshold:()I
  #113 = Methodref          #2.#112       // org/sireum/ops/ISOps_Ext$.MinimumParallelThreshold:()I
  #114 = Utf8               java/util/concurrent/ForkJoinPool
  #115 = Class              #114          // java/util/concurrent/ForkJoinPool
  #116 = Utf8               (I)V
  #117 = NameAndType        #25:#116      // "<init>":(I)V
  #118 = Methodref          #115.#117     // java/util/concurrent/ForkJoinPool."<init>":(I)V
  #119 = NameAndType        #20:#41       // poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
  #120 = Methodref          #2.#119       // org/sireum/ops/ISOps_Ext$.poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
  #121 = Utf8               compareAndSet
  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #123 = NameAndType        #121:#122     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #124 = Methodref          #33.#123      // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #125 = Utf8               shutdown
  #126 = NameAndType        #125:#24      // shutdown:()V
  #127 = Methodref          #115.#126     // java/util/concurrent/ForkJoinPool.shutdown:()V
  #128 = Utf8               scala/collection/parallel/mutable/ParArray$
  #129 = Class              #128          // scala/collection/parallel/mutable/ParArray$
  #130 = Utf8               Lscala/collection/parallel/mutable/ParArray$;
  #131 = NameAndType        #16:#130      // MODULE$:Lscala/collection/parallel/mutable/ParArray$;
  #132 = Fieldref           #129.#131     // scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
  #133 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
  #134 = NameAndType        #85:#133      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
  #135 = Methodref          #129.#134     // scala/collection/parallel/mutable/ParArray$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
  #136 = Utf8               scala/collection/parallel/mutable/ParArray
  #137 = Class              #136          // scala/collection/parallel/mutable/ParArray
  #138 = Utf8               scala/collection/parallel/ForkJoinTaskSupport
  #139 = Class              #138          // scala/collection/parallel/ForkJoinTaskSupport
  #140 = Utf8               get
  #141 = Utf8               ()Ljava/lang/Object;
  #142 = NameAndType        #140:#141     // get:()Ljava/lang/Object;
  #143 = Methodref          #33.#142      // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
  #144 = Utf8               (Ljava/util/concurrent/ForkJoinPool;)V
  #145 = NameAndType        #25:#144      // "<init>":(Ljava/util/concurrent/ForkJoinPool;)V
  #146 = Methodref          #139.#145     // scala/collection/parallel/ForkJoinTaskSupport."<init>":(Ljava/util/concurrent/ForkJoinPool;)V
  #147 = Utf8               tasksupport_$eq
  #148 = Utf8               (Lscala/collection/parallel/TaskSupport;)V
  #149 = NameAndType        #147:#148     // tasksupport_$eq:(Lscala/collection/parallel/TaskSupport;)V
  #150 = Methodref          #137.#149     // scala/collection/parallel/mutable/ParArray.tasksupport_$eq:(Lscala/collection/parallel/TaskSupport;)V
  #151 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #152 = MethodType         #151          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #153 = Utf8               $anonfun$mParMap$1
  #154 = Utf8               (Ljava/lang/Thread;Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #155 = NameAndType        #153:#154     // $anonfun$mParMap$1:(Ljava/lang/Thread;Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #156 = Methodref          #2.#155       // org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$1:(Ljava/lang/Thread;Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #157 = MethodHandle       6:#156        // REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$1:(Ljava/lang/Thread;Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #158 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #159 = MethodType         #158          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #160 = Integer            5
  #161 = Integer            1
  #162 = Utf8               java/lang/invoke/LambdaMetafactory
  #163 = Class              #162          // java/lang/invoke/LambdaMetafactory
  #164 = Utf8               altMetafactory
  #165 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #166 = NameAndType        #164:#165     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = Methodref          #163.#166     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #168 = MethodHandle       6:#167        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = Utf8               (Ljava/lang/Thread;Lscala/Function1;)Lscala/Function1;
  #170 = NameAndType        #85:#169      // apply:(Ljava/lang/Thread;Lscala/Function1;)Lscala/Function1;
  #171 = InvokeDynamic      #0:#170       // #0:apply:(Ljava/lang/Thread;Lscala/Function1;)Lscala/Function1;
  #172 = Utf8               map
  #173 = Utf8               (Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
  #174 = NameAndType        #172:#173     // map:(Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
  #175 = Methodref          #137.#174     // scala/collection/parallel/mutable/ParArray.map:(Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
  #176 = Utf8               toIndexedSeq
  #177 = Utf8               ()Lscala/collection/immutable/IndexedSeq;
  #178 = NameAndType        #176:#177     // toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
  #179 = Methodref          #137.#178     // scala/collection/parallel/mutable/ParArray.toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
  #180 = Utf8               getAndSet
  #181 = NameAndType        #180:#151     // getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
  #182 = Methodref          #33.#181      // java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
  #183 = Utf8               $anonfun$mParMap$2
  #184 = Utf8               (Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #185 = NameAndType        #183:#184     // $anonfun$mParMap$2:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #186 = Methodref          #2.#185       // org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$2:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #187 = MethodHandle       6:#186        // REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$2:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #188 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #189 = NameAndType        #85:#188      // apply:(Lscala/Function1;)Lscala/Function1;
  #190 = InvokeDynamic      #1:#189       // #1:apply:(Lscala/Function1;)Lscala/Function1;
  #191 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #192 = NameAndType        #172:#191     // map:(Lscala/Function1;)Ljava/lang/Object;
  #193 = InterfaceMethodref #68.#192      // scala/collection/immutable/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
  #194 = Utf8               scala/collection/IndexedSeq
  #195 = Class              #194          // scala/collection/IndexedSeq
  #196 = Utf8               interrupted
  #197 = Utf8               ()Z
  #198 = NameAndType        #196:#197     // interrupted:()Z
  #199 = Methodref          #70.#198      // java/lang/Thread.interrupted:()Z
  #200 = Utf8               java/lang/InterruptedException
  #201 = Class              #200          // java/lang/InterruptedException
  #202 = Methodref          #201.#26      // java/lang/InterruptedException."<init>":()V
  #203 = Utf8               length
  #204 = NameAndType        #203:#39      // length:()I
  #205 = InterfaceMethodref #56.#204      // scala/collection/immutable/Seq.length:()I
  #206 = Utf8               $anonfun$mParMap$3$adapted
  #207 = Utf8               ([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #208 = NameAndType        #206:#207     // $anonfun$mParMap$3$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #209 = Methodref          #2.#208       // org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$3$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #210 = MethodHandle       6:#209        // REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$3$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #211 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #212 = MethodType         #211          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #213 = Utf8               ([Ljava/lang/Object;)Lscala/Function1;
  #214 = NameAndType        #85:#213      // apply:([Ljava/lang/Object;)Lscala/Function1;
  #215 = InvokeDynamic      #2:#214       // #2:apply:([Ljava/lang/Object;)Lscala/Function1;
  #216 = Utf8               foreach
  #217 = Utf8               (Lscala/Function1;)V
  #218 = NameAndType        #216:#217     // foreach:(Lscala/Function1;)V
  #219 = InterfaceMethodref #195.#218     // scala/collection/IndexedSeq.foreach:(Lscala/Function1;)V
  #220 = Utf8               org/sireum/IS$
  #221 = Class              #220          // org/sireum/IS$
  #222 = Utf8               Lorg/sireum/IS$;
  #223 = NameAndType        #16:#222      // MODULE$:Lorg/sireum/IS$;
  #224 = Fieldref           #221.#223     // org/sireum/IS$.MODULE$:Lorg/sireum/IS$;
  #225 = Utf8               $anonfun$mParMap$4
  #226 = NameAndType        #225:#211     // $anonfun$mParMap$4:(Lscala/Tuple2;)Ljava/lang/Object;
  #227 = Methodref          #2.#226       // org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$4:(Lscala/Tuple2;)Ljava/lang/Object;
  #228 = MethodHandle       6:#227        // REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$4:(Lscala/Tuple2;)Ljava/lang/Object;
  #229 = Utf8               ()Lscala/Function1;
  #230 = NameAndType        #85:#229      // apply:()Lscala/Function1;
  #231 = InvokeDynamic      #3:#230       // #3:apply:()Lscala/Function1;
  #232 = InterfaceMethodref #195.#192     // scala/collection/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
  #233 = Utf8               scala/collection/IterableOnceOps
  #234 = Class              #233          // scala/collection/IterableOnceOps
  #235 = Utf8               toSeq
  #236 = NameAndType        #235:#52      // toSeq:()Lscala/collection/immutable/Seq;
  #237 = InterfaceMethodref #234.#236     // scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
  #238 = Utf8               companion
  #239 = Utf8               ()Lorg/sireum/$ZCompanion;
  #240 = NameAndType        #238:#239     // companion:()Lorg/sireum/$ZCompanion;
  #241 = Methodref          #50.#240      // org/sireum/IS.companion:()Lorg/sireum/$ZCompanion;
  #242 = Utf8               (Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #243 = NameAndType        #85:#242      // apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #244 = Methodref          #221.#243     // org/sireum/IS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #245 = Utf8               newPool
  #246 = Utf8               Ljava/util/concurrent/ForkJoinPool;
  #247 = Utf8               success
  #248 = Utf8               Z
  #249 = Utf8               pc
  #250 = Utf8               Lscala/collection/parallel/mutable/ParArray;
  #251 = Utf8               r
  #252 = Utf8               Lscala/collection/immutable/IndexedSeq;
  #253 = Utf8               Lscala/collection/immutable/Seq;
  #254 = Utf8               ies
  #255 = Utf8               t
  #256 = Utf8               Ljava/lang/Thread;
  #257 = Utf8               cores
  #258 = Utf8               irs
  #259 = Utf8               Lscala/collection/IndexedSeq;
  #260 = Utf8               a
  #261 = Utf8               [Ljava/lang/Object;
  #262 = Utf8               Lorg/sireum/IS;
  #263 = Utf8               Lscala/Function1;
  #264 = Utf8               Lorg/sireum/Z;
  #265 = Utf8               scala/Function1
  #266 = Class              #265          // scala/Function1
  #267 = Utf8               mParMap$default$3
  #268 = Utf8               ()Lorg/sireum/Z;
  #269 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>()Lorg/sireum/Z;
  #270 = Utf8               sortWith
  #271 = Utf8               (Lorg/sireum/IS;Lscala/Function2;)Lorg/sireum/IS;
  #272 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TV;>;Lscala/Function2<TV;TV;Lorg/sireum/B;>;)Lorg/sireum/IS<TI;TV;>;
  #273 = Utf8               lt
  #274 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #275 = MethodType         #274          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #276 = Utf8               $anonfun$sortWith$1$adapted
  #277 = Utf8               (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #278 = NameAndType        #276:#277     // $anonfun$sortWith$1$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #279 = Methodref          #2.#278       // org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$1$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #280 = MethodHandle       6:#279        // REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$1$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #281 = Utf8               (Lscala/Function2;)Lscala/Function2;
  #282 = NameAndType        #85:#281      // apply:(Lscala/Function2;)Lscala/Function2;
  #283 = InvokeDynamic      #4:#282       // #4:apply:(Lscala/Function2;)Lscala/Function2;
  #284 = Utf8               (Lscala/Function2;)Ljava/lang/Object;
  #285 = NameAndType        #270:#284     // sortWith:(Lscala/Function2;)Ljava/lang/Object;
  #286 = InterfaceMethodref #56.#285      // scala/collection/immutable/Seq.sortWith:(Lscala/Function2;)Ljava/lang/Object;
  #287 = Utf8               boxer
  #288 = Utf8               ()Lorg/sireum/$internal/Boxer;
  #289 = NameAndType        #287:#288     // boxer:()Lorg/sireum/$internal/Boxer;
  #290 = Methodref          #50.#289      // org/sireum/IS.boxer:()Lorg/sireum/$internal/Boxer;
  #291 = NameAndType        #203:#268     // length:()Lorg/sireum/Z;
  #292 = Methodref          #50.#291      // org/sireum/IS.length:()Lorg/sireum/Z;
  #293 = Utf8               org/sireum/$internal/Boxer
  #294 = Class              #293          // org/sireum/$internal/Boxer
  #295 = Utf8               create
  #296 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #297 = NameAndType        #295:#296     // create:(Lorg/sireum/Z;)Ljava/lang/Object;
  #298 = InterfaceMethodref #294.#297     // org/sireum/$internal/Boxer.create:(Lorg/sireum/Z;)Ljava/lang/Object;
  #299 = Utf8               Lorg/sireum/Z$MP$;
  #300 = NameAndType        #16:#299      // MODULE$:Lorg/sireum/Z$MP$;
  #301 = Fieldref           #12.#300      // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
  #302 = Utf8               zero
  #303 = NameAndType        #302:#268     // zero:()Lorg/sireum/Z;
  #304 = Methodref          #12.#303      // org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
  #305 = Utf8               scala/runtime/ObjectRef
  #306 = Class              #305          // scala/runtime/ObjectRef
  #307 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #308 = NameAndType        #295:#307     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #309 = Methodref          #306.#308     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #310 = Utf8               $anonfun$sortWith$2$adapted
  #311 = Utf8               (Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #312 = NameAndType        #310:#311     // $anonfun$sortWith$2$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #313 = Methodref          #2.#312       // org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$2$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #314 = MethodHandle       6:#313        // REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$2$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #315 = Utf8               (Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #316 = NameAndType        #85:#315      // apply:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #317 = InvokeDynamic      #5:#316       // #5:apply:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #318 = InterfaceMethodref #56.#218      // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
  #319 = Utf8               (Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #320 = NameAndType        #25:#319      // "<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #321 = Methodref          #50.#320      // org/sireum/IS."<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #322 = Utf8               es
  #323 = Utf8               Ljava/lang/Object;
  #324 = Utf8               i
  #325 = Utf8               Lscala/runtime/ObjectRef;
  #326 = Utf8               Lscala/Function2;
  #327 = Utf8               t$1
  #328 = Utf8               f$1
  #329 = Utf8               p
  #330 = Utf8               isInterrupted
  #331 = NameAndType        #330:#197     // isInterrupted:()Z
  #332 = Methodref          #70.#331      // java/lang/Thread.isInterrupted:()Z
  #333 = Utf8               scala/Tuple2
  #334 = Class              #333          // scala/Tuple2
  #335 = Utf8               _1$mcI$sp
  #336 = NameAndType        #335:#39      // _1$mcI$sp:()I
  #337 = Methodref          #334.#336     // scala/Tuple2._1$mcI$sp:()I
  #338 = Utf8               scala/runtime/BoxesRunTime
  #339 = Class              #338          // scala/runtime/BoxesRunTime
  #340 = Utf8               boxToInteger
  #341 = Utf8               (I)Ljava/lang/Integer;
  #342 = NameAndType        #340:#341     // boxToInteger:(I)Ljava/lang/Integer;
  #343 = Methodref          #339.#342     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #344 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #345 = NameAndType        #25:#344      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #346 = Methodref          #334.#345     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #347 = Utf8               _2
  #348 = NameAndType        #347:#141     // _2:()Ljava/lang/Object;
  #349 = Methodref          #334.#348     // scala/Tuple2._2:()Ljava/lang/Object;
  #350 = NameAndType        #85:#151      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #351 = InterfaceMethodref #266.#350     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #352 = Utf8               Lscala/Tuple2;
  #353 = Utf8               $anonfun$mParMap$3
  #354 = Utf8               ([Ljava/lang/Object;Lscala/Tuple2;)V
  #355 = Utf8               a$1
  #356 = Utf8               x$1
  #357 = Utf8               $anonfun$sortWith$1
  #358 = Utf8               (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #359 = Utf8               lt$1
  #360 = Utf8               e1
  #361 = Utf8               e2
  #362 = Utf8               scala/Function2
  #363 = Class              #362          // scala/Function2
  #364 = NameAndType        #85:#274      // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #365 = InterfaceMethodref #363.#364     // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #366 = Utf8               org/sireum/B
  #367 = Class              #366          // org/sireum/B
  #368 = Utf8               value
  #369 = NameAndType        #368:#197     // value:()Z
  #370 = Methodref          #367.#369     // org/sireum/B.value:()Z
  #371 = Utf8               $anonfun$sortWith$2
  #372 = Utf8               (Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #373 = Utf8               s$1
  #374 = Utf8               a$2
  #375 = Utf8               i$1
  #376 = Utf8               e
  #377 = Utf8               elem
  #378 = NameAndType        #377:#323     // elem:Ljava/lang/Object;
  #379 = Fieldref           #306.#378     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #380 = Utf8               store
  #381 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #382 = NameAndType        #380:#381     // store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #383 = InterfaceMethodref #294.#382     // org/sireum/$internal/Boxer.store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #384 = Utf8               increase
  #385 = NameAndType        #384:#268     // increase:()Lorg/sireum/Z;
  #386 = InterfaceMethodref #14.#385      // org/sireum/Z.increase:()Lorg/sireum/Z;
  #387 = Methodref          #4.#26        // java/lang/Object."<init>":()V
  #388 = NameAndType        #353:#354     // $anonfun$mParMap$3:([Ljava/lang/Object;Lscala/Tuple2;)V
  #389 = Methodref          #2.#388       // org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$3:([Ljava/lang/Object;Lscala/Tuple2;)V
  #390 = Utf8               scala/runtime/BoxedUnit
  #391 = Class              #390          // scala/runtime/BoxedUnit
  #392 = Utf8               UNIT
  #393 = Utf8               Lscala/runtime/BoxedUnit;
  #394 = NameAndType        #392:#393     // UNIT:Lscala/runtime/BoxedUnit;
  #395 = Fieldref           #391.#394     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #396 = NameAndType        #357:#358     // $anonfun$sortWith$1:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #397 = Methodref          #2.#396       // org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$1:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #398 = Utf8               boxToBoolean
  #399 = Utf8               (Z)Ljava/lang/Boolean;
  #400 = NameAndType        #398:#399     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #401 = Methodref          #339.#400     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #402 = NameAndType        #371:#372     // $anonfun$sortWith$2:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #403 = Methodref          #2.#402       // org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$2:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #404 = Utf8               $deserializeLambda$
  #405 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #406 = Utf8               scala/runtime/LambdaDeserialize
  #407 = Class              #406          // scala/runtime/LambdaDeserialize
  #408 = Utf8               bootstrap
  #409 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #410 = NameAndType        #408:#409     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #411 = Methodref          #407.#410     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #412 = MethodHandle       6:#411        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #413 = Utf8               lambdaDeserialize
  #414 = NameAndType        #413:#405     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #415 = InvokeDynamic      #6:#414       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #416 = Utf8               Signature
  #417 = Utf8               Code
  #418 = Utf8               LineNumberTable
  #419 = Utf8               LocalVariableTable
  #420 = Utf8               StackMapTable
  #421 = Utf8               MethodParameters
  #422 = Utf8               InnerClasses
  #423 = Utf8               SourceFile
  #424 = Utf8               BootstrapMethods
  #425 = Utf8               ScalaInlineInfo
  #426 = Utf8               Scala
{
  public static final org.sireum.ops.ISOps_Ext$ MODULE$;
    descriptor: Lorg/sireum/ops/ISOps_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final int MinimumParallelThreshold;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.util.concurrent.atomic.AtomicReference<java.lang.Object> poolRef;
    descriptor: Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #22                          // Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class org/sireum/ops/ISOps_Ext$
         3: dup
         4: invokespecial #27                 // Method "<init>":()V
         7: putstatic     #29                 // Field MODULE$:Lorg/sireum/ops/ISOps_Ext$;
        10: iconst_2
        11: putstatic     #31                 // Field MinimumParallelThreshold:I
        14: new           #33                 // class java/util/concurrent/atomic/AtomicReference
        17: dup
        18: aconst_null
        19: invokespecial #36                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
        22: putstatic     #38                 // Field poolRef:Ljava/util/concurrent/atomic/AtomicReference;
        25: return
      LineNumberTable:
        line 31: 0
        line 32: 10
        line 33: 14
        line 31: 25

  public int MinimumParallelThreshold();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #31                 // Field MinimumParallelThreshold:I
         3: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/ops/ISOps_Ext$;

  public java.util.concurrent.atomic.AtomicReference<java.lang.Object> poolRef();
    descriptor: ()Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #38                 // Field poolRef:Ljava/util/concurrent/atomic/AtomicReference;
         3: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/ops/ISOps_Ext$;
    Signature: #42                          // ()Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;

  public <I extends java.lang.Object, V extends java.lang.Object, U extends java.lang.Object> org.sireum.IS<I, U> mParMap(org.sireum.IS<I, V>, scala.Function1<V, U>, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lscala/Function1;Lorg/sireum/Z;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=14, args_size=4
         0: aload_1
         1: invokevirtual #54                 // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
         4: astore        4
         6: aload         4
         8: invokeinterface #60,  1           // InterfaceMethod scala/collection/immutable/Seq.indices:()Lscala/collection/immutable/Range;
        13: aload         4
        15: invokevirtual #66                 // Method scala/collection/immutable/Range.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        18: checkcast     #68                 // class scala/collection/immutable/IndexedSeq
        21: astore        5
        23: invokestatic  #74                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
        26: astore        6
        28: getstatic     #79                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        31: aload_3
        32: getstatic     #84                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        35: iconst_1
        36: invokevirtual #88                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        39: invokeinterface #92,  2           // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
        44: invokevirtual #96                 // Method org/sireum/B$.$4B:(Z)Z
        47: ifeq          59
        50: aload_3
        51: invokeinterface #99,  1           // InterfaceMethod org/sireum/Z.toInt:()I
        56: goto          65
        59: invokestatic  #105                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
        62: invokevirtual #108                // Method java/lang/Runtime.availableProcessors:()I
        65: istore        7
        67: aload         5
        69: invokeinterface #111,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.size:()I
        74: aload_0
        75: invokevirtual #113                // Method MinimumParallelThreshold:()I
        78: if_icmplt     197
        81: new           #115                // class java/util/concurrent/ForkJoinPool
        84: dup
        85: iload         7
        87: invokespecial #118                // Method java/util/concurrent/ForkJoinPool."<init>":(I)V
        90: astore        9
        92: aload_0
        93: invokevirtual #120                // Method poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
        96: aconst_null
        97: aload         9
        99: invokevirtual #124                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       102: istore        10
       104: iload         10
       106: ifne          117
       109: aload         9
       111: invokevirtual #127                // Method java/util/concurrent/ForkJoinPool.shutdown:()V
       114: goto          117
       117: getstatic     #132                // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       120: aload         5
       122: invokevirtual #135                // Method scala/collection/parallel/mutable/ParArray$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
       125: checkcast     #137                // class scala/collection/parallel/mutable/ParArray
       128: astore        11
       130: aload         11
       132: new           #139                // class scala/collection/parallel/ForkJoinTaskSupport
       135: dup
       136: aload_0
       137: invokevirtual #120                // Method poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
       140: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       143: checkcast     #115                // class java/util/concurrent/ForkJoinPool
       146: invokespecial #146                // Method scala/collection/parallel/ForkJoinTaskSupport."<init>":(Ljava/util/concurrent/ForkJoinPool;)V
       149: invokevirtual #150                // Method scala/collection/parallel/mutable/ParArray.tasksupport_$eq:(Lscala/collection/parallel/TaskSupport;)V
       152: aload         11
       154: aload         6
       156: aload_2
       157: invokedynamic #171,  0            // InvokeDynamic #0:apply:(Ljava/lang/Thread;Lscala/Function1;)Lscala/Function1;
       162: invokevirtual #175                // Method scala/collection/parallel/mutable/ParArray.map:(Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
       165: invokevirtual #179                // Method scala/collection/parallel/mutable/ParArray.toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
       168: astore        12
       170: iload         10
       172: ifeq          192
       175: aload_0
       176: invokevirtual #120                // Method poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
       179: aconst_null
       180: invokevirtual #182                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       183: checkcast     #115                // class java/util/concurrent/ForkJoinPool
       186: invokevirtual #127                // Method java/util/concurrent/ForkJoinPool.shutdown:()V
       189: goto          192
       192: aload         12
       194: goto          213
       197: aload         5
       199: aload_2
       200: invokedynamic #190,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       205: invokeinterface #193,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
       210: checkcast     #195                // class scala/collection/IndexedSeq
       213: astore        8
       215: invokestatic  #199                // Method java/lang/Thread.interrupted:()Z
       218: ifeq          229
       221: new           #201                // class java/lang/InterruptedException
       224: dup
       225: invokespecial #202                // Method java/lang/InterruptedException."<init>":()V
       228: athrow
       229: aload         4
       231: invokeinterface #205,  1          // InterfaceMethod scala/collection/immutable/Seq.length:()I
       236: anewarray     #4                  // class java/lang/Object
       239: astore        13
       241: aload         8
       243: aload         13
       245: invokedynamic #215,  0            // InvokeDynamic #2:apply:([Ljava/lang/Object;)Lscala/Function1;
       250: invokeinterface #219,  2          // InterfaceMethod scala/collection/IndexedSeq.foreach:(Lscala/Function1;)V
       255: getstatic     #224                // Field org/sireum/IS$.MODULE$:Lorg/sireum/IS$;
       258: aload         8
       260: invokedynamic #231,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       265: invokeinterface #232,  2          // InterfaceMethod scala/collection/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
       270: checkcast     #234                // class scala/collection/IterableOnceOps
       273: invokeinterface #237,  1          // InterfaceMethod scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
       278: aload_1
       279: invokevirtual #241                // Method org/sireum/IS.companion:()Lorg/sireum/$ZCompanion;
       282: invokevirtual #244                // Method org/sireum/IS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
       285: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 254 /* append */
          offset_delta = 59
          locals = [ class scala/collection/immutable/Seq, class scala/collection/immutable/IndexedSeq, class java/lang/Thread ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class org/sireum/ops/ISOps_Ext$, class org/sireum/IS, class scala/Function1, class org/sireum/Z, class scala/collection/immutable/Seq, class scala/collection/immutable/IndexedSeq, class java/lang/Thread, int, top, class java/util/concurrent/ForkJoinPool, int ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 74
          locals = [ class scala/collection/parallel/mutable/ParArray, class scala/collection/immutable/IndexedSeq ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/ops/ISOps_Ext$, class org/sireum/IS, class scala/Function1, class org/sireum/Z, class scala/collection/immutable/Seq, class scala/collection/immutable/IndexedSeq, class java/lang/Thread, int ]
          stack = []
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/collection/IndexedSeq ]
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ class scala/collection/IndexedSeq ]
      LineNumberTable:
        line 36: 0
        line 37: 6
        line 38: 23
        line 39: 28
        line 41: 67
        line 43: 197
        line 44: 215
        line 45: 229
        line 46: 241
        line 47: 255
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           92     102     9 newPool   Ljava/util/concurrent/ForkJoinPool;
          104      90    10 success   Z
          130      64    11    pc   Lscala/collection/parallel/mutable/ParArray;
          170      24    12     r   Lscala/collection/immutable/IndexedSeq;
            6     279     4 elements   Lscala/collection/immutable/Seq;
           23     262     5   ies   Lscala/collection/immutable/IndexedSeq;
           28     257     6     t   Ljava/lang/Thread;
           67     218     7 cores   I
          215      70     8   irs   Lscala/collection/IndexedSeq;
          241      44    13     a   [Ljava/lang/Object;
            0     286     0  this   Lorg/sireum/ops/ISOps_Ext$;
            0     286     1     s   Lorg/sireum/IS;
            0     286     2     f   Lscala/Function1;
            0     286     3 numOfCores   Lorg/sireum/Z;
    Signature: #45                          // <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TV;>;Lscala/Function1<TV;TU;>;Lorg/sireum/Z;)Lorg/sireum/IS<TI;TU;>;
    MethodParameters:
      Name                           Flags
      s                              final
      f                              final
      numOfCores                     final

  public <I extends java.lang.Object, V extends java.lang.Object, U extends java.lang.Object> org.sireum.Z mParMap$default$3();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #84                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: invokestatic  #105                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
         6: invokevirtual #108                // Method java/lang/Runtime.availableProcessors:()I
         9: invokevirtual #88                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        12: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/ops/ISOps_Ext$;
    Signature: #269                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>()Lorg/sireum/Z;

  public <I extends java.lang.Object, V extends java.lang.Object> org.sireum.IS<I, V> sortWith(org.sireum.IS<I, V>, scala.Function2<V, V, org.sireum.B>);
    descriptor: (Lorg/sireum/IS;Lscala/Function2;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=3
         0: aload_1
         1: invokevirtual #54                 // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
         4: aload_2
         5: invokedynamic #283,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
        10: invokeinterface #286,  2          // InterfaceMethod scala/collection/immutable/Seq.sortWith:(Lscala/Function2;)Ljava/lang/Object;
        15: checkcast     #56                 // class scala/collection/immutable/Seq
        18: astore_3
        19: aload_1
        20: invokevirtual #290                // Method org/sireum/IS.boxer:()Lorg/sireum/$internal/Boxer;
        23: aload_1
        24: invokevirtual #292                // Method org/sireum/IS.length:()Lorg/sireum/Z;
        27: invokeinterface #298,  2          // InterfaceMethod org/sireum/$internal/Boxer.create:(Lorg/sireum/Z;)Ljava/lang/Object;
        32: astore        4
        34: getstatic     #301                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        37: invokevirtual #304                // Method org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
        40: invokestatic  #309                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        43: astore        5
        45: aload_3
        46: aload_1
        47: aload         4
        49: aload         5
        51: invokedynamic #317,  0            // InvokeDynamic #5:apply:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
        56: invokeinterface #318,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
        61: new           #50                 // class org/sireum/IS
        64: dup
        65: aload_1
        66: invokevirtual #241                // Method org/sireum/IS.companion:()Lorg/sireum/$ZCompanion;
        69: aload         4
        71: aload_1
        72: invokevirtual #292                // Method org/sireum/IS.length:()Lorg/sireum/Z;
        75: aload_1
        76: invokevirtual #290                // Method org/sireum/IS.boxer:()Lorg/sireum/$internal/Boxer;
        79: invokespecial #321                // Method org/sireum/IS."<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
        82: areturn
      LineNumberTable:
        line 51: 0
        line 52: 19
        line 53: 34
        line 54: 45
        line 58: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      63     3    es   Lscala/collection/immutable/Seq;
           34      48     4     a   Ljava/lang/Object;
           45      37     5     i   Lscala/runtime/ObjectRef;
            0      83     0  this   Lorg/sireum/ops/ISOps_Ext$;
            0      83     1     s   Lorg/sireum/IS;
            0      83     2    lt   Lscala/Function2;
    Signature: #272                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TV;>;Lscala/Function2<TV;TV;Lorg/sireum/B;>;)Lorg/sireum/IS<TI;TV;>;
    MethodParameters:
      Name                           Flags
      s                              final
      lt                             final

  public static final scala.Tuple2 $anonfun$mParMap$1(java.lang.Thread, scala.Function1, scala.Tuple2);
    descriptor: (Ljava/lang/Thread;Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #332                // Method java/lang/Thread.isInterrupted:()Z
         4: ifeq          25
         7: new           #334                // class scala/Tuple2
        10: dup
        11: aload_2
        12: invokevirtual #337                // Method scala/Tuple2._1$mcI$sp:()I
        15: invokestatic  #343                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        18: aconst_null
        19: invokespecial #346                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        22: goto          49
        25: new           #334                // class scala/Tuple2
        28: dup
        29: aload_2
        30: invokevirtual #337                // Method scala/Tuple2._1$mcI$sp:()I
        33: invokestatic  #343                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        36: aload_1
        37: aload_2
        38: invokevirtual #349                // Method scala/Tuple2._2:()Ljava/lang/Object;
        41: invokeinterface #351,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        46: invokespecial #346                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        49: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 25 /* same */
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0   t$1   Ljava/lang/Thread;
            0      50     1   f$1   Lscala/Function1;
            0      50     2     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      t$1                            final
      f$1                            final
      p                              final

  public static final scala.Tuple2 $anonfun$mParMap$2(scala.Function1, scala.Tuple2);
    descriptor: (Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #334                // class scala/Tuple2
         3: dup
         4: aload_1
         5: invokevirtual #337                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokestatic  #343                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: aload_1
        13: invokevirtual #349                // Method scala/Tuple2._2:()Ljava/lang/Object;
        16: invokeinterface #351,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        21: invokespecial #346                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        24: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0   f$1   Lscala/Function1;
            0      25     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      f$1                            final
      p                              final

  public static final void $anonfun$mParMap$3(java.lang.Object[], scala.Tuple2);
    descriptor: ([Ljava/lang/Object;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #337                // Method scala/Tuple2._1$mcI$sp:()I
         5: aload_1
         6: invokevirtual #349                // Method scala/Tuple2._2:()Ljava/lang/Object;
         9: aastore
        10: return
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   a$1   [Ljava/lang/Object;
            0      11     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      a$1                            final
      p                              final

  public static final java.lang.Object $anonfun$mParMap$4(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #349                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final boolean $anonfun$sortWith$1(scala.Function2, java.lang.Object, java.lang.Object);
    descriptor: (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #365,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         8: checkcast     #367                // class org/sireum/B
        11: invokevirtual #370                // Method org/sireum/B.value:()Z
        14: ireturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  lt$1   Lscala/Function2;
            0      15     1    e1   Ljava/lang/Object;
            0      15     2    e2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      lt$1                           final
      e1                             final
      e2                             final

  public static final void $anonfun$sortWith$2(org.sireum.IS, java.lang.Object, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokevirtual #290                // Method org/sireum/IS.boxer:()Lorg/sireum/$internal/Boxer;
         4: aload_1
         5: aload_2
         6: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         9: checkcast     #14                 // class org/sireum/Z
        12: aload_3
        13: invokeinterface #383,  4          // InterfaceMethod org/sireum/$internal/Boxer.store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
        18: aload_2
        19: aload_2
        20: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        23: checkcast     #14                 // class org/sireum/Z
        26: invokeinterface #386,  1          // InterfaceMethod org/sireum/Z.increase:()Lorg/sireum/Z;
        31: putfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        34: return
      LineNumberTable:
        line 55: 0
        line 56: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   s$1   Lorg/sireum/IS;
            0      35     1   a$2   Ljava/lang/Object;
            0      35     2   i$1   Lscala/runtime/ObjectRef;
            0      35     3     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$1                            final
      a$2                            final
      i$1                            final
      e                              final

  private org.sireum.ops.ISOps_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #387                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/ISOps_Ext$;

  public static final java.lang.Object $anonfun$mParMap$3$adapted(java.lang.Object[], scala.Tuple2);
    descriptor: ([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #389                // Method $anonfun$mParMap$3:([Ljava/lang/Object;Lscala/Tuple2;)V
         5: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   a$1   [Ljava/lang/Object;
            0       9     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      a$1                            final
      p                              final

  public static final java.lang.Object $anonfun$sortWith$1$adapted(scala.Function2, java.lang.Object, java.lang.Object);
    descriptor: (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #397                // Method $anonfun$sortWith$1:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: invokestatic  #401                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  lt$1   Lscala/Function2;
            0      10     1    e1   Ljava/lang/Object;
            0      10     2    e2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      lt$1                           final
      e1                             final
      e2                             final

  public static final java.lang.Object $anonfun$sortWith$2$adapted(org.sireum.IS, java.lang.Object, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #403                // Method $anonfun$sortWith$2:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         7: getstatic     #395                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   s$1   Lorg/sireum/IS;
            0      11     1   a$2   Ljava/lang/Object;
            0      11     2   i$1   Lscala/runtime/ObjectRef;
            0      11     3     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$1                            final
      a$2                            final
      i$1                            final
      e                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #415,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
SourceFile: "SOps_Ext.scala"
BootstrapMethods:
  0: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #152 (Ljava/lang/Object;)Ljava/lang/Object;
      #157 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$1:(Ljava/lang/Thread;Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #159 (Lscala/Tuple2;)Lscala/Tuple2;
      #160 5
      #161 1
      #159 (Lscala/Tuple2;)Lscala/Tuple2;
  1: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #152 (Ljava/lang/Object;)Ljava/lang/Object;
      #187 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$2:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #159 (Lscala/Tuple2;)Lscala/Tuple2;
      #160 5
      #161 1
      #159 (Lscala/Tuple2;)Lscala/Tuple2;
  2: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #152 (Ljava/lang/Object;)Ljava/lang/Object;
      #210 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$3$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #212 (Lscala/Tuple2;)Ljava/lang/Object;
      #160 5
      #161 1
      #212 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #152 (Ljava/lang/Object;)Ljava/lang/Object;
      #228 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$4:(Lscala/Tuple2;)Ljava/lang/Object;
      #212 (Lscala/Tuple2;)Ljava/lang/Object;
      #160 5
      #161 1
      #212 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #275 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #280 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$1$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #275 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #161 1
  5: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #152 (Ljava/lang/Object;)Ljava/lang/Object;
      #314 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$2$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #152 (Ljava/lang/Object;)Ljava/lang/Object;
      #161 1
  6: #412 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #157 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$1:(Ljava/lang/Thread;Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #187 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$2:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #210 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$3$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #228 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$mParMap$4:(Lscala/Tuple2;)Ljava/lang/Object;
      #280 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$1$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #314 REF_invokeStatic org/sireum/ops/ISOps_Ext$.$anonfun$sortWith$2$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 01 00 0F 00 99 00 9A 01 00 B7 00 B8 01 01 61
   01 62 01 00 CE 00 CF 01 00 E1 00 D3 01 01 65 01
   66 01 01 14 01 15 01 01 73 01 74 01 01 36 01 37
   01 00 19 00 18 01 00 12 00 27 01 00 2B 00 2C 01
   01 0B 01 0C 01 00 14 00 29 01 01 0E 01 0F 01
  Scala: length = 0x0 (unknown attribute)

