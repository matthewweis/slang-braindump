Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Coursier_Ext$.class
  Last modified May 29, 2022; size 14111 bytes
  SHA-256 checksum 06ec2a5fe0ed21761f2271f9b5cc24e4d377636cdab40324a41372be8673cdb7
  Compiled from "Coursier_Ext.scala"
public final class org.sireum.Coursier_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Coursier_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 7, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Coursier_Ext$
    #2 = Class              #1            // org/sireum/Coursier_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Coursier_Ext.scala
    #6 = Utf8               coursier/Fetch$FetchTaskOps$
    #7 = Class              #6            // coursier/Fetch$FetchTaskOps$
    #8 = Utf8               coursier/Fetch
    #9 = Class              #8            // coursier/Fetch
   #10 = Utf8               FetchTaskOps$
   #11 = Utf8               coursier/Fetch$Result
   #12 = Class              #11           // coursier/Fetch$Result
   #13 = Utf8               Result
   #14 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #15 = Class              #14           // java/lang/invoke/MethodHandles$Lookup
   #16 = Utf8               java/lang/invoke/MethodHandles
   #17 = Class              #16           // java/lang/invoke/MethodHandles
   #18 = Utf8               Lookup
   #19 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #20 = Class              #19           // org/sireum/$internal/PackageTrait$ISZ$
   #21 = Utf8               org/sireum/$internal/PackageTrait
   #22 = Class              #21           // org/sireum/$internal/PackageTrait
   #23 = Utf8               ISZ$
   #24 = Utf8               org/sireum/CoursierClassifier$Default$
   #25 = Class              #24           // org/sireum/CoursierClassifier$Default$
   #26 = Utf8               org/sireum/CoursierClassifier
   #27 = Class              #26           // org/sireum/CoursierClassifier
   #28 = Utf8               Default$
   #29 = Utf8               org/sireum/CoursierClassifier$Javadoc$
   #30 = Class              #29           // org/sireum/CoursierClassifier$Javadoc$
   #31 = Utf8               Javadoc$
   #32 = Utf8               org/sireum/CoursierClassifier$Sources$
   #33 = Class              #32           // org/sireum/CoursierClassifier$Sources$
   #34 = Utf8               Sources$
   #35 = Utf8               org/sireum/CoursierClassifier$Tests$
   #36 = Class              #35           // org/sireum/CoursierClassifier$Tests$
   #37 = Utf8               Tests$
   #38 = Utf8               org/sireum/CoursierClassifier$Type
   #39 = Class              #38           // org/sireum/CoursierClassifier$Type
   #40 = Utf8               Type
   #41 = Utf8               org/sireum/Os$Path
   #42 = Class              #41           // org/sireum/Os$Path
   #43 = Utf8               org/sireum/Os
   #44 = Class              #43           // org/sireum/Os
   #45 = Utf8               Path
   #46 = Utf8               MODULE$
   #47 = Utf8               Lorg/sireum/Coursier_Ext$;
   #48 = Utf8               localMavenRepo
   #49 = Utf8               Lcoursier/core/Repository;
   #50 = Utf8               sonatypeReleaseRepo
   #51 = Utf8               scalaVersion
   #52 = Utf8               Ljava/lang/String;
   #53 = Utf8               cacheOpt
   #54 = Utf8               Lorg/sireum/Option;
   #55 = Utf8               Lorg/sireum/Option<Lorg/sireum/Os$Path;>;
   #56 = Utf8               mavenRepoUrls
   #57 = Utf8               Lorg/sireum/IS;
   #58 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
   #59 = Utf8               repositories
   #60 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lcoursier/core/Repository;>;
   #61 = Utf8               <clinit>
   #62 = Utf8               ()V
   #63 = Utf8               <init>
   #64 = NameAndType        #63:#62       // "<init>":()V
   #65 = Methodref          #2.#64        // org/sireum/Coursier_Ext$."<init>":()V
   #66 = NameAndType        #46:#47       // MODULE$:Lorg/sireum/Coursier_Ext$;
   #67 = Fieldref           #2.#66        // org/sireum/Coursier_Ext$.MODULE$:Lorg/sireum/Coursier_Ext$;
   #68 = Utf8               coursier/package$
   #69 = Class              #68           // coursier/package$
   #70 = Utf8               Lcoursier/package$;
   #71 = NameAndType        #46:#70       // MODULE$:Lcoursier/package$;
   #72 = Fieldref           #69.#71       // coursier/package$.MODULE$:Lcoursier/package$;
   #73 = Utf8               MavenRepository
   #74 = Utf8               ()Lcoursier/maven/MavenRepository$;
   #75 = NameAndType        #73:#74       // MavenRepository:()Lcoursier/maven/MavenRepository$;
   #76 = Methodref          #69.#75       // coursier/package$.MavenRepository:()Lcoursier/maven/MavenRepository$;
   #77 = Utf8               org/sireum/Os$
   #78 = Class              #77           // org/sireum/Os$
   #79 = Utf8               Lorg/sireum/Os$;
   #80 = NameAndType        #46:#79       // MODULE$:Lorg/sireum/Os$;
   #81 = Fieldref           #78.#80       // org/sireum/Os$.MODULE$:Lorg/sireum/Os$;
   #82 = Utf8               home
   #83 = Utf8               ()Lorg/sireum/Os$Path;
   #84 = NameAndType        #82:#83       // home:()Lorg/sireum/Os$Path;
   #85 = Methodref          #78.#84       // org/sireum/Os$.home:()Lorg/sireum/Os$Path;
   #86 = Utf8               org/sireum/String$
   #87 = Class              #86           // org/sireum/String$
   #88 = Utf8               Lorg/sireum/String$;
   #89 = NameAndType        #46:#88       // MODULE$:Lorg/sireum/String$;
   #90 = Fieldref           #87.#89       // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #91 = Utf8               .m2
   #92 = String             #91           // .m2
   #93 = Utf8               apply
   #94 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #95 = NameAndType        #93:#94       // apply:(Ljava/lang/String;)Ljava/lang/String;
   #96 = Methodref          #87.#95       // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
   #97 = Utf8               $div
   #98 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Path;
   #99 = NameAndType        #97:#98       // $div:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #100 = InterfaceMethodref #42.#99       // org/sireum/Os$Path.$div:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #101 = Utf8               repository
  #102 = String             #101          // repository
  #103 = Utf8               toUri
  #104 = Utf8               ()Ljava/lang/String;
  #105 = NameAndType        #103:#104     // toUri:()Ljava/lang/String;
  #106 = InterfaceMethodref #42.#105      // org/sireum/Os$Path.toUri:()Ljava/lang/String;
  #107 = Utf8               coursier/maven/MavenRepository$
  #108 = Class              #107          // coursier/maven/MavenRepository$
  #109 = Utf8               (Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #110 = NameAndType        #93:#109      // apply:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #111 = Methodref          #108.#110     // coursier/maven/MavenRepository$.apply:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #112 = NameAndType        #48:#49       // localMavenRepo:Lcoursier/core/Repository;
  #113 = Fieldref           #2.#112       // org/sireum/Coursier_Ext$.localMavenRepo:Lcoursier/core/Repository;
  #114 = Utf8               coursier/Repositories$
  #115 = Class              #114          // coursier/Repositories$
  #116 = Utf8               Lcoursier/Repositories$;
  #117 = NameAndType        #46:#116      // MODULE$:Lcoursier/Repositories$;
  #118 = Fieldref           #115.#117     // coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
  #119 = Utf8               releases
  #120 = String             #119          // releases
  #121 = Utf8               sonatype
  #122 = NameAndType        #121:#109     // sonatype:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #123 = Methodref          #115.#122     // coursier/Repositories$.sonatype:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #124 = NameAndType        #50:#49       // sonatypeReleaseRepo:Lcoursier/core/Repository;
  #125 = Fieldref           #2.#124       // org/sireum/Coursier_Ext$.sonatypeReleaseRepo:Lcoursier/core/Repository;
  #126 = Utf8               scala/util/Properties$
  #127 = Class              #126          // scala/util/Properties$
  #128 = Utf8               Lscala/util/Properties$;
  #129 = NameAndType        #46:#128      // MODULE$:Lscala/util/Properties$;
  #130 = Fieldref           #127.#129     // scala/util/Properties$.MODULE$:Lscala/util/Properties$;
  #131 = Utf8               versionNumberString
  #132 = NameAndType        #131:#104     // versionNumberString:()Ljava/lang/String;
  #133 = Methodref          #127.#132     // scala/util/Properties$.versionNumberString:()Ljava/lang/String;
  #134 = NameAndType        #51:#52       // scalaVersion:Ljava/lang/String;
  #135 = Fieldref           #2.#134       // org/sireum/Coursier_Ext$.scalaVersion:Ljava/lang/String;
  #136 = Utf8               org/sireum/None$
  #137 = Class              #136          // org/sireum/None$
  #138 = Utf8               Lorg/sireum/None$;
  #139 = NameAndType        #46:#138      // MODULE$:Lorg/sireum/None$;
  #140 = Fieldref           #137.#139     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #141 = Utf8               ()Lorg/sireum/None;
  #142 = NameAndType        #93:#141      // apply:()Lorg/sireum/None;
  #143 = Methodref          #137.#142     // org/sireum/None$.apply:()Lorg/sireum/None;
  #144 = NameAndType        #53:#54       // cacheOpt:Lorg/sireum/Option;
  #145 = Fieldref           #2.#144       // org/sireum/Coursier_Ext$.cacheOpt:Lorg/sireum/Option;
  #146 = Utf8               org/sireum/package$
  #147 = Class              #146          // org/sireum/package$
  #148 = Utf8               Lorg/sireum/package$;
  #149 = NameAndType        #46:#148      // MODULE$:Lorg/sireum/package$;
  #150 = Fieldref           #147.#149     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #151 = Utf8               ISZ
  #152 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #153 = NameAndType        #151:#152     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #154 = Methodref          #147.#153     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #155 = Utf8               scala/collection/immutable/Nil$
  #156 = Class              #155          // scala/collection/immutable/Nil$
  #157 = Utf8               Lscala/collection/immutable/Nil$;
  #158 = NameAndType        #46:#157      // MODULE$:Lscala/collection/immutable/Nil$;
  #159 = Fieldref           #156.#158     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #160 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #161 = NameAndType        #93:#160      // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #162 = Methodref          #20.#161      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #163 = NameAndType        #56:#57       // mavenRepoUrls:Lorg/sireum/IS;
  #164 = Fieldref           #2.#163       // org/sireum/Coursier_Ext$.mavenRepoUrls:Lorg/sireum/IS;
  #165 = Utf8               scala/runtime/ScalaRunTime$
  #166 = Class              #165          // scala/runtime/ScalaRunTime$
  #167 = Utf8               Lscala/runtime/ScalaRunTime$;
  #168 = NameAndType        #46:#167      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #169 = Fieldref           #166.#168     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #170 = Utf8               coursier/core/Repository
  #171 = Class              #170          // coursier/core/Repository
  #172 = Utf8               ()Lcoursier/core/Repository;
  #173 = NameAndType        #48:#172      // localMavenRepo:()Lcoursier/core/Repository;
  #174 = Methodref          #2.#173       // org/sireum/Coursier_Ext$.localMavenRepo:()Lcoursier/core/Repository;
  #175 = NameAndType        #50:#172      // sonatypeReleaseRepo:()Lcoursier/core/Repository;
  #176 = Methodref          #2.#175       // org/sireum/Coursier_Ext$.sonatypeReleaseRepo:()Lcoursier/core/Repository;
  #177 = Utf8               jitpack
  #178 = Utf8               ()Lcoursier/maven/MavenRepository;
  #179 = NameAndType        #177:#178     // jitpack:()Lcoursier/maven/MavenRepository;
  #180 = Methodref          #115.#179     // coursier/Repositories$.jitpack:()Lcoursier/maven/MavenRepository;
  #181 = Utf8               [Ljava/lang/Object;
  #182 = Class              #181          // "[Ljava/lang/Object;"
  #183 = Utf8               wrapRefArray
  #184 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #185 = NameAndType        #183:#184     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #186 = Methodref          #166.#185     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #187 = NameAndType        #59:#57       // repositories:Lorg/sireum/IS;
  #188 = Fieldref           #2.#187       // org/sireum/Coursier_Ext$.repositories:Lorg/sireum/IS;
  #189 = Utf8               this
  #190 = Utf8               scalaVersion_$eq
  #191 = Utf8               (Ljava/lang/String;)V
  #192 = Utf8               x$1
  #193 = Utf8               ()Lorg/sireum/Option;
  #194 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/Os$Path;>;
  #195 = Utf8               cacheOpt_$eq
  #196 = Utf8               (Lorg/sireum/Option;)V
  #197 = Utf8               (Lorg/sireum/Option<Lorg/sireum/Os$Path;>;)V
  #198 = Utf8               ()Lorg/sireum/IS;
  #199 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
  #200 = Utf8               mavenRepoUrls_$eq
  #201 = Utf8               (Lorg/sireum/IS;)V
  #202 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
  #203 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lcoursier/core/Repository;>;
  #204 = Utf8               toDeps
  #205 = Utf8               (Lorg/sireum/IS;)Lscala/collection/immutable/Seq;
  #206 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
  #207 = Utf8               deps
  #208 = Utf8               coursier/parse/DependencyParser$
  #209 = Class              #208          // coursier/parse/DependencyParser$
  #210 = Utf8               Lcoursier/parse/DependencyParser$;
  #211 = NameAndType        #46:#210      // MODULE$:Lcoursier/parse/DependencyParser$;
  #212 = Fieldref           #209.#211     // coursier/parse/DependencyParser$.MODULE$:Lcoursier/parse/DependencyParser$;
  #213 = Utf8               org/sireum/IS
  #214 = Class              #213          // org/sireum/IS
  #215 = Utf8               elements
  #216 = Utf8               ()Lscala/collection/immutable/Seq;
  #217 = NameAndType        #215:#216     // elements:()Lscala/collection/immutable/Seq;
  #218 = Methodref          #214.#217     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #219 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #220 = MethodType         #219          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #221 = Utf8               $anonfun$toDeps$1$adapted
  #222 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #223 = NameAndType        #221:#222     // $anonfun$toDeps$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #224 = Methodref          #2.#223       // org/sireum/Coursier_Ext$.$anonfun$toDeps$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #225 = MethodHandle       6:#224        // REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$toDeps$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #226 = MethodType         #222          //  (Ljava/lang/Object;)Ljava/lang/String;
  #227 = Integer            5
  #228 = Integer            1
  #229 = Utf8               java/lang/invoke/LambdaMetafactory
  #230 = Class              #229          // java/lang/invoke/LambdaMetafactory
  #231 = Utf8               altMetafactory
  #232 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #233 = NameAndType        #231:#232     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #234 = Methodref          #230.#233     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #235 = MethodHandle       6:#234        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #236 = Utf8               ()Lscala/Function1;
  #237 = NameAndType        #93:#236      // apply:()Lscala/Function1;
  #238 = InvokeDynamic      #0:#237       // #0:apply:()Lscala/Function1;
  #239 = Utf8               scala/collection/immutable/Seq
  #240 = Class              #239          // scala/collection/immutable/Seq
  #241 = Utf8               map
  #242 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #243 = NameAndType        #241:#242     // map:(Lscala/Function1;)Ljava/lang/Object;
  #244 = InterfaceMethodref #240.#243     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #245 = NameAndType        #51:#104      // scalaVersion:()Ljava/lang/String;
  #246 = Methodref          #2.#245       // org/sireum/Coursier_Ext$.scalaVersion:()Ljava/lang/String;
  #247 = Utf8               dependencies
  #248 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #249 = NameAndType        #247:#248     // dependencies:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #250 = Methodref          #209.#249     // coursier/parse/DependencyParser$.dependencies:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #251 = Utf8               coursier/util/ValidationNel
  #252 = Class              #251          // coursier/util/ValidationNel
  #253 = Utf8               either
  #254 = Utf8               ()Lscala/util/Either;
  #255 = NameAndType        #253:#254     // either:()Lscala/util/Either;
  #256 = Methodref          #252.#255     // coursier/util/ValidationNel.either:()Lscala/util/Either;
  #257 = Utf8               ()Ljava/lang/Object;
  #258 = MethodType         #257          //  ()Ljava/lang/Object;
  #259 = Utf8               $anonfun$toDeps$2
  #260 = Utf8               (Lorg/sireum/IS;)Lscala/runtime/Nothing$;
  #261 = NameAndType        #259:#260     // $anonfun$toDeps$2:(Lorg/sireum/IS;)Lscala/runtime/Nothing$;
  #262 = Methodref          #2.#261       // org/sireum/Coursier_Ext$.$anonfun$toDeps$2:(Lorg/sireum/IS;)Lscala/runtime/Nothing$;
  #263 = MethodHandle       6:#262        // REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$toDeps$2:(Lorg/sireum/IS;)Lscala/runtime/Nothing$;
  #264 = Utf8               ()Lscala/runtime/Nothing$;
  #265 = MethodType         #264          //  ()Lscala/runtime/Nothing$;
  #266 = Utf8               (Lorg/sireum/IS;)Lscala/Function0;
  #267 = NameAndType        #93:#266      // apply:(Lorg/sireum/IS;)Lscala/Function0;
  #268 = InvokeDynamic      #1:#267       // #1:apply:(Lorg/sireum/IS;)Lscala/Function0;
  #269 = Utf8               scala/util/Either
  #270 = Class              #269          // scala/util/Either
  #271 = Utf8               getOrElse
  #272 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #273 = NameAndType        #271:#272     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #274 = Methodref          #270.#273     // scala/util/Either.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #275 = Utf8               setScalaVersion
  #276 = Utf8               version
  #277 = NameAndType        #190:#191     // scalaVersion_$eq:(Ljava/lang/String;)V
  #278 = Methodref          #2.#277       // org/sireum/Coursier_Ext$.scalaVersion_$eq:(Ljava/lang/String;)V
  #279 = Utf8               setCache
  #280 = Utf8               pathOpt
  #281 = NameAndType        #195:#196     // cacheOpt_$eq:(Lorg/sireum/Option;)V
  #282 = Methodref          #2.#281       // org/sireum/Coursier_Ext$.cacheOpt_$eq:(Lorg/sireum/Option;)V
  #283 = Utf8               addMavenRepositories
  #284 = Utf8               urls
  #285 = Utf8               org/sireum/HashSSet$
  #286 = Class              #285          // org/sireum/HashSSet$
  #287 = Utf8               Lorg/sireum/HashSSet$;
  #288 = NameAndType        #46:#287      // MODULE$:Lorg/sireum/HashSSet$;
  #289 = Fieldref           #286.#288     // org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
  #290 = NameAndType        #56:#198      // mavenRepoUrls:()Lorg/sireum/IS;
  #291 = Methodref          #2.#290       // org/sireum/Coursier_Ext$.mavenRepoUrls:()Lorg/sireum/IS;
  #292 = Utf8               $plus$plus
  #293 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #294 = NameAndType        #292:#293     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #295 = Methodref          #286.#294     // org/sireum/HashSSet$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #296 = Utf8               org/sireum/HashSSet
  #297 = Class              #296          // org/sireum/HashSSet
  #298 = Methodref          #297.#294     // org/sireum/HashSSet.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #299 = NameAndType        #215:#198     // elements:()Lorg/sireum/IS;
  #300 = Methodref          #297.#299     // org/sireum/HashSSet.elements:()Lorg/sireum/IS;
  #301 = NameAndType        #200:#201     // mavenRepoUrls_$eq:(Lorg/sireum/IS;)V
  #302 = Methodref          #2.#301       // org/sireum/Coursier_Ext$.mavenRepoUrls_$eq:(Lorg/sireum/IS;)V
  #303 = Utf8               setMavenRepositories
  #304 = Utf8               fetch
  #305 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
  #306 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/CoursierFileInfo;>;
  #307 = Utf8               Lorg/sireum/CoursierClassifier$Default$;
  #308 = NameAndType        #46:#307      // MODULE$:Lorg/sireum/CoursierClassifier$Default$;
  #309 = Fieldref           #25.#308      // org/sireum/CoursierClassifier$Default$.MODULE$:Lorg/sireum/CoursierClassifier$Default$;
  #310 = Utf8               fetchClassifiers
  #311 = Utf8               (Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/IS;
  #312 = NameAndType        #310:#311     // fetchClassifiers:(Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/IS;
  #313 = Methodref          #2.#312       // org/sireum/Coursier_Ext$.fetchClassifiers:(Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/IS;
  #314 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/CoursierClassifier$Type;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/CoursierFileInfo;>;
  #315 = Utf8               cls
  #316 = Utf8               coursier/Fetch$
  #317 = Class              #316          // coursier/Fetch$
  #318 = Utf8               Lcoursier/Fetch$;
  #319 = NameAndType        #46:#318      // MODULE$:Lcoursier/Fetch$;
  #320 = Fieldref           #317.#319     // coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
  #321 = Utf8               ()Lcoursier/Fetch;
  #322 = NameAndType        #93:#321      // apply:()Lcoursier/Fetch;
  #323 = Methodref          #317.#322     // coursier/Fetch$.apply:()Lcoursier/Fetch;
  #324 = NameAndType        #204:#205     // toDeps:(Lorg/sireum/IS;)Lscala/collection/immutable/Seq;
  #325 = Methodref          #2.#324       // org/sireum/Coursier_Ext$.toDeps:(Lorg/sireum/IS;)Lscala/collection/immutable/Seq;
  #326 = Utf8               addDependencies
  #327 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #328 = NameAndType        #326:#327     // addDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #329 = Methodref          #9.#328       // coursier/Fetch.addDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #330 = NameAndType        #59:#198      // repositories:()Lorg/sireum/IS;
  #331 = Methodref          #2.#330       // org/sireum/Coursier_Ext$.repositories:()Lorg/sireum/IS;
  #332 = Utf8               $anonfun$fetchClassifiers$1$adapted
  #333 = Utf8               (Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
  #334 = NameAndType        #332:#333     // $anonfun$fetchClassifiers$1$adapted:(Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
  #335 = Methodref          #2.#334       // org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$1$adapted:(Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
  #336 = MethodHandle       6:#335        // REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$1$adapted:(Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
  #337 = MethodType         #333          //  (Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
  #338 = InvokeDynamic      #2:#237       // #2:apply:()Lscala/Function1;
  #339 = Utf8               scala/collection/IterableOnce
  #340 = Class              #339          // scala/collection/IterableOnce
  #341 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #342 = NameAndType        #292:#341     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #343 = InterfaceMethodref #240.#342     // scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #344 = Utf8               withRepositories
  #345 = NameAndType        #344:#327     // withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #346 = Methodref          #9.#345       // coursier/Fetch.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #347 = Utf8               scala/runtime/ObjectRef
  #348 = Class              #347          // scala/runtime/ObjectRef
  #349 = Utf8               create
  #350 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #351 = NameAndType        #349:#350     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #352 = Methodref          #348.#351     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #353 = Utf8               $anonfun$fetchClassifiers$2$adapted
  #354 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
  #355 = NameAndType        #353:#354     // $anonfun$fetchClassifiers$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
  #356 = Methodref          #2.#355       // org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
  #357 = MethodHandle       6:#356        // REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
  #358 = Utf8               (Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
  #359 = MethodType         #358          //  (Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
  #360 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #361 = NameAndType        #93:#360      // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #362 = InvokeDynamic      #3:#361       // #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #363 = Utf8               foreach
  #364 = Utf8               (Lscala/Function1;)V
  #365 = NameAndType        #363:#364     // foreach:(Lscala/Function1;)V
  #366 = InterfaceMethodref #240.#365     // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
  #367 = NameAndType        #53:#193      // cacheOpt:()Lorg/sireum/Option;
  #368 = Methodref          #2.#367       // org/sireum/Coursier_Ext$.cacheOpt:()Lorg/sireum/Option;
  #369 = Utf8               org/sireum/Some
  #370 = Class              #369          // org/sireum/Some
  #371 = Utf8               org/sireum/Some$
  #372 = Class              #371          // org/sireum/Some$
  #373 = Utf8               Lorg/sireum/Some$;
  #374 = NameAndType        #46:#373      // MODULE$:Lorg/sireum/Some$;
  #375 = Fieldref           #372.#374     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #376 = Utf8               unapply
  #377 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #378 = NameAndType        #376:#377     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #379 = Methodref          #372.#378     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #380 = Utf8               scala/Some
  #381 = Class              #380          // scala/Some
  #382 = Utf8               isEmpty
  #383 = Utf8               ()Z
  #384 = NameAndType        #382:#383     // isEmpty:()Z
  #385 = Methodref          #381.#384     // scala/Some.isEmpty:()Z
  #386 = Utf8               get
  #387 = NameAndType        #386:#257     // get:()Ljava/lang/Object;
  #388 = Methodref          #381.#387     // scala/Some.get:()Ljava/lang/Object;
  #389 = Utf8               elem
  #390 = Utf8               Ljava/lang/Object;
  #391 = NameAndType        #389:#390     // elem:Ljava/lang/Object;
  #392 = Fieldref           #348.#391     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #393 = Utf8               coursier/cache/FileCache$
  #394 = Class              #393          // coursier/cache/FileCache$
  #395 = Utf8               Lcoursier/cache/FileCache$;
  #396 = NameAndType        #46:#395      // MODULE$:Lcoursier/cache/FileCache$;
  #397 = Fieldref           #394.#396     // coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
  #398 = Utf8               apply$default$1
  #399 = Utf8               ()Lcoursier/util/Sync;
  #400 = NameAndType        #398:#399     // apply$default$1:()Lcoursier/util/Sync;
  #401 = Methodref          #394.#400     // coursier/cache/FileCache$.apply$default$1:()Lcoursier/util/Sync;
  #402 = Utf8               (Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #403 = NameAndType        #93:#402      // apply:(Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #404 = Methodref          #394.#403     // coursier/cache/FileCache$.apply:(Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #405 = Utf8               string
  #406 = NameAndType        #405:#104     // string:()Ljava/lang/String;
  #407 = InterfaceMethodref #42.#406      // org/sireum/Os$Path.string:()Ljava/lang/String;
  #408 = Utf8               coursier/cache/FileCache
  #409 = Class              #408          // coursier/cache/FileCache
  #410 = Utf8               withLocation
  #411 = Utf8               (Ljava/lang/String;)Lcoursier/cache/FileCache;
  #412 = NameAndType        #410:#411     // withLocation:(Ljava/lang/String;)Lcoursier/cache/FileCache;
  #413 = Methodref          #409.#412     // coursier/cache/FileCache.withLocation:(Ljava/lang/String;)Lcoursier/cache/FileCache;
  #414 = Utf8               withCache
  #415 = Utf8               (Lcoursier/cache/Cache;)Lcoursier/Fetch;
  #416 = NameAndType        #414:#415     // withCache:(Lcoursier/cache/Cache;)Lcoursier/Fetch;
  #417 = Methodref          #9.#416       // coursier/Fetch.withCache:(Lcoursier/cache/Cache;)Lcoursier/Fetch;
  #418 = Utf8               scala/runtime/BoxedUnit
  #419 = Class              #418          // scala/runtime/BoxedUnit
  #420 = Utf8               UNIT
  #421 = Utf8               Lscala/runtime/BoxedUnit;
  #422 = NameAndType        #420:#421     // UNIT:Lscala/runtime/BoxedUnit;
  #423 = Fieldref           #419.#422     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #424 = Utf8               FetchTaskOps
  #425 = Utf8               (Lcoursier/Fetch;)Lcoursier/Fetch;
  #426 = NameAndType        #424:#425     // FetchTaskOps:(Lcoursier/Fetch;)Lcoursier/Fetch;
  #427 = Methodref          #317.#426     // coursier/Fetch$.FetchTaskOps:(Lcoursier/Fetch;)Lcoursier/Fetch;
  #428 = Utf8               Lcoursier/Fetch$FetchTaskOps$;
  #429 = NameAndType        #46:#428      // MODULE$:Lcoursier/Fetch$FetchTaskOps$;
  #430 = Fieldref           #7.#429       // coursier/Fetch$FetchTaskOps$.MODULE$:Lcoursier/Fetch$FetchTaskOps$;
  #431 = Utf8               runResult$default$1$extension
  #432 = Utf8               (Lcoursier/Fetch;)Lscala/concurrent/ExecutionContext;
  #433 = NameAndType        #431:#432     // runResult$default$1$extension:(Lcoursier/Fetch;)Lscala/concurrent/ExecutionContext;
  #434 = Methodref          #7.#433       // coursier/Fetch$FetchTaskOps$.runResult$default$1$extension:(Lcoursier/Fetch;)Lscala/concurrent/ExecutionContext;
  #435 = Utf8               runResult$extension
  #436 = Utf8               (Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lcoursier/Fetch$Result;
  #437 = NameAndType        #435:#436     // runResult$extension:(Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lcoursier/Fetch$Result;
  #438 = Methodref          #7.#437       // coursier/Fetch$FetchTaskOps$.runResult$extension:(Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lcoursier/Fetch$Result;
  #439 = Utf8               detailedArtifacts
  #440 = NameAndType        #439:#216     // detailedArtifacts:()Lscala/collection/immutable/Seq;
  #441 = Methodref          #12.#440      // coursier/Fetch$Result.detailedArtifacts:()Lscala/collection/immutable/Seq;
  #442 = Utf8               $anonfun$fetchClassifiers$3
  #443 = Utf8               (Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
  #444 = NameAndType        #442:#443     // $anonfun$fetchClassifiers$3:(Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
  #445 = Methodref          #2.#444       // org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$3:(Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
  #446 = MethodHandle       6:#445        // REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$3:(Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
  #447 = MethodType         #443          //  (Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
  #448 = InvokeDynamic      #4:#237       // #4:apply:()Lscala/Function1;
  #449 = Utf8               cache
  #450 = Utf8               Lorg/sireum/Os$Path;
  #451 = Utf8               qual$1
  #452 = Utf8               Lcoursier/Fetch;
  #453 = Utf8               Lscala/concurrent/ExecutionContext;
  #454 = Utf8               Lscala/runtime/ObjectRef;
  #455 = Utf8               org/sireum/Option
  #456 = Class              #455          // org/sireum/Option
  #457 = Utf8               isRuntimePublishedLocally
  #458 = Utf8               (Ljava/lang/String;)Z
  #459 = Utf8               java/lang/Throwable
  #460 = Class              #459          // java/lang/Throwable
  #461 = Utf8               org/sireum/project/DependencyManager$
  #462 = Class              #461          // org/sireum/project/DependencyManager$
  #463 = Utf8               Lorg/sireum/project/DependencyManager$;
  #464 = NameAndType        #46:#463      // MODULE$:Lorg/sireum/project/DependencyManager$;
  #465 = Fieldref           #462.#464     // org/sireum/project/DependencyManager$.MODULE$:Lorg/sireum/project/DependencyManager$;
  #466 = Utf8               libraryKey
  #467 = NameAndType        #466:#104     // libraryKey:()Ljava/lang/String;
  #468 = Methodref          #462.#467     // org/sireum/project/DependencyManager$.libraryKey:()Ljava/lang/String;
  #469 = Utf8               org/sireum/String
  #470 = Class              #469          // org/sireum/String
  #471 = Utf8               java/lang/StringBuilder
  #472 = Class              #471          // java/lang/StringBuilder
  #473 = Integer            0
  #474 = Utf8               (I)V
  #475 = NameAndType        #63:#474      // "<init>":(I)V
  #476 = Methodref          #472.#475     // java/lang/StringBuilder."<init>":(I)V
  #477 = NameAndType        #63:#191      // "<init>":(Ljava/lang/String;)V
  #478 = Methodref          #470.#477     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #479 = Utf8               append
  #480 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #481 = NameAndType        #479:#480     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #482 = Methodref          #472.#481     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #483 = Utf8               toString
  #484 = NameAndType        #483:#104     // toString:()Ljava/lang/String;
  #485 = Methodref          #472.#484     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #486 = Utf8               genericWrapArray
  #487 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #488 = NameAndType        #486:#487     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #489 = Methodref          #166.#488     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #490 = Utf8               scala/package$
  #491 = Class              #490          // scala/package$
  #492 = Utf8               Lscala/package$;
  #493 = NameAndType        #46:#492      // MODULE$:Lscala/package$;
  #494 = Fieldref           #491.#493     // scala/package$.MODULE$:Lscala/package$;
  #495 = Utf8               Seq
  #496 = Utf8               ()Lscala/collection/immutable/Seq$;
  #497 = NameAndType        #495:#496     // Seq:()Lscala/collection/immutable/Seq$;
  #498 = Methodref          #491.#497     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #499 = Utf8               scala/collection/immutable/Seq$
  #500 = Class              #499          // scala/collection/immutable/Seq$
  #501 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #502 = NameAndType        #93:#501      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #503 = Methodref          #500.#502     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #504 = Utf8               withMainArtifacts
  #505 = NameAndType        #504:#321     // withMainArtifacts:()Lcoursier/Fetch;
  #506 = Methodref          #9.#505       // coursier/Fetch.withMainArtifacts:()Lcoursier/Fetch;
  #507 = Utf8               run$default$1$extension
  #508 = NameAndType        #507:#432     // run$default$1$extension:(Lcoursier/Fetch;)Lscala/concurrent/ExecutionContext;
  #509 = Methodref          #7.#508       // coursier/Fetch$FetchTaskOps$.run$default$1$extension:(Lcoursier/Fetch;)Lscala/concurrent/ExecutionContext;
  #510 = Utf8               run$extension
  #511 = Utf8               (Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lscala/collection/immutable/Seq;
  #512 = NameAndType        #510:#511     // run$extension:(Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lscala/collection/immutable/Seq;
  #513 = Methodref          #7.#512       // coursier/Fetch$FetchTaskOps$.run$extension:(Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lscala/collection/immutable/Seq;
  #514 = Utf8               T
  #515 = NameAndType        #514:#383     // T:()Z
  #516 = Methodref          #147.#515     // org/sireum/package$.T:()Z
  #517 = Utf8               F
  #518 = NameAndType        #517:#383     // F:()Z
  #519 = Methodref          #147.#518     // org/sireum/package$.F:()Z
  #520 = Utf8               libKey
  #521 = Utf8               java/lang/String
  #522 = Class              #521          // java/lang/String
  #523 = Utf8               $anonfun$toDeps$1
  #524 = Utf8               deps$1
  #525 = Integer            22
  #526 = Utf8               Invalid dependencies:
  #527 = String             #526          // Invalid dependencies:
  #528 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #529 = NameAndType        #479:#528     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #530 = Methodref          #472.#529     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #531 = Utf8               halt
  #532 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #533 = NameAndType        #531:#532     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #534 = Methodref          #147.#533     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #535 = Utf8               $anonfun$fetchClassifiers$1
  #536 = Utf8               url
  #537 = Utf8               $anonfun$fetchClassifiers$2
  #538 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)V
  #539 = Utf8               fetch$1
  #540 = Utf8               cl
  #541 = Utf8               equals
  #542 = Utf8               (Ljava/lang/Object;)Z
  #543 = NameAndType        #541:#542     // equals:(Ljava/lang/Object;)Z
  #544 = Methodref          #4.#543       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #545 = Utf8               Lorg/sireum/CoursierClassifier$Javadoc$;
  #546 = NameAndType        #46:#545      // MODULE$:Lorg/sireum/CoursierClassifier$Javadoc$;
  #547 = Fieldref           #30.#546      // org/sireum/CoursierClassifier$Javadoc$.MODULE$:Lorg/sireum/CoursierClassifier$Javadoc$;
  #548 = Utf8               coursier/core/Classifier
  #549 = Class              #548          // coursier/core/Classifier
  #550 = Utf8               Classifier
  #551 = Utf8               ()Lcoursier/core/Classifier$;
  #552 = NameAndType        #550:#551     // Classifier:()Lcoursier/core/Classifier$;
  #553 = Methodref          #69.#552      // coursier/package$.Classifier:()Lcoursier/core/Classifier$;
  #554 = Utf8               coursier/core/Classifier$
  #555 = Class              #554          // coursier/core/Classifier$
  #556 = Utf8               javadoc
  #557 = NameAndType        #556:#104     // javadoc:()Ljava/lang/String;
  #558 = Methodref          #555.#557     // coursier/core/Classifier$.javadoc:()Ljava/lang/String;
  #559 = Methodref          #549.#477     // coursier/core/Classifier."<init>":(Ljava/lang/String;)V
  #560 = Utf8               addClassifiers
  #561 = NameAndType        #560:#327     // addClassifiers:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #562 = Methodref          #9.#561       // coursier/Fetch.addClassifiers:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #563 = Utf8               Lorg/sireum/CoursierClassifier$Sources$;
  #564 = NameAndType        #46:#563      // MODULE$:Lorg/sireum/CoursierClassifier$Sources$;
  #565 = Fieldref           #33.#564      // org/sireum/CoursierClassifier$Sources$.MODULE$:Lorg/sireum/CoursierClassifier$Sources$;
  #566 = Utf8               sources
  #567 = NameAndType        #566:#104     // sources:()Ljava/lang/String;
  #568 = Methodref          #555.#567     // coursier/core/Classifier$.sources:()Ljava/lang/String;
  #569 = Utf8               Lorg/sireum/CoursierClassifier$Tests$;
  #570 = NameAndType        #46:#569      // MODULE$:Lorg/sireum/CoursierClassifier$Tests$;
  #571 = Fieldref           #36.#570      // org/sireum/CoursierClassifier$Tests$.MODULE$:Lorg/sireum/CoursierClassifier$Tests$;
  #572 = Utf8               tests
  #573 = NameAndType        #572:#104     // tests:()Ljava/lang/String;
  #574 = Methodref          #555.#573     // coursier/core/Classifier$.tests:()Ljava/lang/String;
  #575 = Utf8               scala/MatchError
  #576 = Class              #575          // scala/MatchError
  #577 = Utf8               (Ljava/lang/Object;)V
  #578 = NameAndType        #63:#577      // "<init>":(Ljava/lang/Object;)V
  #579 = Methodref          #576.#578     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #580 = Utf8               Lorg/sireum/CoursierClassifier$Type;
  #581 = Utf8               q
  #582 = Utf8               org/sireum/CoursierFileInfo$
  #583 = Class              #582          // org/sireum/CoursierFileInfo$
  #584 = Utf8               Lorg/sireum/CoursierFileInfo$;
  #585 = NameAndType        #46:#584      // MODULE$:Lorg/sireum/CoursierFileInfo$;
  #586 = Fieldref           #583.#585     // org/sireum/CoursierFileInfo$.MODULE$:Lorg/sireum/CoursierFileInfo$;
  #587 = Utf8               scala/Tuple4
  #588 = Class              #587          // scala/Tuple4
  #589 = Utf8               _1
  #590 = NameAndType        #589:#257     // _1:()Ljava/lang/Object;
  #591 = Methodref          #588.#590     // scala/Tuple4._1:()Ljava/lang/Object;
  #592 = Utf8               coursier/core/Dependency
  #593 = Class              #592          // coursier/core/Dependency
  #594 = Utf8               module
  #595 = Utf8               ()Lcoursier/core/Module;
  #596 = NameAndType        #594:#595     // module:()Lcoursier/core/Module;
  #597 = Methodref          #593.#596     // coursier/core/Dependency.module:()Lcoursier/core/Module;
  #598 = Utf8               coursier/core/Module
  #599 = Class              #598          // coursier/core/Module
  #600 = Utf8               organization
  #601 = NameAndType        #600:#104     // organization:()Ljava/lang/String;
  #602 = Methodref          #599.#601     // coursier/core/Module.organization:()Ljava/lang/String;
  #603 = Utf8               name
  #604 = NameAndType        #603:#104     // name:()Ljava/lang/String;
  #605 = Methodref          #599.#604     // coursier/core/Module.name:()Ljava/lang/String;
  #606 = NameAndType        #276:#104     // version:()Ljava/lang/String;
  #607 = Methodref          #593.#606     // coursier/core/Dependency.version:()Ljava/lang/String;
  #608 = Utf8               _4
  #609 = NameAndType        #608:#257     // _4:()Ljava/lang/Object;
  #610 = Methodref          #588.#609     // scala/Tuple4._4:()Ljava/lang/Object;
  #611 = Utf8               java/io/File
  #612 = Class              #611          // java/io/File
  #613 = Utf8               getCanonicalPath
  #614 = NameAndType        #613:#104     // getCanonicalPath:()Ljava/lang/String;
  #615 = Methodref          #612.#614     // java/io/File.getCanonicalPath:()Ljava/lang/String;
  #616 = Utf8               path
  #617 = NameAndType        #616:#98      // path:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #618 = Methodref          #78.#617      // org/sireum/Os$.path:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #619 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Os$Path;)Lorg/sireum/CoursierFileInfo;
  #620 = NameAndType        #93:#619      // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Os$Path;)Lorg/sireum/CoursierFileInfo;
  #621 = Methodref          #583.#620     // org/sireum/CoursierFileInfo$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Os$Path;)Lorg/sireum/CoursierFileInfo;
  #622 = Utf8               Lscala/Tuple4;
  #623 = Methodref          #4.#64        // java/lang/Object."<init>":()V
  #624 = Utf8               value
  #625 = NameAndType        #624:#104     // value:()Ljava/lang/String;
  #626 = Methodref          #470.#625     // org/sireum/String.value:()Ljava/lang/String;
  #627 = NameAndType        #523:#94      // $anonfun$toDeps$1:(Ljava/lang/String;)Ljava/lang/String;
  #628 = Methodref          #2.#627       // org/sireum/Coursier_Ext$.$anonfun$toDeps$1:(Ljava/lang/String;)Ljava/lang/String;
  #629 = NameAndType        #535:#109     // $anonfun$fetchClassifiers$1:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #630 = Methodref          #2.#629       // org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$1:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #631 = NameAndType        #537:#538     // $anonfun$fetchClassifiers$2:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)V
  #632 = Methodref          #2.#631       // org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$2:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)V
  #633 = Utf8               $deserializeLambda$
  #634 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #635 = Utf8               scala/runtime/LambdaDeserialize
  #636 = Class              #635          // scala/runtime/LambdaDeserialize
  #637 = Utf8               bootstrap
  #638 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #639 = NameAndType        #637:#638     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #640 = Methodref          #636.#639     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #641 = MethodHandle       6:#640        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #642 = Utf8               lambdaDeserialize
  #643 = NameAndType        #642:#634     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #644 = InvokeDynamic      #5:#643       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #645 = Utf8               Signature
  #646 = Utf8               Code
  #647 = Utf8               LineNumberTable
  #648 = Utf8               LocalVariableTable
  #649 = Utf8               MethodParameters
  #650 = Utf8               StackMapTable
  #651 = Utf8               InnerClasses
  #652 = Utf8               SourceFile
  #653 = Utf8               BootstrapMethods
  #654 = Utf8               ScalaInlineInfo
  #655 = Utf8               Scala
{
  public static final org.sireum.Coursier_Ext$ MODULE$;
    descriptor: Lorg/sireum/Coursier_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final coursier.core.Repository localMavenRepo;
    descriptor: Lcoursier/core/Repository;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final coursier.core.Repository sonatypeReleaseRepo;
    descriptor: Lcoursier/core/Repository;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static java.lang.String scalaVersion;
    descriptor: Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static org.sireum.Option<org.sireum.Os$Path> cacheOpt;
    descriptor: Lorg/sireum/Option;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Signature: #55                          // Lorg/sireum/Option<Lorg/sireum/Os$Path;>;

  private static org.sireum.IS<org.sireum.Z, org.sireum.String> mavenRepoUrls;
    descriptor: Lorg/sireum/IS;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Signature: #58                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private static final org.sireum.IS<org.sireum.Z, coursier.core.Repository> repositories;
    descriptor: Lorg/sireum/IS;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #60                          // Lorg/sireum/IS<Lorg/sireum/Z;Lcoursier/core/Repository;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=0, args_size=0
         0: new           #2                  // class org/sireum/Coursier_Ext$
         3: dup
         4: invokespecial #65                 // Method "<init>":()V
         7: putstatic     #67                 // Field MODULE$:Lorg/sireum/Coursier_Ext$;
        10: getstatic     #72                 // Field coursier/package$.MODULE$:Lcoursier/package$;
        13: invokevirtual #76                 // Method coursier/package$.MavenRepository:()Lcoursier/maven/MavenRepository$;
        16: getstatic     #81                 // Field org/sireum/Os$.MODULE$:Lorg/sireum/Os$;
        19: invokevirtual #85                 // Method org/sireum/Os$.home:()Lorg/sireum/Os$Path;
        22: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        25: ldc           #92                 // String .m2
        27: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        30: invokeinterface #100,  2          // InterfaceMethod org/sireum/Os$Path.$div:(Ljava/lang/String;)Lorg/sireum/Os$Path;
        35: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        38: ldc           #102                // String repository
        40: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        43: invokeinterface #100,  2          // InterfaceMethod org/sireum/Os$Path.$div:(Ljava/lang/String;)Lorg/sireum/Os$Path;
        48: invokeinterface #106,  1          // InterfaceMethod org/sireum/Os$Path.toUri:()Ljava/lang/String;
        53: invokevirtual #111                // Method coursier/maven/MavenRepository$.apply:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
        56: putstatic     #113                // Field localMavenRepo:Lcoursier/core/Repository;
        59: getstatic     #118                // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
        62: ldc           #120                // String releases
        64: invokevirtual #123                // Method coursier/Repositories$.sonatype:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
        67: putstatic     #125                // Field sonatypeReleaseRepo:Lcoursier/core/Repository;
        70: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        73: getstatic     #130                // Field scala/util/Properties$.MODULE$:Lscala/util/Properties$;
        76: invokevirtual #133                // Method scala/util/Properties$.versionNumberString:()Ljava/lang/String;
        79: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        82: putstatic     #135                // Field scalaVersion:Ljava/lang/String;
        85: getstatic     #140                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        88: invokevirtual #143                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        91: putstatic     #145                // Field cacheOpt:Lorg/sireum/Option;
        94: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        97: invokevirtual #154                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
       100: getstatic     #159                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       103: invokevirtual #162                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       106: putstatic     #164                // Field mavenRepoUrls:Lorg/sireum/IS;
       109: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       112: invokevirtual #154                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
       115: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       118: iconst_3
       119: anewarray     #171                // class coursier/core/Repository
       122: dup
       123: iconst_0
       124: getstatic     #67                 // Field MODULE$:Lorg/sireum/Coursier_Ext$;
       127: invokevirtual #174                // Method localMavenRepo:()Lcoursier/core/Repository;
       130: aastore
       131: dup
       132: iconst_1
       133: getstatic     #67                 // Field MODULE$:Lorg/sireum/Coursier_Ext$;
       136: invokevirtual #176                // Method sonatypeReleaseRepo:()Lcoursier/core/Repository;
       139: aastore
       140: dup
       141: iconst_2
       142: getstatic     #118                // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       145: invokevirtual #180                // Method coursier/Repositories$.jitpack:()Lcoursier/maven/MavenRepository;
       148: aastore
       149: checkcast     #182                // class "[Ljava/lang/Object;"
       152: invokevirtual #186                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       155: invokevirtual #162                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       158: putstatic     #188                // Field repositories:Lorg/sireum/IS;
       161: return
      LineNumberTable:
        line 30: 0
        line 32: 10
        line 33: 59
        line 35: 70
        line 36: 85
        line 37: 94
        line 39: 109
        line 40: 124
        line 41: 133
        line 42: 142
        line 39: 158
        line 30: 161

  public coursier.core.Repository localMavenRepo();
    descriptor: ()Lcoursier/core/Repository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #113                // Field localMavenRepo:Lcoursier/core/Repository;
         3: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Coursier_Ext$;

  public coursier.core.Repository sonatypeReleaseRepo();
    descriptor: ()Lcoursier/core/Repository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #125                // Field sonatypeReleaseRepo:Lcoursier/core/Repository;
         3: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Coursier_Ext$;

  public java.lang.String scalaVersion();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #135                // Field scalaVersion:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Coursier_Ext$;

  public void scalaVersion_$eq(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: putstatic     #135                // Field scalaVersion:Ljava/lang/String;
         4: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Coursier_Ext$;
            0       5     1   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.Option<org.sireum.Os$Path> cacheOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #145                // Field cacheOpt:Lorg/sireum/Option;
         3: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Coursier_Ext$;
    Signature: #194                         // ()Lorg/sireum/Option<Lorg/sireum/Os$Path;>;

  public void cacheOpt_$eq(org.sireum.Option<org.sireum.Os$Path>);
    descriptor: (Lorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: putstatic     #145                // Field cacheOpt:Lorg/sireum/Option;
         4: return
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Coursier_Ext$;
            0       5     1   x$1   Lorg/sireum/Option;
    Signature: #197                         // (Lorg/sireum/Option<Lorg/sireum/Os$Path;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.IS<org.sireum.Z, org.sireum.String> mavenRepoUrls();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #164                // Field mavenRepoUrls:Lorg/sireum/IS;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Coursier_Ext$;
    Signature: #199                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public void mavenRepoUrls_$eq(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: putstatic     #164                // Field mavenRepoUrls:Lorg/sireum/IS;
         4: return
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Coursier_Ext$;
            0       5     1   x$1   Lorg/sireum/IS;
    Signature: #202                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.IS<org.sireum.Z, coursier.core.Repository> repositories();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #188                // Field repositories:Lorg/sireum/IS;
         3: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Coursier_Ext$;
    Signature: #203                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lcoursier/core/Repository;>;

  public scala.collection.immutable.Seq<coursier.core.Dependency> toDeps(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #212                // Field coursier/parse/DependencyParser$.MODULE$:Lcoursier/parse/DependencyParser$;
         3: aload_1
         4: invokevirtual #218                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
         7: invokedynamic #238,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        12: invokeinterface #244,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        17: checkcast     #240                // class scala/collection/immutable/Seq
        20: aload_0
        21: invokevirtual #246                // Method scalaVersion:()Ljava/lang/String;
        24: invokevirtual #250                // Method coursier/parse/DependencyParser$.dependencies:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lcoursier/util/ValidationNel;
        27: invokevirtual #256                // Method coursier/util/ValidationNel.either:()Lscala/util/Either;
        30: aload_1
        31: invokedynamic #268,  0            // InvokeDynamic #1:apply:(Lorg/sireum/IS;)Lscala/Function0;
        36: invokevirtual #274                // Method scala/util/Either.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        39: checkcast     #240                // class scala/collection/immutable/Seq
        42: areturn
      LineNumberTable:
        line 46: 0
        line 47: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/sireum/Coursier_Ext$;
            0      43     1  deps   Lorg/sireum/IS;
    Signature: #206                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
    MethodParameters:
      Name                           Flags
      deps                           final

  public void setScalaVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #278                // Method scalaVersion_$eq:(Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Coursier_Ext$;
            0       6     1 version   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version                        final

  public void setCache(org.sireum.Option<org.sireum.Os$Path>);
    descriptor: (Lorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #282                // Method cacheOpt_$eq:(Lorg/sireum/Option;)V
         5: return
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Coursier_Ext$;
            0       6     1 pathOpt   Lorg/sireum/Option;
    Signature: #197                         // (Lorg/sireum/Option<Lorg/sireum/Os$Path;>;)V
    MethodParameters:
      Name                           Flags
      pathOpt                        final

  public void addMavenRepositories(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #289                // Field org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
         4: aload_0
         5: invokevirtual #291                // Method mavenRepoUrls:()Lorg/sireum/IS;
         8: invokevirtual #295                // Method org/sireum/HashSSet$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
        11: aload_1
        12: invokevirtual #298                // Method org/sireum/HashSSet.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
        15: invokevirtual #300                // Method org/sireum/HashSSet.elements:()Lorg/sireum/IS;
        18: invokevirtual #302                // Method mavenRepoUrls_$eq:(Lorg/sireum/IS;)V
        21: return
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/Coursier_Ext$;
            0      22     1  urls   Lorg/sireum/IS;
    Signature: #202                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      urls                           final

  public void setMavenRepositories(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #289                // Field org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
         4: aload_1
         5: invokevirtual #295                // Method org/sireum/HashSSet$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
         8: invokevirtual #300                // Method org/sireum/HashSSet.elements:()Lorg/sireum/IS;
        11: invokevirtual #302                // Method mavenRepoUrls_$eq:(Lorg/sireum/IS;)V
        14: return
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/Coursier_Ext$;
            0      15     1  urls   Lorg/sireum/IS;
    Signature: #202                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      urls                           final

  public org.sireum.IS<org.sireum.Z, org.sireum.CoursierFileInfo> fetch(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #154                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         8: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        11: iconst_1
        12: anewarray     #39                 // class org/sireum/CoursierClassifier$Type
        15: dup
        16: iconst_0
        17: getstatic     #309                // Field org/sireum/CoursierClassifier$Default$.MODULE$:Lorg/sireum/CoursierClassifier$Default$;
        20: aastore
        21: checkcast     #182                // class "[Ljava/lang/Object;"
        24: invokevirtual #186                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        27: invokevirtual #162                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        30: invokevirtual #313                // Method fetchClassifiers:(Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/IS;
        33: areturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/Coursier_Ext$;
            0      34     1  deps   Lorg/sireum/IS;
    Signature: #306                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/CoursierFileInfo;>;
    MethodParameters:
      Name                           Flags
      deps                           final

  public org.sireum.IS<org.sireum.Z, org.sireum.CoursierFileInfo> fetchClassifiers(org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.CoursierClassifier$Type>);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=11, args_size=3
         0: getstatic     #320                // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
         3: invokevirtual #323                // Method coursier/Fetch$.apply:()Lcoursier/Fetch;
         6: aload_0
         7: aload_1
         8: invokevirtual #325                // Method toDeps:(Lorg/sireum/IS;)Lscala/collection/immutable/Seq;
        11: invokevirtual #329                // Method coursier/Fetch.addDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
        14: aload_0
        15: invokevirtual #331                // Method repositories:()Lorg/sireum/IS;
        18: invokevirtual #218                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        21: aload_0
        22: invokevirtual #291                // Method mavenRepoUrls:()Lorg/sireum/IS;
        25: invokevirtual #218                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        28: invokedynamic #338,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        33: invokeinterface #244,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        38: checkcast     #340                // class scala/collection/IterableOnce
        41: invokeinterface #343,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        46: checkcast     #240                // class scala/collection/immutable/Seq
        49: invokevirtual #346                // Method coursier/Fetch.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
        52: invokestatic  #352                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        55: astore        4
        57: aload_2
        58: invokevirtual #218                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        61: aload         4
        63: invokedynamic #362,  0            // InvokeDynamic #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        68: invokeinterface #366,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
        73: aload_0
        74: invokevirtual #368                // Method cacheOpt:()Lorg/sireum/Option;
        77: astore        5
        79: aload         5
        81: instanceof    #370                // class org/sireum/Some
        84: ifeq          170
        87: aload         5
        89: checkcast     #370                // class org/sireum/Some
        92: astore        6
        94: getstatic     #375                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        97: aload         6
        99: invokevirtual #379                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       102: astore        7
       104: aload         7
       106: invokevirtual #385                // Method scala/Some.isEmpty:()Z
       109: ifne          167
       112: aload         7
       114: invokevirtual #388                // Method scala/Some.get:()Ljava/lang/Object;
       117: checkcast     #42                 // class org/sireum/Os$Path
       120: astore        8
       122: aload         4
       124: aload         4
       126: getfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       129: checkcast     #9                  // class coursier/Fetch
       132: getstatic     #397                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
       135: getstatic     #397                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
       138: invokevirtual #401                // Method coursier/cache/FileCache$.apply$default$1:()Lcoursier/util/Sync;
       141: invokevirtual #404                // Method coursier/cache/FileCache$.apply:(Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
       144: aload         8
       146: invokeinterface #407,  1          // InterfaceMethod org/sireum/Os$Path.string:()Ljava/lang/String;
       151: invokevirtual #413                // Method coursier/cache/FileCache.withLocation:(Ljava/lang/String;)Lcoursier/cache/FileCache;
       154: invokevirtual #417                // Method coursier/Fetch.withCache:(Lcoursier/cache/Cache;)Lcoursier/Fetch;
       157: putfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       160: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       163: astore_3
       164: goto          180
       167: goto          173
       170: goto          173
       173: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       176: astore_3
       177: goto          180
       180: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       183: invokevirtual #154                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
       186: getstatic     #320                // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
       189: aload         4
       191: getfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       194: checkcast     #9                  // class coursier/Fetch
       197: invokevirtual #427                // Method coursier/Fetch$.FetchTaskOps:(Lcoursier/Fetch;)Lcoursier/Fetch;
       200: astore        9
       202: getstatic     #430                // Field coursier/Fetch$FetchTaskOps$.MODULE$:Lcoursier/Fetch$FetchTaskOps$;
       205: aload         9
       207: invokevirtual #434                // Method coursier/Fetch$FetchTaskOps$.runResult$default$1$extension:(Lcoursier/Fetch;)Lscala/concurrent/ExecutionContext;
       210: astore        10
       212: getstatic     #430                // Field coursier/Fetch$FetchTaskOps$.MODULE$:Lcoursier/Fetch$FetchTaskOps$;
       215: aload         9
       217: aload         10
       219: invokevirtual #438                // Method coursier/Fetch$FetchTaskOps$.runResult$extension:(Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lcoursier/Fetch$Result;
       222: invokevirtual #441                // Method coursier/Fetch$Result.detailedArtifacts:()Lscala/collection/immutable/Seq;
       225: invokedynamic #448,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       230: invokeinterface #244,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       235: checkcast     #240                // class scala/collection/immutable/Seq
       238: invokevirtual #162                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       241: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 167
          locals = [ class org/sireum/Coursier_Ext$, class org/sireum/IS, class org/sireum/IS, top, class scala/runtime/ObjectRef, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/Coursier_Ext$, class org/sireum/IS, class org/sireum/IS, class scala/runtime/BoxedUnit, class scala/runtime/ObjectRef, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 69: 0
        line 70: 6
        line 71: 14
        line 72: 57
        line 78: 73
        line 79: 79
        line 78: 112
        line 79: 122
        line 80: 173
        line 82: 180
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          122      45     8 cache   Lorg/sireum/Os$Path;
          202      20     9 qual$1   Lcoursier/Fetch;
          212      10    10   x$1   Lscala/concurrent/ExecutionContext;
           57     184     4 fetch   Lscala/runtime/ObjectRef;
            0     242     0  this   Lorg/sireum/Coursier_Ext$;
            0     242     1  deps   Lorg/sireum/IS;
            0     242     2   cls   Lorg/sireum/IS;
    Signature: #314                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/CoursierClassifier$Type;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/CoursierFileInfo;>;
    MethodParameters:
      Name                           Flags
      deps                           final
      cls                            final

  public boolean isRuntimePublishedLocally(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=11, args_size=2
         0: getstatic     #465                // Field org/sireum/project/DependencyManager$.MODULE$:Lorg/sireum/project/DependencyManager$;
         3: invokevirtual #468                // Method org/sireum/project/DependencyManager$.libraryKey:()Ljava/lang/String;
         6: astore_3
         7: getstatic     #320                // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
        10: invokevirtual #323                // Method coursier/Fetch$.apply:()Lcoursier/Fetch;
        13: aload_0
        14: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        17: invokevirtual #154                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        20: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        23: iconst_1
        24: anewarray     #470                // class org/sireum/String
        27: dup
        28: iconst_0
        29: new           #470                // class org/sireum/String
        32: dup
        33: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        36: new           #472                // class java/lang/StringBuilder
        39: dup
        40: ldc_w         #473                // int 0
        43: invokespecial #476                // Method java/lang/StringBuilder."<init>":(I)V
        46: new           #470                // class org/sireum/String
        49: dup
        50: aload_3
        51: invokespecial #478                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        54: invokevirtual #482                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        57: new           #470                // class org/sireum/String
        60: dup
        61: aload_1
        62: invokespecial #478                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        65: invokevirtual #482                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        68: invokevirtual #485                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        71: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        74: invokespecial #478                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        77: aastore
        78: invokevirtual #489                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        81: invokevirtual #162                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        84: invokevirtual #325                // Method toDeps:(Lorg/sireum/IS;)Lscala/collection/immutable/Seq;
        87: invokevirtual #329                // Method coursier/Fetch.addDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
        90: getstatic     #494                // Field scala/package$.MODULE$:Lscala/package$;
        93: invokevirtual #498                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        96: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        99: iconst_2
       100: anewarray     #171                // class coursier/core/Repository
       103: dup
       104: iconst_0
       105: aload_0
       106: invokevirtual #174                // Method localMavenRepo:()Lcoursier/core/Repository;
       109: aastore
       110: dup
       111: iconst_1
       112: aload_0
       113: invokevirtual #176                // Method sonatypeReleaseRepo:()Lcoursier/core/Repository;
       116: aastore
       117: checkcast     #182                // class "[Ljava/lang/Object;"
       120: invokevirtual #186                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       123: invokevirtual #503                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       126: checkcast     #240                // class scala/collection/immutable/Seq
       129: invokevirtual #346                // Method coursier/Fetch.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
       132: invokevirtual #506                // Method coursier/Fetch.withMainArtifacts:()Lcoursier/Fetch;
       135: astore        4
       137: aload_0
       138: invokevirtual #368                // Method cacheOpt:()Lorg/sireum/Option;
       141: astore        5
       143: aload         5
       145: instanceof    #370                // class org/sireum/Some
       148: ifeq          225
       151: aload         5
       153: checkcast     #370                // class org/sireum/Some
       156: astore        6
       158: getstatic     #375                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       161: aload         6
       163: invokevirtual #379                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       166: astore        7
       168: aload         7
       170: invokevirtual #385                // Method scala/Some.isEmpty:()Z
       173: ifne          222
       176: aload         7
       178: invokevirtual #388                // Method scala/Some.get:()Ljava/lang/Object;
       181: checkcast     #42                 // class org/sireum/Os$Path
       184: astore        8
       186: aload         4
       188: getstatic     #397                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
       191: getstatic     #397                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
       194: invokevirtual #401                // Method coursier/cache/FileCache$.apply$default$1:()Lcoursier/util/Sync;
       197: invokevirtual #404                // Method coursier/cache/FileCache$.apply:(Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
       200: aload         8
       202: invokeinterface #407,  1          // InterfaceMethod org/sireum/Os$Path.string:()Ljava/lang/String;
       207: invokevirtual #413                // Method coursier/cache/FileCache.withLocation:(Ljava/lang/String;)Lcoursier/cache/FileCache;
       210: invokevirtual #417                // Method coursier/Fetch.withCache:(Lcoursier/cache/Cache;)Lcoursier/Fetch;
       213: astore        4
       215: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       218: astore_2
       219: goto          235
       222: goto          228
       225: goto          228
       228: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       231: astore_2
       232: goto          235
       235: getstatic     #320                // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
       238: aload         4
       240: invokevirtual #427                // Method coursier/Fetch$.FetchTaskOps:(Lcoursier/Fetch;)Lcoursier/Fetch;
       243: astore        9
       245: getstatic     #430                // Field coursier/Fetch$FetchTaskOps$.MODULE$:Lcoursier/Fetch$FetchTaskOps$;
       248: aload         9
       250: invokevirtual #509                // Method coursier/Fetch$FetchTaskOps$.run$default$1$extension:(Lcoursier/Fetch;)Lscala/concurrent/ExecutionContext;
       253: astore        10
       255: getstatic     #430                // Field coursier/Fetch$FetchTaskOps$.MODULE$:Lcoursier/Fetch$FetchTaskOps$;
       258: aload         9
       260: aload         10
       262: invokevirtual #513                // Method coursier/Fetch$FetchTaskOps$.run$extension:(Lcoursier/Fetch;Lscala/concurrent/ExecutionContext;)Lscala/collection/immutable/Seq;
       265: pop
       266: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       269: invokevirtual #516                // Method org/sireum/package$.T:()Z
       272: ireturn
       273: pop
       274: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       277: invokevirtual #519                // Method org/sireum/package$.F:()Z
       280: ireturn
      Exception table:
         from    to  target type
             7   273   273   Class java/lang/Throwable
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 222
          locals = [ class org/sireum/Coursier_Ext$, class java/lang/String, top, class java/lang/String, class coursier/Fetch, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/Coursier_Ext$, class java/lang/String, class scala/runtime/BoxedUnit, class java/lang/String, class coursier/Fetch, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class org/sireum/Coursier_Ext$, class java/lang/String, top, class java/lang/String ]
          stack = [ class java/lang/Throwable ]
      LineNumberTable:
        line 91: 0
        line 93: 7
        line 94: 90
        line 96: 137
        line 97: 143
        line 96: 176
        line 97: 186
        line 98: 228
        line 100: 235
        line 101: 266
        line 103: 274
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          186      36     8 cache   Lorg/sireum/Os$Path;
          245      21     9 qual$1   Lcoursier/Fetch;
          255      11    10   x$1   Lscala/concurrent/ExecutionContext;
          137     136     4 fetch   Lcoursier/Fetch;
            7     274     3 libKey   Ljava/lang/String;
            0     281     0  this   Lorg/sireum/Coursier_Ext$;
            0     281     1 version   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version                        final

  public static final java.lang.String $anonfun$toDeps$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.runtime.Nothing$ $anonfun$toDeps$2(org.sireum.IS);
    descriptor: (Lorg/sireum/IS;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #150                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: new           #472                // class java/lang/StringBuilder
         6: dup
         7: ldc_w         #525                // int 22
        10: invokespecial #476                // Method java/lang/StringBuilder."<init>":(I)V
        13: ldc_w         #527                // String Invalid dependencies:
        16: invokevirtual #530                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: aload_0
        20: invokevirtual #482                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        23: invokevirtual #485                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: invokevirtual #534                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        29: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 deps$1   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      deps$1                         final

  public static final coursier.maven.MavenRepository $anonfun$fetchClassifiers$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/maven/MavenRepository;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #72                 // Field coursier/package$.MODULE$:Lcoursier/package$;
         3: invokevirtual #76                 // Method coursier/package$.MavenRepository:()Lcoursier/maven/MavenRepository$;
         6: aload_0
         7: invokevirtual #111                // Method coursier/maven/MavenRepository$.apply:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
        10: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  public static final void $anonfun$fetchClassifiers$2(scala.runtime.ObjectRef, org.sireum.CoursierClassifier$Type);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=9, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: getstatic     #309                // Field org/sireum/CoursierClassifier$Default$.MODULE$:Lorg/sireum/CoursierClassifier$Default$;
         5: aload_3
         6: invokevirtual #544                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
         9: ifeq          33
        12: aload_0
        13: aload_0
        14: getfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        17: checkcast     #9                  // class coursier/Fetch
        20: invokevirtual #506                // Method coursier/Fetch.withMainArtifacts:()Lcoursier/Fetch;
        23: putfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        26: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        29: astore_2
        30: goto          234
        33: goto          36
        36: getstatic     #547                // Field org/sireum/CoursierClassifier$Javadoc$.MODULE$:Lorg/sireum/CoursierClassifier$Javadoc$;
        39: aload_3
        40: invokevirtual #544                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        43: ifeq          96
        46: aload_0
        47: aload_0
        48: getfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        51: checkcast     #9                  // class coursier/Fetch
        54: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        57: iconst_1
        58: anewarray     #549                // class coursier/core/Classifier
        61: dup
        62: iconst_0
        63: new           #549                // class coursier/core/Classifier
        66: dup
        67: getstatic     #72                 // Field coursier/package$.MODULE$:Lcoursier/package$;
        70: invokevirtual #553                // Method coursier/package$.Classifier:()Lcoursier/core/Classifier$;
        73: invokevirtual #558                // Method coursier/core/Classifier$.javadoc:()Ljava/lang/String;
        76: invokespecial #559                // Method coursier/core/Classifier."<init>":(Ljava/lang/String;)V
        79: aastore
        80: invokevirtual #489                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        83: invokevirtual #562                // Method coursier/Fetch.addClassifiers:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
        86: putfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        89: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        92: astore_2
        93: goto          234
        96: goto          99
        99: getstatic     #565                // Field org/sireum/CoursierClassifier$Sources$.MODULE$:Lorg/sireum/CoursierClassifier$Sources$;
       102: aload_3
       103: invokevirtual #544                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       106: ifeq          159
       109: aload_0
       110: aload_0
       111: getfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       114: checkcast     #9                  // class coursier/Fetch
       117: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       120: iconst_1
       121: anewarray     #549                // class coursier/core/Classifier
       124: dup
       125: iconst_0
       126: new           #549                // class coursier/core/Classifier
       129: dup
       130: getstatic     #72                 // Field coursier/package$.MODULE$:Lcoursier/package$;
       133: invokevirtual #553                // Method coursier/package$.Classifier:()Lcoursier/core/Classifier$;
       136: invokevirtual #568                // Method coursier/core/Classifier$.sources:()Ljava/lang/String;
       139: invokespecial #559                // Method coursier/core/Classifier."<init>":(Ljava/lang/String;)V
       142: aastore
       143: invokevirtual #489                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       146: invokevirtual #562                // Method coursier/Fetch.addClassifiers:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
       149: putfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       152: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       155: astore_2
       156: goto          234
       159: goto          162
       162: getstatic     #571                // Field org/sireum/CoursierClassifier$Tests$.MODULE$:Lorg/sireum/CoursierClassifier$Tests$;
       165: aload_3
       166: invokevirtual #544                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       169: ifeq          222
       172: aload_0
       173: aload_0
       174: getfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       177: checkcast     #9                  // class coursier/Fetch
       180: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       183: iconst_1
       184: anewarray     #549                // class coursier/core/Classifier
       187: dup
       188: iconst_0
       189: new           #549                // class coursier/core/Classifier
       192: dup
       193: getstatic     #72                 // Field coursier/package$.MODULE$:Lcoursier/package$;
       196: invokevirtual #553                // Method coursier/package$.Classifier:()Lcoursier/core/Classifier$;
       199: invokevirtual #574                // Method coursier/core/Classifier$.tests:()Ljava/lang/String;
       202: invokespecial #559                // Method coursier/core/Classifier."<init>":(Ljava/lang/String;)V
       205: aastore
       206: invokevirtual #489                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       209: invokevirtual #562                // Method coursier/Fetch.addClassifiers:(Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
       212: putfield      #392                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       215: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       218: astore_2
       219: goto          234
       222: goto          225
       225: new           #576                // class scala/MatchError
       228: dup
       229: aload_3
       230: invokespecial #579                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       233: athrow
       234: return
      StackMapTable: number_of_entries = 9
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ top, class org/sireum/CoursierClassifier$Type ]
        frame_type = 2 /* same */
        frame_type = 59 /* same */
        frame_type = 2 /* same */
        frame_type = 59 /* same */
        frame_type = 2 /* same */
        frame_type = 59 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/runtime/ObjectRef, class org/sireum/CoursierClassifier$Type, class scala/runtime/BoxedUnit, class org/sireum/CoursierClassifier$Type ]
          stack = []
      LineNumberTable:
        line 72: 0
        line 73: 2
        line 74: 36
        line 75: 99
        line 76: 162
        line 72: 225
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     235     0 fetch$1   Lscala/runtime/ObjectRef;
            0     235     1    cl   Lorg/sireum/CoursierClassifier$Type;
    MethodParameters:
      Name                           Flags
      fetch$1                        final
      cl                             final

  public static final org.sireum.CoursierFileInfo $anonfun$fetchClassifiers$3(scala.Tuple4);
    descriptor: (Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=1, args_size=1
         0: getstatic     #586                // Field org/sireum/CoursierFileInfo$.MODULE$:Lorg/sireum/CoursierFileInfo$;
         3: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         6: aload_0
         7: invokevirtual #591                // Method scala/Tuple4._1:()Ljava/lang/Object;
        10: checkcast     #593                // class coursier/core/Dependency
        13: invokevirtual #597                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        16: invokevirtual #602                // Method coursier/core/Module.organization:()Ljava/lang/String;
        19: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        22: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        25: aload_0
        26: invokevirtual #591                // Method scala/Tuple4._1:()Ljava/lang/Object;
        29: checkcast     #593                // class coursier/core/Dependency
        32: invokevirtual #597                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        35: invokevirtual #605                // Method coursier/core/Module.name:()Ljava/lang/String;
        38: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        41: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        44: aload_0
        45: invokevirtual #591                // Method scala/Tuple4._1:()Ljava/lang/Object;
        48: checkcast     #593                // class coursier/core/Dependency
        51: invokevirtual #607                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        54: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        57: getstatic     #81                 // Field org/sireum/Os$.MODULE$:Lorg/sireum/Os$;
        60: getstatic     #90                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        63: aload_0
        64: invokevirtual #610                // Method scala/Tuple4._4:()Ljava/lang/Object;
        67: checkcast     #612                // class java/io/File
        70: invokevirtual #615                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
        73: invokevirtual #96                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        76: invokevirtual #618                // Method org/sireum/Os$.path:(Ljava/lang/String;)Lorg/sireum/Os$Path;
        79: invokevirtual #621                // Method org/sireum/CoursierFileInfo$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Os$Path;)Lorg/sireum/CoursierFileInfo;
        82: areturn
      LineNumberTable:
        line 83: 0
        line 84: 3
        line 85: 22
        line 86: 41
        line 87: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0     q   Lscala/Tuple4;
    MethodParameters:
      Name                           Flags
      q                              final

  private org.sireum.Coursier_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #623                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Coursier_Ext$;

  public static final java.lang.String $anonfun$toDeps$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: checkcast     #470                // class org/sireum/String
         4: invokevirtual #626                // Method org/sireum/String.value:()Ljava/lang/String;
         7: invokestatic  #628                // Method $anonfun$toDeps$1:(Ljava/lang/String;)Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final coursier.maven.MavenRepository $anonfun$fetchClassifiers$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: checkcast     #470                // class org/sireum/String
         4: invokevirtual #626                // Method org/sireum/String.value:()Ljava/lang/String;
         7: invokestatic  #630                // Method $anonfun$fetchClassifiers$1:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
        10: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   url   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      url                            final

  public static final java.lang.Object $anonfun$fetchClassifiers$2$adapted(scala.runtime.ObjectRef, org.sireum.CoursierClassifier$Type);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #632                // Method $anonfun$fetchClassifiers$2:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)V
         5: getstatic     #423                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 fetch$1   Lscala/runtime/ObjectRef;
            0       9     1    cl   Lorg/sireum/CoursierClassifier$Type;
    MethodParameters:
      Name                           Flags
      fetch$1                        final
      cl                             final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #644,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #7 of #9;            // FetchTaskOps$=class coursier/Fetch$FetchTaskOps$ of class coursier/Fetch
  public static final #13= #12 of #9;     // Result=class coursier/Fetch$Result of class coursier/Fetch
  public static final #18= #15 of #17;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #23= #20 of #22;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #28= #25 of #27;    // Default$=class org/sireum/CoursierClassifier$Default$ of class org/sireum/CoursierClassifier
  public static final #31= #30 of #27;    // Javadoc$=class org/sireum/CoursierClassifier$Javadoc$ of class org/sireum/CoursierClassifier
  public static final #34= #33 of #27;    // Sources$=class org/sireum/CoursierClassifier$Sources$ of class org/sireum/CoursierClassifier
  public static final #37= #36 of #27;    // Tests$=class org/sireum/CoursierClassifier$Tests$ of class org/sireum/CoursierClassifier
  public static #40= #39 of #27;          // Type=class org/sireum/CoursierClassifier$Type of class org/sireum/CoursierClassifier
  public static #45= #42 of #44;          // Path=class org/sireum/Os$Path of class org/sireum/Os
SourceFile: "Coursier_Ext.scala"
BootstrapMethods:
  0: #235 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #220 (Ljava/lang/Object;)Ljava/lang/Object;
      #225 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$toDeps$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
      #226 (Ljava/lang/Object;)Ljava/lang/String;
      #227 5
      #228 1
      #226 (Ljava/lang/Object;)Ljava/lang/String;
  1: #235 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 ()Ljava/lang/Object;
      #263 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$toDeps$2:(Lorg/sireum/IS;)Lscala/runtime/Nothing$;
      #265 ()Lscala/runtime/Nothing$;
      #227 5
      #228 1
      #265 ()Lscala/runtime/Nothing$;
  2: #235 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #220 (Ljava/lang/Object;)Ljava/lang/Object;
      #336 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$1$adapted:(Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
      #337 (Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
      #227 5
      #228 1
      #337 (Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
  3: #235 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #220 (Ljava/lang/Object;)Ljava/lang/Object;
      #357 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
      #359 (Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
      #227 5
      #228 1
      #359 (Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
  4: #235 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #220 (Ljava/lang/Object;)Ljava/lang/Object;
      #446 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$3:(Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
      #447 (Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
      #227 5
      #228 1
      #447 (Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
  5: #641 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #336 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$1$adapted:(Ljava/lang/Object;)Lcoursier/maven/MavenRepository;
      #357 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/CoursierClassifier$Type;)Ljava/lang/Object;
      #446 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$fetchClassifiers$3:(Lscala/Tuple4;)Lorg/sireum/CoursierFileInfo;
      #225 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$toDeps$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
      #263 REF_invokeStatic org/sireum/Coursier_Ext$.$anonfun$toDeps$2:(Lorg/sireum/IS;)Lscala/runtime/Nothing$;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 02 17 00 6D 01 01 4C 01 4D 01 02 19
   02 1A 01 01 61 01 62 01 01 BA 01 BB 01 02 0B 00
   5E 01 00 DD 00 DE 01 01 03 01 04 01 00 3F 00 3E
   01 01 1B 00 C9 01 00 35 00 C1 01 00 C3 00 C4 01
   01 30 01 31 01 01 36 01 37 01 01 C9 01 CA 01 00
   30 00 AC 01 00 38 00 C6 01 00 C8 00 C9 01 00 3B
   00 C6 01 00 33 00 68 01 00 BE 00 BF 01 01 17 00
   C4 01 01 2F 00 C9 01 01 13 00 BF 01 00 32 00 AC
   01 00 CC 00 CD 01
  Scala: length = 0x0 (unknown attribute)

