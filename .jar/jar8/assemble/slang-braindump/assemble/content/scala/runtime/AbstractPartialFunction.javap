Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/runtime/AbstractPartialFunction.class
  Last modified May 29, 2022; size 7879 bytes
  SHA-256 checksum 6ed522aeea4cbf3bef0fa88b133e499d2dd0c9cffa61c7c3b5e0649c054b1691
  Compiled from "AbstractPartialFunction.scala"
public abstract class scala.runtime.AbstractPartialFunction<T1 extends java.lang.Object, R extends java.lang.Object> extends java.lang.Object implements scala.PartialFunction<T1, R>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/runtime/AbstractPartialFunction
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 38, attributes: 5
Constant pool:
    #1 = Utf8               scala/runtime/AbstractPartialFunction
    #2 = Class              #1            // scala/runtime/AbstractPartialFunction
    #3 = Utf8               <T1:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lscala/PartialFunction<TT1;TR;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/PartialFunction
    #7 = Class              #6            // scala/PartialFunction
    #8 = Utf8               AbstractPartialFunction.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005a3Qa\u0001\u0003\u0002\u0002%AQ\u0001\u0015\u0001\u0005\u0002ECQ\u0001\u0016\u0001\u0005\u0002U\u0013q#\u00112tiJ\f7\r\u001e)beRL\u0017\r\u001c$v]\u000e$\u0018n\u001c8\u000b\u0005\u00151\u0011a\u0002:v]RLW.\u001a\u0006\u0002\u000f\u0005)1oY1mC\u000e\u0001Qc\u0001\u0006\u0015yM!\u0001aC\bN!\taQ\"D\u0001\u0007\u0013\tqaA\u0001\u0004B]f\u0014VM\u001a\t\u0005\u0019A\u00112(\u0003\u0002\u0012\r\tIa)\u001e8di&|g.\r\t\u0003\'Qa\u0001\u0001B\u0005\u0016\u0001\u0001\u0006\t\u0011#b\u0001-\t\u0011A+M\t\u0003/i\u0001\"\u0001\u0004\r\n\u0005e1!a\u0002(pi\"Lgn\u001a\t\u0003\u0019mI!\u0001\b\u0004\u0003\u0007\u0005s\u0017\u0010K\u0002\u0015=\u0005\u0002\"\u0001D\u0010\n\u0005\u00012!aC:qK\u000eL\u0017\r\\5{K\u0012\fTa\t\u00129ue\u00022a\t\u0014*\u001d\taA%\u0003\u0002&\r\u0005i1\u000b]3dS\u0006d\u0017N_1cY\u0016L!a\n\u0015\u0003\u000b\u001d\u0013x.\u001e9\u000b\u0005\u00152\u0001C\u0002\u0007+Y=\u0012T\'\u0003\u0002,\r\t1A+\u001e9mKR\u0002\"\u0001D\u0017\n\u000592!aA%oiB\u0011A\u0002M\u0005\u0003c\u0019\u0011A\u0001T8oOB\u0011AbM\u0005\u0003i\u0019\u0011QA\u00127pCR\u0004\"\u0001\u0004\u001c\n\u0005]2!A\u0002#pk\ndW-\u0003\u0002:Q\u0005\u0019\u0011I]42\t\u0011\u001aC%\n\t\u0003\'q\"\u0011\"\u0010\u0001!\u0002\u0003%)\u0019\u0001\f\u0003\u0003IC3\u0001\u0010\u0010@c\u0015\u0019\u0003I\u0013\'L!\r\u0019c%\u0011\t\t\u0019\tcsFM\u001bE\u000f&\u00111I\u0002\u0002\u0007)V\u0004H.\u001a\u001c\u0011\u00051)\u0015B\u0001$\u0007\u0005\u001d\u0011un\u001c7fC:\u0004\"\u0001\u0004%\n\u0005%3!\u0001B+oSRL!a\u0013\u0015\u0002\rI+G/\u001e:oc\u0011!3\u0005J\u0013\u0011\t1q%cO\u0005\u0003\u001f\u001a\u0011q\u0002U1si&\fGNR;oGRLwN\\\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003I\u0003Ba\u0015\u0001\u0013w5\tA!A\u0003baBd\u0017\u0010\u0006\u0002<-\")qK\u0001a\u0001%\u0005\t\u0001\u0010
   #12 = Utf8               unapply
   #13 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #14 = Utf8               (TT1;)Lscala/Option<TR;>;
   #15 = Utf8               a
   #16 = Utf8               unapply$
   #17 = Utf8               (Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
   #18 = NameAndType        #16:#17       // unapply$:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
   #19 = InterfaceMethodref #7.#18        // scala/PartialFunction.unapply$:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
   #20 = Utf8               this
   #21 = Utf8               Lscala/runtime/AbstractPartialFunction;
   #22 = Utf8               Ljava/lang/Object;
   #23 = Utf8               elementWise
   #24 = Utf8               ()Lscala/PartialFunction;
   #25 = Utf8               ()Lscala/PartialFunction<TT1;TR;>;
   #26 = Utf8               elementWise$
   #27 = Utf8               (Lscala/PartialFunction;)Lscala/PartialFunction;
   #28 = NameAndType        #26:#27       // elementWise$:(Lscala/PartialFunction;)Lscala/PartialFunction;
   #29 = InterfaceMethodref #7.#28        // scala/PartialFunction.elementWise$:(Lscala/PartialFunction;)Lscala/PartialFunction;
   #30 = Utf8               orElse
   #31 = Utf8               <A1:TT1;B1:Ljava/lang/Object;>(Lscala/PartialFunction<TA1;TB1;>;)Lscala/PartialFunction<TA1;TB1;>;
   #32 = Utf8               that
   #33 = Utf8               orElse$
   #34 = Utf8               (Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #35 = NameAndType        #33:#34       // orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #36 = InterfaceMethodref #7.#35        // scala/PartialFunction.orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #37 = Utf8               Lscala/PartialFunction;
   #38 = Utf8               andThen
   #39 = Utf8               (Lscala/Function1;)Lscala/PartialFunction;
   #40 = Utf8               <C$:Ljava/lang/Object;>(Lscala/Function1<TR;TC$;>;)Lscala/PartialFunction<TT1;TC$;>;
   #41 = Utf8               k
   #42 = Utf8               andThen$
   #43 = Utf8               (Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
   #44 = NameAndType        #42:#43       // andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
   #45 = InterfaceMethodref #7.#44        // scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
   #46 = Utf8               Lscala/Function1;
   #47 = Utf8               <C$:Ljava/lang/Object;>(Lscala/PartialFunction<TR;TC$;>;)Lscala/PartialFunction<TT1;TC$;>;
   #48 = NameAndType        #42:#34       // andThen$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #49 = InterfaceMethodref #7.#48        // scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #50 = Utf8               compose
   #51 = Utf8               <R$:Ljava/lang/Object;>(Lscala/PartialFunction<TR$;TT1;>;)Lscala/PartialFunction<TR$;TR;>;
   #52 = Utf8               compose$
   #53 = NameAndType        #52:#34       // compose$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #54 = InterfaceMethodref #7.#53        // scala/PartialFunction.compose$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #55 = Utf8               lift
   #56 = Utf8               ()Lscala/Function1;
   #57 = Utf8               ()Lscala/Function1<TT1;Lscala/Option<TR;>;>;
   #58 = Utf8               lift$
   #59 = Utf8               (Lscala/PartialFunction;)Lscala/Function1;
   #60 = NameAndType        #58:#59       // lift$:(Lscala/PartialFunction;)Lscala/Function1;
   #61 = InterfaceMethodref #7.#60        // scala/PartialFunction.lift$:(Lscala/PartialFunction;)Lscala/Function1;
   #62 = Utf8               applyOrElse
   #63 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
   #64 = Utf8               <A1:TT1;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
   #65 = Utf8               x
   #66 = Utf8               default
   #67 = Utf8               applyOrElse$
   #68 = Utf8               (Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
   #69 = NameAndType        #67:#68       // applyOrElse$:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
   #70 = InterfaceMethodref #7.#69        // scala/PartialFunction.applyOrElse$:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
   #71 = Utf8               runWith
   #72 = Utf8               (Lscala/Function1;)Lscala/Function1;
   #73 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TR;TU;>;)Lscala/Function1<TT1;Ljava/lang/Object;>;
   #74 = Utf8               action
   #75 = Utf8               runWith$
   #76 = Utf8               (Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
   #77 = NameAndType        #75:#76       // runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
   #78 = InterfaceMethodref #7.#77        // scala/PartialFunction.runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
   #79 = Utf8               <A$:Ljava/lang/Object;>(Lscala/Function1<TA$;TT1;>;)Lscala/Function1<TA$;TR;>;
   #80 = Utf8               g
   #81 = Utf8               scala/Function1
   #82 = Class              #81           // scala/Function1
   #83 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #84 = NameAndType        #52:#83       // compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #85 = InterfaceMethodref #82.#84       // scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
   #86 = Utf8               toString
   #87 = Utf8               ()Ljava/lang/String;
   #88 = Utf8               toString$
   #89 = Utf8               (Lscala/Function1;)Ljava/lang/String;
   #90 = NameAndType        #88:#89       // toString$:(Lscala/Function1;)Ljava/lang/String;
   #91 = InterfaceMethodref #82.#90       // scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
   #92 = Utf8               apply
   #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #94 = Utf8               (TT1;)TR;
   #95 = Utf8               scala/PartialFunction$
   #96 = Class              #95           // scala/PartialFunction$
   #97 = Utf8               MODULE$
   #98 = Utf8               Lscala/PartialFunction$;
   #99 = NameAndType        #97:#98       // MODULE$:Lscala/PartialFunction$;
  #100 = Fieldref           #96.#99       // scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
  #101 = Utf8               empty
  #102 = NameAndType        #101:#24      // empty:()Lscala/PartialFunction;
  #103 = Methodref          #96.#102      // scala/PartialFunction$.empty:()Lscala/PartialFunction;
  #104 = NameAndType        #62:#63       // applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #105 = Methodref          #2.#104       // scala/runtime/AbstractPartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #106 = Utf8               apply$mcZD$sp
  #107 = Utf8               (D)Z
  #108 = Utf8               java/lang/Double
  #109 = Class              #108          // java/lang/Double
  #110 = Utf8               valueOf
  #111 = Utf8               (D)Ljava/lang/Double;
  #112 = NameAndType        #110:#111     // valueOf:(D)Ljava/lang/Double;
  #113 = Methodref          #109.#112     // java/lang/Double.valueOf:(D)Ljava/lang/Double;
  #114 = NameAndType        #92:#93       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #115 = Methodref          #2.#114       // scala/runtime/AbstractPartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #116 = Utf8               scala/runtime/BoxesRunTime
  #117 = Class              #116          // scala/runtime/BoxesRunTime
  #118 = Utf8               unboxToBoolean
  #119 = Utf8               (Ljava/lang/Object;)Z
  #120 = NameAndType        #118:#119     // unboxToBoolean:(Ljava/lang/Object;)Z
  #121 = Methodref          #117.#120     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #122 = Utf8               D
  #123 = Utf8               apply$mcDD$sp
  #124 = Utf8               (D)D
  #125 = Utf8               unboxToDouble
  #126 = Utf8               (Ljava/lang/Object;)D
  #127 = NameAndType        #125:#126     // unboxToDouble:(Ljava/lang/Object;)D
  #128 = Methodref          #117.#127     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #129 = Utf8               apply$mcFD$sp
  #130 = Utf8               (D)F
  #131 = Utf8               unboxToFloat
  #132 = Utf8               (Ljava/lang/Object;)F
  #133 = NameAndType        #131:#132     // unboxToFloat:(Ljava/lang/Object;)F
  #134 = Methodref          #117.#133     // scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
  #135 = Utf8               apply$mcID$sp
  #136 = Utf8               (D)I
  #137 = Utf8               unboxToInt
  #138 = Utf8               (Ljava/lang/Object;)I
  #139 = NameAndType        #137:#138     // unboxToInt:(Ljava/lang/Object;)I
  #140 = Methodref          #117.#139     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #141 = Utf8               apply$mcJD$sp
  #142 = Utf8               (D)J
  #143 = Utf8               unboxToLong
  #144 = Utf8               (Ljava/lang/Object;)J
  #145 = NameAndType        #143:#144     // unboxToLong:(Ljava/lang/Object;)J
  #146 = Methodref          #117.#145     // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #147 = Utf8               apply$mcVD$sp
  #148 = Utf8               (D)V
  #149 = Utf8               apply$mcZF$sp
  #150 = Utf8               (F)Z
  #151 = Utf8               java/lang/Float
  #152 = Class              #151          // java/lang/Float
  #153 = Utf8               (F)Ljava/lang/Float;
  #154 = NameAndType        #110:#153     // valueOf:(F)Ljava/lang/Float;
  #155 = Methodref          #152.#154     // java/lang/Float.valueOf:(F)Ljava/lang/Float;
  #156 = Utf8               F
  #157 = Utf8               apply$mcDF$sp
  #158 = Utf8               (F)D
  #159 = Utf8               apply$mcFF$sp
  #160 = Utf8               (F)F
  #161 = Utf8               apply$mcIF$sp
  #162 = Utf8               (F)I
  #163 = Utf8               apply$mcJF$sp
  #164 = Utf8               (F)J
  #165 = Utf8               apply$mcVF$sp
  #166 = Utf8               (F)V
  #167 = Utf8               apply$mcZI$sp
  #168 = Utf8               (I)Z
  #169 = Utf8               java/lang/Integer
  #170 = Class              #169          // java/lang/Integer
  #171 = Utf8               (I)Ljava/lang/Integer;
  #172 = NameAndType        #110:#171     // valueOf:(I)Ljava/lang/Integer;
  #173 = Methodref          #170.#172     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #174 = Utf8               I
  #175 = Utf8               apply$mcDI$sp
  #176 = Utf8               (I)D
  #177 = Utf8               apply$mcFI$sp
  #178 = Utf8               (I)F
  #179 = Utf8               apply$mcII$sp
  #180 = Utf8               (I)I
  #181 = Utf8               apply$mcJI$sp
  #182 = Utf8               (I)J
  #183 = Utf8               apply$mcVI$sp
  #184 = Utf8               (I)V
  #185 = Utf8               apply$mcZJ$sp
  #186 = Utf8               (J)Z
  #187 = Utf8               java/lang/Long
  #188 = Class              #187          // java/lang/Long
  #189 = Utf8               (J)Ljava/lang/Long;
  #190 = NameAndType        #110:#189     // valueOf:(J)Ljava/lang/Long;
  #191 = Methodref          #188.#190     // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #192 = Utf8               J
  #193 = Utf8               apply$mcDJ$sp
  #194 = Utf8               (J)D
  #195 = Utf8               apply$mcFJ$sp
  #196 = Utf8               (J)F
  #197 = Utf8               apply$mcIJ$sp
  #198 = Utf8               (J)I
  #199 = Utf8               apply$mcJJ$sp
  #200 = Utf8               (J)J
  #201 = Utf8               apply$mcVJ$sp
  #202 = Utf8               (J)V
  #203 = NameAndType        #38:#39       // andThen:(Lscala/Function1;)Lscala/PartialFunction;
  #204 = Methodref          #2.#203       // scala/runtime/AbstractPartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
  #205 = Utf8               <init>
  #206 = Utf8               ()V
  #207 = NameAndType        #205:#206     // "<init>":()V
  #208 = Methodref          #5.#207       // java/lang/Object."<init>":()V
  #209 = Utf8               Code
  #210 = Utf8               LineNumberTable
  #211 = Utf8               LocalVariableTable
  #212 = Utf8               Signature
  #213 = Utf8               MethodParameters
  #214 = Utf8               SourceFile
  #215 = Utf8               RuntimeVisibleAnnotations
  #216 = Utf8               ScalaInlineInfo
  #217 = Utf8               ScalaSig
{
  public scala.Option<R> unapply(T1);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #19                 // InterfaceMethod scala/PartialFunction.unapply$:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1     a   Ljava/lang/Object;
    Signature: #14                          // (TT1;)Lscala/Option<TR;>;
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.PartialFunction<T1, R> elementWise();
    descriptor: ()Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #29                 // InterfaceMethod scala/PartialFunction.elementWise$:(Lscala/PartialFunction;)Lscala/PartialFunction;
         4: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/AbstractPartialFunction;
    Signature: #25                          // ()Lscala/PartialFunction<TT1;TR;>;

  public <A1 extends T1, B1 extends java.lang.Object> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #36                 // InterfaceMethod scala/PartialFunction.orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1  that   Lscala/PartialFunction;
    Signature: #31                          // <A1:TT1;B1:Ljava/lang/Object;>(Lscala/PartialFunction<TA1;TB1;>;)Lscala/PartialFunction<TA1;TB1;>;
    MethodParameters:
      Name                           Flags
      that                           final

  public <C$ extends java.lang.Object> scala.PartialFunction<T1, C$> andThen(scala.Function1<R, C$>);
    descriptor: (Lscala/Function1;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #45                 // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1     k   Lscala/Function1;
    Signature: #40                          // <C$:Ljava/lang/Object;>(Lscala/Function1<TR;TC$;>;)Lscala/PartialFunction<TT1;TC$;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public <C$ extends java.lang.Object> scala.PartialFunction<T1, C$> andThen(scala.PartialFunction<R, C$>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #49                 // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1     k   Lscala/PartialFunction;
    Signature: #47                          // <C$:Ljava/lang/Object;>(Lscala/PartialFunction<TR;TC$;>;)Lscala/PartialFunction<TT1;TC$;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public <R$ extends java.lang.Object> scala.PartialFunction<R$, R> compose(scala.PartialFunction<R$, T1>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #54                 // InterfaceMethod scala/PartialFunction.compose$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1     k   Lscala/PartialFunction;
    Signature: #51                          // <R$:Ljava/lang/Object;>(Lscala/PartialFunction<TR$;TT1;>;)Lscala/PartialFunction<TR$;TR;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public scala.Function1<T1, scala.Option<R>> lift();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod scala/PartialFunction.lift$:(Lscala/PartialFunction;)Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/AbstractPartialFunction;
    Signature: #57                          // ()Lscala/Function1<TT1;Lscala/Option<TR;>;>;

  public <A1 extends T1, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #70                 // InterfaceMethod scala/PartialFunction.applyOrElse$:(Lscala/PartialFunction;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/runtime/AbstractPartialFunction;
            0       7     1     x   Ljava/lang/Object;
            0       7     2 default   Lscala/Function1;
    Signature: #64                          // <A1:TT1;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public <U extends java.lang.Object> scala.Function1<T1, java.lang.Object> runWith(scala.Function1<R, U>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #78                 // InterfaceMethod scala/PartialFunction.runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1 action   Lscala/Function1;
    Signature: #73                          // <U:Ljava/lang/Object;>(Lscala/Function1<TR;TU;>;)Lscala/Function1<TT1;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      action                         final

  public <A$ extends java.lang.Object> scala.Function1<A$, R> compose(scala.Function1<A$, T1>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #85                 // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1     g   Lscala/Function1;
    Signature: #79                          // <A$:Ljava/lang/Object;>(Lscala/Function1<TA$;TT1;>;)Lscala/Function1<TA$;TR;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/AbstractPartialFunction;

  public R apply(T1);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #100                // Field scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
         5: invokevirtual #103                // Method scala/PartialFunction$.empty:()Lscala/PartialFunction;
         8: invokevirtual #105                // Method applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        11: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   Ljava/lang/Object;
    Signature: #94                          // (TT1;)TR;
    MethodParameters:
      Name                           Flags
      x                              final

  public boolean apply$mcZD$sp(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #113                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #121                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   D
    MethodParameters:
      Name                           Flags
      x                              final

  public double apply$mcDD$sp(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #113                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #128                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        11: dreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   D
    MethodParameters:
      Name                           Flags
      x                              final

  public float apply$mcFD$sp(double);
    descriptor: (D)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #113                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #134                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
        11: freturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   D
    MethodParameters:
      Name                           Flags
      x                              final

  public int apply$mcID$sp(double);
    descriptor: (D)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #113                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #140                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   D
    MethodParameters:
      Name                           Flags
      x                              final

  public long apply$mcJD$sp(double);
    descriptor: (D)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #113                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #146                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        11: lreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   D
    MethodParameters:
      Name                           Flags
      x                              final

  public void apply$mcVD$sp(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #113                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: pop
         9: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/AbstractPartialFunction;
            0      10     1     x   D
    MethodParameters:
      Name                           Flags
      x                              final

  public boolean apply$mcZF$sp(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #155                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #121                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public double apply$mcDF$sp(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #155                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #128                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        11: dreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public float apply$mcFF$sp(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #155                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #134                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
        11: freturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public int apply$mcIF$sp(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #155                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #140                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public long apply$mcJF$sp(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #155                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #146                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        11: lreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #155                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: pop
         9: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/AbstractPartialFunction;
            0      10     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public boolean apply$mcZI$sp(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #121                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #128                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        11: dreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public float apply$mcFI$sp(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #134                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
        11: freturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #140                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public long apply$mcJI$sp(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #146                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        11: lreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public void apply$mcVI$sp(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: pop
         9: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/AbstractPartialFunction;
            0      10     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public boolean apply$mcZJ$sp(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #191                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #121                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   J
    MethodParameters:
      Name                           Flags
      x                              final

  public double apply$mcDJ$sp(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #191                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #128                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        11: dreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   J
    MethodParameters:
      Name                           Flags
      x                              final

  public float apply$mcFJ$sp(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #191                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #134                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
        11: freturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   J
    MethodParameters:
      Name                           Flags
      x                              final

  public int apply$mcIJ$sp(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #191                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #140                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        11: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   J
    MethodParameters:
      Name                           Flags
      x                              final

  public long apply$mcJJ$sp(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #191                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #146                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        11: lreturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction;
            0      12     1     x   J
    MethodParameters:
      Name                           Flags
      x                              final

  public void apply$mcVJ$sp(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #191                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
         5: invokevirtual #115                // Method apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: pop
         9: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/AbstractPartialFunction;
            0      10     1     x   J
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.Function1 andThen(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #204                // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction;
            0       6     1     g   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      g                              final

  public scala.runtime.AbstractPartialFunction();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #208                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/AbstractPartialFunction;
}
Signature: #3                           // <T1:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lscala/PartialFunction<TT1;TR;>;
SourceFile: "AbstractPartialFunction.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005a3Qa\u0001\u0003\u0002\u0002%AQ\u0001\u0015\u0001\u0005\u0002ECQ\u0001\u0016\u0001\u0005\u0002U\u0013q#\u00112tiJ\f7\r\u001e)beRL\u0017\r\u001c$v]\u000e$\u0018n\u001c8\u000b\u0005\u00151\u0011a\u0002:v]RLW.\u001a\u0006\u0002\u000f\u0005)1oY1mC\u000e\u0001Qc\u0001\u0006\u0015yM!\u0001aC\bN!\taQ\"D\u0001\u0007\u0013\tqaA\u0001\u0004B]f\u0014VM\u001a\t\u0005\u0019A\u00112(\u0003\u0002\u0012\r\tIa)\u001e8di&|g.\r\t\u0003\'Qa\u0001\u0001B\u0005\u0016\u0001\u0001\u0006\t\u0011#b\u0001-\t\u0011A+M\t\u0003/i\u0001\"\u0001\u0004\r\n\u0005e1!a\u0002(pi\"Lgn\u001a\t\u0003\u0019mI!\u0001\b\u0004\u0003\u0007\u0005s\u0017\u0010K\u0002\u0015=\u0005\u0002\"\u0001D\u0010\n\u0005\u00012!aC:qK\u000eL\u0017\r\\5{K\u0012\fTa\t\u00129ue\u00022a\t\u0014*\u001d\taA%\u0003\u0002&\r\u0005i1\u000b]3dS\u0006d\u0017N_1cY\u0016L!a\n\u0015\u0003\u000b\u001d\u0013x.\u001e9\u000b\u0005\u00152\u0001C\u0002\u0007+Y=\u0012T\'\u0003\u0002,\r\t1A+\u001e9mKR\u0002\"\u0001D\u0017\n\u000592!aA%oiB\u0011A\u0002M\u0005\u0003c\u0019\u0011A\u0001T8oOB\u0011AbM\u0005\u0003i\u0019\u0011QA\u00127pCR\u0004\"\u0001\u0004\u001c\n\u0005]2!A\u0002#pk\ndW-\u0003\u0002:Q\u0005\u0019\u0011I]42\t\u0011\u001aC%\n\t\u0003\'q\"\u0011\"\u0010\u0001!\u0002\u0003%)\u0019\u0001\f\u0003\u0003IC3\u0001\u0010\u0010@c\u0015\u0019\u0003I\u0013\'L!\r\u0019c%\u0011\t\t\u0019\tcsFM\u001bE\u000f&\u00111I\u0002\u0002\u0007)V\u0004H.\u001a\u001c\u0011\u00051)\u0015B\u0001$\u0007\u0005\u001d\u0011un\u001c7fC:\u0004\"\u0001\u0004%\n\u0005%3!\u0001B+oSRL!a\u0013\u0015\u0002\rI+G/\u001e:oc\u0011!3\u0005J\u0013\u0011\t1q%cO\u0005\u0003\u001f\u001a\u0011q\u0002U1si&\fGNR;oGRLwN\\\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003I\u0003Ba\u0015\u0001\u0013w5\tA!A\u0003baBd\u0017\u0010\u0006\u0002<-\")qK\u0001a\u0001%\u0005\t\u0001\u0010"
    )
  ScalaInlineInfo: length = 0xC2 (unknown attribute)
   01 00 00 26 00 CD 00 CE 00 00 26 00 48 00 00 26
   00 27 00 00 26 00 1B 00 00 5C 00 5D 00 00 7B 00
   7C 00 00 9D 00 9E 00 00 AF 00 B0 00 00 C1 00 C2
   00 00 81 00 82 00 00 9F 00 A0 00 00 B1 00 B2 00
   00 C3 00 C4 00 00 87 00 88 00 00 A1 00 A2 00 00
   B3 00 B4 00 00 C5 00 C6 00 00 8D 00 8E 00 00 A3
   00 A4 00 00 B5 00 B6 00 00 C7 00 C8 00 00 93 00
   94 00 00 A5 00 A6 00 00 B7 00 B8 00 00 C9 00 CA
   00 00 6A 00 6B 00 00 95 00 96 00 00 A7 00 A8 00
   00 B9 00 BA 00 00 3E 00 3F 00 00 32 00 48 00 00
   32 00 1B 00 00 17 00 18 00 00 37 00 38 00 00 1E
   00 1B 00 00 47 00 48 00 00 56 00 57 00 00 0C 00
   0D 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
