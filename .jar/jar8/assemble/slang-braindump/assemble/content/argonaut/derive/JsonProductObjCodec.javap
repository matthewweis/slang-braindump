Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/derive/JsonProductObjCodec.class
  Last modified May 29, 2022; size 6527 bytes
  SHA-256 checksum 21c750986bad30d9b6db98d80e9a6c05c4f3a4091db5c3ffd526fbf374498a70
  Compiled from "JsonProductCodec.scala"
public class argonaut.derive.JsonProductObjCodec implements argonaut.derive.JsonProductCodec
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // argonaut/derive/JsonProductObjCodec
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 9, attributes: 6
Constant pool:
    #1 = Utf8               argonaut/derive/JsonProductObjCodec
    #2 = Class              #1            // argonaut/derive/JsonProductObjCodec
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               argonaut/derive/JsonProductCodec
    #6 = Class              #5            // argonaut/derive/JsonProductCodec
    #7 = Utf8               JsonProductCodec.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u000514A\u0001C\u0005\u0001\u001d!)\u0011\u0004\u0001C\u00015!)A\u0004\u0001C\u0001;!91\u0006\u0001b\u0001\n\u0003a\u0003BB\u0019\u0001A\u0003%Q\u0006C\u00033\u0001\u0011\u00051\u0007C\u0003D\u0001\u0011\u0005A\tC\u0003Q\u0001\u0011\u0005\u0011KA\nKg>t\u0007K]8ek\u000e$xJ\u00196D_\u0012,7M\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u00011c\u0001\u0001\u0010+A\u0011\u0001cE\u0007\u0002#)\t!#A\u0003tG\u0006d\u0017-\u0003\u0002\u0015#\t1\u0011I\\=SK\u001a\u0004\"AF\f\u000e\u0003%I!\u0001G\u0005\u0003!)\u001bxN\u001c)s_\u0012,8\r^\"pI\u0016\u001c\u0017A\u0002\u001fj]&$h\bF\u0001\u001c!\t1\u0002!\u0001\u0006u_*\u001bxN\u001c(b[\u0016$\"AH\u0015\u0011\u0005}1cB\u0001\u0011%!\t\t\u0013#D\u0001#\u0015\t\u0019S\"\u0001\u0004=e>|GOP\u0005\u0003KE\ta\u0001\u0015:fI\u00164\u0017BA\u0014)\u0005\u0019\u0019FO]5oO*\u0011Q%\u0005\u0005\u0006U\t\u0001\rAH\u0001\u0005]\u0006lW-A\u0006f]\u000e|G-Z#naRLX#A\u0017\u0011\u00059zS\"A\u0006\n\u0005AZ!\u0001\u0002&t_:\fA\"\u001a8d_\u0012,W)\u001c9us\u0002\n1\"\u001a8d_\u0012,g)[3mIR!Q\u0006N\u001d<\u0011\u0015)T\u00011\u00017\u0003\u00151\u0017.\u001a7e!\u0011\u0001rGH\u0017\n\u0005a\n\"A\u0002+va2,\'\u0007C\u0003;\u000b\u0001\u0007Q&A\u0002pE*Da\u0001P\u0003\u0005\u0002\u0004i\u0014a\u00023fM\u0006,H\u000e\u001e\t\u0004!y\u0002\u0015BA \u0012\u0005!a$-\u001f8b[\u0016t\u0004c\u0001\tB[%\u0011!)\u0005\u0002\u0007\u001fB$\u0018n\u001c8\u0002\u0017\u0011,7m\u001c3f\u000b6\u0004H/\u001f\u000b\u0003\u000b.\u00032A\f$I\u0013\t95B\u0001\u0007EK\u000e|G-\u001a*fgVdG\u000f\u0005\u0002\u0011\u0013&\u0011!*\u0005\u0002\u0005+:LG\u000fC\u0003M\r\u0001\u0007Q*\u0001\u0004dkJ\u001cxN\u001d\t\u0003]9K!aT\u0006\u0003\u000f!\u001bUO]:pe\u0006YA-Z2pI\u00164\u0015.\u001a7e+\t\u0011v\u000bF\u0003TG\u0012,\'\u000eE\u0002/\rR\u0003B\u0001E\u001cVAB\u0011ak\u0016\u0007\u0001\t\u0015AvA1\u0001Z\u0005\u0005\t\u0015C\u0001.^!\t\u00012,\u0003\u0002]#\t9aj\u001c;iS:<\u0007C\u0001\t_\u0013\ty\u0016CA\u0002B]f\u0004\"AL1\n\u0005\t\\!aB!DkJ\u001cxN\u001d\u0005\u0006U\u001d\u0001\rA\b\u0005\u0006\u0019\u001e\u0001\r!\u0014\u0005\u0006M\u001e\u0001\raZ\u0001\u0007I\u0016\u001cw\u000eZ3\u0011\u00079BW+\u0003\u0002j\u0017\tQA)Z2pI\u0016T5o\u001c8\t\u000bq:\u0001\u0019A6\u0011\u0007A\tU\u000b
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/Predef$ArrowAssoc$
   #17 = Class              #16           // scala/Predef$ArrowAssoc$
   #18 = Utf8               scala/Predef
   #19 = Class              #18           // scala/Predef
   #20 = Utf8               ArrowAssoc$
   #21 = Utf8               encodeEmpty
   #22 = Utf8               Largonaut/Json;
   #23 = Utf8               toJsonName
   #24 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #25 = Utf8               name
   #26 = Utf8               this
   #27 = Utf8               Largonaut/derive/JsonProductObjCodec;
   #28 = Utf8               Ljava/lang/String;
   #29 = Utf8               ()Largonaut/Json;
   #30 = NameAndType        #21:#22       // encodeEmpty:Largonaut/Json;
   #31 = Fieldref           #2.#30        // argonaut/derive/JsonProductObjCodec.encodeEmpty:Largonaut/Json;
   #32 = Utf8               encodeField
   #33 = Utf8               (Lscala/Tuple2;Largonaut/Json;Lscala/Function0;)Largonaut/Json;
   #34 = Utf8               (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;Largonaut/Json;Lscala/Function0<Lscala/Option<Largonaut/Json;>;>;)Largonaut/Json;
   #35 = Utf8               field
   #36 = Utf8               obj
   #37 = Utf8               default
   #38 = Utf8               scala/Tuple2
   #39 = Class              #38           // scala/Tuple2
   #40 = Utf8               _1
   #41 = Utf8               ()Ljava/lang/Object;
   #42 = NameAndType        #40:#41       // _1:()Ljava/lang/Object;
   #43 = Methodref          #39.#42       // scala/Tuple2._1:()Ljava/lang/Object;
   #44 = Utf8               java/lang/String
   #45 = Class              #44           // java/lang/String
   #46 = Utf8               _2
   #47 = NameAndType        #46:#41       // _2:()Ljava/lang/Object;
   #48 = Methodref          #39.#47       // scala/Tuple2._2:()Ljava/lang/Object;
   #49 = Utf8               argonaut/Json
   #50 = Class              #49           // argonaut/Json
   #51 = Utf8               <init>
   #52 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #53 = NameAndType        #51:#52       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #54 = Methodref          #39.#53       // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #55 = Utf8               scala/MatchError
   #56 = Class              #55           // scala/MatchError
   #57 = Utf8               (Ljava/lang/Object;)V
   #58 = NameAndType        #51:#57       // "<init>":(Ljava/lang/Object;)V
   #59 = Methodref          #56.#58       // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #60 = Utf8               scala/Option$
   #61 = Class              #60           // scala/Option$
   #62 = Utf8               MODULE$
   #63 = Utf8               Lscala/Option$;
   #64 = NameAndType        #62:#63       // MODULE$:Lscala/Option$;
   #65 = Fieldref           #61.#64       // scala/Option$.MODULE$:Lscala/Option$;
   #66 = Utf8               scala/Function0
   #67 = Class              #66           // scala/Function0
   #68 = Utf8               apply
   #69 = NameAndType        #68:#41       // apply:()Ljava/lang/Object;
   #70 = InterfaceMethodref #67.#69       // scala/Function0.apply:()Ljava/lang/Object;
   #71 = Utf8               scala/Option
   #72 = Class              #71           // scala/Option
   #73 = Utf8               option2Iterable
   #74 = Utf8               (Lscala/Option;)Lscala/collection/Iterable;
   #75 = NameAndType        #73:#74       // option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
   #76 = Methodref          #61.#75       // scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
   #77 = Utf8               scala/collection/Iterable
   #78 = Class              #77           // scala/collection/Iterable
   #79 = Utf8               toSeq
   #80 = Utf8               ()Lscala/collection/immutable/Seq;
   #81 = NameAndType        #79:#80       // toSeq:()Lscala/collection/immutable/Seq;
   #82 = InterfaceMethodref #78.#81       // scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
   #83 = Utf8               scala/collection/immutable/Seq
   #84 = Class              #83           // scala/collection/immutable/Seq
   #85 = Utf8               contains
   #86 = Utf8               (Ljava/lang/Object;)Z
   #87 = NameAndType        #85:#86       // contains:(Ljava/lang/Object;)Z
   #88 = InterfaceMethodref #84.#87       // scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
   #89 = Utf8               Lscala/Predef$ArrowAssoc$;
   #90 = NameAndType        #62:#89       // MODULE$:Lscala/Predef$ArrowAssoc$;
   #91 = Fieldref           #17.#90       // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
   #92 = Utf8               scala/Predef$
   #93 = Class              #92           // scala/Predef$
   #94 = Utf8               Lscala/Predef$;
   #95 = NameAndType        #62:#94       // MODULE$:Lscala/Predef$;
   #96 = Fieldref           #93.#95       // scala/Predef$.MODULE$:Lscala/Predef$;
   #97 = NameAndType        #23:#24       // toJsonName:(Ljava/lang/String;)Ljava/lang/String;
   #98 = Methodref          #2.#97        // argonaut/derive/JsonProductObjCodec.toJsonName:(Ljava/lang/String;)Ljava/lang/String;
   #99 = Utf8               ArrowAssoc
  #100 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #101 = NameAndType        #99:#100      // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #102 = Methodref          #93.#101      // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #103 = Utf8               $minus$greater$extension
  #104 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #105 = NameAndType        #103:#104     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #106 = Methodref          #17.#105      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #107 = Utf8               $minus$greater$colon
  #108 = Utf8               (Lscala/Tuple2;)Largonaut/Json;
  #109 = NameAndType        #107:#108     // $minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
  #110 = Methodref          #50.#109      // argonaut/Json.$minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
  #111 = Utf8               content
  #112 = Utf8               Lscala/Tuple2;
  #113 = Utf8               Lscala/Function0;
  #114 = Utf8               decodeEmpty
  #115 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult;
  #116 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult<Lscala/runtime/BoxedUnit;>;
  #117 = Utf8               cursor
  #118 = Utf8               argonaut/DecodeResult$
  #119 = Class              #118          // argonaut/DecodeResult$
  #120 = Utf8               Largonaut/DecodeResult$;
  #121 = NameAndType        #62:#120      // MODULE$:Largonaut/DecodeResult$;
  #122 = Fieldref           #119.#121     // argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
  #123 = Utf8               scala/runtime/BoxedUnit
  #124 = Class              #123          // scala/runtime/BoxedUnit
  #125 = Utf8               UNIT
  #126 = Utf8               Lscala/runtime/BoxedUnit;
  #127 = NameAndType        #125:#126     // UNIT:Lscala/runtime/BoxedUnit;
  #128 = Fieldref           #124.#127     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #129 = Utf8               ok
  #130 = Utf8               (Ljava/lang/Object;)Largonaut/DecodeResult;
  #131 = NameAndType        #129:#130     // ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
  #132 = Methodref          #119.#131     // argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
  #133 = Utf8               Largonaut/HCursor;
  #134 = Utf8               decodeField
  #135 = Utf8               (Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson;Lscala/Option;)Largonaut/DecodeResult;
  #136 = Utf8               <A:Ljava/lang/Object;>(Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson<TA;>;Lscala/Option<TA;>;)Largonaut/DecodeResult<Lscala/Tuple2<TA;Largonaut/ACursor;>;>;
  #137 = Utf8               decode
  #138 = Utf8               argonaut/HCursor
  #139 = Class              #138          // argonaut/HCursor
  #140 = Utf8               $minus$minus$bslash
  #141 = Utf8               (Ljava/lang/String;)Largonaut/ACursor;
  #142 = NameAndType        #140:#141     // $minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #143 = Methodref          #139.#142     // argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #144 = Utf8               scala/None$
  #145 = Class              #144          // scala/None$
  #146 = Utf8               Lscala/None$;
  #147 = NameAndType        #62:#146      // MODULE$:Lscala/None$;
  #148 = Fieldref           #145.#147     // scala/None$.MODULE$:Lscala/None$;
  #149 = Utf8               equals
  #150 = NameAndType        #149:#86      // equals:(Ljava/lang/Object;)Z
  #151 = Methodref          #4.#150       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #152 = Utf8               result$1
  #153 = Utf8               (Largonaut/ACursor;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
  #154 = NameAndType        #152:#153     // result$1:(Largonaut/ACursor;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
  #155 = Methodref          #2.#154       // argonaut/derive/JsonProductObjCodec.result$1:(Largonaut/ACursor;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
  #156 = Utf8               scala/Some
  #157 = Class              #156          // scala/Some
  #158 = Utf8               value
  #159 = NameAndType        #158:#41      // value:()Ljava/lang/Object;
  #160 = Methodref          #157.#159     // scala/Some.value:()Ljava/lang/Object;
  #161 = Utf8               argonaut/ACursor
  #162 = Class              #161          // argonaut/ACursor
  #163 = Utf8               succeeded
  #164 = Utf8               ()Z
  #165 = NameAndType        #163:#164     // succeeded:()Z
  #166 = Methodref          #162.#165     // argonaut/ACursor.succeeded:()Z
  #167 = Utf8               argonaut/ACursor$
  #168 = Class              #167          // argonaut/ACursor$
  #169 = Utf8               Largonaut/ACursor$;
  #170 = NameAndType        #62:#169      // MODULE$:Largonaut/ACursor$;
  #171 = Fieldref           #168.#170     // argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
  #172 = Utf8               (Largonaut/HCursor;)Largonaut/ACursor;
  #173 = NameAndType        #129:#172     // ok:(Largonaut/HCursor;)Largonaut/ACursor;
  #174 = Methodref          #168.#173     // argonaut/ACursor$.ok:(Largonaut/HCursor;)Largonaut/ACursor;
  #175 = Utf8               d
  #176 = Utf8               Ljava/lang/Object;
  #177 = Utf8               c
  #178 = Utf8               Largonaut/ACursor;
  #179 = Utf8               Largonaut/DecodeJson;
  #180 = Utf8               Lscala/Option;
  #181 = Utf8               argonaut/DecodeResult
  #182 = Class              #181          // argonaut/DecodeResult
  #183 = Utf8               argonaut/DecodeJson
  #184 = Class              #183          // argonaut/DecodeJson
  #185 = Utf8               $anonfun$decodeField$1
  #186 = Utf8               (Largonaut/HCursor;Ljava/lang/Object;)Lscala/Tuple2;
  #187 = Utf8               cursor$1
  #188 = Utf8               x$2
  #189 = Utf8               c$1
  #190 = Utf8               decode$1
  #191 = Utf8               as
  #192 = Utf8               (Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #193 = NameAndType        #191:#192     // as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #194 = Methodref          #162.#193     // argonaut/ACursor.as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #195 = MethodType         #100          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #196 = NameAndType        #185:#186     // $anonfun$decodeField$1:(Largonaut/HCursor;Ljava/lang/Object;)Lscala/Tuple2;
  #197 = Methodref          #2.#196       // argonaut/derive/JsonProductObjCodec.$anonfun$decodeField$1:(Largonaut/HCursor;Ljava/lang/Object;)Lscala/Tuple2;
  #198 = MethodHandle       6:#197        // REF_invokeStatic argonaut/derive/JsonProductObjCodec.$anonfun$decodeField$1:(Largonaut/HCursor;Ljava/lang/Object;)Lscala/Tuple2;
  #199 = Utf8               (Ljava/lang/Object;)Lscala/Tuple2;
  #200 = MethodType         #199          //  (Ljava/lang/Object;)Lscala/Tuple2;
  #201 = Integer            5
  #202 = Integer            1
  #203 = Utf8               java/lang/invoke/LambdaMetafactory
  #204 = Class              #203          // java/lang/invoke/LambdaMetafactory
  #205 = Utf8               altMetafactory
  #206 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #207 = NameAndType        #205:#206     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #208 = Methodref          #204.#207     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #209 = MethodHandle       6:#208        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #210 = Utf8               (Largonaut/HCursor;)Lscala/Function1;
  #211 = NameAndType        #68:#210      // apply:(Largonaut/HCursor;)Lscala/Function1;
  #212 = InvokeDynamic      #0:#211       // #0:apply:(Largonaut/HCursor;)Lscala/Function1;
  #213 = Utf8               map
  #214 = Utf8               (Lscala/Function1;)Largonaut/DecodeResult;
  #215 = NameAndType        #213:#214     // map:(Lscala/Function1;)Largonaut/DecodeResult;
  #216 = Methodref          #182.#215     // argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
  #217 = Utf8               ()V
  #218 = NameAndType        #51:#217      // "<init>":()V
  #219 = Methodref          #4.#218       // java/lang/Object."<init>":()V
  #220 = Utf8               argonaut/Json$
  #221 = Class              #220          // argonaut/Json$
  #222 = Utf8               Largonaut/Json$;
  #223 = NameAndType        #62:#222      // MODULE$:Largonaut/Json$;
  #224 = Fieldref           #221.#223     // argonaut/Json$.MODULE$:Largonaut/Json$;
  #225 = Utf8               scala/collection/immutable/Nil$
  #226 = Class              #225          // scala/collection/immutable/Nil$
  #227 = Utf8               Lscala/collection/immutable/Nil$;
  #228 = NameAndType        #62:#227      // MODULE$:Lscala/collection/immutable/Nil$;
  #229 = Fieldref           #226.#228     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #230 = Utf8               (Lscala/collection/immutable/Seq;)Largonaut/Json;
  #231 = NameAndType        #36:#230      // obj:(Lscala/collection/immutable/Seq;)Largonaut/Json;
  #232 = Methodref          #221.#231     // argonaut/Json$.obj:(Lscala/collection/immutable/Seq;)Largonaut/Json;
  #233 = Utf8               $deserializeLambda$
  #234 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #235 = Utf8               scala/runtime/LambdaDeserialize
  #236 = Class              #235          // scala/runtime/LambdaDeserialize
  #237 = Utf8               bootstrap
  #238 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #239 = NameAndType        #237:#238     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #240 = Methodref          #236.#239     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #241 = MethodHandle       6:#240        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #242 = Utf8               lambdaDeserialize
  #243 = NameAndType        #242:#234     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #244 = InvokeDynamic      #1:#243       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #245 = Utf8               Code
  #246 = Utf8               LineNumberTable
  #247 = Utf8               LocalVariableTable
  #248 = Utf8               MethodParameters
  #249 = Utf8               StackMapTable
  #250 = Utf8               Signature
  #251 = Utf8               InnerClasses
  #252 = Utf8               SourceFile
  #253 = Utf8               RuntimeVisibleAnnotations
  #254 = Utf8               BootstrapMethods
  #255 = Utf8               ScalaInlineInfo
  #256 = Utf8               ScalaSig
{
  private final argonaut.Json encodeEmpty;
    descriptor: Largonaut/Json;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public java.lang.String toJsonName(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Largonaut/derive/JsonProductObjCodec;
            0       2     1  name   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name                           final

  public argonaut.Json encodeEmpty();
    descriptor: ()Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #31                 // Field encodeEmpty:Largonaut/Json;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/derive/JsonProductObjCodec;

  public argonaut.Json encodeField(scala.Tuple2<java.lang.String, argonaut.Json>, argonaut.Json, scala.Function0<scala.Option<argonaut.Json>>);
    descriptor: (Lscala/Tuple2;Largonaut/Json;Lscala/Function0;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=12, args_size=4
         0: aload_1
         1: astore        6
         3: aload         6
         5: ifnull        44
         8: aload         6
        10: invokevirtual #43                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #45                 // class java/lang/String
        16: astore        7
        18: aload         6
        20: invokevirtual #48                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #50                 // class argonaut/Json
        26: astore        8
        28: new           #39                 // class scala/Tuple2
        31: dup
        32: aload         7
        34: aload         8
        36: invokespecial #54                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        39: astore        4
        41: goto          57
        44: goto          47
        47: new           #56                 // class scala/MatchError
        50: dup
        51: aload         6
        53: invokespecial #59                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        56: athrow
        57: aload         4
        59: astore        5
        61: aload         5
        63: invokevirtual #43                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        66: checkcast     #45                 // class java/lang/String
        69: astore        9
        71: aload         5
        73: invokevirtual #48                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        76: checkcast     #50                 // class argonaut/Json
        79: astore        10
        81: getstatic     #65                 // Field scala/Option$.MODULE$:Lscala/Option$;
        84: aload_3
        85: invokeinterface #70,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        90: checkcast     #72                 // class scala/Option
        93: invokevirtual #76                 // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
        96: invokeinterface #82,  1           // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
       101: aload         10
       103: invokeinterface #88,  2           // InterfaceMethod scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
       108: ifeq          115
       111: aload_2
       112: goto          143
       115: getstatic     #91                 // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       118: getstatic     #96                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       121: aload_0
       122: aload         9
       124: invokevirtual #98                 // Method toJsonName:(Ljava/lang/String;)Ljava/lang/String;
       127: invokevirtual #102                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       130: aload         10
       132: invokevirtual #106                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       135: astore        11
       137: aload_2
       138: aload         11
       140: invokevirtual #110                // Method argonaut/Json.$minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
       143: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 44
          locals = [ top, top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/derive/JsonProductObjCodec, class scala/Tuple2, class argonaut/Json, class scala/Function0, class scala/Tuple2, top, class scala/Tuple2, class java/lang/String, class argonaut/Json ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class argonaut/derive/JsonProductObjCodec, class scala/Tuple2, class argonaut/Json, class scala/Function0, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class argonaut/Json, class java/lang/String, class argonaut/Json ]
          stack = []
        frame_type = 91 /* same_locals_1_stack_item */
          stack = [ class argonaut/Json ]
      LineNumberTable:
        line 48: 0
        line 49: 81
        line 50: 111
        line 52: 115
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      28     7  name   Ljava/lang/String;
           26      18     8 content   Largonaut/Json;
           69      74     9  name   Ljava/lang/String;
           79      64    10 content   Largonaut/Json;
            0     144     0  this   Largonaut/derive/JsonProductObjCodec;
            0     144     1 field   Lscala/Tuple2;
            0     144     2   obj   Largonaut/Json;
            0     144     3 default   Lscala/Function0;
    Signature: #34                          // (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;Largonaut/Json;Lscala/Function0<Lscala/Option<Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      field                          final
      obj                            final
      default                        final

  public argonaut.DecodeResult<scala.runtime.BoxedUnit> decodeEmpty(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #122                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
         3: getstatic     #128                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         6: invokevirtual #132                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
         9: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/derive/JsonProductObjCodec;
            0      10     1 cursor   Largonaut/HCursor;
    Signature: #116                         // (Largonaut/HCursor;)Largonaut/DecodeResult<Lscala/runtime/BoxedUnit;>;
    MethodParameters:
      Name                           Flags
      cursor                         final

  public <A extends java.lang.Object> argonaut.DecodeResult<scala.Tuple2<A, argonaut.ACursor>> decodeField(java.lang.String, argonaut.HCursor, argonaut.DecodeJson<A>, scala.Option<A>);
    descriptor: (Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson;Lscala/Option;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=10, args_size=5
         0: aload_2
         1: aload_0
         2: aload_1
         3: invokevirtual #98                 // Method toJsonName:(Ljava/lang/String;)Ljava/lang/String;
         6: invokevirtual #143                // Method argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
         9: astore        6
        11: aload         4
        13: astore        7
        15: getstatic     #148                // Field scala/None$.MODULE$:Lscala/None$;
        18: aload         7
        20: invokevirtual #151                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        23: ifeq          38
        26: aload         6
        28: aload_3
        29: aload_2
        30: invokestatic  #155                // Method result$1:(Largonaut/ACursor;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
        33: astore        5
        35: goto          121
        38: goto          41
        41: aload         7
        43: instanceof    #157                // class scala/Some
        46: ifeq          108
        49: aload         7
        51: checkcast     #157                // class scala/Some
        54: astore        8
        56: aload         8
        58: invokevirtual #160                // Method scala/Some.value:()Ljava/lang/Object;
        61: astore        9
        63: aload         6
        65: invokevirtual #166                // Method argonaut/ACursor.succeeded:()Z
        68: ifeq          81
        71: aload         6
        73: aload_3
        74: aload_2
        75: invokestatic  #155                // Method result$1:(Largonaut/ACursor;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
        78: goto          103
        81: getstatic     #122                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        84: new           #39                 // class scala/Tuple2
        87: dup
        88: aload         9
        90: getstatic     #171                // Field argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
        93: aload_2
        94: invokevirtual #174                // Method argonaut/ACursor$.ok:(Largonaut/HCursor;)Largonaut/ACursor;
        97: invokespecial #54                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       100: invokevirtual #132                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
       103: astore        5
       105: goto          121
       108: goto          111
       111: new           #56                 // class scala/MatchError
       114: dup
       115: aload         7
       117: invokespecial #59                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       120: athrow
       121: aload         5
       123: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 254 /* append */
          offset_delta = 38
          locals = [ top, class argonaut/ACursor, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 39
          locals = [ class scala/Some, class java/lang/Object ]
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class argonaut/DecodeResult ]
        frame_type = 249 /* chop */
          offset_delta = 4
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/derive/JsonProductObjCodec, class java/lang/String, class argonaut/HCursor, class argonaut/DecodeJson, class scala/Option, class argonaut/DecodeResult, class argonaut/ACursor, class scala/Option ]
          stack = []
      LineNumberTable:
        line 57: 0
        line 60: 11
        line 61: 15
        line 62: 41
        line 63: 63
        line 64: 71
        line 66: 81
        line 62: 108
        line 60: 111
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           61      47     9     d   Ljava/lang/Object;
            9     114     6     c   Largonaut/ACursor;
            0     124     0  this   Largonaut/derive/JsonProductObjCodec;
            0     124     1  name   Ljava/lang/String;
            0     124     2 cursor   Largonaut/HCursor;
            0     124     3 decode   Largonaut/DecodeJson;
            0     124     4 default   Lscala/Option;
    Signature: #136                         // <A:Ljava/lang/Object;>(Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson<TA;>;Lscala/Option<TA;>;)Largonaut/DecodeResult<Lscala/Tuple2<TA;Largonaut/ACursor;>;>;
    MethodParameters:
      Name                           Flags
      name                           final
      cursor                         final
      decode                         final
      default                        final

  public static final scala.Tuple2 $anonfun$decodeField$1(argonaut.HCursor, java.lang.Object);
    descriptor: (Largonaut/HCursor;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #39                 // class scala/Tuple2
         3: dup
         4: aload_1
         5: getstatic     #171                // Field argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
         8: aload_0
         9: invokevirtual #174                // Method argonaut/ACursor$.ok:(Largonaut/HCursor;)Largonaut/ACursor;
        12: invokespecial #54                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        15: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 cursor$1   Largonaut/HCursor;
            0      16     1   x$2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      cursor$1                       final
      x$2                            final

  private static final argonaut.DecodeResult result$1(argonaut.ACursor, argonaut.DecodeJson, argonaut.HCursor);
    descriptor: (Largonaut/ACursor;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #194                // Method argonaut/ACursor.as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
         5: aload_2
         6: invokedynamic #212,  0            // InvokeDynamic #0:apply:(Largonaut/HCursor;)Lscala/Function1;
        11: invokevirtual #216                // Method argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
        14: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0   c$1   Largonaut/ACursor;
            0      15     1 decode$1   Largonaut/DecodeJson;
            0      15     2 cursor$1   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      c$1                            final
      decode$1                       final
      cursor$1                       final

  public argonaut.derive.JsonProductObjCodec();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #219                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: getstatic     #224                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         8: getstatic     #229                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        11: invokevirtual #232                // Method argonaut/Json$.obj:(Lscala/collection/immutable/Seq;)Largonaut/Json;
        14: putfield      #31                 // Field encodeEmpty:Largonaut/Json;
        17: return
      LineNumberTable:
        line 42: 0
        line 46: 4
        line 42: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Largonaut/derive/JsonProductObjCodec;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #244,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // ArrowAssoc$=class scala/Predef$ArrowAssoc$ of class scala/Predef
SourceFile: "JsonProductCodec.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u000514A\u0001C\u0005\u0001\u001d!)\u0011\u0004\u0001C\u00015!)A\u0004\u0001C\u0001;!91\u0006\u0001b\u0001\n\u0003a\u0003BB\u0019\u0001A\u0003%Q\u0006C\u00033\u0001\u0011\u00051\u0007C\u0003D\u0001\u0011\u0005A\tC\u0003Q\u0001\u0011\u0005\u0011KA\nKg>t\u0007K]8ek\u000e$xJ\u00196D_\u0012,7M\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u00011c\u0001\u0001\u0010+A\u0011\u0001cE\u0007\u0002#)\t!#A\u0003tG\u0006d\u0017-\u0003\u0002\u0015#\t1\u0011I\\=SK\u001a\u0004\"AF\f\u000e\u0003%I!\u0001G\u0005\u0003!)\u001bxN\u001c)s_\u0012,8\r^\"pI\u0016\u001c\u0017A\u0002\u001fj]&$h\bF\u0001\u001c!\t1\u0002!\u0001\u0006u_*\u001bxN\u001c(b[\u0016$\"AH\u0015\u0011\u0005}1cB\u0001\u0011%!\t\t\u0013#D\u0001#\u0015\t\u0019S\"\u0001\u0004=e>|GOP\u0005\u0003KE\ta\u0001\u0015:fI\u00164\u0017BA\u0014)\u0005\u0019\u0019FO]5oO*\u0011Q%\u0005\u0005\u0006U\t\u0001\rAH\u0001\u0005]\u0006lW-A\u0006f]\u000e|G-Z#naRLX#A\u0017\u0011\u00059zS\"A\u0006\n\u0005AZ!\u0001\u0002&t_:\fA\"\u001a8d_\u0012,W)\u001c9us\u0002\n1\"\u001a8d_\u0012,g)[3mIR!Q\u0006N\u001d<\u0011\u0015)T\u00011\u00017\u0003\u00151\u0017.\u001a7e!\u0011\u0001rGH\u0017\n\u0005a\n\"A\u0002+va2,\'\u0007C\u0003;\u000b\u0001\u0007Q&A\u0002pE*Da\u0001P\u0003\u0005\u0002\u0004i\u0014a\u00023fM\u0006,H\u000e\u001e\t\u0004!y\u0002\u0015BA \u0012\u0005!a$-\u001f8b[\u0016t\u0004c\u0001\tB[%\u0011!)\u0005\u0002\u0007\u001fB$\u0018n\u001c8\u0002\u0017\u0011,7m\u001c3f\u000b6\u0004H/\u001f\u000b\u0003\u000b.\u00032A\f$I\u0013\t95B\u0001\u0007EK\u000e|G-\u001a*fgVdG\u000f\u0005\u0002\u0011\u0013&\u0011!*\u0005\u0002\u0005+:LG\u000fC\u0003M\r\u0001\u0007Q*\u0001\u0004dkJ\u001cxN\u001d\t\u0003]9K!aT\u0006\u0003\u000f!\u001bUO]:pe\u0006YA-Z2pI\u00164\u0015.\u001a7e+\t\u0011v\u000bF\u0003TG\u0012,\'\u000eE\u0002/\rR\u0003B\u0001E\u001cVAB\u0011ak\u0016\u0007\u0001\t\u0015AvA1\u0001Z\u0005\u0005\t\u0015C\u0001.^!\t\u00012,\u0003\u0002]#\t9aj\u001c;iS:<\u0007C\u0001\t_\u0013\ty\u0016CA\u0002B]f\u0004\"AL1\n\u0005\t\\!aB!DkJ\u001cxN\u001d\u0005\u0006U\u001d\u0001\rA\b\u0005\u0006\u0019\u001e\u0001\r!\u0014\u0005\u0006M\u001e\u0001\raZ\u0001\u0007I\u0016\u001cw\u000eZ3\u0011\u00079BW+\u0003\u0002j\u0017\tQA)Z2pI\u0016T5o\u001c8\t\u000bq:\u0001\u0019A6\u0011\u0007A\tU\u000b"
    )
BootstrapMethods:
  0: #209 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #195 (Ljava/lang/Object;)Ljava/lang/Object;
      #198 REF_invokeStatic argonaut/derive/JsonProductObjCodec.$anonfun$decodeField$1:(Largonaut/HCursor;Ljava/lang/Object;)Lscala/Tuple2;
      #200 (Ljava/lang/Object;)Lscala/Tuple2;
      #201 5
      #202 1
      #200 (Ljava/lang/Object;)Lscala/Tuple2;
  1: #241 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #198 REF_invokeStatic argonaut/derive/JsonProductObjCodec.$anonfun$decodeField$1:(Largonaut/HCursor;Ljava/lang/Object;)Lscala/Tuple2;
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 B9 00 BA 01 00 33 00 D9 00 00 72
   00 73 00 00 86 00 87 00 00 15 00 1D 00 00 20 00
   21 00 00 98 00 99 01 00 17 00 18 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
