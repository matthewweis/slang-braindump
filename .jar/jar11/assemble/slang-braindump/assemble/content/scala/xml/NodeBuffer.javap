Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/xml/NodeBuffer.class
  Last modified May 29, 2022; size 3887 bytes
  SHA-256 checksum d5aa3cae17cb9e7548bae06c8132f5f7643aca56c3b867a31f795383ce5e14f8
  Compiled from "NodeBuffer.scala"
public class scala.xml.NodeBuffer extends scala.collection.mutable.ArrayBuffer<scala.xml.Node> implements scala.xml.ScalaVersionSpecificNodeBuffer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/xml/NodeBuffer
  super_class: #5                         // scala/collection/mutable/ArrayBuffer
  interfaces: 1, fields: 0, methods: 5, attributes: 7
Constant pool:
    #1 = Utf8               scala/xml/NodeBuffer
    #2 = Class              #1            // scala/xml/NodeBuffer
    #3 = Utf8               Lscala/collection/mutable/ArrayBuffer<Lscala/xml/Node;>;Lscala/xml/ScalaVersionSpecificNodeBuffer;
    #4 = Utf8               scala/collection/mutable/ArrayBuffer
    #5 = Class              #4            // scala/collection/mutable/ArrayBuffer
    #6 = Utf8               scala/xml/ScalaVersionSpecificNodeBuffer
    #7 = Class              #6            // scala/xml/ScalaVersionSpecificNodeBuffer
    #8 = Utf8               NodeBuffer.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u00112Aa\u0001\u0003\u0001\u0013!)\u0011\u0004\u0001C\u00015!)A\u0004\u0001C\u0001;\tQaj\u001c3f\u0005V4g-\u001a:\u000b\u0005\u00151\u0011a\u0001=nY*\tq!A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001Qa\u0003E\u0002\f!Ii\u0011\u0001\u0004\u0006\u0003\u001b9\tq!\\;uC\ndWM\u0003\u0002\u0010\r\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\u0005Ea!aC!se\u0006L()\u001e4gKJ\u0004\"a\u0005\u000b\u000e\u0003\u0011I!!\u0006\u0003\u0003\t9{G-\u001a\t\u0003\']I!\u0001\u0007\u0003\u0003=M\u001b\u0017\r\\1WKJ\u001c\u0018n\u001c8Ta\u0016\u001c\u0017NZ5d\u001d>$WMQ;gM\u0016\u0014\u0018A\u0002\u001fj]&$h\bF\u0001\u001c!\t\u0019\u0002!A\u0005%C6\u0004H\u0005\u001d7vgR\u00111D\b\u0005\u0006?\t\u0001\r\u0001I\u0001\u0002_B\u0011\u0011EI\u0007\u0002\r%\u00111E\u0002\u0002\u0004\u0003:L\b
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               className
   #18 = Utf8               ()Ljava/lang/String;
   #19 = Utf8               className$
   #20 = Utf8               (Lscala/xml/ScalaVersionSpecificNodeBuffer;)Ljava/lang/String;
   #21 = NameAndType        #19:#20       // className$:(Lscala/xml/ScalaVersionSpecificNodeBuffer;)Ljava/lang/String;
   #22 = InterfaceMethodref #7.#21        // scala/xml/ScalaVersionSpecificNodeBuffer.className$:(Lscala/xml/ScalaVersionSpecificNodeBuffer;)Ljava/lang/String;
   #23 = Utf8               this
   #24 = Utf8               Lscala/xml/NodeBuffer;
   #25 = Utf8               $amp$plus
   #26 = Utf8               (Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   #27 = Utf8               o
   #28 = Utf8               scala/runtime/BoxedUnit
   #29 = Class              #28           // scala/runtime/BoxedUnit
   #30 = Utf8               scala/xml/Text$
   #31 = Class              #30           // scala/xml/Text$
   #32 = Utf8               MODULE$
   #33 = Utf8               Lscala/xml/Text$;
   #34 = NameAndType        #32:#33       // MODULE$:Lscala/xml/Text$;
   #35 = Fieldref           #31.#34       // scala/xml/Text$.MODULE$:Lscala/xml/Text$;
   #36 = Utf8               unapply
   #37 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #38 = NameAndType        #36:#37       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #39 = Methodref          #31.#38       // scala/xml/Text$.unapply:(Ljava/lang/Object;)Lscala/Option;
   #40 = Utf8               scala/Option
   #41 = Class              #40           // scala/Option
   #42 = Utf8               isEmpty
   #43 = Utf8               ()Z
   #44 = NameAndType        #42:#43       // isEmpty:()Z
   #45 = Methodref          #41.#44       // scala/Option.isEmpty:()Z
   #46 = Utf8               get
   #47 = Utf8               ()Ljava/lang/Object;
   #48 = NameAndType        #46:#47       // get:()Ljava/lang/Object;
   #49 = Methodref          #41.#48       // scala/Option.get:()Ljava/lang/Object;
   #50 = Utf8               java/lang/String
   #51 = Class              #50           // java/lang/String
   #52 = Utf8
   #53 = String             #52           //
   #54 = Utf8               java/lang/Object
   #55 = Class              #54           // java/lang/Object
   #56 = Utf8               equals
   #57 = Utf8               (Ljava/lang/Object;)Z
   #58 = NameAndType        #56:#57       // equals:(Ljava/lang/Object;)Z
   #59 = Methodref          #55.#58       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #60 = Utf8               UNIT
   #61 = Utf8               Lscala/runtime/BoxedUnit;
   #62 = NameAndType        #60:#61       // UNIT:Lscala/runtime/BoxedUnit;
   #63 = Fieldref           #29.#62       // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   #64 = Utf8               scala/collection/Iterator
   #65 = Class              #64           // scala/collection/Iterator
   #66 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #67 = MethodType         #66           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #68 = Utf8               $anonfun$$amp$plus$1
   #69 = Utf8               (Lscala/xml/NodeBuffer;Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   #70 = NameAndType        #68:#69       // $anonfun$$amp$plus$1:(Lscala/xml/NodeBuffer;Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   #71 = Methodref          #2.#70        // scala/xml/NodeBuffer.$anonfun$$amp$plus$1:(Lscala/xml/NodeBuffer;Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   #72 = MethodHandle       6:#71         // REF_invokeStatic scala/xml/NodeBuffer.$anonfun$$amp$plus$1:(Lscala/xml/NodeBuffer;Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   #73 = MethodType         #26           //  (Ljava/lang/Object;)Lscala/xml/NodeBuffer;
   #74 = Integer            5
   #75 = Integer            1
   #76 = Utf8               java/lang/invoke/LambdaMetafactory
   #77 = Class              #76           // java/lang/invoke/LambdaMetafactory
   #78 = Utf8               altMetafactory
   #79 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #80 = NameAndType        #78:#79       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = Methodref          #77.#80       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #82 = MethodHandle       6:#81         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = Utf8               apply
   #84 = Utf8               (Lscala/xml/NodeBuffer;)Lscala/Function1;
   #85 = NameAndType        #83:#84       // apply:(Lscala/xml/NodeBuffer;)Lscala/Function1;
   #86 = InvokeDynamic      #0:#85        // #0:apply:(Lscala/xml/NodeBuffer;)Lscala/Function1;
   #87 = Utf8               foreach
   #88 = Utf8               (Lscala/Function1;)V
   #89 = NameAndType        #87:#88       // foreach:(Lscala/Function1;)V
   #90 = InterfaceMethodref #65.#89       // scala/collection/Iterator.foreach:(Lscala/Function1;)V
   #91 = Utf8               scala/xml/Node
   #92 = Class              #91           // scala/xml/Node
   #93 = Utf8               scala/collection/mutable/Growable
   #94 = Class              #93           // scala/collection/mutable/Growable
   #95 = Utf8               $plus$eq$
   #96 = Utf8               (Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #97 = NameAndType        #95:#96       // $plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #98 = InterfaceMethodref #94.#97       // scala/collection/mutable/Growable.$plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #99 = Utf8               scala/collection/Iterable
  #100 = Class              #99           // scala/collection/Iterable
  #101 = Utf8               iterator
  #102 = Utf8               ()Lscala/collection/Iterator;
  #103 = NameAndType        #101:#102     // iterator:()Lscala/collection/Iterator;
  #104 = InterfaceMethodref #100.#103     // scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
  #105 = NameAndType        #25:#26       // $amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
  #106 = Methodref          #2.#105       // scala/xml/NodeBuffer.$amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
  #107 = Utf8               scala/runtime/ScalaRunTime$
  #108 = Class              #107          // scala/runtime/ScalaRunTime$
  #109 = Utf8               Lscala/runtime/ScalaRunTime$;
  #110 = NameAndType        #32:#109      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #111 = Fieldref           #108.#110     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #112 = Utf8               isArray
  #113 = Utf8               (Ljava/lang/Object;I)Z
  #114 = NameAndType        #112:#113     // isArray:(Ljava/lang/Object;I)Z
  #115 = Methodref          #108.#114     // scala/runtime/ScalaRunTime$.isArray:(Ljava/lang/Object;I)Z
  #116 = Utf8               scala/collection/ArrayOps$
  #117 = Class              #116          // scala/collection/ArrayOps$
  #118 = Utf8               Lscala/collection/ArrayOps$;
  #119 = NameAndType        #32:#118      // MODULE$:Lscala/collection/ArrayOps$;
  #120 = Fieldref           #117.#119     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #121 = Utf8               scala/Predef$
  #122 = Class              #121          // scala/Predef$
  #123 = Utf8               Lscala/Predef$;
  #124 = NameAndType        #32:#123      // MODULE$:Lscala/Predef$;
  #125 = Fieldref           #122.#124     // scala/Predef$.MODULE$:Lscala/Predef$;
  #126 = Utf8               genericArrayOps
  #127 = NameAndType        #126:#66      // genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
  #128 = Methodref          #122.#127     // scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
  #129 = Utf8               iterator$extension
  #130 = Utf8               (Ljava/lang/Object;)Lscala/collection/Iterator;
  #131 = NameAndType        #129:#130     // iterator$extension:(Ljava/lang/Object;)Lscala/collection/Iterator;
  #132 = Methodref          #117.#131     // scala/collection/ArrayOps$.iterator$extension:(Ljava/lang/Object;)Lscala/collection/Iterator;
  #133 = Utf8               scala/xml/Atom
  #134 = Class              #133          // scala/xml/Atom
  #135 = Utf8               <init>
  #136 = Utf8               (Ljava/lang/Object;)V
  #137 = NameAndType        #135:#136     // "<init>":(Ljava/lang/Object;)V
  #138 = Methodref          #134.#137     // scala/xml/Atom."<init>":(Ljava/lang/Object;)V
  #139 = Utf8               Ljava/lang/Object;
  #140 = Utf8               $this
  #141 = Utf8               ()V
  #142 = NameAndType        #135:#141     // "<init>":()V
  #143 = Methodref          #5.#142       // scala/collection/mutable/ArrayBuffer."<init>":()V
  #144 = Utf8               $init$
  #145 = Utf8               (Lscala/xml/ScalaVersionSpecificNodeBuffer;)V
  #146 = NameAndType        #144:#145     // $init$:(Lscala/xml/ScalaVersionSpecificNodeBuffer;)V
  #147 = InterfaceMethodref #7.#146       // scala/xml/ScalaVersionSpecificNodeBuffer.$init$:(Lscala/xml/ScalaVersionSpecificNodeBuffer;)V
  #148 = Utf8               $deserializeLambda$
  #149 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #150 = Utf8               scala/runtime/LambdaDeserialize
  #151 = Class              #150          // scala/runtime/LambdaDeserialize
  #152 = Utf8               bootstrap
  #153 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #154 = NameAndType        #152:#153     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #155 = Methodref          #151.#154     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #156 = MethodHandle       6:#155        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #157 = Utf8               lambdaDeserialize
  #158 = NameAndType        #157:#149     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #159 = InvokeDynamic      #1:#158       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #160 = Utf8               Code
  #161 = Utf8               LineNumberTable
  #162 = Utf8               LocalVariableTable
  #163 = Utf8               StackMapTable
  #164 = Utf8               MethodParameters
  #165 = Utf8               InnerClasses
  #166 = Utf8               Signature
  #167 = Utf8               SourceFile
  #168 = Utf8               RuntimeVisibleAnnotations
  #169 = Utf8               BootstrapMethods
  #170 = Utf8               ScalaInlineInfo
  #171 = Utf8               ScalaSig
{
  public java.lang.String className();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #22                 // InterfaceMethod scala/xml/ScalaVersionSpecificNodeBuffer.className$:(Lscala/xml/ScalaVersionSpecificNodeBuffer;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/NodeBuffer;

  public scala.xml.NodeBuffer $amp$plus(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/xml/NodeBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=11, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnonnull     13
         8: iconst_1
         9: istore_3
        10: goto          94
        13: goto          16
        16: aload         4
        18: instanceof    #29                 // class scala/runtime/BoxedUnit
        21: ifeq          29
        24: iconst_1
        25: istore_3
        26: goto          94
        29: goto          32
        32: aload         4
        34: ifnull        86
        37: getstatic     #35                 // Field scala/xml/Text$.MODULE$:Lscala/xml/Text$;
        40: aload         4
        42: invokevirtual #39                 // Method scala/xml/Text$.unapply:(Ljava/lang/Object;)Lscala/Option;
        45: astore        5
        47: aload         5
        49: invokevirtual #45                 // Method scala/Option.isEmpty:()Z
        52: ifne          83
        55: aload         5
        57: invokevirtual #49                 // Method scala/Option.get:()Ljava/lang/Object;
        60: checkcast     #51                 // class java/lang/String
        63: astore        6
        65: ldc           #53                 // String
        67: aload         6
        69: invokevirtual #59                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        72: ifeq          80
        75: iconst_1
        76: istore_3
        77: goto          94
        80: goto          89
        83: goto          89
        86: goto          89
        89: iconst_0
        90: istore_3
        91: goto          94
        94: iload_3
        95: ifeq          105
        98: getstatic     #63                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       101: astore_2
       102: goto          265
       105: goto          108
       108: aload         4
       110: instanceof    #65                 // class scala/collection/Iterator
       113: ifeq          143
       116: aload         4
       118: checkcast     #65                 // class scala/collection/Iterator
       121: astore        7
       123: aload         7
       125: aload_0
       126: invokedynamic #86,  0             // InvokeDynamic #0:apply:(Lscala/xml/NodeBuffer;)Lscala/Function1;
       131: invokeinterface #90,  2           // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
       136: getstatic     #63                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       139: astore_2
       140: goto          265
       143: goto          146
       146: aload         4
       148: instanceof    #92                 // class scala/xml/Node
       151: ifeq          171
       154: aload         4
       156: checkcast     #92                 // class scala/xml/Node
       159: astore        8
       161: aload_0
       162: aload         8
       164: invokestatic  #98                 // InterfaceMethod scala/collection/mutable/Growable.$plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       167: astore_2
       168: goto          265
       171: goto          174
       174: aload         4
       176: instanceof    #100                // class scala/collection/Iterable
       179: ifeq          204
       182: aload         4
       184: checkcast     #100                // class scala/collection/Iterable
       187: astore        9
       189: aload_0
       190: aload         9
       192: invokeinterface #104,  1          // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
       197: invokevirtual #106                // Method $amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
       200: astore_2
       201: goto          265
       204: goto          207
       207: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       210: aload         4
       212: iconst_1
       213: invokevirtual #115                // Method scala/runtime/ScalaRunTime$.isArray:(Ljava/lang/Object;I)Z
       216: ifeq          245
       219: aload         4
       221: astore        10
       223: aload_0
       224: getstatic     #120                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       227: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       230: aload         10
       232: invokevirtual #128                // Method scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
       235: invokevirtual #132                // Method scala/collection/ArrayOps$.iterator$extension:(Ljava/lang/Object;)Lscala/collection/Iterator;
       238: invokevirtual #106                // Method $amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
       241: astore_2
       242: goto          265
       245: goto          248
       248: aload_0
       249: new           #134                // class scala/xml/Atom
       252: dup
       253: aload         4
       255: invokespecial #138                // Method scala/xml/Atom."<init>":(Ljava/lang/Object;)V
       258: invokestatic  #98                 // InterfaceMethod scala/collection/mutable/Growable.$plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       261: astore_2
       262: goto          265
       265: aload_2
       266: pop
       267: aload_0
       268: areturn
      StackMapTable: number_of_entries = 20
        frame_type = 254 /* append */
          offset_delta = 13
          locals = [ top, top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 47
          locals = [ class scala/Option, class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/xml/NodeBuffer, class java/lang/Object, top, int, class java/lang/Object ]
          stack = []
        frame_type = 10 /* same */
        frame_type = 2 /* same */
        frame_type = 34 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 29 /* same */
        frame_type = 2 /* same */
        frame_type = 37 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class scala/xml/NodeBuffer, class java/lang/Object, class java/lang/Object, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 39: 0
        line 40: 3
        line 39: 55
        line 40: 65
        line 41: 108
        line 42: 146
        line 43: 174
        line 44: 207
        line 45: 248
        line 39: 265
        line 47: 267
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     269     0  this   Lscala/xml/NodeBuffer;
            0     269     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public static final scala.xml.NodeBuffer $anonfun$$amp$plus$1(scala.xml.NodeBuffer, java.lang.Object);
    descriptor: (Lscala/xml/NodeBuffer;Ljava/lang/Object;)Lscala/xml/NodeBuffer;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #106                // Method $amp$plus:(Ljava/lang/Object;)Lscala/xml/NodeBuffer;
         5: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/xml/NodeBuffer;
            0       6     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      o                              final

  public scala.xml.NodeBuffer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #143                // Method scala/collection/mutable/ArrayBuffer."<init>":()V
         4: aload_0
         5: invokestatic  #147                // InterfaceMethod scala/xml/ScalaVersionSpecificNodeBuffer.$init$:(Lscala/xml/ScalaVersionSpecificNodeBuffer;)V
         8: return
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/xml/NodeBuffer;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #159,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // Lscala/collection/mutable/ArrayBuffer<Lscala/xml/Node;>;Lscala/xml/ScalaVersionSpecificNodeBuffer;
SourceFile: "NodeBuffer.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00112Aa\u0001\u0003\u0001\u0013!)\u0011\u0004\u0001C\u00015!)A\u0004\u0001C\u0001;\tQaj\u001c3f\u0005V4g-\u001a:\u000b\u0005\u00151\u0011a\u0001=nY*\tq!A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001Qa\u0003E\u0002\f!Ii\u0011\u0001\u0004\u0006\u0003\u001b9\tq!\\;uC\ndWM\u0003\u0002\u0010\r\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\u0005Ea!aC!se\u0006L()\u001e4gKJ\u0004\"a\u0005\u000b\u000e\u0003\u0011I!!\u0006\u0003\u0003\t9{G-\u001a\t\u0003\']I!\u0001\u0007\u0003\u0003=M\u001b\u0017\r\\1WKJ\u001c\u0018n\u001c8Ta\u0016\u001c\u0017NZ5d\u001d>$WMQ;gM\u0016\u0014\u0018A\u0002\u001fj]&$h\bF\u0001\u001c!\t\u0019\u0002!A\u0005%C6\u0004H\u0005\u001d7vgR\u00111D\b\u0005\u0006?\t\u0001\r\u0001I\u0001\u0002_B\u0011\u0011EI\u0007\u0002\r%\u00111E\u0002\u0002\u0004\u0003:L\b"
    )
BootstrapMethods:
  0: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #72 REF_invokeStatic scala/xml/NodeBuffer.$anonfun$$amp$plus$1:(Lscala/xml/NodeBuffer;Ljava/lang/Object;)Lscala/xml/NodeBuffer;
      #73 (Ljava/lang/Object;)Lscala/xml/NodeBuffer;
      #74 5
      #75 1
      #73 (Ljava/lang/Object;)Lscala/xml/NodeBuffer;
  1: #156 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #72 REF_invokeStatic scala/xml/NodeBuffer.$anonfun$$amp$plus$1:(Lscala/xml/NodeBuffer;Ljava/lang/Object;)Lscala/xml/NodeBuffer;
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 19 00 1A 00 00 44 00 45 01 00 87
   00 8D 00 00 11 00 12 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
