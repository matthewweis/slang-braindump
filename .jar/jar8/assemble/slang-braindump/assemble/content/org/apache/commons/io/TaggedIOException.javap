Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/TaggedIOException.class
  Last modified May 29, 2022; size 1513 bytes
  SHA-256 checksum cd314c6911908c38bc32140388f8ef0511e66c638d15e09653e3dbbdd320a51b
  Compiled from "TaggedIOException.java"
public class org.apache.commons.io.TaggedIOException extends org.apache.commons.io.IOExceptionWithCause
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #1                          // org/apache/commons/io/TaggedIOException
  super_class: #10                        // org/apache/commons/io/IOExceptionWithCause
  interfaces: 0, fields: 2, methods: 6, attributes: 1
Constant pool:
   #1 = Class              #43            // org/apache/commons/io/TaggedIOException
   #2 = Fieldref           #1.#44         // org/apache/commons/io/TaggedIOException.tag:Ljava/io/Serializable;
   #3 = Methodref          #45.#46        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #4 = Methodref          #1.#47         // org/apache/commons/io/TaggedIOException.isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z
   #5 = Methodref          #1.#48         // org/apache/commons/io/TaggedIOException.getCause:()Ljava/io/IOException;
   #6 = Methodref          #9.#49         // java/io/IOException.getMessage:()Ljava/lang/String;
   #7 = Methodref          #10.#50        // org/apache/commons/io/IOExceptionWithCause."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
   #8 = Methodref          #10.#51        // org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;
   #9 = Class              #52            // java/io/IOException
  #10 = Class              #53            // org/apache/commons/io/IOExceptionWithCause
  #11 = Utf8               serialVersionUID
  #12 = Utf8               J
  #13 = Utf8               ConstantValue
  #14 = Long               -6994123481142850163l
  #16 = Utf8               tag
  #17 = Utf8               Ljava/io/Serializable;
  #18 = Utf8               isTaggedWith
  #19 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)Z
  #20 = Utf8               Code
  #21 = Utf8               LineNumberTable
  #22 = Utf8               LocalVariableTable
  #23 = Utf8               throwable
  #24 = Utf8               Ljava/lang/Throwable;
  #25 = Utf8               Ljava/lang/Object;
  #26 = Utf8               StackMapTable
  #27 = Utf8               throwCauseIfTaggedWith
  #28 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)V
  #29 = Utf8               Exceptions
  #30 = Utf8               <init>
  #31 = Utf8               (Ljava/io/IOException;Ljava/io/Serializable;)V
  #32 = Utf8               this
  #33 = Utf8               Lorg/apache/commons/io/TaggedIOException;
  #34 = Utf8               original
  #35 = Utf8               Ljava/io/IOException;
  #36 = Utf8               getTag
  #37 = Utf8               ()Ljava/io/Serializable;
  #38 = Utf8               getCause
  #39 = Utf8               ()Ljava/io/IOException;
  #40 = Utf8               ()Ljava/lang/Throwable;
  #41 = Utf8               SourceFile
  #42 = Utf8               TaggedIOException.java
  #43 = Utf8               org/apache/commons/io/TaggedIOException
  #44 = NameAndType        #16:#17        // tag:Ljava/io/Serializable;
  #45 = Class              #54            // java/lang/Object
  #46 = NameAndType        #55:#56        // equals:(Ljava/lang/Object;)Z
  #47 = NameAndType        #18:#19        // isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z
  #48 = NameAndType        #38:#39        // getCause:()Ljava/io/IOException;
  #49 = NameAndType        #57:#58        // getMessage:()Ljava/lang/String;
  #50 = NameAndType        #30:#59        // "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #51 = NameAndType        #38:#40        // getCause:()Ljava/lang/Throwable;
  #52 = Utf8               java/io/IOException
  #53 = Utf8               org/apache/commons/io/IOExceptionWithCause
  #54 = Utf8               java/lang/Object
  #55 = Utf8               equals
  #56 = Utf8               (Ljava/lang/Object;)Z
  #57 = Utf8               getMessage
  #58 = Utf8               ()Ljava/lang/String;
  #59 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long -6994123481142850163l

  private final java.io.Serializable tag;
    descriptor: Ljava/io/Serializable;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static boolean isTaggedWith(java.lang.Throwable, java.lang.Object);
    descriptor: (Ljava/lang/Throwable;Ljava/lang/Object;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnull        29
         4: aload_0
         5: instanceof    #1                  // class org/apache/commons/io/TaggedIOException
         8: ifeq          29
        11: aload_1
        12: aload_0
        13: checkcast     #1                  // class org/apache/commons/io/TaggedIOException
        16: getfield      #2                  // Field tag:Ljava/io/Serializable;
        19: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifeq          29
        25: iconst_1
        26: goto          30
        29: iconst_0
        30: ireturn
      LineNumberTable:
        line 66: 0
        line 68: 19
        line 66: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0 throwable   Ljava/lang/Throwable;
            0      31     1   tag   Ljava/lang/Object;
      StackMapTable: number_of_entries = 2
        frame_type = 29 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static void throwCauseIfTaggedWith(java.lang.Throwable, java.lang.Object) throws java.io.IOException;
    descriptor: (Ljava/lang/Throwable;Ljava/lang/Object;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #4                  // Method isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z
         5: ifeq          16
         8: aload_0
         9: checkcast     #1                  // class org/apache/commons/io/TaggedIOException
        12: invokevirtual #5                  // Method getCause:()Ljava/io/IOException;
        15: athrow
        16: return
      LineNumberTable:
        line 95: 0
        line 96: 8
        line 98: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 throwable   Ljava/lang/Throwable;
            0      17     1   tag   Ljava/lang/Object;
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.TaggedIOException(java.io.IOException, java.io.Serializable);
    descriptor: (Ljava/io/IOException;Ljava/io/Serializable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #6                  // Method java/io/IOException.getMessage:()Ljava/lang/String;
         5: aload_1
         6: invokespecial #7                  // Method org/apache/commons/io/IOExceptionWithCause."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
         9: aload_0
        10: aload_2
        11: putfield      #2                  // Field tag:Ljava/io/Serializable;
        14: return
      LineNumberTable:
        line 112: 0
        line 113: 9
        line 114: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/TaggedIOException;
            0      15     1 original   Ljava/io/IOException;
            0      15     2   tag   Ljava/io/Serializable;

  public java.io.Serializable getTag();
    descriptor: ()Ljava/io/Serializable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field tag:Ljava/io/Serializable;
         4: areturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/TaggedIOException;

  public synchronized java.io.IOException getCause();
    descriptor: ()Ljava/io/IOException;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;
         4: checkcast     #9                  // class java/io/IOException
         7: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/TaggedIOException;

  public java.lang.Throwable getCause();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #5                  // Method getCause:()Ljava/io/IOException;
         4: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/TaggedIOException;
}
SourceFile: "TaggedIOException.java"
