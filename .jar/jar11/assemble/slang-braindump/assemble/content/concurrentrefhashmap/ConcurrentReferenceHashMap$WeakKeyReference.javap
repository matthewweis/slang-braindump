Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference.class
  Last modified May 29, 2022; size 956 bytes
  SHA-256 checksum 4369dfc47b060d17408512cb68ed32143d8342ce49d24394a43e103f3710bd47
  Compiled from "ConcurrentReferenceHashMap.java"
final class concurrentrefhashmap.ConcurrentReferenceHashMap$WeakKeyReference<K extends java.lang.Object> extends java.lang.ref.WeakReference<K> implements concurrentrefhashmap.ConcurrentReferenceHashMap$KeyReference
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #3                          // concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference
  super_class: #4                         // java/lang/ref/WeakReference
  interfaces: 1, fields: 1, methods: 3, attributes: 3
Constant pool:
   #1 = Methodref          #4.#23         // java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
   #2 = Fieldref           #3.#24         // concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference.hash:I
   #3 = Class              #26            // concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference
   #4 = Class              #28            // java/lang/ref/WeakReference
   #5 = Class              #29            // concurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference
   #6 = Utf8               hash
   #7 = Utf8               I
   #8 = Utf8               <init>
   #9 = Utf8               (Ljava/lang/Object;ILjava/lang/ref/ReferenceQueue;)V
  #10 = Utf8               Code
  #11 = Utf8               LineNumberTable
  #12 = Utf8               Signature
  #13 = Utf8               (TK;ILjava/lang/ref/ReferenceQueue<Ljava/lang/Object;>;)V
  #14 = Utf8               keyHash
  #15 = Utf8               ()I
  #16 = Utf8               keyRef
  #17 = Utf8               ()Ljava/lang/Object;
  #18 = Utf8               KeyReference
  #19 = Utf8               InnerClasses
  #20 = Utf8               <K:Ljava/lang/Object;>Ljava/lang/ref/WeakReference<TK;>;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference;
  #21 = Utf8               SourceFile
  #22 = Utf8               ConcurrentReferenceHashMap.java
  #23 = NameAndType        #8:#30         // "<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
  #24 = NameAndType        #6:#7          // hash:I
  #25 = Class              #31            // concurrentrefhashmap/ConcurrentReferenceHashMap
  #26 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference
  #27 = Utf8               WeakKeyReference
  #28 = Utf8               java/lang/ref/WeakReference
  #29 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference
  #30 = Utf8               (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
  #31 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap
{
  final int hash;
    descriptor: I
    flags: (0x0010) ACC_FINAL

  concurrentrefhashmap.ConcurrentReferenceHashMap$WeakKeyReference(K, int, java.lang.ref.ReferenceQueue<java.lang.Object>);
    descriptor: (Ljava/lang/Object;ILjava/lang/ref/ReferenceQueue;)V
    flags: (0x0000)
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_3
         3: invokespecial #1                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
         6: aload_0
         7: iload_2
         8: putfield      #2                  // Field hash:I
        11: return
      LineNumberTable:
        line 299: 0
        line 300: 6
        line 301: 11
    Signature: #13                          // (TK;ILjava/lang/ref/ReferenceQueue<Ljava/lang/Object;>;)V

  public final int keyHash();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field hash:I
         4: ireturn
      LineNumberTable:
        line 305: 0

  public final java.lang.Object keyRef();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 310: 0
}
Signature: #20                          // <K:Ljava/lang/Object;>Ljava/lang/ref/WeakReference<TK;>;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference;
SourceFile: "ConcurrentReferenceHashMap.java"
InnerClasses:
  static #18= #5 of #25;                  // KeyReference=class concurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #27= #3 of #25;            // WeakKeyReference=class concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference of class concurrentrefhashmap/ConcurrentReferenceHashMap
