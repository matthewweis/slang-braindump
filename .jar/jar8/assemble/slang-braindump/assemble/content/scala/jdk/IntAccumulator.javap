Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/jdk/IntAccumulator.class
  Last modified May 29, 2022; size 21869 bytes
  SHA-256 checksum 6d41392a5fbb51cdcdfc869041c977736e0aab99b94d320ffb7c0436966185bf
  Compiled from "IntAccumulator.scala"
public final class scala.jdk.IntAccumulator extends scala.jdk.Accumulator$mcI$sp<scala.jdk.AnyAccumulator, scala.jdk.IntAccumulator> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/jdk/IntAccumulator
  super_class: #5                         // scala/jdk/Accumulator$mcI$sp
  interfaces: 1, fields: 2, methods: 64, attributes: 7
Constant pool:
    #1 = Utf8               scala/jdk/IntAccumulator
    #2 = Class              #1            // scala/jdk/IntAccumulator
    #3 = Utf8               Lscala/jdk/Accumulator$mcI$sp<Lscala/jdk/AnyAccumulator;Lscala/jdk/IntAccumulator;>;Ljava/io/Serializable;
    #4 = Utf8               scala/jdk/Accumulator$mcI$sp
    #5 = Class              #4            // scala/jdk/Accumulator$mcI$sp
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               IntAccumulator.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\reb\u0001\u0002#F\u0005)CQa\u001b\u0001\u0005\u00021D\u0001\"\u001c\u0001A\u0002\u0013\u0005QI\u001c\u0005\te\u0002\u0001\r\u0011\"\u0001Fg\"1\u0011\u0010\u0001Q!\n=D\u0001B\u001f\u0001A\u0002\u0013\u0005Qi\u001f\u0005\t{\u0002\u0001\r\u0011\"\u0001F}\"9\u0011\u0011\u0001\u0001!B\u0013a\b\u0002CA\u0002\u0001\u0011\u0005Q)!\u0002\t\u0011\u0005E\u0001\u0001)C)\u0003\'Aq!!\n\u0001\t\u0003\t9\u0003C\u0004\u0002v\u0001!I!a\u001e\t\u000f\u0005e\u0004\u0001\"\u0003\u0002x!9\u00111\u0010\u0001\u0005\u0002\u0005u\u0004BBAC\u0001\u0011\u0005C\u000eC\u0004\u0002\b\u0002!\t!!#\t\u000f\u0005=\u0005\u0001\"\u0011\u0002x!9\u0011\u0011\u0013\u0001\u0005\u0002\u0005M\u0005bBAI\u0001\u0011\u0005\u0011\u0011\u0014\u0005\b\u0003;\u0003A\u0011AAP\u0011\u001d\ti\n\u0001C\u0001\u0003SCq!a,\u0001\t\u0003\t\t\fC\u0004\u0002:\u0002!\t%a/\t\u000f\u0005=\u0007\u0001\"\u0001\u0002R\"9\u0011q\u001b\u0001\u0005\u0002\u0005e\u0007bBAs\u0001\u0011\u0005\u0011q\u001d\u0005\b\u0003g\u0004A\u0011BA{\u0011\u001d\u00119\u0001\u0001C!\u0005\u0013AqA!\u0004\u0001\t\u0003\u0012y\u0001C\u0004\u0003\u0014\u0001!\tE!\u0006\t\u000f\tm\u0001\u0001\"\u0011\u0003\u001e!9!\u0011\u0005\u0001\u0005B\t\r\u0002b\u0002B\u0014\u0001\u0011\u0005!\u0011\u0006\u0005\u0007\u0005[\u0001A\u0011\u00018\t\u000f\t=\u0002\u0001\"\u0011\u00032!9!\u0011\b\u0001\u0005B\tm\u0002b\u0002B(\u0001\u0011E#\u0011\u000b\u0005\b\u0005/\u0002A\u0011\u000bB-\u0011\u001d\u0011Y\u0006\u0001C!\u0005;BqA!\u001a\u0001\t\u0003\u0012I\u0006C\u0004\u0003h\u0001!IA!\u001b\b\u000f\tET\t#\u0001\u0003t\u00191A)\u0012E\u0001\u0005kBaa\u001b\u0016\u0005\u0002\t-\u0005\u0002\u0003BGU\t\u0007I\u0011\u00028\t\u000f\t=%\u0006)A\u0005_\"A!\u0011\u0013\u0016C\u0002\u0013%1\u0010C\u0004\u0003\u0014*\u0002\u000b\u0011\u0002?\t\u000f\tU%\u0006b\u0001\u0003\u0018\"9!Q\u0016\u0016\u0005\u0002\t=\u0006b\u0002BaU\u0011\u0005!1\u0019\u0005\b\u0005\u0017TC\u0011\u0001Bg\u0011\u001d\u0011)N\u000bC\u0001\u0005/DqAa7+\t\u0013\u0011i\u000eC\u0004\u0003P)\"\tE!9\t\u000f\t\u0015$\u0006\"\u0011\u0003Z!9!q\u001d\u0016\u0005B\tecA\u0002BuU\u0001\u0011Y\u000f\u0003\u0006\u0003pf\u0012)\u0019!C\u0005\u00053B\u0011B!=:\u0005\u0003\u0005\u000b\u0011\u0002,\t\r-LD\u0011\u0001B~\u0011-\t))\u000fa\u0001\u0002\u0004%IA!\u0017\t\u0017\r%\u0011\b1AA\u0002\u0013%11\u0002\u0005\u000b\u0007\u001fI\u0004\u0019!A!B\u00131\u0006bBB\ns\u0011%1Q\u0003\u0005\b\u0007CID\u0011BB\u0012\u0011\u001d\u0019y#\u000fC\u0005\u0005SB\u0011Ba\u001a+\u0003\u0003%Ia!\r\u0003\u001d%sG/Q2dk6,H.\u0019;pe*\u0011aiR\u0001\u0004U\u0012\\\'\"\u0001%\u0002\u000bM\u001c\u0017\r\\1\u0004\u0001M!\u0001aS,`!\u0015aUjT*W\u001b\u0005)\u0015B\u0001(F\u0005-\t5mY;nk2\fGo\u001c:\u0011\u0005A\u000bV\"A$\n\u0005I;%aA%oiB\u0011A\nV\u0005\u0003+\u0016\u0013a\"\u00118z\u0003\u000e\u001cW/\\;mCR|\'\u000f\u0005\u0002M\u0001A)\u0001,X(T-6\t\u0011L\u0003\u0002[7\u00069Q.\u001e;bE2,\'B\u0001/H\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003=f\u0013aaU3r\u001fB\u001c\bC\u00011i\u001d\t\tgM\u0004\u0002cK6\t1M\u0003\u0002e\u0013\u00061AH]8pizJ\u0011\u0001S\u0005\u0003O\u001e\u000bq\u0001]1dW\u0006<W-\u0003\u0002jU\na1+\u001a:jC2L\'0\u00192mK*\u0011qmR\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003Y\u000bqaY;se\u0016tG/F\u0001p!\r\u0001\u0006oT\u0005\u0003c\u001e\u0013Q!\u0011:sCf\f1bY;se\u0016tGo\u0018\u0013fcR\u0011Ao\u001e\t\u0003!VL!A^$\u0003\tUs\u0017\u000e\u001e\u0005\bq\u000e\t\t\u00111\u0001p\u0003\rAH%M\u0001\tGV\u0014(/\u001a8uA\u00059\u0001.[:u_JLX#\u0001?\u0011\u0007A\u0003x.A\u0006iSN$xN]=`I\u0015\fHC\u0001;\u0000\u0011\u001dAh!!AA\u0002q\f\u0001\u0002[5ti>\u0014\u0018\u0010I\u0001\u000bGVlW\u000f\\1uSZ,G\u0003BA\u0004\u0003\u001b\u00012\u0001UA\u0005\u0013\r\tYa\u0012\u0002\u0005\u0019>tw\r\u0003\u0004\u0002\u0010!\u0001\raT\u0001\u0002S\u0006I1\r\\1tg:\u000bW.Z\u000b\u0003\u0003+\u0001B!a\u0006\u0002 9!\u0011\u0011DA\u000e!\t\u0011w)C\u0002\u0002\u001e\u001d\u000ba\u0001\u0015:fI\u00164\u0017\u0002BA\u0011\u0003G\u0011aa\u0015;sS:<\'bAA\u000f\u000f\u0006\u0001RM\u001a4jG&,g\u000e^*uKB\u0004XM]\u000b\u0005\u0003S\t)\u0004\u0006\u0003\u0002,\u0005-$CBA\u0017\u0003c\tIF\u0002\u0004\u00020\u0001\u0001\u00111\u0006\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0005\u0003g\t)\u0004\u0004\u0001\u0005\u000f\u0005]\"B1\u0001\u0002:\t\t1+\u0005\u0003\u0002<\u0005\u0005\u0003c\u0001)\u0002>%\u0019\u0011qH$\u0003\u000f9{G\u000f[5oOB\"\u00111IA\'!\u0019\t)%a\u0012\u0002L5\t1,C\u0002\u0002Jm\u0013qa\u0015;faB,\'\u000f\u0005\u0003\u00024\u00055C\u0001DA(\u0003k\t\t\u0011!A\u0003\u0002\u0005E#aA0%cE!\u00111HA*!\r\u0001\u0016QK\u0005\u0004\u0003/:%aA!osB!\u00111LA3\u001d\u0011\ti&!\u0019\u000f\u0007\u0005\fy&\u0003\u0002]\u000f&\u0019\u00111M.\u0002\u000fM#X\r\u001d9fe&!\u0011qMA5\u00059)eMZ5dS\u0016tGo\u00159mSRT1!a\u0019\\\u0011\u001d\tiG\u0003a\u0002\u0003_\nQa\u001d5ba\u0016\u0004r!!\u0012\u0002r=\u000b\t$C\u0002\u0002tm\u0013Ab\u0015;faB,\'o\u00155ba\u0016\fa!\u001a=qC:$G#\u0001;\u0002\u000f!,\u0005\u0010]1oI\u00061\u0011\r\u001a3P]\u0016$B!a \u0002\u00026\t\u0001\u0001\u0003\u0004\u0002\u00046\u0001\raT\u0001\u0002C\u00061!/Z:vYR\fQ\u0001\u001a:bS:$2\u0001^AF\u0011\u0019\tii\u0004a\u0001-\u0006!A\u000f[1u\u0003\u0015\u0019G.Z1s\u0003\u0015\t\u0007\u000f\u001d7z)\ry\u0015Q\u0013\u0005\b\u0003/\u000b\u0002\u0019AA\u0004\u0003\tI\u0007\u0010F\u0002P\u00037Ca!a\u0004\u0013\u0001\u0004y\u0015AB;qI\u0006$X\rF\u0003u\u0003C\u000b)\u000bC\u0004\u0002$N\u0001\r!a\u0002\u0002\u0007%$\u0007\u0010\u0003\u0004\u0002(N\u0001\raT\u0001\u0005K2,W\u000eF\u0003u\u0003W\u000bi\u000b\u0003\u0004\u0002$R\u0001\ra\u0014\u0005\u0007\u0003O#\u0002\u0019A(\u0002\u0011%$XM]1u_J,\"!a-\u0011\t\u0001\f)lT\u0005\u0004\u0003oS\'\u0001C%uKJ\fGo\u001c:\u0002\u000f\u0019|\'/Z1dQV!\u0011QXAf)\r!\u0018q\u0018\u0005\b\u0003\u00034\u0002\u0019AAb\u0003\u00051\u0007C\u0002)\u0002F>\u000bI-C\u0002\u0002H\u001e\u0013\u0011BR;oGRLwN\\\u0019\u0011\t\u0005M\u00121\u001a\u0003\b\u0003\u001b4\"\u0019AA)\u0005\u0005)\u0016aA7baR\u0019a+a5\t\u000f\u0005\u0005w\u00031\u0001\u0002VB)\u0001+!2P\u001f\u00069a\r\\1u\u001b\u0006\u0004Hc\u0001,\u0002\\\"9\u0011\u0011\u0019\rA\u0002\u0005u\u0007C\u0002)\u0002F>\u000by\u000e\u0005\u0003a\u0003C|\u0015bAArU\na\u0011\n^3sC\ndWm\u00148dK\u000691m\u001c7mK\u000e$Hc\u0001,\u0002j\"9\u00111^\rA\u0002\u00055\u0018A\u00019g!\u0015\u0001\u0016q^(P\u0013\r\t\tp\u0012\u0002\u0010!\u0006\u0014H/[1m\rVt7\r^5p]\u0006ia-\u001b7uKJ\f5mY%na2$RAVA|\u0005\u0007Aq!!?\u001b\u0001\u0004\tY0\u0001\u0003qe\u0016$\u0007C\u0002)\u0002F>\u000bi\u0010E\u0002Q\u0003\u007fL1A!\u0001H\u0005\u001d\u0011un\u001c7fC:DqA!\u0002\u001b\u0001\u0004\ti0A\u0002o_R\faAZ5mi\u0016\u0014Hc\u0001,\u0003\f!9\u0011\u0011`\u000eA\u0002\u0005m\u0018!\u00034jYR,\'OT8u)\r1&\u0011\u0003\u0005\b\u0003sd\u0002\u0019AA~\u0003\u00191wN]1mYR!\u0011Q B\f\u0011\u001d\u0011I\"\ba\u0001\u0003w\f\u0011\u0001]\u0001\u0007KbL7\u000f^:\u0015\t\u0005u(q\u0004\u0005\b\u00053q\u0002\u0019AA~\u0003\u0015\u0019w.\u001e8u)\ry%Q\u0005\u0005\b\u00053y\u0002\u0019AA~\u0003%\u0019w.\u001e8u\u0019>tw\r\u0006\u0003\u0002\b\t-\u0002b\u0002B\rA\u0001\u0007\u00111`\u0001\bi>\f%O]1z\u0003\u0019!x\u000eT5tiV\u0011!1\u0007\t\u0005A\nUr*C\u0002\u00038)\u0014A\u0001T5ti\u0006\u0011Ao\\\u000b\u0005\u0005{\u0011\t\u0005\u0006\u0003\u0003@\t\u0015\u0003\u0003BA\u001a\u0005\u0003\"qAa\u0011$\u0005\u0004\t\tF\u0001\u0002Dc!9!qI\u0012A\u0002\t%\u0013a\u00024bGR|\'/\u001f\t\b\u0003\u000b\u0012Ye\u0014B \u0013\r\u0011ie\u0017\u0002\b\r\u0006\u001cGo\u001c:z\u000311\'o\\7Ta\u0016\u001c\u0017NZ5d)\r1&1\u000b\u0005\b\u0005+\"\u0003\u0019AAp\u0003\u0011\u0019w\u000e\u001c7\u0002%9,wo\u00159fG&4\u0017n\u0019\"vS2$WM]\u000b\u0002-\u0006y\u0011\u000e^3sC\ndWMR1di>\u0014\u00180\u0006\u0002\u0003`A)\u0011Q\tB1\'&\u0019!1M.\u0003\u0015M+\u0017OR1di>\u0014\u00180A\u0003f[B$\u00180\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003lA\u0019\u0001K!\u001c\n\u0007\t=tI\u0001\u0004B]f\u0014VMZ\u0001\u000f\u0013:$\u0018iY2v[Vd\u0017\r^8s!\ta%fE\u0004+\u0005W\u00129H! \u0011\r\u0005\u0015#\u0011P(W\u0013\r\u0011Yh\u0017\u0002\u0018\'B,7-\u001b4jG&#XM]1cY\u00164\u0015m\u0019;pef\u0004BAa \u0003\n6\u0011!\u0011\u0011\u0006\u0005\u0005\u0007\u0013))\u0001\u0002j_*\u0011!qQ\u0001\u0005U\u00064\u0018-C\u0002j\u0005\u0003#\"Aa\u001d\u0002\u001b\u0015l\u0007\u000f^=J]R\f%O]1z\u00039)W\u000e\u001d;z\u0013:$\u0018I\u001d:bs\u0002\n!#Z7qifLe\u000e^!se\u0006L\u0018I\u001d:bs\u0006\u0019R-\u001c9us&sG/\u0011:sCf\f%O]1zA\u0005ABo\u001c&bm\u0006Le\u000e^3hKJ\f5mY;nk2\fGo\u001c:\u0015\t\te%q\u0015\t\b\u0003\u000b\u0012IHa\'W!\u0011\u0011iJa)\u000e\u0005\t}%\u0002\u0002BQ\u0005\u000b\u000bA\u0001\\1oO&!!Q\u0015BP\u0005\u001dIe\u000e^3hKJDqA!+1\u0001\u0004\u0011Y+\u0001\u0002jC:\u0011A*K\u0001\tgV\u0004\b\u000f\\5feV\u0011!\u0011\u0017\t\u0006\u0005g\u0013iLV\u0007\u0003\u0005kSAAa.\u0003:\u0006Aa-\u001e8di&|gN\u0003\u0003\u0003<\n\u0015\u0015\u0001B;uS2LAAa0\u00036\nA1+\u001e9qY&,\'/A\u0003bI\u0012,\'/\u0006\u0002\u0003FB)!1\u0017Bd-&!!\u0011\u001aB[\u00059y%M[%oi\u000e{gn];nKJ\f!BY8yK\u0012\fE\rZ3s+\t\u0011y\r\u0005\u0004\u00034\nEgkT\u0005\u0005\u0005\'\u0014)L\u0001\u0006CS\u000e{gn];nKJ\fa!\\3sO\u0016\u0014XC\u0001Bm!\u0019\u0011\u0019L!5W-\u0006IaM]8n\u0003J\u0014\u0018-\u001f\u000b\u0004-\n}\u0007BBABk\u0001\u0007q\u000eF\u0002W\u0005GDqA!:7\u0001\u0004\ty.\u0001\u0002ji\u0006Qa.Z<Ck&dG-\u001a:\u0003%M+\'/[1mSj\fG/[8o!J|\u00070_\u000b\u0005\u0005[\u001c\u0019a\u0005\u0003:\u0005Wz\u0016aA1dG\u0006!\u0011mY2!Q\rY$Q\u001f\t\u0004!\n]\u0018b\u0001B}\u000f\nIAO]1og&,g\u000e\u001e\u000b\u0005\u0005{\u001c9\u0001E\u0003\u0003\u0000f\u001a\t!D\u0001+!\u0011\t\u0019da\u0001\u0005\u000f\r\u0015\u0011H1\u0001\u0002R\t\t\u0011\t\u0003\u0004\u0003pr\u0002\rAV\u0001\u000be\u0016\u001cX\u000f\u001c;`I\u0015\fHc\u0001;\u0004\u000e!9\u0001PPA\u0001\u0002\u00041\u0016a\u0002:fgVdG\u000f\t\u0015\u0004\u007f\tU\u0018aC<sSR,wJ\u00196fGR$2\u0001^B\f\u0011\u001d\u0019I\u0002\u0011a\u0001\u00077\t1a\\;u!\u0011\u0011yh!\b\n\t\r}!\u0011\u0011\u0002\u0013\u001f\nTWm\u0019;PkR\u0004X\u000f^*ue\u0016\fW.\u0001\u0006sK\u0006$wJ\u00196fGR$2\u0001^B\u0013\u0011\u001d\u00199#\u0011a\u0001\u0007S\t!!\u001b8\u0011\t\t}41F\u0005\u0005\u0007[\u0011\tIA\tPE*,7\r^%oaV$8\u000b\u001e:fC6\f1B]3bIJ+7o\u001c7wKR\u001111\u0007\t\u0005\u0005;\u001b)$\u0003\u0003\u00048\t}%AB(cU\u0016\u001cG\u000f
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               scala/collection/AnyStepper$$anon$4
   #18 = Class              #17           // scala/collection/AnyStepper$$anon$4
   #19 = Utf8               scala/collection/View$Fill
   #20 = Class              #19           // scala/collection/View$Fill
   #21 = Utf8               scala/collection/View
   #22 = Class              #21           // scala/collection/View
   #23 = Utf8               Fill
   #24 = Utf8               scala/jdk/IntAccumulator$SerializationProxy
   #25 = Class              #24           // scala/jdk/IntAccumulator$SerializationProxy
   #26 = Utf8               SerializationProxy
   #27 = Utf8               current
   #28 = Utf8               [I
   #29 = Utf8               history
   #30 = Utf8               [[I
   #31 = Utf8               newBuilder
   #32 = Utf8               ()Lscala/jdk/IntAccumulator;
   #33 = Utf8               scala/jdk/IntAccumulator$
   #34 = Class              #33           // scala/jdk/IntAccumulator$
   #35 = Utf8               MODULE$
   #36 = Utf8               Lscala/jdk/IntAccumulator$;
   #37 = NameAndType        #35:#36       // MODULE$:Lscala/jdk/IntAccumulator$;
   #38 = Fieldref           #34.#37       // scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
   #39 = Utf8               <init>
   #40 = Utf8               ()V
   #41 = NameAndType        #39:#40       // "<init>":()V
   #42 = Methodref          #2.#41        // scala/jdk/IntAccumulator."<init>":()V
   #43 = Utf8               merger
   #44 = Utf8               ()Ljava/util/function/BiConsumer;
   #45 = Utf8               ()Ljava/util/function/BiConsumer<Lscala/jdk/IntAccumulator;Lscala/jdk/IntAccumulator;>;
   #46 = NameAndType        #43:#44       // merger:()Ljava/util/function/BiConsumer;
   #47 = Methodref          #34.#46       // scala/jdk/IntAccumulator$.merger:()Ljava/util/function/BiConsumer;
   #48 = Utf8               boxedAdder
   #49 = Utf8               ()Ljava/util/function/BiConsumer<Lscala/jdk/IntAccumulator;Ljava/lang/Object;>;
   #50 = NameAndType        #48:#44       // boxedAdder:()Ljava/util/function/BiConsumer;
   #51 = Methodref          #34.#50       // scala/jdk/IntAccumulator$.boxedAdder:()Ljava/util/function/BiConsumer;
   #52 = Utf8               adder
   #53 = Utf8               ()Ljava/util/function/ObjIntConsumer;
   #54 = Utf8               ()Ljava/util/function/ObjIntConsumer<Lscala/jdk/IntAccumulator;>;
   #55 = NameAndType        #52:#53       // adder:()Ljava/util/function/ObjIntConsumer;
   #56 = Methodref          #34.#55       // scala/jdk/IntAccumulator$.adder:()Ljava/util/function/ObjIntConsumer;
   #57 = Utf8               supplier
   #58 = Utf8               ()Ljava/util/function/Supplier;
   #59 = Utf8               ()Ljava/util/function/Supplier<Lscala/jdk/IntAccumulator;>;
   #60 = NameAndType        #57:#58       // supplier:()Ljava/util/function/Supplier;
   #61 = Methodref          #34.#60       // scala/jdk/IntAccumulator$.supplier:()Ljava/util/function/Supplier;
   #62 = Utf8               toJavaIntegerAccumulator
   #63 = Utf8               (Lscala/jdk/IntAccumulator$;)Lscala/collection/SpecificIterableFactory;
   #64 = Utf8               (Lscala/jdk/IntAccumulator$;)Lscala/collection/SpecificIterableFactory<Ljava/lang/Integer;Lscala/jdk/IntAccumulator;>;
   #65 = Utf8               ia
   #66 = Utf8               specificIterableFactory
   #67 = Utf8               ()Lscala/collection/Factory;
   #68 = Utf8               ()Lscala/collection/Factory<Ljava/lang/Object;Lscala/jdk/IntAccumulator;>;
   #69 = Utf8               fill
   #70 = Utf8               (ILscala/Function0;)Ljava/lang/Object;
   #71 = Utf8               n
   #72 = Utf8               elem
   #73 = Utf8               (ILscala/Function0;)V
   #74 = NameAndType        #39:#73       // "<init>":(ILscala/Function0;)V
   #75 = Methodref          #20.#74       // scala/collection/View$Fill."<init>":(ILscala/Function0;)V
   #76 = Utf8               fromSpecific
   #77 = Utf8               (Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
   #78 = NameAndType        #76:#77       // fromSpecific:(Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
   #79 = Methodref          #34.#78       // scala/jdk/IntAccumulator$.fromSpecific:(Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
   #80 = Utf8               I
   #81 = Utf8               Lscala/Function0;
   #82 = Utf8               fill_this
   #83 = Utf8               fromSpecific_it
   #84 = Utf8               Lscala/collection/IterableOnce;
   #85 = Utf8               ()[I
   #86 = NameAndType        #27:#28       // current:[I
   #87 = Fieldref           #2.#86        // scala/jdk/IntAccumulator.current:[I
   #88 = Utf8               this
   #89 = Utf8               Lscala/jdk/IntAccumulator;
   #90 = Utf8               current_$eq
   #91 = Utf8               ([I)V
   #92 = Utf8               x$1
   #93 = Utf8               ()[[I
   #94 = NameAndType        #29:#30       // history:[[I
   #95 = Fieldref           #2.#94        // scala/jdk/IntAccumulator.history:[[I
   #96 = Utf8               history_$eq
   #97 = Utf8               ([[I)V
   #98 = Utf8               cumulative
   #99 = Utf8               (I)J
  #100 = Utf8               i
  #101 = NameAndType        #29:#93       // history:()[[I
  #102 = Methodref          #2.#101       // scala/jdk/IntAccumulator.history:()[[I
  #103 = Long               4294967295l
  #105 = Utf8               x
  #106 = Utf8               className
  #107 = Utf8               ()Ljava/lang/String;
  #108 = Utf8               IntAccumulator
  #109 = String             #108          // IntAccumulator
  #110 = Utf8               efficientStepper
  #111 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #112 = Utf8               <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<Ljava/lang/Object;TS;>;)TS;
  #113 = Utf8               shape
  #114 = Utf8               scala/jdk/IntAccumulatorStepper
  #115 = Class              #114          // scala/jdk/IntAccumulatorStepper
  #116 = Utf8               (Lscala/jdk/IntAccumulator;)V
  #117 = NameAndType        #39:#116      // "<init>":(Lscala/jdk/IntAccumulator;)V
  #118 = Methodref          #115.#117     // scala/jdk/IntAccumulatorStepper."<init>":(Lscala/jdk/IntAccumulator;)V
  #119 = Utf8               scala/collection/StepperShape
  #120 = Class              #119          // scala/collection/StepperShape
  #121 = Utf8               ()I
  #122 = NameAndType        #113:#121     // shape:()I
  #123 = InterfaceMethodref #120.#122     // scala/collection/StepperShape.shape:()I
  #124 = Utf8               scala/collection/StepperShape$
  #125 = Class              #124          // scala/collection/StepperShape$
  #126 = Utf8               Lscala/collection/StepperShape$;
  #127 = NameAndType        #35:#126      // MODULE$:Lscala/collection/StepperShape$;
  #128 = Fieldref           #125.#127     // scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
  #129 = Utf8               IntShape
  #130 = NameAndType        #129:#121     // IntShape:()I
  #131 = Methodref          #125.#130     // scala/collection/StepperShape$.IntShape:()I
  #132 = Utf8               ReferenceShape
  #133 = NameAndType        #132:#121     // ReferenceShape:()I
  #134 = Methodref          #125.#133     // scala/collection/StepperShape$.ReferenceShape:()I
  #135 = Utf8               java/lang/AssertionError
  #136 = Class              #135          // java/lang/AssertionError
  #137 = Utf8               java/lang/StringBuilder
  #138 = Class              #137          // java/lang/StringBuilder
  #139 = Integer            18
  #140 = Utf8               (I)V
  #141 = NameAndType        #39:#140      // "<init>":(I)V
  #142 = Methodref          #138.#141     // java/lang/StringBuilder."<init>":(I)V
  #143 = Utf8               assertion failed:
  #144 = String             #143          // assertion failed:
  #145 = Utf8               append
  #146 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #147 = NameAndType        #145:#146     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #148 = Methodref          #138.#147     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #149 = Utf8               $anonfun$efficientStepper$1
  #150 = Utf8               (Lscala/collection/StepperShape;)Ljava/lang/String;
  #151 = NameAndType        #149:#150     // $anonfun$efficientStepper$1:(Lscala/collection/StepperShape;)Ljava/lang/String;
  #152 = Methodref          #2.#151       // scala/jdk/IntAccumulator.$anonfun$efficientStepper$1:(Lscala/collection/StepperShape;)Ljava/lang/String;
  #153 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #154 = NameAndType        #145:#153     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #155 = Methodref          #138.#154     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #156 = Utf8               toString
  #157 = NameAndType        #156:#107     // toString:()Ljava/lang/String;
  #158 = Methodref          #138.#157     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #159 = Utf8               (Ljava/lang/Object;)V
  #160 = NameAndType        #39:#159      // "<init>":(Ljava/lang/Object;)V
  #161 = Methodref          #136.#160     // java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
  #162 = Utf8               scala/collection/AnyStepper$
  #163 = Class              #162          // scala/collection/AnyStepper$
  #164 = Utf8               Lscala/collection/AnyStepper$;
  #165 = NameAndType        #35:#164      // MODULE$:Lscala/collection/AnyStepper$;
  #166 = Fieldref           #163.#165     // scala/collection/AnyStepper$.MODULE$:Lscala/collection/AnyStepper$;
  #167 = Utf8               (Lscala/collection/IntStepper;)V
  #168 = NameAndType        #39:#167      // "<init>":(Lscala/collection/IntStepper;)V
  #169 = Methodref          #18.#168      // scala/collection/AnyStepper$$anon$4."<init>":(Lscala/collection/IntStepper;)V
  #170 = Utf8               st
  #171 = Utf8               Lscala/jdk/IntAccumulatorStepper;
  #172 = Utf8               Lscala/collection/StepperShape;
  #173 = Utf8               expand
  #174 = Utf8               index
  #175 = NameAndType        #174:#121     // index:()I
  #176 = Methodref          #2.#175       // scala/jdk/IntAccumulator.index:()I
  #177 = Utf8               hIndex
  #178 = NameAndType        #177:#121     // hIndex:()I
  #179 = Methodref          #2.#178       // scala/jdk/IntAccumulator.hIndex:()I
  #180 = NameAndType        #98:#99       // cumulative:(I)J
  #181 = Methodref          #2.#180       // scala/jdk/IntAccumulator.cumulative:(I)J
  #182 = NameAndType        #27:#85       // current:()[I
  #183 = Methodref          #2.#182       // scala/jdk/IntAccumulator.current:()[I
  #184 = Utf8               hExpand
  #185 = NameAndType        #184:#40      // hExpand:()V
  #186 = Methodref          #2.#185       // scala/jdk/IntAccumulator.hExpand:()V
  #187 = Utf8               hIndex_$eq
  #188 = NameAndType        #187:#140     // hIndex_$eq:(I)V
  #189 = Methodref          #2.#188       // scala/jdk/IntAccumulator.hIndex_$eq:(I)V
  #190 = Utf8               nextBlockSize
  #191 = NameAndType        #190:#121     // nextBlockSize:()I
  #192 = Methodref          #2.#191       // scala/jdk/IntAccumulator.nextBlockSize:()I
  #193 = NameAndType        #90:#91       // current_$eq:([I)V
  #194 = Methodref          #2.#193       // scala/jdk/IntAccumulator.current_$eq:([I)V
  #195 = Utf8               index_$eq
  #196 = NameAndType        #195:#140     // index_$eq:(I)V
  #197 = Methodref          #2.#196       // scala/jdk/IntAccumulator.index_$eq:(I)V
  #198 = Utf8               cuml
  #199 = Utf8               J
  #200 = Class              #28           // "[I"
  #201 = NameAndType        #96:#97       // history_$eq:([[I)V
  #202 = Methodref          #2.#201       // scala/jdk/IntAccumulator.history_$eq:([[I)V
  #203 = Utf8               java/util/Arrays
  #204 = Class              #203          // java/util/Arrays
  #205 = Utf8               copyOf
  #206 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;
  #207 = NameAndType        #205:#206     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
  #208 = Methodref          #204.#207     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
  #209 = Class              #30           // "[[I"
  #210 = Utf8               addOne
  #211 = Utf8               (I)Lscala/jdk/IntAccumulator;
  #212 = Utf8               a
  #213 = Utf8               totalSize
  #214 = Utf8               ()J
  #215 = NameAndType        #213:#214     // totalSize:()J
  #216 = Methodref          #2.#215       // scala/jdk/IntAccumulator.totalSize:()J
  #217 = Utf8               totalSize_$eq
  #218 = Utf8               (J)V
  #219 = NameAndType        #217:#218     // totalSize_$eq:(J)V
  #220 = Methodref          #2.#219       // scala/jdk/IntAccumulator.totalSize_$eq:(J)V
  #221 = NameAndType        #173:#40      // expand:()V
  #222 = Methodref          #2.#221       // scala/jdk/IntAccumulator.expand:()V
  #223 = Utf8               result
  #224 = Utf8               drain
  #225 = Utf8               that
  #226 = Utf8               java/lang/System
  #227 = Class              #226          // java/lang/System
  #228 = Utf8               arraycopy
  #229 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #230 = NameAndType        #228:#229     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #231 = Methodref          #227.#230     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #232 = Utf8               scala/math/package$
  #233 = Class              #232          // scala/math/package$
  #234 = Utf8               Lscala/math/package$;
  #235 = NameAndType        #35:#234      // MODULE$:Lscala/math/package$;
  #236 = Fieldref           #233.#235     // scala/math/package$.MODULE$:Lscala/math/package$;
  #237 = Utf8               java/lang/Integer
  #238 = Class              #237          // java/lang/Integer
  #239 = Utf8               numberOfLeadingZeros
  #240 = Utf8               (I)I
  #241 = NameAndType        #239:#240     // numberOfLeadingZeros:(I)I
  #242 = Methodref          #238.#241     // java/lang/Integer.numberOfLeadingZeros:(I)I
  #243 = Utf8               java/lang/Math
  #244 = Class              #243          // java/lang/Math
  #245 = Utf8               max
  #246 = Utf8               (II)I
  #247 = NameAndType        #245:#246     // max:(II)I
  #248 = Methodref          #244.#247     // java/lang/Math.max:(II)I
  #249 = Utf8               ([II)[I
  #250 = NameAndType        #205:#249     // copyOf:([II)[I
  #251 = Methodref          #204.#250     // java/util/Arrays.copyOf:([II)[I
  #252 = Utf8               clear
  #253 = NameAndType        #252:#40      // clear:()V
  #254 = Methodref          #2.#253       // scala/jdk/IntAccumulator.clear:()V
  #255 = Utf8               ans
  #256 = Utf8               slots
  #257 = Utf8               pv
  #258 = Utf8               h
  #259 = Utf8               prev
  #260 = Utf8               more
  #261 = Utf8               Z
  #262 = Utf8               scala/jdk/Accumulator
  #263 = Class              #262          // scala/jdk/Accumulator
  #264 = Methodref          #263.#253     // scala/jdk/Accumulator.clear:()V
  #265 = Utf8               scala$jdk$IntAccumulator$$emptyIntArray
  #266 = NameAndType        #265:#85      // scala$jdk$IntAccumulator$$emptyIntArray:()[I
  #267 = Methodref          #34.#266      // scala/jdk/IntAccumulator$.scala$jdk$IntAccumulator$$emptyIntArray:()[I
  #268 = Utf8               scala$jdk$IntAccumulator$$emptyIntArrayArray
  #269 = NameAndType        #268:#93      // scala$jdk$IntAccumulator$$emptyIntArrayArray:()[[I
  #270 = Methodref          #34.#269      // scala/jdk/IntAccumulator$.scala$jdk$IntAccumulator$$emptyIntArrayArray:()[[I
  #271 = Utf8               apply
  #272 = Utf8               (J)I
  #273 = Utf8               ix
  #274 = Utf8               seekSlot
  #275 = Utf8               (J)J
  #276 = NameAndType        #274:#275     // seekSlot:(J)J
  #277 = Methodref          #2.#276       // scala/jdk/IntAccumulator.seekSlot:(J)J
  #278 = Utf8               w
  #279 = NameAndType        #271:#272     // apply:(J)I
  #280 = Methodref          #2.#279       // scala/jdk/IntAccumulator.apply:(J)I
  #281 = Utf8               update
  #282 = Utf8               (JI)V
  #283 = Utf8               idx
  #284 = Utf8               (II)V
  #285 = NameAndType        #281:#282     // update:(JI)V
  #286 = Methodref          #2.#285       // scala/jdk/IntAccumulator.update:(JI)V
  #287 = Utf8               iterator
  #288 = Utf8               ()Lscala/collection/Iterator;
  #289 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #290 = Utf8               intStepperShape
  #291 = Utf8               ()Lscala/collection/StepperShape;
  #292 = NameAndType        #290:#291     // intStepperShape:()Lscala/collection/StepperShape;
  #293 = Methodref          #125.#292     // scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
  #294 = NameAndType        #110:#111     // efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #295 = Methodref          #263.#294     // scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #296 = Utf8               scala/collection/Stepper
  #297 = Class              #296          // scala/collection/Stepper
  #298 = NameAndType        #287:#288     // iterator:()Lscala/collection/Iterator;
  #299 = InterfaceMethodref #297.#298     // scala/collection/Stepper.iterator:()Lscala/collection/Iterator;
  #300 = Utf8               stepper_shape
  #301 = Utf8               foreach
  #302 = Utf8               (Lscala/Function1;)V
  #303 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Object;TU;>;)V
  #304 = Utf8               f
  #305 = Utf8               scala/collection/IntStepper
  #306 = Class              #305          // scala/collection/IntStepper
  #307 = Utf8               hasStep
  #308 = Utf8               ()Z
  #309 = NameAndType        #307:#308     // hasStep:()Z
  #310 = InterfaceMethodref #306.#309     // scala/collection/IntStepper.hasStep:()Z
  #311 = Utf8               nextStep$mcI$sp
  #312 = NameAndType        #311:#121     // nextStep$mcI$sp:()I
  #313 = InterfaceMethodref #306.#312     // scala/collection/IntStepper.nextStep$mcI$sp:()I
  #314 = Utf8               valueOf
  #315 = Utf8               (I)Ljava/lang/Integer;
  #316 = NameAndType        #314:#315     // valueOf:(I)Ljava/lang/Integer;
  #317 = Methodref          #238.#316     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #318 = Utf8               scala/Function1
  #319 = Class              #318          // scala/Function1
  #320 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #321 = NameAndType        #271:#320     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #322 = InterfaceMethodref #319.#321     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #323 = Utf8               s
  #324 = Utf8               Lscala/collection/IntStepper;
  #325 = Utf8               Lscala/Function1;
  #326 = Utf8               map
  #327 = Utf8               (Lscala/Function1;)Lscala/jdk/IntAccumulator;
  #328 = Utf8               (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
  #329 = Utf8               apply$mcII$sp
  #330 = NameAndType        #329:#240     // apply$mcII$sp:(I)I
  #331 = InterfaceMethodref #319.#330     // scala/Function1.apply$mcII$sp:(I)I
  #332 = NameAndType        #210:#211     // addOne:(I)Lscala/jdk/IntAccumulator;
  #333 = Methodref          #2.#332       // scala/jdk/IntAccumulator.addOne:(I)Lscala/jdk/IntAccumulator;
  #334 = Utf8               b
  #335 = Utf8               flatMap
  #336 = Utf8               (Lscala/Function1<Ljava/lang/Object;Lscala/collection/IterableOnce<Ljava/lang/Object;>;>;)Lscala/jdk/IntAccumulator;
  #337 = Utf8               scala/collection/IterableOnce
  #338 = Class              #337          // scala/collection/IterableOnce
  #339 = Utf8               scala/collection/mutable/Growable
  #340 = Class              #339          // scala/collection/mutable/Growable
  #341 = Utf8               addAll$
  #342 = Utf8               (Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #343 = NameAndType        #341:#342     // addAll$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #344 = InterfaceMethodref #340.#343     // scala/collection/mutable/Growable.addAll$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #345 = Utf8               addAll_xs
  #346 = Utf8               collect
  #347 = Utf8               (Lscala/PartialFunction;)Lscala/jdk/IntAccumulator;
  #348 = Utf8               (Lscala/PartialFunction<Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
  #349 = Utf8               pf
  #350 = MethodType         #320          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #351 = Utf8               $anonfun$collect$1$adapted
  #352 = Utf8               (Lscala/jdk/IntAccumulator;Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  #353 = NameAndType        #351:#352     // $anonfun$collect$1$adapted:(Lscala/jdk/IntAccumulator;Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  #354 = Methodref          #2.#353       // scala/jdk/IntAccumulator.$anonfun$collect$1$adapted:(Lscala/jdk/IntAccumulator;Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  #355 = MethodHandle       6:#354        // REF_invokeStatic scala/jdk/IntAccumulator.$anonfun$collect$1$adapted:(Lscala/jdk/IntAccumulator;Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  #356 = Utf8               (Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  #357 = MethodType         #356          //  (Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  #358 = Integer            5
  #359 = Integer            1
  #360 = Utf8               java/lang/invoke/LambdaMetafactory
  #361 = Class              #360          // java/lang/invoke/LambdaMetafactory
  #362 = Utf8               altMetafactory
  #363 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #364 = NameAndType        #362:#363     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #365 = Methodref          #361.#364     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #366 = MethodHandle       6:#365        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #367 = Utf8               (Lscala/jdk/IntAccumulator;)Lscala/Function1;
  #368 = NameAndType        #271:#367     // apply:(Lscala/jdk/IntAccumulator;)Lscala/Function1;
  #369 = InvokeDynamic      #0:#368       // #0:apply:(Lscala/jdk/IntAccumulator;)Lscala/Function1;
  #370 = Utf8               scala/PartialFunction
  #371 = Class              #370          // scala/PartialFunction
  #372 = Utf8               runWith
  #373 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #374 = NameAndType        #372:#373     // runWith:(Lscala/Function1;)Lscala/Function1;
  #375 = InterfaceMethodref #371.#374     // scala/PartialFunction.runWith:(Lscala/Function1;)Lscala/Function1;
  #376 = Utf8               apply$mcZI$sp
  #377 = Utf8               (I)Z
  #378 = NameAndType        #376:#377     // apply$mcZI$sp:(I)Z
  #379 = InterfaceMethodref #319.#378     // scala/Function1.apply$mcZI$sp:(I)Z
  #380 = Utf8               Lscala/PartialFunction;
  #381 = Utf8               filterAccImpl
  #382 = Utf8               (Lscala/Function1;Z)Lscala/jdk/IntAccumulator;
  #383 = Utf8               (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;Z)Lscala/jdk/IntAccumulator;
  #384 = Utf8               pred
  #385 = Utf8               not
  #386 = Utf8               filter
  #387 = Utf8               filterAccImpl_n
  #388 = Utf8               filterAccImpl_b
  #389 = Utf8               filterAccImpl_s
  #390 = Utf8               filterAccImpl_not
  #391 = Utf8               filterAccImpl_stepper_shape
  #392 = Utf8               filterNot
  #393 = Utf8               forall
  #394 = Utf8               (Lscala/Function1;)Z
  #395 = Utf8               (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)Z
  #396 = Utf8               p
  #397 = Utf8               exists
  #398 = Utf8               count
  #399 = Utf8               (Lscala/Function1;)I
  #400 = Utf8               (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)I
  #401 = Utf8               r
  #402 = Utf8               countLong
  #403 = Utf8               (Lscala/Function1;)J
  #404 = Utf8               (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)J
  #405 = Utf8               toArray
  #406 = Long               2147483647l
  #408 = Utf8               java/lang/IllegalArgumentException
  #409 = Class              #408          // java/lang/IllegalArgumentException
  #410 = Integer            44
  #411 = Utf8               Too many elements accumulated for an array:
  #412 = String             #411          // Too many elements accumulated for an array:
  #413 = Utf8               java/lang/Long
  #414 = Class              #413          // java/lang/Long
  #415 = Utf8               (J)Ljava/lang/String;
  #416 = NameAndType        #156:#415     // toString:(J)Ljava/lang/String;
  #417 = Methodref          #414.#416     // java/lang/Long.toString:(J)Ljava/lang/String;
  #418 = Utf8               (Ljava/lang/String;)V
  #419 = NameAndType        #39:#418      // "<init>":(Ljava/lang/String;)V
  #420 = Methodref          #409.#419     // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #421 = Utf8               j
  #422 = Utf8               toList
  #423 = Utf8               ()Lscala/collection/immutable/List;
  #424 = Utf8               ()Lscala/collection/immutable/List<Ljava/lang/Object;>;
  #425 = Utf8               scala/package$
  #426 = Class              #425          // scala/package$
  #427 = Utf8               Lscala/package$;
  #428 = NameAndType        #35:#427      // MODULE$:Lscala/package$;
  #429 = Fieldref           #426.#428     // scala/package$.MODULE$:Lscala/package$;
  #430 = Utf8               Nil
  #431 = Utf8               ()Lscala/collection/immutable/Nil$;
  #432 = NameAndType        #430:#431     // Nil:()Lscala/collection/immutable/Nil$;
  #433 = Methodref          #426.#432     // scala/package$.Nil:()Lscala/collection/immutable/Nil$;
  #434 = Utf8               scala/collection/immutable/List
  #435 = Class              #434          // scala/collection/immutable/List
  #436 = Utf8               $colon$colon
  #437 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/List;
  #438 = NameAndType        #436:#437     // $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
  #439 = Methodref          #435.#438     // scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
  #440 = Utf8               Lscala/collection/immutable/List;
  #441 = Utf8               to
  #442 = Utf8               (Lscala/collection/Factory;)Ljava/lang/Object;
  #443 = Utf8               <C1:Ljava/lang/Object;>(Lscala/collection/Factory<Ljava/lang/Object;TC1;>;)TC1;
  #444 = Utf8               factory
  #445 = Integer            54
  #446 = Utf8               Too many elements accumulated for a Scala collection:
  #447 = String             #446          // Too many elements accumulated for a Scala collection:
  #448 = Methodref          #2.#298       // scala/jdk/IntAccumulator.iterator:()Lscala/collection/Iterator;
  #449 = Utf8               scala/collection/Factory
  #450 = Class              #449          // scala/collection/Factory
  #451 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #452 = NameAndType        #76:#451      // fromSpecific:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #453 = InterfaceMethodref #450.#452     // scala/collection/Factory.fromSpecific:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #454 = Utf8               Lscala/collection/Factory;
  #455 = Utf8               (Lscala/collection/IterableOnce<Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
  #456 = Utf8               coll
  #457 = Utf8               newSpecificBuilder
  #458 = Utf8               iterableFactory
  #459 = Utf8               ()Lscala/collection/SeqFactory;
  #460 = Utf8               ()Lscala/collection/SeqFactory<Lscala/jdk/AnyAccumulator;>;
  #461 = Utf8               scala/jdk/AnyAccumulator$
  #462 = Class              #461          // scala/jdk/AnyAccumulator$
  #463 = Utf8               Lscala/jdk/AnyAccumulator$;
  #464 = NameAndType        #35:#463      // MODULE$:Lscala/jdk/AnyAccumulator$;
  #465 = Fieldref           #462.#464     // scala/jdk/AnyAccumulator$.MODULE$:Lscala/jdk/AnyAccumulator$;
  #466 = Utf8               empty
  #467 = Utf8               writeReplace
  #468 = Utf8               ()Ljava/lang/Object;
  #469 = Methodref          #25.#117      // scala/jdk/IntAccumulator$SerializationProxy."<init>":(Lscala/jdk/IntAccumulator;)V
  #470 = NameAndType        #466:#32      // empty:()Lscala/jdk/IntAccumulator;
  #471 = Methodref          #2.#470       // scala/jdk/IntAccumulator.empty:()Lscala/jdk/IntAccumulator;
  #472 = Utf8               ()Lscala/collection/IterableOps;
  #473 = Utf8               ()Lscala/collection/IterableFactory;
  #474 = NameAndType        #458:#459     // iterableFactory:()Lscala/collection/SeqFactory;
  #475 = Methodref          #2.#474       // scala/jdk/IntAccumulator.iterableFactory:()Lscala/collection/SeqFactory;
  #476 = Utf8               ()Lscala/collection/mutable/Builder;
  #477 = NameAndType        #457:#32      // newSpecificBuilder:()Lscala/jdk/IntAccumulator;
  #478 = Methodref          #2.#477       // scala/jdk/IntAccumulator.newSpecificBuilder:()Lscala/jdk/IntAccumulator;
  #479 = Methodref          #2.#78        // scala/jdk/IntAccumulator.fromSpecific:(Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
  #480 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #481 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #482 = NameAndType        #392:#327     // filterNot:(Lscala/Function1;)Lscala/jdk/IntAccumulator;
  #483 = Methodref          #2.#482       // scala/jdk/IntAccumulator.filterNot:(Lscala/Function1;)Lscala/jdk/IntAccumulator;
  #484 = NameAndType        #386:#327     // filter:(Lscala/Function1;)Lscala/jdk/IntAccumulator;
  #485 = Methodref          #2.#484       // scala/jdk/IntAccumulator.filter:(Lscala/Function1;)Lscala/jdk/IntAccumulator;
  #486 = Utf8               (ILjava/lang/Object;)V
  #487 = Utf8               scala/runtime/BoxesRunTime
  #488 = Class              #487          // scala/runtime/BoxesRunTime
  #489 = Utf8               unboxToInt
  #490 = Utf8               (Ljava/lang/Object;)I
  #491 = NameAndType        #489:#490     // unboxToInt:(Ljava/lang/Object;)I
  #492 = Methodref          #488.#491     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #493 = NameAndType        #281:#284     // update:(II)V
  #494 = Methodref          #2.#493       // scala/jdk/IntAccumulator.update:(II)V
  #495 = Utf8               Ljava/lang/Object;
  #496 = Utf8               v1
  #497 = NameAndType        #271:#240     // apply:(I)I
  #498 = Methodref          #2.#497       // scala/jdk/IntAccumulator.apply:(I)I
  #499 = Utf8               boxToInteger
  #500 = NameAndType        #499:#315     // boxToInteger:(I)Ljava/lang/Integer;
  #501 = Methodref          #488.#500     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #502 = Utf8               (I)Ljava/lang/Object;
  #503 = NameAndType        #223:#32      // result:()Lscala/jdk/IntAccumulator;
  #504 = Methodref          #2.#503       // scala/jdk/IntAccumulator.result:()Lscala/jdk/IntAccumulator;
  #505 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #506 = Utf8               shape$1
  #507 = Integer            25
  #508 = Utf8               unexpected StepperShape:
  #509 = String             #508          // unexpected StepperShape:
  #510 = Utf8               $anonfun$collect$1
  #511 = Utf8               (Lscala/jdk/IntAccumulator;I)Lscala/jdk/IntAccumulator;
  #512 = Utf8               b$1
  #513 = Methodref          #5.#41        // scala/jdk/Accumulator$mcI$sp."<init>":()V
  #514 = NameAndType        #510:#511     // $anonfun$collect$1:(Lscala/jdk/IntAccumulator;I)Lscala/jdk/IntAccumulator;
  #515 = Methodref          #2.#514       // scala/jdk/IntAccumulator.$anonfun$collect$1:(Lscala/jdk/IntAccumulator;I)Lscala/jdk/IntAccumulator;
  #516 = Utf8               $deserializeLambda$
  #517 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #518 = Utf8               scala/runtime/LambdaDeserialize
  #519 = Class              #518          // scala/runtime/LambdaDeserialize
  #520 = Utf8               bootstrap
  #521 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #522 = NameAndType        #520:#521     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #523 = Methodref          #519.#522     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #524 = MethodHandle       6:#523        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #525 = Utf8               lambdaDeserialize
  #526 = NameAndType        #525:#517     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #527 = InvokeDynamic      #1:#526       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #528 = Utf8               Code
  #529 = Utf8               LineNumberTable
  #530 = Utf8               Signature
  #531 = Utf8               LocalVariableTable
  #532 = Utf8               MethodParameters
  #533 = Utf8               StackMapTable
  #534 = Utf8               InnerClasses
  #535 = Utf8               SourceFile
  #536 = Utf8               RuntimeVisibleAnnotations
  #537 = Utf8               BootstrapMethods
  #538 = Utf8               ScalaInlineInfo
  #539 = Utf8               ScalaSig
{
  private int[] current;
    descriptor: [I
    flags: (0x0002) ACC_PRIVATE

  private int[][] history;
    descriptor: [[I
    flags: (0x0002) ACC_PRIVATE

  public static scala.jdk.IntAccumulator newBuilder();
    descriptor: ()Lscala/jdk/IntAccumulator;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: pop
         4: new           #2                  // class scala/jdk/IntAccumulator
         7: dup
         8: invokespecial #42                 // Method "<init>":()V
        11: areturn
      LineNumberTable:
        line 340: 4

  public static java.util.function.BiConsumer<scala.jdk.IntAccumulator, scala.jdk.IntAccumulator> merger();
    descriptor: ()Ljava/util/function/BiConsumer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: invokevirtual #47                 // Method scala/jdk/IntAccumulator$.merger:()Ljava/util/function/BiConsumer;
         6: areturn
    Signature: #45                          // ()Ljava/util/function/BiConsumer<Lscala/jdk/IntAccumulator;Lscala/jdk/IntAccumulator;>;

  public static java.util.function.BiConsumer<scala.jdk.IntAccumulator, java.lang.Object> boxedAdder();
    descriptor: ()Ljava/util/function/BiConsumer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: invokevirtual #51                 // Method scala/jdk/IntAccumulator$.boxedAdder:()Ljava/util/function/BiConsumer;
         6: areturn
    Signature: #49                          // ()Ljava/util/function/BiConsumer<Lscala/jdk/IntAccumulator;Ljava/lang/Object;>;

  public static java.util.function.ObjIntConsumer<scala.jdk.IntAccumulator> adder();
    descriptor: ()Ljava/util/function/ObjIntConsumer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: invokevirtual #56                 // Method scala/jdk/IntAccumulator$.adder:()Ljava/util/function/ObjIntConsumer;
         6: areturn
    Signature: #54                          // ()Ljava/util/function/ObjIntConsumer<Lscala/jdk/IntAccumulator;>;

  public static java.util.function.Supplier<scala.jdk.IntAccumulator> supplier();
    descriptor: ()Ljava/util/function/Supplier;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: invokevirtual #61                 // Method scala/jdk/IntAccumulator$.supplier:()Ljava/util/function/Supplier;
         6: areturn
    Signature: #59                          // ()Ljava/util/function/Supplier<Lscala/jdk/IntAccumulator;>;

  public static scala.collection.SpecificIterableFactory<java.lang.Integer, scala.jdk.IntAccumulator> toJavaIntegerAccumulator(scala.jdk.IntAccumulator$);
    descriptor: (Lscala/jdk/IntAccumulator$;)Lscala/collection/SpecificIterableFactory;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: areturn
      LineNumberTable:
        line 308: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0    ia   Lscala/jdk/IntAccumulator$;
    Signature: #64                          // (Lscala/jdk/IntAccumulator$;)Lscala/collection/SpecificIterableFactory<Ljava/lang/Integer;Lscala/jdk/IntAccumulator;>;
    MethodParameters:
      Name                           Flags
      ia                             final

  public static scala.collection.Factory<java.lang.Object, scala.jdk.IntAccumulator> specificIterableFactory();
    descriptor: ()Lscala/collection/Factory;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: areturn
      LineNumberTable:
        line 304: 3
    Signature: #68                          // ()Lscala/collection/Factory<Ljava/lang/Object;Lscala/jdk/IntAccumulator;>;

  public static java.lang.Object fill(int, scala.Function0);
    descriptor: (ILscala/Function0;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: astore_2
         4: new           #20                 // class scala/collection/View$Fill
         7: dup
         8: iload_0
         9: aload_1
        10: invokespecial #75                 // Method scala/collection/View$Fill."<init>":(ILscala/Function0;)V
        13: astore_3
        14: aload_2
        15: aload_3
        16: invokevirtual #79                 // Method scala/jdk/IntAccumulator$.fromSpecific:(Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
        19: areturn
      LineNumberTable:
        line 304: 4
        line 304: 14
        line 304: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0     n   I
            0      20     1  elem   Lscala/Function0;
            4      15     2 fill_this   Lscala/jdk/IntAccumulator$;
           14       5     3 fromSpecific_it   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      n                              final
      elem                           final

  public int[] current();
    descriptor: ()[I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #87                 // Field current:[I
         4: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/IntAccumulator;

  public void current_$eq(int[]);
    descriptor: ([I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #87                 // Field current:[I
         5: return
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/IntAccumulator;
            0       6     1   x$1   [I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int[][] history();
    descriptor: ()[[I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field history:[[I
         4: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/IntAccumulator;

  public void history_$eq(int[][]);
    descriptor: ([[I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #95                 // Field history:[[I
         5: return
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/IntAccumulator;
            0       6     1   x$1   [[I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public long cumulative(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #102                // Method history:()[[I
         4: iload_1
         5: aaload
         6: astore_2
         7: aload_2
         8: aload_2
         9: arraylength
        10: iconst_2
        11: isub
        12: iaload
        13: i2l
        14: bipush        32
        16: lshl
        17: aload_2
        18: aload_2
        19: arraylength
        20: iconst_1
        21: isub
        22: iaload
        23: i2l
        24: ldc2_w        #103                // long 4294967295l
        27: land
        28: lor
        29: lreturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      22     2     x   [I
            0      30     0  this   Lscala/jdk/IntAccumulator;
            0      30     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public java.lang.String className();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #109                // String IntAccumulator
         2: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/jdk/IntAccumulator;

  public <S extends scala.collection.Stepper<?>> S efficientStepper(scala.collection.StepperShape<java.lang.Object, S>);
    descriptor: (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: new           #115                // class scala/jdk/IntAccumulatorStepper
         3: dup
         4: aload_0
         5: invokespecial #118                // Method scala/jdk/IntAccumulatorStepper."<init>":(Lscala/jdk/IntAccumulator;)V
         8: astore_2
         9: aload_1
        10: invokeinterface #123,  1          // InterfaceMethod scala/collection/StepperShape.shape:()I
        15: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        18: invokevirtual #131                // Method scala/collection/StepperShape$.IntShape:()I
        21: if_icmpne     26
        24: aload_2
        25: areturn
        26: aload_1
        27: invokeinterface #123,  1          // InterfaceMethod scala/collection/StepperShape.shape:()I
        32: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        35: invokevirtual #134                // Method scala/collection/StepperShape$.ReferenceShape:()I
        38: if_icmpne     45
        41: iconst_1
        42: goto          46
        45: iconst_0
        46: ifne          81
        49: new           #136                // class java/lang/AssertionError
        52: dup
        53: new           #138                // class java/lang/StringBuilder
        56: dup
        57: ldc           #139                // int 18
        59: invokespecial #142                // Method java/lang/StringBuilder."<init>":(I)V
        62: ldc           #144                // String assertion failed:
        64: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        67: aload_1
        68: invokestatic  #152                // Method $anonfun$efficientStepper$1:(Lscala/collection/StepperShape;)Ljava/lang/String;
        71: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        74: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        77: invokespecial #161                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
        80: athrow
        81: getstatic     #166                // Field scala/collection/AnyStepper$.MODULE$:Lscala/collection/AnyStepper$;
        84: pop
        85: new           #18                 // class scala/collection/AnyStepper$$anon$4
        88: dup
        89: aload_2
        90: invokespecial #169                // Method scala/collection/AnyStepper$$anon$4."<init>":(Lscala/collection/IntStepper;)V
        93: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class scala/jdk/IntAccumulatorStepper ]
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 34 /* same */
      LineNumberTable:
        line 37: 0
        line 39: 9
        line 41: 26
        line 42: 81
        line 44: 93
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      84     2    st   Lscala/jdk/IntAccumulatorStepper;
            0      94     0  this   Lscala/jdk/IntAccumulator;
            0      94     1 shape   Lscala/collection/StepperShape;
    Signature: #112                         // <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<Ljava/lang/Object;TS;>;)TS;
    MethodParameters:
      Name                           Flags
      shape                          final

  private void expand();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #176                // Method index:()I
         4: iconst_0
         5: if_icmple     111
         8: aload_0
         9: invokevirtual #179                // Method hIndex:()I
        12: iconst_0
        13: if_icmple     29
        16: aload_0
        17: aload_0
        18: invokevirtual #179                // Method hIndex:()I
        21: iconst_1
        22: isub
        23: invokevirtual #181                // Method cumulative:(I)J
        26: goto          30
        29: lconst_0
        30: aload_0
        31: invokevirtual #176                // Method index:()I
        34: i2l
        35: ladd
        36: lstore_1
        37: aload_0
        38: invokevirtual #183                // Method current:()[I
        41: aload_0
        42: invokevirtual #183                // Method current:()[I
        45: arraylength
        46: iconst_2
        47: isub
        48: lload_1
        49: bipush        32
        51: lushr
        52: l2i
        53: iastore
        54: aload_0
        55: invokevirtual #183                // Method current:()[I
        58: aload_0
        59: invokevirtual #183                // Method current:()[I
        62: arraylength
        63: iconst_1
        64: isub
        65: lload_1
        66: ldc2_w        #103                // long 4294967295l
        69: land
        70: l2i
        71: iastore
        72: aload_0
        73: invokevirtual #179                // Method hIndex:()I
        76: aload_0
        77: invokevirtual #102                // Method history:()[[I
        80: arraylength
        81: if_icmplt     88
        84: aload_0
        85: invokespecial #186                // Method hExpand:()V
        88: aload_0
        89: invokevirtual #102                // Method history:()[[I
        92: aload_0
        93: invokevirtual #179                // Method hIndex:()I
        96: aload_0
        97: invokevirtual #183                // Method current:()[I
       100: aastore
       101: aload_0
       102: aload_0
       103: invokevirtual #179                // Method hIndex:()I
       106: iconst_1
       107: iadd
       108: invokevirtual #189                // Method hIndex_$eq:(I)V
       111: aload_0
       112: aload_0
       113: invokevirtual #192                // Method nextBlockSize:()I
       116: iconst_1
       117: iadd
       118: newarray       int
       120: invokevirtual #194                // Method current_$eq:([I)V
       123: aload_0
       124: iconst_0
       125: invokevirtual #197                // Method index_$eq:(I)V
       128: return
      StackMapTable: number_of_entries = 4
        frame_type = 29 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ long ]
        frame_type = 252 /* append */
          offset_delta = 57
          locals = [ long ]
        frame_type = 250 /* chop */
          offset_delta = 22
      LineNumberTable:
        line 48: 0
        line 49: 8
        line 50: 37
        line 51: 54
        line 52: 72
        line 53: 88
        line 54: 101
        line 56: 111
        line 57: 123
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37      74     1  cuml   J
            0     129     0  this   Lscala/jdk/IntAccumulator;

  private void hExpand();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #179                // Method hIndex:()I
         4: iconst_0
         5: if_icmpne     17
         8: aload_0
         9: iconst_4
        10: anewarray     #200                // class "[I"
        13: invokevirtual #202                // Method history_$eq:([[I)V
        16: return
        17: aload_0
        18: aload_0
        19: invokevirtual #102                // Method history:()[[I
        22: aload_0
        23: invokevirtual #102                // Method history:()[[I
        26: arraylength
        27: iconst_1
        28: ishl
        29: invokestatic  #208                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
        32: checkcast     #209                // class "[[I"
        35: invokevirtual #202                // Method history_$eq:([[I)V
        38: return
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
      LineNumberTable:
        line 61: 0
        line 62: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lscala/jdk/IntAccumulator;

  public scala.jdk.IntAccumulator addOne(int);
    descriptor: (I)Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #216                // Method totalSize:()J
         5: lconst_1
         6: ladd
         7: invokevirtual #220                // Method totalSize_$eq:(J)V
        10: aload_0
        11: invokevirtual #176                // Method index:()I
        14: iconst_2
        15: iadd
        16: aload_0
        17: invokevirtual #183                // Method current:()[I
        20: arraylength
        21: if_icmplt     28
        24: aload_0
        25: invokespecial #222                // Method expand:()V
        28: aload_0
        29: invokevirtual #183                // Method current:()[I
        32: aload_0
        33: invokevirtual #176                // Method index:()I
        36: iload_1
        37: iastore
        38: aload_0
        39: aload_0
        40: invokevirtual #176                // Method index:()I
        43: iconst_1
        44: iadd
        45: invokevirtual #197                // Method index_$eq:(I)V
        48: aload_0
        49: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
      LineNumberTable:
        line 67: 0
        line 68: 10
        line 69: 28
        line 70: 38
        line 71: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lscala/jdk/IntAccumulator;
            0      50     1     a   I
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.jdk.IntAccumulator result();
    descriptor: ()Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/jdk/IntAccumulator;

  public void drain(scala.jdk.IntAccumulator);
    descriptor: (Lscala/jdk/IntAccumulator;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=18, args_size=2
         0: iconst_0
         1: istore_2
         2: lconst_0
         3: lstore_3
         4: iconst_1
         5: istore        5
         7: iload         5
         9: ifeq          97
        12: iload_2
        13: aload_1
        14: invokevirtual #179                // Method hIndex:()I
        17: if_icmpge     97
        20: aload_1
        21: iload_2
        22: invokevirtual #181                // Method cumulative:(I)J
        25: lstore        6
        27: lload         6
        29: lload_3
        30: lsub
        31: l2i
        32: istore        8
        34: aload_0
        35: invokevirtual #183                // Method current:()[I
        38: arraylength
        39: aload_0
        40: invokevirtual #176                // Method index:()I
        43: isub
        44: iconst_2
        45: isub
        46: iload         8
        48: if_icmplt     91
        51: aload_1
        52: invokevirtual #102                // Method history:()[[I
        55: iload_2
        56: aaload
        57: iconst_0
        58: aload_0
        59: invokevirtual #183                // Method current:()[I
        62: aload_0
        63: invokevirtual #176                // Method index:()I
        66: iload         8
        68: invokestatic  #231                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        71: lload         6
        73: lstore_3
        74: aload_0
        75: aload_0
        76: invokevirtual #176                // Method index:()I
        79: iload         8
        81: iadd
        82: invokevirtual #197                // Method index_$eq:(I)V
        85: iinc          2, 1
        88: goto          7
        91: iconst_0
        92: istore        5
        94: goto          7
        97: iload_2
        98: aload_1
        99: invokevirtual #179                // Method hIndex:()I
       102: if_icmplt     168
       105: aload_0
       106: invokevirtual #183                // Method current:()[I
       109: arraylength
       110: aload_0
       111: invokevirtual #176                // Method index:()I
       114: isub
       115: iconst_2
       116: isub
       117: aload_1
       118: invokevirtual #176                // Method index:()I
       121: if_icmplt     168
       124: aload_1
       125: invokevirtual #176                // Method index:()I
       128: iconst_0
       129: if_icmple     152
       132: aload_1
       133: invokevirtual #183                // Method current:()[I
       136: iconst_0
       137: aload_0
       138: invokevirtual #183                // Method current:()[I
       141: aload_0
       142: invokevirtual #176                // Method index:()I
       145: aload_1
       146: invokevirtual #176                // Method index:()I
       149: invokestatic  #231                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       152: aload_0
       153: aload_0
       154: invokevirtual #176                // Method index:()I
       157: aload_1
       158: invokevirtual #176                // Method index:()I
       161: iadd
       162: invokevirtual #197                // Method index_$eq:(I)V
       165: goto          539
       168: aload_0
       169: invokevirtual #176                // Method index:()I
       172: iconst_0
       173: if_icmple     180
       176: iconst_1
       177: goto          181
       180: iconst_0
       181: aload_1
       182: invokevirtual #179                // Method hIndex:()I
       185: iadd
       186: iload_2
       187: isub
       188: istore        9
       190: aload_0
       191: invokevirtual #179                // Method hIndex:()I
       194: iload         9
       196: iadd
       197: aload_0
       198: invokevirtual #102                // Method history:()[[I
       201: arraylength
       202: if_icmple     248
       205: getstatic     #236                // Field scala/math/package$.MODULE$:Lscala/math/package$;
       208: pop
       209: iconst_4
       210: iconst_1
       211: bipush        32
       213: iconst_1
       214: aload_0
       215: invokevirtual #179                // Method hIndex:()I
       218: iadd
       219: iload         9
       221: iadd
       222: invokestatic  #242                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       225: isub
       226: ishl
       227: invokestatic  #248                // Method java/lang/Math.max:(II)I
       230: istore        17
       232: aload_0
       233: aload_0
       234: invokevirtual #102                // Method history:()[[I
       237: iload         17
       239: invokestatic  #208                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
       242: checkcast     #209                // class "[[I"
       245: invokevirtual #202                // Method history_$eq:([[I)V
       248: aload_0
       249: invokevirtual #179                // Method hIndex:()I
       252: iconst_0
       253: if_icmple     269
       256: aload_0
       257: aload_0
       258: invokevirtual #179                // Method hIndex:()I
       261: iconst_1
       262: isub
       263: invokevirtual #181                // Method cumulative:(I)J
       266: goto          270
       269: lconst_0
       270: lstore        10
       272: aload_0
       273: invokevirtual #176                // Method index:()I
       276: iconst_0
       277: if_icmple     432
       280: aload_0
       281: invokevirtual #176                // Method index:()I
       284: aload_0
       285: invokevirtual #183                // Method current:()[I
       288: arraylength
       289: iconst_3
       290: iushr
       291: if_icmpge     366
       294: aload_0
       295: invokevirtual #183                // Method current:()[I
       298: arraylength
       299: iconst_1
       300: isub
       301: bipush        32
       303: if_icmple     366
       306: aload_0
       307: invokevirtual #183                // Method current:()[I
       310: aload_0
       311: invokevirtual #176                // Method index:()I
       314: iconst_2
       315: iadd
       316: invokestatic  #251                // Method java/util/Arrays.copyOf:([II)[I
       319: astore        13
       321: aload         13
       323: aload         13
       325: arraylength
       326: iconst_2
       327: isub
       328: aload_0
       329: invokevirtual #183                // Method current:()[I
       332: aload_0
       333: invokevirtual #183                // Method current:()[I
       336: arraylength
       337: iconst_2
       338: isub
       339: iaload
       340: iastore
       341: aload         13
       343: aload         13
       345: arraylength
       346: iconst_1
       347: isub
       348: aload_0
       349: invokevirtual #183                // Method current:()[I
       352: aload_0
       353: invokevirtual #183                // Method current:()[I
       356: arraylength
       357: iconst_1
       358: isub
       359: iaload
       360: iastore
       361: aload         13
       363: goto          370
       366: aload_0
       367: invokevirtual #183                // Method current:()[I
       370: astore        12
       372: lload         10
       374: aload_0
       375: invokevirtual #176                // Method index:()I
       378: i2l
       379: ladd
       380: lstore        10
       382: aload         12
       384: aload         12
       386: arraylength
       387: iconst_2
       388: isub
       389: lload         10
       391: bipush        32
       393: lushr
       394: l2i
       395: iastore
       396: aload         12
       398: aload         12
       400: arraylength
       401: iconst_1
       402: isub
       403: lload         10
       405: ldc2_w        #103                // long 4294967295l
       408: land
       409: l2i
       410: iastore
       411: aload_0
       412: invokevirtual #102                // Method history:()[[I
       415: aload_0
       416: invokevirtual #179                // Method hIndex:()I
       419: aload         12
       421: aastore
       422: aload_0
       423: aload_0
       424: invokevirtual #179                // Method hIndex:()I
       427: iconst_1
       428: iadd
       429: invokevirtual #189                // Method hIndex_$eq:(I)V
       432: iload_2
       433: aload_1
       434: invokevirtual #179                // Method hIndex:()I
       437: if_icmpge     523
       440: aload_1
       441: iload_2
       442: invokevirtual #181                // Method cumulative:(I)J
       445: lstore        14
       447: lload         10
       449: lload         14
       451: ladd
       452: lload_3
       453: lsub
       454: lstore        10
       456: lload         14
       458: lstore_3
       459: aload_1
       460: invokevirtual #102                // Method history:()[[I
       463: iload_2
       464: aaload
       465: astore        16
       467: aload         16
       469: aload         16
       471: arraylength
       472: iconst_2
       473: isub
       474: lload         10
       476: bipush        32
       478: lushr
       479: l2i
       480: iastore
       481: aload         16
       483: aload         16
       485: arraylength
       486: iconst_1
       487: isub
       488: lload         10
       490: ldc2_w        #103                // long 4294967295l
       493: land
       494: l2i
       495: iastore
       496: aload_0
       497: invokevirtual #102                // Method history:()[[I
       500: aload_0
       501: invokevirtual #179                // Method hIndex:()I
       504: aload         16
       506: aastore
       507: iinc          2, 1
       510: aload_0
       511: aload_0
       512: invokevirtual #179                // Method hIndex:()I
       515: iconst_1
       516: iadd
       517: invokevirtual #189                // Method hIndex_$eq:(I)V
       520: goto          432
       523: aload_0
       524: aload_1
       525: invokevirtual #176                // Method index:()I
       528: invokevirtual #197                // Method index_$eq:(I)V
       531: aload_0
       532: aload_1
       533: invokevirtual #183                // Method current:()[I
       536: invokevirtual #194                // Method current_$eq:([I)V
       539: aload_0
       540: aload_0
       541: invokevirtual #216                // Method totalSize:()J
       544: aload_1
       545: invokevirtual #216                // Method totalSize:()J
       548: ladd
       549: invokevirtual #220                // Method totalSize_$eq:(J)V
       552: aload_1
       553: invokevirtual #254                // Method clear:()V
       556: return
      StackMapTable: number_of_entries = 15
        frame_type = 254 /* append */
          offset_delta = 7
          locals = [ int, long, int ]
        frame_type = 253 /* append */
          offset_delta = 83
          locals = [ long, int ]
        frame_type = 249 /* chop */
          offset_delta = 5
        frame_type = 54 /* same */
        frame_type = 15 /* same */
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 66
          locals = [ class scala/jdk/IntAccumulator, class scala/jdk/IntAccumulator, int, long, int, top, top, top, int ]
          stack = []
        frame_type = 20 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ long ]
        frame_type = 252 /* append */
          offset_delta = 95
          locals = [ long ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class "[I" ]
        frame_type = 61 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 90
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class scala/jdk/IntAccumulator, class scala/jdk/IntAccumulator, int, long, int ]
          stack = []
      LineNumberTable:
        line 79: 0
        line 80: 2
        line 81: 4
        line 82: 7
        line 83: 20
        line 84: 27
        line 85: 34
        line 86: 51
        line 87: 71
        line 88: 74
        line 89: 85
        line 91: 91
        line 82: 94
        line 93: 97
        line 94: 124
        line 95: 152
        line 98: 168
        line 99: 190
        line 100: 205
        line 101: 232
        line 103: 248
        line 104: 272
        line 106: 280
        line 107: 306
        line 108: 321
        line 109: 341
        line 110: 361
        line 112: 366
        line 113: 372
        line 114: 382
        line 115: 396
        line 116: 411
        line 117: 422
        line 119: 432
        line 120: 440
        line 121: 447
        line 122: 456
        line 123: 459
        line 124: 467
        line 125: 481
        line 126: 496
        line 127: 507
        line 128: 510
        line 119: 520
        line 130: 523
        line 131: 531
        line 133: 539
        line 134: 552
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      67     6  cuml   J
           34      60     8     n   I
          321      42    13   ans   [I
          372      60    12     x   [I
          447      73    14  cuml   J
          467      53    16     x   [I
          190     349     9 slots   I
          272     267    10    pv   J
            2     554     2     h   I
            4     552     3  prev   J
            7     549     5  more   Z
            0     557     0  this   Lscala/jdk/IntAccumulator;
            0     557     1  that   Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      that                           final

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #264                // Method scala/jdk/Accumulator.clear:()V
         4: aload_0
         5: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         8: invokevirtual #267                // Method scala/jdk/IntAccumulator$.scala$jdk$IntAccumulator$$emptyIntArray:()[I
        11: invokevirtual #194                // Method current_$eq:([I)V
        14: aload_0
        15: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
        18: invokevirtual #270                // Method scala/jdk/IntAccumulator$.scala$jdk$IntAccumulator$$emptyIntArrayArray:()[[I
        21: invokevirtual #202                // Method history_$eq:([[I)V
        24: return
      LineNumberTable:
        line 138: 0
        line 139: 4
        line 140: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/jdk/IntAccumulator;

  public int apply(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #216                // Method totalSize:()J
         4: lload_1
         5: lsub
         6: aload_0
         7: invokevirtual #176                // Method index:()I
        10: i2l
        11: lcmp
        12: ifle          23
        15: aload_0
        16: invokevirtual #179                // Method hIndex:()I
        19: iconst_0
        20: if_icmpne     42
        23: aload_0
        24: invokevirtual #183                // Method current:()[I
        27: lload_1
        28: aload_0
        29: invokevirtual #216                // Method totalSize:()J
        32: aload_0
        33: invokevirtual #176                // Method index:()I
        36: i2l
        37: lsub
        38: lsub
        39: l2i
        40: iaload
        41: ireturn
        42: aload_0
        43: lload_1
        44: invokevirtual #277                // Method seekSlot:(J)J
        47: lstore_3
        48: aload_0
        49: invokevirtual #102                // Method history:()[[I
        52: lload_3
        53: bipush        32
        55: lushr
        56: l2i
        57: aaload
        58: lload_3
        59: ldc2_w        #103                // long 4294967295l
        62: land
        63: l2i
        64: iaload
        65: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 18 /* same */
      LineNumberTable:
        line 145: 0
        line 147: 42
        line 148: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           48      17     3     w   J
            0      66     0  this   Lscala/jdk/IntAccumulator;
            0      66     1    ix   J
    MethodParameters:
      Name                           Flags
      ix                             final

  public int apply(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: i2l
         3: invokevirtual #280                // Method apply:(J)I
         6: ireturn
      LineNumberTable:
        line 153: 0
        line 153: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/jdk/IntAccumulator;
            0       7     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public void update(long, int);
    descriptor: (JI)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=3
         0: aload_0
         1: invokevirtual #216                // Method totalSize:()J
         4: lload_1
         5: lsub
         6: aload_0
         7: invokevirtual #176                // Method index:()I
        10: i2l
        11: lcmp
        12: ifle          23
        15: aload_0
        16: invokevirtual #179                // Method hIndex:()I
        19: iconst_0
        20: if_icmpne     43
        23: aload_0
        24: invokevirtual #183                // Method current:()[I
        27: lload_1
        28: aload_0
        29: invokevirtual #216                // Method totalSize:()J
        32: aload_0
        33: invokevirtual #176                // Method index:()I
        36: i2l
        37: lsub
        38: lsub
        39: l2i
        40: iload_3
        41: iastore
        42: return
        43: aload_0
        44: lload_1
        45: invokevirtual #277                // Method seekSlot:(J)J
        48: lstore        4
        50: aload_0
        51: invokevirtual #102                // Method history:()[[I
        54: lload         4
        56: bipush        32
        58: lushr
        59: l2i
        60: aaload
        61: lload         4
        63: ldc2_w        #103                // long 4294967295l
        66: land
        67: l2i
        68: iload_3
        69: iastore
        70: return
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 19 /* same */
      LineNumberTable:
        line 156: 0
        line 158: 43
        line 159: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           50      20     4     w   J
            0      71     0  this   Lscala/jdk/IntAccumulator;
            0      71     1   idx   J
            0      71     3  elem   I
    MethodParameters:
      Name                           Flags
      idx                            final
      elem                           final

  public void update(int, int);
    descriptor: (II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: i2l
         3: iload_2
         4: invokevirtual #286                // Method update:(JI)V
         7: return
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/jdk/IntAccumulator;
            0       8     1   idx   I
            0       8     2  elem   I
    MethodParameters:
      Name                           Flags
      idx                            final
      elem                           final

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
         3: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
         6: astore_1
         7: aload_0
         8: aload_1
         9: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        12: aconst_null
        13: astore_1
        14: invokeinterface #299,  1          // InterfaceMethod scala/collection/Stepper.iterator:()Lscala/collection/Iterator;
        19: areturn
      LineNumberTable:
        line 166: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/jdk/IntAccumulator;
            7       5     1 stepper_shape   Lscala/collection/StepperShape;
    Signature: #289                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public <U extends java.lang.Object> void foreach(scala.Function1<java.lang.Object, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
         3: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
         6: astore_3
         7: aload_0
         8: aload_3
         9: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        12: aconst_null
        13: astore_3
        14: checkcast     #306                // class scala/collection/IntStepper
        17: astore_2
        18: aload_2
        19: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        24: ifeq          46
        27: aload_1
        28: aload_2
        29: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        34: invokestatic  #317                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        37: invokeinterface #322,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        42: pop
        43: goto          18
        46: return
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 18
          locals = [ class scala/collection/IntStepper, null ]
        frame_type = 27 /* same */
      LineNumberTable:
        line 169: 0
        line 170: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      28     2     s   Lscala/collection/IntStepper;
            0      47     0  this   Lscala/jdk/IntAccumulator;
            0      47     1     f   Lscala/Function1;
            7       5     3 stepper_shape   Lscala/collection/StepperShape;
    Signature: #303                         // <U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Object;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.jdk.IntAccumulator map(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=2
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: pop
         4: new           #2                  // class scala/jdk/IntAccumulator
         7: dup
         8: invokespecial #42                 // Method "<init>":()V
        11: astore        4
        13: aload         4
        15: aconst_null
        16: astore        4
        18: astore        5
        20: aload         5
        22: aconst_null
        23: astore        5
        25: astore_2
        26: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        29: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        32: astore        6
        34: aload_0
        35: aload         6
        37: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        40: aconst_null
        41: astore        6
        43: checkcast     #306                // class scala/collection/IntStepper
        46: astore_3
        47: aload_3
        48: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        53: ifeq          76
        56: aload_2
        57: aload_1
        58: aload_3
        59: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        64: invokeinterface #331,  2          // InterfaceMethod scala/Function1.apply$mcII$sp:(I)I
        69: invokevirtual #333                // Method addOne:(I)Lscala/jdk/IntAccumulator;
        72: pop
        73: goto          47
        76: aload_2
        77: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class scala/jdk/IntAccumulator, class scala/Function1, class scala/jdk/IntAccumulator, class scala/collection/IntStepper, null, null, null ]
          stack = []
        frame_type = 28 /* same */
      LineNumberTable:
        line 296: 0
        line 340: 4
        line 296: 13
        line 174: 20
        line 175: 26
        line 176: 47
        line 177: 56
        line 75: 76
        line 178: 76
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      51     2     b   Lscala/jdk/IntAccumulator;
           47      30     3     s   Lscala/collection/IntStepper;
            0      78     0  this   Lscala/jdk/IntAccumulator;
            0      78     1     f   Lscala/Function1;
           34       6     6 stepper_shape   Lscala/collection/StepperShape;
    Signature: #328                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.jdk.IntAccumulator flatMap(scala.Function1<java.lang.Object, scala.collection.IterableOnce<java.lang.Object>>);
    descriptor: (Lscala/Function1;)Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: pop
         4: new           #2                  // class scala/jdk/IntAccumulator
         7: dup
         8: invokespecial #42                 // Method "<init>":()V
        11: astore        5
        13: aload         5
        15: aconst_null
        16: astore        5
        18: astore        6
        20: aload         6
        22: aconst_null
        23: astore        6
        25: astore_2
        26: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        29: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        32: astore        7
        34: aload_0
        35: aload         7
        37: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        40: aconst_null
        41: astore        7
        43: checkcast     #306                // class scala/collection/IntStepper
        46: astore_3
        47: aload_3
        48: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        53: ifeq          89
        56: aload_1
        57: aload_3
        58: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        63: invokestatic  #317                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        66: invokeinterface #322,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        71: checkcast     #338                // class scala/collection/IterableOnce
        74: astore        4
        76: aload_2
        77: aload         4
        79: invokestatic  #344                // InterfaceMethod scala/collection/mutable/Growable.addAll$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
        82: pop
        83: aconst_null
        84: astore        4
        86: goto          47
        89: aload_2
        90: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class scala/jdk/IntAccumulator, class scala/Function1, class scala/jdk/IntAccumulator, class scala/collection/IntStepper, top, null, null, null ]
          stack = []
        frame_type = 41 /* same */
      LineNumberTable:
        line 296: 0
        line 340: 4
        line 296: 13
        line 182: 20
        line 183: 26
        line 184: 47
        line 185: 56
        line 75: 89
        line 186: 89
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      64     2     b   Lscala/jdk/IntAccumulator;
           47      43     3     s   Lscala/collection/IntStepper;
            0      91     0  this   Lscala/jdk/IntAccumulator;
            0      91     1     f   Lscala/Function1;
           76       7     4 addAll_xs   Lscala/collection/IterableOnce;
           34       6     7 stepper_shape   Lscala/collection/StepperShape;
    Signature: #336                         // (Lscala/Function1<Ljava/lang/Object;Lscala/collection/IterableOnce<Ljava/lang/Object;>;>;)Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.jdk.IntAccumulator collect(scala.PartialFunction<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/PartialFunction;)Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: pop
         4: new           #2                  // class scala/jdk/IntAccumulator
         7: dup
         8: invokespecial #42                 // Method "<init>":()V
        11: astore        5
        13: aload         5
        15: aconst_null
        16: astore        5
        18: astore        6
        20: aload         6
        22: aconst_null
        23: astore        6
        25: astore_2
        26: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        29: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        32: astore        7
        34: aload_0
        35: aload         7
        37: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        40: aconst_null
        41: astore        7
        43: checkcast     #306                // class scala/collection/IntStepper
        46: astore_3
        47: aload_3
        48: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        53: ifeq          87
        56: aload_3
        57: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        62: istore        4
        64: aload_1
        65: aload_2
        66: invokedynamic #369,  0            // InvokeDynamic #0:apply:(Lscala/jdk/IntAccumulator;)Lscala/Function1;
        71: invokeinterface #375,  2          // InterfaceMethod scala/PartialFunction.runWith:(Lscala/Function1;)Lscala/Function1;
        76: iload         4
        78: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        83: pop
        84: goto          47
        87: aload_2
        88: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class scala/jdk/IntAccumulator, class scala/PartialFunction, class scala/jdk/IntAccumulator, class scala/collection/IntStepper, top, null, null, null ]
          stack = []
        frame_type = 39 /* same */
      LineNumberTable:
        line 296: 0
        line 340: 4
        line 296: 13
        line 190: 20
        line 191: 26
        line 192: 47
        line 193: 56
        line 194: 64
        line 192: 84
        line 75: 87
        line 196: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      20     4     n   I
           26      62     2     b   Lscala/jdk/IntAccumulator;
           47      41     3     s   Lscala/collection/IntStepper;
            0      89     0  this   Lscala/jdk/IntAccumulator;
            0      89     1    pf   Lscala/PartialFunction;
           34       6     7 stepper_shape   Lscala/collection/StepperShape;
    Signature: #348                         // (Lscala/PartialFunction<Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      pf                             final

  private scala.jdk.IntAccumulator filterAccImpl(scala.Function1<java.lang.Object, java.lang.Object>, boolean);
    descriptor: (Lscala/Function1;Z)Lscala/jdk/IntAccumulator;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=9, args_size=3
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: pop
         4: new           #2                  // class scala/jdk/IntAccumulator
         7: dup
         8: invokespecial #42                 // Method "<init>":()V
        11: astore        6
        13: aload         6
        15: aconst_null
        16: astore        6
        18: astore        7
        20: aload         7
        22: aconst_null
        23: astore        7
        25: astore_3
        26: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        29: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        32: astore        8
        34: aload_0
        35: aload         8
        37: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        40: aconst_null
        41: astore        8
        43: checkcast     #306                // class scala/collection/IntStepper
        46: astore        4
        48: aload         4
        50: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        55: ifeq          89
        58: aload         4
        60: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        65: istore        5
        67: aload_1
        68: iload         5
        70: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        75: iload_2
        76: if_icmpeq     48
        79: aload_3
        80: iload         5
        82: invokevirtual #333                // Method addOne:(I)Lscala/jdk/IntAccumulator;
        85: pop
        86: goto          48
        89: aload_3
        90: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class scala/jdk/IntAccumulator, class scala/Function1, int, class scala/jdk/IntAccumulator, class scala/collection/IntStepper, top, null, null, null ]
          stack = []
        frame_type = 40 /* same */
      LineNumberTable:
        line 296: 0
        line 340: 4
        line 296: 13
        line 200: 20
        line 201: 26
        line 202: 48
        line 203: 58
        line 204: 67
        line 75: 89
        line 206: 89
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           67      22     5     n   I
           26      64     3     b   Lscala/jdk/IntAccumulator;
           48      42     4     s   Lscala/collection/IntStepper;
            0      91     0  this   Lscala/jdk/IntAccumulator;
            0      91     1  pred   Lscala/Function1;
            0      91     2   not   Z
           34       6     8 stepper_shape   Lscala/collection/StepperShape;
    Signature: #383                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;Z)Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      pred                           final
      not                            final

  public scala.jdk.IntAccumulator filter(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: iconst_0
         1: istore_2
         2: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         5: pop
         6: new           #2                  // class scala/jdk/IntAccumulator
         9: dup
        10: invokespecial #42                 // Method "<init>":()V
        13: astore        6
        15: aload         6
        17: aconst_null
        18: astore        6
        20: astore        7
        22: aload         7
        24: aconst_null
        25: astore        7
        27: astore_3
        28: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        31: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        34: astore        8
        36: aload_0
        37: aload         8
        39: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        42: aconst_null
        43: astore        8
        45: checkcast     #306                // class scala/collection/IntStepper
        48: astore        4
        50: aload         4
        52: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        57: ifeq          91
        60: aload         4
        62: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        67: istore        5
        69: aload_1
        70: iload         5
        72: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        77: iload_2
        78: if_icmpeq     50
        81: aload_3
        82: iload         5
        84: invokevirtual #333                // Method addOne:(I)Lscala/jdk/IntAccumulator;
        87: pop
        88: goto          50
        91: aload_3
        92: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class scala/jdk/IntAccumulator, class scala/Function1, int, class scala/jdk/IntAccumulator, class scala/collection/IntStepper, top, null, null, null ]
          stack = []
        frame_type = 40 /* same */
      LineNumberTable:
        line 209: 0
        line 296: 2
        line 340: 6
        line 296: 15
        line 200: 22
        line 201: 28
        line 202: 50
        line 203: 60
        line 204: 69
        line 206: 91
        line 209: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      93     0  this   Lscala/jdk/IntAccumulator;
            0      93     1  pred   Lscala/Function1;
           69      22     5 filterAccImpl_n   I
           28      63     3 filterAccImpl_b   Lscala/jdk/IntAccumulator;
           50      41     4 filterAccImpl_s   Lscala/collection/IntStepper;
            2      89     2 filterAccImpl_not   Z
           36       6     8 filterAccImpl_stepper_shape   Lscala/collection/StepperShape;
    Signature: #328                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      pred                           final

  public scala.jdk.IntAccumulator filterNot(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: iconst_1
         1: istore_2
         2: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         5: pop
         6: new           #2                  // class scala/jdk/IntAccumulator
         9: dup
        10: invokespecial #42                 // Method "<init>":()V
        13: astore        6
        15: aload         6
        17: aconst_null
        18: astore        6
        20: astore        7
        22: aload         7
        24: aconst_null
        25: astore        7
        27: astore_3
        28: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        31: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        34: astore        8
        36: aload_0
        37: aload         8
        39: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        42: aconst_null
        43: astore        8
        45: checkcast     #306                // class scala/collection/IntStepper
        48: astore        4
        50: aload         4
        52: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        57: ifeq          91
        60: aload         4
        62: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        67: istore        5
        69: aload_1
        70: iload         5
        72: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        77: iload_2
        78: if_icmpeq     50
        81: aload_3
        82: iload         5
        84: invokevirtual #333                // Method addOne:(I)Lscala/jdk/IntAccumulator;
        87: pop
        88: goto          50
        91: aload_3
        92: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class scala/jdk/IntAccumulator, class scala/Function1, int, class scala/jdk/IntAccumulator, class scala/collection/IntStepper, top, null, null, null ]
          stack = []
        frame_type = 40 /* same */
      LineNumberTable:
        line 211: 0
        line 296: 2
        line 340: 6
        line 296: 15
        line 200: 22
        line 201: 28
        line 202: 50
        line 203: 60
        line 204: 69
        line 206: 91
        line 211: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      93     0  this   Lscala/jdk/IntAccumulator;
            0      93     1  pred   Lscala/Function1;
           69      22     5 filterAccImpl_n   I
           28      63     3 filterAccImpl_b   Lscala/jdk/IntAccumulator;
           50      41     4 filterAccImpl_s   Lscala/collection/IntStepper;
            2      89     2 filterAccImpl_not   Z
           36       6     8 filterAccImpl_stepper_shape   Lscala/collection/StepperShape;
    Signature: #328                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      pred                           final

  public boolean forall(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
         3: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
         6: astore_3
         7: aload_0
         8: aload_3
         9: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        12: aconst_null
        13: astore_3
        14: checkcast     #306                // class scala/collection/IntStepper
        17: astore_2
        18: aload_2
        19: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        24: ifeq          44
        27: aload_1
        28: aload_2
        29: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        34: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        39: ifne          18
        42: iconst_0
        43: ireturn
        44: iconst_1
        45: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 18
          locals = [ class scala/collection/IntStepper, null ]
        frame_type = 25 /* same */
      LineNumberTable:
        line 214: 0
        line 215: 18
        line 216: 27
        line 217: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      27     2     s   Lscala/collection/IntStepper;
            0      46     0  this   Lscala/jdk/IntAccumulator;
            0      46     1     p   Lscala/Function1;
            7       5     3 stepper_shape   Lscala/collection/StepperShape;
    Signature: #395                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)Z
    MethodParameters:
      Name                           Flags
      p                              final

  public boolean exists(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
         3: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
         6: astore_3
         7: aload_0
         8: aload_3
         9: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        12: aconst_null
        13: astore_3
        14: checkcast     #306                // class scala/collection/IntStepper
        17: astore_2
        18: aload_2
        19: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        24: ifeq          44
        27: aload_1
        28: aload_2
        29: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        34: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        39: ifeq          18
        42: iconst_1
        43: ireturn
        44: iconst_0
        45: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 18
          locals = [ class scala/collection/IntStepper, null ]
        frame_type = 25 /* same */
      LineNumberTable:
        line 221: 0
        line 222: 18
        line 223: 27
        line 224: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      27     2     s   Lscala/collection/IntStepper;
            0      46     0  this   Lscala/jdk/IntAccumulator;
            0      46     1     p   Lscala/Function1;
            7       5     3 stepper_shape   Lscala/collection/StepperShape;
    Signature: #395                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)Z
    MethodParameters:
      Name                           Flags
      p                              final

  public int count(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: iconst_0
         1: istore_2
         2: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
         5: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
         8: astore        4
        10: aload_0
        11: aload         4
        13: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        16: aconst_null
        17: astore        4
        19: checkcast     #306                // class scala/collection/IntStepper
        22: astore_3
        23: aload_3
        24: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        29: ifeq          53
        32: aload_1
        33: aload_3
        34: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        39: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        44: ifeq          23
        47: iinc          2, 1
        50: goto          23
        53: iload_2
        54: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 23
          locals = [ int, class scala/collection/IntStepper, null ]
        frame_type = 29 /* same */
      LineNumberTable:
        line 228: 0
        line 229: 2
        line 230: 23
        line 231: 32
        line 232: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      52     2     r   I
           23      31     3     s   Lscala/collection/IntStepper;
            0      55     0  this   Lscala/jdk/IntAccumulator;
            0      55     1     p   Lscala/Function1;
           10       6     4 stepper_shape   Lscala/collection/StepperShape;
    Signature: #400                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)I
    MethodParameters:
      Name                           Flags
      p                              final

  public long countLong(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: lconst_0
         1: lstore_2
         2: getstatic     #128                // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
         5: invokevirtual #293                // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
         8: astore        5
        10: aload_0
        11: aload         5
        13: invokevirtual #295                // Method scala/jdk/Accumulator.efficientStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        16: aconst_null
        17: astore        5
        19: checkcast     #306                // class scala/collection/IntStepper
        22: astore        4
        24: aload         4
        26: invokeinterface #310,  1          // InterfaceMethod scala/collection/IntStepper.hasStep:()Z
        31: ifeq          57
        34: aload_1
        35: aload         4
        37: invokeinterface #313,  1          // InterfaceMethod scala/collection/IntStepper.nextStep$mcI$sp:()I
        42: invokeinterface #379,  2          // InterfaceMethod scala/Function1.apply$mcZI$sp:(I)Z
        47: ifeq          24
        50: lload_2
        51: lconst_1
        52: ladd
        53: lstore_2
        54: goto          24
        57: lload_2
        58: lreturn
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 24
          locals = [ long, class scala/collection/IntStepper, null ]
        frame_type = 32 /* same */
      LineNumberTable:
        line 236: 0
        line 237: 2
        line 238: 24
        line 239: 34
        line 240: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      56     2     r   J
           24      34     4     s   Lscala/collection/IntStepper;
            0      59     0  this   Lscala/jdk/IntAccumulator;
            0      59     1     p   Lscala/Function1;
           10       6     5 stepper_shape   Lscala/collection/StepperShape;
    Signature: #404                         // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)J
    MethodParameters:
      Name                           Flags
      p                              final

  public int[] toArray();
    descriptor: ()[I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=10, args_size=1
         0: aload_0
         1: invokevirtual #216                // Method totalSize:()J
         4: ldc2_w        #406                // long 2147483647l
         7: lcmp
         8: ifle          48
        11: new           #409                // class java/lang/IllegalArgumentException
        14: dup
        15: new           #138                // class java/lang/StringBuilder
        18: dup
        19: ldc_w         #410                // int 44
        22: invokespecial #142                // Method java/lang/StringBuilder."<init>":(I)V
        25: ldc_w         #412                // String Too many elements accumulated for an array:
        28: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: aload_0
        32: invokevirtual #216                // Method totalSize:()J
        35: invokestatic  #417                // Method java/lang/Long.toString:(J)Ljava/lang/String;
        38: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        44: invokespecial #420                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        47: athrow
        48: aload_0
        49: invokevirtual #216                // Method totalSize:()J
        52: l2i
        53: newarray       int
        55: astore_1
        56: iconst_0
        57: istore_2
        58: iconst_0
        59: istore_3
        60: lconst_0
        61: lstore        4
        63: iload_3
        64: aload_0
        65: invokevirtual #179                // Method hIndex:()I
        68: if_icmpge     119
        71: aload_0
        72: invokevirtual #102                // Method history:()[[I
        75: iload_3
        76: aaload
        77: astore        6
        79: aload_0
        80: iload_3
        81: invokevirtual #181                // Method cumulative:(I)J
        84: lstore        7
        86: lload         7
        88: lload         4
        90: lsub
        91: l2i
        92: istore        9
        94: lload         7
        96: lstore        4
        98: aload         6
       100: iconst_0
       101: aload_1
       102: iload_2
       103: iload         9
       105: invokestatic  #231                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       108: iload_2
       109: iload         9
       111: iadd
       112: istore_2
       113: iinc          3, 1
       116: goto          63
       119: aload_0
       120: invokevirtual #183                // Method current:()[I
       123: iconst_0
       124: aload_1
       125: iload_2
       126: aload_0
       127: invokevirtual #176                // Method index:()I
       130: invokestatic  #231                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       133: aload_0
       134: invokevirtual #176                // Method index:()I
       137: pop
       138: aload_1
       139: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 48 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class scala/jdk/IntAccumulator, class "[I", int, int, long ]
          stack = []
        frame_type = 55 /* same */
      LineNumberTable:
        line 245: 0
        line 246: 48
        line 247: 56
        line 248: 58
        line 249: 60
        line 250: 63
        line 251: 71
        line 252: 79
        line 253: 86
        line 254: 94
        line 255: 98
        line 256: 108
        line 257: 113
        line 250: 116
        line 259: 119
        line 260: 133
        line 261: 138
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           79      37     6     x   [I
           86      30     7  cuml   J
           94      22     9     n   I
           56      83     1     a   [I
           58      81     2     j   I
           60      79     3     h   I
           63      76     4    pv   J
            0     140     0  this   Lscala/jdk/IntAccumulator;

  public scala.collection.immutable.List<java.lang.Object> toList();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=1
         0: getstatic     #429                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #433                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
         6: astore_1
         7: aload_0
         8: invokevirtual #176                // Method index:()I
        11: iconst_1
        12: isub
        13: istore_2
        14: iload_2
        15: iconst_0
        16: if_icmplt     41
        19: aload_0
        20: invokevirtual #183                // Method current:()[I
        23: iload_2
        24: iaload
        25: istore_3
        26: aload_1
        27: iload_3
        28: invokestatic  #317                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        31: invokevirtual #439                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
        34: astore_1
        35: iinc          2, -1
        38: goto          14
        41: aload_0
        42: invokevirtual #179                // Method hIndex:()I
        45: iconst_1
        46: isub
        47: istore        4
        49: iload         4
        51: iconst_0
        52: if_icmplt     126
        55: aload_0
        56: invokevirtual #102                // Method history:()[[I
        59: iload         4
        61: aaload
        62: astore        5
        64: aload_0
        65: iload         4
        67: invokevirtual #181                // Method cumulative:(I)J
        70: iload         4
        72: iconst_0
        73: if_icmpne     80
        76: lconst_0
        77: goto          88
        80: aload_0
        81: iload         4
        83: iconst_1
        84: isub
        85: invokevirtual #181                // Method cumulative:(I)J
        88: lsub
        89: l2i
        90: iconst_1
        91: isub
        92: istore_2
        93: iload_2
        94: iconst_0
        95: if_icmplt     120
        98: aload         5
       100: iload_2
       101: iaload
       102: istore        6
       104: aload_1
       105: iload         6
       107: invokestatic  #317                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       110: invokevirtual #439                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       113: astore_1
       114: iinc          2, -1
       117: goto          93
       120: iinc          4, -1
       123: goto          49
       126: aload_1
       127: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ class scala/collection/immutable/List, int ]
        frame_type = 26 /* same */
        frame_type = 253 /* append */
          offset_delta = 7
          locals = [ top, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class scala/jdk/IntAccumulator, class scala/collection/immutable/List, int, top, int, class "[I" ]
          stack = [ long ]
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class scala/jdk/IntAccumulator, class scala/collection/immutable/List, int, top, int, class "[I" ]
          stack = [ long, long ]
        frame_type = 4 /* same */
        frame_type = 26 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
      LineNumberTable:
        line 266: 0
        line 267: 7
        line 268: 14
        line 269: 19
        line 270: 35
        line 268: 38
        line 272: 41
        line 273: 49
        line 274: 55
        line 275: 64
        line 276: 93
        line 277: 98
        line 278: 114
        line 276: 117
        line 280: 120
        line 273: 123
        line 282: 126
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      59     5     a   [I
            7     120     1   ans   Lscala/collection/immutable/List;
           14     113     2     i   I
           49      78     4     h   I
            0     128     0  this   Lscala/jdk/IntAccumulator;
    Signature: #424                         // ()Lscala/collection/immutable/List<Ljava/lang/Object;>;

  public <C1 extends java.lang.Object> C1 to(scala.collection.Factory<java.lang.Object, C1>);
    descriptor: (Lscala/collection/Factory;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #216                // Method totalSize:()J
         4: ldc2_w        #406                // long 2147483647l
         7: lcmp
         8: ifle          48
        11: new           #409                // class java/lang/IllegalArgumentException
        14: dup
        15: new           #138                // class java/lang/StringBuilder
        18: dup
        19: ldc_w         #445                // int 54
        22: invokespecial #142                // Method java/lang/StringBuilder."<init>":(I)V
        25: ldc_w         #447                // String Too many elements accumulated for a Scala collection:
        28: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: aload_0
        32: invokevirtual #216                // Method totalSize:()J
        35: invokestatic  #417                // Method java/lang/Long.toString:(J)Ljava/lang/String;
        38: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        44: invokespecial #420                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        47: athrow
        48: aload_1
        49: aload_0
        50: invokevirtual #448                // Method iterator:()Lscala/collection/Iterator;
        53: invokeinterface #453,  2          // InterfaceMethod scala/collection/Factory.fromSpecific:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        58: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 48 /* same */
      LineNumberTable:
        line 291: 0
        line 292: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lscala/jdk/IntAccumulator;
            0      59     1 factory   Lscala/collection/Factory;
    Signature: #443                         // <C1:Ljava/lang/Object;>(Lscala/collection/Factory<Ljava/lang/Object;TC1;>;)TC1;
    MethodParameters:
      Name                           Flags
      factory                        final

  public scala.jdk.IntAccumulator fromSpecific(scala.collection.IterableOnce<java.lang.Object>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: aload_1
         4: invokevirtual #79                 // Method scala/jdk/IntAccumulator$.fromSpecific:(Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
         7: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/jdk/IntAccumulator;
            0       8     1  coll   Lscala/collection/IterableOnce;
    Signature: #455                         // (Lscala/collection/IterableOnce<Ljava/lang/Object;>;)Lscala/jdk/IntAccumulator;
    MethodParameters:
      Name                           Flags
      coll                           final

  public scala.jdk.IntAccumulator newSpecificBuilder();
    descriptor: ()Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: pop
         4: new           #2                  // class scala/jdk/IntAccumulator
         7: dup
         8: invokespecial #42                 // Method "<init>":()V
        11: areturn
      LineNumberTable:
        line 296: 0
        line 340: 4
        line 296: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/jdk/IntAccumulator;

  public scala.collection.SeqFactory<scala.jdk.AnyAccumulator> iterableFactory();
    descriptor: ()Lscala/collection/SeqFactory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #465                // Field scala/jdk/AnyAccumulator$.MODULE$:Lscala/jdk/AnyAccumulator$;
         3: areturn
      LineNumberTable:
        line 297: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/jdk/IntAccumulator;
    Signature: #460                         // ()Lscala/collection/SeqFactory<Lscala/jdk/AnyAccumulator;>;

  public scala.jdk.IntAccumulator empty();
    descriptor: ()Lscala/jdk/IntAccumulator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         3: pop
         4: new           #2                  // class scala/jdk/IntAccumulator
         7: dup
         8: invokespecial #42                 // Method "<init>":()V
        11: areturn
      LineNumberTable:
        line 299: 0
        line 338: 4
        line 299: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/jdk/IntAccumulator;

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #25                 // class scala/jdk/IntAccumulator$SerializationProxy
         3: dup
         4: aload_0
         5: invokespecial #469                // Method scala/jdk/IntAccumulator$SerializationProxy."<init>":(Lscala/jdk/IntAccumulator;)V
         8: areturn
      LineNumberTable:
        line 301: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/jdk/IntAccumulator;

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: i2l
         3: invokevirtual #280                // Method apply:(J)I
         6: ireturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/jdk/IntAccumulator;
            0       7     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public java.lang.Object empty();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #471                // Method empty:()Lscala/jdk/IntAccumulator;
         4: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/IntAccumulator;

  public scala.collection.IterableOps empty();
    descriptor: ()Lscala/collection/IterableOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #471                // Method empty:()Lscala/jdk/IntAccumulator;
         4: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/IntAccumulator;

  public scala.collection.IterableFactory iterableFactory();
    descriptor: ()Lscala/collection/IterableFactory;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #475                // Method iterableFactory:()Lscala/collection/SeqFactory;
         4: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/IntAccumulator;

  public scala.collection.mutable.Builder newSpecificBuilder();
    descriptor: ()Lscala/collection/mutable/Builder;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #478                // Method newSpecificBuilder:()Lscala/jdk/IntAccumulator;
         4: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/IntAccumulator;

  public java.lang.Object fromSpecific(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #479                // Method fromSpecific:(Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
         5: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/IntAccumulator;
            0       6     1  coll   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      coll                           final

  public scala.collection.IterableOps fromSpecific(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #479                // Method fromSpecific:(Lscala/collection/IterableOnce;)Lscala/jdk/IntAccumulator;
         5: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/IntAccumulator;
            0       6     1  coll   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      coll                           final

  public java.lang.Object filterNot(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #483                // Method filterNot:(Lscala/Function1;)Lscala/jdk/IntAccumulator;
         5: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/IntAccumulator;
            0       6     1  pred   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      pred                           final

  public java.lang.Object filter(scala.Function1);
    descriptor: (Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #485                // Method filter:(Lscala/Function1;)Lscala/jdk/IntAccumulator;
         5: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/IntAccumulator;
            0       6     1  pred   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      pred                           final

  public void update(int, java.lang.Object);
    descriptor: (ILjava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokestatic  #492                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         6: invokevirtual #494                // Method update:(II)V
         9: return
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/jdk/IntAccumulator;
            0      10     1   idx   I
            0      10     2  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      idx                            final
      elem                           final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #492                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokevirtual #498                // Method apply:(I)I
         8: invokestatic  #501                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/jdk/IntAccumulator;
            0      12     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  public java.lang.Object apply(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #498                // Method apply:(I)I
         5: invokestatic  #501                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         8: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/jdk/IntAccumulator;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #504                // Method result:()Lscala/jdk/IntAccumulator;
         4: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/IntAccumulator;

  public scala.collection.mutable.Growable addOne(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #492                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokevirtual #333                // Method addOne:(I)Lscala/jdk/IntAccumulator;
         8: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/jdk/IntAccumulator;
            0       9     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static final java.lang.String $anonfun$efficientStepper$1(scala.collection.StepperShape);
    descriptor: (Lscala/collection/StepperShape;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #138                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #507                // int 25
         7: invokespecial #142                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #509                // String unexpected StepperShape:
        13: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        20: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        23: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 shape$1   Lscala/collection/StepperShape;
    MethodParameters:
      Name                           Flags
      shape$1                        final

  public static final scala.jdk.IntAccumulator $anonfun$collect$1(scala.jdk.IntAccumulator, int);
    descriptor: (Lscala/jdk/IntAccumulator;I)Lscala/jdk/IntAccumulator;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #333                // Method addOne:(I)Lscala/jdk/IntAccumulator;
         5: areturn
      LineNumberTable:
        line 194: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   b$1   Lscala/jdk/IntAccumulator;
            0       6     1     a   I
    MethodParameters:
      Name                           Flags
      b$1                            final
      a                              final

  public scala.jdk.IntAccumulator();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #513                // Method scala/jdk/Accumulator$mcI$sp."<init>":()V
         4: aload_0
         5: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
         8: invokevirtual #267                // Method scala/jdk/IntAccumulator$.scala$jdk$IntAccumulator$$emptyIntArray:()[I
        11: putfield      #87                 // Field current:[I
        14: aload_0
        15: getstatic     #38                 // Field scala/jdk/IntAccumulator$.MODULE$:Lscala/jdk/IntAccumulator$;
        18: invokevirtual #270                // Method scala/jdk/IntAccumulator$.scala$jdk$IntAccumulator$$emptyIntArrayArray:()[[I
        21: putfield      #95                 // Field history:[[I
        24: return
      LineNumberTable:
        line 26: 0
        line 29: 4
        line 30: 14
        line 26: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/jdk/IntAccumulator;

  public static final scala.jdk.IntAccumulator $anonfun$collect$1$adapted(scala.jdk.IntAccumulator, java.lang.Object);
    descriptor: (Lscala/jdk/IntAccumulator;Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #492                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #515                // Method $anonfun$collect$1:(Lscala/jdk/IntAccumulator;I)Lscala/jdk/IntAccumulator;
         8: areturn
      LineNumberTable:
        line 194: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   b$1   Lscala/jdk/IntAccumulator;
            0       9     1     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      b$1                            final
      a                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #527,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #18;                       // class scala/collection/AnyStepper$$anon$4
  public static #23= #20 of #22;          // Fill=class scala/collection/View$Fill of class scala/collection/View
  public static #26= #25 of #2;           // SerializationProxy=class scala/jdk/IntAccumulator$SerializationProxy of class scala/jdk/IntAccumulator
Signature: #3                           // Lscala/jdk/Accumulator$mcI$sp<Lscala/jdk/AnyAccumulator;Lscala/jdk/IntAccumulator;>;Ljava/io/Serializable;
SourceFile: "IntAccumulator.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\reb\u0001\u0002#F\u0005)CQa\u001b\u0001\u0005\u00021D\u0001\"\u001c\u0001A\u0002\u0013\u0005QI\u001c\u0005\te\u0002\u0001\r\u0011\"\u0001Fg\"1\u0011\u0010\u0001Q!\n=D\u0001B\u001f\u0001A\u0002\u0013\u0005Qi\u001f\u0005\t{\u0002\u0001\r\u0011\"\u0001F}\"9\u0011\u0011\u0001\u0001!B\u0013a\b\u0002CA\u0002\u0001\u0011\u0005Q)!\u0002\t\u0011\u0005E\u0001\u0001)C)\u0003\'Aq!!\n\u0001\t\u0003\t9\u0003C\u0004\u0002v\u0001!I!a\u001e\t\u000f\u0005e\u0004\u0001\"\u0003\u0002x!9\u00111\u0010\u0001\u0005\u0002\u0005u\u0004BBAC\u0001\u0011\u0005C\u000eC\u0004\u0002\b\u0002!\t!!#\t\u000f\u0005=\u0005\u0001\"\u0011\u0002x!9\u0011\u0011\u0013\u0001\u0005\u0002\u0005M\u0005bBAI\u0001\u0011\u0005\u0011\u0011\u0014\u0005\b\u0003;\u0003A\u0011AAP\u0011\u001d\ti\n\u0001C\u0001\u0003SCq!a,\u0001\t\u0003\t\t\fC\u0004\u0002:\u0002!\t%a/\t\u000f\u0005=\u0007\u0001\"\u0001\u0002R\"9\u0011q\u001b\u0001\u0005\u0002\u0005e\u0007bBAs\u0001\u0011\u0005\u0011q\u001d\u0005\b\u0003g\u0004A\u0011BA{\u0011\u001d\u00119\u0001\u0001C!\u0005\u0013AqA!\u0004\u0001\t\u0003\u0012y\u0001C\u0004\u0003\u0014\u0001!\tE!\u0006\t\u000f\tm\u0001\u0001\"\u0011\u0003\u001e!9!\u0011\u0005\u0001\u0005B\t\r\u0002b\u0002B\u0014\u0001\u0011\u0005!\u0011\u0006\u0005\u0007\u0005[\u0001A\u0011\u00018\t\u000f\t=\u0002\u0001\"\u0011\u00032!9!\u0011\b\u0001\u0005B\tm\u0002b\u0002B(\u0001\u0011E#\u0011\u000b\u0005\b\u0005/\u0002A\u0011\u000bB-\u0011\u001d\u0011Y\u0006\u0001C!\u0005;BqA!\u001a\u0001\t\u0003\u0012I\u0006C\u0004\u0003h\u0001!IA!\u001b\b\u000f\tET\t#\u0001\u0003t\u00191A)\u0012E\u0001\u0005kBaa\u001b\u0016\u0005\u0002\t-\u0005\u0002\u0003BGU\t\u0007I\u0011\u00028\t\u000f\t=%\u0006)A\u0005_\"A!\u0011\u0013\u0016C\u0002\u0013%1\u0010C\u0004\u0003\u0014*\u0002\u000b\u0011\u0002?\t\u000f\tU%\u0006b\u0001\u0003\u0018\"9!Q\u0016\u0016\u0005\u0002\t=\u0006b\u0002BaU\u0011\u0005!1\u0019\u0005\b\u0005\u0017TC\u0011\u0001Bg\u0011\u001d\u0011)N\u000bC\u0001\u0005/DqAa7+\t\u0013\u0011i\u000eC\u0004\u0003P)\"\tE!9\t\u000f\t\u0015$\u0006\"\u0011\u0003Z!9!q\u001d\u0016\u0005B\tecA\u0002BuU\u0001\u0011Y\u000f\u0003\u0006\u0003pf\u0012)\u0019!C\u0005\u00053B\u0011B!=:\u0005\u0003\u0005\u000b\u0011\u0002,\t\r-LD\u0011\u0001B~\u0011-\t))\u000fa\u0001\u0002\u0004%IA!\u0017\t\u0017\r%\u0011\b1AA\u0002\u0013%11\u0002\u0005\u000b\u0007\u001fI\u0004\u0019!A!B\u00131\u0006bBB\ns\u0011%1Q\u0003\u0005\b\u0007CID\u0011BB\u0012\u0011\u001d\u0019y#\u000fC\u0005\u0005SB\u0011Ba\u001a+\u0003\u0003%Ia!\r\u0003\u001d%sG/Q2dk6,H.\u0019;pe*\u0011aiR\u0001\u0004U\u0012\\\'\"\u0001%\u0002\u000bM\u001c\u0017\r\\1\u0004\u0001M!\u0001aS,`!\u0015aUjT*W\u001b\u0005)\u0015B\u0001(F\u0005-\t5mY;nk2\fGo\u001c:\u0011\u0005A\u000bV\"A$\n\u0005I;%aA%oiB\u0011A\nV\u0005\u0003+\u0016\u0013a\"\u00118z\u0003\u000e\u001cW/\\;mCR|\'\u000f\u0005\u0002M\u0001A)\u0001,X(T-6\t\u0011L\u0003\u0002[7\u00069Q.\u001e;bE2,\'B\u0001/H\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003=f\u0013aaU3r\u001fB\u001c\bC\u00011i\u001d\t\tgM\u0004\u0002cK6\t1M\u0003\u0002e\u0013\u00061AH]8pizJ\u0011\u0001S\u0005\u0003O\u001e\u000bq\u0001]1dW\u0006<W-\u0003\u0002jU\na1+\u001a:jC2L\'0\u00192mK*\u0011qmR\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003Y\u000bqaY;se\u0016tG/F\u0001p!\r\u0001\u0006oT\u0005\u0003c\u001e\u0013Q!\u0011:sCf\f1bY;se\u0016tGo\u0018\u0013fcR\u0011Ao\u001e\t\u0003!VL!A^$\u0003\tUs\u0017\u000e\u001e\u0005\bq\u000e\t\t\u00111\u0001p\u0003\rAH%M\u0001\tGV\u0014(/\u001a8uA\u00059\u0001.[:u_JLX#\u0001?\u0011\u0007A\u0003x.A\u0006iSN$xN]=`I\u0015\fHC\u0001;\u0000\u0011\u001dAh!!AA\u0002q\f\u0001\u0002[5ti>\u0014\u0018\u0010I\u0001\u000bGVlW\u000f\\1uSZ,G\u0003BA\u0004\u0003\u001b\u00012\u0001UA\u0005\u0013\r\tYa\u0012\u0002\u0005\u0019>tw\r\u0003\u0004\u0002\u0010!\u0001\raT\u0001\u0002S\u0006I1\r\\1tg:\u000bW.Z\u000b\u0003\u0003+\u0001B!a\u0006\u0002 9!\u0011\u0011DA\u000e!\t\u0011w)C\u0002\u0002\u001e\u001d\u000ba\u0001\u0015:fI\u00164\u0017\u0002BA\u0011\u0003G\u0011aa\u0015;sS:<\'bAA\u000f\u000f\u0006\u0001RM\u001a4jG&,g\u000e^*uKB\u0004XM]\u000b\u0005\u0003S\t)\u0004\u0006\u0003\u0002,\u0005-$CBA\u0017\u0003c\tIF\u0002\u0004\u00020\u0001\u0001\u00111\u0006\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0005\u0003g\t)\u0004\u0004\u0001\u0005\u000f\u0005]\"B1\u0001\u0002:\t\t1+\u0005\u0003\u0002<\u0005\u0005\u0003c\u0001)\u0002>%\u0019\u0011qH$\u0003\u000f9{G\u000f[5oOB\"\u00111IA\'!\u0019\t)%a\u0012\u0002L5\t1,C\u0002\u0002Jm\u0013qa\u0015;faB,\'\u000f\u0005\u0003\u00024\u00055C\u0001DA(\u0003k\t\t\u0011!A\u0003\u0002\u0005E#aA0%cE!\u00111HA*!\r\u0001\u0016QK\u0005\u0004\u0003/:%aA!osB!\u00111LA3\u001d\u0011\ti&!\u0019\u000f\u0007\u0005\fy&\u0003\u0002]\u000f&\u0019\u00111M.\u0002\u000fM#X\r\u001d9fe&!\u0011qMA5\u00059)eMZ5dS\u0016tGo\u00159mSRT1!a\u0019\\\u0011\u001d\tiG\u0003a\u0002\u0003_\nQa\u001d5ba\u0016\u0004r!!\u0012\u0002r=\u000b\t$C\u0002\u0002tm\u0013Ab\u0015;faB,\'o\u00155ba\u0016\fa!\u001a=qC:$G#\u0001;\u0002\u000f!,\u0005\u0010]1oI\u00061\u0011\r\u001a3P]\u0016$B!a \u0002\u00026\t\u0001\u0001\u0003\u0004\u0002\u00046\u0001\raT\u0001\u0002C\u00061!/Z:vYR\fQ\u0001\u001a:bS:$2\u0001^AF\u0011\u0019\tii\u0004a\u0001-\u0006!A\u000f[1u\u0003\u0015\u0019G.Z1s\u0003\u0015\t\u0007\u000f\u001d7z)\ry\u0015Q\u0013\u0005\b\u0003/\u000b\u0002\u0019AA\u0004\u0003\tI\u0007\u0010F\u0002P\u00037Ca!a\u0004\u0013\u0001\u0004y\u0015AB;qI\u0006$X\rF\u0003u\u0003C\u000b)\u000bC\u0004\u0002$N\u0001\r!a\u0002\u0002\u0007%$\u0007\u0010\u0003\u0004\u0002(N\u0001\raT\u0001\u0005K2,W\u000eF\u0003u\u0003W\u000bi\u000b\u0003\u0004\u0002$R\u0001\ra\u0014\u0005\u0007\u0003O#\u0002\u0019A(\u0002\u0011%$XM]1u_J,\"!a-\u0011\t\u0001\f)lT\u0005\u0004\u0003oS\'\u0001C%uKJ\fGo\u001c:\u0002\u000f\u0019|\'/Z1dQV!\u0011QXAf)\r!\u0018q\u0018\u0005\b\u0003\u00034\u0002\u0019AAb\u0003\u00051\u0007C\u0002)\u0002F>\u000bI-C\u0002\u0002H\u001e\u0013\u0011BR;oGRLwN\\\u0019\u0011\t\u0005M\u00121\u001a\u0003\b\u0003\u001b4\"\u0019AA)\u0005\u0005)\u0016aA7baR\u0019a+a5\t\u000f\u0005\u0005w\u00031\u0001\u0002VB)\u0001+!2P\u001f\u00069a\r\\1u\u001b\u0006\u0004Hc\u0001,\u0002\\\"9\u0011\u0011\u0019\rA\u0002\u0005u\u0007C\u0002)\u0002F>\u000by\u000e\u0005\u0003a\u0003C|\u0015bAArU\na\u0011\n^3sC\ndWm\u00148dK\u000691m\u001c7mK\u000e$Hc\u0001,\u0002j\"9\u00111^\rA\u0002\u00055\u0018A\u00019g!\u0015\u0001\u0016q^(P\u0013\r\t\tp\u0012\u0002\u0010!\u0006\u0014H/[1m\rVt7\r^5p]\u0006ia-\u001b7uKJ\f5mY%na2$RAVA|\u0005\u0007Aq!!?\u001b\u0001\u0004\tY0\u0001\u0003qe\u0016$\u0007C\u0002)\u0002F>\u000bi\u0010E\u0002Q\u0003\u007fL1A!\u0001H\u0005\u001d\u0011un\u001c7fC:DqA!\u0002\u001b\u0001\u0004\ti0A\u0002o_R\faAZ5mi\u0016\u0014Hc\u0001,\u0003\f!9\u0011\u0011`\u000eA\u0002\u0005m\u0018!\u00034jYR,\'OT8u)\r1&\u0011\u0003\u0005\b\u0003sd\u0002\u0019AA~\u0003\u00191wN]1mYR!\u0011Q B\f\u0011\u001d\u0011I\"\ba\u0001\u0003w\f\u0011\u0001]\u0001\u0007KbL7\u000f^:\u0015\t\u0005u(q\u0004\u0005\b\u00053q\u0002\u0019AA~\u0003\u0015\u0019w.\u001e8u)\ry%Q\u0005\u0005\b\u00053y\u0002\u0019AA~\u0003%\u0019w.\u001e8u\u0019>tw\r\u0006\u0003\u0002\b\t-\u0002b\u0002B\rA\u0001\u0007\u00111`\u0001\bi>\f%O]1z\u0003\u0019!x\u000eT5tiV\u0011!1\u0007\t\u0005A\nUr*C\u0002\u00038)\u0014A\u0001T5ti\u0006\u0011Ao\\\u000b\u0005\u0005{\u0011\t\u0005\u0006\u0003\u0003@\t\u0015\u0003\u0003BA\u001a\u0005\u0003\"qAa\u0011$\u0005\u0004\t\tF\u0001\u0002Dc!9!qI\u0012A\u0002\t%\u0013a\u00024bGR|\'/\u001f\t\b\u0003\u000b\u0012Ye\u0014B \u0013\r\u0011ie\u0017\u0002\b\r\u0006\u001cGo\u001c:z\u000311\'o\\7Ta\u0016\u001c\u0017NZ5d)\r1&1\u000b\u0005\b\u0005+\"\u0003\u0019AAp\u0003\u0011\u0019w\u000e\u001c7\u0002%9,wo\u00159fG&4\u0017n\u0019\"vS2$WM]\u000b\u0002-\u0006y\u0011\u000e^3sC\ndWMR1di>\u0014\u00180\u0006\u0002\u0003`A)\u0011Q\tB1\'&\u0019!1M.\u0003\u0015M+\u0017OR1di>\u0014\u00180A\u0003f[B$\u00180\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003lA\u0019\u0001K!\u001c\n\u0007\t=tI\u0001\u0004B]f\u0014VMZ\u0001\u000f\u0013:$\u0018iY2v[Vd\u0017\r^8s!\ta%fE\u0004+\u0005W\u00129H! \u0011\r\u0005\u0015#\u0011P(W\u0013\r\u0011Yh\u0017\u0002\u0018\'B,7-\u001b4jG&#XM]1cY\u00164\u0015m\u0019;pef\u0004BAa \u0003\n6\u0011!\u0011\u0011\u0006\u0005\u0005\u0007\u0013))\u0001\u0002j_*\u0011!qQ\u0001\u0005U\u00064\u0018-C\u0002j\u0005\u0003#\"Aa\u001d\u0002\u001b\u0015l\u0007\u000f^=J]R\f%O]1z\u00039)W\u000e\u001d;z\u0013:$\u0018I\u001d:bs\u0002\n!#Z7qifLe\u000e^!se\u0006L\u0018I\u001d:bs\u0006\u0019R-\u001c9us&sG/\u0011:sCf\f%O]1zA\u0005ABo\u001c&bm\u0006Le\u000e^3hKJ\f5mY;nk2\fGo\u001c:\u0015\t\te%q\u0015\t\b\u0003\u000b\u0012IHa\'W!\u0011\u0011iJa)\u000e\u0005\t}%\u0002\u0002BQ\u0005\u000b\u000bA\u0001\\1oO&!!Q\u0015BP\u0005\u001dIe\u000e^3hKJDqA!+1\u0001\u0004\u0011Y+\u0001\u0002jC:\u0011A*K\u0001\tgV\u0004\b\u000f\\5feV\u0011!\u0011\u0017\t\u0006\u0005g\u0013iLV\u0007\u0003\u0005kSAAa.\u0003:\u0006Aa-\u001e8di&|gN\u0003\u0003\u0003<\n\u0015\u0015\u0001B;uS2LAAa0\u00036\nA1+\u001e9qY&,\'/A\u0003bI\u0012,\'/\u0006\u0002\u0003FB)!1\u0017Bd-&!!\u0011\u001aB[\u00059y%M[%oi\u000e{gn];nKJ\f!BY8yK\u0012\fE\rZ3s+\t\u0011y\r\u0005\u0004\u00034\nEgkT\u0005\u0005\u0005\'\u0014)L\u0001\u0006CS\u000e{gn];nKJ\fa!\\3sO\u0016\u0014XC\u0001Bm!\u0019\u0011\u0019L!5W-\u0006IaM]8n\u0003J\u0014\u0018-\u001f\u000b\u0004-\n}\u0007BBABk\u0001\u0007q\u000eF\u0002W\u0005GDqA!:7\u0001\u0004\ty.\u0001\u0002ji\u0006Qa.Z<Ck&dG-\u001a:\u0003%M+\'/[1mSj\fG/[8o!J|\u00070_\u000b\u0005\u0005[\u001c\u0019a\u0005\u0003:\u0005Wz\u0016aA1dG\u0006!\u0011mY2!Q\rY$Q\u001f\t\u0004!\n]\u0018b\u0001B}\u000f\nIAO]1og&,g\u000e\u001e\u000b\u0005\u0005{\u001c9\u0001E\u0003\u0003\u0000f\u001a\t!D\u0001+!\u0011\t\u0019da\u0001\u0005\u000f\r\u0015\u0011H1\u0001\u0002R\t\t\u0011\t\u0003\u0004\u0003pr\u0002\rAV\u0001\u000be\u0016\u001cX\u000f\u001c;`I\u0015\fHc\u0001;\u0004\u000e!9\u0001PPA\u0001\u0002\u00041\u0016a\u0002:fgVdG\u000f\t\u0015\u0004\u007f\tU\u0018aC<sSR,wJ\u00196fGR$2\u0001^B\f\u0011\u001d\u0019I\u0002\u0011a\u0001\u00077\t1a\\;u!\u0011\u0011yh!\b\n\t\r}!\u0011\u0011\u0002\u0013\u001f\nTWm\u0019;PkR\u0004X\u000f^*ue\u0016\fW.\u0001\u0006sK\u0006$wJ\u00196fGR$2\u0001^B\u0013\u0011\u001d\u00199#\u0011a\u0001\u0007S\t!!\u001b8\u0011\t\t}41F\u0005\u0005\u0007[\u0011\tIA\tPE*,7\r^%oaV$8\u000b\u001e:fC6\f1B]3bIJ+7o\u001c7wKR\u001111\u0007\t\u0005\u0005;\u001b)$\u0003\u0003\u00048\t}%AB(cU\u0016\u001cG\u000f"
    )
BootstrapMethods:
  0: #366 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #350 (Ljava/lang/Object;)Ljava/lang/Object;
      #355 REF_invokeStatic scala/jdk/IntAccumulator.$anonfun$collect$1$adapted:(Lscala/jdk/IntAccumulator;Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
      #357 (Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
      #358 5
      #359 1
      #357 (Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  1: #524 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #355 REF_invokeStatic scala/jdk/IntAccumulator.$anonfun$collect$1$adapted:(Lscala/jdk/IntAccumulator;Ljava/lang/Object;)Lscala/jdk/IntAccumulator;
  ScalaInlineInfo: length = 0x117 (unknown attribute)
   01 01 00 37 01 FE 01 FF 01 01 5F 01 60 01 00 95
   00 96 01 00 27 00 28 01 00 D2 00 D3 01 00 D2 01
   F9 01 01 0F 00 F0 01 01 0F 01 F6 01 01 0F 01 10
   01 01 0F 01 40 01 01 49 00 F0 01 00 6A 00 6B 01
   00 FC 00 28 01 01 5A 01 5B 01 01 8E 01 8F 01 01
   92 01 93 01 00 62 00 63 01 00 1B 00 55 01 00 5A
   00 5B 01 00 E0 00 74 01 00 6E 00 6F 01 01 D2 01
   D4 01 01 D2 01 D8 01 01 D2 00 20 01 01 8D 01 8A
   01 00 AD 00 28 01 01 82 01 E1 01 01 82 01 47 01
   01 7D 01 7E 01 01 88 01 E1 01 01 88 01 47 01 01
   4F 01 47 01 01 89 01 8A 01 01 2D 01 2E 01 00 4C
   01 C3 01 00 4C 01 E0 01 00 4C 00 4D 01 00 B8 00
   28 01 00 1D 00 5D 01 00 60 00 61 01 01 CA 01 D9
   01 01 CA 01 CB 01 01 1F 01 20 01 01 46 01 47 01
   01 C9 01 DC 01 01 C9 00 20 01 00 DF 01 D4 01 00
   DF 00 20 01 01 B9 01 BA 01 01 95 00 55 01 01 A6
   01 A7 01 01 19 01 1C 01 01 19 01 E6 01 01 19 01
   1A 01 01 D3 01 D4 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
