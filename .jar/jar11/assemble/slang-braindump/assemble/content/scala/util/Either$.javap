Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/util/Either$.class
  Last modified May 29, 2022; size 1440 bytes
  SHA-256 checksum fab1d3f02901a1a6a5625688a395a40eb980bc7100d9502d858290060a1911e3
  Compiled from "Either.scala"
public final class scala.util.Either$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/util/Either$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 5, attributes: 3
Constant pool:
   #1 = Utf8               scala/util/Either$
   #2 = Class              #1             // scala/util/Either$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               Either.scala
   #8 = Utf8               MODULE$
   #9 = Utf8               Lscala/util/Either$;
  #10 = Utf8               <clinit>
  #11 = Utf8               ()V
  #12 = Utf8               <init>
  #13 = NameAndType        #12:#11        // "<init>":()V
  #14 = Methodref          #2.#13         // scala/util/Either$."<init>":()V
  #15 = NameAndType        #8:#9          // MODULE$:Lscala/util/Either$;
  #16 = Fieldref           #2.#15         // scala/util/Either$.MODULE$:Lscala/util/Either$;
  #17 = Utf8               cond
  #18 = Utf8               (ZLscala/Function0;Lscala/Function0;)Lscala/util/Either;
  #19 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(ZLscala/Function0<TB;>;Lscala/Function0<TA;>;)Lscala/util/Either<TA;TB;>;
  #20 = Utf8               test
  #21 = Utf8               right
  #22 = Utf8               left
  #23 = Utf8               scala/util/Right
  #24 = Class              #23            // scala/util/Right
  #25 = Utf8               scala/Function0
  #26 = Class              #25            // scala/Function0
  #27 = Utf8               apply
  #28 = Utf8               ()Ljava/lang/Object;
  #29 = NameAndType        #27:#28        // apply:()Ljava/lang/Object;
  #30 = InterfaceMethodref #26.#29        // scala/Function0.apply:()Ljava/lang/Object;
  #31 = Utf8               (Ljava/lang/Object;)V
  #32 = NameAndType        #12:#31        // "<init>":(Ljava/lang/Object;)V
  #33 = Methodref          #24.#32        // scala/util/Right."<init>":(Ljava/lang/Object;)V
  #34 = Utf8               scala/util/Left
  #35 = Class              #34            // scala/util/Left
  #36 = Methodref          #35.#32        // scala/util/Left."<init>":(Ljava/lang/Object;)V
  #37 = Utf8               this
  #38 = Utf8               Z
  #39 = Utf8               Lscala/Function0;
  #40 = Utf8               MergeableEither
  #41 = Utf8               (Lscala/util/Either;)Lscala/util/Either;
  #42 = Utf8               <A:Ljava/lang/Object;>(Lscala/util/Either<TA;TA;>;)Lscala/util/Either<TA;TA;>;
  #43 = Utf8               x
  #44 = Utf8               Lscala/util/Either;
  #45 = Utf8               writeReplace
  #46 = Utf8               scala/runtime/ModuleSerializationProxy
  #47 = Class              #46            // scala/runtime/ModuleSerializationProxy
  #48 = Utf8               (Ljava/lang/Class;)V
  #49 = NameAndType        #12:#48        // "<init>":(Ljava/lang/Class;)V
  #50 = Methodref          #47.#49        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #51 = Methodref          #4.#13         // java/lang/Object."<init>":()V
  #52 = Utf8               Code
  #53 = Utf8               LineNumberTable
  #54 = Utf8               StackMapTable
  #55 = Utf8               LocalVariableTable
  #56 = Utf8               Signature
  #57 = Utf8               MethodParameters
  #58 = Utf8               SourceFile
  #59 = Utf8               ScalaInlineInfo
  #60 = Utf8               Scala
{
  public static final scala.util.Either$ MODULE$;
    descriptor: Lscala/util/Either$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/util/Either$
         3: dup
         4: invokespecial #14                 // Method "<init>":()V
         7: putstatic     #16                 // Field MODULE$:Lscala/util/Either$;
        10: return
      LineNumberTable:
        line 486: 0

  public <A extends java.lang.Object, B extends java.lang.Object> scala.util.Either<A, B> cond(boolean, scala.Function0<B>, scala.Function0<A>);
    descriptor: (ZLscala/Function0;Lscala/Function0;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: iload_1
         1: ifeq          18
         4: new           #24                 // class scala/util/Right
         7: dup
         8: aload_2
         9: invokeinterface #30,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        14: invokespecial #33                 // Method scala/util/Right."<init>":(Ljava/lang/Object;)V
        17: areturn
        18: new           #35                 // class scala/util/Left
        21: dup
        22: aload_3
        23: invokeinterface #30,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        28: invokespecial #36                 // Method scala/util/Left."<init>":(Ljava/lang/Object;)V
        31: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
      LineNumberTable:
        line 500: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/util/Either$;
            0      32     1  test   Z
            0      32     2 right   Lscala/Function0;
            0      32     3  left   Lscala/Function0;
    Signature: #19                          // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(ZLscala/Function0<TB;>;Lscala/Function0<TA;>;)Lscala/util/Either<TA;TB;>;
    MethodParameters:
      Name                           Flags
      test                           final
      right                          final
      left                           final

  public <A extends java.lang.Object> scala.util.Either<A, A> MergeableEither(scala.util.Either<A, A>);
    descriptor: (Lscala/util/Either;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 512: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/util/Either$;
            0       2     1     x   Lscala/util/Either;
    Signature: #42                          // <A:Ljava/lang/Object;>(Lscala/util/Either<TA;TA;>;)Lscala/util/Either<TA;TA;>;
    MethodParameters:
      Name                           Flags
      x                              final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #47                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class scala/util/Either$
         6: invokespecial #50                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 486: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/Either$;

  private scala.util.Either$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #51                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 486: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Either$;
}
SourceFile: "Either.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 0C 00 0B 01 00 28 00 29 01 00 11
   00 12 01 00 2D 00 1C 01
  Scala: length = 0x0 (unknown attribute)

