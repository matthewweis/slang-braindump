Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/IntChampStepper.class
  Last modified May 29, 2022; size 7199 bytes
  SHA-256 checksum c65a416d342bcd12406eeb0e3853867cdd4be4733d2046d5b8e4112ad279f408
  Compiled from "ChampStepper.scala"
public final class scala.collection.convert.impl.IntChampStepper<T extends scala.collection.immutable.Node<T>> extends scala.collection.convert.impl.ChampStepperBase<java.lang.Object, T, scala.collection.IntStepper, scala.collection.convert.impl.IntChampStepper<T>> implements scala.collection.IntStepper
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/IntChampStepper
  super_class: #5                         // scala/collection/convert/impl/ChampStepperBase
  interfaces: 1, fields: 1, methods: 26, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/IntChampStepper
    #2 = Class              #1            // scala/collection/convert/impl/IntChampStepper
    #3 = Utf8               <T:Lscala/collection/immutable/Node<TT;>;>Lscala/collection/convert/impl/ChampStepperBase<Ljava/lang/Object;TT;Lscala/collection/IntStepper;Lscala/collection/convert/impl/IntChampStepper<TT;>;>;Lscala/collection/IntStepper;
    #4 = Utf8               scala/collection/convert/impl/ChampStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/ChampStepperBase
    #6 = Utf8               scala/collection/IntStepper
    #7 = Class              #6            // scala/collection/IntStepper
    #8 = Utf8               ChampStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005Y3Qa\u0003\u0007\u0003!QA\u0001B\r\u0001\u0003\u0002\u0003\u0006IA\u0007\u0005\tg\u0001\u0011)\u0019!C\ti!A\u0001\b\u0001B\u0001B\u0003%Q\u0007C\u0003:\u0001\u0011\u0005!\bC\u0003>\u0001\u0011\u0005a\bC\u0003@\u0001\u0011\u0005\u0001i\u0002\u0004B\u0019!\u0005\u0001C\u0011\u0004\u0007\u00171A\t\u0001E\"\t\u000beBA\u0011A$\t\u000b!CA\u0011A%\u0003\u001f%sGo\u00115b[B\u001cF/\u001a9qKJT!!\u0004\b\u0002\t%l\u0007\u000f\u001c\u0006\u0003\u001fA\tqaY8om\u0016\u0014HO\u0003\u0002\u0012%\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003M\tQa]2bY\u0006,\"!\u0006\u0011\u0014\u0007\u00011R\u0006\u0005\u0004\u00181iqR&M\u0007\u0002\u0019%\u0011\u0011\u0004\u0004\u0002\u0011\u0007\"\fW\u000e]*uKB\u0004XM\u001d\"bg\u0016\u0004\"a\u0007\u000f\u000e\u0003II!!\b\n\u0003\u0007%sG\u000f\u0005\u0002 A1\u0001A!B\u0011\u0001\u0005\u0004\u0019#!\u0001+\u0004\u0001E\u0011Ae\n\t\u00037\u0015J!A\n\n\u0003\t9+H\u000e\u001c\t\u0004Q-rR\"A\u0015\u000b\u0005)\u0002\u0012!C5n[V$\u0018M\u00197f\u0013\ta\u0013F\u0001\u0003O_\u0012,\u0007C\u0001\u00180\u001b\u0005\u0001\u0012B\u0001\u0019\u0011\u0005)Ie\u000e^*uKB\u0004XM\u001d\t\u0004/\u0001q\u0012\u0001C0nCb\u001c\u0016N_3\u0002\u000f\u0015DHO]1diV\tQ\u0007E\u0003\u001cmyQ\"$\u0003\u00028%\tIa)\u001e8di&|gNM\u0001\tKb$(/Y2uA\u00051A(\u001b8jiz\"2!M\u001e=\u0011\u0015\u0011D\u00011\u0001\u001b\u0011\u0015\u0019D\u00011\u00016\u0003!qW\r\u001f;Ti\u0016\u0004H#\u0001\u000e\u0002\u0013M,W.[2m_:,G#A\u0019\u0002\u001f%sGo\u00115b[B\u001cF/\u001a9qKJ\u0004\"a\u0006\u0005\u0014\u0005!!\u0005CA\u000eF\u0013\t1%C\u0001\u0004B]f\u0014VM\u001a\u000b\u0002\u0005\u0006!aM]8n+\tQU\n\u0006\u0003L!J#\u0006cA\f\u0001\u0019B\u0011q$\u0014\u0003\u0006C)\u0011\rAT\t\u0003I=\u00032\u0001K\u0016M\u0011\u0015\t&\u00021\u0001\u001b\u0003\u001di\u0017\r_*ju\u0016DQa\u0015\u0006A\u00021\u000bAA]8pi\")1G\u0003a\u0001+B)1D\u000e\'\u001b5\u0001
   #12 = Utf8               java/util/PrimitiveIterator$OfInt
   #13 = Class              #12           // java/util/PrimitiveIterator$OfInt
   #14 = Utf8               java/util/PrimitiveIterator
   #15 = Class              #14           // java/util/PrimitiveIterator
   #16 = Utf8               OfInt
   #17 = Utf8               java/util/Spliterator$OfInt
   #18 = Class              #17           // java/util/Spliterator$OfInt
   #19 = Utf8               java/util/Spliterator
   #20 = Class              #19           // java/util/Spliterator
   #21 = Utf8               extract
   #22 = Utf8               Lscala/Function2;
   #23 = Utf8               Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;
   #24 = Utf8               from
   #25 = Utf8               (ILscala/collection/immutable/Node;Lscala/Function2;)Lscala/collection/convert/impl/IntChampStepper;
   #26 = Utf8               <T:Lscala/collection/immutable/Node<TT;>;>(ITT;Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/collection/convert/impl/IntChampStepper<TT;>;
   #27 = Utf8               maxSize
   #28 = Utf8               root
   #29 = Utf8               scala/collection/convert/impl/IntChampStepper$
   #30 = Class              #29           // scala/collection/convert/impl/IntChampStepper$
   #31 = Utf8               MODULE$
   #32 = Utf8               Lscala/collection/convert/impl/IntChampStepper$;
   #33 = NameAndType        #31:#32       // MODULE$:Lscala/collection/convert/impl/IntChampStepper$;
   #34 = Fieldref           #30.#33       // scala/collection/convert/impl/IntChampStepper$.MODULE$:Lscala/collection/convert/impl/IntChampStepper$;
   #35 = Utf8               <init>
   #36 = Utf8               (ILscala/Function2;)V
   #37 = NameAndType        #35:#36       // "<init>":(ILscala/Function2;)V
   #38 = Methodref          #2.#37        // scala/collection/convert/impl/IntChampStepper."<init>":(ILscala/Function2;)V
   #39 = Utf8               initRoot
   #40 = Utf8               (Lscala/collection/immutable/Node;)V
   #41 = NameAndType        #39:#40       // initRoot:(Lscala/collection/immutable/Node;)V
   #42 = Methodref          #2.#41        // scala/collection/convert/impl/IntChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
   #43 = Utf8               I
   #44 = Utf8               Lscala/collection/immutable/Node;
   #45 = Utf8               from_ans
   #46 = Utf8               Lscala/collection/convert/impl/IntChampStepper;
   #47 = Utf8               spliterator
   #48 = Utf8               ()Ljava/util/Spliterator$OfInt;
   #49 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfInt;
   #50 = Utf8               spliterator$
   #51 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #52 = NameAndType        #50:#51       // spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #53 = InterfaceMethodref #7.#52        // scala/collection/IntStepper.spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #54 = Utf8               this
   #55 = Utf8               javaIterator
   #56 = Utf8               ()Ljava/util/PrimitiveIterator$OfInt;
   #57 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfInt;
   #58 = Utf8               javaIterator$
   #59 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #60 = NameAndType        #58:#59       // javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #61 = InterfaceMethodref #7.#60        // scala/collection/IntStepper.javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #62 = Utf8               spliterator$mcI$sp
   #63 = Utf8               ()Ljava/util/Spliterator;
   #64 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #65 = Utf8               spliterator$mcI$sp$
   #66 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #67 = NameAndType        #65:#66       // spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #68 = InterfaceMethodref #7.#67        // scala/collection/IntStepper.spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #69 = Utf8               javaIterator$mcI$sp
   #70 = Utf8               ()Ljava/util/Iterator;
   #71 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #72 = Utf8               javaIterator$mcI$sp$
   #73 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #74 = NameAndType        #72:#73       // javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #75 = InterfaceMethodref #7.#74        // scala/collection/IntStepper.javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #76 = Utf8               nextStep$mcD$sp
   #77 = Utf8               ()D
   #78 = Utf8               scala/collection/Stepper
   #79 = Class              #78           // scala/collection/Stepper
   #80 = Utf8               nextStep$mcD$sp$
   #81 = Utf8               (Lscala/collection/Stepper;)D
   #82 = NameAndType        #80:#81       // nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #83 = InterfaceMethodref #79.#82       // scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #84 = Utf8               nextStep$mcJ$sp
   #85 = Utf8               ()J
   #86 = Utf8               nextStep$mcJ$sp$
   #87 = Utf8               (Lscala/collection/Stepper;)J
   #88 = NameAndType        #86:#87       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #89 = InterfaceMethodref #79.#88       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #90 = Utf8               trySplit$mcD$sp
   #91 = Utf8               ()Lscala/collection/Stepper;
   #92 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #93 = Utf8               trySplit$mcD$sp$
   #94 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #95 = NameAndType        #93:#94       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #96 = InterfaceMethodref #79.#95       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #97 = Utf8               trySplit$mcI$sp
   #98 = Utf8               trySplit$mcI$sp$
   #99 = NameAndType        #98:#94       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #100 = InterfaceMethodref #79.#99       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #101 = Utf8               trySplit$mcJ$sp
  #102 = Utf8               trySplit$mcJ$sp$
  #103 = NameAndType        #102:#94      // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #104 = InterfaceMethodref #79.#103      // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #105 = Utf8               spliterator$mcD$sp
  #106 = Utf8               spliterator$mcD$sp$
  #107 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #108 = NameAndType        #106:#107     // spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #109 = InterfaceMethodref #79.#108      // scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #110 = Utf8               spliterator$mcJ$sp
  #111 = Utf8               spliterator$mcJ$sp$
  #112 = NameAndType        #111:#107     // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #113 = InterfaceMethodref #79.#112      // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #114 = Utf8               javaIterator$mcD$sp
  #115 = Utf8               javaIterator$mcD$sp$
  #116 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
  #117 = NameAndType        #115:#116     // javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #118 = InterfaceMethodref #79.#117      // scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #119 = Utf8               javaIterator$mcJ$sp
  #120 = Utf8               javaIterator$mcJ$sp$
  #121 = NameAndType        #120:#116     // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #122 = InterfaceMethodref #79.#121      // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #123 = Utf8               iterator
  #124 = Utf8               ()Lscala/collection/Iterator;
  #125 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #126 = Utf8               iterator$
  #127 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #128 = NameAndType        #126:#127     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #129 = InterfaceMethodref #79.#128      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #130 = Utf8               ()Lscala/Function2;
  #131 = Utf8               ()Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;
  #132 = NameAndType        #21:#22       // extract:Lscala/Function2;
  #133 = Fieldref           #2.#132       // scala/collection/convert/impl/IntChampStepper.extract:Lscala/Function2;
  #134 = Utf8               nextStep
  #135 = Utf8               ()I
  #136 = Utf8               nextStep$mcI$sp
  #137 = NameAndType        #136:#135     // nextStep$mcI$sp:()I
  #138 = Methodref          #2.#137       // scala/collection/convert/impl/IntChampStepper.nextStep$mcI$sp:()I
  #139 = Utf8               semiclone
  #140 = Utf8               ()Lscala/collection/convert/impl/IntChampStepper;
  #141 = Utf8               ()Lscala/collection/convert/impl/IntChampStepper<TT;>;
  #142 = NameAndType        #21:#130      // extract:()Lscala/Function2;
  #143 = Methodref          #2.#142       // scala/collection/convert/impl/IntChampStepper.extract:()Lscala/Function2;
  #144 = Utf8               hasStep
  #145 = Utf8               ()Z
  #146 = NameAndType        #144:#145     // hasStep:()Z
  #147 = Methodref          #2.#146       // scala/collection/convert/impl/IntChampStepper.hasStep:()Z
  #148 = Utf8               currentValueNode
  #149 = Utf8               ()Lscala/collection/immutable/Node;
  #150 = NameAndType        #148:#149     // currentValueNode:()Lscala/collection/immutable/Node;
  #151 = Methodref          #2.#150       // scala/collection/convert/impl/IntChampStepper.currentValueNode:()Lscala/collection/immutable/Node;
  #152 = Utf8               currentValueCursor
  #153 = NameAndType        #152:#135     // currentValueCursor:()I
  #154 = Methodref          #2.#153       // scala/collection/convert/impl/IntChampStepper.currentValueCursor:()I
  #155 = Utf8               java/lang/Integer
  #156 = Class              #155          // java/lang/Integer
  #157 = Utf8               valueOf
  #158 = Utf8               (I)Ljava/lang/Integer;
  #159 = NameAndType        #157:#158     // valueOf:(I)Ljava/lang/Integer;
  #160 = Methodref          #156.#159     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #161 = Utf8               scala/Function2
  #162 = Class              #161          // scala/Function2
  #163 = Utf8               apply
  #164 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #165 = NameAndType        #163:#164     // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #166 = InterfaceMethodref #162.#165     // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #167 = Utf8               scala/runtime/BoxesRunTime
  #168 = Class              #167          // scala/runtime/BoxesRunTime
  #169 = Utf8               unboxToInt
  #170 = Utf8               (Ljava/lang/Object;)I
  #171 = NameAndType        #169:#170     // unboxToInt:(Ljava/lang/Object;)I
  #172 = Methodref          #168.#171     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #173 = Utf8               currentValueCursor_$eq
  #174 = Utf8               (I)V
  #175 = NameAndType        #173:#174     // currentValueCursor_$eq:(I)V
  #176 = Methodref          #2.#175       // scala/collection/convert/impl/IntChampStepper.currentValueCursor_$eq:(I)V
  #177 = NameAndType        #27:#135      // maxSize:()I
  #178 = Methodref          #2.#177       // scala/collection/convert/impl/IntChampStepper.maxSize:()I
  #179 = Utf8               maxSize_$eq
  #180 = NameAndType        #179:#174     // maxSize_$eq:(I)V
  #181 = Methodref          #2.#180       // scala/collection/convert/impl/IntChampStepper.maxSize_$eq:(I)V
  #182 = Utf8               scala/collection/Stepper$
  #183 = Class              #182          // scala/collection/Stepper$
  #184 = Utf8               Lscala/collection/Stepper$;
  #185 = NameAndType        #31:#184      // MODULE$:Lscala/collection/Stepper$;
  #186 = Fieldref           #183.#185     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #187 = Utf8               java/util/NoSuchElementException
  #188 = Class              #187          // java/util/NoSuchElementException
  #189 = Utf8               Empty Stepper
  #190 = String             #189          // Empty Stepper
  #191 = Utf8               (Ljava/lang/String;)V
  #192 = NameAndType        #35:#191      // "<init>":(Ljava/lang/String;)V
  #193 = Methodref          #188.#192     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #194 = Utf8               ans
  #195 = Utf8               trySplit
  #196 = Utf8               ()Ljava/lang/Object;
  #197 = NameAndType        #195:#196     // trySplit:()Ljava/lang/Object;
  #198 = Methodref          #2.#197       // scala/collection/convert/impl/IntChampStepper.trySplit:()Ljava/lang/Object;
  #199 = Utf8               ()Lscala/collection/IntStepper;
  #200 = NameAndType        #55:#56       // javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
  #201 = Methodref          #2.#200       // scala/collection/convert/impl/IntChampStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
  #202 = NameAndType        #47:#48       // spliterator:()Ljava/util/Spliterator$OfInt;
  #203 = Methodref          #2.#202       // scala/collection/convert/impl/IntChampStepper.spliterator:()Ljava/util/Spliterator$OfInt;
  #204 = Utf8               ()Lscala/collection/convert/impl/ChampStepperBase;
  #205 = NameAndType        #139:#140     // semiclone:()Lscala/collection/convert/impl/IntChampStepper;
  #206 = Methodref          #2.#205       // scala/collection/convert/impl/IntChampStepper.semiclone:()Lscala/collection/convert/impl/IntChampStepper;
  #207 = NameAndType        #134:#135     // nextStep:()I
  #208 = Methodref          #2.#207       // scala/collection/convert/impl/IntChampStepper.nextStep:()I
  #209 = Utf8               boxToInteger
  #210 = NameAndType        #209:#158     // boxToInteger:(I)Ljava/lang/Integer;
  #211 = Methodref          #168.#210     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #212 = Utf8               (ILscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)V
  #213 = Utf8               _maxSize
  #214 = NameAndType        #35:#174      // "<init>":(I)V
  #215 = Methodref          #5.#214       // scala/collection/convert/impl/ChampStepperBase."<init>":(I)V
  #216 = Utf8               Signature
  #217 = Utf8               Code
  #218 = Utf8               LineNumberTable
  #219 = Utf8               LocalVariableTable
  #220 = Utf8               MethodParameters
  #221 = Utf8               StackMapTable
  #222 = Utf8               InnerClasses
  #223 = Utf8               SourceFile
  #224 = Utf8               RuntimeVisibleAnnotations
  #225 = Utf8               ScalaInlineInfo
  #226 = Utf8               ScalaSig
{
  private final scala.Function2<T, java.lang.Object, java.lang.Object> extract;
    descriptor: Lscala/Function2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;

  public static <T extends scala.collection.immutable.Node<T>> scala.collection.convert.impl.IntChampStepper<T> from(int, T, scala.Function2<T, java.lang.Object, java.lang.Object>);
    descriptor: (ILscala/collection/immutable/Node;Lscala/Function2;)Lscala/collection/convert/impl/IntChampStepper;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #34                 // Field scala/collection/convert/impl/IntChampStepper$.MODULE$:Lscala/collection/convert/impl/IntChampStepper$;
         3: pop
         4: new           #2                  // class scala/collection/convert/impl/IntChampStepper
         7: dup
         8: iload_0
         9: aload_2
        10: invokespecial #38                 // Method "<init>":(ILscala/Function2;)V
        13: astore_3
        14: aload_3
        15: aload_1
        16: invokevirtual #42                 // Method initRoot:(Lscala/collection/immutable/Node;)V
        19: aload_3
        20: areturn
      LineNumberTable:
        line 219: 4
        line 220: 14
        line 221: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 maxSize   I
            0      21     1  root   Lscala/collection/immutable/Node;
            0      21     2 extract   Lscala/Function2;
           14       5     3 from_ans   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #26                          // <T:Lscala/collection/immutable/Node<TT;>;>(ITT;Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/collection/convert/impl/IntChampStepper<TT;>;
    MethodParameters:
      Name                           Flags
      maxSize                        final
      root                           final
      extract                        final

  public <B extends java.lang.Object> java.util.Spliterator$OfInt spliterator();
    descriptor: ()Ljava/util/Spliterator$OfInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod scala/collection/IntStepper.spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #49                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfInt;

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfInt javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod scala/collection/IntStepper.javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #57                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfInt;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod scala/collection/IntStepper.spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #64                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/collection/IntStepper.javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #71                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #83                 // InterfaceMethod scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
         4: dreturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #89                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #96                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #92                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #92                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #104                // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #92                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #109                // InterfaceMethod scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #64                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #113                // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #64                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #118                // InterfaceMethod scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #71                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #122                // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #71                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #129                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #125                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.Function2<T, java.lang.Object, java.lang.Object> extract();
    descriptor: ()Lscala/Function2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #133                // Field extract:Lscala/Function2;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #131                         // ()Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;

  public int nextStep();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method nextStep$mcI$sp:()I
         4: ireturn
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public scala.collection.convert.impl.IntChampStepper<T> semiclone();
    descriptor: ()Lscala/collection/convert/impl/IntChampStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class scala/collection/convert/impl/IntChampStepper
         3: dup
         4: iconst_0
         5: aload_0
         6: invokevirtual #143                // Method extract:()Lscala/Function2;
         9: invokespecial #38                 // Method "<init>":(ILscala/Function2;)V
        12: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/convert/impl/IntChampStepper;
    Signature: #141                         // ()Lscala/collection/convert/impl/IntChampStepper<TT;>;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #147                // Method hasStep:()Z
         4: ifeq          53
         7: aload_0
         8: invokevirtual #143                // Method extract:()Lscala/Function2;
        11: aload_0
        12: invokevirtual #151                // Method currentValueNode:()Lscala/collection/immutable/Node;
        15: aload_0
        16: invokevirtual #154                // Method currentValueCursor:()I
        19: invokestatic  #160                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        22: invokeinterface #166,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        27: invokestatic  #172                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        30: istore_1
        31: aload_0
        32: aload_0
        33: invokevirtual #154                // Method currentValueCursor:()I
        36: iconst_1
        37: iadd
        38: invokevirtual #176                // Method currentValueCursor_$eq:(I)V
        41: aload_0
        42: aload_0
        43: invokevirtual #178                // Method maxSize:()I
        46: iconst_1
        47: isub
        48: invokevirtual #181                // Method maxSize_$eq:(I)V
        51: iload_1
        52: ireturn
        53: getstatic     #186                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        56: pop
        57: new           #188                // class java/util/NoSuchElementException
        60: dup
        61: ldc           #190                // String Empty Stepper
        63: invokespecial #193                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        66: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 53 /* same */
      LineNumberTable:
        line 207: 0
        line 208: 7
        line 209: 31
        line 210: 41
        line 211: 51
        line 213: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31      21     1   ans   I
            0      67     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public final scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #79                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public final scala.collection.IntStepper trySplit();
    descriptor: ()Lscala/collection/IntStepper;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/IntStepper
         7: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #201                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #203                // Method spliterator:()Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public scala.collection.convert.impl.ChampStepperBase semiclone();
    descriptor: ()Lscala/collection/convert/impl/ChampStepperBase;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #206                // Method semiclone:()Lscala/collection/convert/impl/IntChampStepper;
         4: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #208                // Method nextStep:()I
         4: invokestatic  #211                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/IntChampStepper;

  public scala.collection.convert.impl.IntChampStepper(int, scala.Function2<T, java.lang.Object, java.lang.Object>);
    descriptor: (ILscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #133                // Field extract:Lscala/Function2;
         5: aload_0
         6: iload_1
         7: invokespecial #215                // Method scala/collection/convert/impl/ChampStepperBase."<init>":(I)V
        10: return
      LineNumberTable:
        line 203: 0
        line 204: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/convert/impl/IntChampStepper;
            0      11     1 _maxSize   I
            0      11     2 extract   Lscala/Function2;
    Signature: #212                         // (ILscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      _maxSize                       final
      extract                        final
}
InnerClasses:
  public static #16= #13 of #15;          // OfInt=class java/util/PrimitiveIterator$OfInt of class java/util/PrimitiveIterator
  public static #16= #18 of #20;          // OfInt=class java/util/Spliterator$OfInt of class java/util/Spliterator
Signature: #3                           // <T:Lscala/collection/immutable/Node<TT;>;>Lscala/collection/convert/impl/ChampStepperBase<Ljava/lang/Object;TT;Lscala/collection/IntStepper;Lscala/collection/convert/impl/IntChampStepper<TT;>;>;Lscala/collection/IntStepper;
SourceFile: "ChampStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005Y3Qa\u0003\u0007\u0003!QA\u0001B\r\u0001\u0003\u0002\u0003\u0006IA\u0007\u0005\tg\u0001\u0011)\u0019!C\ti!A\u0001\b\u0001B\u0001B\u0003%Q\u0007C\u0003:\u0001\u0011\u0005!\bC\u0003>\u0001\u0011\u0005a\bC\u0003@\u0001\u0011\u0005\u0001i\u0002\u0004B\u0019!\u0005\u0001C\u0011\u0004\u0007\u00171A\t\u0001E\"\t\u000beBA\u0011A$\t\u000b!CA\u0011A%\u0003\u001f%sGo\u00115b[B\u001cF/\u001a9qKJT!!\u0004\b\u0002\t%l\u0007\u000f\u001c\u0006\u0003\u001fA\tqaY8om\u0016\u0014HO\u0003\u0002\u0012%\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003M\tQa]2bY\u0006,\"!\u0006\u0011\u0014\u0007\u00011R\u0006\u0005\u0004\u00181iqR&M\u0007\u0002\u0019%\u0011\u0011\u0004\u0004\u0002\u0011\u0007\"\fW\u000e]*uKB\u0004XM\u001d\"bg\u0016\u0004\"a\u0007\u000f\u000e\u0003II!!\b\n\u0003\u0007%sG\u000f\u0005\u0002 A1\u0001A!B\u0011\u0001\u0005\u0004\u0019#!\u0001+\u0004\u0001E\u0011Ae\n\t\u00037\u0015J!A\n\n\u0003\t9+H\u000e\u001c\t\u0004Q-rR\"A\u0015\u000b\u0005)\u0002\u0012!C5n[V$\u0018M\u00197f\u0013\ta\u0013F\u0001\u0003O_\u0012,\u0007C\u0001\u00180\u001b\u0005\u0001\u0012B\u0001\u0019\u0011\u0005)Ie\u000e^*uKB\u0004XM\u001d\t\u0004/\u0001q\u0012\u0001C0nCb\u001c\u0016N_3\u0002\u000f\u0015DHO]1diV\tQ\u0007E\u0003\u001cmyQ\"$\u0003\u00028%\tIa)\u001e8di&|gNM\u0001\tKb$(/Y2uA\u00051A(\u001b8jiz\"2!M\u001e=\u0011\u0015\u0011D\u00011\u0001\u001b\u0011\u0015\u0019D\u00011\u00016\u0003!qW\r\u001f;Ti\u0016\u0004H#\u0001\u000e\u0002\u0013M,W.[2m_:,G#A\u0019\u0002\u001f%sGo\u00115b[B\u001cF/\u001a9qKJ\u0004\"a\u0006\u0005\u0014\u0005!!\u0005CA\u000eF\u0013\t1%C\u0001\u0004B]f\u0014VM\u001a\u000b\u0002\u0005\u0006!aM]8n+\tQU\n\u0006\u0003L!J#\u0006cA\f\u0001\u0019B\u0011q$\u0014\u0003\u0006C)\u0011\rAT\t\u0003I=\u00032\u0001K\u0016M\u0011\u0015\t&\u00021\u0001\u001b\u0003\u001di\u0017\r_*ju\u0016DQa\u0015\u0006A\u00021\u000bAA]8pi\")1G\u0003a\u0001+B)1D\u000e\'\u001b5\u0001"
    )
  ScalaInlineInfo: length = 0x81 (unknown attribute)
   01 01 00 19 00 23 00 24 01 00 15 00 82 01 00 7B
   00 7C 01 00 37 00 46 01 00 37 00 38 01 00 72 00
   46 01 00 45 00 46 01 00 77 00 46 01 00 86 00 87
   01 00 86 00 C4 01 00 4C 00 4D 01 00 88 00 87 01
   00 54 00 55 01 00 8B 00 CC 01 00 8B 00 8C 01 00
   2F 00 30 01 00 2F 00 3F 01 00 69 00 3F 01 00 3E
   00 3F 01 00 6E 00 3F 01 00 C3 00 C7 01 00 C3 00
   5B 01 00 5A 00 5B 01 00 61 00 5B 01 00 65 00 5B
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
