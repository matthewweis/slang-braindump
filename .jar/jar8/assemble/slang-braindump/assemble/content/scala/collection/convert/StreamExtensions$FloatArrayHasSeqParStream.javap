Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.class
  Last modified May 29, 2022; size 2530 bytes
  SHA-256 checksum da330509b151edb8d09e934ec501186f6f41aaf244b0622ae49db6f00b475ed0
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$FloatArrayHasSeqParStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               StreamExtensions.scala
   #6 = Utf8               scala/collection/convert/StreamExtensions
   #7 = Class              #6             // scala/collection/convert/StreamExtensions
   #8 = Utf8               FloatArrayHasSeqParStream
   #9 = Utf8               scala/collection/convert/StreamExtensions$StepperHasParStream
  #10 = Class              #9             // scala/collection/convert/StreamExtensions$StepperHasParStream
  #11 = Utf8               StepperHasParStream
  #12 = Utf8               scala/collection/convert/StreamExtensions$StepperHasSeqStream
  #13 = Class              #12            // scala/collection/convert/StreamExtensions$StepperHasSeqStream
  #14 = Utf8               StepperHasSeqStream
  #15 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
  #16 = Class              #15            // scala/collection/convert/StreamExtensions$StreamShape
  #17 = Utf8               StreamShape
  #18 = Utf8               scala/collection/convert/StreamExtensions$StreamShape$
  #19 = Class              #18            // scala/collection/convert/StreamExtensions$StreamShape$
  #20 = Utf8               StreamShape$
  #21 = Utf8               a
  #22 = Utf8               [F
  #23 = Utf8               $outer
  #24 = Utf8               Lscala/collection/convert/StreamExtensions;
  #25 = Utf8               asJavaSeqStream
  #26 = Utf8               ()Ljava/util/stream/DoubleStream;
  #27 = Utf8               scala$collection$convert$StreamExtensions$FloatArrayHasSeqParStream$$$outer
  #28 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #29 = NameAndType        #27:#28        // scala$collection$convert$StreamExtensions$FloatArrayHasSeqParStream$$$outer:()Lscala/collection/convert/StreamExtensions;
  #30 = Methodref          #2.#29         // scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.scala$collection$convert$StreamExtensions$FloatArrayHasSeqParStream$$$outer:()Lscala/collection/convert/StreamExtensions;
  #31 = Utf8               scala/collection/ArrayOps$
  #32 = Class              #31            // scala/collection/ArrayOps$
  #33 = Utf8               MODULE$
  #34 = Utf8               Lscala/collection/ArrayOps$;
  #35 = NameAndType        #33:#34        // MODULE$:Lscala/collection/ArrayOps$;
  #36 = Fieldref           #32.#35        // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #37 = NameAndType        #21:#22        // a:[F
  #38 = Fieldref           #2.#37         // scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.a:[F
  #39 = Utf8               scala/collection/StepperShape$
  #40 = Class              #39            // scala/collection/StepperShape$
  #41 = Utf8               Lscala/collection/StepperShape$;
  #42 = NameAndType        #33:#41        // MODULE$:Lscala/collection/StepperShape$;
  #43 = Fieldref           #40.#42        // scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
  #44 = Utf8               floatStepperShape
  #45 = Utf8               ()Lscala/collection/StepperShape;
  #46 = NameAndType        #44:#45        // floatStepperShape:()Lscala/collection/StepperShape;
  #47 = Methodref          #40.#46        // scala/collection/StepperShape$.floatStepperShape:()Lscala/collection/StepperShape;
  #48 = Utf8               stepper$extension
  #49 = Utf8               (Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #50 = NameAndType        #48:#49        // stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #51 = Methodref          #32.#50        // scala/collection/ArrayOps$.stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #52 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
  #53 = NameAndType        #14:#52        // StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
  #54 = InterfaceMethodref #7.#53         // scala/collection/convert/StreamExtensions.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
  #55 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape$;
  #56 = NameAndType        #33:#55        // MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
  #57 = Fieldref           #19.#56        // scala/collection/convert/StreamExtensions$StreamShape$.MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
  #58 = Utf8               doubleStreamShape
  #59 = Utf8               ()Lscala/collection/convert/StreamExtensions$StreamShape;
  #60 = NameAndType        #58:#59        // doubleStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
  #61 = Methodref          #19.#60        // scala/collection/convert/StreamExtensions$StreamShape$.doubleStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
  #62 = Utf8               doubleStepperShape
  #63 = NameAndType        #62:#45        // doubleStepperShape:()Lscala/collection/StepperShape;
  #64 = Methodref          #40.#63        // scala/collection/StepperShape$.doubleStepperShape:()Lscala/collection/StepperShape;
  #65 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #66 = NameAndType        #25:#65        // asJavaSeqStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #67 = Methodref          #13.#66        // scala/collection/convert/StreamExtensions$StepperHasSeqStream.asJavaSeqStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #68 = Utf8               java/util/stream/DoubleStream
  #69 = Class              #68            // java/util/stream/DoubleStream
  #70 = Utf8               this
  #71 = Utf8               Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;
  #72 = Utf8               asJavaParStream
  #73 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
  #74 = NameAndType        #11:#73        // StepperHasParStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
  #75 = InterfaceMethodref #7.#74         // scala/collection/convert/StreamExtensions.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
  #76 = NameAndType        #72:#65        // asJavaParStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #77 = Methodref          #10.#76        // scala/collection/convert/StreamExtensions$StepperHasParStream.asJavaParStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #78 = NameAndType        #23:#24        // $outer:Lscala/collection/convert/StreamExtensions;
  #79 = Fieldref           #2.#78         // scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.$outer:Lscala/collection/convert/StreamExtensions;
  #80 = Utf8               <init>
  #81 = Utf8               (Lscala/collection/convert/StreamExtensions;[F)V
  #82 = Utf8               ()V
  #83 = NameAndType        #80:#82        // "<init>":()V
  #84 = Methodref          #4.#83         // java/lang/Object."<init>":()V
  #85 = Utf8               Code
  #86 = Utf8               LineNumberTable
  #87 = Utf8               LocalVariableTable
  #88 = Utf8               StackMapTable
  #89 = Utf8               MethodParameters
  #90 = Utf8               InnerClasses
  #91 = Utf8               SourceFile
  #92 = Utf8               ScalaInlineInfo
  #93 = Utf8               Scala
{
  private final float[] a;
    descriptor: [F
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.util.stream.DoubleStream asJavaSeqStream();
    descriptor: ()Ljava/util/stream/DoubleStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #30                 // Method scala$collection$convert$StreamExtensions$FloatArrayHasSeqParStream$$$outer:()Lscala/collection/convert/StreamExtensions;
         4: getstatic     #36                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         7: aload_0
         8: getfield      #38                 // Field a:[F
        11: getstatic     #43                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        14: invokevirtual #47                 // Method scala/collection/StepperShape$.floatStepperShape:()Lscala/collection/StepperShape;
        17: invokevirtual #51                 // Method scala/collection/ArrayOps$.stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        20: invokeinterface #54,  2           // InterfaceMethod scala/collection/convert/StreamExtensions.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
        25: getstatic     #57                 // Field scala/collection/convert/StreamExtensions$StreamShape$.MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
        28: invokevirtual #61                 // Method scala/collection/convert/StreamExtensions$StreamShape$.doubleStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
        31: getstatic     #43                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        34: invokevirtual #64                 // Method scala/collection/StepperShape$.doubleStepperShape:()Lscala/collection/StepperShape;
        37: invokevirtual #67                 // Method scala/collection/convert/StreamExtensions$StepperHasSeqStream.asJavaSeqStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
        40: checkcast     #69                 // class java/util/stream/DoubleStream
        43: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;

  public java.util.stream.DoubleStream asJavaParStream();
    descriptor: ()Ljava/util/stream/DoubleStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #30                 // Method scala$collection$convert$StreamExtensions$FloatArrayHasSeqParStream$$$outer:()Lscala/collection/convert/StreamExtensions;
         4: getstatic     #36                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         7: aload_0
         8: getfield      #38                 // Field a:[F
        11: getstatic     #43                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        14: invokevirtual #47                 // Method scala/collection/StepperShape$.floatStepperShape:()Lscala/collection/StepperShape;
        17: invokevirtual #51                 // Method scala/collection/ArrayOps$.stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        20: invokeinterface #75,  2           // InterfaceMethod scala/collection/convert/StreamExtensions.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
        25: getstatic     #57                 // Field scala/collection/convert/StreamExtensions$StreamShape$.MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
        28: invokevirtual #61                 // Method scala/collection/convert/StreamExtensions$StreamShape$.doubleStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
        31: getstatic     #43                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        34: invokevirtual #64                 // Method scala/collection/StepperShape$.doubleStepperShape:()Lscala/collection/StepperShape;
        37: invokevirtual #77                 // Method scala/collection/convert/StreamExtensions$StepperHasParStream.asJavaParStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
        40: checkcast     #69                 // class java/util/stream/DoubleStream
        43: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$FloatArrayHasSeqParStream$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #79                 // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;

  public scala.collection.convert.StreamExtensions$FloatArrayHasSeqParStream(scala.collection.convert.StreamExtensions, float[]);
    descriptor: (Lscala/collection/convert/StreamExtensions;[F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #38                 // Field a:[F
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #79                 // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #84                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2     a   [F
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      a                              final
}
InnerClasses:
  public #8= #2 of #7;                    // FloatArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #11= #10 of #7;                  // StepperHasParStream=class scala/collection/convert/StreamExtensions$StepperHasParStream of class scala/collection/convert/StreamExtensions
  public #14= #13 of #7;                  // StepperHasSeqStream=class scala/collection/convert/StreamExtensions$StepperHasSeqStream of class scala/collection/convert/StreamExtensions
  public static #17= #16 of #7;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
  public static #20= #19 of #7;           // StreamShape$=class scala/collection/convert/StreamExtensions$StreamShape$ of class scala/collection/convert/StreamExtensions
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 50 00 51 00 00 48 00 1A 00 00 19
   00 1A 00 00 1B 00 1C 00
  Scala: length = 0x0 (unknown attribute)

