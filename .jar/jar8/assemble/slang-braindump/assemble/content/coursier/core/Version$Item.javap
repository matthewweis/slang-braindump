Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Version$Item.class
  Last modified May 29, 2022; size 3617 bytes
  SHA-256 checksum 62473e583baa533b3e461470092f610f2c66819d9d94428ea6b9194a0fd1b9f5
  Compiled from "Version.scala"
public abstract class coursier.core.Version$Item extends java.lang.Object implements scala.math.Ordered<coursier.core.Version$Item>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // coursier/core/Version$Item
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               coursier/core/Version$Item
    #2 = Class              #1            // coursier/core/Version$Item
    #3 = Utf8               Ljava/lang/Object;Lscala/math/Ordered<Lcoursier/core/Version$Item;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Ordered
    #7 = Class              #6            // scala/math/Ordered
    #8 = Utf8               Version.scala
    #9 = Utf8               coursier/core/Version$BigNumber
   #10 = Class              #9            // coursier/core/Version$BigNumber
   #11 = Utf8               coursier/core/Version
   #12 = Class              #11           // coursier/core/Version
   #13 = Utf8               BigNumber
   #14 = Utf8               Item
   #15 = Utf8               coursier/core/Version$Number
   #16 = Class              #15           // coursier/core/Version$Number
   #17 = Utf8               Number
   #18 = Utf8               coursier/core/Version$Tag
   #19 = Class              #18           // coursier/core/Version$Tag
   #20 = Utf8               Tag
   #21 = Utf8               $less
   #22 = Utf8               (Ljava/lang/Object;)Z
   #23 = Utf8               that
   #24 = Utf8               $less$
   #25 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)Z
   #26 = NameAndType        #24:#25       // $less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #27 = InterfaceMethodref #7.#26        // scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #28 = Utf8               this
   #29 = Utf8               Lcoursier/core/Version$Item;
   #30 = Utf8               Ljava/lang/Object;
   #31 = Utf8               $greater
   #32 = Utf8               $greater$
   #33 = NameAndType        #32:#25       // $greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #34 = InterfaceMethodref #7.#33        // scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #35 = Utf8               $less$eq
   #36 = Utf8               $less$eq$
   #37 = NameAndType        #36:#25       // $less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #38 = InterfaceMethodref #7.#37        // scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #39 = Utf8               $greater$eq
   #40 = Utf8               $greater$eq$
   #41 = NameAndType        #40:#25       // $greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #42 = InterfaceMethodref #7.#41        // scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
   #43 = Utf8               compareTo
   #44 = Utf8               (Ljava/lang/Object;)I
   #45 = Utf8               compareTo$
   #46 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)I
   #47 = NameAndType        #45:#46       // compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
   #48 = InterfaceMethodref #7.#47        // scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
   #49 = Utf8               compare
   #50 = Utf8               (Lcoursier/core/Version$Item;)I
   #51 = Utf8               other
   #52 = Utf8               scala/Tuple2
   #53 = Class              #52           // scala/Tuple2
   #54 = Utf8               <init>
   #55 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #56 = NameAndType        #54:#55       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #57 = Methodref          #53.#56       // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #58 = Utf8               _1
   #59 = Utf8               ()Ljava/lang/Object;
   #60 = NameAndType        #58:#59       // _1:()Ljava/lang/Object;
   #61 = Methodref          #53.#60       // scala/Tuple2._1:()Ljava/lang/Object;
   #62 = Utf8               _2
   #63 = NameAndType        #62:#59       // _2:()Ljava/lang/Object;
   #64 = Methodref          #53.#63       // scala/Tuple2._2:()Ljava/lang/Object;
   #65 = Utf8               scala/runtime/RichInt
   #66 = Class              #65           // scala/runtime/RichInt
   #67 = Utf8               scala/Predef$
   #68 = Class              #67           // scala/Predef$
   #69 = Utf8               MODULE$
   #70 = Utf8               Lscala/Predef$;
   #71 = NameAndType        #69:#70       // MODULE$:Lscala/Predef$;
   #72 = Fieldref           #68.#71       // scala/Predef$.MODULE$:Lscala/Predef$;
   #73 = Utf8               value
   #74 = Utf8               ()I
   #75 = NameAndType        #73:#74       // value:()I
   #76 = Methodref          #16.#75       // coursier/core/Version$Number.value:()I
   #77 = Utf8               intWrapper
   #78 = Utf8               (I)I
   #79 = NameAndType        #77:#78       // intWrapper:(I)I
   #80 = Methodref          #68.#79       // scala/Predef$.intWrapper:(I)I
   #81 = Utf8               (I)V
   #82 = NameAndType        #54:#81       // "<init>":(I)V
   #83 = Methodref          #66.#82       // scala/runtime/RichInt."<init>":(I)V
   #84 = Utf8               scala/runtime/BoxesRunTime
   #85 = Class              #84           // scala/runtime/BoxesRunTime
   #86 = Utf8               boxToInteger
   #87 = Utf8               (I)Ljava/lang/Integer;
   #88 = NameAndType        #86:#87       // boxToInteger:(I)Ljava/lang/Integer;
   #89 = Methodref          #85.#88       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #90 = NameAndType        #49:#44       // compare:(Ljava/lang/Object;)I
   #91 = Methodref          #66.#90       // scala/runtime/RichInt.compare:(Ljava/lang/Object;)I
   #92 = Utf8               ()Lscala/math/BigInt;
   #93 = NameAndType        #73:#92       // value:()Lscala/math/BigInt;
   #94 = Methodref          #10.#93       // coursier/core/Version$BigNumber.value:()Lscala/math/BigInt;
   #95 = Utf8               scala/math/BigInt
   #96 = Class              #95           // scala/math/BigInt
   #97 = Utf8               (Lscala/math/BigInt;)I
   #98 = NameAndType        #49:#97       // compare:(Lscala/math/BigInt;)I
   #99 = Methodref          #96.#98       // scala/math/BigInt.compare:(Lscala/math/BigInt;)I
  #100 = Utf8               scala/math/BigInt$
  #101 = Class              #100          // scala/math/BigInt$
  #102 = Utf8               Lscala/math/BigInt$;
  #103 = NameAndType        #69:#102      // MODULE$:Lscala/math/BigInt$;
  #104 = Fieldref           #101.#103     // scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
  #105 = Utf8               int2bigInt
  #106 = Utf8               (I)Lscala/math/BigInt;
  #107 = NameAndType        #105:#106     // int2bigInt:(I)Lscala/math/BigInt;
  #108 = Methodref          #101.#107     // scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
  #109 = Utf8               compareTag
  #110 = Utf8               (Lcoursier/core/Version$Tag;)I
  #111 = NameAndType        #109:#110     // compareTag:(Lcoursier/core/Version$Tag;)I
  #112 = Methodref          #19.#111      // coursier/core/Version$Tag.compareTag:(Lcoursier/core/Version$Tag;)I
  #113 = Utf8               compareToEmpty
  #114 = NameAndType        #113:#74      // compareToEmpty:()I
  #115 = Methodref          #2.#114       // coursier/core/Version$Item.compareToEmpty:()I
  #116 = Utf8               order
  #117 = NameAndType        #116:#74      // order:()I
  #118 = Methodref          #2.#117       // coursier/core/Version$Item.order:()I
  #119 = Utf8               a
  #120 = Utf8               b
  #121 = Utf8               rel0
  #122 = Utf8               I
  #123 = Utf8               rel1
  #124 = Utf8               isEmpty
  #125 = Utf8               ()Z
  #126 = NameAndType        #49:#50       // compare:(Lcoursier/core/Version$Item;)I
  #127 = Methodref          #2.#126       // coursier/core/Version$Item.compare:(Lcoursier/core/Version$Item;)I
  #128 = Utf8               ()V
  #129 = NameAndType        #54:#128      // "<init>":()V
  #130 = Methodref          #5.#129       // java/lang/Object."<init>":()V
  #131 = Utf8               $init$
  #132 = Utf8               (Lscala/math/Ordered;)V
  #133 = NameAndType        #131:#132     // $init$:(Lscala/math/Ordered;)V
  #134 = InterfaceMethodref #7.#133       // scala/math/Ordered.$init$:(Lscala/math/Ordered;)V
  #135 = Utf8               Code
  #136 = Utf8               LineNumberTable
  #137 = Utf8               LocalVariableTable
  #138 = Utf8               MethodParameters
  #139 = Utf8               StackMapTable
  #140 = Utf8               InnerClasses
  #141 = Utf8               Signature
  #142 = Utf8               SourceFile
  #143 = Utf8               ScalaInlineInfo
  #144 = Utf8               Scala
{
  public boolean $less(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #27                 // InterfaceMethod scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version$Item;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #34                 // InterfaceMethod scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version$Item;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $less$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #38                 // InterfaceMethod scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version$Item;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #42                 // InterfaceMethod scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version$Item;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #48                 // InterfaceMethod scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version$Item;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compare(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=26, args_size=2
         0: new           #53                 // class scala/Tuple2
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #57                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: astore_3
        10: aload_3
        11: ifnull        101
        14: aload_3
        15: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: checkcast     #2                  // class coursier/core/Version$Item
        21: astore        4
        23: aload_3
        24: invokevirtual #64                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        27: checkcast     #2                  // class coursier/core/Version$Item
        30: astore        5
        32: aload         4
        34: instanceof    #16                 // class coursier/core/Version$Number
        37: ifeq          98
        40: aload         4
        42: checkcast     #16                 // class coursier/core/Version$Number
        45: astore        6
        47: aload         5
        49: instanceof    #16                 // class coursier/core/Version$Number
        52: ifeq          95
        55: aload         5
        57: checkcast     #16                 // class coursier/core/Version$Number
        60: astore        7
        62: new           #66                 // class scala/runtime/RichInt
        65: dup
        66: getstatic     #72                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        69: aload         6
        71: invokevirtual #76                 // Method coursier/core/Version$Number.value:()I
        74: invokevirtual #80                 // Method scala/Predef$.intWrapper:(I)I
        77: invokespecial #83                 // Method scala/runtime/RichInt."<init>":(I)V
        80: aload         7
        82: invokevirtual #76                 // Method coursier/core/Version$Number.value:()I
        85: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        88: invokevirtual #91                 // Method scala/runtime/RichInt.compare:(Ljava/lang/Object;)I
        91: istore_2
        92: goto          499
        95: goto          104
        98: goto          104
       101: goto          104
       104: aload_3
       105: ifnull        179
       108: aload_3
       109: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       112: checkcast     #2                  // class coursier/core/Version$Item
       115: astore        8
       117: aload_3
       118: invokevirtual #64                 // Method scala/Tuple2._2:()Ljava/lang/Object;
       121: checkcast     #2                  // class coursier/core/Version$Item
       124: astore        9
       126: aload         8
       128: instanceof    #10                 // class coursier/core/Version$BigNumber
       131: ifeq          176
       134: aload         8
       136: checkcast     #10                 // class coursier/core/Version$BigNumber
       139: astore        10
       141: aload         9
       143: instanceof    #10                 // class coursier/core/Version$BigNumber
       146: ifeq          173
       149: aload         9
       151: checkcast     #10                 // class coursier/core/Version$BigNumber
       154: astore        11
       156: aload         10
       158: invokevirtual #94                 // Method coursier/core/Version$BigNumber.value:()Lscala/math/BigInt;
       161: aload         11
       163: invokevirtual #94                 // Method coursier/core/Version$BigNumber.value:()Lscala/math/BigInt;
       166: invokevirtual #99                 // Method scala/math/BigInt.compare:(Lscala/math/BigInt;)I
       169: istore_2
       170: goto          499
       173: goto          182
       176: goto          182
       179: goto          182
       182: aload_3
       183: ifnull        264
       186: aload_3
       187: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       190: checkcast     #2                  // class coursier/core/Version$Item
       193: astore        12
       195: aload_3
       196: invokevirtual #64                 // Method scala/Tuple2._2:()Ljava/lang/Object;
       199: checkcast     #2                  // class coursier/core/Version$Item
       202: astore        13
       204: aload         12
       206: instanceof    #16                 // class coursier/core/Version$Number
       209: ifeq          261
       212: aload         12
       214: checkcast     #16                 // class coursier/core/Version$Number
       217: astore        14
       219: aload         13
       221: instanceof    #10                 // class coursier/core/Version$BigNumber
       224: ifeq          258
       227: aload         13
       229: checkcast     #10                 // class coursier/core/Version$BigNumber
       232: astore        15
       234: aload         15
       236: invokevirtual #94                 // Method coursier/core/Version$BigNumber.value:()Lscala/math/BigInt;
       239: getstatic     #104                // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
       242: aload         14
       244: invokevirtual #76                 // Method coursier/core/Version$Number.value:()I
       247: invokevirtual #108                // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
       250: invokevirtual #99                 // Method scala/math/BigInt.compare:(Lscala/math/BigInt;)I
       253: ineg
       254: istore_2
       255: goto          499
       258: goto          267
       261: goto          267
       264: goto          267
       267: aload_3
       268: ifnull        348
       271: aload_3
       272: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       275: checkcast     #2                  // class coursier/core/Version$Item
       278: astore        16
       280: aload_3
       281: invokevirtual #64                 // Method scala/Tuple2._2:()Ljava/lang/Object;
       284: checkcast     #2                  // class coursier/core/Version$Item
       287: astore        17
       289: aload         16
       291: instanceof    #10                 // class coursier/core/Version$BigNumber
       294: ifeq          345
       297: aload         16
       299: checkcast     #10                 // class coursier/core/Version$BigNumber
       302: astore        18
       304: aload         17
       306: instanceof    #16                 // class coursier/core/Version$Number
       309: ifeq          342
       312: aload         17
       314: checkcast     #16                 // class coursier/core/Version$Number
       317: astore        19
       319: aload         18
       321: invokevirtual #94                 // Method coursier/core/Version$BigNumber.value:()Lscala/math/BigInt;
       324: getstatic     #104                // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
       327: aload         19
       329: invokevirtual #76                 // Method coursier/core/Version$Number.value:()I
       332: invokevirtual #108                // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
       335: invokevirtual #99                 // Method scala/math/BigInt.compare:(Lscala/math/BigInt;)I
       338: istore_2
       339: goto          499
       342: goto          351
       345: goto          351
       348: goto          351
       351: aload_3
       352: ifnull        420
       355: aload_3
       356: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       359: checkcast     #2                  // class coursier/core/Version$Item
       362: astore        20
       364: aload_3
       365: invokevirtual #64                 // Method scala/Tuple2._2:()Ljava/lang/Object;
       368: checkcast     #2                  // class coursier/core/Version$Item
       371: astore        21
       373: aload         20
       375: instanceof    #19                 // class coursier/core/Version$Tag
       378: ifeq          417
       381: aload         20
       383: checkcast     #19                 // class coursier/core/Version$Tag
       386: astore        22
       388: aload         21
       390: instanceof    #19                 // class coursier/core/Version$Tag
       393: ifeq          414
       396: aload         21
       398: checkcast     #19                 // class coursier/core/Version$Tag
       401: astore        23
       403: aload         22
       405: aload         23
       407: invokevirtual #112                // Method coursier/core/Version$Tag.compareTag:(Lcoursier/core/Version$Tag;)I
       410: istore_2
       411: goto          499
       414: goto          423
       417: goto          423
       420: goto          423
       423: aload_0
       424: invokevirtual #115                // Method compareToEmpty:()I
       427: istore        24
       429: aload_1
       430: invokevirtual #115                // Method compareToEmpty:()I
       433: istore        25
       435: iload         24
       437: iload         25
       439: if_icmpne     472
       442: new           #66                 // class scala/runtime/RichInt
       445: dup
       446: getstatic     #72                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       449: aload_0
       450: invokevirtual #118                // Method order:()I
       453: invokevirtual #80                 // Method scala/Predef$.intWrapper:(I)I
       456: invokespecial #83                 // Method scala/runtime/RichInt."<init>":(I)V
       459: aload_1
       460: invokevirtual #118                // Method order:()I
       463: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       466: invokevirtual #91                 // Method scala/runtime/RichInt.compare:(Ljava/lang/Object;)I
       469: goto          495
       472: new           #66                 // class scala/runtime/RichInt
       475: dup
       476: getstatic     #72                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       479: iload         24
       481: invokevirtual #80                 // Method scala/Predef$.intWrapper:(I)I
       484: invokespecial #83                 // Method scala/runtime/RichInt."<init>":(I)V
       487: iload         25
       489: invokestatic  #89                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       492: invokevirtual #91                 // Method scala/runtime/RichInt.compare:(Ljava/lang/Object;)I
       495: istore_2
       496: goto          499
       499: iload_2
       500: ireturn
      StackMapTable: number_of_entries = 23
        frame_type = 255 /* full_frame */
          offset_delta = 95
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2, class coursier/core/Version$Item, class coursier/core/Version$Item, class coursier/core/Version$Number ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2, top, top, top, top, class coursier/core/Version$Item, class coursier/core/Version$Item, class coursier/core/Version$BigNumber ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 75
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2, top, top, top, top, top, top, top, top, class coursier/core/Version$Item, class coursier/core/Version$Item, class coursier/core/Version$Number ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 74
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Item, class coursier/core/Version$Item, class coursier/core/Version$BigNumber ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Item, class coursier/core/Version$Item, class coursier/core/Version$Tag ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, int, int ]
          stack = []
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/core/Version$Item, class coursier/core/Version$Item, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 26: 0
        line 27: 10
        line 28: 104
        line 29: 182
        line 30: 267
        line 31: 351
        line 33: 423
        line 34: 429
        line 36: 435
        line 37: 472
        line 26: 499
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      78     4     a   Lcoursier/core/Version$Item;
           32      69     5     b   Lcoursier/core/Version$Item;
          117      62     8     a   Lcoursier/core/Version$Item;
          126      53     9     b   Lcoursier/core/Version$Item;
          195      69    12     a   Lcoursier/core/Version$Item;
          204      60    13     b   Lcoursier/core/Version$Item;
          280      68    16     a   Lcoursier/core/Version$Item;
          289      59    17     b   Lcoursier/core/Version$Item;
          364      56    20     a   Lcoursier/core/Version$Item;
          373      47    21     b   Lcoursier/core/Version$Item;
          429      66    24  rel0   I
          435      60    25  rel1   I
            0     501     0  this   Lcoursier/core/Version$Item;
            0     501     1 other   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      other                          final

  public abstract int order();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method compareToEmpty:()I
         4: iconst_0
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/core/Version$Item;

  public int compareToEmpty();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/Version$Item;

  public int compare(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class coursier/core/Version$Item
         5: invokevirtual #127                // Method compare:(Lcoursier/core/Version$Item;)I
         8: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/Version$Item;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public coursier.core.Version$Item();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #130                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #134                // InterfaceMethod scala/math/Ordered.$init$:(Lscala/math/Ordered;)V
         8: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/Version$Item;
}
InnerClasses:
  public static final #13= #10 of #12;    // BigNumber=class coursier/core/Version$BigNumber of class coursier/core/Version
  public static abstract #14= #2 of #12;  // Item=class coursier/core/Version$Item of class coursier/core/Version
  public static final #17= #16 of #12;    // Number=class coursier/core/Version$Number of class coursier/core/Version
  public static final #20= #19 of #12;    // Tag=class coursier/core/Version$Tag of class coursier/core/Version
Signature: #3                           // Ljava/lang/Object;Lscala/math/Ordered<Lcoursier/core/Version$Item;>;
SourceFile: "Version.scala"
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 00 00 0B 00 1F 00 16 00 00 27 00 16 00 00 15
   00 16 00 00 23 00 16 00 00 36 00 80 00 00 31 00
   32 00 00 31 00 2C 00 00 2B 00 2C 00 00 71 00 4A
   00 00 7C 00 7D 00 00 74 00 4A 00
  Scala: length = 0x0 (unknown attribute)

