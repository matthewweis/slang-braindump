Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/zaxxer/nuprocess/internal/BaseEventProcessor.class
  Last modified May 29, 2022; size 3601 bytes
  SHA-256 checksum 21d7d7b9b68a5163aa7961510e47964c7b9c346e124f5591cdf86b12ac36d69f
  Compiled from "BaseEventProcessor.java"
public abstract class com.zaxxer.nuprocess.internal.BaseEventProcessor<T extends com.zaxxer.nuprocess.internal.BasePosixProcess> extends java.lang.Object implements com.zaxxer.nuprocess.internal.IEventProcessor<T>
  minor version: 0
  major version: 51
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #45                         // com/zaxxer/nuprocess/internal/BaseEventProcessor
  super_class: #46                        // java/lang/Object
  interfaces: 1, fields: 9, methods: 8, attributes: 2
Constant pool:
    #1 = Fieldref           #45.#99       // com/zaxxer/nuprocess/internal/BaseEventProcessor.LINGER_ITERATIONS:I
    #2 = Methodref          #45.#100      // com/zaxxer/nuprocess/internal/BaseEventProcessor."<init>":(I)V
    #3 = Methodref          #46.#101      // java/lang/Object."<init>":()V
    #4 = Fieldref           #45.#102      // com/zaxxer/nuprocess/internal/BaseEventProcessor.lingerIterations:I
    #5 = Class              #103          // java/util/concurrent/ConcurrentHashMap
    #6 = Methodref          #5.#101       // java/util/concurrent/ConcurrentHashMap."<init>":()V
    #7 = Fieldref           #45.#104      // com/zaxxer/nuprocess/internal/BaseEventProcessor.pidToProcessMap:Ljava/util/Map;
    #8 = Fieldref           #45.#105      // com/zaxxer/nuprocess/internal/BaseEventProcessor.fildesToProcessMap:Ljava/util/Map;
    #9 = Class              #106          // java/util/concurrent/atomic/AtomicBoolean
   #10 = Methodref          #9.#101       // java/util/concurrent/atomic/AtomicBoolean."<init>":()V
   #11 = Fieldref           #45.#107      // com/zaxxer/nuprocess/internal/BaseEventProcessor.isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
   #12 = Fieldref           #45.#108      // com/zaxxer/nuprocess/internal/BaseEventProcessor.startBarrier:Ljava/util/concurrent/CyclicBarrier;
   #13 = Methodref          #21.#109      // java/util/concurrent/CyclicBarrier.await:()I
   #14 = InterfaceMethodref #110.#111     // java/util/Map.isEmpty:()Z
   #15 = Methodref          #9.#112       // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
   #16 = Fieldref           #45.#113      // com/zaxxer/nuprocess/internal/BaseEventProcessor.shutdown:Z
   #17 = Methodref          #45.#114      // com/zaxxer/nuprocess/internal/BaseEventProcessor.process:()Z
   #18 = Methodref          #45.#115      // com/zaxxer/nuprocess/internal/BaseEventProcessor.close:()V
   #19 = Class              #116          // java/lang/Exception
   #20 = Methodref          #9.#117       // java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
   #21 = Class              #118          // java/util/concurrent/CyclicBarrier
   #22 = Methodref          #21.#100      // java/util/concurrent/CyclicBarrier."<init>":(I)V
   #23 = InterfaceMethodref #110.#119     // java/util/Map.values:()Ljava/util/Collection;
   #24 = Class              #120          // com/sun/jna/ptr/IntByReference
   #25 = Methodref          #24.#101      // com/sun/jna/ptr/IntByReference."<init>":()V
   #26 = InterfaceMethodref #92.#121      // java/util/Collection.iterator:()Ljava/util/Iterator;
   #27 = InterfaceMethodref #93.#122      // java/util/Iterator.hasNext:()Z
   #28 = InterfaceMethodref #93.#123      // java/util/Iterator.next:()Ljava/lang/Object;
   #29 = Class              #124          // com/zaxxer/nuprocess/internal/BasePosixProcess
   #30 = Methodref          #29.#125      // com/zaxxer/nuprocess/internal/BasePosixProcess.getPid:()I
   #31 = Class              #126          // com/zaxxer/nuprocess/internal/LibC
   #32 = Methodref          #31.#127      // com/zaxxer/nuprocess/internal/LibC.kill:(II)I
   #33 = Class              #128          // java/lang/Integer
   #34 = Integer            2147483646
   #35 = Methodref          #29.#129      // com/zaxxer/nuprocess/internal/BasePosixProcess.onExit:(I)V
   #36 = Methodref          #31.#130      // com/zaxxer/nuprocess/internal/LibC.waitpid:(ILcom/sun/jna/ptr/IntByReference;I)I
   #37 = String             #131          // com.zaxxer.nuprocess.lingerTimeMs
   #38 = Methodref          #33.#132      // java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
   #39 = Methodref          #33.#133      // java/lang/Integer.intValue:()I
   #40 = Methodref          #134.#135     // java/lang/Math.max:(II)I
   #41 = Fieldref           #45.#136      // com/zaxxer/nuprocess/internal/BaseEventProcessor.LINGER_TIME_MS:I
   #42 = String             #137          // com.zaxxer.nuprocess.deadPoolPollMs
   #43 = Methodref          #134.#138     // java/lang/Math.min:(II)I
   #44 = Fieldref           #45.#139      // com/zaxxer/nuprocess/internal/BaseEventProcessor.DEADPOOL_POLL_INTERVAL:I
   #45 = Class              #140          // com/zaxxer/nuprocess/internal/BaseEventProcessor
   #46 = Class              #141          // java/lang/Object
   #47 = Class              #142          // com/zaxxer/nuprocess/internal/IEventProcessor
   #48 = Utf8               LINGER_TIME_MS
   #49 = Utf8               I
   #50 = Utf8               DEADPOOL_POLL_INTERVAL
   #51 = Utf8               LINGER_ITERATIONS
   #52 = Utf8               lingerIterations
   #53 = Utf8               pidToProcessMap
   #54 = Utf8               Ljava/util/Map;
   #55 = Utf8               Signature
   #56 = Utf8               Ljava/util/Map<Ljava/lang/Integer;TT;>;
   #57 = Utf8               fildesToProcessMap
   #58 = Utf8               shutdown
   #59 = Utf8               Z
   #60 = Utf8               startBarrier
   #61 = Utf8               Ljava/util/concurrent/CyclicBarrier;
   #62 = Utf8               isRunning
   #63 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;
   #64 = Utf8               <init>
   #65 = Utf8               ()V
   #66 = Utf8               Code
   #67 = Utf8               LineNumberTable
   #68 = Utf8               LocalVariableTable
   #69 = Utf8               this
   #70 = Utf8               Lcom/zaxxer/nuprocess/internal/BaseEventProcessor;
   #71 = Utf8               LocalVariableTypeTable
   #72 = Utf8               Lcom/zaxxer/nuprocess/internal/BaseEventProcessor<TT;>;
   #73 = Utf8               (I)V
   #74 = Utf8               run
   #75 = Utf8               idleCount
   #76 = Utf8               e
   #77 = Utf8               Ljava/lang/Exception;
   #78 = Utf8               StackMapTable
   #79 = Class              #143          // java/lang/Throwable
   #80 = Utf8               getSpawnBarrier
   #81 = Utf8               ()Ljava/util/concurrent/CyclicBarrier;
   #82 = Utf8               checkAndSetRunning
   #83 = Utf8               ()Z
   #84 = Utf8               process
   #85 = Utf8               Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
   #86 = Utf8               processes
   #87 = Utf8               Ljava/util/Collection;
   #88 = Utf8               exitCode
   #89 = Utf8               Lcom/sun/jna/ptr/IntByReference;
   #90 = Utf8               TT;
   #91 = Utf8               Ljava/util/Collection<TT;>;
   #92 = Class              #144          // java/util/Collection
   #93 = Class              #145          // java/util/Iterator
   #94 = Utf8               close
   #95 = Utf8               <clinit>
   #96 = Utf8               <T:Lcom/zaxxer/nuprocess/internal/BasePosixProcess;>Ljava/lang/Object;Lcom/zaxxer/nuprocess/internal/IEventProcessor<TT;>;
   #97 = Utf8               SourceFile
   #98 = Utf8               BaseEventProcessor.java
   #99 = NameAndType        #51:#49       // LINGER_ITERATIONS:I
  #100 = NameAndType        #64:#73       // "<init>":(I)V
  #101 = NameAndType        #64:#65       // "<init>":()V
  #102 = NameAndType        #52:#49       // lingerIterations:I
  #103 = Utf8               java/util/concurrent/ConcurrentHashMap
  #104 = NameAndType        #53:#54       // pidToProcessMap:Ljava/util/Map;
  #105 = NameAndType        #57:#54       // fildesToProcessMap:Ljava/util/Map;
  #106 = Utf8               java/util/concurrent/atomic/AtomicBoolean
  #107 = NameAndType        #62:#63       // isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
  #108 = NameAndType        #60:#61       // startBarrier:Ljava/util/concurrent/CyclicBarrier;
  #109 = NameAndType        #146:#147     // await:()I
  #110 = Class              #148          // java/util/Map
  #111 = NameAndType        #149:#83      // isEmpty:()Z
  #112 = NameAndType        #150:#151     // compareAndSet:(ZZ)Z
  #113 = NameAndType        #58:#59       // shutdown:Z
  #114 = NameAndType        #84:#83       // process:()Z
  #115 = NameAndType        #94:#65       // close:()V
  #116 = Utf8               java/lang/Exception
  #117 = NameAndType        #152:#153     // set:(Z)V
  #118 = Utf8               java/util/concurrent/CyclicBarrier
  #119 = NameAndType        #154:#155     // values:()Ljava/util/Collection;
  #120 = Utf8               com/sun/jna/ptr/IntByReference
  #121 = NameAndType        #156:#157     // iterator:()Ljava/util/Iterator;
  #122 = NameAndType        #158:#83      // hasNext:()Z
  #123 = NameAndType        #159:#160     // next:()Ljava/lang/Object;
  #124 = Utf8               com/zaxxer/nuprocess/internal/BasePosixProcess
  #125 = NameAndType        #161:#147     // getPid:()I
  #126 = Utf8               com/zaxxer/nuprocess/internal/LibC
  #127 = NameAndType        #162:#163     // kill:(II)I
  #128 = Utf8               java/lang/Integer
  #129 = NameAndType        #164:#73      // onExit:(I)V
  #130 = NameAndType        #165:#166     // waitpid:(ILcom/sun/jna/ptr/IntByReference;I)I
  #131 = Utf8               com.zaxxer.nuprocess.lingerTimeMs
  #132 = NameAndType        #167:#168     // getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
  #133 = NameAndType        #169:#147     // intValue:()I
  #134 = Class              #170          // java/lang/Math
  #135 = NameAndType        #171:#163     // max:(II)I
  #136 = NameAndType        #48:#49       // LINGER_TIME_MS:I
  #137 = Utf8               com.zaxxer.nuprocess.deadPoolPollMs
  #138 = NameAndType        #172:#163     // min:(II)I
  #139 = NameAndType        #50:#49       // DEADPOOL_POLL_INTERVAL:I
  #140 = Utf8               com/zaxxer/nuprocess/internal/BaseEventProcessor
  #141 = Utf8               java/lang/Object
  #142 = Utf8               com/zaxxer/nuprocess/internal/IEventProcessor
  #143 = Utf8               java/lang/Throwable
  #144 = Utf8               java/util/Collection
  #145 = Utf8               java/util/Iterator
  #146 = Utf8               await
  #147 = Utf8               ()I
  #148 = Utf8               java/util/Map
  #149 = Utf8               isEmpty
  #150 = Utf8               compareAndSet
  #151 = Utf8               (ZZ)Z
  #152 = Utf8               set
  #153 = Utf8               (Z)V
  #154 = Utf8               values
  #155 = Utf8               ()Ljava/util/Collection;
  #156 = Utf8               iterator
  #157 = Utf8               ()Ljava/util/Iterator;
  #158 = Utf8               hasNext
  #159 = Utf8               next
  #160 = Utf8               ()Ljava/lang/Object;
  #161 = Utf8               getPid
  #162 = Utf8               kill
  #163 = Utf8               (II)I
  #164 = Utf8               onExit
  #165 = Utf8               waitpid
  #166 = Utf8               (ILcom/sun/jna/ptr/IntByReference;I)I
  #167 = Utf8               getInteger
  #168 = Utf8               (Ljava/lang/String;I)Ljava/lang/Integer;
  #169 = Utf8               intValue
  #170 = Utf8               java/lang/Math
  #171 = Utf8               max
  #172 = Utf8               min
{
  public static final int LINGER_TIME_MS;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  protected static final int DEADPOOL_POLL_INTERVAL;
    descriptor: I
    flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL

  protected static final int LINGER_ITERATIONS;
    descriptor: I
    flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL

  private final int lingerIterations;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  protected java.util.Map<java.lang.Integer, T> pidToProcessMap;
    descriptor: Ljava/util/Map;
    flags: (0x0004) ACC_PROTECTED
    Signature: #56                          // Ljava/util/Map<Ljava/lang/Integer;TT;>;

  protected java.util.Map<java.lang.Integer, T> fildesToProcessMap;
    descriptor: Ljava/util/Map;
    flags: (0x0004) ACC_PROTECTED
    Signature: #56                          // Ljava/util/Map<Ljava/lang/Integer;TT;>;

  protected volatile boolean shutdown;
    descriptor: Z
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  private java.util.concurrent.CyclicBarrier startBarrier;
    descriptor: Ljava/util/concurrent/CyclicBarrier;
    flags: (0x0002) ACC_PRIVATE

  private java.util.concurrent.atomic.AtomicBoolean isRunning;
    descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0002) ACC_PRIVATE

  public com.zaxxer.nuprocess.internal.BaseEventProcessor();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #1                  // Field LINGER_ITERATIONS:I
         4: invokespecial #2                  // Method "<init>":(I)V
         7: return
      LineNumberTable:
        line 56: 0
        line 57: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor<TT;>;

  public com.zaxxer.nuprocess.internal.BaseEventProcessor(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokespecial #3                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: iload_1
         6: putfield      #4                  // Field lingerIterations:I
         9: aload_0
        10: new           #5                  // class java/util/concurrent/ConcurrentHashMap
        13: dup
        14: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        17: putfield      #7                  // Field pidToProcessMap:Ljava/util/Map;
        20: aload_0
        21: new           #5                  // class java/util/concurrent/ConcurrentHashMap
        24: dup
        25: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        28: putfield      #8                  // Field fildesToProcessMap:Ljava/util/Map;
        31: aload_0
        32: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
        35: dup
        36: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
        39: putfield      #11                 // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
        42: return
      LineNumberTable:
        line 60: 0
        line 61: 4
        line 62: 9
        line 63: 20
        line 64: 31
        line 65: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor;
            0      43     1 lingerIterations   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor<TT;>;

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: getfield      #12                 // Field startBarrier:Ljava/util/concurrent/CyclicBarrier;
         4: ifnull        15
         7: aload_0
         8: getfield      #12                 // Field startBarrier:Ljava/util/concurrent/CyclicBarrier;
        11: invokevirtual #13                 // Method java/util/concurrent/CyclicBarrier.await:()I
        14: pop
        15: iconst_0
        16: istore_1
        17: aload_0
        18: getfield      #11                 // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
        21: iload_1
        22: aload_0
        23: getfield      #4                  // Field lingerIterations:I
        26: if_icmple     45
        29: aload_0
        30: getfield      #7                  // Field pidToProcessMap:Ljava/util/Map;
        33: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
        38: ifeq          45
        41: iconst_1
        42: goto          46
        45: iconst_0
        46: iconst_0
        47: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
        50: ifne          78
        53: aload_0
        54: getfield      #16                 // Field shutdown:Z
        57: ifne          71
        60: aload_0
        61: invokevirtual #17                 // Method process:()Z
        64: ifeq          71
        67: iconst_0
        68: goto          74
        71: iload_1
        72: iconst_1
        73: iadd
        74: istore_1
        75: goto          17
        78: aload_0
        79: getfield      #12                 // Field startBarrier:Ljava/util/concurrent/CyclicBarrier;
        82: ifnonnull     129
        85: aload_0
        86: invokevirtual #18                 // Method close:()V
        89: goto          129
        92: astore_1
        93: aload_0
        94: getfield      #11                 // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
        97: iconst_0
        98: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       101: aload_0
       102: getfield      #12                 // Field startBarrier:Ljava/util/concurrent/CyclicBarrier;
       105: ifnonnull     129
       108: aload_0
       109: invokevirtual #18                 // Method close:()V
       112: goto          129
       115: astore_2
       116: aload_0
       117: getfield      #12                 // Field startBarrier:Ljava/util/concurrent/CyclicBarrier;
       120: ifnonnull     127
       123: aload_0
       124: invokevirtual #18                 // Method close:()V
       127: aload_2
       128: athrow
       129: return
      Exception table:
         from    to  target type
             0    78    92   Class java/lang/Exception
             0    78   115   any
            92   101   115   any
      LineNumberTable:
        line 75: 0
        line 76: 7
        line 79: 15
        line 80: 17
        line 81: 53
        line 89: 78
        line 92: 85
        line 84: 92
        line 86: 93
        line 89: 101
        line 92: 108
        line 89: 115
        line 92: 123
        line 94: 127
        line 95: 129
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      61     1 idleCount   I
           93       8     1     e   Ljava/lang/Exception;
            0     130     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0     130     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor<TT;>;
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 91 /* same_locals_1_stack_item */
          stack = [ class java/util/concurrent/atomic/AtomicBoolean ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class com/zaxxer/nuprocess/internal/BaseEventProcessor, int ]
          stack = [ class java/util/concurrent/atomic/AtomicBoolean, int ]
        frame_type = 24 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class java/lang/Throwable ]
        frame_type = 249 /* chop */
          offset_delta = 1

  public java.util.concurrent.CyclicBarrier getSpawnBarrier();
    descriptor: ()Ljava/util/concurrent/CyclicBarrier;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: new           #21                 // class java/util/concurrent/CyclicBarrier
         4: dup
         5: iconst_2
         6: invokespecial #22                 // Method java/util/concurrent/CyclicBarrier."<init>":(I)V
         9: putfield      #12                 // Field startBarrier:Ljava/util/concurrent/CyclicBarrier;
        12: aload_0
        13: getfield      #12                 // Field startBarrier:Ljava/util/concurrent/CyclicBarrier;
        16: areturn
      LineNumberTable:
        line 101: 0
        line 102: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor<TT;>;

  public boolean checkAndSetRunning();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #11                 // Field isRunning:Ljava/util/concurrent/atomic/AtomicBoolean;
         4: iconst_0
         5: iconst_1
         6: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
         9: ireturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor<TT;>;

  public void shutdown();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: iconst_1
         2: putfield      #16                 // Field shutdown:Z
         5: aload_0
         6: getfield      #7                  // Field pidToProcessMap:Ljava/util/Map;
         9: invokeinterface #23,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
        14: astore_1
        15: new           #24                 // class com/sun/jna/ptr/IntByReference
        18: dup
        19: invokespecial #25                 // Method com/sun/jna/ptr/IntByReference."<init>":()V
        22: astore_2
        23: aload_1
        24: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
        29: astore_3
        30: aload_3
        31: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        36: ifeq          82
        39: aload_3
        40: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        45: checkcast     #29                 // class com/zaxxer/nuprocess/internal/BasePosixProcess
        48: astore        4
        50: aload         4
        52: invokevirtual #30                 // Method com/zaxxer/nuprocess/internal/BasePosixProcess.getPid:()I
        55: bipush        15
        57: invokestatic  #32                 // Method com/zaxxer/nuprocess/internal/LibC.kill:(II)I
        60: pop
        61: aload         4
        63: ldc           #34                 // int 2147483646
        65: invokevirtual #35                 // Method com/zaxxer/nuprocess/internal/BasePosixProcess.onExit:(I)V
        68: aload         4
        70: invokevirtual #30                 // Method com/zaxxer/nuprocess/internal/BasePosixProcess.getPid:()I
        73: aload_2
        74: iconst_1
        75: invokestatic  #36                 // Method com/zaxxer/nuprocess/internal/LibC.waitpid:(ILcom/sun/jna/ptr/IntByReference;I)I
        78: pop
        79: goto          30
        82: return
      LineNumberTable:
        line 116: 0
        line 117: 5
        line 118: 15
        line 119: 23
        line 120: 50
        line 121: 61
        line 122: 68
        line 123: 79
        line 124: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           50      29     4 process   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0      83     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor;
           15      68     1 processes   Ljava/util/Collection;
           23      60     2 exitCode   Lcom/sun/jna/ptr/IntByReference;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           50      29     4 process   TT;
            0      83     0  this   Lcom/zaxxer/nuprocess/internal/BaseEventProcessor<TT;>;
           15      68     1 processes   Ljava/util/Collection<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ class java/util/Collection, class com/sun/jna/ptr/IntByReference, class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 51

  protected abstract void close();
    descriptor: ()V
    flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: sipush        1000
         3: ldc           #37                 // String com.zaxxer.nuprocess.lingerTimeMs
         5: sipush        2500
         8: invokestatic  #38                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
        11: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
        14: invokestatic  #40                 // Method java/lang/Math.max:(II)I
        17: putstatic     #41                 // Field LINGER_TIME_MS:I
        20: getstatic     #41                 // Field LINGER_TIME_MS:I
        23: bipush        100
        25: ldc           #42                 // String com.zaxxer.nuprocess.deadPoolPollMs
        27: sipush        250
        30: invokestatic  #38                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
        33: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
        36: invokestatic  #40                 // Method java/lang/Math.max:(II)I
        39: invokestatic  #43                 // Method java/lang/Math.min:(II)I
        42: putstatic     #44                 // Field DEADPOOL_POLL_INTERVAL:I
        45: getstatic     #41                 // Field LINGER_TIME_MS:I
        48: getstatic     #44                 // Field DEADPOOL_POLL_INTERVAL:I
        51: idiv
        52: putstatic     #1                  // Field LINGER_ITERATIONS:I
        55: return
      LineNumberTable:
        line 47: 0
        line 49: 20
        line 51: 45
        line 52: 55
}
Signature: #96                          // <T:Lcom/zaxxer/nuprocess/internal/BasePosixProcess;>Ljava/lang/Object;Lcom/zaxxer/nuprocess/internal/IEventProcessor<TT;>;
SourceFile: "BaseEventProcessor.java"
