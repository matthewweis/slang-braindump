Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/bitcodec/Spec$RawImpl.class
  Last modified May 29, 2022; size 9867 bytes
  SHA-256 checksum 5d15aeffd9baadc632c44505b3b92e74cfb3d55fa0da80610b541b754c0a6e18
  Compiled from "Spec.scala"
public final class org.sireum.bitcodec.Spec$RawImpl<T extends java.lang.Object> extends java.lang.Object implements org.sireum.bitcodec.Spec, org.sireum.bitcodec.Spec$Poly
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/bitcodec/Spec$RawImpl
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 9, methods: 33, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/bitcodec/Spec$RawImpl
    #2 = Class              #1            // org/sireum/bitcodec/Spec$RawImpl
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/bitcodec/Spec;Lorg/sireum/bitcodec/Spec$Poly;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/bitcodec/Spec
    #7 = Class              #6            // org/sireum/bitcodec/Spec
    #8 = Utf8               org/sireum/bitcodec/Spec$Poly
    #9 = Class              #8            // org/sireum/bitcodec/Spec$Poly
   #10 = Utf8               Spec.scala
   #11 = Utf8               Poly
   #12 = Utf8               org/sireum/bitcodec/Spec$PolyDesc
   #13 = Class              #12           // org/sireum/bitcodec/Spec$PolyDesc
   #14 = Utf8               PolyDesc
   #15 = Utf8               org/sireum/bitcodec/Spec$PolyDesc$
   #16 = Class              #15           // org/sireum/bitcodec/Spec$PolyDesc$
   #17 = Utf8               PolyDesc$
   #18 = Utf8               RawImpl
   #19 = Utf8               hashCode
   #20 = Utf8               I
   #21 = Utf8               $content
   #22 = Utf8               Lscala/collection/immutable/Seq;
   #23 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #24 = Utf8               _name
   #25 = Utf8               Ljava/lang/String;
   #26 = Utf8               _maxSize
   #27 = Utf8               Lorg/sireum/Z;
   #28 = Utf8               _dependsOn
   #29 = Utf8               Lorg/sireum/IS;
   #30 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
   #31 = Utf8               _size
   #32 = Utf8               Lscala/Function1;
   #33 = Utf8               Lscala/Function1<TT;Lorg/sireum/Z;>;
   #34 = Utf8               polyDesc
   #35 = Utf8               Lorg/sireum/bitcodec/Spec$PolyDesc;
   #36 = Utf8               maxSizeOpt
   #37 = Utf8               Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;
   #38 = Utf8               bitmap$0
   #39 = Utf8               B
   #40 = Utf8               toJSON
   #41 = Utf8               (Z)Ljava/lang/String;
   #42 = Utf8               isCompact
   #43 = Utf8               toJSON$
   #44 = Utf8               (Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #45 = NameAndType        #43:#44       // toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #46 = InterfaceMethodref #7.#45        // org/sireum/bitcodec/Spec.toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
   #47 = Utf8               this
   #48 = Utf8               Lorg/sireum/bitcodec/Spec$RawImpl;
   #49 = Utf8               Z
   #50 = Utf8               hash
   #51 = Utf8               ()Lorg/sireum/Z;
   #52 = Utf8               org/sireum/DatatypeSig
   #53 = Class              #52           // org/sireum/DatatypeSig
   #54 = Utf8               hash$
   #55 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #56 = NameAndType        #54:#55       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #57 = InterfaceMethodref #53.#56       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #58 = Utf8               $cannotMixImmutableAndMutable
   #59 = Utf8               ()Lscala/runtime/Nothing$;
   #60 = Utf8               org/sireum/Immutable
   #61 = Class              #60           // org/sireum/Immutable
   #62 = Utf8               $cannotMixImmutableAndMutable$
   #63 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #64 = NameAndType        #62:#63       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #65 = InterfaceMethodref #61.#64       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #66 = Utf8               $hasEquals
   #67 = Utf8               ()Z
   #68 = Utf8               $hasEquals$
   #69 = Utf8               (Lorg/sireum/Immutable;)Z
   #70 = NameAndType        #68:#69       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #71 = InterfaceMethodref #61.#70       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #72 = Utf8               $hasString
   #73 = Utf8               $hasString$
   #74 = NameAndType        #73:#69       // $hasString$:(Lorg/sireum/Immutable;)Z
   #75 = InterfaceMethodref #61.#74       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #76 = Utf8               $clone
   #77 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #78 = Utf8               org/sireum/$internal/ImmutableMarker
   #79 = Class              #78           // org/sireum/$internal/ImmutableMarker
   #80 = Utf8               $clone$
   #81 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #82 = NameAndType        #80:#81       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #83 = InterfaceMethodref #79.#82       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #84 = Utf8               maxSizeOpt$lzycompute
   #85 = Utf8               ()Lscala/Function1;
   #86 = Utf8               ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;
   #87 = NameAndType        #38:#39       // bitmap$0:B
   #88 = Fieldref           #2.#87        // org/sireum/bitcodec/Spec$RawImpl.bitmap$0:B
   #89 = Utf8               maxSizeOpt$
   #90 = Utf8               (Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #91 = NameAndType        #89:#90       // maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #92 = InterfaceMethodref #7.#91        // org/sireum/bitcodec/Spec.maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
   #93 = NameAndType        #36:#32       // maxSizeOpt:Lscala/Function1;
   #94 = Fieldref           #2.#93        // org/sireum/bitcodec/Spec$RawImpl.maxSizeOpt:Lscala/Function1;
   #95 = Utf8               java/lang/Throwable
   #96 = Class              #95           // java/lang/Throwable
   #97 = NameAndType        #84:#85       // maxSizeOpt$lzycompute:()Lscala/Function1;
   #98 = Methodref          #2.#97        // org/sireum/bitcodec/Spec$RawImpl.maxSizeOpt$lzycompute:()Lscala/Function1;
   #99 = Utf8               scala/Function1
  #100 = Class              #99           // scala/Function1
  #101 = Utf8               name
  #102 = Utf8               ()Ljava/lang/String;
  #103 = NameAndType        #24:#25       // _name:Ljava/lang/String;
  #104 = Fieldref           #2.#103       // org/sireum/bitcodec/Spec$RawImpl._name:Ljava/lang/String;
  #105 = Utf8               getName
  #106 = Utf8               maxSize
  #107 = NameAndType        #26:#27       // _maxSize:Lorg/sireum/Z;
  #108 = Fieldref           #2.#107       // org/sireum/bitcodec/Spec$RawImpl._maxSize:Lorg/sireum/Z;
  #109 = Utf8               getMaxSize
  #110 = Utf8               dependsOn
  #111 = Utf8               ()Lorg/sireum/IS;
  #112 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
  #113 = NameAndType        #28:#29       // _dependsOn:Lorg/sireum/IS;
  #114 = Fieldref           #2.#113       // org/sireum/bitcodec/Spec$RawImpl._dependsOn:Lorg/sireum/IS;
  #115 = Utf8               getDependsOn
  #116 = Utf8               size
  #117 = Utf8               ()Lscala/Function1<TT;Lorg/sireum/Z;>;
  #118 = NameAndType        #31:#32       // _size:Lscala/Function1;
  #119 = Fieldref           #2.#118       // org/sireum/bitcodec/Spec$RawImpl._size:Lscala/Function1;
  #120 = Utf8               getSize
  #121 = Utf8               toString
  #122 = NameAndType        #72:#67       // $hasString:()Z
  #123 = Methodref          #2.#122       // org/sireum/bitcodec/Spec$RawImpl.$hasString:()Z
  #124 = Utf8               string$
  #125 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #126 = NameAndType        #124:#125     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #127 = InterfaceMethodref #53.#126      // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #128 = Utf8               java/lang/StringBuilder
  #129 = Class              #128          // java/lang/StringBuilder
  #130 = Utf8               <init>
  #131 = Utf8               ()V
  #132 = NameAndType        #130:#131     // "<init>":()V
  #133 = Methodref          #129.#132     // java/lang/StringBuilder."<init>":()V
  #134 = String             #18           // RawImpl
  #135 = Utf8               append
  #136 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #137 = NameAndType        #135:#136     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #138 = Methodref          #129.#137     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #139 = Utf8               (C)Ljava/lang/StringBuilder;
  #140 = NameAndType        #135:#139     // append:(C)Ljava/lang/StringBuilder;
  #141 = Methodref          #129.#140     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #142 = Utf8               org/sireum/String$
  #143 = Class              #142          // org/sireum/String$
  #144 = Utf8               MODULE$
  #145 = Utf8               Lorg/sireum/String$;
  #146 = NameAndType        #144:#145     // MODULE$:Lorg/sireum/String$;
  #147 = Fieldref           #143.#146     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #148 = Utf8               org/sireum/String
  #149 = Class              #148          // org/sireum/String
  #150 = NameAndType        #101:#102     // name:()Ljava/lang/String;
  #151 = Methodref          #2.#150       // org/sireum/bitcodec/Spec$RawImpl.name:()Ljava/lang/String;
  #152 = Utf8               (Ljava/lang/String;)V
  #153 = NameAndType        #130:#152     // "<init>":(Ljava/lang/String;)V
  #154 = Methodref          #149.#153     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #155 = Utf8               escape
  #156 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #157 = NameAndType        #155:#156     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #158 = Methodref          #143.#157     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #159 = Utf8               ,
  #160 = String             #159          // ,
  #161 = NameAndType        #106:#51      // maxSize:()Lorg/sireum/Z;
  #162 = Methodref          #2.#161       // org/sireum/bitcodec/Spec$RawImpl.maxSize:()Lorg/sireum/Z;
  #163 = NameAndType        #110:#111     // dependsOn:()Lorg/sireum/IS;
  #164 = Methodref          #2.#163       // org/sireum/bitcodec/Spec$RawImpl.dependsOn:()Lorg/sireum/IS;
  #165 = NameAndType        #116:#85      // size:()Lscala/Function1;
  #166 = Methodref          #2.#165       // org/sireum/bitcodec/Spec$RawImpl.size:()Lscala/Function1;
  #167 = NameAndType        #121:#102     // toString:()Ljava/lang/String;
  #168 = Methodref          #129.#167     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #169 = Utf8               sb
  #170 = Utf8               Ljava/lang/StringBuilder;
  #171 = Utf8               java/lang/String
  #172 = Class              #171          // java/lang/String
  #173 = Utf8               string
  #174 = Methodref          #2.#167       // org/sireum/bitcodec/Spec$RawImpl.toString:()Ljava/lang/String;
  #175 = Utf8               apply
  #176 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #177 = NameAndType        #175:#176     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #178 = Methodref          #143.#177     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #179 = Utf8               hashCode$lzycompute
  #180 = Utf8               ()I
  #181 = NameAndType        #66:#67       // $hasEquals:()Z
  #182 = Methodref          #2.#181       // org/sireum/bitcodec/Spec$RawImpl.$hasEquals:()Z
  #183 = NameAndType        #19:#180      // hashCode:()I
  #184 = Methodref          #5.#183       // java/lang/Object.hashCode:()I
  #185 = Utf8               scala/package$
  #186 = Class              #185          // scala/package$
  #187 = Utf8               Lscala/package$;
  #188 = NameAndType        #144:#187     // MODULE$:Lscala/package$;
  #189 = Fieldref           #186.#188     // scala/package$.MODULE$:Lscala/package$;
  #190 = Utf8               Seq
  #191 = Utf8               ()Lscala/collection/immutable/Seq$;
  #192 = NameAndType        #190:#191     // Seq:()Lscala/collection/immutable/Seq$;
  #193 = Methodref          #186.#192     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #194 = Utf8               scala/runtime/ScalaRunTime$
  #195 = Class              #194          // scala/runtime/ScalaRunTime$
  #196 = Utf8               Lscala/runtime/ScalaRunTime$;
  #197 = NameAndType        #144:#196     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #198 = Fieldref           #195.#197     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #199 = Utf8               getClass
  #200 = Utf8               ()Ljava/lang/Class;
  #201 = NameAndType        #199:#200     // getClass:()Ljava/lang/Class;
  #202 = Methodref          #2.#201       // org/sireum/bitcodec/Spec$RawImpl.getClass:()Ljava/lang/Class;
  #203 = Utf8               java/lang/Class
  #204 = Class              #203          // java/lang/Class
  #205 = NameAndType        #105:#102     // getName:()Ljava/lang/String;
  #206 = Methodref          #204.#205     // java/lang/Class.getName:()Ljava/lang/String;
  #207 = Utf8               genericWrapArray
  #208 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #209 = NameAndType        #207:#208     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #210 = Methodref          #195.#209     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #211 = Utf8               scala/collection/immutable/Seq$
  #212 = Class              #211          // scala/collection/immutable/Seq$
  #213 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #214 = NameAndType        #175:#213     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #215 = Methodref          #212.#214     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #216 = Utf8               scala/collection/Seq
  #217 = Class              #216          // scala/collection/Seq
  #218 = InterfaceMethodref #217.#183     // scala/collection/Seq.hashCode:()I
  #219 = NameAndType        #19:#20       // hashCode:I
  #220 = Fieldref           #2.#219       // org/sireum/bitcodec/Spec$RawImpl.hashCode:I
  #221 = NameAndType        #179:#180     // hashCode$lzycompute:()I
  #222 = Methodref          #2.#221       // org/sireum/bitcodec/Spec$RawImpl.hashCode$lzycompute:()I
  #223 = Utf8               equals
  #224 = Utf8               (Ljava/lang/Object;)Z
  #225 = Utf8               o
  #226 = NameAndType        #223:#224     // equals:(Ljava/lang/Object;)Z
  #227 = Methodref          #5.#226       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #228 = Methodref          #2.#183       // org/sireum/bitcodec/Spec$RawImpl.hashCode:()I
  #229 = Utf8               Ljava/lang/Object;
  #230 = Utf8               org/sireum/Z
  #231 = Class              #230          // org/sireum/Z
  #232 = Utf8               org/sireum/IS
  #233 = Class              #232          // org/sireum/IS
  #234 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)Lorg/sireum/bitcodec/Spec$RawImpl;
  #235 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lscala/Function1<TT;Lorg/sireum/Z;>;)Lorg/sireum/bitcodec/Spec$RawImpl<TT;>;
  #236 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
  #237 = NameAndType        #130:#236     // "<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
  #238 = Methodref          #2.#237       // org/sireum/bitcodec/Spec$RawImpl."<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
  #239 = Utf8               apply$default$1
  #240 = Utf8               apply$default$2
  #241 = Utf8               apply$default$3
  #242 = Utf8               apply$default$4
  #243 = Utf8               $content$lzycompute
  #244 = Utf8               ()Lscala/collection/immutable/Seq;
  #245 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #246 = Utf8               scala/Tuple2
  #247 = Class              #246          // scala/Tuple2
  #248 = Utf8               type
  #249 = String             #248          // type
  #250 = Utf8               List
  #251 = Utf8               ()Lscala/collection/immutable/List$;
  #252 = NameAndType        #250:#251     // List:()Lscala/collection/immutable/List$;
  #253 = Methodref          #186.#252     // scala/package$.List:()Lscala/collection/immutable/List$;
  #254 = Utf8               org
  #255 = String             #254          // org
  #256 = Utf8               sireum
  #257 = String             #256          // sireum
  #258 = Utf8               bitcodec
  #259 = String             #258          // bitcodec
  #260 = Utf8               [Ljava/lang/Object;
  #261 = Class              #260          // "[Ljava/lang/Object;"
  #262 = Utf8               wrapRefArray
  #263 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #264 = NameAndType        #262:#263     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #265 = Methodref          #195.#264     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #266 = Utf8               scala/collection/immutable/List$
  #267 = Class              #266          // scala/collection/immutable/List$
  #268 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #269 = NameAndType        #175:#268     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #270 = Methodref          #267.#269     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #271 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #272 = NameAndType        #130:#271     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #273 = Methodref          #247.#272     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #274 = String             #101          // name
  #275 = String             #106          // maxSize
  #276 = String             #110          // dependsOn
  #277 = String             #116          // size
  #278 = Utf8               scala/collection/immutable/Seq
  #279 = Class              #278          // scala/collection/immutable/Seq
  #280 = NameAndType        #21:#22       // $content:Lscala/collection/immutable/Seq;
  #281 = Fieldref           #2.#280       // org/sireum/bitcodec/Spec$RawImpl.$content:Lscala/collection/immutable/Seq;
  #282 = NameAndType        #243:#244     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #283 = Methodref          #2.#282       // org/sireum/bitcodec/Spec$RawImpl.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #284 = Utf8               ()Lorg/sireum/bitcodec/Spec$PolyDesc;
  #285 = NameAndType        #34:#35       // polyDesc:Lorg/sireum/bitcodec/Spec$PolyDesc;
  #286 = Fieldref           #2.#285       // org/sireum/bitcodec/Spec$RawImpl.polyDesc:Lorg/sireum/bitcodec/Spec$PolyDesc;
  #287 = Utf8               isScalar
  #288 = Utf8               org/sireum/package$
  #289 = Class              #288          // org/sireum/package$
  #290 = Utf8               Lorg/sireum/package$;
  #291 = NameAndType        #144:#290     // MODULE$:Lorg/sireum/package$;
  #292 = Fieldref           #289.#291     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #293 = Utf8               F
  #294 = NameAndType        #293:#67      // F:()Z
  #295 = Methodref          #289.#294     // org/sireum/package$.F:()Z
  #296 = Utf8               computeMaxSizeOpt
  #297 = Utf8               (Lscala/Function1;)Lorg/sireum/Option;
  #298 = Utf8               (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;)Lorg/sireum/Option<Lorg/sireum/Z;>;
  #299 = Utf8               enumMaxSize
  #300 = Utf8               org/sireum/B$
  #301 = Class              #300          // org/sireum/B$
  #302 = Utf8               Lorg/sireum/B$;
  #303 = NameAndType        #144:#302     // MODULE$:Lorg/sireum/B$;
  #304 = Fieldref           #301.#303     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #305 = Utf8               org/sireum/Z$
  #306 = Class              #305          // org/sireum/Z$
  #307 = Utf8               Lorg/sireum/Z$;
  #308 = NameAndType        #144:#307     // MODULE$:Lorg/sireum/Z$;
  #309 = Fieldref           #306.#308     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #310 = Utf8               (I)Lorg/sireum/Z;
  #311 = NameAndType        #175:#310     // apply:(I)Lorg/sireum/Z;
  #312 = Methodref          #306.#311     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #313 = Utf8               $greater$eq
  #314 = Utf8               (Lorg/sireum/Z;)Z
  #315 = NameAndType        #313:#314     // $greater$eq:(Lorg/sireum/Z;)Z
  #316 = InterfaceMethodref #231.#315     // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
  #317 = Utf8               $4B
  #318 = Utf8               (Z)Z
  #319 = NameAndType        #317:#318     // $4B:(Z)Z
  #320 = Methodref          #301.#319     // org/sireum/B$.$4B:(Z)Z
  #321 = Utf8               org/sireum/Some$
  #322 = Class              #321          // org/sireum/Some$
  #323 = Utf8               Lorg/sireum/Some$;
  #324 = NameAndType        #144:#323     // MODULE$:Lorg/sireum/Some$;
  #325 = Fieldref           #322.#324     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #326 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #327 = NameAndType        #175:#326     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #328 = Methodref          #322.#327     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #329 = Utf8               org/sireum/None$
  #330 = Class              #329          // org/sireum/None$
  #331 = Utf8               Lorg/sireum/None$;
  #332 = NameAndType        #144:#331     // MODULE$:Lorg/sireum/None$;
  #333 = Fieldref           #330.#332     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #334 = Utf8               ()Lorg/sireum/None;
  #335 = NameAndType        #175:#334     // apply:()Lorg/sireum/None;
  #336 = Methodref          #330.#335     // org/sireum/None$.apply:()Lorg/sireum/None;
  #337 = Utf8               ()Ljava/lang/Object;
  #338 = NameAndType        #76:#77       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #339 = Methodref          #2.#338       // org/sireum/bitcodec/Spec$RawImpl.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #340 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lscala/Function1<TT;Lorg/sireum/Z;>;)V
  #341 = Utf8               __name
  #342 = Utf8               __maxSize
  #343 = Utf8               __dependsOn
  #344 = Utf8               __size
  #345 = Methodref          #5.#132       // java/lang/Object."<init>":()V
  #346 = Utf8               $init$
  #347 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #348 = NameAndType        #346:#347     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #349 = InterfaceMethodref #79.#348      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #350 = Utf8               (Lorg/sireum/Immutable;)V
  #351 = NameAndType        #346:#350     // $init$:(Lorg/sireum/Immutable;)V
  #352 = InterfaceMethodref #61.#351      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #353 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #354 = NameAndType        #346:#353     // $init$:(Lorg/sireum/DatatypeSig;)V
  #355 = InterfaceMethodref #53.#354      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #356 = Utf8               (Lorg/sireum/bitcodec/Spec;)V
  #357 = NameAndType        #346:#356     // $init$:(Lorg/sireum/bitcodec/Spec;)V
  #358 = InterfaceMethodref #7.#357       // org/sireum/bitcodec/Spec.$init$:(Lorg/sireum/bitcodec/Spec;)V
  #359 = Utf8               Lorg/sireum/bitcodec/Spec$PolyDesc$;
  #360 = NameAndType        #144:#359     // MODULE$:Lorg/sireum/bitcodec/Spec$PolyDesc$;
  #361 = Fieldref           #16.#360      // org/sireum/bitcodec/Spec$PolyDesc$.MODULE$:Lorg/sireum/bitcodec/Spec$PolyDesc$;
  #362 = Utf8               Raw
  #363 = String             #362          // Raw
  #364 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$PolyDesc;
  #365 = NameAndType        #175:#364     // apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$PolyDesc;
  #366 = Methodref          #16.#365      // org/sireum/bitcodec/Spec$PolyDesc$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$PolyDesc;
  #367 = Utf8               Signature
  #368 = Utf8               Code
  #369 = Utf8               LineNumberTable
  #370 = Utf8               LocalVariableTable
  #371 = Utf8               MethodParameters
  #372 = Utf8               StackMapTable
  #373 = Utf8               InnerClasses
  #374 = Utf8               SourceFile
  #375 = Utf8               ScalaInlineInfo
  #376 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #23                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final java.lang.String _name;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _maxSize;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _dependsOn;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final scala.Function1<T, org.sireum.Z> _size;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #33                          // Lscala/Function1<TT;Lorg/sireum/Z;>;

  private final org.sireum.bitcodec.Spec$PolyDesc polyDesc;
    descriptor: Lorg/sireum/bitcodec/Spec$PolyDesc;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt;
    descriptor: Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Signature: #37                          // Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public java.lang.String toJSON(boolean);
    descriptor: (Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #46                 // InterfaceMethod org/sireum/bitcodec/Spec.toJSON$:(Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
            0       6     1 isCompact   Z
    MethodParameters:
      Name                           Flags
      isCompact                      final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #57                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #65                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #83                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  private scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt$lzycompute();
    descriptor: ()Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #88                 // Field bitmap$0:B
         8: iconst_4
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     34
        15: aload_0
        16: aload_0
        17: invokestatic  #92                 // InterfaceMethod org/sireum/bitcodec/Spec.maxSizeOpt$:(Lorg/sireum/bitcodec/Spec;)Lscala/Function1;
        20: putfield      #94                 // Field maxSizeOpt:Lscala/Function1;
        23: aload_0
        24: aload_0
        25: getfield      #88                 // Field bitmap$0:B
        28: iconst_4
        29: ior
        30: i2b
        31: putfield      #88                 // Field bitmap$0:B
        34: aload_1
        35: monitorexit
        36: goto          42
        39: aload_1
        40: monitorexit
        41: athrow
        42: aload_0
        43: getfield      #94                 // Field maxSizeOpt:Lscala/Function1;
        46: areturn
      Exception table:
         from    to  target type
             4    34    39   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ class org/sireum/bitcodec/Spec$RawImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #86                          // ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  public scala.Function1<scala.Function1<org.sireum.String, org.sireum.Z>, org.sireum.Option<org.sireum.Z>> maxSizeOpt();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #88                 // Field bitmap$0:B
         4: iconst_4
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #98                 // Method maxSizeOpt$lzycompute:()Lscala/Function1;
        15: goto          22
        18: aload_0
        19: getfield      #94                 // Field maxSizeOpt:Lscala/Function1;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Function1 ]
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #86                          // ()Lscala/Function1<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;>;

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.Z maxSize();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _maxSize:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.Z getMaxSize();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _maxSize:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> dependsOn();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field _dependsOn:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getDependsOn();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field _dependsOn:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public scala.Function1<T, org.sireum.Z> size();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #119                // Field _size:Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #117                         // ()Lscala/Function1<TT;Lorg/sireum/Z;>;

  public scala.Function1<T, org.sireum.Z> getSize();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #119                // Field _size:Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #117                         // ()Lscala/Function1<TT;Lorg/sireum/Z;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #123                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #127                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          135
        14: new           #129                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #134                // String RawImpl
        25: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #147                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #149                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #151                // Method name:()Ljava/lang/String;
        48: invokespecial #154                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #158                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: ldc           #160                // String ,
        61: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: getstatic     #147                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        69: aload_0
        70: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
        73: invokevirtual #158                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: ldc           #160                // String ,
        83: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: getstatic     #147                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        91: aload_0
        92: invokevirtual #164                // Method dependsOn:()Lorg/sireum/IS;
        95: invokevirtual #158                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        98: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: ldc           #160                // String ,
       105: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: getstatic     #147                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       113: aload_0
       114: invokevirtual #166                // Method size:()Lscala/Function1;
       117: invokevirtual #158                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       120: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       123: pop
       124: aload_1
       125: bipush        41
       127: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: invokevirtual #168                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       135: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 120
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     113     1    sb   Ljava/lang/StringBuilder;
            0     136     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #123                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #127                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #147                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #174                // Method toString:()Ljava/lang/String;
        21: invokevirtual #178                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #88                 // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     109
        15: aload_0
        16: aload_0
        17: invokevirtual #182                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #184                // Method java/lang/Object.hashCode:()I
        27: goto          95
        30: getstatic     #189                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #193                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #198                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_4
        40: anewarray     #5                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #202                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #206                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: new           #149                // class org/sireum/String
        58: dup
        59: aload_0
        60: invokevirtual #151                // Method name:()Ljava/lang/String;
        63: invokespecial #154                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        66: aastore
        67: dup
        68: iconst_2
        69: aload_0
        70: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
        73: aastore
        74: dup
        75: iconst_3
        76: aload_0
        77: invokevirtual #164                // Method dependsOn:()Lorg/sireum/IS;
        80: aastore
        81: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        84: invokevirtual #215                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        87: checkcast     #217                // class scala/collection/Seq
        90: invokeinterface #218,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        95: putfield      #220                // Field hashCode:I
        98: aload_0
        99: aload_0
       100: getfield      #88                 // Field bitmap$0:B
       103: iconst_1
       104: ior
       105: i2b
       106: putfield      #88                 // Field bitmap$0:B
       109: aload_1
       110: monitorexit
       111: goto          117
       114: aload_1
       115: monitorexit
       116: athrow
       117: aload_0
       118: getfield      #220                // Field hashCode:I
       121: ireturn
      Exception table:
         from    to  target type
             4   109   114   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class org/sireum/bitcodec/Spec$RawImpl ]
          stack = [ class org/sireum/bitcodec/Spec$RawImpl ]
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class org/sireum/bitcodec/Spec$RawImpl ]
          stack = [ class org/sireum/bitcodec/Spec$RawImpl, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     122     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #88                 // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #222                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #220                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #182                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #227                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          169
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          169
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/bitcodec/Spec$RawImpl
        30: ifeq          160
        33: aload_3
        34: checkcast     #2                  // class org/sireum/bitcodec/Spec$RawImpl
        37: astore        4
        39: aload_0
        40: invokevirtual #228                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #228                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          156
        55: aload_0
        56: invokevirtual #151                // Method name:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #151                // Method name:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          155
        79: aload         5
        81: invokevirtual #227                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          155
        87: aload_0
        88: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
        91: aload         4
        93: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          155
       111: aload         6
       113: invokevirtual #227                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          155
       119: aload_0
       120: invokevirtual #164                // Method dependsOn:()Lorg/sireum/IS;
       123: aload         4
       125: invokevirtual #164                // Method dependsOn:()Lorg/sireum/IS;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          155
       143: aload         7
       145: invokevirtual #227                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          155
       151: iconst_1
       152: goto          156
       155: iconst_0
       156: istore_2
       157: goto          168
       160: goto          163
       163: iconst_0
       164: istore_2
       165: goto          168
       168: iload_2
       169: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/bitcodec/Spec$RawImpl ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$RawImpl, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$RawImpl, class java/lang/String, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$RawImpl, class java/lang/String, class org/sireum/Z, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class java/lang/Object, top, class java/lang/Object, class org/sireum/bitcodec/Spec$RawImpl ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/bitcodec/Spec$RawImpl, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     170     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
            0     170     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.bitcodec.Spec$RawImpl<T> apply(java.lang.String, org.sireum.Z, org.sireum.IS<org.sireum.Z, org.sireum.String>, scala.Function1<T, org.sireum.Z>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)Lorg/sireum/bitcodec/Spec$RawImpl;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #2                  // class org/sireum/bitcodec/Spec$RawImpl
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #238                // Method "<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
        12: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
            0      13     1  name   Ljava/lang/String;
            0      13     2 maxSize   Lorg/sireum/Z;
            0      13     3 dependsOn   Lorg/sireum/IS;
            0      13     4  size   Lscala/Function1;
    Signature: #235                         // (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lscala/Function1<TT;Lorg/sireum/Z;>;)Lorg/sireum/bitcodec/Spec$RawImpl<TT;>;
    MethodParameters:
      Name                           Flags
      name                           final
      maxSize                        final
      dependsOn                      final
      size                           final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #151                // Method name:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$3();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #164                // Method dependsOn:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public scala.Function1<T, org.sireum.Z> apply$default$4();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #166                // Method size:()Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #117                         // ()Lscala/Function1<TT;Lorg/sireum/Z;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #88                 // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     186
        15: aload_0
        16: getstatic     #189                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #193                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #198                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_5
        26: anewarray     #247                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #247                // class scala/Tuple2
        34: dup
        35: ldc           #249                // String type
        37: getstatic     #189                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #253                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #198                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #172                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #255                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc_w         #257                // String sireum
        60: aastore
        61: dup
        62: iconst_2
        63: ldc_w         #259                // String bitcodec
        66: aastore
        67: dup
        68: iconst_3
        69: ldc           #134                // String RawImpl
        71: aastore
        72: checkcast     #261                // class "[Ljava/lang/Object;"
        75: invokevirtual #265                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokevirtual #270                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        81: invokespecial #273                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        84: aastore
        85: dup
        86: iconst_1
        87: new           #247                // class scala/Tuple2
        90: dup
        91: ldc_w         #274                // String name
        94: new           #149                // class org/sireum/String
        97: dup
        98: aload_0
        99: invokevirtual #151                // Method name:()Ljava/lang/String;
       102: invokespecial #154                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       105: invokespecial #273                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       108: aastore
       109: dup
       110: iconst_2
       111: new           #247                // class scala/Tuple2
       114: dup
       115: ldc_w         #275                // String maxSize
       118: aload_0
       119: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
       122: invokespecial #273                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       125: aastore
       126: dup
       127: iconst_3
       128: new           #247                // class scala/Tuple2
       131: dup
       132: ldc_w         #276                // String dependsOn
       135: aload_0
       136: invokevirtual #164                // Method dependsOn:()Lorg/sireum/IS;
       139: invokespecial #273                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       142: aastore
       143: dup
       144: iconst_4
       145: new           #247                // class scala/Tuple2
       148: dup
       149: ldc_w         #277                // String size
       152: aload_0
       153: invokevirtual #166                // Method size:()Lscala/Function1;
       156: invokespecial #273                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       159: aastore
       160: checkcast     #261                // class "[Ljava/lang/Object;"
       163: invokevirtual #265                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       166: invokevirtual #215                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       169: checkcast     #279                // class scala/collection/immutable/Seq
       172: putfield      #281                // Field $content:Lscala/collection/immutable/Seq;
       175: aload_0
       176: aload_0
       177: getfield      #88                 // Field bitmap$0:B
       180: iconst_2
       181: ior
       182: i2b
       183: putfield      #88                 // Field bitmap$0:B
       186: aload_1
       187: monitorexit
       188: goto          194
       191: aload_1
       192: monitorexit
       193: athrow
       194: aload_0
       195: getfield      #281                // Field $content:Lscala/collection/immutable/Seq;
       198: areturn
      Exception table:
         from    to  target type
             4   186   191   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 186
          locals = [ class org/sireum/bitcodec/Spec$RawImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     199     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #245                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #88                 // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #283                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #281                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #245                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.bitcodec.Spec$PolyDesc polyDesc();
    descriptor: ()Lorg/sireum/bitcodec/Spec$PolyDesc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #286                // Field polyDesc:Lorg/sireum/bitcodec/Spec$PolyDesc;
         4: areturn
      LineNumberTable:
        line 425: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public boolean isScalar();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #292                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #295                // Method org/sireum/package$.F:()Z
         6: ireturn
      LineNumberTable:
        line 427: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.Option<org.sireum.Z> computeMaxSizeOpt(scala.Function1<org.sireum.String, org.sireum.Z>);
    descriptor: (Lscala/Function1;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #304                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
         7: getstatic     #309                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: iconst_0
        11: invokevirtual #312                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: invokeinterface #316,  2          // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
        19: invokevirtual #320                // Method org/sireum/B$.$4B:(Z)Z
        22: ifeq          38
        25: getstatic     #325                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        28: aload_0
        29: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
        32: invokevirtual #328                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        35: goto          44
        38: getstatic     #333                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        41: invokevirtual #336                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        44: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 38 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 430: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
            0      45     1 enumMaxSize   Lscala/Function1;
    Signature: #298                         // (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/Z;>;)Lorg/sireum/Option<Lorg/sireum/Z;>;
    MethodParameters:
      Name                           Flags
      enumMaxSize                    final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #339                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;

  public org.sireum.bitcodec.Spec$RawImpl(java.lang.String, org.sireum.Z, org.sireum.IS<org.sireum.Z, org.sireum.String>, scala.Function1<T, org.sireum.Z>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=5, args_size=5
         0: aload_0
         1: invokespecial #345                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #349                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #352                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #355                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: invokestatic  #358                // InterfaceMethod org/sireum/bitcodec/Spec.$init$:(Lorg/sireum/bitcodec/Spec;)V
        20: aload_0
        21: aload_1
        22: putfield      #104                // Field _name:Ljava/lang/String;
        25: aload_0
        26: aload_2
        27: putfield      #108                // Field _maxSize:Lorg/sireum/Z;
        30: aload_0
        31: aload_3
        32: putfield      #114                // Field _dependsOn:Lorg/sireum/IS;
        35: aload_0
        36: aload         4
        38: putfield      #119                // Field _size:Lscala/Function1;
        41: aload_0
        42: getstatic     #361                // Field org/sireum/bitcodec/Spec$PolyDesc$.MODULE$:Lorg/sireum/bitcodec/Spec$PolyDesc$;
        45: getstatic     #147                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        48: ldc_w         #363                // String Raw
        51: invokevirtual #178                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        54: aload_0
        55: invokevirtual #151                // Method name:()Ljava/lang/String;
        58: aload_0
        59: invokevirtual #162                // Method maxSize:()Lorg/sireum/Z;
        62: aload_0
        63: invokevirtual #164                // Method dependsOn:()Lorg/sireum/IS;
        66: getstatic     #333                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        69: invokevirtual #336                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        72: getstatic     #333                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        75: invokevirtual #336                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        78: invokevirtual #366                // Method org/sireum/bitcodec/Spec$PolyDesc$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/bitcodec/Spec$PolyDesc;
        81: putfield      #286                // Field polyDesc:Lorg/sireum/bitcodec/Spec$PolyDesc;
        84: return
      LineNumberTable:
        line 424: 0
        line 421: 20
        line 425: 41
        line 421: 84
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lorg/sireum/bitcodec/Spec$RawImpl;
            0      85     1 __name   Ljava/lang/String;
            0      85     2 __maxSize   Lorg/sireum/Z;
            0      85     3 __dependsOn   Lorg/sireum/IS;
            0      85     4 __size   Lscala/Function1;
    Signature: #340                         // (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lscala/Function1<TT;Lorg/sireum/Z;>;)V
    MethodParameters:
      Name                           Flags
      __name                         final
      __maxSize                      final
      __dependsOn                    final
      __size                         final
}
InnerClasses:
  public static #11= #9 of #7;            // Poly=class org/sireum/bitcodec/Spec$Poly of class org/sireum/bitcodec/Spec
  public static final #14= #13 of #7;     // PolyDesc=class org/sireum/bitcodec/Spec$PolyDesc of class org/sireum/bitcodec/Spec
  public static #17= #16 of #7;           // PolyDesc$=class org/sireum/bitcodec/Spec$PolyDesc$ of class org/sireum/bitcodec/Spec
  public static final #18= #2 of #7;      // RawImpl=class org/sireum/bitcodec/Spec$RawImpl of class org/sireum/bitcodec/Spec
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/bitcodec/Spec;Lorg/sireum/bitcodec/Spec$Poly;
SourceFile: "Spec.scala"
  ScalaInlineInfo: length = 0xA9 (unknown attribute)
   01 01 00 21 00 3A 00 3B 01 00 4C 01 51 01 00 4C
   00 4D 01 00 15 00 F4 01 00 F3 00 F4 01 00 42 00
   43 01 00 48 00 43 01 00 82 00 EC 01 00 AF 00 EA
   01 00 EF 00 66 01 00 F0 00 33 01 00 F1 00 6F 01
   00 F2 00 55 01 01 28 01 29 01 00 6E 00 6F 01 00
   DF 00 E0 01 00 73 00 6F 01 00 6D 00 33 01 00 69
   00 66 01 00 78 00 55 01 00 32 00 33 01 00 13 00
   B4 01 00 B3 00 B4 01 01 1F 00 43 01 00 6A 00 33
   01 00 24 00 55 01 00 54 00 55 01 00 65 00 66 01
   00 22 01 1C 01 00 74 00 55 01 00 AD 00 66 01 00
   28 00 29 01 00 79 00 66 01
  Scala: length = 0x0 (unknown attribute)

