Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/util/Print$.class
  Last modified May 29, 2022; size 23853 bytes
  SHA-256 checksum ff78b4d350953a775a5007295cfd4c470a2a86282033269993852aec00777817
  Compiled from "Print.scala"
public final class coursier.util.Print$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/util/Print$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 52, attributes: 5
Constant pool:
    #1 = Utf8               coursier/util/Print$
    #2 = Class              #1            // coursier/util/Print$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Print.scala
    #6 = Utf8               coursier/util/Print$Colors
    #7 = Class              #6            // coursier/util/Print$Colors
    #8 = Utf8               coursier/util/Print
    #9 = Class              #8            // coursier/util/Print
   #10 = Utf8               Colors
   #11 = Utf8               coursier/util/Print$Colors$
   #12 = Class              #11           // coursier/util/Print$Colors$
   #13 = Utf8
   #14 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #15 = Class              #14           // java/lang/invoke/MethodHandles$Lookup
   #16 = Utf8               java/lang/invoke/MethodHandles
   #17 = Class              #16           // java/lang/invoke/MethodHandles
   #18 = Utf8               Lookup
   #19 = Utf8               scala/math/Ordering$Int$
   #20 = Class              #19           // scala/math/Ordering$Int$
   #21 = Utf8               scala/math/Ordering
   #22 = Class              #21           // scala/math/Ordering
   #23 = Utf8               scala/math/Ordering$String$
   #24 = Class              #23           // scala/math/Ordering$String$
   #25 = Utf8               MODULE$
   #26 = Utf8               Lcoursier/util/Print$;
   #27 = Utf8               <clinit>
   #28 = Utf8               ()V
   #29 = Utf8               <init>
   #30 = NameAndType        #29:#28       // "<init>":()V
   #31 = Methodref          #2.#30        // coursier/util/Print$."<init>":()V
   #32 = NameAndType        #25:#26       // MODULE$:Lcoursier/util/Print$;
   #33 = Fieldref           #2.#32        // coursier/util/Print$.MODULE$:Lcoursier/util/Print$;
   #34 = Utf8               dependency
   #35 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/String;
   #36 = Utf8               dep
   #37 = Utf8               (Lcoursier/core/Dependency;Z)Ljava/lang/String;
   #38 = NameAndType        #34:#37       // dependency:(Lcoursier/core/Dependency;Z)Ljava/lang/String;
   #39 = Methodref          #2.#38        // coursier/util/Print$.dependency:(Lcoursier/core/Dependency;Z)Ljava/lang/String;
   #40 = Utf8               this
   #41 = Utf8               Lcoursier/core/Dependency;
   #42 = Utf8               printExclusions
   #43 = Utf8               java/lang/StringBuilder
   #44 = Class              #43           // java/lang/StringBuilder
   #45 = Integer            0
   #46 = Utf8               (I)V
   #47 = NameAndType        #29:#46       // "<init>":(I)V
   #48 = Methodref          #44.#47       // java/lang/StringBuilder."<init>":(I)V
   #49 = Integer            2
   #50 = Utf8               coursier/core/Dependency
   #51 = Class              #50           // coursier/core/Dependency
   #52 = Utf8               module
   #53 = Utf8               ()Lcoursier/core/Module;
   #54 = NameAndType        #52:#53       // module:()Lcoursier/core/Module;
   #55 = Methodref          #51.#54       // coursier/core/Dependency.module:()Lcoursier/core/Module;
   #56 = Utf8               append
   #57 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #58 = NameAndType        #56:#57       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #59 = Methodref          #44.#58       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #60 = Utf8               :
   #61 = String             #60           // :
   #62 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #63 = NameAndType        #56:#62       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #64 = Methodref          #44.#63       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #65 = Utf8               version
   #66 = Utf8               ()Ljava/lang/String;
   #67 = NameAndType        #65:#66       // version:()Ljava/lang/String;
   #68 = Methodref          #51.#67       // coursier/core/Dependency.version:()Ljava/lang/String;
   #69 = Utf8               configuration
   #70 = NameAndType        #69:#66       // configuration:()Ljava/lang/String;
   #71 = Methodref          #51.#70       // coursier/core/Dependency.configuration:()Ljava/lang/String;
   #72 = Utf8               toString
   #73 = NameAndType        #72:#66       // toString:()Ljava/lang/String;
   #74 = Methodref          #44.#73       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #75 = Utf8               exclusionsStr$1
   #76 = NameAndType        #75:#35       // exclusionsStr$1:(Lcoursier/core/Dependency;)Ljava/lang/String;
   #77 = Methodref          #2.#76        // coursier/util/Print$.exclusionsStr$1:(Lcoursier/core/Dependency;)Ljava/lang/String;
   #78 = String             #13           //
   #79 = Utf8               java/lang/String
   #80 = Class              #79           // java/lang/String
   #81 = Utf8               Z
   #82 = Utf8               dependenciesUnknownConfigs
   #83 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Ljava/lang/String;
   #84 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lcoursier/core/Project;>;)Ljava/lang/String;
   #85 = Utf8               deps
   #86 = Utf8               projects
   #87 = Utf8               dependenciesUnknownConfigs$default$4
   #88 = Utf8               ()Z
   #89 = NameAndType        #87:#88       // dependenciesUnknownConfigs$default$4:()Z
   #90 = Methodref          #2.#89        // coursier/util/Print$.dependenciesUnknownConfigs$default$4:()Z
   #91 = Utf8               dependenciesUnknownConfigs$default$5
   #92 = NameAndType        #91:#88       // dependenciesUnknownConfigs$default$5:()Z
   #93 = Methodref          #2.#92        // coursier/util/Print$.dependenciesUnknownConfigs$default$5:()Z
   #94 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;ZZZ)Ljava/lang/String;
   #95 = NameAndType        #82:#94       // dependenciesUnknownConfigs:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;ZZZ)Ljava/lang/String;
   #96 = Methodref          #2.#95        // coursier/util/Print$.dependenciesUnknownConfigs:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;ZZZ)Ljava/lang/String;
   #97 = Utf8               Lscala/collection/immutable/Seq;
   #98 = Utf8               Lscala/collection/immutable/Map;
   #99 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lcoursier/core/Project;>;ZZZ)Ljava/lang/String;
  #100 = Utf8               useFinalVersions
  #101 = Utf8               reorder
  #102 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #103 = MethodType         #102          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #104 = Utf8               $anonfun$dependenciesUnknownConfigs$1
  #105 = Utf8               (Lscala/collection/immutable/Map;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #106 = NameAndType        #104:#105     // $anonfun$dependenciesUnknownConfigs$1:(Lscala/collection/immutable/Map;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #107 = Methodref          #2.#106       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$1:(Lscala/collection/immutable/Map;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #108 = MethodHandle       6:#107        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$1:(Lscala/collection/immutable/Map;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #109 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #110 = MethodType         #109          //  (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #111 = Integer            5
  #112 = Integer            1
  #113 = Utf8               java/lang/invoke/LambdaMetafactory
  #114 = Class              #113          // java/lang/invoke/LambdaMetafactory
  #115 = Utf8               altMetafactory
  #116 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #117 = NameAndType        #115:#116     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #118 = Methodref          #114.#117     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #119 = MethodHandle       6:#118        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #120 = Utf8               apply
  #121 = Utf8               (Lscala/collection/immutable/Map;)Lscala/Function1;
  #122 = NameAndType        #120:#121     // apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #123 = InvokeDynamic      #0:#122       // #0:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #124 = Utf8               scala/collection/immutable/Seq
  #125 = Class              #124          // scala/collection/immutable/Seq
  #126 = Utf8               map
  #127 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #128 = NameAndType        #126:#127     // map:(Lscala/Function1;)Ljava/lang/Object;
  #129 = InterfaceMethodref #125.#128     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #130 = Utf8               $anonfun$dependenciesUnknownConfigs$4
  #131 = NameAndType        #130:#109     // $anonfun$dependenciesUnknownConfigs$4:(Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #132 = Methodref          #2.#131       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$4:(Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #133 = MethodHandle       6:#132        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$4:(Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #134 = Utf8               ()Lscala/Function1;
  #135 = NameAndType        #120:#134     // apply:()Lscala/Function1;
  #136 = InvokeDynamic      #1:#135       // #1:apply:()Lscala/Function1;
  #137 = Utf8               groupBy
  #138 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/Map;
  #139 = NameAndType        #137:#138     // groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
  #140 = InterfaceMethodref #125.#139     // scala/collection/immutable/Seq.groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
  #141 = Utf8               scala/collection/immutable/Map
  #142 = Class              #141          // scala/collection/immutable/Map
  #143 = Utf8               toVector
  #144 = Utf8               ()Lscala/collection/immutable/Vector;
  #145 = NameAndType        #143:#144     // toVector:()Lscala/collection/immutable/Vector;
  #146 = InterfaceMethodref #142.#145     // scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
  #147 = Utf8               $anonfun$dependenciesUnknownConfigs$5
  #148 = Utf8               (Lscala/Tuple2;)Lcoursier/core/Dependency;
  #149 = NameAndType        #147:#148     // $anonfun$dependenciesUnknownConfigs$5:(Lscala/Tuple2;)Lcoursier/core/Dependency;
  #150 = Methodref          #2.#149       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$5:(Lscala/Tuple2;)Lcoursier/core/Dependency;
  #151 = MethodHandle       6:#150        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$5:(Lscala/Tuple2;)Lcoursier/core/Dependency;
  #152 = MethodType         #148          //  (Lscala/Tuple2;)Lcoursier/core/Dependency;
  #153 = InvokeDynamic      #2:#135       // #2:apply:()Lscala/Function1;
  #154 = Utf8               scala/collection/immutable/Vector
  #155 = Class              #154          // scala/collection/immutable/Vector
  #156 = Methodref          #155.#128     // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
  #157 = Utf8               scala/collection/SeqOps
  #158 = Class              #157          // scala/collection/SeqOps
  #159 = Utf8               $anonfun$dependenciesUnknownConfigs$7
  #160 = Utf8               (Lcoursier/core/Dependency;)Lscala/Tuple4;
  #161 = NameAndType        #159:#160     // $anonfun$dependenciesUnknownConfigs$7:(Lcoursier/core/Dependency;)Lscala/Tuple4;
  #162 = Methodref          #2.#161       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$7:(Lcoursier/core/Dependency;)Lscala/Tuple4;
  #163 = MethodHandle       6:#162        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$7:(Lcoursier/core/Dependency;)Lscala/Tuple4;
  #164 = MethodType         #160          //  (Lcoursier/core/Dependency;)Lscala/Tuple4;
  #165 = InvokeDynamic      #3:#135       // #3:apply:()Lscala/Function1;
  #166 = Utf8               scala/math/Ordering$
  #167 = Class              #166          // scala/math/Ordering$
  #168 = Utf8               Lscala/math/Ordering$;
  #169 = NameAndType        #25:#168      // MODULE$:Lscala/math/Ordering$;
  #170 = Fieldref           #167.#169     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #171 = Utf8               coursier/core/Organization$
  #172 = Class              #171          // coursier/core/Organization$
  #173 = Utf8               Lcoursier/core/Organization$;
  #174 = NameAndType        #25:#173      // MODULE$:Lcoursier/core/Organization$;
  #175 = Fieldref           #172.#174     // coursier/core/Organization$.MODULE$:Lcoursier/core/Organization$;
  #176 = Utf8               ordering
  #177 = Utf8               ()Lscala/math/Ordering;
  #178 = NameAndType        #176:#177     // ordering:()Lscala/math/Ordering;
  #179 = Methodref          #172.#178     // coursier/core/Organization$.ordering:()Lscala/math/Ordering;
  #180 = Utf8               coursier/core/ModuleName$
  #181 = Class              #180          // coursier/core/ModuleName$
  #182 = Utf8               Lcoursier/core/ModuleName$;
  #183 = NameAndType        #25:#182      // MODULE$:Lcoursier/core/ModuleName$;
  #184 = Fieldref           #181.#183     // coursier/core/ModuleName$.MODULE$:Lcoursier/core/ModuleName$;
  #185 = Methodref          #181.#178     // coursier/core/ModuleName$.ordering:()Lscala/math/Ordering;
  #186 = Utf8               Lscala/math/Ordering$String$;
  #187 = NameAndType        #25:#186      // MODULE$:Lscala/math/Ordering$String$;
  #188 = Fieldref           #24.#187      // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #189 = Utf8               Tuple4
  #190 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #191 = NameAndType        #189:#190     // Tuple4:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #192 = Methodref          #167.#191     // scala/math/Ordering$.Tuple4:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #193 = Utf8               sortBy
  #194 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #195 = NameAndType        #193:#194     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #196 = InterfaceMethodref #158.#195     // scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #197 = Utf8               $anonfun$dependenciesUnknownConfigs$8
  #198 = Utf8               (ZLcoursier/core/Dependency;)Ljava/lang/String;
  #199 = NameAndType        #197:#198     // $anonfun$dependenciesUnknownConfigs$8:(ZLcoursier/core/Dependency;)Ljava/lang/String;
  #200 = Methodref          #2.#199       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$8:(ZLcoursier/core/Dependency;)Ljava/lang/String;
  #201 = MethodHandle       6:#200        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$8:(ZLcoursier/core/Dependency;)Ljava/lang/String;
  #202 = MethodType         #35           //  (Lcoursier/core/Dependency;)Ljava/lang/String;
  #203 = Utf8               (Z)Lscala/Function1;
  #204 = NameAndType        #120:#203     // apply:(Z)Lscala/Function1;
  #205 = InvokeDynamic      #4:#204       // #4:apply:(Z)Lscala/Function1;
  #206 = Utf8               distinct
  #207 = Utf8               ()Ljava/lang/Object;
  #208 = NameAndType        #206:#207     // distinct:()Ljava/lang/Object;
  #209 = InterfaceMethodref #125.#208     // scala/collection/immutable/Seq.distinct:()Ljava/lang/Object;
  #210 = Utf8               java/lang/System
  #211 = Class              #210          // java/lang/System
  #212 = Utf8               lineSeparator
  #213 = NameAndType        #212:#66      // lineSeparator:()Ljava/lang/String;
  #214 = Methodref          #211.#213     // java/lang/System.lineSeparator:()Ljava/lang/String;
  #215 = Utf8               mkString
  #216 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #217 = NameAndType        #215:#216     // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #218 = InterfaceMethodref #125.#217     // scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #219 = Utf8               deps0
  #220 = Utf8               deps1
  #221 = Utf8               l
  #222 = Utf8               l0
  #223 = Utf8               compatibleVersions
  #224 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #225 = Utf8               compatibleWith
  #226 = Utf8               selected
  #227 = Utf8               coursier/core/Parse$
  #228 = Class              #227          // coursier/core/Parse$
  #229 = Utf8               Lcoursier/core/Parse$;
  #230 = NameAndType        #25:#229      // MODULE$:Lcoursier/core/Parse$;
  #231 = Fieldref           #228.#230     // coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
  #232 = Utf8               versionConstraint
  #233 = Utf8               (Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #234 = NameAndType        #232:#233     // versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #235 = Methodref          #228.#234     // coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #236 = Utf8               coursier/core/VersionConstraint
  #237 = Class              #236          // coursier/core/VersionConstraint
  #238 = Utf8               interval
  #239 = Utf8               ()Lcoursier/core/VersionInterval;
  #240 = NameAndType        #238:#239     // interval:()Lcoursier/core/VersionInterval;
  #241 = Methodref          #237.#240     // coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
  #242 = Utf8               coursier/core/VersionInterval$
  #243 = Class              #242          // coursier/core/VersionInterval$
  #244 = Utf8               Lcoursier/core/VersionInterval$;
  #245 = NameAndType        #25:#244      // MODULE$:Lcoursier/core/VersionInterval$;
  #246 = Fieldref           #243.#245     // coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
  #247 = Utf8               zero
  #248 = NameAndType        #247:#239     // zero:()Lcoursier/core/VersionInterval;
  #249 = Methodref          #243.#248     // coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
  #250 = Utf8               coursier/core/VersionInterval
  #251 = Class              #250          // coursier/core/VersionInterval
  #252 = Utf8               equals
  #253 = Utf8               (Ljava/lang/Object;)Z
  #254 = NameAndType        #252:#253     // equals:(Ljava/lang/Object;)Z
  #255 = Methodref          #4.#254       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #256 = Utf8               scala/collection/ArrayOps$
  #257 = Class              #256          // scala/collection/ArrayOps$
  #258 = Utf8               Lscala/collection/ArrayOps$;
  #259 = NameAndType        #25:#258      // MODULE$:Lscala/collection/ArrayOps$;
  #260 = Fieldref           #257.#259     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #261 = Utf8               scala/Predef$
  #262 = Class              #261          // scala/Predef$
  #263 = Utf8               Lscala/Predef$;
  #264 = NameAndType        #25:#263      // MODULE$:Lscala/Predef$;
  #265 = Fieldref           #262.#264     // scala/Predef$.MODULE$:Lscala/Predef$;
  #266 = Utf8               scala/collection/StringOps$
  #267 = Class              #266          // scala/collection/StringOps$
  #268 = Utf8               Lscala/collection/StringOps$;
  #269 = NameAndType        #25:#268      // MODULE$:Lscala/collection/StringOps$;
  #270 = Fieldref           #267.#269     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #271 = Utf8               augmentString
  #272 = NameAndType        #271:#216     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #273 = Methodref          #262.#272     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #274 = Utf8               split$extension
  #275 = Utf8               (Ljava/lang/String;C)[Ljava/lang/String;
  #276 = NameAndType        #274:#275     // split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #277 = Methodref          #267.#276     // scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #278 = Utf8               [Ljava/lang/Object;
  #279 = Class              #278          // "[Ljava/lang/Object;"
  #280 = Utf8               refArrayOps
  #281 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #282 = NameAndType        #280:#281     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #283 = Methodref          #262.#282     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #284 = Utf8               take$extension
  #285 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #286 = NameAndType        #284:#285     // take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #287 = Methodref          #257.#286     // scala/collection/ArrayOps$.take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #288 = Utf8               toSeq$extension
  #289 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #290 = NameAndType        #288:#289     // toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #291 = Methodref          #257.#290     // scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #292 = Utf8               coursier/core/Version$
  #293 = Class              #292          // coursier/core/Version$
  #294 = Utf8               Lcoursier/core/Version$;
  #295 = NameAndType        #25:#294      // MODULE$:Lcoursier/core/Version$;
  #296 = Fieldref           #293.#295     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #297 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
  #298 = NameAndType        #120:#297     // apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #299 = Methodref          #293.#298     // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #300 = Utf8               contains
  #301 = Utf8               (Lcoursier/core/Version;)Z
  #302 = NameAndType        #300:#301     // contains:(Lcoursier/core/Version;)Z
  #303 = Methodref          #251.#302     // coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
  #304 = Utf8               c
  #305 = Utf8               Lcoursier/core/VersionConstraint;
  #306 = Utf8               Ljava/lang/String;
  #307 = Utf8               dependencyTree
  #308 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;ZZZ)Ljava/lang/String;
  #309 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;ZZZ)Ljava/lang/String;
  #310 = Utf8               resolution
  #311 = Utf8               roots
  #312 = Utf8               reverse
  #313 = Utf8               colors
  #314 = Utf8               Lcoursier/util/Print$Colors$;
  #315 = NameAndType        #25:#314      // MODULE$:Lcoursier/util/Print$Colors$;
  #316 = Fieldref           #12.#315      // coursier/util/Print$Colors$.MODULE$:Lcoursier/util/Print$Colors$;
  #317 = Utf8               get
  #318 = Utf8               (Z)Lcoursier/util/Print$Colors;
  #319 = NameAndType        #317:#318     // get:(Z)Lcoursier/util/Print$Colors;
  #320 = Methodref          #12.#319      // coursier/util/Print$Colors$.get:(Z)Lcoursier/util/Print$Colors;
  #321 = Utf8               scala/Option$
  #322 = Class              #321          // scala/Option$
  #323 = Utf8               Lscala/Option$;
  #324 = NameAndType        #25:#323      // MODULE$:Lscala/Option$;
  #325 = Fieldref           #322.#324     // scala/Option$.MODULE$:Lscala/Option$;
  #326 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #327 = NameAndType        #120:#326     // apply:(Ljava/lang/Object;)Lscala/Option;
  #328 = Methodref          #322.#327     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #329 = MethodType         #207          //  ()Ljava/lang/Object;
  #330 = Utf8               $anonfun$dependencyTree$1
  #331 = Utf8               (Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
  #332 = NameAndType        #330:#331     // $anonfun$dependencyTree$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
  #333 = Methodref          #2.#332       // coursier/util/Print$.$anonfun$dependencyTree$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
  #334 = MethodHandle       6:#333        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
  #335 = Utf8               ()Lscala/collection/immutable/Seq;
  #336 = MethodType         #335          //  ()Lscala/collection/immutable/Seq;
  #337 = Utf8               (Lcoursier/core/Resolution;)Lscala/Function0;
  #338 = NameAndType        #120:#337     // apply:(Lcoursier/core/Resolution;)Lscala/Function0;
  #339 = InvokeDynamic      #5:#338       // #5:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
  #340 = Utf8               scala/Option
  #341 = Class              #340          // scala/Option
  #342 = Utf8               getOrElse
  #343 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #344 = NameAndType        #342:#343     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #345 = Methodref          #341.#344     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #346 = Utf8               coursier/graph/ReverseModuleTree$
  #347 = Class              #346          // coursier/graph/ReverseModuleTree$
  #348 = Utf8               Lcoursier/graph/ReverseModuleTree$;
  #349 = NameAndType        #25:#348      // MODULE$:Lcoursier/graph/ReverseModuleTree$;
  #350 = Fieldref           #347.#349     // coursier/graph/ReverseModuleTree$.MODULE$:Lcoursier/graph/ReverseModuleTree$;
  #351 = Utf8               $anonfun$dependencyTree$2
  #352 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #353 = NameAndType        #351:#352     // $anonfun$dependencyTree$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #354 = Methodref          #2.#353       // coursier/util/Print$.$anonfun$dependencyTree$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #355 = MethodHandle       6:#354        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #356 = MethodType         #352          //  (Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #357 = InvokeDynamic      #6:#135       // #6:apply:()Lscala/Function1;
  #358 = InterfaceMethodref #158.#208     // scala/collection/SeqOps.distinct:()Ljava/lang/Object;
  #359 = Utf8               coursier/graph/DependencyTree$
  #360 = Class              #359          // coursier/graph/DependencyTree$
  #361 = Utf8               Lcoursier/graph/DependencyTree$;
  #362 = NameAndType        #25:#361      // MODULE$:Lcoursier/graph/DependencyTree$;
  #363 = Fieldref           #360.#362     // coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
  #364 = Utf8               apply$default$2
  #365 = NameAndType        #364:#335     // apply$default$2:()Lscala/collection/immutable/Seq;
  #366 = Methodref          #360.#365     // coursier/graph/DependencyTree$.apply$default$2:()Lscala/collection/immutable/Seq;
  #367 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
  #368 = NameAndType        #120:#367     // apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
  #369 = Methodref          #360.#368     // coursier/graph/DependencyTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
  #370 = Utf8               fromDependencyTree
  #371 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #372 = NameAndType        #370:#371     // fromDependencyTree:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #373 = Methodref          #347.#372     // coursier/graph/ReverseModuleTree$.fromDependencyTree:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #374 = Utf8               coursier/util/Tree$
  #375 = Class              #374          // coursier/util/Tree$
  #376 = Utf8               Lcoursier/util/Tree$;
  #377 = NameAndType        #25:#376      // MODULE$:Lcoursier/util/Tree$;
  #378 = Fieldref           #375.#377     // coursier/util/Tree$.MODULE$:Lcoursier/util/Tree$;
  #379 = InterfaceMethodref #125.#145     // scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
  #380 = Utf8               $anonfun$dependencyTree$3
  #381 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #382 = NameAndType        #380:#381     // $anonfun$dependencyTree$3:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #383 = Methodref          #2.#382       // coursier/util/Print$.$anonfun$dependencyTree$3:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #384 = MethodHandle       6:#383        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$3:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #385 = MethodType         #381          //  (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #386 = InvokeDynamic      #7:#135       // #7:apply:()Lscala/Function1;
  #387 = Utf8               Tuple3
  #388 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #389 = NameAndType        #387:#388     // Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #390 = Methodref          #167.#389     // scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #391 = Methodref          #155.#195     // scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #392 = Utf8               scala/collection/immutable/IndexedSeq
  #393 = Class              #392          // scala/collection/immutable/IndexedSeq
  #394 = Utf8               $anonfun$dependencyTree$4
  #395 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #396 = NameAndType        #394:#395     // $anonfun$dependencyTree$4:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #397 = Methodref          #2.#396       // coursier/util/Print$.$anonfun$dependencyTree$4:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #398 = MethodHandle       6:#397        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$4:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #399 = MethodType         #395          //  (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #400 = InvokeDynamic      #8:#135       // #8:apply:()Lscala/Function1;
  #401 = Utf8               (Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
  #402 = NameAndType        #120:#401     // apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
  #403 = Methodref          #375.#402     // coursier/util/Tree$.apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
  #404 = Utf8               $anonfun$dependencyTree$5
  #405 = Utf8               (Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #406 = NameAndType        #404:#405     // $anonfun$dependencyTree$5:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #407 = Methodref          #2.#406       // coursier/util/Print$.$anonfun$dependencyTree$5:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #408 = MethodHandle       6:#407        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$5:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #409 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #410 = MethodType         #409          //  (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #411 = Utf8               (Lcoursier/util/Print$Colors;)Lscala/Function1;
  #412 = NameAndType        #120:#411     // apply:(Lcoursier/util/Print$Colors;)Lscala/Function1;
  #413 = InvokeDynamic      #9:#412       // #9:apply:(Lcoursier/util/Print$Colors;)Lscala/Function1;
  #414 = Utf8               coursier/util/Tree
  #415 = Class              #414          // coursier/util/Tree
  #416 = Utf8               render
  #417 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #418 = NameAndType        #416:#417     // render:(Lscala/Function1;)Ljava/lang/String;
  #419 = Methodref          #415.#418     // coursier/util/Tree.render:(Lscala/Function1;)Ljava/lang/String;
  #420 = Utf8               $anonfun$dependencyTree$6
  #421 = NameAndType        #420:#331     // $anonfun$dependencyTree$6:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
  #422 = Methodref          #2.#421       // coursier/util/Print$.$anonfun$dependencyTree$6:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
  #423 = MethodHandle       6:#422        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$6:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
  #424 = InvokeDynamic      #10:#338      // #10:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
  #425 = Utf8               $anonfun$dependencyTree$7
  #426 = Utf8               (Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
  #427 = NameAndType        #425:#426     // $anonfun$dependencyTree$7:(Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
  #428 = Methodref          #2.#427       // coursier/util/Print$.$anonfun$dependencyTree$7:(Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
  #429 = MethodHandle       6:#428        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$7:(Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
  #430 = MethodType         #426          //  (Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
  #431 = InvokeDynamic      #11:#135      // #11:apply:()Lscala/Function1;
  #432 = Utf8               $anonfun$dependencyTree$8
  #433 = Utf8               (Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;Lcoursier/graph/DependencyTree;)Ljava/lang/String;
  #434 = NameAndType        #432:#433     // $anonfun$dependencyTree$8:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;Lcoursier/graph/DependencyTree;)Ljava/lang/String;
  #435 = Methodref          #2.#434       // coursier/util/Print$.$anonfun$dependencyTree$8:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;Lcoursier/graph/DependencyTree;)Ljava/lang/String;
  #436 = MethodHandle       6:#435        // REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$8:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;Lcoursier/graph/DependencyTree;)Ljava/lang/String;
  #437 = Utf8               (Lcoursier/graph/DependencyTree;)Ljava/lang/String;
  #438 = MethodType         #437          //  (Lcoursier/graph/DependencyTree;)Ljava/lang/String;
  #439 = Utf8               (Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;)Lscala/Function1;
  #440 = NameAndType        #120:#439     // apply:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;)Lscala/Function1;
  #441 = InvokeDynamic      #12:#440      // #12:apply:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;)Lscala/Function1;
  #442 = Utf8               x$1
  #443 = Utf8               Lcoursier/core/Resolution;
  #444 = Utf8               x$2
  #445 = Utf8               x$3
  #446 = Utf8               roots0
  #447 = Utf8               t
  #448 = Utf8               colors0
  #449 = Utf8               Lcoursier/util/Print$Colors;
  #450 = Utf8               dependencyTree$default$2
  #451 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
  #452 = Utf8               dependencyTree$default$3
  #453 = Utf8               dependencyTree$default$4
  #454 = Utf8               dependencyTree$default$5
  #455 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;ZLscala/Option;Lcoursier/util/Print$Colors;)Ljava/lang/String;
  #456 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;ZLscala/Option<Ljava/lang/String;>;Lcoursier/util/Print$Colors;)Ljava/lang/String;
  #457 = Utf8               excluded
  #458 = Utf8               reconciledVersionOpt
  #459 = Utf8               scala/None$
  #460 = Class              #459          // scala/None$
  #461 = Utf8               Lscala/None$;
  #462 = NameAndType        #25:#461      // MODULE$:Lscala/None$;
  #463 = Fieldref           #460.#462     // scala/None$.MODULE$:Lscala/None$;
  #464 = Integer            12
  #465 = Utf8               yellow
  #466 = NameAndType        #465:#66      // yellow:()Ljava/lang/String;
  #467 = Methodref          #7.#466       // coursier/util/Print$Colors.yellow:()Ljava/lang/String;
  #468 = Utf8               (excluded)
  #469 = String             #468          // (excluded)
  #470 = Utf8               reset
  #471 = NameAndType        #470:#66      // reset:()Ljava/lang/String;
  #472 = Methodref          #7.#471       // coursier/util/Print$Colors.reset:()Ljava/lang/String;
  #473 = Utf8
  #474 = String             #473          //
  #475 = Utf8               scala/Some
  #476 = Class              #475          // scala/Some
  #477 = Utf8               value
  #478 = NameAndType        #477:#207     // value:()Ljava/lang/Object;
  #479 = Methodref          #476.#478     // scala/Some.value:()Ljava/lang/Object;
  #480 = Utf8               coursier/core/Module
  #481 = Class              #480          // coursier/core/Module
  #482 = Utf8               this version
  #483 = String             #482          // this version
  #484 = Integer            8
  #485 = Utf8               version
  #486 = String             #485          // version
  #487 = Integer            27
  #488 = Utf8               red
  #489 = NameAndType        #488:#66      // red:()Ljava/lang/String;
  #490 = Methodref          #7.#489       // coursier/util/Print$Colors.red:()Ljava/lang/String;
  #491 = Utf8               (excluded,
  #492 = String             #491          // (excluded,
  #493 = Utf8                present anyway)
  #494 = String             #493          //  present anyway)
  #495 = Utf8               scala/MatchError
  #496 = Class              #495          // scala/MatchError
  #497 = Utf8               (Ljava/lang/Object;)V
  #498 = NameAndType        #29:#497      // "<init>":(Ljava/lang/Object;)V
  #499 = Methodref          #496.#498     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #500 = Utf8               $anonfun$render$1$adapted
  #501 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #502 = NameAndType        #500:#501     // $anonfun$render$1$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #503 = Methodref          #2.#502       // coursier/util/Print$.$anonfun$render$1$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #504 = MethodHandle       6:#503        // REF_invokeStatic coursier/util/Print$.$anonfun$render$1$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #505 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #506 = MethodType         #505          //  (Ljava/lang/String;)Ljava/lang/Object;
  #507 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #508 = NameAndType        #120:#507     // apply:(Ljava/lang/String;)Lscala/Function1;
  #509 = InvokeDynamic      #13:#508      // #13:apply:(Ljava/lang/String;)Lscala/Function1;
  #510 = Utf8               forall
  #511 = Utf8               (Lscala/Function1;)Z
  #512 = NameAndType        #510:#511     // forall:(Lscala/Function1;)Z
  #513 = Methodref          #341.#512     // scala/Option.forall:(Lscala/Function1;)Z
  #514 = Utf8               $anonfun$render$2
  #515 = NameAndType        #514:#216     // $anonfun$render$2:(Ljava/lang/String;)Ljava/lang/String;
  #516 = Methodref          #2.#515       // coursier/util/Print$.$anonfun$render$2:(Ljava/lang/String;)Ljava/lang/String;
  #517 = MethodHandle       6:#516        // REF_invokeStatic coursier/util/Print$.$anonfun$render$2:(Ljava/lang/String;)Ljava/lang/String;
  #518 = MethodType         #66           //  ()Ljava/lang/String;
  #519 = Utf8               (Ljava/lang/String;)Lscala/Function0;
  #520 = NameAndType        #120:#519     // apply:(Ljava/lang/String;)Lscala/Function0;
  #521 = InvokeDynamic      #14:#520      // #14:apply:(Ljava/lang/String;)Lscala/Function0;
  #522 = Utf8               $anonfun$render$3
  #523 = NameAndType        #522:#216     // $anonfun$render$3:(Ljava/lang/String;)Ljava/lang/String;
  #524 = Methodref          #2.#523       // coursier/util/Print$.$anonfun$render$3:(Ljava/lang/String;)Ljava/lang/String;
  #525 = MethodHandle       6:#524        // REF_invokeStatic coursier/util/Print$.$anonfun$render$3:(Ljava/lang/String;)Ljava/lang/String;
  #526 = InvokeDynamic      #15:#520      // #15:apply:(Ljava/lang/String;)Lscala/Function0;
  #527 = NameAndType        #223:#224     // compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
  #528 = Methodref          #2.#527       // coursier/util/Print$.compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
  #529 = Integer            4
  #530 = Utf8                ->
  #531 = String             #530          //  ->
  #532 = Utf8                (possible incompatibility)
  #533 = String             #532          //  (possible incompatibility)
  #534 = Utf8               versionMsg
  #535 = Utf8               version0
  #536 = Utf8               reconciledVersion
  #537 = Utf8               assumeCompatibleVersions
  #538 = Utf8               versionStr
  #539 = Utf8               Lcoursier/core/Module;
  #540 = Utf8               Lscala/Option;
  #541 = Utf8               aligned
  #542 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #543 = Utf8               (Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;>;)Lscala/collection/immutable/Seq<Ljava/lang/String;>;
  #544 = Utf8               isEmpty
  #545 = NameAndType        #544:#88      // isEmpty:()Z
  #546 = InterfaceMethodref #125.#545     // scala/collection/immutable/Seq.isEmpty:()Z
  #547 = Utf8               scala/collection/immutable/Nil$
  #548 = Class              #547          // scala/collection/immutable/Nil$
  #549 = Utf8               Lscala/collection/immutable/Nil$;
  #550 = NameAndType        #25:#549      // MODULE$:Lscala/collection/immutable/Nil$;
  #551 = Fieldref           #548.#550     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #552 = Utf8               iterator
  #553 = Utf8               ()Lscala/collection/Iterator;
  #554 = NameAndType        #552:#553     // iterator:()Lscala/collection/Iterator;
  #555 = InterfaceMethodref #125.#554     // scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
  #556 = Utf8               $anonfun$aligned$1$adapted
  #557 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #558 = NameAndType        #556:#557     // $anonfun$aligned$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #559 = Methodref          #2.#558       // coursier/util/Print$.$anonfun$aligned$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #560 = MethodHandle       6:#559        // REF_invokeStatic coursier/util/Print$.$anonfun$aligned$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #561 = MethodType         #557          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #562 = InvokeDynamic      #16:#135      // #16:apply:()Lscala/Function1;
  #563 = Utf8               scala/collection/Iterator
  #564 = Class              #563          // scala/collection/Iterator
  #565 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #566 = NameAndType        #126:#565     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #567 = InterfaceMethodref #564.#566     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #568 = Utf8               Lscala/math/Ordering$Int$;
  #569 = NameAndType        #25:#568      // MODULE$:Lscala/math/Ordering$Int$;
  #570 = Fieldref           #20.#569      // scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
  #571 = Utf8               max
  #572 = Utf8               (Lscala/math/Ordering;)Ljava/lang/Object;
  #573 = NameAndType        #571:#572     // max:(Lscala/math/Ordering;)Ljava/lang/Object;
  #574 = InterfaceMethodref #564.#573     // scala/collection/Iterator.max:(Lscala/math/Ordering;)Ljava/lang/Object;
  #575 = Utf8               scala/runtime/BoxesRunTime
  #576 = Class              #575          // scala/runtime/BoxesRunTime
  #577 = Utf8               unboxToInt
  #578 = Utf8               (Ljava/lang/Object;)I
  #579 = NameAndType        #577:#578     // unboxToInt:(Ljava/lang/Object;)I
  #580 = Methodref          #576.#579     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #581 = Utf8               $anonfun$aligned$2
  #582 = Utf8               (ILscala/Tuple2;)Ljava/lang/String;
  #583 = NameAndType        #581:#582     // $anonfun$aligned$2:(ILscala/Tuple2;)Ljava/lang/String;
  #584 = Methodref          #2.#583       // coursier/util/Print$.$anonfun$aligned$2:(ILscala/Tuple2;)Ljava/lang/String;
  #585 = MethodHandle       6:#584        // REF_invokeStatic coursier/util/Print$.$anonfun$aligned$2:(ILscala/Tuple2;)Ljava/lang/String;
  #586 = Utf8               (Lscala/Tuple2;)Ljava/lang/String;
  #587 = MethodType         #586          //  (Lscala/Tuple2;)Ljava/lang/String;
  #588 = Utf8               (I)Lscala/Function1;
  #589 = NameAndType        #120:#588     // apply:(I)Lscala/Function1;
  #590 = InvokeDynamic      #17:#589      // #17:apply:(I)Lscala/Function1;
  #591 = Utf8               m
  #592 = Utf8               I
  #593 = Utf8               conflicts
  #594 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict;>;)Lscala/collection/immutable/Seq<Ljava/lang/String;>;
  #595 = Utf8               $anonfun$conflicts$1
  #596 = Utf8               (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #597 = NameAndType        #595:#596     // $anonfun$conflicts$1:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #598 = Methodref          #2.#597       // coursier/util/Print$.$anonfun$conflicts$1:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #599 = MethodHandle       6:#598        // REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$1:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #600 = MethodType         #596          //  (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #601 = InvokeDynamic      #18:#135      // #18:apply:()Lscala/Function1;
  #602 = Utf8               scala/collection/IterableOps
  #603 = Class              #602          // scala/collection/IterableOps
  #604 = Utf8               zipWithIndex
  #605 = NameAndType        #604:#207     // zipWithIndex:()Ljava/lang/Object;
  #606 = InterfaceMethodref #603.#605     // scala/collection/IterableOps.zipWithIndex:()Ljava/lang/Object;
  #607 = NameAndType        #312:#207     // reverse:()Ljava/lang/Object;
  #608 = InterfaceMethodref #158.#607     // scala/collection/SeqOps.reverse:()Ljava/lang/Object;
  #609 = Utf8               scala/collection/IterableOnceOps
  #610 = Class              #609          // scala/collection/IterableOnceOps
  #611 = Utf8               scala/$less$colon$less$
  #612 = Class              #611          // scala/$less$colon$less$
  #613 = Utf8               Lscala/$less$colon$less$;
  #614 = NameAndType        #25:#613      // MODULE$:Lscala/$less$colon$less$;
  #615 = Fieldref           #612.#614     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #616 = Utf8               refl
  #617 = Utf8               ()Lscala/$eq$colon$eq;
  #618 = NameAndType        #616:#617     // refl:()Lscala/$eq$colon$eq;
  #619 = Methodref          #612.#618     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #620 = Utf8               toMap
  #621 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #622 = NameAndType        #620:#621     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #623 = InterfaceMethodref #610.#622     // scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #624 = Utf8               $anonfun$conflicts$2
  #625 = NameAndType        #624:#596     // $anonfun$conflicts$2:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #626 = Methodref          #2.#625       // coursier/util/Print$.$anonfun$conflicts$2:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #627 = MethodHandle       6:#626        // REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$2:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  #628 = InvokeDynamic      #19:#135      // #19:apply:()Lscala/Function1;
  #629 = Utf8               toSeq
  #630 = NameAndType        #629:#335     // toSeq:()Lscala/collection/immutable/Seq;
  #631 = InterfaceMethodref #142.#630     // scala/collection/immutable/Map.toSeq:()Lscala/collection/immutable/Seq;
  #632 = Utf8               $anonfun$conflicts$3$adapted
  #633 = Utf8               (Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #634 = NameAndType        #632:#633     // $anonfun$conflicts$3$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #635 = Methodref          #2.#634       // coursier/util/Print$.$anonfun$conflicts$3$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #636 = MethodHandle       6:#635        // REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$3$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #637 = InvokeDynamic      #20:#122      // #20:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #638 = InterfaceMethodref #125.#195     // scala/collection/immutable/Seq.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #639 = Utf8               $anonfun$conflicts$4
  #640 = NameAndType        #639:#586     // $anonfun$conflicts$4:(Lscala/Tuple2;)Ljava/lang/String;
  #641 = Methodref          #2.#640       // coursier/util/Print$.$anonfun$conflicts$4:(Lscala/Tuple2;)Ljava/lang/String;
  #642 = MethodHandle       6:#641        // REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$4:(Lscala/Tuple2;)Ljava/lang/String;
  #643 = InvokeDynamic      #21:#135      // #21:apply:()Lscala/Function1;
  #644 = InterfaceMethodref #603.#128     // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #645 = Utf8               indices
  #646 = Utf8               $anonfun$dependency$1
  #647 = Utf8               x0$1
  #648 = Utf8               scala/Tuple2
  #649 = Class              #648          // scala/Tuple2
  #650 = Utf8               _1
  #651 = NameAndType        #650:#207     // _1:()Ljava/lang/Object;
  #652 = Methodref          #649.#651     // scala/Tuple2._1:()Ljava/lang/Object;
  #653 = Utf8               coursier/core/Organization
  #654 = Class              #653          // coursier/core/Organization
  #655 = NameAndType        #477:#66      // value:()Ljava/lang/String;
  #656 = Methodref          #654.#655     // coursier/core/Organization.value:()Ljava/lang/String;
  #657 = Utf8               _2
  #658 = NameAndType        #657:#207     // _2:()Ljava/lang/Object;
  #659 = Methodref          #649.#658     // scala/Tuple2._2:()Ljava/lang/Object;
  #660 = Utf8               coursier/core/ModuleName
  #661 = Class              #660          // coursier/core/ModuleName
  #662 = Methodref          #661.#655     // coursier/core/ModuleName.value:()Ljava/lang/String;
  #663 = Integer            14
  #664 = Utf8               \n  exclude(
  #665 = String             #664          // \n  exclude(
  #666 = Utf8               (Ljava/lang/String;)V
  #667 = NameAndType        #29:#666      // "<init>":(Ljava/lang/String;)V
  #668 = Methodref          #654.#667     // coursier/core/Organization."<init>":(Ljava/lang/String;)V
  #669 = Utf8               ,
  #670 = String             #669          // ,
  #671 = Methodref          #661.#667     // coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
  #672 = Utf8               )
  #673 = String             #672          // )
  #674 = Utf8               org
  #675 = Utf8               name
  #676 = Utf8               Lscala/Tuple2;
  #677 = Utf8               dep$1
  #678 = Utf8               exclusions
  #679 = Utf8               ()Lscala/collection/immutable/Set;
  #680 = NameAndType        #678:#679     // exclusions:()Lscala/collection/immutable/Set;
  #681 = Methodref          #51.#680      // coursier/core/Dependency.exclusions:()Lscala/collection/immutable/Set;
  #682 = Utf8               scala/collection/immutable/Set
  #683 = Class              #682          // scala/collection/immutable/Set
  #684 = InterfaceMethodref #683.#145     // scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
  #685 = Utf8               Tuple2
  #686 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #687 = NameAndType        #685:#686     // Tuple2:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #688 = Methodref          #167.#687     // scala/math/Ordering$.Tuple2:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #689 = Utf8               sorted
  #690 = NameAndType        #689:#572     // sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #691 = Methodref          #155.#690     // scala/collection/immutable/Vector.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #692 = Utf8               scala/collection/StrictOptimizedIterableOps
  #693 = Class              #692          // scala/collection/StrictOptimizedIterableOps
  #694 = NameAndType        #646:#586     // $anonfun$dependency$1:(Lscala/Tuple2;)Ljava/lang/String;
  #695 = Methodref          #2.#694       // coursier/util/Print$.$anonfun$dependency$1:(Lscala/Tuple2;)Ljava/lang/String;
  #696 = MethodHandle       6:#695        // REF_invokeStatic coursier/util/Print$.$anonfun$dependency$1:(Lscala/Tuple2;)Ljava/lang/String;
  #697 = InvokeDynamic      #22:#135      // #22:apply:()Lscala/Function1;
  #698 = InterfaceMethodref #693.#128     // scala/collection/StrictOptimizedIterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #699 = NameAndType        #215:#66      // mkString:()Ljava/lang/String;
  #700 = InterfaceMethodref #610.#699     // scala/collection/IterableOnceOps.mkString:()Ljava/lang/String;
  #701 = Utf8               $anonfun$dependenciesUnknownConfigs$2
  #702 = Utf8               dep$2
  #703 = Utf8               $anonfun$dependenciesUnknownConfigs$3
  #704 = Utf8               (Lcoursier/core/Project;)Ljava/lang/String;
  #705 = Utf8               coursier/core/Project
  #706 = Class              #705          // coursier/core/Project
  #707 = Methodref          #706.#67      // coursier/core/Project.version:()Ljava/lang/String;
  #708 = Utf8               Lcoursier/core/Project;
  #709 = Utf8               projects$1
  #710 = Utf8               moduleVersion
  #711 = Utf8               ()Lscala/Tuple2;
  #712 = NameAndType        #710:#711     // moduleVersion:()Lscala/Tuple2;
  #713 = Methodref          #51.#712      // coursier/core/Dependency.moduleVersion:()Lscala/Tuple2;
  #714 = NameAndType        #317:#326     // get:(Ljava/lang/Object;)Lscala/Option;
  #715 = InterfaceMethodref #142.#714     // scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #716 = NameAndType        #701:#35      // $anonfun$dependenciesUnknownConfigs$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #717 = Methodref          #2.#716       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #718 = MethodHandle       6:#717        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #719 = Utf8               (Lcoursier/core/Dependency;)Lscala/Function0;
  #720 = NameAndType        #120:#719     // apply:(Lcoursier/core/Dependency;)Lscala/Function0;
  #721 = InvokeDynamic      #23:#720      // #23:apply:(Lcoursier/core/Dependency;)Lscala/Function0;
  #722 = NameAndType        #703:#704     // $anonfun$dependenciesUnknownConfigs$3:(Lcoursier/core/Project;)Ljava/lang/String;
  #723 = Methodref          #2.#722       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$3:(Lcoursier/core/Project;)Ljava/lang/String;
  #724 = MethodHandle       6:#723        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$3:(Lcoursier/core/Project;)Ljava/lang/String;
  #725 = MethodType         #704          //  (Lcoursier/core/Project;)Ljava/lang/String;
  #726 = InvokeDynamic      #24:#135      // #24:apply:()Lscala/Function1;
  #727 = Utf8               fold
  #728 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #729 = NameAndType        #727:#728     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #730 = Methodref          #341.#729     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #731 = Utf8               withVersion
  #732 = Utf8               (Ljava/lang/String;)Lcoursier/core/Dependency;
  #733 = NameAndType        #731:#732     // withVersion:(Ljava/lang/String;)Lcoursier/core/Dependency;
  #734 = Methodref          #51.#733      // coursier/core/Dependency.withVersion:(Ljava/lang/String;)Lcoursier/core/Dependency;
  #735 = Utf8               coursier/core/Configuration$
  #736 = Class              #735          // coursier/core/Configuration$
  #737 = Utf8               Lcoursier/core/Configuration$;
  #738 = NameAndType        #25:#737      // MODULE$:Lcoursier/core/Configuration$;
  #739 = Fieldref           #736.#738     // coursier/core/Configuration$.MODULE$:Lcoursier/core/Configuration$;
  #740 = Utf8               empty
  #741 = NameAndType        #740:#66      // empty:()Ljava/lang/String;
  #742 = Methodref          #736.#741     // coursier/core/Configuration$.empty:()Ljava/lang/String;
  #743 = Utf8               withConfiguration
  #744 = NameAndType        #743:#732     // withConfiguration:(Ljava/lang/String;)Lcoursier/core/Dependency;
  #745 = Methodref          #51.#744      // coursier/core/Dependency.withConfiguration:(Ljava/lang/String;)Lcoursier/core/Dependency;
  #746 = Utf8               coursier/core/Attributes$
  #747 = Class              #746          // coursier/core/Attributes$
  #748 = Utf8               Lcoursier/core/Attributes$;
  #749 = NameAndType        #25:#748      // MODULE$:Lcoursier/core/Attributes$;
  #750 = Fieldref           #747.#749     // coursier/core/Attributes$.MODULE$:Lcoursier/core/Attributes$;
  #751 = Utf8               ()Lcoursier/core/Attributes;
  #752 = NameAndType        #740:#751     // empty:()Lcoursier/core/Attributes;
  #753 = Methodref          #747.#752     // coursier/core/Attributes$.empty:()Lcoursier/core/Attributes;
  #754 = Utf8               withAttributes
  #755 = Utf8               (Lcoursier/core/Attributes;)Lcoursier/core/Dependency;
  #756 = NameAndType        #754:#755     // withAttributes:(Lcoursier/core/Attributes;)Lcoursier/core/Dependency;
  #757 = Methodref          #51.#756      // coursier/core/Dependency.withAttributes:(Lcoursier/core/Attributes;)Lcoursier/core/Dependency;
  #758 = Utf8               $anonfun$dependenciesUnknownConfigs$6
  #759 = Utf8               $anonfun$dependenciesUnknownConfigs$6$adapted
  #760 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/Object;
  #761 = NameAndType        #759:#760     // $anonfun$dependenciesUnknownConfigs$6$adapted:(Lcoursier/core/Dependency;)Ljava/lang/Object;
  #762 = Methodref          #2.#761       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$6$adapted:(Lcoursier/core/Dependency;)Ljava/lang/Object;
  #763 = MethodHandle       6:#762        // REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$6$adapted:(Lcoursier/core/Dependency;)Ljava/lang/Object;
  #764 = MethodType         #760          //  (Lcoursier/core/Dependency;)Ljava/lang/Object;
  #765 = InvokeDynamic      #25:#135      // #25:apply:()Lscala/Function1;
  #766 = Utf8               scala/collection/immutable/StrictOptimizedSeqOps
  #767 = Class              #766          // scala/collection/immutable/StrictOptimizedSeqOps
  #768 = Methodref          #736.#178     // coursier/core/Configuration$.ordering:()Lscala/math/Ordering;
  #769 = InterfaceMethodref #767.#690     // scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #770 = Utf8               join
  #771 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #772 = NameAndType        #770:#771     // join:(Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #773 = Methodref          #736.#772     // coursier/core/Configuration$.join:(Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #774 = Utf8               conf
  #775 = Utf8               k
  #776 = Utf8               scala/Tuple4
  #777 = Class              #776          // scala/Tuple4
  #778 = Utf8               organization
  #779 = NameAndType        #778:#66      // organization:()Ljava/lang/String;
  #780 = Methodref          #481.#779     // coursier/core/Module.organization:()Ljava/lang/String;
  #781 = NameAndType        #675:#66      // name:()Ljava/lang/String;
  #782 = Methodref          #481.#781     // coursier/core/Module.name:()Ljava/lang/String;
  #783 = Methodref          #481.#73      // coursier/core/Module.toString:()Ljava/lang/String;
  #784 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #785 = NameAndType        #29:#784      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #786 = Methodref          #777.#785     // scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #787 = Utf8               printExclusions$1
  #788 = Utf8               x$4
  #789 = Utf8               resolution$1
  #790 = Utf8               coursier/core/Resolution
  #791 = Class              #790          // coursier/core/Resolution
  #792 = Utf8               minDependencies
  #793 = NameAndType        #792:#679     // minDependencies:()Lscala/collection/immutable/Set;
  #794 = Methodref          #791.#793     // coursier/core/Resolution.minDependencies:()Lscala/collection/immutable/Set;
  #795 = InterfaceMethodref #683.#630     // scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
  #796 = Utf8               x$5
  #797 = Utf8               scala/Tuple3
  #798 = Class              #797          // scala/Tuple3
  #799 = Utf8               coursier/graph/ReverseModuleTree
  #800 = Class              #799          // coursier/graph/ReverseModuleTree
  #801 = Methodref          #800.#54      // coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
  #802 = Utf8               nameWithAttributes
  #803 = NameAndType        #802:#66      // nameWithAttributes:()Ljava/lang/String;
  #804 = Methodref          #481.#803     // coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
  #805 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #806 = NameAndType        #29:#805      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #807 = Methodref          #798.#806     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #808 = Utf8               Lcoursier/graph/ReverseModuleTree;
  #809 = Utf8               x$6
  #810 = Utf8               dependees
  #811 = NameAndType        #810:#335     // dependees:()Lscala/collection/immutable/Seq;
  #812 = Methodref          #800.#811     // coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
  #813 = Utf8               colors0$1
  #814 = Utf8               node
  #815 = Utf8               excludedDependsOn
  #816 = NameAndType        #815:#88      // excludedDependsOn:()Z
  #817 = Methodref          #800.#816     // coursier/graph/ReverseModuleTree.excludedDependsOn:()Z
  #818 = Integer            15
  #819 = Utf8               (excluded by)
  #820 = String             #819          // (excluded by)
  #821 = NameAndType        #536:#66      // reconciledVersion:()Ljava/lang/String;
  #822 = Methodref          #800.#821     // coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
  #823 = Utf8               dependsOnVersion
  #824 = NameAndType        #823:#66      // dependsOnVersion:()Ljava/lang/String;
  #825 = Methodref          #800.#824     // coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
  #826 = Utf8               dependsOnReconciledVersion
  #827 = NameAndType        #826:#66      // dependsOnReconciledVersion:()Ljava/lang/String;
  #828 = Methodref          #800.#827     // coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
  #829 = Utf8               dependsOnModule
  #830 = NameAndType        #829:#53      // dependsOnModule:()Lcoursier/core/Module;
  #831 = Methodref          #800.#830     // coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
  #832 = Utf8               rootDependencies
  #833 = NameAndType        #832:#335     // rootDependencies:()Lscala/collection/immutable/Seq;
  #834 = Methodref          #791.#833     // coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
  #835 = Utf8               x$7
  #836 = Utf8               coursier/graph/DependencyTree
  #837 = Class              #836          // coursier/graph/DependencyTree
  #838 = Utf8               children
  #839 = NameAndType        #838:#335     // children:()Lscala/collection/immutable/Seq;
  #840 = Methodref          #837.#839     // coursier/graph/DependencyTree.children:()Lscala/collection/immutable/Seq;
  #841 = Utf8               Lcoursier/graph/DependencyTree;
  #842 = Utf8               ()Lcoursier/core/Dependency;
  #843 = NameAndType        #34:#842      // dependency:()Lcoursier/core/Dependency;
  #844 = Methodref          #837.#843     // coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
  #845 = NameAndType        #457:#88      // excluded:()Z
  #846 = Methodref          #837.#845     // coursier/graph/DependencyTree.excluded:()Z
  #847 = Utf8               reconciledVersions
  #848 = Utf8               ()Lscala/collection/immutable/Map;
  #849 = NameAndType        #847:#848     // reconciledVersions:()Lscala/collection/immutable/Map;
  #850 = Methodref          #791.#849     // coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
  #851 = NameAndType        #416:#455     // render:(Lcoursier/core/Module;Ljava/lang/String;ZLscala/Option;Lcoursier/util/Print$Colors;)Ljava/lang/String;
  #852 = Methodref          #2.#851       // coursier/util/Print$.render:(Lcoursier/core/Module;Ljava/lang/String;ZLscala/Option;Lcoursier/util/Print$Colors;)Ljava/lang/String;
  #853 = Utf8               $anonfun$render$1
  #854 = Utf8               version$1
  #855 = Utf8               x$8
  #856 = Utf8               $anonfun$aligned$1
  #857 = Utf8               (Lscala/Tuple2;)I
  #858 = Utf8               x$9
  #859 = Utf8               length
  #860 = Utf8               ()I
  #861 = NameAndType        #859:#860     // length:()I
  #862 = Methodref          #80.#861      // java/lang/String.length:()I
  #863 = Utf8               m$1
  #864 = Utf8               $times$extension
  #865 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #866 = NameAndType        #864:#865     // $times$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #867 = Methodref          #267.#866     // scala/collection/StringOps$.$times$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #868 = Utf8               a
  #869 = Utf8               b
  #870 = Utf8               x$10
  #871 = Utf8               coursier/graph/Conflict
  #872 = Class              #871          // coursier/graph/Conflict
  #873 = Methodref          #872.#54      // coursier/graph/Conflict.module:()Lcoursier/core/Module;
  #874 = Utf8               Lcoursier/graph/Conflict;
  #875 = Utf8               x$11
  #876 = Utf8               $anonfun$conflicts$3
  #877 = Utf8               (Lscala/collection/immutable/Map;Lscala/Tuple2;)I
  #878 = Utf8               indices$1
  #879 = NameAndType        #120:#102     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #880 = InterfaceMethodref #142.#879     // scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #881 = Utf8               mod
  #882 = Utf8               $anonfun$conflicts$5
  #883 = Utf8               (Lcoursier/graph/Conflict;)Ljava/lang/String;
  #884 = Utf8               x$12
  #885 = Methodref          #872.#67      // coursier/graph/Conflict.version:()Ljava/lang/String;
  #886 = Utf8               $anonfun$conflicts$6
  #887 = Utf8               (Lcoursier/graph/Conflict;)Lscala/Tuple2;
  #888 = Utf8               wasExcluded
  #889 = NameAndType        #888:#88      // wasExcluded:()Z
  #890 = Methodref          #872.#889     // coursier/graph/Conflict.wasExcluded:()Z
  #891 = Utf8                (and excluded it)
  #892 = String             #891          //  (and excluded it)
  #893 = Utf8               dependeeModule
  #894 = NameAndType        #893:#53      // dependeeModule:()Lcoursier/core/Module;
  #895 = Methodref          #872.#894     // coursier/graph/Conflict.dependeeModule:()Lcoursier/core/Module;
  #896 = Utf8               dependeeVersion
  #897 = NameAndType        #896:#66      // dependeeVersion:()Ljava/lang/String;
  #898 = Methodref          #872.#897     // coursier/graph/Conflict.dependeeVersion:()Ljava/lang/String;
  #899 = Utf8               wanted version
  #900 = String             #899          // wanted version
  #901 = Utf8               wantedVersion
  #902 = NameAndType        #901:#66      // wantedVersion:()Ljava/lang/String;
  #903 = Methodref          #872.#902     // coursier/graph/Conflict.wantedVersion:()Ljava/lang/String;
  #904 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #905 = NameAndType        #29:#904      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #906 = Methodref          #649.#905     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #907 = Utf8               extra
  #908 = Utf8               $anonfun$conflicts$7
  #909 = Utf8               x$13
  #910 = Utf8
  #911 = String             #910          //
  #912 = Utf8               x0$2
  #913 = NameAndType        #882:#883     // $anonfun$conflicts$5:(Lcoursier/graph/Conflict;)Ljava/lang/String;
  #914 = Methodref          #2.#913       // coursier/util/Print$.$anonfun$conflicts$5:(Lcoursier/graph/Conflict;)Ljava/lang/String;
  #915 = MethodHandle       6:#914        // REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$5:(Lcoursier/graph/Conflict;)Ljava/lang/String;
  #916 = MethodType         #883          //  (Lcoursier/graph/Conflict;)Ljava/lang/String;
  #917 = InvokeDynamic      #26:#135      // #26:apply:()Lscala/Function1;
  #918 = Utf8               size
  #919 = NameAndType        #918:#860     // size:()I
  #920 = InterfaceMethodref #158.#919     // scala/collection/SeqOps.size:()I
  #921 = Utf8               assert
  #922 = Utf8               (Z)V
  #923 = NameAndType        #921:#922     // assert:(Z)V
  #924 = Methodref          #262.#923     // scala/Predef$.assert:(Z)V
  #925 = NameAndType        #886:#887     // $anonfun$conflicts$6:(Lcoursier/graph/Conflict;)Lscala/Tuple2;
  #926 = Methodref          #2.#925       // coursier/util/Print$.$anonfun$conflicts$6:(Lcoursier/graph/Conflict;)Lscala/Tuple2;
  #927 = MethodHandle       6:#926        // REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$6:(Lcoursier/graph/Conflict;)Lscala/Tuple2;
  #928 = MethodType         #887          //  (Lcoursier/graph/Conflict;)Lscala/Tuple2;
  #929 = InvokeDynamic      #27:#135      // #27:apply:()Lscala/Function1;
  #930 = Integer            19
  #931 = Utf8               head
  #932 = NameAndType        #931:#207     // head:()Ljava/lang/Object;
  #933 = InterfaceMethodref #125.#932     // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
  #934 = Utf8                was selected, but
  #935 = String             #934          //  was selected, but
  #936 = NameAndType        #541:#542     // aligned:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #937 = Methodref          #2.#936       // coursier/util/Print$.aligned:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #938 = NameAndType        #908:#216     // $anonfun$conflicts$7:(Ljava/lang/String;)Ljava/lang/String;
  #939 = Methodref          #2.#938       // coursier/util/Print$.$anonfun$conflicts$7:(Ljava/lang/String;)Ljava/lang/String;
  #940 = MethodHandle       6:#939        // REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$7:(Ljava/lang/String;)Ljava/lang/String;
  #941 = MethodType         #216          //  (Ljava/lang/String;)Ljava/lang/String;
  #942 = InvokeDynamic      #28:#135      // #28:apply:()Lscala/Function1;
  #943 = Utf8               messages
  #944 = Methodref          #4.#30        // java/lang/Object."<init>":()V
  #945 = NameAndType        #853:#224     // $anonfun$render$1:(Ljava/lang/String;Ljava/lang/String;)Z
  #946 = Methodref          #2.#945       // coursier/util/Print$.$anonfun$render$1:(Ljava/lang/String;Ljava/lang/String;)Z
  #947 = Utf8               boxToBoolean
  #948 = Utf8               (Z)Ljava/lang/Boolean;
  #949 = NameAndType        #947:#948     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #950 = Methodref          #576.#949     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #951 = NameAndType        #856:#857     // $anonfun$aligned$1:(Lscala/Tuple2;)I
  #952 = Methodref          #2.#951       // coursier/util/Print$.$anonfun$aligned$1:(Lscala/Tuple2;)I
  #953 = Utf8               boxToInteger
  #954 = Utf8               (I)Ljava/lang/Integer;
  #955 = NameAndType        #953:#954     // boxToInteger:(I)Ljava/lang/Integer;
  #956 = Methodref          #576.#955     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #957 = NameAndType        #876:#877     // $anonfun$conflicts$3:(Lscala/collection/immutable/Map;Lscala/Tuple2;)I
  #958 = Methodref          #2.#957       // coursier/util/Print$.$anonfun$conflicts$3:(Lscala/collection/immutable/Map;Lscala/Tuple2;)I
  #959 = Utf8               coursier/core/Configuration
  #960 = Class              #959          // coursier/core/Configuration
  #961 = NameAndType        #758:#35      // $anonfun$dependenciesUnknownConfigs$6:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #962 = Methodref          #2.#961       // coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$6:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #963 = Methodref          #960.#667     // coursier/core/Configuration."<init>":(Ljava/lang/String;)V
  #964 = Utf8               $deserializeLambda$
  #965 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #966 = Utf8               scala/runtime/LambdaDeserialize
  #967 = Class              #966          // scala/runtime/LambdaDeserialize
  #968 = Utf8               bootstrap
  #969 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #970 = NameAndType        #968:#969     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #971 = Methodref          #967.#970     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #972 = MethodHandle       6:#971        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #973 = Utf8               lambdaDeserialize
  #974 = NameAndType        #973:#965     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #975 = InvokeDynamic      #29:#974      // #29:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #976 = Utf8               Code
  #977 = Utf8               LineNumberTable
  #978 = Utf8               LocalVariableTable
  #979 = Utf8               MethodParameters
  #980 = Utf8               StackMapTable
  #981 = Utf8               Signature
  #982 = Utf8               InnerClasses
  #983 = Utf8               SourceFile
  #984 = Utf8               BootstrapMethods
  #985 = Utf8               ScalaInlineInfo
  #986 = Utf8               Scala
{
  public static final coursier.util.Print$ MODULE$;
    descriptor: Lcoursier/util/Print$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/util/Print$
         3: dup
         4: invokespecial #31                 // Method "<init>":()V
         7: putstatic     #33                 // Field MODULE$:Lcoursier/util/Print$;
        10: return
      LineNumberTable:
        line 7: 0

  public java.lang.String dependency(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: invokevirtual #39                 // Method dependency:(Lcoursier/core/Dependency;Z)Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/util/Print$;
            0       7     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      dep                            final

  public java.lang.String dependency(coursier.core.Dependency, boolean);
    descriptor: (Lcoursier/core/Dependency;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #44                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #45                 // int 0
         6: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
         9: new           #44                 // class java/lang/StringBuilder
        12: dup
        13: ldc           #49                 // int 2
        15: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        18: aload_1
        19: invokevirtual #55                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        22: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        25: ldc           #61                 // String :
        27: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: aload_1
        31: invokevirtual #68                 // Method coursier/core/Dependency.version:()Ljava/lang/String;
        34: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: ldc           #61                 // String :
        39: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: aload_1
        43: invokevirtual #71                 // Method coursier/core/Dependency.configuration:()Ljava/lang/String;
        46: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        52: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: iload_2
        56: ifeq          66
        59: aload_1
        60: invokestatic  #77                 // Method exclusionsStr$1:(Lcoursier/core/Dependency;)Ljava/lang/String;
        63: goto          68
        66: ldc           #78                 // String
        68: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        71: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        74: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 66
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class coursier/util/Print$, class coursier/core/Dependency, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      75     0  this   Lcoursier/util/Print$;
            0      75     1   dep   Lcoursier/core/Dependency;
            0      75     2 printExclusions   Z
    MethodParameters:
      Name                           Flags
      dep                            final
      printExclusions                final

  public java.lang.String dependenciesUnknownConfigs(scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, coursier.core.Project>);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: aload_0
         5: invokevirtual #90                 // Method dependenciesUnknownConfigs$default$4:()Z
         8: aload_0
         9: invokevirtual #93                 // Method dependenciesUnknownConfigs$default$5:()Z
        12: invokevirtual #96                 // Method dependenciesUnknownConfigs:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;ZZZ)Ljava/lang/String;
        15: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/util/Print$;
            0      16     1  deps   Lscala/collection/immutable/Seq;
            0      16     2 projects   Lscala/collection/immutable/Map;
    Signature: #84                          // (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lcoursier/core/Project;>;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      deps                           final
      projects                       final

  public java.lang.String dependenciesUnknownConfigs(scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, coursier.core.Project>, boolean, boolean, boolean);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;ZZZ)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=10, args_size=6
         0: iload         4
         2: ifeq          23
         5: aload_1
         6: aload_2
         7: invokedynamic #123,  0            // InvokeDynamic #0:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
        12: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        17: checkcast     #125                // class scala/collection/immutable/Seq
        20: goto          24
        23: aload_1
        24: astore        6
        26: iload         5
        28: ifeq          99
        31: aload         6
        33: invokedynamic #136,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        38: invokeinterface #140,  2          // InterfaceMethod scala/collection/immutable/Seq.groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
        43: invokeinterface #146,  1          // InterfaceMethod scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
        48: invokedynamic #153,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        53: invokevirtual #156                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        56: checkcast     #158                // class scala/collection/SeqOps
        59: invokedynamic #165,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        64: getstatic     #170                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        67: getstatic     #175                // Field coursier/core/Organization$.MODULE$:Lcoursier/core/Organization$;
        70: invokevirtual #179                // Method coursier/core/Organization$.ordering:()Lscala/math/Ordering;
        73: getstatic     #184                // Field coursier/core/ModuleName$.MODULE$:Lcoursier/core/ModuleName$;
        76: invokevirtual #185                // Method coursier/core/ModuleName$.ordering:()Lscala/math/Ordering;
        79: getstatic     #188                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        82: getstatic     #188                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        85: invokevirtual #192                // Method scala/math/Ordering$.Tuple4:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        88: invokeinterface #196,  3          // InterfaceMethod scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        93: checkcast     #125                // class scala/collection/immutable/Seq
        96: goto          101
        99: aload         6
       101: astore        7
       103: aload         7
       105: iload_3
       106: invokedynamic #205,  0            // InvokeDynamic #4:apply:(Z)Lscala/Function1;
       111: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       116: checkcast     #125                // class scala/collection/immutable/Seq
       119: astore        8
       121: iload         5
       123: ifeq          139
       126: aload         8
       128: invokeinterface #209,  1          // InterfaceMethod scala/collection/immutable/Seq.distinct:()Ljava/lang/Object;
       133: checkcast     #125                // class scala/collection/immutable/Seq
       136: goto          141
       139: aload         8
       141: astore        9
       143: aload         9
       145: invokestatic  #214                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       148: invokeinterface #218,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
       153: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 23 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 252 /* append */
          offset_delta = 74
          locals = [ class scala/collection/immutable/Seq ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 48: 0
        line 49: 5
        line 57: 23
        line 60: 26
        line 61: 31
        line 62: 33
        line 64: 48
        line 68: 59
        line 72: 99
        line 74: 103
        line 75: 121
        line 76: 143
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26     127     6 deps0   Lscala/collection/immutable/Seq;
          103      50     7 deps1   Lscala/collection/immutable/Seq;
          121      32     8     l   Lscala/collection/immutable/Seq;
          143      10     9    l0   Lscala/collection/immutable/Seq;
            0     154     0  this   Lcoursier/util/Print$;
            0     154     1  deps   Lscala/collection/immutable/Seq;
            0     154     2 projects   Lscala/collection/immutable/Map;
            0     154     3 printExclusions   Z
            0     154     4 useFinalVersions   Z
            0     154     5 reorder   Z
    Signature: #99                          // (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lcoursier/core/Project;>;ZZZ)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      deps                           final
      projects                       final
      printExclusions                final
      useFinalVersions               final
      reorder                        final

  public boolean dependenciesUnknownConfigs$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/Print$;

  public boolean dependenciesUnknownConfigs$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/Print$;

  public boolean compatibleVersions(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=6, args_size=3
         0: getstatic     #231                // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
         3: aload_1
         4: invokevirtual #235                // Method coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
         7: astore_3
         8: aload_3
         9: invokevirtual #241                // Method coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
        12: getstatic     #246                // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
        15: invokevirtual #249                // Method coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
        18: astore        4
        20: dup
        21: ifnonnull     33
        24: pop
        25: aload         4
        27: ifnull        41
        30: goto          164
        33: aload         4
        35: invokevirtual #255                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        38: ifeq          164
        41: getstatic     #260                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        44: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        47: getstatic     #260                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        50: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        53: getstatic     #270                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        56: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        59: aload_1
        60: invokevirtual #273                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        63: bipush        46
        65: invokevirtual #277                // Method scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
        68: checkcast     #279                // class "[Ljava/lang/Object;"
        71: invokevirtual #283                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        74: iconst_2
        75: invokevirtual #287                // Method scala/collection/ArrayOps$.take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        78: checkcast     #279                // class "[Ljava/lang/Object;"
        81: invokevirtual #283                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        84: invokevirtual #291                // Method scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
        87: getstatic     #260                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        90: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        93: getstatic     #260                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        96: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        99: getstatic     #270                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       102: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       105: aload_2
       106: invokevirtual #273                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       109: bipush        46
       111: invokevirtual #277                // Method scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
       114: checkcast     #279                // class "[Ljava/lang/Object;"
       117: invokevirtual #283                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       120: iconst_2
       121: invokevirtual #287                // Method scala/collection/ArrayOps$.take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       124: checkcast     #279                // class "[Ljava/lang/Object;"
       127: invokevirtual #283                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       130: invokevirtual #291                // Method scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
       133: astore        5
       135: dup
       136: ifnonnull     148
       139: pop
       140: aload         5
       142: ifnull        156
       145: goto          160
       148: aload         5
       150: invokevirtual #255                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       153: ifeq          160
       156: iconst_1
       157: goto          161
       160: iconst_0
       161: goto          178
       164: aload_3
       165: invokevirtual #241                // Method coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
       168: getstatic     #296                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
       171: aload_2
       172: invokevirtual #299                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
       175: invokevirtual #303                // Method coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
       178: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class coursier/util/Print$, class java/lang/String, class java/lang/String, class coursier/core/VersionConstraint, class coursier/core/VersionInterval ]
          stack = [ class coursier/core/VersionInterval ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 106
          locals = [ class coursier/util/Print$, class java/lang/String, class java/lang/String, class coursier/core/VersionConstraint, class coursier/core/VersionInterval, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 84: 0
        line 85: 8
        line 86: 41
        line 88: 164
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8     170     3     c   Lcoursier/core/VersionConstraint;
            0     179     0  this   Lcoursier/util/Print$;
            0     179     1 compatibleWith   Ljava/lang/String;
            0     179     2 selected   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      compatibleWith                 final
      selected                       final

  public java.lang.String dependencyTree(coursier.core.Resolution, scala.collection.immutable.Seq<coursier.core.Dependency>, boolean, boolean, boolean);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;ZZZ)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=14, args_size=6
         0: getstatic     #316                // Field coursier/util/Print$Colors$.MODULE$:Lcoursier/util/Print$Colors$;
         3: iload         5
         5: invokevirtual #320                // Method coursier/util/Print$Colors$.get:(Z)Lcoursier/util/Print$Colors;
         8: astore        6
        10: iload         4
        12: ifeq          150
        15: getstatic     #325                // Field scala/Option$.MODULE$:Lscala/Option$;
        18: aload_2
        19: invokevirtual #328                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        22: aload_1
        23: invokedynamic #339,  0            // InvokeDynamic #5:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
        28: invokevirtual #345                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        31: checkcast     #125                // class scala/collection/immutable/Seq
        34: astore        7
        36: getstatic     #350                // Field coursier/graph/ReverseModuleTree$.MODULE$:Lcoursier/graph/ReverseModuleTree$;
        39: aload         7
        41: invokedynamic #357,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        46: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        51: checkcast     #158                // class scala/collection/SeqOps
        54: invokeinterface #358,  1          // InterfaceMethod scala/collection/SeqOps.distinct:()Ljava/lang/Object;
        59: checkcast     #125                // class scala/collection/immutable/Seq
        62: aload_1
        63: astore        9
        65: iload_3
        66: istore        10
        68: getstatic     #363                // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
        71: invokevirtual #366                // Method coursier/graph/DependencyTree$.apply$default$2:()Lscala/collection/immutable/Seq;
        74: astore        11
        76: getstatic     #363                // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
        79: aload         9
        81: aload         11
        83: iload         10
        85: invokevirtual #369                // Method coursier/graph/DependencyTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
        88: invokevirtual #373                // Method coursier/graph/ReverseModuleTree$.fromDependencyTree:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        91: astore        8
        93: getstatic     #378                // Field coursier/util/Tree$.MODULE$:Lcoursier/util/Tree$;
        96: aload         8
        98: invokeinterface #379,  1          // InterfaceMethod scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
       103: invokedynamic #386,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
       108: getstatic     #170                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
       111: getstatic     #188                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       114: getstatic     #188                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       117: getstatic     #188                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       120: invokevirtual #390                // Method scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
       123: invokevirtual #391                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       126: checkcast     #393                // class scala/collection/immutable/IndexedSeq
       129: invokedynamic #400,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
       134: invokevirtual #403                // Method coursier/util/Tree$.apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
       137: aload         6
       139: invokedynamic #413,  0            // InvokeDynamic #9:apply:(Lcoursier/util/Print$Colors;)Lscala/Function1;
       144: invokevirtual #419                // Method coursier/util/Tree.render:(Lscala/Function1;)Ljava/lang/String;
       147: goto          212
       150: getstatic     #325                // Field scala/Option$.MODULE$:Lscala/Option$;
       153: aload_2
       154: invokevirtual #328                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
       157: aload_1
       158: invokedynamic #424,  0            // InvokeDynamic #10:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
       163: invokevirtual #345                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       166: checkcast     #125                // class scala/collection/immutable/Seq
       169: astore        12
       171: getstatic     #363                // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
       174: aload_1
       175: aload         12
       177: iload_3
       178: invokevirtual #369                // Method coursier/graph/DependencyTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
       181: astore        13
       183: getstatic     #378                // Field coursier/util/Tree$.MODULE$:Lcoursier/util/Tree$;
       186: aload         13
       188: invokeinterface #379,  1          // InterfaceMethod scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
       193: invokedynamic #431,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
       198: invokevirtual #403                // Method coursier/util/Tree$.apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
       201: aload_1
       202: aload         6
       204: invokedynamic #441,  0            // InvokeDynamic #12:apply:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;)Lscala/Function1;
       209: invokevirtual #419                // Method coursier/util/Tree.render:(Lscala/Function1;)Ljava/lang/String;
       212: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 150
          locals = [ class coursier/util/Print$Colors ]
        frame_type = 125 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 99: 0
        line 101: 10
        line 102: 15
        line 104: 36
        line 105: 39
        line 106: 62
        line 109: 93
        line 110: 137
        line 125: 150
        line 126: 171
        line 127: 183
        line 128: 201
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           65      23     9   x$1   Lcoursier/core/Resolution;
           68      20    10   x$2   Z
           76      12    11   x$3   Lscala/collection/immutable/Seq;
           36     111     7 roots0   Lscala/collection/immutable/Seq;
           93      54     8     t   Lscala/collection/immutable/Seq;
          171      41    12 roots0   Lscala/collection/immutable/Seq;
          183      29    13     t   Lscala/collection/immutable/Seq;
           10     202     6 colors0   Lcoursier/util/Print$Colors;
            0     213     0  this   Lcoursier/util/Print$;
            0     213     1 resolution   Lcoursier/core/Resolution;
            0     213     2 roots   Lscala/collection/immutable/Seq;
            0     213     3 printExclusions   Z
            0     213     4 reverse   Z
            0     213     5 colors   Z
    Signature: #309                         // (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;ZZZ)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      resolution                     final
      roots                          final
      printExclusions                final
      reverse                        final
      colors                         final

  public scala.collection.immutable.Seq<coursier.core.Dependency> dependencyTree$default$2();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/Print$;
    Signature: #451                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;

  public boolean dependencyTree$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/Print$;

  public boolean dependencyTree$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/Print$;

  public boolean dependencyTree$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/Print$;

  private java.lang.String render(coursier.core.Module, java.lang.String, boolean, scala.Option<java.lang.String>, coursier.util.Print$Colors);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;ZLscala/Option;Lcoursier/util/Print$Colors;)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=15, args_size=6
         0: iload_3
         1: ifeq          282
         4: aload         4
         6: astore        7
         8: getstatic     #463                // Field scala/None$.MODULE$:Lscala/None$;
        11: aload         7
        13: invokevirtual #255                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        16: ifeq          78
        19: new           #44                 // class java/lang/StringBuilder
        22: dup
        23: ldc_w         #464                // int 12
        26: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        29: aload         5
        31: invokevirtual #467                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
        34: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: ldc_w         #469                // String (excluded)
        40: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: aload         5
        45: invokevirtual #472                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
        48: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        51: ldc_w         #474                // String
        54: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: aload_1
        58: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        61: ldc           #61                 // String :
        63: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        66: aload_2
        67: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        73: astore        6
        75: goto          277
        78: goto          81
        81: aload         7
        83: instanceof    #476                // class scala/Some
        86: ifeq          264
        89: aload         7
        91: checkcast     #476                // class scala/Some
        94: astore        8
        96: aload         8
        98: invokevirtual #479                // Method scala/Some.value:()Ljava/lang/Object;
       101: checkcast     #80                 // class java/lang/String
       104: astore        9
       106: aload         9
       108: aload_2
       109: astore        11
       111: dup
       112: ifnonnull     124
       115: pop
       116: aload         11
       118: ifnull        132
       121: goto          138
       124: aload         11
       126: invokevirtual #255                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       129: ifeq          138
       132: ldc_w         #483                // String this version
       135: goto          162
       138: new           #44                 // class java/lang/StringBuilder
       141: dup
       142: ldc_w         #484                // int 8
       145: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       148: ldc_w         #486                // String version
       151: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       154: aload         9
       156: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       159: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       162: astore        10
       164: new           #44                 // class java/lang/StringBuilder
       167: dup
       168: ldc           #45                 // int 0
       170: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       173: new           #44                 // class java/lang/StringBuilder
       176: dup
       177: ldc           #49                 // int 2
       179: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       182: aload_1
       183: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       186: ldc           #61                 // String :
       188: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       191: aload_2
       192: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       195: ldc_w         #474                // String
       198: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       201: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       204: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       207: new           #44                 // class java/lang/StringBuilder
       210: dup
       211: ldc_w         #487                // int 27
       214: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       217: aload         5
       219: invokevirtual #490                // Method coursier/util/Print$Colors.red:()Ljava/lang/String;
       222: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       225: ldc_w         #492                // String (excluded,
       228: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       231: aload         10
       233: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       236: ldc_w         #494                // String  present anyway)
       239: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       242: aload         5
       244: invokevirtual #472                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
       247: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       250: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       253: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       256: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       259: astore        6
       261: goto          277
       264: goto          267
       267: new           #496                // class scala/MatchError
       270: dup
       271: aload         7
       273: invokespecial #499                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       276: athrow
       277: aload         6
       279: goto          453
       282: aload         4
       284: aload_2
       285: invokedynamic #509,  0            // InvokeDynamic #13:apply:(Ljava/lang/String;)Lscala/Function1;
       290: invokevirtual #513                // Method scala/Option.forall:(Lscala/Function1;)Z
       293: ifeq          300
       296: aload_2
       297: goto          425
       300: aload         4
       302: aload_2
       303: invokedynamic #521,  0            // InvokeDynamic #14:apply:(Ljava/lang/String;)Lscala/Function0;
       308: invokevirtual #345                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       311: checkcast     #80                 // class java/lang/String
       314: astore        13
       316: aload_0
       317: aload_2
       318: aload         4
       320: aload_2
       321: invokedynamic #526,  0            // InvokeDynamic #15:apply:(Ljava/lang/String;)Lscala/Function0;
       326: invokevirtual #345                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       329: checkcast     #80                 // class java/lang/String
       332: invokevirtual #528                // Method compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
       335: istore        14
       337: new           #44                 // class java/lang/StringBuilder
       340: dup
       341: ldc           #45                 // int 0
       343: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       346: iload         14
       348: ifeq          359
       351: aload         5
       353: invokevirtual #467                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
       356: goto          364
       359: aload         5
       361: invokevirtual #490                // Method coursier/util/Print$Colors.red:()Ljava/lang/String;
       364: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       367: new           #44                 // class java/lang/StringBuilder
       370: dup
       371: ldc_w         #529                // int 4
       374: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       377: aload_2
       378: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       381: ldc_w         #531                // String  ->
       384: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       387: aload         13
       389: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       392: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       395: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       398: iload         14
       400: ifeq          408
       403: ldc           #78                 // String
       405: goto          411
       408: ldc_w         #533                // String  (possible incompatibility)
       411: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       414: aload         5
       416: invokevirtual #472                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
       419: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       422: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       425: astore        12
       427: new           #44                 // class java/lang/StringBuilder
       430: dup
       431: ldc           #112                // int 1
       433: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       436: aload_1
       437: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       440: ldc           #61                 // String :
       442: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       445: aload         12
       447: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       450: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       453: areturn
      StackMapTable: number_of_entries = 17
        frame_type = 253 /* append */
          offset_delta = 78
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class coursier/util/Print$, class coursier/core/Module, class java/lang/String, int, class scala/Option, class coursier/util/Print$Colors, top, class scala/Option, class scala/Some, class java/lang/String, top, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 5 /* same */
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 101
          locals = [ class coursier/util/Print$, class coursier/core/Module, class java/lang/String, int, class scala/Option, class coursier/util/Print$Colors, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/util/Print$, class coursier/core/Module, class java/lang/String, int, class scala/Option, class coursier/util/Print$Colors, class java/lang/String, class scala/Option ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 4
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [ class coursier/util/Print$, class coursier/core/Module, class java/lang/String, int, class scala/Option, class coursier/util/Print$Colors, top, top, top, top, top, top, top, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/util/Print$, class coursier/core/Module, class java/lang/String, int, class scala/Option, class coursier/util/Print$Colors, top, top, top, top, top, top, top, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 107 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/util/Print$, class coursier/core/Module, class java/lang/String, int, class scala/Option, class coursier/util/Print$Colors, top, top, top, top, top, top, top, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class coursier/util/Print$, class coursier/core/Module, class java/lang/String, int, class scala/Option, class coursier/util/Print$Colors ]
          stack = [ class java/lang/String ]
        frame_type = 91 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 147: 0
        line 148: 4
        line 149: 8
        line 150: 19
        line 149: 78
        line 151: 81
        line 153: 106
        line 154: 132
        line 156: 138
        line 158: 164
        line 159: 207
        line 151: 264
        line 148: 267
        line 163: 282
        line 164: 296
        line 166: 300
        line 167: 316
        line 171: 337
        line 169: 346
        line 170: 367
        line 171: 398
        line 172: 414
        line 175: 427
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          164      95    10 versionMsg   Ljava/lang/String;
          106     158     9 version0   Ljava/lang/String;
          316     109    13 reconciledVersion   Ljava/lang/String;
          337      88    14 assumeCompatibleVersions   Z
          427      26    12 versionStr   Ljava/lang/String;
            0     454     0  this   Lcoursier/util/Print$;
            0     454     1 module   Lcoursier/core/Module;
            0     454     2 version   Ljava/lang/String;
            0     454     3 excluded   Z
            0     454     4 reconciledVersionOpt   Lscala/Option;
            0     454     5 colors   Lcoursier/util/Print$Colors;
    Signature: #456                         // (Lcoursier/core/Module;Ljava/lang/String;ZLscala/Option<Ljava/lang/String;>;Lcoursier/util/Print$Colors;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      excluded                       final
      reconciledVersionOpt           final
      colors                         final

  private scala.collection.immutable.Seq<java.lang.String> aligned(scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.String>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokeinterface #546,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
         6: ifeq          15
         9: getstatic     #551                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        12: goto          58
        15: aload_1
        16: invokeinterface #555,  1          // InterfaceMethod scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
        21: invokedynamic #562,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
        26: invokeinterface #567,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        31: getstatic     #570                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
        34: invokeinterface #574,  2          // InterfaceMethod scala/collection/Iterator.max:(Lscala/math/Ordering;)Ljava/lang/Object;
        39: invokestatic  #580                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        42: istore_2
        43: aload_1
        44: iload_2
        45: invokedynamic #590,  0            // InvokeDynamic #17:apply:(I)Lscala/Function1;
        50: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        55: checkcast     #125                // class scala/collection/immutable/Seq
        58: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 106 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 179: 0
        line 180: 9
        line 182: 15
        line 183: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      15     2     m   I
            0      59     0  this   Lcoursier/util/Print$;
            0      59     1     l   Lscala/collection/immutable/Seq;
    Signature: #543                         // (Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;>;)Lscala/collection/immutable/Seq<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      l                              final

  public scala.collection.immutable.Seq<java.lang.String> conflicts(scala.collection.immutable.Seq<coursier.graph.Conflict>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: invokedynamic #601,  0            // InvokeDynamic #18:apply:()Lscala/Function1;
         6: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        11: checkcast     #603                // class scala/collection/IterableOps
        14: invokeinterface #606,  1          // InterfaceMethod scala/collection/IterableOps.zipWithIndex:()Ljava/lang/Object;
        19: checkcast     #158                // class scala/collection/SeqOps
        22: invokeinterface #608,  1          // InterfaceMethod scala/collection/SeqOps.reverse:()Ljava/lang/Object;
        27: checkcast     #610                // class scala/collection/IterableOnceOps
        30: getstatic     #615                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
        33: invokevirtual #619                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
        36: invokeinterface #623,  2          // InterfaceMethod scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
        41: astore_2
        42: aload_1
        43: invokedynamic #628,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
        48: invokeinterface #140,  2          // InterfaceMethod scala/collection/immutable/Seq.groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
        53: invokeinterface #631,  1          // InterfaceMethod scala/collection/immutable/Map.toSeq:()Lscala/collection/immutable/Seq;
        58: aload_2
        59: invokedynamic #637,  0            // InvokeDynamic #20:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
        64: getstatic     #570                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
        67: invokeinterface #638,  3          // InterfaceMethod scala/collection/immutable/Seq.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        72: checkcast     #603                // class scala/collection/IterableOps
        75: invokedynamic #643,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
        80: invokeinterface #644,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        85: checkcast     #125                // class scala/collection/immutable/Seq
        88: areturn
      LineNumberTable:
        line 192: 0
        line 193: 1
        line 196: 30
        line 198: 42
        line 199: 43
        line 201: 58
        line 205: 75
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           42      46     2 indices   Lscala/collection/immutable/Map;
            0      89     0  this   Lcoursier/util/Print$;
            0      89     1 conflicts   Lscala/collection/immutable/Seq;
    Signature: #594                         // (Lscala/collection/immutable/Seq<Lcoursier/graph/Conflict;>;)Lscala/collection/immutable/Seq<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      conflicts                      final

  public static final java.lang.String $anonfun$dependency$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        87
         6: aload_2
         7: invokevirtual #652                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #654                // class coursier/core/Organization
        13: invokevirtual #656                // Method coursier/core/Organization.value:()Ljava/lang/String;
        16: astore_3
        17: aload_2
        18: invokevirtual #659                // Method scala/Tuple2._2:()Ljava/lang/Object;
        21: checkcast     #661                // class coursier/core/ModuleName
        24: invokevirtual #662                // Method coursier/core/ModuleName.value:()Ljava/lang/String;
        27: astore        4
        29: new           #44                 // class java/lang/StringBuilder
        32: dup
        33: ldc_w         #663                // int 14
        36: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        39: ldc_w         #665                // String \n  exclude(
        42: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: new           #654                // class coursier/core/Organization
        48: dup
        49: aload_3
        50: invokespecial #668                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
        53: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        56: ldc_w         #670                // String ,
        59: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: new           #661                // class coursier/core/ModuleName
        65: dup
        66: aload         4
        68: invokespecial #671                // Method coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
        71: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        74: ldc_w         #673                // String )
        77: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        80: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        83: astore_1
        84: goto          99
        87: goto          90
        90: new           #496                // class scala/MatchError
        93: dup
        94: aload_2
        95: invokespecial #499                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        98: athrow
        99: aload_1
       100: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 87
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class java/lang/String, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 27: 0
        line 28: 2
        line 29: 29
        line 28: 87
        line 27: 90
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      70     3   org   Ljava/lang/String;
           29      58     4  name   Ljava/lang/String;
            0     101     0  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  private static final java.lang.String exclusionsStr$1(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #681                // Method coursier/core/Dependency.exclusions:()Lscala/collection/immutable/Set;
         4: invokeinterface #684,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
         9: getstatic     #170                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        12: getstatic     #175                // Field coursier/core/Organization$.MODULE$:Lcoursier/core/Organization$;
        15: invokevirtual #179                // Method coursier/core/Organization$.ordering:()Lscala/math/Ordering;
        18: getstatic     #184                // Field coursier/core/ModuleName$.MODULE$:Lcoursier/core/ModuleName$;
        21: invokevirtual #185                // Method coursier/core/ModuleName$.ordering:()Lscala/math/Ordering;
        24: invokevirtual #688                // Method scala/math/Ordering$.Tuple2:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        27: invokevirtual #691                // Method scala/collection/immutable/Vector.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
        30: checkcast     #693                // class scala/collection/StrictOptimizedIterableOps
        33: invokedynamic #697,  0            // InvokeDynamic #22:apply:()Lscala/Function1;
        38: invokeinterface #698,  2          // InterfaceMethod scala/collection/StrictOptimizedIterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        43: checkcast     #610                // class scala/collection/IterableOnceOps
        46: invokeinterface #700,  1          // InterfaceMethod scala/collection/IterableOnceOps.mkString:()Ljava/lang/String;
        51: areturn
      LineNumberTable:
        line 23: 0
        line 26: 9
        line 27: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0 dep$1   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      dep$1                          final

  public static final java.lang.String $anonfun$dependenciesUnknownConfigs$2(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #68                 // Method coursier/core/Dependency.version:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 dep$2   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      dep$2                          final

  public static final java.lang.String $anonfun$dependenciesUnknownConfigs$3(coursier.core.Project);
    descriptor: (Lcoursier/core/Project;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #707                // Method coursier/core/Project.version:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/core/Project;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final coursier.core.Dependency $anonfun$dependenciesUnknownConfigs$1(scala.collection.immutable.Map, coursier.core.Dependency);
    descriptor: (Lscala/collection/immutable/Map;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: aload_1
         3: invokevirtual #713                // Method coursier/core/Dependency.moduleVersion:()Lscala/Tuple2;
         6: invokeinterface #715,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        11: aload_1
        12: invokedynamic #721,  0            // InvokeDynamic #23:apply:(Lcoursier/core/Dependency;)Lscala/Function0;
        17: invokedynamic #726,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
        22: invokevirtual #730                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        25: checkcast     #80                 // class java/lang/String
        28: invokevirtual #734                // Method coursier/core/Dependency.withVersion:(Ljava/lang/String;)Lcoursier/core/Dependency;
        31: areturn
      LineNumberTable:
        line 50: 0
        line 51: 1
        line 52: 2
        line 53: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0 projects$1   Lscala/collection/immutable/Map;
            0      32     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      projects$1                     final
      dep                            final

  public static final coursier.core.Dependency $anonfun$dependenciesUnknownConfigs$4(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #739                // Field coursier/core/Configuration$.MODULE$:Lcoursier/core/Configuration$;
         4: invokevirtual #742                // Method coursier/core/Configuration$.empty:()Ljava/lang/String;
         7: invokevirtual #745                // Method coursier/core/Dependency.withConfiguration:(Ljava/lang/String;)Lcoursier/core/Dependency;
        10: getstatic     #750                // Field coursier/core/Attributes$.MODULE$:Lcoursier/core/Attributes$;
        13: invokevirtual #753                // Method coursier/core/Attributes$.empty:()Lcoursier/core/Attributes;
        16: invokevirtual #757                // Method coursier/core/Dependency.withAttributes:(Lcoursier/core/Attributes;)Lcoursier/core/Dependency;
        19: areturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0   x$2   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.lang.String $anonfun$dependenciesUnknownConfigs$6(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #71                 // Method coursier/core/Dependency.configuration:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$3   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final coursier.core.Dependency $anonfun$dependenciesUnknownConfigs$5(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lcoursier/core/Dependency;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        81
         6: aload_2
         7: invokevirtual #652                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #51                 // class coursier/core/Dependency
        13: astore_3
        14: aload_2
        15: invokevirtual #659                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #125                // class scala/collection/immutable/Seq
        21: astore        4
        23: getstatic     #739                // Field coursier/core/Configuration$.MODULE$:Lcoursier/core/Configuration$;
        26: aload         4
        28: invokeinterface #379,  1          // InterfaceMethod scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
        33: invokedynamic #765,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
        38: invokevirtual #156                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        41: checkcast     #767                // class scala/collection/immutable/StrictOptimizedSeqOps
        44: getstatic     #739                // Field coursier/core/Configuration$.MODULE$:Lcoursier/core/Configuration$;
        47: invokevirtual #768                // Method coursier/core/Configuration$.ordering:()Lscala/math/Ordering;
        50: invokeinterface #769,  2          // InterfaceMethod scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
        55: checkcast     #158                // class scala/collection/SeqOps
        58: invokeinterface #358,  1          // InterfaceMethod scala/collection/SeqOps.distinct:()Ljava/lang/Object;
        63: checkcast     #125                // class scala/collection/immutable/Seq
        66: invokevirtual #773                // Method coursier/core/Configuration$.join:(Lscala/collection/immutable/Seq;)Ljava/lang/String;
        69: astore        5
        71: aload_3
        72: aload         5
        74: invokevirtual #745                // Method coursier/core/Dependency.withConfiguration:(Ljava/lang/String;)Lcoursier/core/Dependency;
        77: astore_1
        78: goto          93
        81: goto          84
        84: new           #496                // class scala/MatchError
        87: dup
        88: aload_2
        89: invokespecial #499                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        92: athrow
        93: aload_1
        94: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 81
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class coursier/core/Dependency, class scala/Tuple2, class coursier/core/Dependency, class scala/collection/immutable/Seq, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 64: 0
        line 65: 23
        line 66: 71
        line 64: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71       6     5  conf   Ljava/lang/String;
           14      67     3     k   Lcoursier/core/Dependency;
           23      58     4     l   Lscala/collection/immutable/Seq;
            0      95     0  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final scala.Tuple4 $anonfun$dependenciesUnknownConfigs$7(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lscala/Tuple4;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=1, args_size=1
         0: new           #777                // class scala/Tuple4
         3: dup
         4: new           #654                // class coursier/core/Organization
         7: dup
         8: aload_0
         9: invokevirtual #55                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        12: invokevirtual #780                // Method coursier/core/Module.organization:()Ljava/lang/String;
        15: invokespecial #668                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
        18: new           #661                // class coursier/core/ModuleName
        21: dup
        22: aload_0
        23: invokevirtual #55                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        26: invokevirtual #782                // Method coursier/core/Module.name:()Ljava/lang/String;
        29: invokespecial #671                // Method coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
        32: aload_0
        33: invokevirtual #55                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        36: invokevirtual #783                // Method coursier/core/Module.toString:()Ljava/lang/String;
        39: aload_0
        40: invokevirtual #68                 // Method coursier/core/Dependency.version:()Ljava/lang/String;
        43: invokespecial #786                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        46: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      dep                            final

  public static final java.lang.String $anonfun$dependenciesUnknownConfigs$8(boolean, coursier.core.Dependency);
    descriptor: (ZLcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #33                 // Field MODULE$:Lcoursier/util/Print$;
         3: aload_1
         4: iload_0
         5: invokevirtual #39                 // Method dependency:(Lcoursier/core/Dependency;Z)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 printExclusions$1   Z
            0       9     1   x$4   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      printExclusions$1              final
      x$4                            final

  public static final scala.collection.immutable.Seq $anonfun$dependencyTree$1(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #794                // Method coursier/core/Resolution.minDependencies:()Lscala/collection/immutable/Set;
         4: invokeinterface #795,  1          // InterfaceMethod scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
         9: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 resolution$1   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      resolution$1                   final

  public static final coursier.core.Module $anonfun$dependencyTree$2(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #55                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final scala.Tuple3 $anonfun$dependencyTree$3(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #798                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #801                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
         8: invokevirtual #780                // Method coursier/core/Module.organization:()Ljava/lang/String;
        11: aload_0
        12: invokevirtual #801                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        15: invokevirtual #782                // Method coursier/core/Module.name:()Ljava/lang/String;
        18: aload_0
        19: invokevirtual #801                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        22: invokevirtual #804                // Method coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
        25: invokespecial #807                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        28: areturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0     t   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      t                              final

  public static final scala.collection.immutable.Seq $anonfun$dependencyTree$4(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #812                // Method coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final java.lang.String $anonfun$dependencyTree$5(coursier.util.Print$Colors, coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_1
         1: invokevirtual #817                // Method coursier/graph/ReverseModuleTree.excludedDependsOn:()Z
         4: ifeq          68
         7: new           #44                 // class java/lang/StringBuilder
        10: dup
        11: ldc_w         #818                // int 15
        14: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        17: aload_0
        18: invokevirtual #467                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
        21: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc_w         #820                // String (excluded by)
        27: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: aload_0
        31: invokevirtual #472                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
        34: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: ldc_w         #474                // String
        40: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: aload_1
        44: invokevirtual #801                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        47: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        50: ldc           #61                 // String :
        52: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: aload_1
        56: invokevirtual #822                // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
        59: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        65: goto          269
        68: aload_1
        69: invokevirtual #825                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
        72: aload_1
        73: invokevirtual #828                // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
        76: astore_2
        77: dup
        78: ifnonnull     89
        81: pop
        82: aload_2
        83: ifnull        96
        86: goto          130
        89: aload_2
        90: invokevirtual #255                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        93: ifeq          130
        96: new           #44                 // class java/lang/StringBuilder
        99: dup
       100: ldc           #112                // int 1
       102: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       105: aload_1
       106: invokevirtual #801                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       109: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       112: ldc           #61                 // String :
       114: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       117: aload_1
       118: invokevirtual #822                // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
       121: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       124: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       127: goto          269
       130: getstatic     #33                 // Field MODULE$:Lcoursier/util/Print$;
       133: aload_1
       134: invokevirtual #825                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       137: aload_1
       138: invokevirtual #828                // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
       141: invokevirtual #528                // Method compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
       144: istore_3
       145: new           #44                 // class java/lang/StringBuilder
       148: dup
       149: ldc           #45                 // int 0
       151: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       154: new           #44                 // class java/lang/StringBuilder
       157: dup
       158: ldc           #49                 // int 2
       160: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       163: aload_1
       164: invokevirtual #801                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       167: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       170: ldc           #61                 // String :
       172: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       175: aload_1
       176: invokevirtual #822                // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
       179: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       182: ldc_w         #474                // String
       185: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       188: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       191: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       194: iload_3
       195: ifeq          205
       198: aload_0
       199: invokevirtual #467                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
       202: goto          209
       205: aload_0
       206: invokevirtual #490                // Method coursier/util/Print$Colors.red:()Ljava/lang/String;
       209: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       212: new           #44                 // class java/lang/StringBuilder
       215: dup
       216: ldc           #111                // int 5
       218: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       221: aload_1
       222: invokevirtual #831                // Method coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
       225: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       228: ldc           #61                 // String :
       230: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       233: aload_1
       234: invokevirtual #825                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       237: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       240: ldc_w         #531                // String  ->
       243: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       246: aload_1
       247: invokevirtual #828                // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
       250: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       253: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       256: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       259: aload_0
       260: invokevirtual #472                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
       263: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       266: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       269: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 251 /* same_frame_extended */
          offset_delta = 68
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 33 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 74
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree ]
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 111: 0
        line 112: 7
        line 113: 68
        line 114: 96
        line 116: 130
        line 120: 145
        line 118: 154
        line 119: 194
        line 120: 212
        line 121: 259
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          145     124     3 assumeCompatibleVersions   Z
            0     270     0 colors0$1   Lcoursier/util/Print$Colors;
            0     270     1  node   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      colors0$1                      final
      node                           final

  public static final scala.collection.immutable.Seq $anonfun$dependencyTree$6(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #834                // Method coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 resolution$1   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      resolution$1                   final

  public static final scala.collection.immutable.Seq $anonfun$dependencyTree$7(coursier.graph.DependencyTree);
    descriptor: (Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #840                // Method coursier/graph/DependencyTree.children:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$7   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final java.lang.String $anonfun$dependencyTree$8(coursier.core.Resolution, coursier.util.Print$Colors, coursier.graph.DependencyTree);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;Lcoursier/graph/DependencyTree;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=3, args_size=3
         0: getstatic     #33                 // Field MODULE$:Lcoursier/util/Print$;
         3: aload_2
         4: invokevirtual #844                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
         7: invokevirtual #55                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        10: aload_2
        11: invokevirtual #844                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
        14: invokevirtual #68                 // Method coursier/core/Dependency.version:()Ljava/lang/String;
        17: aload_2
        18: invokevirtual #846                // Method coursier/graph/DependencyTree.excluded:()Z
        21: aload_0
        22: invokevirtual #850                // Method coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
        25: aload_2
        26: invokevirtual #844                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
        29: invokevirtual #55                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        32: invokeinterface #715,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        37: aload_1
        38: invokespecial #852                // Method render:(Lcoursier/core/Module;Ljava/lang/String;ZLscala/Option;Lcoursier/util/Print$Colors;)Ljava/lang/String;
        41: areturn
      LineNumberTable:
        line 129: 0
        line 130: 3
        line 131: 10
        line 132: 17
        line 133: 21
        line 134: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0 resolution$1   Lcoursier/core/Resolution;
            0      42     1 colors0$1   Lcoursier/util/Print$Colors;
            0      42     2     t   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      resolution$1                   final
      colors0$1                      final
      t                              final

  public static final boolean $anonfun$render$1(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: astore_2
         3: dup
         4: ifnonnull     15
         7: pop
         8: aload_2
         9: ifnull        22
        12: goto          26
        15: aload_2
        16: invokevirtual #255                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        19: ifeq          26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 version$1   Ljava/lang/String;
            0      28     1   x$8   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version$1                      final
      x$8                            final

  public static final java.lang.String $anonfun$render$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 166: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 version$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version$1                      final

  public static final java.lang.String $anonfun$render$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 version$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version$1                      final

  public static final int $anonfun$aligned$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #652                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #80                 // class java/lang/String
         7: invokevirtual #862                // Method java/lang/String.length:()I
        10: ireturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$9   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$9                            final

  public static final java.lang.String $anonfun$aligned$2(int, scala.Tuple2);
    descriptor: (ILscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        77
         6: aload_3
         7: invokevirtual #652                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #80                 // class java/lang/String
        13: astore        4
        15: aload_3
        16: invokevirtual #659                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #80                 // class java/lang/String
        22: astore        5
        24: new           #44                 // class java/lang/StringBuilder
        27: dup
        28: ldc           #45                 // int 0
        30: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        33: aload         4
        35: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: getstatic     #270                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        41: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        44: ldc_w         #474                // String
        47: invokevirtual #273                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        50: iload_0
        51: aload         4
        53: invokevirtual #862                // Method java/lang/String.length:()I
        56: isub
        57: iconst_1
        58: iadd
        59: invokevirtual #867                // Method scala/collection/StringOps$.$times$extension:(Ljava/lang/String;I)Ljava/lang/String;
        62: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        65: aload         5
        67: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        73: astore_2
        74: goto          89
        77: goto          80
        80: new           #496                // class scala/MatchError
        83: dup
        84: aload_3
        85: invokespecial #499                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        88: athrow
        89: aload_2
        90: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 77
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ int, class scala/Tuple2, class java/lang/String, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 183: 0
        line 184: 2
        line 185: 24
        line 184: 77
        line 183: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      62     4     a   Ljava/lang/String;
           24      53     5     b   Ljava/lang/String;
            0      91     0   m$1   I
            0      91     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      m$1                            final
      x0$1                           final

  public static final coursier.core.Module $anonfun$conflicts$1(coursier.graph.Conflict);
    descriptor: (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #873                // Method coursier/graph/Conflict.module:()Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$10   Lcoursier/graph/Conflict;
    MethodParameters:
      Name                           Flags
      x$10                           final

  public static final coursier.core.Module $anonfun$conflicts$2(coursier.graph.Conflict);
    descriptor: (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #873                // Method coursier/graph/Conflict.module:()Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$11   Lcoursier/graph/Conflict;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final int $anonfun$conflicts$3(scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lscala/collection/immutable/Map;Lscala/Tuple2;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        30
         6: aload_3
         7: invokevirtual #652                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #481                // class coursier/core/Module
        13: astore        4
        15: aload_0
        16: aload         4
        18: invokeinterface #880,  2          // InterfaceMethod scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        23: invokestatic  #580                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        26: istore_2
        27: goto          42
        30: goto          33
        33: new           #496                // class scala/MatchError
        36: dup
        37: aload_3
        38: invokespecial #499                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        41: athrow
        42: iload_2
        43: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/Map, class scala/Tuple2, int, class scala/Tuple2, class coursier/core/Module ]
          stack = []
      LineNumberTable:
        line 201: 0
        line 202: 2
        line 203: 15
        line 202: 30
        line 201: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      15     4   mod   Lcoursier/core/Module;
            0      44     0 indices$1   Lscala/collection/immutable/Map;
            0      44     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      indices$1                      final
      x0$1                           final

  public static final java.lang.String $anonfun$conflicts$5(coursier.graph.Conflict);
    descriptor: (Lcoursier/graph/Conflict;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #885                // Method coursier/graph/Conflict.version:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 207: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$12   Lcoursier/graph/Conflict;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static final scala.Tuple2 $anonfun$conflicts$6(coursier.graph.Conflict);
    descriptor: (Lcoursier/graph/Conflict;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #890                // Method coursier/graph/Conflict.wasExcluded:()Z
         4: ifeq          13
         7: ldc_w         #892                // String  (and excluded it)
        10: goto          15
        13: ldc           #78                 // String
        15: astore_1
        16: new           #649                // class scala/Tuple2
        19: dup
        20: new           #44                 // class java/lang/StringBuilder
        23: dup
        24: ldc           #112                // int 1
        26: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        29: aload_0
        30: invokevirtual #895                // Method coursier/graph/Conflict.dependeeModule:()Lcoursier/core/Module;
        33: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        36: ldc           #61                 // String :
        38: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: aload_0
        42: invokevirtual #898                // Method coursier/graph/Conflict.dependeeVersion:()Ljava/lang/String;
        45: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        51: new           #44                 // class java/lang/StringBuilder
        54: dup
        55: ldc           #45                 // int 0
        57: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        60: new           #44                 // class java/lang/StringBuilder
        63: dup
        64: ldc_w         #818                // int 15
        67: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        70: ldc_w         #900                // String wanted version
        73: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        76: aload_0
        77: invokevirtual #903                // Method coursier/graph/Conflict.wantedVersion:()Ljava/lang/String;
        80: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        83: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        86: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        89: aload_1
        90: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        93: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        96: invokespecial #906                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        99: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 211: 0
        line 212: 7
        line 214: 13
        line 215: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      83     1 extra   Ljava/lang/String;
            0     100     0     c   Lcoursier/graph/Conflict;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.String $anonfun$conflicts$7(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #44                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #49                 // int 2
         6: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc_w         #911                // String
        12: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        15: aload_0
        16: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: invokestatic  #214                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
        22: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        28: areturn
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  x$13   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$13                           final

  public static final java.lang.String $anonfun$conflicts$4(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        181
         6: aload_2
         7: invokevirtual #652                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #481                // class coursier/core/Module
        13: astore_3
        14: aload_2
        15: invokevirtual #659                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #125                // class scala/collection/immutable/Seq
        21: astore        4
        23: getstatic     #265                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        26: aload         4
        28: invokedynamic #917,  0            // InvokeDynamic #26:apply:()Lscala/Function1;
        33: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        38: checkcast     #158                // class scala/collection/SeqOps
        41: invokeinterface #358,  1          // InterfaceMethod scala/collection/SeqOps.distinct:()Ljava/lang/Object;
        46: checkcast     #158                // class scala/collection/SeqOps
        49: invokeinterface #920,  1          // InterfaceMethod scala/collection/SeqOps.size:()I
        54: iconst_1
        55: if_icmpne     62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: invokevirtual #924                // Method scala/Predef$.assert:(Z)V
        66: aload         4
        68: invokedynamic #929,  0            // InvokeDynamic #27:apply:()Lscala/Function1;
        73: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        78: checkcast     #125                // class scala/collection/immutable/Seq
        81: astore        5
        83: new           #44                 // class java/lang/StringBuilder
        86: dup
        87: ldc           #45                 // int 0
        89: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
        92: new           #44                 // class java/lang/StringBuilder
        95: dup
        96: ldc_w         #930                // int 19
        99: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
       102: aload_3
       103: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       106: ldc           #61                 // String :
       108: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       111: aload         4
       113: invokeinterface #933,  1          // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
       118: checkcast     #872                // class coursier/graph/Conflict
       121: invokevirtual #885                // Method coursier/graph/Conflict.version:()Ljava/lang/String;
       124: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       127: ldc_w         #935                // String  was selected, but
       130: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       133: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       136: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       139: invokestatic  #214                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       142: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       145: getstatic     #33                 // Field MODULE$:Lcoursier/util/Print$;
       148: aload         5
       150: invokespecial #937                // Method aligned:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
       153: invokedynamic #942,  0            // InvokeDynamic #28:apply:()Lscala/Function1;
       158: invokeinterface #129,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       163: checkcast     #610                // class scala/collection/IterableOnceOps
       166: invokeinterface #700,  1          // InterfaceMethod scala/collection/IterableOnceOps.mkString:()Ljava/lang/String;
       171: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       174: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       177: astore_1
       178: goto          193
       181: goto          184
       184: new           #496                // class scala/MatchError
       187: dup
       188: aload_2
       189: invokespecial #499                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       192: athrow
       193: aload_1
       194: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/Tuple2, top, class scala/Tuple2, class coursier/core/Module, class scala/collection/immutable/Seq ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/Tuple2, top, class scala/Tuple2, class coursier/core/Module, class scala/collection/immutable/Seq ]
          stack = [ class scala/Predef$, int ]
        frame_type = 249 /* chop */
          offset_delta = 117
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class java/lang/String, class scala/Tuple2, class coursier/core/Module, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
          stack = []
      LineNumberTable:
        line 205: 0
        line 206: 2
        line 207: 23
        line 209: 66
        line 218: 83
        line 219: 145
        line 206: 181
        line 205: 184
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           83      94     5 messages   Lscala/collection/immutable/Seq;
           14     167     3   mod   Lcoursier/core/Module;
           23     158     4     l   Lscala/collection/immutable/Seq;
            0     195     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  private coursier.util.Print$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #944                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 223: 0
        line 7: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/Print$;

  public static final java.lang.Object $anonfun$render$1$adapted(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #946                // Method $anonfun$render$1:(Ljava/lang/String;Ljava/lang/String;)Z
         5: invokestatic  #950                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 version$1   Ljava/lang/String;
            0       9     1   x$8   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version$1                      final
      x$8                            final

  public static final java.lang.Object $anonfun$aligned$1$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #952                // Method $anonfun$aligned$1:(Lscala/Tuple2;)I
         4: invokestatic  #956                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$9   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$9                            final

  public static final java.lang.Object $anonfun$conflicts$3$adapted(scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #958                // Method $anonfun$conflicts$3:(Lscala/collection/immutable/Map;Lscala/Tuple2;)I
         5: invokestatic  #956                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         8: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 indices$1   Lscala/collection/immutable/Map;
            0       9     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      indices$1                      final
      x0$1                           final

  public static final java.lang.Object $anonfun$dependenciesUnknownConfigs$6$adapted(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #960                // class coursier/core/Configuration
         3: dup
         4: aload_0
         5: invokestatic  #962                // Method $anonfun$dependenciesUnknownConfigs$6:(Lcoursier/core/Dependency;)Ljava/lang/String;
         8: invokespecial #963                // Method coursier/core/Configuration."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$3   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$3                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #975,  0            // InvokeDynamic #29:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Colors=class coursier/util/Print$Colors of class coursier/util/Print
  public static #13= #12 of #9;           // =class coursier/util/Print$Colors$ of class coursier/util/Print
  public static final #18= #15 of #17;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #13= #20 of #22;          // =class scala/math/Ordering$Int$ of class scala/math/Ordering
  public static #13= #24 of #22;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "Print.scala"
BootstrapMethods:
  0: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #108 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$1:(Lscala/collection/immutable/Map;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #110 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #111 5
      #112 1
      #110 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  1: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #133 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$4:(Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #110 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #111 5
      #112 1
      #110 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  2: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #151 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$5:(Lscala/Tuple2;)Lcoursier/core/Dependency;
      #152 (Lscala/Tuple2;)Lcoursier/core/Dependency;
      #111 5
      #112 1
      #152 (Lscala/Tuple2;)Lcoursier/core/Dependency;
  3: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #163 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$7:(Lcoursier/core/Dependency;)Lscala/Tuple4;
      #164 (Lcoursier/core/Dependency;)Lscala/Tuple4;
      #111 5
      #112 1
      #164 (Lcoursier/core/Dependency;)Lscala/Tuple4;
  4: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #201 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$8:(ZLcoursier/core/Dependency;)Ljava/lang/String;
      #202 (Lcoursier/core/Dependency;)Ljava/lang/String;
      #111 5
      #112 1
      #202 (Lcoursier/core/Dependency;)Ljava/lang/String;
  5: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #329 ()Ljava/lang/Object;
      #334 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
      #336 ()Lscala/collection/immutable/Seq;
      #111 5
      #112 1
      #336 ()Lscala/collection/immutable/Seq;
  6: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #355 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #356 (Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #111 5
      #112 1
      #356 (Lcoursier/core/Dependency;)Lcoursier/core/Module;
  7: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #384 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$3:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
      #385 (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
      #111 5
      #112 1
      #385 (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  8: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #398 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$4:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #399 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #111 5
      #112 1
      #399 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  9: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #408 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$5:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #410 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #111 5
      #112 1
      #410 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  10: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #329 ()Ljava/lang/Object;
      #423 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$6:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
      #336 ()Lscala/collection/immutable/Seq;
      #111 5
      #112 1
      #336 ()Lscala/collection/immutable/Seq;
  11: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #429 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$7:(Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
      #430 (Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
      #111 5
      #112 1
      #430 (Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
  12: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #436 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$8:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;Lcoursier/graph/DependencyTree;)Ljava/lang/String;
      #438 (Lcoursier/graph/DependencyTree;)Ljava/lang/String;
      #111 5
      #112 1
      #438 (Lcoursier/graph/DependencyTree;)Ljava/lang/String;
  13: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #504 REF_invokeStatic coursier/util/Print$.$anonfun$render$1$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      #506 (Ljava/lang/String;)Ljava/lang/Object;
      #111 5
      #112 1
      #506 (Ljava/lang/String;)Ljava/lang/Object;
  14: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #329 ()Ljava/lang/Object;
      #517 REF_invokeStatic coursier/util/Print$.$anonfun$render$2:(Ljava/lang/String;)Ljava/lang/String;
      #518 ()Ljava/lang/String;
      #111 5
      #112 1
      #518 ()Ljava/lang/String;
  15: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #329 ()Ljava/lang/Object;
      #525 REF_invokeStatic coursier/util/Print$.$anonfun$render$3:(Ljava/lang/String;)Ljava/lang/String;
      #518 ()Ljava/lang/String;
      #111 5
      #112 1
      #518 ()Ljava/lang/String;
  16: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #560 REF_invokeStatic coursier/util/Print$.$anonfun$aligned$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #561 (Lscala/Tuple2;)Ljava/lang/Object;
      #111 5
      #112 1
      #561 (Lscala/Tuple2;)Ljava/lang/Object;
  17: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #585 REF_invokeStatic coursier/util/Print$.$anonfun$aligned$2:(ILscala/Tuple2;)Ljava/lang/String;
      #587 (Lscala/Tuple2;)Ljava/lang/String;
      #111 5
      #112 1
      #587 (Lscala/Tuple2;)Ljava/lang/String;
  18: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #599 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$1:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
      #600 (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
      #111 5
      #112 1
      #600 (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  19: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #627 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$2:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
      #600 (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
      #111 5
      #112 1
      #600 (Lcoursier/graph/Conflict;)Lcoursier/core/Module;
  20: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #636 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$3$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
      #561 (Lscala/Tuple2;)Ljava/lang/Object;
      #111 5
      #112 1
      #561 (Lscala/Tuple2;)Ljava/lang/Object;
  21: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #642 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$4:(Lscala/Tuple2;)Ljava/lang/String;
      #587 (Lscala/Tuple2;)Ljava/lang/String;
      #111 5
      #112 1
      #587 (Lscala/Tuple2;)Ljava/lang/String;
  22: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #696 REF_invokeStatic coursier/util/Print$.$anonfun$dependency$1:(Lscala/Tuple2;)Ljava/lang/String;
      #587 (Lscala/Tuple2;)Ljava/lang/String;
      #111 5
      #112 1
      #587 (Lscala/Tuple2;)Ljava/lang/String;
  23: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #329 ()Ljava/lang/Object;
      #718 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #518 ()Ljava/lang/String;
      #111 5
      #112 1
      #518 ()Ljava/lang/String;
  24: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #724 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$3:(Lcoursier/core/Project;)Ljava/lang/String;
      #725 (Lcoursier/core/Project;)Ljava/lang/String;
      #111 5
      #112 1
      #725 (Lcoursier/core/Project;)Ljava/lang/String;
  25: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #763 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$6$adapted:(Lcoursier/core/Dependency;)Ljava/lang/Object;
      #764 (Lcoursier/core/Dependency;)Ljava/lang/Object;
      #111 5
      #112 1
      #764 (Lcoursier/core/Dependency;)Ljava/lang/Object;
  26: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #915 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$5:(Lcoursier/graph/Conflict;)Ljava/lang/String;
      #916 (Lcoursier/graph/Conflict;)Ljava/lang/String;
      #111 5
      #112 1
      #916 (Lcoursier/graph/Conflict;)Ljava/lang/String;
  27: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #927 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$6:(Lcoursier/graph/Conflict;)Lscala/Tuple2;
      #928 (Lcoursier/graph/Conflict;)Lscala/Tuple2;
      #111 5
      #112 1
      #928 (Lcoursier/graph/Conflict;)Lscala/Tuple2;
  28: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #940 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$7:(Ljava/lang/String;)Ljava/lang/String;
      #941 (Ljava/lang/String;)Ljava/lang/String;
      #111 5
      #112 1
      #941 (Ljava/lang/String;)Ljava/lang/String;
  29: #972 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #560 REF_invokeStatic coursier/util/Print$.$anonfun$aligned$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #585 REF_invokeStatic coursier/util/Print$.$anonfun$aligned$2:(ILscala/Tuple2;)Ljava/lang/String;
      #599 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$1:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
      #627 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$2:(Lcoursier/graph/Conflict;)Lcoursier/core/Module;
      #636 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$3$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
      #642 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$4:(Lscala/Tuple2;)Ljava/lang/String;
      #915 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$5:(Lcoursier/graph/Conflict;)Ljava/lang/String;
      #927 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$6:(Lcoursier/graph/Conflict;)Lscala/Tuple2;
      #940 REF_invokeStatic coursier/util/Print$.$anonfun$conflicts$7:(Ljava/lang/String;)Ljava/lang/String;
      #108 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$1:(Lscala/collection/immutable/Map;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #718 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #724 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$3:(Lcoursier/core/Project;)Ljava/lang/String;
      #133 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$4:(Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #151 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$5:(Lscala/Tuple2;)Lcoursier/core/Dependency;
      #763 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$6$adapted:(Lcoursier/core/Dependency;)Ljava/lang/Object;
      #163 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$7:(Lcoursier/core/Dependency;)Lscala/Tuple4;
      #201 REF_invokeStatic coursier/util/Print$.$anonfun$dependenciesUnknownConfigs$8:(ZLcoursier/core/Dependency;)Ljava/lang/String;
      #696 REF_invokeStatic coursier/util/Print$.$anonfun$dependency$1:(Lscala/Tuple2;)Ljava/lang/String;
      #334 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
      #355 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #384 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$3:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
      #398 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$4:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #408 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$5:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #423 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$6:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Seq;
      #429 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$7:(Lcoursier/graph/DependencyTree;)Lscala/collection/immutable/Seq;
      #436 REF_invokeStatic coursier/util/Print$.$anonfun$dependencyTree$8:(Lcoursier/core/Resolution;Lcoursier/util/Print$Colors;Lcoursier/graph/DependencyTree;)Ljava/lang/String;
      #504 REF_invokeStatic coursier/util/Print$.$anonfun$render$1$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      #517 REF_invokeStatic coursier/util/Print$.$anonfun$render$2:(Ljava/lang/String;)Ljava/lang/String;
      #525 REF_invokeStatic coursier/util/Print$.$anonfun$render$3:(Ljava/lang/String;)Ljava/lang/String;
  ScalaInlineInfo: length = 0xFE (unknown attribute)
   01 01 00 32 03 5B 03 5C 01 02 2F 02 30 01 02 48
   02 49 01 02 56 02 57 01 02 73 02 57 01 03 6F 03
   70 01 02 7B 02 7C 01 02 82 02 4D 01 03 75 03 76
   01 03 79 03 7A 01 03 8F 00 DB 01 00 6B 00 6C 01
   02 C0 00 25 01 02 C2 02 C3 01 00 85 00 70 01 00
   96 00 97 01 02 F9 00 25 01 02 FA 02 FB 01 00 A2
   00 A3 01 00 C8 00 C9 01 02 89 02 4D 01 01 4D 01
   4E 01 01 62 01 63 01 01 7F 01 80 01 01 8D 01 8E
   01 01 97 01 98 01 01 A7 01 4E 01 01 AC 01 AD 01
   01 B3 01 B4 01 03 58 00 E3 01 01 F5 01 F6 01 02
   03 00 DB 01 02 0B 00 DB 01 00 1F 00 1E 01 02 20
   02 21 01 00 E2 00 E3 01 02 54 02 21 01 00 55 00
   56 01 00 55 00 61 01 00 5A 00 5B 01 00 5E 00 5B
   01 00 24 00 25 01 00 24 00 27 01 01 36 01 37 01
   01 C5 01 52 01 01 C7 00 5B 01 01 C8 00 5B 01 01
   C9 00 5B 01 00 4D 00 25 01 01 A3 01 CA 01
  Scala: length = 0x0 (unknown attribute)

