Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/package$$Slang$c$.class
  Last modified May 29, 2022; size 1506 bytes
  SHA-256 checksum 60c27b85c4b75b23846c816a8cc838c05f7ca18a695bbba5968537296dd4c786
  Compiled from "package.scala"
public final class org.sireum.package$$Slang$c$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/package$$Slang$c$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 2, attributes: 4
Constant pool:
   #1 = Utf8               org/sireum/package$$Slang$c$
   #2 = Class              #1             // org/sireum/package$$Slang$c$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               package.scala
   #6 = Utf8               org/sireum/package$$Slang
   #7 = Class              #6             // org/sireum/package$$Slang
   #8 = Utf8               org/sireum/package
   #9 = Class              #8             // org/sireum/package
  #10 = Utf8               $Slang
  #11 = Utf8               c$
  #12 = Utf8               $outer
  #13 = Utf8               Lorg/sireum/package$$Slang;
  #14 = Utf8               unapply
  #15 = Utf8               (I)Z
  #16 = Utf8               c
  #17 = Utf8               scala/Predef$
  #18 = Class              #17            // scala/Predef$
  #19 = Utf8               MODULE$
  #20 = Utf8               Lscala/Predef$;
  #21 = NameAndType        #19:#20        // MODULE$:Lscala/Predef$;
  #22 = Fieldref           #18.#21        // scala/Predef$.MODULE$:Lscala/Predef$;
  #23 = NameAndType        #12:#13        // $outer:Lorg/sireum/package$$Slang;
  #24 = Fieldref           #2.#23         // org/sireum/package$$Slang$c$.$outer:Lorg/sireum/package$$Slang;
  #25 = Utf8               $sc
  #26 = Utf8               ()Lscala/StringContext;
  #27 = NameAndType        #25:#26        // $sc:()Lscala/StringContext;
  #28 = Methodref          #7.#27         // org/sireum/package$$Slang.$sc:()Lscala/StringContext;
  #29 = Utf8               scala/StringContext
  #30 = Class              #29            // scala/StringContext
  #31 = Utf8               parts
  #32 = Utf8               ()Lscala/collection/immutable/Seq;
  #33 = NameAndType        #31:#32        // parts:()Lscala/collection/immutable/Seq;
  #34 = Methodref          #30.#33        // scala/StringContext.parts:()Lscala/collection/immutable/Seq;
  #35 = Utf8               scala/collection/immutable/Seq
  #36 = Class              #35            // scala/collection/immutable/Seq
  #37 = Utf8               length
  #38 = Utf8               ()I
  #39 = NameAndType        #37:#38        // length:()I
  #40 = InterfaceMethodref #36.#39        // scala/collection/immutable/Seq.length:()I
  #41 = Utf8               require
  #42 = Utf8               (Z)V
  #43 = NameAndType        #41:#42        // require:(Z)V
  #44 = Methodref          #18.#43        // scala/Predef$.require:(Z)V
  #45 = Utf8               scala/StringContext$
  #46 = Class              #45            // scala/StringContext$
  #47 = Utf8               Lscala/StringContext$;
  #48 = NameAndType        #19:#47        // MODULE$:Lscala/StringContext$;
  #49 = Fieldref           #46.#48        // scala/StringContext$.MODULE$:Lscala/StringContext$;
  #50 = Utf8               head
  #51 = Utf8               ()Ljava/lang/Object;
  #52 = NameAndType        #50:#51        // head:()Ljava/lang/Object;
  #53 = InterfaceMethodref #36.#52        // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
  #54 = Utf8               java/lang/String
  #55 = Class              #54            // java/lang/String
  #56 = Utf8               processEscapes
  #57 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #58 = NameAndType        #56:#57        // processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #59 = Methodref          #46.#58        // scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #60 = Methodref          #55.#39        // java/lang/String.length:()I
  #61 = Utf8               codePointCount
  #62 = Utf8               (II)I
  #63 = NameAndType        #61:#62        // codePointCount:(II)I
  #64 = Methodref          #55.#63        // java/lang/String.codePointCount:(II)I
  #65 = Utf8               codePointAt
  #66 = Utf8               (I)I
  #67 = NameAndType        #65:#66        // codePointAt:(I)I
  #68 = Methodref          #55.#67        // java/lang/String.codePointAt:(I)I
  #69 = Utf8               part
  #70 = Utf8               Ljava/lang/String;
  #71 = Utf8               this
  #72 = Utf8               Lorg/sireum/package$$Slang$c$;
  #73 = Utf8               I
  #74 = Utf8               <init>
  #75 = Utf8               (Lorg/sireum/package$$Slang;)V
  #76 = Utf8               ()V
  #77 = NameAndType        #74:#76        // "<init>":()V
  #78 = Methodref          #4.#77         // java/lang/Object."<init>":()V
  #79 = Utf8               Code
  #80 = Utf8               StackMapTable
  #81 = Utf8               LineNumberTable
  #82 = Utf8               LocalVariableTable
  #83 = Utf8               MethodParameters
  #84 = Utf8               InnerClasses
  #85 = Utf8               SourceFile
  #86 = Utf8               ScalaInlineInfo
  #87 = Utf8               apply
  #88 = Utf8               (Lscala/collection/immutable/Seq;)I
  #89 = Utf8               Scala
{
  private final org.sireum.package$$Slang $outer;
    descriptor: Lorg/sireum/package$$Slang;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public boolean unapply(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #22                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: getfield      #24                 // Field $outer:Lorg/sireum/package$$Slang;
         7: invokevirtual #28                 // Method org/sireum/package$$Slang.$sc:()Lscala/StringContext;
        10: invokevirtual #34                 // Method scala/StringContext.parts:()Lscala/collection/immutable/Seq;
        13: invokeinterface #40,  1           // InterfaceMethod scala/collection/immutable/Seq.length:()I
        18: iconst_1
        19: if_icmpne     26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: invokevirtual #44                 // Method scala/Predef$.require:(Z)V
        30: getstatic     #49                 // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        33: aload_0
        34: getfield      #24                 // Field $outer:Lorg/sireum/package$$Slang;
        37: invokevirtual #28                 // Method org/sireum/package$$Slang.$sc:()Lscala/StringContext;
        40: invokevirtual #34                 // Method scala/StringContext.parts:()Lscala/collection/immutable/Seq;
        43: invokeinterface #53,  1           // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        48: checkcast     #55                 // class java/lang/String
        51: invokevirtual #59                 // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        54: astore_2
        55: getstatic     #22                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        58: aload_2
        59: iconst_0
        60: aload_2
        61: invokevirtual #60                 // Method java/lang/String.length:()I
        64: invokevirtual #64                 // Method java/lang/String.codePointCount:(II)I
        67: iconst_1
        68: if_icmpne     75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: invokevirtual #44                 // Method scala/Predef$.require:(Z)V
        79: iload_1
        80: aload_2
        81: iconst_0
        82: invokevirtual #68                 // Method java/lang/String.codePointAt:(I)I
        85: if_icmpne     92
        88: iconst_1
        89: goto          93
        92: iconst_0
        93: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 90 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/package$$Slang$c$, int ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class org/sireum/package$$Slang$c$, int, class java/lang/String ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/package$$Slang$c$, int, class java/lang/String ]
          stack = [ class scala/Predef$, int ]
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 74: 0
        line 75: 30
        line 76: 55
        line 77: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55      38     2  part   Ljava/lang/String;
            0      94     0  this   Lorg/sireum/package$$Slang$c$;
            0      94     1     c   I
    MethodParameters:
      Name                           Flags
      c                              final

  public org.sireum.package$$Slang$c$(org.sireum.package$$Slang);
    descriptor: (Lorg/sireum/package$$Slang;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #24                 // Field $outer:Lorg/sireum/package$$Slang;
        11: aload_0
        12: invokespecial #78                 // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/sireum/package$$Slang$c$;
            0      16     1 $outer   Lorg/sireum/package$$Slang;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public static final #10= #7 of #9;      // $Slang=class org/sireum/package$$Slang of class org/sireum/package
  public final #11= #2 of #7;             // c$=class org/sireum/package$$Slang$c$ of class org/sireum/package$$Slang
SourceFile: "package.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 4A 00 4B 01 00 57 00 58 01 00 0E
   00 0F 01
  Scala: length = 0x0 (unknown attribute)

