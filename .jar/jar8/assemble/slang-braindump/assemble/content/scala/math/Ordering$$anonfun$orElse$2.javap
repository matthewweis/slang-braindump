Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Ordering$$anonfun$orElse$2.class
  Last modified May 29, 2022; size 4759 bytes
  SHA-256 checksum 68446650e1f1442c9eb58a1da6a28debdb8cce1333ef0bfa132b5d51e20954f9
  Compiled from "Ordering.scala"
public final class scala.math.Ordering$$anonfun$orElse$2 extends java.lang.Object implements scala.math.Ordering<T>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/Ordering$$anonfun$orElse$2
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 18, attributes: 6
Constant pool:
    #1 = Utf8               scala/math/Ordering$$anonfun$orElse$2
    #2 = Class              #1            // scala/math/Ordering$$anonfun$orElse$2
    #3 = Utf8               Ljava/lang/Object;Lscala/math/Ordering<TT;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Ordering
    #7 = Class              #6            // scala/math/Ordering
    #8 = Utf8               Ordering.scala
    #9 = Utf8               orElse
   #10 = Utf8               (Lscala/math/Ordering;)Lscala/math/Ordering;
   #11 = NameAndType        #9:#10        // orElse:(Lscala/math/Ordering;)Lscala/math/Ordering;
   #12 = Utf8               scala/math/Ordering$OrderingOps
   #13 = Class              #12           // scala/math/Ordering$OrderingOps
   #14 = Utf8               OrderingOps
   #15 = Utf8               serialVersionUID
   #16 = Utf8               J
   #17 = Long               0l
   #19 = Utf8               $outer
   #20 = Utf8               Lscala/math/Ordering;
   #21 = Utf8               other$1
   #22 = Utf8               tryCompare
   #23 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   #24 = Utf8               (TT;TT;)Lscala/Some<Ljava/lang/Object;>;
   #25 = Utf8               x
   #26 = Utf8               y
   #27 = Utf8               tryCompare$
   #28 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   #29 = NameAndType        #27:#28       // tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   #30 = InterfaceMethodref #7.#29        // scala/math/Ordering.tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
   #31 = Utf8               this
   #32 = Utf8               Lscala/math/Ordering$$anonfun$orElse$2;
   #33 = Utf8               Ljava/lang/Object;
   #34 = Utf8               lteq
   #35 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #36 = Utf8               (TT;TT;)Z
   #37 = Utf8               lteq$
   #38 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #39 = NameAndType        #37:#38       // lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #40 = InterfaceMethodref #7.#39        // scala/math/Ordering.lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #41 = Utf8               gteq
   #42 = Utf8               gteq$
   #43 = NameAndType        #42:#38       // gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #44 = InterfaceMethodref #7.#43        // scala/math/Ordering.gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #45 = Utf8               lt
   #46 = Utf8               lt$
   #47 = NameAndType        #46:#38       // lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #48 = InterfaceMethodref #7.#47        // scala/math/Ordering.lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #49 = Utf8               gt
   #50 = Utf8               gt$
   #51 = NameAndType        #50:#38       // gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #52 = InterfaceMethodref #7.#51        // scala/math/Ordering.gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #53 = Utf8               equiv
   #54 = Utf8               equiv$
   #55 = NameAndType        #54:#38       // equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #56 = InterfaceMethodref #7.#55        // scala/math/Ordering.equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
   #57 = Utf8               max
   #58 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #59 = Utf8               <U:TT;>(TU;TU;)TU;
   #60 = Utf8               max$
   #61 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #62 = NameAndType        #60:#61       // max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #63 = InterfaceMethodref #7.#62        // scala/math/Ordering.max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #64 = Utf8               min
   #65 = Utf8               min$
   #66 = NameAndType        #65:#61       // min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #67 = InterfaceMethodref #7.#66        // scala/math/Ordering.min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #68 = Utf8               reverse
   #69 = Utf8               ()Lscala/math/Ordering;
   #70 = Utf8               ()Lscala/math/Ordering<TT;>;
   #71 = Utf8               reverse$
   #72 = NameAndType        #71:#10       // reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
   #73 = InterfaceMethodref #7.#72        // scala/math/Ordering.reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
   #74 = Utf8               isReverseOf
   #75 = Utf8               (Lscala/math/Ordering;)Z
   #76 = Utf8               (Lscala/math/Ordering<*>;)Z
   #77 = Utf8               other
   #78 = Utf8               isReverseOf$
   #79 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;)Z
   #80 = NameAndType        #78:#79       // isReverseOf$:(Lscala/math/Ordering;Lscala/math/Ordering;)Z
   #81 = InterfaceMethodref #7.#80        // scala/math/Ordering.isReverseOf$:(Lscala/math/Ordering;Lscala/math/Ordering;)Z
   #82 = Utf8               on
   #83 = Utf8               (Lscala/Function1;)Lscala/math/Ordering;
   #84 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TU;TT;>;)Lscala/math/Ordering<TU;>;
   #85 = Utf8               f
   #86 = Utf8               on$
   #87 = Utf8               (Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
   #88 = NameAndType        #86:#87       // on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
   #89 = InterfaceMethodref #7.#88        // scala/math/Ordering.on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
   #90 = Utf8               Lscala/Function1;
   #91 = Utf8               (Lscala/math/Ordering<TT;>;)Lscala/math/Ordering<TT;>;
   #92 = Utf8               orElse$
   #93 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
   #94 = NameAndType        #92:#93       // orElse$:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
   #95 = InterfaceMethodref #7.#94        // scala/math/Ordering.orElse$:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
   #96 = Utf8               orElseBy
   #97 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
   #98 = Utf8               <S:Ljava/lang/Object;>(Lscala/Function1<TT;TS;>;Lscala/math/Ordering<TS;>;)Lscala/math/Ordering<TT;>;
   #99 = Utf8               ord
  #100 = Utf8               orElseBy$
  #101 = Utf8               (Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
  #102 = NameAndType        #100:#101     // orElseBy$:(Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
  #103 = InterfaceMethodref #7.#102       // scala/math/Ordering.orElseBy$:(Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
  #104 = Utf8               mkOrderingOps
  #105 = Utf8               (Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #106 = Utf8               (TT;)Lscala/math/Ordering<TT;>.OrderingOps;
  #107 = Utf8               lhs
  #108 = Utf8               mkOrderingOps$
  #109 = Utf8               (Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #110 = NameAndType        #108:#109     // mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #111 = InterfaceMethodref #7.#110       // scala/math/Ordering.mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
  #112 = Utf8               compare
  #113 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I
  #114 = Utf8               (TT;TT;)I
  #115 = NameAndType        #19:#20       // $outer:Lscala/math/Ordering;
  #116 = Fieldref           #2.#115       // scala/math/Ordering$$anonfun$orElse$2.$outer:Lscala/math/Ordering;
  #117 = NameAndType        #21:#20       // other$1:Lscala/math/Ordering;
  #118 = Fieldref           #2.#117       // scala/math/Ordering$$anonfun$orElse$2.other$1:Lscala/math/Ordering;
  #119 = Utf8               scala$math$Ordering$$$anonfun$orElse$1
  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)I
  #121 = NameAndType        #119:#120     // scala$math$Ordering$$$anonfun$orElse$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)I
  #122 = InterfaceMethodref #7.#121       // scala/math/Ordering.scala$math$Ordering$$$anonfun$orElse$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)I
  #123 = Utf8               ()Lscala/math/PartialOrdering;
  #124 = NameAndType        #68:#69       // reverse:()Lscala/math/Ordering;
  #125 = Methodref          #2.#124       // scala/math/Ordering$$anonfun$orElse$2.reverse:()Lscala/math/Ordering;
  #126 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #127 = NameAndType        #22:#23       // tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #128 = Methodref          #2.#127       // scala/math/Ordering$$anonfun$orElse$2.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
  #129 = Utf8               <init>
  #130 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;)V
  #131 = Utf8               ()V
  #132 = NameAndType        #129:#131     // "<init>":()V
  #133 = Methodref          #5.#132       // java/lang/Object."<init>":()V
  #134 = Utf8               ConstantValue
  #135 = Utf8               Code
  #136 = Utf8               LineNumberTable
  #137 = Utf8               LocalVariableTable
  #138 = Utf8               Signature
  #139 = Utf8               MethodParameters
  #140 = Utf8               StackMapTable
  #141 = Utf8               InnerClasses
  #142 = Utf8               EnclosingMethod
  #143 = Utf8               SourceFile
  #144 = Utf8               ScalaInlineInfo
  #145 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final scala.math.Ordering $outer;
    descriptor: Lscala/math/Ordering;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.math.Ordering other$1;
    descriptor: Lscala/math/Ordering;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.Some<java.lang.Object> tryCompare(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #30                 // InterfaceMethod scala/math/Ordering.tryCompare$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
         6: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #24                          // (TT;TT;)Lscala/Some<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean lteq(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #40                 // InterfaceMethod scala/math/Ordering.lteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #36                          // (TT;TT;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean gteq(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #44                 // InterfaceMethod scala/math/Ordering.gteq$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #36                          // (TT;TT;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean lt(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #48                 // InterfaceMethod scala/math/Ordering.lt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #36                          // (TT;TT;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean gt(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #52                 // InterfaceMethod scala/math/Ordering.gt$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #36                          // (TT;TT;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equiv(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #56                 // InterfaceMethod scala/math/Ordering.equiv$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #36                          // (TT;TT;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public <U extends T> U max(U, U);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #63                 // InterfaceMethod scala/math/Ordering.max$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #59                          // <U:TT;>(TU;TU;)TU;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public <U extends T> U min(U, U);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #67                 // InterfaceMethod scala/math/Ordering.min$:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    Signature: #59                          // <U:TT;>(TU;TU;)TU;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Ordering<T> reverse();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #73                 // InterfaceMethod scala/math/Ordering.reverse$:(Lscala/math/Ordering;)Lscala/math/Ordering;
         4: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
    Signature: #70                          // ()Lscala/math/Ordering<TT;>;

  public boolean isReverseOf(scala.math.Ordering<?>);
    descriptor: (Lscala/math/Ordering;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #81                 // InterfaceMethod scala/math/Ordering.isReverseOf$:(Lscala/math/Ordering;Lscala/math/Ordering;)Z
         5: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       6     1 other   Lscala/math/Ordering;
    Signature: #76                          // (Lscala/math/Ordering<*>;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public <U extends java.lang.Object> scala.math.Ordering<U> on(scala.Function1<U, T>);
    descriptor: (Lscala/Function1;)Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #89                 // InterfaceMethod scala/math/Ordering.on$:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
         5: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       6     1     f   Lscala/Function1;
    Signature: #84                          // <U:Ljava/lang/Object;>(Lscala/Function1<TU;TT;>;)Lscala/math/Ordering<TU;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.math.Ordering<T> orElse(scala.math.Ordering<T>);
    descriptor: (Lscala/math/Ordering;)Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #95                 // InterfaceMethod scala/math/Ordering.orElse$:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
         5: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       6     1 other   Lscala/math/Ordering;
    Signature: #91                          // (Lscala/math/Ordering<TT;>;)Lscala/math/Ordering<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public <S extends java.lang.Object> scala.math.Ordering<T> orElseBy(scala.Function1<T, S>, scala.math.Ordering<S>);
    descriptor: (Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #103                // InterfaceMethod scala/math/Ordering.orElseBy$:(Lscala/math/Ordering;Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
         6: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     f   Lscala/Function1;
            0       7     2   ord   Lscala/math/Ordering;
    Signature: #98                          // <S:Ljava/lang/Object;>(Lscala/Function1<TT;TS;>;Lscala/math/Ordering<TS;>;)Lscala/math/Ordering<TT;>;
    MethodParameters:
      Name                           Flags
      f                              final
      ord                            final

  public scala.math.Ordering<T>.OrderingOps mkOrderingOps(T);
    descriptor: (Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #111                // InterfaceMethod scala/math/Ordering.mkOrderingOps$:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
         5: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       6     1   lhs   Ljava/lang/Object;
    Signature: #106                         // (TT;)Lscala/math/Ordering<TT;>.OrderingOps;
    MethodParameters:
      Name                           Flags
      lhs                            final

  public final int compare(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: getfield      #116                // Field $outer:Lscala/math/Ordering;
         4: aload_1
         5: aload_2
         6: aload_0
         7: getfield      #118                // Field other$1:Lscala/math/Ordering;
        10: invokeinterface #122,  4          // InterfaceMethod scala/math/Ordering.scala$math$Ordering$$$anonfun$orElse$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)I
        15: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0      16     1     x   Ljava/lang/Object;
            0      16     2     y   Ljava/lang/Object;
    Signature: #114                         // (TT;TT;)I
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.PartialOrdering reverse();
    descriptor: ()Lscala/math/PartialOrdering;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #125                // Method reverse:()Lscala/math/Ordering;
         4: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Ordering$$anonfun$orElse$2;

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #128                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
         6: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Ordering$$anonfun$orElse$2(scala.math.Ordering, scala.math.Ordering);
    descriptor: (Lscala/math/Ordering;Lscala/math/Ordering;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #116                // Field $outer:Lscala/math/Ordering;
        11: aload_0
        12: aload_2
        13: putfield      #118                // Field other$1:Lscala/math/Ordering;
        16: aload_0
        17: invokespecial #133                // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/math/Ordering$$anonfun$orElse$2;
            0      21     1 $outer   Lscala/math/Ordering;
            0      21     2 other$1   Lscala/math/Ordering;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      other$1                        final
}
InnerClasses:
  public final #2;                        // class scala/math/Ordering$$anonfun$orElse$2
  public #14= #13 of #7;                  // OrderingOps=class scala/math/Ordering$OrderingOps of class scala/math/Ordering
EnclosingMethod: #7.#11                 // scala.math.Ordering.orElse
Signature: #3                           // Ljava/lang/Object;Lscala/math/Ordering<TT;>;
SourceFile: "Ordering.scala"
  ScalaInlineInfo: length = 0x5E (unknown attribute)
   01 01 00 12 00 81 00 82 01 00 70 00 71 01 00 35
   00 23 01 00 31 00 23 01 00 29 00 23 01 00 4A 00
   4B 01 00 2D 00 23 01 00 22 00 23 01 00 39 00 3A
   01 00 40 00 3A 01 00 68 00 69 01 00 52 00 53 01
   00 09 00 0A 01 00 60 00 61 01 00 44 00 45 01 00
   44 00 7B 01 00 16 00 7E 01 00 16 00 17 01
  Scala: length = 0x0 (unknown attribute)

