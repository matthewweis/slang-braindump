Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/RangeStepper.class
  Last modified May 29, 2022; size 6102 bytes
  SHA-256 checksum 941460f0e49378760b96a683ddb0a71970d2c506be46945f46ad08fcb66fc5b1
  Compiled from "RangeStepper.scala"
public final class scala.collection.convert.impl.RangeStepper extends scala.collection.convert.impl.IndexedStepperBase<scala.collection.IntStepper, scala.collection.convert.impl.RangeStepper> implements scala.collection.IntStepper
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/RangeStepper
  super_class: #5                         // scala/collection/convert/impl/IndexedStepperBase
  interfaces: 1, fields: 2, methods: 27, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/RangeStepper
    #2 = Class              #1            // scala/collection/convert/impl/RangeStepper
    #3 = Utf8               Lscala/collection/convert/impl/IndexedStepperBase<Lscala/collection/IntStepper;Lscala/collection/convert/impl/RangeStepper;>;Lscala/collection/IntStepper;
    #4 = Utf8               scala/collection/convert/impl/IndexedStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/IndexedStepperBase
    #6 = Utf8               scala/collection/IntStepper
    #7 = Class              #6            // scala/collection/IntStepper
    #8 = Utf8               RangeStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005y2Qa\u0003\u0007\u0003!QA\u0001B\b\u0001\u0003\u0002\u0004%\t\u0002\t\u0005\tK\u0001\u0011\t\u0019!C\tM!AA\u0006\u0001B\u0001B\u0003&\u0011\u0005\u0003\u0005.\u0001\t\u0005\t\u0015!\u0003\"\u0011!q\u0003A!A!\u0002\u0013\t\u0003\u0002C\u0018\u0001\u0005\u0003\u0005\u000b\u0011B\u0011\t\u000bA\u0002A\u0011A\u0019\t\u000bY\u0002A\u0011A\u001c\t\u000ba\u0002A\u0011C\u001d\t\u000bq\u0002A\u0011I\u001f\u0003\u0019I\u000bgnZ3Ti\u0016\u0004\b/\u001a:\u000b\u00055q\u0011\u0001B5na2T!a\u0004\t\u0002\u000f\r|gN^3si*\u0011\u0011CE\u0001\u000bG>dG.Z2uS>t\'\"A\n\u0002\u000bM\u001c\u0017\r\\1\u0014\u0007\u0001)\u0012\u0004\u0005\u0003\u0017/eiR\"\u0001\u0007\n\u0005aa!AE%oI\u0016DX\rZ*uKB\u0004XM\u001d\"bg\u0016\u0004\"AG\u000e\u000e\u0003AI!\u0001\b\t\u0003\u0015%sGo\u0015;faB,\'\u000f\u0005\u0002\u0017\u0001\u00051Q.\u001f(fqR\u001c\u0001!F\u0001\"!\t\u00113%D\u0001\u0013\u0013\t!#CA\u0002J]R\f!\"\\=OKb$x\fJ3r)\t9#\u0006\u0005\u0002#Q%\u0011\u0011F\u0005\u0002\u0005+:LG\u000fC\u0004,\u0005\u0005\u0005\t\u0019A\u0011\u0002\u0007a$\u0013\'A\u0004ns:+\u0007\u0010\u001e\u0011\u0002\r5L8\u000b^3q\u0003\ry\u0016\u000eM\u0001\u0004?&t\u0015A\u0002\u001fj]&$h\bF\u0003\u001eeM\"T\u0007C\u0003\u001f\u000f\u0001\u0007\u0011\u0005C\u0003.\u000f\u0001\u0007\u0011\u0005C\u0003/\u000f\u0001\u0007\u0011\u0005C\u00030\u000f\u0001\u0007\u0011%\u0001\u0005oKb$8\u000b^3q)\u0005\t\u0013!C:f[&\u001cGn\u001c8f)\ti\"\bC\u0003<\u0013\u0001\u0007\u0011%\u0001\u0003iC24\u0017\u0001\u0003;ssN\u0003H.\u001b;\u0015\u0003e\u0001
   #12 = Utf8               java/util/PrimitiveIterator$OfInt
   #13 = Class              #12           // java/util/PrimitiveIterator$OfInt
   #14 = Utf8               java/util/PrimitiveIterator
   #15 = Class              #14           // java/util/PrimitiveIterator
   #16 = Utf8               OfInt
   #17 = Utf8               java/util/Spliterator$OfInt
   #18 = Class              #17           // java/util/Spliterator$OfInt
   #19 = Utf8               java/util/Spliterator
   #20 = Class              #19           // java/util/Spliterator
   #21 = Utf8               myNext
   #22 = Utf8               I
   #23 = Utf8               scala$collection$convert$impl$RangeStepper$$myStep
   #24 = Utf8               spliterator
   #25 = Utf8               ()Ljava/util/Spliterator$OfInt;
   #26 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfInt;
   #27 = Utf8               spliterator$
   #28 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #29 = NameAndType        #27:#28       // spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #30 = InterfaceMethodref #7.#29        // scala/collection/IntStepper.spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #31 = Utf8               this
   #32 = Utf8               Lscala/collection/convert/impl/RangeStepper;
   #33 = Utf8               javaIterator
   #34 = Utf8               ()Ljava/util/PrimitiveIterator$OfInt;
   #35 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfInt;
   #36 = Utf8               javaIterator$
   #37 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #38 = NameAndType        #36:#37       // javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #39 = InterfaceMethodref #7.#38        // scala/collection/IntStepper.javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #40 = Utf8               spliterator$mcI$sp
   #41 = Utf8               ()Ljava/util/Spliterator;
   #42 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #43 = Utf8               spliterator$mcI$sp$
   #44 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #45 = NameAndType        #43:#44       // spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #46 = InterfaceMethodref #7.#45        // scala/collection/IntStepper.spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #47 = Utf8               javaIterator$mcI$sp
   #48 = Utf8               ()Ljava/util/Iterator;
   #49 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #50 = Utf8               javaIterator$mcI$sp$
   #51 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #52 = NameAndType        #50:#51       // javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #53 = InterfaceMethodref #7.#52        // scala/collection/IntStepper.javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #54 = Utf8               nextStep$mcD$sp
   #55 = Utf8               ()D
   #56 = Utf8               scala/collection/Stepper
   #57 = Class              #56           // scala/collection/Stepper
   #58 = Utf8               nextStep$mcD$sp$
   #59 = Utf8               (Lscala/collection/Stepper;)D
   #60 = NameAndType        #58:#59       // nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #61 = InterfaceMethodref #57.#60       // scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #62 = Utf8               nextStep$mcJ$sp
   #63 = Utf8               ()J
   #64 = Utf8               nextStep$mcJ$sp$
   #65 = Utf8               (Lscala/collection/Stepper;)J
   #66 = NameAndType        #64:#65       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #67 = InterfaceMethodref #57.#66       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #68 = Utf8               trySplit$mcD$sp
   #69 = Utf8               ()Lscala/collection/Stepper;
   #70 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #71 = Utf8               trySplit$mcD$sp$
   #72 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #73 = NameAndType        #71:#72       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #74 = InterfaceMethodref #57.#73       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #75 = Utf8               trySplit$mcI$sp
   #76 = Utf8               trySplit$mcI$sp$
   #77 = NameAndType        #76:#72       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #78 = InterfaceMethodref #57.#77       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #79 = Utf8               trySplit$mcJ$sp
   #80 = Utf8               trySplit$mcJ$sp$
   #81 = NameAndType        #80:#72       // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #82 = InterfaceMethodref #57.#81       // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #83 = Utf8               spliterator$mcD$sp
   #84 = Utf8               spliterator$mcD$sp$
   #85 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #86 = NameAndType        #84:#85       // spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #87 = InterfaceMethodref #57.#86       // scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #88 = Utf8               spliterator$mcJ$sp
   #89 = Utf8               spliterator$mcJ$sp$
   #90 = NameAndType        #89:#85       // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #91 = InterfaceMethodref #57.#90       // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #92 = Utf8               javaIterator$mcD$sp
   #93 = Utf8               javaIterator$mcD$sp$
   #94 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
   #95 = NameAndType        #93:#94       // javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #96 = InterfaceMethodref #57.#95       // scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #97 = Utf8               javaIterator$mcJ$sp
   #98 = Utf8               javaIterator$mcJ$sp$
   #99 = NameAndType        #98:#94       // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #100 = InterfaceMethodref #57.#99       // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #101 = Utf8               iterator
  #102 = Utf8               ()Lscala/collection/Iterator;
  #103 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #104 = Utf8               iterator$
  #105 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #106 = NameAndType        #104:#105     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #107 = InterfaceMethodref #57.#106      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #108 = Utf8               ()I
  #109 = NameAndType        #21:#22       // myNext:I
  #110 = Fieldref           #2.#109       // scala/collection/convert/impl/RangeStepper.myNext:I
  #111 = Utf8               myNext_$eq
  #112 = Utf8               (I)V
  #113 = Utf8               x$1
  #114 = Utf8               nextStep
  #115 = Utf8               nextStep$mcI$sp
  #116 = NameAndType        #115:#108     // nextStep$mcI$sp:()I
  #117 = Methodref          #2.#116       // scala/collection/convert/impl/RangeStepper.nextStep$mcI$sp:()I
  #118 = Utf8               semiclone
  #119 = Utf8               (I)Lscala/collection/convert/impl/RangeStepper;
  #120 = Utf8               half
  #121 = NameAndType        #21:#108      // myNext:()I
  #122 = Methodref          #2.#121       // scala/collection/convert/impl/RangeStepper.myNext:()I
  #123 = NameAndType        #23:#22       // scala$collection$convert$impl$RangeStepper$$myStep:I
  #124 = Fieldref           #2.#123       // scala/collection/convert/impl/RangeStepper.scala$collection$convert$impl$RangeStepper$$myStep:I
  #125 = Utf8               i0
  #126 = NameAndType        #125:#108     // i0:()I
  #127 = Methodref          #2.#126       // scala/collection/convert/impl/RangeStepper.i0:()I
  #128 = Utf8               <init>
  #129 = Utf8               (IIII)V
  #130 = NameAndType        #128:#129     // "<init>":(IIII)V
  #131 = Methodref          #2.#130       // scala/collection/convert/impl/RangeStepper."<init>":(IIII)V
  #132 = Utf8               trySplit
  #133 = Utf8               ()Lscala/collection/IntStepper;
  #134 = Utf8               ()Ljava/lang/Object;
  #135 = NameAndType        #132:#134     // trySplit:()Ljava/lang/Object;
  #136 = Methodref          #5.#135       // scala/collection/convert/impl/IndexedStepperBase.trySplit:()Ljava/lang/Object;
  #137 = NameAndType        #111:#112     // myNext_$eq:(I)V
  #138 = Methodref          #2.#137       // scala/collection/convert/impl/RangeStepper.myNext_$eq:(I)V
  #139 = Utf8               old_i0
  #140 = Utf8               ans
  #141 = Utf8               Lscala/collection/IntStepper;
  #142 = Utf8               hasStep
  #143 = Utf8               ()Z
  #144 = NameAndType        #142:#143     // hasStep:()Z
  #145 = Methodref          #2.#144       // scala/collection/convert/impl/RangeStepper.hasStep:()Z
  #146 = Utf8               i0_$eq
  #147 = NameAndType        #146:#112     // i0_$eq:(I)V
  #148 = Methodref          #2.#147       // scala/collection/convert/impl/RangeStepper.i0_$eq:(I)V
  #149 = Utf8               scala/collection/Stepper$
  #150 = Class              #149          // scala/collection/Stepper$
  #151 = Utf8               MODULE$
  #152 = Utf8               Lscala/collection/Stepper$;
  #153 = NameAndType        #151:#152     // MODULE$:Lscala/collection/Stepper$;
  #154 = Fieldref           #150.#153     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #155 = Utf8               java/util/NoSuchElementException
  #156 = Class              #155          // java/util/NoSuchElementException
  #157 = Utf8               Empty Stepper
  #158 = String             #157          // Empty Stepper
  #159 = Utf8               (Ljava/lang/String;)V
  #160 = NameAndType        #128:#159     // "<init>":(Ljava/lang/String;)V
  #161 = Methodref          #156.#160     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #162 = NameAndType        #33:#34       // javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
  #163 = Methodref          #2.#162       // scala/collection/convert/impl/RangeStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
  #164 = NameAndType        #24:#25       // spliterator:()Ljava/util/Spliterator$OfInt;
  #165 = Methodref          #2.#164       // scala/collection/convert/impl/RangeStepper.spliterator:()Ljava/util/Spliterator$OfInt;
  #166 = NameAndType        #132:#133     // trySplit:()Lscala/collection/IntStepper;
  #167 = Methodref          #2.#166       // scala/collection/convert/impl/RangeStepper.trySplit:()Lscala/collection/IntStepper;
  #168 = Utf8               (I)Ljava/lang/Object;
  #169 = NameAndType        #118:#119     // semiclone:(I)Lscala/collection/convert/impl/RangeStepper;
  #170 = Methodref          #2.#169       // scala/collection/convert/impl/RangeStepper.semiclone:(I)Lscala/collection/convert/impl/RangeStepper;
  #171 = NameAndType        #114:#108     // nextStep:()I
  #172 = Methodref          #2.#171       // scala/collection/convert/impl/RangeStepper.nextStep:()I
  #173 = Utf8               scala/runtime/BoxesRunTime
  #174 = Class              #173          // scala/runtime/BoxesRunTime
  #175 = Utf8               boxToInteger
  #176 = Utf8               (I)Ljava/lang/Integer;
  #177 = NameAndType        #175:#176     // boxToInteger:(I)Ljava/lang/Integer;
  #178 = Methodref          #174.#177     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #179 = Utf8               myStep
  #180 = Utf8               _i0
  #181 = Utf8               _iN
  #182 = Utf8               (II)V
  #183 = NameAndType        #128:#182     // "<init>":(II)V
  #184 = Methodref          #5.#183       // scala/collection/convert/impl/IndexedStepperBase."<init>":(II)V
  #185 = Utf8               Code
  #186 = Utf8               LineNumberTable
  #187 = Utf8               LocalVariableTable
  #188 = Utf8               Signature
  #189 = Utf8               MethodParameters
  #190 = Utf8               StackMapTable
  #191 = Utf8               InnerClasses
  #192 = Utf8               SourceFile
  #193 = Utf8               RuntimeVisibleAnnotations
  #194 = Utf8               ScalaInlineInfo
  #195 = Utf8               ScalaSig
{
  private int myNext;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  public final int scala$collection$convert$impl$RangeStepper$$myStep;
    descriptor: I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL

  public <B extends java.lang.Object> java.util.Spliterator$OfInt spliterator();
    descriptor: ()Ljava/util/Spliterator$OfInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #30                 // InterfaceMethod scala/collection/IntStepper.spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #26                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfInt;

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfInt javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #39                 // InterfaceMethod scala/collection/IntStepper.javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #35                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfInt;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod scala/collection/IntStepper.spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #42                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod scala/collection/IntStepper.javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #49                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
         4: dreturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #70                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #78                 // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #70                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #82                 // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #70                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #42                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #42                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #96                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #49                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #49                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #107                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;
    Signature: #103                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public int myNext();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #110                // Field myNext:I
         4: ireturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public void myNext_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #110                // Field myNext:I
         5: return
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/RangeStepper;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int nextStep();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #117                // Method nextStep$mcI$sp:()I
         4: ireturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public scala.collection.convert.impl.RangeStepper semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/RangeStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #2                  // class scala/collection/convert/impl/RangeStepper
         3: dup
         4: aload_0
         5: invokevirtual #122                // Method myNext:()I
         8: aload_0
         9: getfield      #124                // Field scala$collection$convert$impl$RangeStepper$$myStep:I
        12: aload_0
        13: invokevirtual #127                // Method i0:()I
        16: iload_1
        17: invokespecial #131                // Method "<init>":(IIII)V
        20: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/impl/RangeStepper;
            0      21     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public scala.collection.IntStepper trySplit();
    descriptor: ()Lscala/collection/IntStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #127                // Method i0:()I
         4: istore_1
         5: aload_0
         6: invokespecial #136                // Method scala/collection/convert/impl/IndexedStepperBase.trySplit:()Ljava/lang/Object;
         9: checkcast     #7                  // class scala/collection/IntStepper
        12: astore_2
        13: aload_0
        14: aload_0
        15: invokevirtual #122                // Method myNext:()I
        18: aload_0
        19: invokevirtual #127                // Method i0:()I
        22: iload_1
        23: isub
        24: aload_0
        25: getfield      #124                // Field scala$collection$convert$impl$RangeStepper$$myStep:I
        28: imul
        29: iadd
        30: invokevirtual #138                // Method myNext_$eq:(I)V
        33: aload_2
        34: areturn
      LineNumberTable:
        line 35: 0
        line 36: 5
        line 37: 13
        line 38: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      29     1 old_i0   I
           13      21     2   ans   Lscala/collection/IntStepper;
            0      35     0  this   Lscala/collection/convert/impl/RangeStepper;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #145                // Method hasStep:()Z
         4: ifeq          37
         7: aload_0
         8: invokevirtual #122                // Method myNext:()I
        11: istore_1
        12: aload_0
        13: aload_0
        14: invokevirtual #122                // Method myNext:()I
        17: aload_0
        18: getfield      #124                // Field scala$collection$convert$impl$RangeStepper$$myStep:I
        21: iadd
        22: invokevirtual #138                // Method myNext_$eq:(I)V
        25: aload_0
        26: aload_0
        27: invokevirtual #127                // Method i0:()I
        30: iconst_1
        31: iadd
        32: invokevirtual #148                // Method i0_$eq:(I)V
        35: iload_1
        36: ireturn
        37: getstatic     #154                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        40: pop
        41: new           #156                // class java/util/NoSuchElementException
        44: dup
        45: ldc           #158                // String Empty Stepper
        47: invokespecial #161                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        50: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 37 /* same */
      LineNumberTable:
        line 26: 0
        line 27: 7
        line 28: 12
        line 29: 25
        line 30: 35
        line 32: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      24     1   ans   I
            0      51     0  this   Lscala/collection/convert/impl/RangeStepper;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #163                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #165                // Method spliterator:()Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #167                // Method trySplit:()Lscala/collection/IntStepper;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public java.lang.Object trySplit();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #167                // Method trySplit:()Lscala/collection/IntStepper;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/RangeStepper;

  public java.lang.Object semiclone(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #170                // Method semiclone:(I)Lscala/collection/convert/impl/RangeStepper;
         5: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/RangeStepper;
            0       6     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #172                // Method nextStep:()I
         4: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/RangeStepper;

  public scala.collection.convert.impl.RangeStepper(int, int, int, int);
    descriptor: (IIII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=5
         0: aload_0
         1: iload_1
         2: putfield      #110                // Field myNext:I
         5: aload_0
         6: iload_2
         7: putfield      #124                // Field scala$collection$convert$impl$RangeStepper$$myStep:I
        10: aload_0
        11: iload_3
        12: iload         4
        14: invokespecial #184                // Method scala/collection/convert/impl/IndexedStepperBase."<init>":(II)V
        17: return
      LineNumberTable:
        line 22: 0
        line 23: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/convert/impl/RangeStepper;
            0      18     1 myNext   I
            0      18     2 myStep   I
            0      18     3   _i0   I
            0      18     4   _iN   I
    MethodParameters:
      Name                           Flags
      myNext                         final
      myStep                         final
      _i0                            final
      _iN                            final
}
InnerClasses:
  public static #16= #13 of #15;          // OfInt=class java/util/PrimitiveIterator$OfInt of class java/util/PrimitiveIterator
  public static #16= #18 of #20;          // OfInt=class java/util/Spliterator$OfInt of class java/util/Spliterator
Signature: #3                           // Lscala/collection/convert/impl/IndexedStepperBase<Lscala/collection/IntStepper;Lscala/collection/convert/impl/RangeStepper;>;Lscala/collection/IntStepper;
SourceFile: "RangeStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005y2Qa\u0003\u0007\u0003!QA\u0001B\b\u0001\u0003\u0002\u0004%\t\u0002\t\u0005\tK\u0001\u0011\t\u0019!C\tM!AA\u0006\u0001B\u0001B\u0003&\u0011\u0005\u0003\u0005.\u0001\t\u0005\t\u0015!\u0003\"\u0011!q\u0003A!A!\u0002\u0013\t\u0003\u0002C\u0018\u0001\u0005\u0003\u0005\u000b\u0011B\u0011\t\u000bA\u0002A\u0011A\u0019\t\u000bY\u0002A\u0011A\u001c\t\u000ba\u0002A\u0011C\u001d\t\u000bq\u0002A\u0011I\u001f\u0003\u0019I\u000bgnZ3Ti\u0016\u0004\b/\u001a:\u000b\u00055q\u0011\u0001B5na2T!a\u0004\t\u0002\u000f\r|gN^3si*\u0011\u0011CE\u0001\u000bG>dG.Z2uS>t\'\"A\n\u0002\u000bM\u001c\u0017\r\\1\u0014\u0007\u0001)\u0012\u0004\u0005\u0003\u0017/eiR\"\u0001\u0007\n\u0005aa!AE%oI\u0016DX\rZ*uKB\u0004XM\u001d\"bg\u0016\u0004\"AG\u000e\u000e\u0003AI!\u0001\b\t\u0003\u0015%sGo\u0015;faB,\'\u000f\u0005\u0002\u0017\u0001\u00051Q.\u001f(fqR\u001c\u0001!F\u0001\"!\t\u00113%D\u0001\u0013\u0013\t!#CA\u0002J]R\f!\"\\=OKb$x\fJ3r)\t9#\u0006\u0005\u0002#Q%\u0011\u0011F\u0005\u0002\u0005+:LG\u000fC\u0004,\u0005\u0005\u0005\t\u0019A\u0011\u0002\u0007a$\u0013\'A\u0004ns:+\u0007\u0010\u001e\u0011\u0002\r5L8\u000b^3q\u0003\ry\u0016\u000eM\u0001\u0004?&t\u0015A\u0002\u001fj]&$h\bF\u0003\u001eeM\"T\u0007C\u0003\u001f\u000f\u0001\u0007\u0011\u0005C\u0003.\u000f\u0001\u0007\u0011\u0005C\u0003/\u000f\u0001\u0007\u0011\u0005C\u00030\u000f\u0001\u0007\u0011%\u0001\u0005oKb$8\u000b^3q)\u0005\t\u0013!C:f[&\u001cGn\u001c8f)\ti\"\bC\u0003<\u0013\u0001\u0007\u0011%\u0001\u0003iC24\u0017\u0001\u0003;ssN\u0003H.\u001b;\u0015\u0003e\u0001"
    )
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 01 00 1B 00 80 00 81 01 00 65 00 66 01 00 21
   00 30 01 00 21 00 22 01 00 5C 00 30 01 00 2F 00
   30 01 00 61 00 30 01 00 15 00 6C 01 00 6F 00 70
   01 00 72 00 6C 01 00 72 00 86 01 00 36 00 37 01
   00 73 00 6C 01 00 3E 00 3F 01 00 76 00 A8 01 00
   76 00 77 01 00 18 00 19 01 00 18 00 29 01 00 53
   00 29 01 00 28 00 29 01 00 58 00 29 01 00 84 00
   86 01 00 84 00 85 01 00 84 00 45 01 00 44 00 45
   01 00 4B 00 45 01 00 4F 00 45 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
