Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/OptionConverters$RichOptionalGeneric$.class
  Last modified May 29, 2022; size 2572 bytes
  SHA-256 checksum 84828ea1df1019d8df19bcee2e5fee6be2fc846ce8bf14f4c90a91fe256cf828
  Compiled from "OptionConverters.scala"
public class scala.compat.java8.OptionConverters$RichOptionalGeneric$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/OptionConverters$RichOptionalGeneric$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               scala/compat/java8/OptionConverters$RichOptionalGeneric$
   #2 = Class              #1             // scala/compat/java8/OptionConverters$RichOptionalGeneric$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               OptionConverters.scala
   #6 = Utf8               scala/compat/java8/OptionConverters$RichOptionalGeneric
   #7 = Class              #6             // scala/compat/java8/OptionConverters$RichOptionalGeneric
   #8 = Utf8               scala/compat/java8/OptionConverters
   #9 = Class              #8             // scala/compat/java8/OptionConverters
  #10 = Utf8               RichOptionalGeneric
  #11 = Utf8               RichOptionalGeneric$
  #12 = Utf8               scala/compat/java8/OptionConverters$SpecializerOfOptions
  #13 = Class              #12            // scala/compat/java8/OptionConverters$SpecializerOfOptions
  #14 = Utf8               SpecializerOfOptions
  #15 = Utf8               MODULE$
  #16 = Utf8               Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
  #17 = Utf8               <clinit>
  #18 = Utf8               ()V
  #19 = Utf8               <init>
  #20 = NameAndType        #19:#18        // "<init>":()V
  #21 = Methodref          #2.#20         // scala/compat/java8/OptionConverters$RichOptionalGeneric$."<init>":()V
  #22 = NameAndType        #15:#16        // MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
  #23 = Fieldref           #2.#22         // scala/compat/java8/OptionConverters$RichOptionalGeneric$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
  #24 = Utf8               asScala$extension
  #25 = Utf8               (Ljava/util/Optional;)Lscala/Option;
  #26 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Lscala/Option<TA;>;
  #27 = Utf8               $this
  #28 = Utf8               java/util/Optional
  #29 = Class              #28            // java/util/Optional
  #30 = Utf8               isPresent
  #31 = Utf8               ()Z
  #32 = NameAndType        #30:#31        // isPresent:()Z
  #33 = Methodref          #29.#32        // java/util/Optional.isPresent:()Z
  #34 = Utf8               scala/Some
  #35 = Class              #34            // scala/Some
  #36 = Utf8               get
  #37 = Utf8               ()Ljava/lang/Object;
  #38 = NameAndType        #36:#37        // get:()Ljava/lang/Object;
  #39 = Methodref          #29.#38        // java/util/Optional.get:()Ljava/lang/Object;
  #40 = Utf8               (Ljava/lang/Object;)V
  #41 = NameAndType        #19:#40        // "<init>":(Ljava/lang/Object;)V
  #42 = Methodref          #35.#41        // scala/Some."<init>":(Ljava/lang/Object;)V
  #43 = Utf8               scala/None$
  #44 = Class              #43            // scala/None$
  #45 = Utf8               Lscala/None$;
  #46 = NameAndType        #15:#45        // MODULE$:Lscala/None$;
  #47 = Fieldref           #44.#46        // scala/None$.MODULE$:Lscala/None$;
  #48 = Utf8               this
  #49 = Utf8               Ljava/util/Optional;
  #50 = Utf8               scala/Option
  #51 = Class              #50            // scala/Option
  #52 = Utf8               asPrimitive$extension
  #53 = Utf8               (Ljava/util/Optional;Lscala/compat/java8/OptionConverters$SpecializerOfOptions;)Ljava/lang/Object;
  #54 = Utf8               <That:Ljava/lang/Object;A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;Lscala/compat/java8/OptionConverters$SpecializerOfOptions<TA;TThat;>;)TThat;
  #55 = Utf8               specOp
  #56 = Utf8               fromJava
  #57 = Utf8               (Ljava/util/Optional;)Ljava/lang/Object;
  #58 = NameAndType        #56:#57        // fromJava:(Ljava/util/Optional;)Ljava/lang/Object;
  #59 = Methodref          #13.#58        // scala/compat/java8/OptionConverters$SpecializerOfOptions.fromJava:(Ljava/util/Optional;)Ljava/lang/Object;
  #60 = Utf8               Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
  #61 = Utf8               hashCode$extension
  #62 = Utf8               (Ljava/util/Optional;)I
  #63 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)I
  #64 = Utf8               hashCode
  #65 = Utf8               ()I
  #66 = NameAndType        #64:#65        // hashCode:()I
  #67 = Methodref          #29.#66        // java/util/Optional.hashCode:()I
  #68 = Utf8               equals$extension
  #69 = Utf8               (Ljava/util/Optional;Ljava/lang/Object;)Z
  #70 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;Ljava/lang/Object;)Z
  #71 = Utf8               x$1
  #72 = Utf8               underlying
  #73 = Utf8               ()Ljava/util/Optional;
  #74 = NameAndType        #72:#73        // underlying:()Ljava/util/Optional;
  #75 = Methodref          #7.#74         // scala/compat/java8/OptionConverters$RichOptionalGeneric.underlying:()Ljava/util/Optional;
  #76 = Utf8               equals
  #77 = Utf8               (Ljava/lang/Object;)Z
  #78 = NameAndType        #76:#77        // equals:(Ljava/lang/Object;)Z
  #79 = Methodref          #4.#78         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #80 = Utf8               Ljava/lang/Object;
  #81 = Methodref          #4.#20         // java/lang/Object."<init>":()V
  #82 = Utf8               Code
  #83 = Utf8               LineNumberTable
  #84 = Utf8               StackMapTable
  #85 = Utf8               LocalVariableTable
  #86 = Utf8               Signature
  #87 = Utf8               MethodParameters
  #88 = Utf8               InnerClasses
  #89 = Utf8               SourceFile
  #90 = Utf8               ScalaInlineInfo
  #91 = Utf8               Scala
{
  public static final scala.compat.java8.OptionConverters$RichOptionalGeneric$ MODULE$;
    descriptor: Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/compat/java8/OptionConverters$RichOptionalGeneric$
         3: dup
         4: invokespecial #21                 // Method "<init>":()V
         7: putstatic     #23                 // Field MODULE$:Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
        10: return
      LineNumberTable:
        line 90: 0

  public final <A extends java.lang.Object> scala.Option<A> asScala$extension(java.util.Optional<A>);
    descriptor: (Ljava/util/Optional;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #33                 // Method java/util/Optional.isPresent:()Z
         4: ifeq          21
         7: new           #35                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #39                 // Method java/util/Optional.get:()Ljava/lang/Object;
        15: invokespecial #42                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        18: goto          24
        21: getstatic     #47                 // Field scala/None$.MODULE$:Lscala/None$;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
            0      25     1 $this   Ljava/util/Optional;
    Signature: #26                          // <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <That extends java.lang.Object, A extends java.lang.Object> That asPrimitive$extension(java.util.Optional<A>, scala.compat.java8.OptionConverters$SpecializerOfOptions<A, That>);
    descriptor: (Ljava/util/Optional;Lscala/compat/java8/OptionConverters$SpecializerOfOptions;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: aload_1
         2: invokevirtual #59                 // Method scala/compat/java8/OptionConverters$SpecializerOfOptions.fromJava:(Ljava/util/Optional;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
            0       6     1 $this   Ljava/util/Optional;
            0       6     2 specOp   Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    Signature: #54                          // <That:Ljava/lang/Object;A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;Lscala/compat/java8/OptionConverters$SpecializerOfOptions<TA;TThat;>;)TThat;
    MethodParameters:
      Name                           Flags
      $this                          final
      specOp                         final

  public final <A extends java.lang.Object> int hashCode$extension(java.util.Optional<A>);
    descriptor: (Ljava/util/Optional;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #67                 // Method java/util/Optional.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
            0       5     1 $this   Ljava/util/Optional;
    Signature: #63                          // <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)I
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <A extends java.lang.Object> boolean equals$extension(java.util.Optional<A>, java.lang.Object);
    descriptor: (Ljava/util/Optional;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #7                  // class scala/compat/java8/OptionConverters$RichOptionalGeneric
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          83
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #7                  // class scala/compat/java8/OptionConverters$RichOptionalGeneric
        40: invokevirtual #75                 // Method scala/compat/java8/OptionConverters$RichOptionalGeneric.underlying:()Ljava/util/Optional;
        43: astore        5
        45: aload_1
        46: aload         5
        48: astore        6
        50: dup
        51: ifnonnull     63
        54: pop
        55: aload         6
        57: ifnull        71
        60: goto          75
        63: aload         6
        65: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        68: ifeq          75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/compat/java8/OptionConverters$RichOptionalGeneric$, class java/util/Optional, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/util/Optional ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/compat/java8/OptionConverters$RichOptionalGeneric$, class java/util/Optional, class java/lang/Object, int, class java/lang/Object, class java/util/Optional, class java/util/Optional ]
          stack = [ class java/util/Optional ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
            0      85     1 $this   Ljava/util/Optional;
            0      85     2   x$1   Ljava/lang/Object;
    Signature: #70                          // <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;Ljava/lang/Object;)Z
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public scala.compat.java8.OptionConverters$RichOptionalGeneric$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #81                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$RichOptionalGeneric$;
}
InnerClasses:
  public static final #10= #7 of #9;      // RichOptionalGeneric=class scala/compat/java8/OptionConverters$RichOptionalGeneric of class scala/compat/java8/OptionConverters
  public static #11= #2 of #9;            // RichOptionalGeneric$=class scala/compat/java8/OptionConverters$RichOptionalGeneric$ of class scala/compat/java8/OptionConverters
  public static abstract #14= #13 of #9;  // SpecializerOfOptions=class scala/compat/java8/OptionConverters$SpecializerOfOptions of class scala/compat/java8/OptionConverters
SourceFile: "OptionConverters.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 13 00 12 01 00 34 00 35 01 00 18
   00 19 01 00 44 00 45 01 00 3D 00 3E 01
  Scala: length = 0x0 (unknown attribute)

