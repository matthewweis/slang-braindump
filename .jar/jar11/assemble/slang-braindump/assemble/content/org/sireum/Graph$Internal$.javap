Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Graph$Internal$.class
  Last modified May 29, 2022; size 7209 bytes
  SHA-256 checksum 6a46d7b67cbcb56b5db574497b21554c3c99bead889fb4eb31c6cbcef6f97b4f
  Compiled from "Graph.scala"
public class org.sireum.Graph$Internal$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/Graph$Internal$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Graph$Internal$
    #2 = Class              #1            // org/sireum/Graph$Internal$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Graph.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$ISZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               ISZ$
   #16 = Utf8               org/sireum/Graph
   #17 = Class              #16           // org/sireum/Graph
   #18 = Utf8               Internal$
   #19 = Utf8               org/sireum/Graph$Internal$Edge
   #20 = Class              #19           // org/sireum/Graph$Internal$Edge
   #21 = Utf8               Edge
   #22 = Utf8               org/sireum/Graph$Internal$Edge$
   #23 = Class              #22           // org/sireum/Graph$Internal$Edge$
   #24 = Utf8               Edge$
   #25 = Utf8               org/sireum/Graph$Internal$Edge$Data
   #26 = Class              #25           // org/sireum/Graph$Internal$Edge$Data
   #27 = Utf8               Data
   #28 = Utf8               org/sireum/Graph$Internal$Edge$Data$
   #29 = Class              #28           // org/sireum/Graph$Internal$Edge$Data$
   #30 = Utf8               Data$
   #31 = Utf8               org/sireum/Graph$Internal$Edge$Plain
   #32 = Class              #31           // org/sireum/Graph$Internal$Edge$Plain
   #33 = Utf8               Plain
   #34 = Utf8               org/sireum/Graph$Internal$Edge$Plain$
   #35 = Class              #34           // org/sireum/Graph$Internal$Edge$Plain$
   #36 = Utf8               Plain$
   #37 = Utf8               org/sireum/Graph$Internal$Edges
   #38 = Class              #37           // org/sireum/Graph$Internal$Edges
   #39 = Utf8               Edges
   #40 = Utf8               org/sireum/Graph$Internal$Edges$
   #41 = Class              #40           // org/sireum/Graph$Internal$Edges$
   #42 = Utf8               Edges$
   #43 = Utf8               org/sireum/package$$Arrow$
   #44 = Class              #43           // org/sireum/package$$Arrow$
   #45 = Utf8               org/sireum/package
   #46 = Class              #45           // org/sireum/package
   #47 = Utf8               $Arrow$
   #48 = Utf8               MODULE$
   #49 = Utf8               Lorg/sireum/Graph$Internal$;
   #50 = Utf8               <clinit>
   #51 = Utf8               ()V
   #52 = Utf8               <init>
   #53 = NameAndType        #52:#51       // "<init>":()V
   #54 = Methodref          #2.#53        // org/sireum/Graph$Internal$."<init>":()V
   #55 = NameAndType        #48:#49       // MODULE$:Lorg/sireum/Graph$Internal$;
   #56 = Fieldref           #2.#55        // org/sireum/Graph$Internal$.MODULE$:Lorg/sireum/Graph$Internal$;
   #57 = Utf8               addEdge
   #58 = Utf8               (Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph;
   #59 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Graph$Internal$Edge<TE;>;)Lorg/sireum/Graph<TW;TE;>;
   #60 = Utf8               g
   #61 = Utf8               e
   #62 = Utf8               incomingEdges
   #63 = Utf8               ()Lorg/sireum/HashSMap;
   #64 = NameAndType        #62:#63       // incomingEdges:()Lorg/sireum/HashSMap;
   #65 = Methodref          #17.#64       // org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
   #66 = Utf8               Lorg/sireum/package$$Arrow$;
   #67 = NameAndType        #48:#66       // MODULE$:Lorg/sireum/package$$Arrow$;
   #68 = Fieldref           #44.#67       // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
   #69 = Utf8               org/sireum/package$
   #70 = Class              #69           // org/sireum/package$
   #71 = Utf8               Lorg/sireum/package$;
   #72 = NameAndType        #48:#71       // MODULE$:Lorg/sireum/package$;
   #73 = Fieldref           #70.#72       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #74 = Utf8               dest
   #75 = Utf8               ()Lorg/sireum/Z;
   #76 = NameAndType        #74:#75       // dest:()Lorg/sireum/Z;
   #77 = InterfaceMethodref #20.#76       // org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
   #78 = Utf8               $Arrow
   #79 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #80 = NameAndType        #78:#79       // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
   #81 = Methodref          #70.#80       // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
   #82 = Utf8               org/sireum/HashSMap
   #83 = Class              #82           // org/sireum/HashSMap
   #84 = Utf8               get
   #85 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
   #86 = NameAndType        #84:#85       // get:(Ljava/lang/Object;)Lorg/sireum/Option;
   #87 = Methodref          #83.#86       // org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
   #88 = Utf8               ()Ljava/lang/Object;
   #89 = MethodType         #88           //  ()Ljava/lang/Object;
   #90 = Utf8               $anonfun$addEdge$1
   #91 = Utf8               (Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
   #92 = NameAndType        #90:#91       // $anonfun$addEdge$1:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
   #93 = Methodref          #2.#92        // org/sireum/Graph$Internal$.$anonfun$addEdge$1:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
   #94 = MethodHandle       6:#93         // REF_invokeStatic org/sireum/Graph$Internal$.$anonfun$addEdge$1:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
   #95 = Utf8               ()Lorg/sireum/Graph$Internal$Edges;
   #96 = MethodType         #95           //  ()Lorg/sireum/Graph$Internal$Edges;
   #97 = Integer            5
   #98 = Integer            1
   #99 = Utf8               java/lang/invoke/LambdaMetafactory
  #100 = Class              #99           // java/lang/invoke/LambdaMetafactory
  #101 = Utf8               altMetafactory
  #102 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #103 = NameAndType        #101:#102     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #104 = Methodref          #100.#103     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #105 = MethodHandle       6:#104        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #106 = Utf8               apply
  #107 = Utf8               (Lorg/sireum/Graph;)Lscala/Function0;
  #108 = NameAndType        #106:#107     // apply:(Lorg/sireum/Graph;)Lscala/Function0;
  #109 = InvokeDynamic      #0:#108       // #0:apply:(Lorg/sireum/Graph;)Lscala/Function0;
  #110 = Utf8               org/sireum/Option
  #111 = Class              #110          // org/sireum/Option
  #112 = Utf8               getOrElse
  #113 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #114 = NameAndType        #112:#113     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #115 = InterfaceMethodref #111.#114     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #116 = Utf8               $plus
  #117 = Utf8               (Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph$Internal$Edges;
  #118 = NameAndType        #116:#117     // $plus:(Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph$Internal$Edges;
  #119 = InterfaceMethodref #38.#118      // org/sireum/Graph$Internal$Edges.$plus:(Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph$Internal$Edges;
  #120 = Utf8               $tilde$greater$extension
  #121 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #122 = NameAndType        #120:#121     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #123 = Methodref          #44.#122      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #124 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #125 = NameAndType        #116:#124     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #126 = Methodref          #83.#125      // org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #127 = Utf8               outgoingEdges
  #128 = NameAndType        #127:#63      // outgoingEdges:()Lorg/sireum/HashSMap;
  #129 = Methodref          #17.#128      // org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
  #130 = Utf8               source
  #131 = NameAndType        #130:#75      // source:()Lorg/sireum/Z;
  #132 = InterfaceMethodref #20.#131      // org/sireum/Graph$Internal$Edge.source:()Lorg/sireum/Z;
  #133 = Utf8               $anonfun$addEdge$2
  #134 = NameAndType        #133:#91      // $anonfun$addEdge$2:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
  #135 = Methodref          #2.#134       // org/sireum/Graph$Internal$.$anonfun$addEdge$2:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
  #136 = MethodHandle       6:#135        // REF_invokeStatic org/sireum/Graph$Internal$.$anonfun$addEdge$2:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
  #137 = InvokeDynamic      #1:#108       // #1:apply:(Lorg/sireum/Graph;)Lscala/Function0;
  #138 = Utf8               apply$default$1
  #139 = NameAndType        #138:#63      // apply$default$1:()Lorg/sireum/HashSMap;
  #140 = Methodref          #17.#139      // org/sireum/Graph.apply$default$1:()Lorg/sireum/HashSMap;
  #141 = Utf8               apply$default$2
  #142 = Utf8               ()Lorg/sireum/IS;
  #143 = NameAndType        #141:#142     // apply$default$2:()Lorg/sireum/IS;
  #144 = Methodref          #17.#143      // org/sireum/Graph.apply$default$2:()Lorg/sireum/IS;
  #145 = Utf8               apply$default$5
  #146 = NameAndType        #145:#75      // apply$default$5:()Lorg/sireum/Z;
  #147 = Methodref          #17.#146      // org/sireum/Graph.apply$default$5:()Lorg/sireum/Z;
  #148 = Utf8               apply$default$6
  #149 = Utf8               ()Z
  #150 = NameAndType        #148:#149     // apply$default$6:()Z
  #151 = Methodref          #17.#150      // org/sireum/Graph.apply$default$6:()Z
  #152 = Utf8               (Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
  #153 = NameAndType        #106:#152     // apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
  #154 = Methodref          #17.#153      // org/sireum/Graph.apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
  #155 = Utf8               x$1
  #156 = Utf8               Lorg/sireum/HashSMap;
  #157 = Utf8               x$2
  #158 = Utf8               x$3
  #159 = Utf8               x$4
  #160 = Utf8               Lorg/sireum/IS;
  #161 = Utf8               x$5
  #162 = Utf8               Lorg/sireum/Z;
  #163 = Utf8               x$6
  #164 = Utf8               Z
  #165 = Utf8               this
  #166 = Utf8               Lorg/sireum/Graph;
  #167 = Utf8               Lorg/sireum/Graph$Internal$Edge;
  #168 = Utf8               addPlainEdge
  #169 = Utf8               (Lorg/sireum/Graph;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph;
  #170 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph<TW;TE;>;
  #171 = Utf8               src
  #172 = Utf8               dst
  #173 = Utf8               Lorg/sireum/Graph$Internal$Edge$Plain$;
  #174 = NameAndType        #48:#173      // MODULE$:Lorg/sireum/Graph$Internal$Edge$Plain$;
  #175 = Fieldref           #35.#174      // org/sireum/Graph$Internal$Edge$Plain$.MODULE$:Lorg/sireum/Graph$Internal$Edge$Plain$;
  #176 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
  #177 = NameAndType        #106:#176     // apply:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
  #178 = Methodref          #35.#177      // org/sireum/Graph$Internal$Edge$Plain$.apply:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
  #179 = NameAndType        #57:#58       // addEdge:(Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph;
  #180 = Methodref          #2.#179       // org/sireum/Graph$Internal$.addEdge:(Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph;
  #181 = Utf8               addDataEdge
  #182 = Utf8               (Lorg/sireum/Graph;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph;
  #183 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;TE;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph<TW;TE;>;
  #184 = Utf8               data
  #185 = Utf8               Lorg/sireum/Graph$Internal$Edge$Data$;
  #186 = NameAndType        #48:#185      // MODULE$:Lorg/sireum/Graph$Internal$Edge$Data$;
  #187 = Fieldref           #29.#186      // org/sireum/Graph$Internal$Edge$Data$.MODULE$:Lorg/sireum/Graph$Internal$Edge$Data$;
  #188 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/Graph$Internal$Edge$Data;
  #189 = NameAndType        #106:#188     // apply:(Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/Graph$Internal$Edge$Data;
  #190 = Methodref          #29.#189      // org/sireum/Graph$Internal$Edge$Data$.apply:(Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/Graph$Internal$Edge$Data;
  #191 = Utf8               Ljava/lang/Object;
  #192 = Utf8               removeEdge
  #193 = Utf8               (Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;Lorg/sireum/Z;)Lorg/sireum/Graph;
  #194 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Graph$Internal$Edge<TE;>;Lorg/sireum/Z;)Lorg/sireum/Graph<TW;TE;>;
  #195 = Utf8               n
  #196 = Utf8               org/sireum/B$
  #197 = Class              #196          // org/sireum/B$
  #198 = Utf8               Lorg/sireum/B$;
  #199 = NameAndType        #48:#198      // MODULE$:Lorg/sireum/B$;
  #200 = Fieldref           #197.#199     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #201 = Utf8               isEmpty
  #202 = NameAndType        #201:#149     // isEmpty:()Z
  #203 = InterfaceMethodref #111.#202     // org/sireum/Option.isEmpty:()Z
  #204 = Utf8               $4B
  #205 = Utf8               (Z)Z
  #206 = NameAndType        #204:#205     // $4B:(Z)Z
  #207 = Methodref          #197.#206     // org/sireum/B$.$4B:(Z)Z
  #208 = NameAndType        #84:#88       // get:()Ljava/lang/Object;
  #209 = InterfaceMethodref #111.#208     // org/sireum/Option.get:()Ljava/lang/Object;
  #210 = Utf8               $minus$hash
  #211 = Utf8               (Lscala/Tuple2;)Lorg/sireum/Graph$Internal$Edges;
  #212 = NameAndType        #210:#211     // $minus$hash:(Lscala/Tuple2;)Lorg/sireum/Graph$Internal$Edges;
  #213 = InterfaceMethodref #38.#212      // org/sireum/Graph$Internal$Edges.$minus$hash:(Lscala/Tuple2;)Lorg/sireum/Graph$Internal$Edges;
  #214 = Utf8               incoming
  #215 = Utf8               (Lorg/sireum/Graph;Lorg/sireum/Z;)Lorg/sireum/IS;
  #216 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Z;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edge<TE;>;>;
  #217 = Utf8               org/sireum/Some
  #218 = Class              #217          // org/sireum/Some
  #219 = Utf8               org/sireum/Some$
  #220 = Class              #219          // org/sireum/Some$
  #221 = Utf8               Lorg/sireum/Some$;
  #222 = NameAndType        #48:#221      // MODULE$:Lorg/sireum/Some$;
  #223 = Fieldref           #220.#222     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #224 = Utf8               unapply
  #225 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #226 = NameAndType        #224:#225     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #227 = Methodref          #220.#226     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #228 = Utf8               scala/Some
  #229 = Class              #228          // scala/Some
  #230 = Methodref          #229.#202     // scala/Some.isEmpty:()Z
  #231 = Methodref          #229.#208     // scala/Some.get:()Ljava/lang/Object;
  #232 = Utf8               elements
  #233 = NameAndType        #232:#142     // elements:()Lorg/sireum/IS;
  #234 = InterfaceMethodref #38.#233      // org/sireum/Graph$Internal$Edges.elements:()Lorg/sireum/IS;
  #235 = Utf8               ISZ
  #236 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #237 = NameAndType        #235:#236     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #238 = Methodref          #70.#237      // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #239 = Utf8               scala/collection/immutable/Nil$
  #240 = Class              #239          // scala/collection/immutable/Nil$
  #241 = Utf8               Lscala/collection/immutable/Nil$;
  #242 = NameAndType        #48:#241      // MODULE$:Lscala/collection/immutable/Nil$;
  #243 = Fieldref           #240.#242     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #244 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #245 = NameAndType        #106:#244     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #246 = Methodref          #12.#245      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #247 = Utf8               s
  #248 = Utf8               Lorg/sireum/Graph$Internal$Edges;
  #249 = Utf8               org/sireum/Z
  #250 = Class              #249          // org/sireum/Z
  #251 = Utf8               outgoing
  #252 = Utf8               g$1
  #253 = Utf8               Lorg/sireum/Graph$Internal$Edges$;
  #254 = NameAndType        #48:#253      // MODULE$:Lorg/sireum/Graph$Internal$Edges$;
  #255 = Fieldref           #41.#254      // org/sireum/Graph$Internal$Edges$.MODULE$:Lorg/sireum/Graph$Internal$Edges$;
  #256 = Utf8               multi
  #257 = NameAndType        #256:#149     // multi:()Z
  #258 = Methodref          #17.#257      // org/sireum/Graph.multi:()Z
  #259 = Utf8               empty
  #260 = Utf8               (Z)Lorg/sireum/Graph$Internal$Edges;
  #261 = NameAndType        #259:#260     // empty:(Z)Lorg/sireum/Graph$Internal$Edges;
  #262 = Methodref          #41.#261      // org/sireum/Graph$Internal$Edges$.empty:(Z)Lorg/sireum/Graph$Internal$Edges;
  #263 = Methodref          #4.#53        // java/lang/Object."<init>":()V
  #264 = Utf8               $deserializeLambda$
  #265 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #266 = Utf8               scala/runtime/LambdaDeserialize
  #267 = Class              #266          // scala/runtime/LambdaDeserialize
  #268 = Utf8               bootstrap
  #269 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #270 = NameAndType        #268:#269     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #271 = Methodref          #267.#270     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #272 = MethodHandle       6:#271        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #273 = Utf8               lambdaDeserialize
  #274 = NameAndType        #273:#265     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #275 = InvokeDynamic      #2:#274       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #276 = Utf8               Code
  #277 = Utf8               LineNumberTable
  #278 = Utf8               LocalVariableTable
  #279 = Utf8               Signature
  #280 = Utf8               MethodParameters
  #281 = Utf8               StackMapTable
  #282 = Utf8               InnerClasses
  #283 = Utf8               SourceFile
  #284 = Utf8               BootstrapMethods
  #285 = Utf8               ScalaInlineInfo
  #286 = Utf8               Scala
{
  public static final org.sireum.Graph$Internal$ MODULE$;
    descriptor: Lorg/sireum/Graph$Internal$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/Graph$Internal$
         3: dup
         4: invokespecial #54                 // Method "<init>":()V
         7: putstatic     #56                 // Field MODULE$:Lorg/sireum/Graph$Internal$;
        10: return
      LineNumberTable:
        line 59: 0

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.Graph<W, E> addEdge(org.sireum.Graph<W, E>, org.sireum.Graph$Internal$Edge<E>);
    descriptor: (Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=9, args_size=3
         0: aload_1
         1: invokevirtual #65                 // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
         4: getstatic     #68                 // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
         7: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        10: aload_2
        11: invokeinterface #77,  1           // InterfaceMethod org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
        16: invokevirtual #81                 // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        19: aload_1
        20: invokevirtual #65                 // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
        23: aload_2
        24: invokeinterface #77,  1           // InterfaceMethod org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
        29: invokevirtual #87                 // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        32: aload_1
        33: invokedynamic #109,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Graph;)Lscala/Function0;
        38: invokeinterface #115,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        43: checkcast     #38                 // class org/sireum/Graph$Internal$Edges
        46: aload_2
        47: invokeinterface #119,  2          // InterfaceMethod org/sireum/Graph$Internal$Edges.$plus:(Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph$Internal$Edges;
        52: invokevirtual #123                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        55: invokevirtual #126                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
        58: astore_3
        59: aload_1
        60: invokevirtual #129                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
        63: getstatic     #68                 // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        66: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        69: aload_2
        70: invokeinterface #132,  1          // InterfaceMethod org/sireum/Graph$Internal$Edge.source:()Lorg/sireum/Z;
        75: invokevirtual #81                 // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        78: aload_1
        79: invokevirtual #129                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
        82: aload_2
        83: invokeinterface #132,  1          // InterfaceMethod org/sireum/Graph$Internal$Edge.source:()Lorg/sireum/Z;
        88: invokevirtual #87                 // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        91: aload_1
        92: invokedynamic #137,  0            // InvokeDynamic #1:apply:(Lorg/sireum/Graph;)Lscala/Function0;
        97: invokeinterface #115,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       102: checkcast     #38                 // class org/sireum/Graph$Internal$Edges
       105: aload_2
       106: invokeinterface #119,  2          // InterfaceMethod org/sireum/Graph$Internal$Edges.$plus:(Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph$Internal$Edges;
       111: invokevirtual #123                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       114: invokevirtual #126                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       117: astore        4
       119: aload_1
       120: invokevirtual #140                // Method org/sireum/Graph.apply$default$1:()Lorg/sireum/HashSMap;
       123: astore        5
       125: aload_1
       126: invokevirtual #144                // Method org/sireum/Graph.apply$default$2:()Lorg/sireum/IS;
       129: astore        6
       131: aload_1
       132: invokevirtual #147                // Method org/sireum/Graph.apply$default$5:()Lorg/sireum/Z;
       135: astore        7
       137: aload_1
       138: invokevirtual #151                // Method org/sireum/Graph.apply$default$6:()Z
       141: istore        8
       143: aload_1
       144: aload         5
       146: aload         6
       148: aload_3
       149: aload         4
       151: aload         7
       153: iload         8
       155: invokevirtual #154                // Method org/sireum/Graph.apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
       158: areturn
      LineNumberTable:
        line 151: 0
        line 151: 19
        line 152: 23
        line 153: 32
        line 154: 59
        line 154: 78
        line 155: 82
        line 156: 91
        line 150: 119
        line 151: 148
        line 154: 149
        line 150: 151
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           59      99     3   x$1   Lorg/sireum/HashSMap;
          119      39     4   x$2   Lorg/sireum/HashSMap;
          125      33     5   x$3   Lorg/sireum/HashSMap;
          131      27     6   x$4   Lorg/sireum/IS;
          137      21     7   x$5   Lorg/sireum/Z;
          143      15     8   x$6   Z
            0     159     0  this   Lorg/sireum/Graph$Internal$;
            0     159     1     g   Lorg/sireum/Graph;
            0     159     2     e   Lorg/sireum/Graph$Internal$Edge;
    Signature: #59                          // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Graph$Internal$Edge<TE;>;)Lorg/sireum/Graph<TW;TE;>;
    MethodParameters:
      Name                           Flags
      g                              final
      e                              final

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.Graph<W, E> addPlainEdge(org.sireum.Graph<W, E>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Graph;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: getstatic     #175                // Field org/sireum/Graph$Internal$Edge$Plain$.MODULE$:Lorg/sireum/Graph$Internal$Edge$Plain$;
         5: aload_2
         6: aload_3
         7: invokevirtual #178                // Method org/sireum/Graph$Internal$Edge$Plain$.apply:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
        10: invokevirtual #180                // Method addEdge:(Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph;
        13: areturn
      LineNumberTable:
        line 161: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/Graph$Internal$;
            0      14     1     g   Lorg/sireum/Graph;
            0      14     2   src   Lorg/sireum/Z;
            0      14     3   dst   Lorg/sireum/Z;
    Signature: #170                         // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph<TW;TE;>;
    MethodParameters:
      Name                           Flags
      g                              final
      src                            final
      dst                            final

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.Graph<W, E> addDataEdge(org.sireum.Graph<W, E>, E, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Graph;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: getstatic     #187                // Field org/sireum/Graph$Internal$Edge$Data$.MODULE$:Lorg/sireum/Graph$Internal$Edge$Data$;
         5: aload_3
         6: aload         4
         8: aload_2
         9: invokevirtual #190                // Method org/sireum/Graph$Internal$Edge$Data$.apply:(Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/Graph$Internal$Edge$Data;
        12: invokevirtual #180                // Method addEdge:(Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;)Lorg/sireum/Graph;
        15: areturn
      LineNumberTable:
        line 165: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/sireum/Graph$Internal$;
            0      16     1     g   Lorg/sireum/Graph;
            0      16     2  data   Ljava/lang/Object;
            0      16     3   src   Lorg/sireum/Z;
            0      16     4   dst   Lorg/sireum/Z;
    Signature: #183                         // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;TE;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph<TW;TE;>;
    MethodParameters:
      Name                           Flags
      g                              final
      data                           final
      src                            final
      dst                            final

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.Graph<W, E> removeEdge(org.sireum.Graph<W, E>, org.sireum.Graph$Internal$Edge<E>, org.sireum.Z);
    descriptor: (Lorg/sireum/Graph;Lorg/sireum/Graph$Internal$Edge;Lorg/sireum/Z;)Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=10, args_size=4
         0: getstatic     #200                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #65                 // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
         7: aload_2
         8: invokeinterface #77,  1           // InterfaceMethod org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
        13: invokevirtual #87                 // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        16: invokeinterface #203,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        21: invokevirtual #207                // Method org/sireum/B$.$4B:(Z)Z
        24: ifeq          29
        27: aload_1
        28: areturn
        29: aload_1
        30: invokevirtual #65                 // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
        33: getstatic     #68                 // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        36: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        39: aload_2
        40: invokeinterface #77,  1           // InterfaceMethod org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
        45: invokevirtual #81                 // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        48: aload_1
        49: invokevirtual #65                 // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
        52: aload_2
        53: invokeinterface #77,  1           // InterfaceMethod org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
        58: invokevirtual #87                 // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        61: invokeinterface #209,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        66: checkcast     #38                 // class org/sireum/Graph$Internal$Edges
        69: getstatic     #68                 // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        72: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        75: aload_2
        76: invokevirtual #81                 // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        79: aload_3
        80: invokevirtual #123                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        83: invokeinterface #213,  2          // InterfaceMethod org/sireum/Graph$Internal$Edges.$minus$hash:(Lscala/Tuple2;)Lorg/sireum/Graph$Internal$Edges;
        88: invokevirtual #123                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        91: invokevirtual #126                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
        94: astore        4
        96: aload_1
        97: invokevirtual #129                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
       100: getstatic     #68                 // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       103: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       106: aload_2
       107: invokeinterface #132,  1          // InterfaceMethod org/sireum/Graph$Internal$Edge.source:()Lorg/sireum/Z;
       112: invokevirtual #81                 // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       115: aload_1
       116: invokevirtual #129                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
       119: aload_2
       120: invokeinterface #132,  1          // InterfaceMethod org/sireum/Graph$Internal$Edge.source:()Lorg/sireum/Z;
       125: invokevirtual #87                 // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
       128: invokeinterface #209,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
       133: checkcast     #38                 // class org/sireum/Graph$Internal$Edges
       136: getstatic     #68                 // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       139: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       142: aload_2
       143: invokevirtual #81                 // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       146: aload_3
       147: invokevirtual #123                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       150: invokeinterface #213,  2          // InterfaceMethod org/sireum/Graph$Internal$Edges.$minus$hash:(Lscala/Tuple2;)Lorg/sireum/Graph$Internal$Edges;
       155: invokevirtual #123                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       158: invokevirtual #126                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       161: astore        5
       163: aload_1
       164: invokevirtual #140                // Method org/sireum/Graph.apply$default$1:()Lorg/sireum/HashSMap;
       167: astore        6
       169: aload_1
       170: invokevirtual #144                // Method org/sireum/Graph.apply$default$2:()Lorg/sireum/IS;
       173: astore        7
       175: aload_1
       176: invokevirtual #147                // Method org/sireum/Graph.apply$default$5:()Lorg/sireum/Z;
       179: astore        8
       181: aload_1
       182: invokevirtual #151                // Method org/sireum/Graph.apply$default$6:()Z
       185: istore        9
       187: aload_1
       188: aload         6
       190: aload         7
       192: aload         4
       194: aload         5
       196: aload         8
       198: iload         9
       200: invokevirtual #154                // Method org/sireum/Graph.apply:(Lorg/sireum/HashSMap;Lorg/sireum/IS;Lorg/sireum/HashSMap;Lorg/sireum/HashSMap;Lorg/sireum/Z;Z)Lorg/sireum/Graph;
       203: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 29 /* same */
      LineNumberTable:
        line 169: 0
        line 170: 27
        line 173: 29
        line 174: 96
        line 172: 163
        line 173: 192
        line 174: 194
        line 172: 196
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           96     107     4   x$1   Lorg/sireum/HashSMap;
          163      40     5   x$2   Lorg/sireum/HashSMap;
          169      34     6   x$3   Lorg/sireum/HashSMap;
          175      28     7   x$4   Lorg/sireum/IS;
          181      22     8   x$5   Lorg/sireum/Z;
          187      16     9   x$6   Z
            0     204     0  this   Lorg/sireum/Graph$Internal$;
            0     204     1     g   Lorg/sireum/Graph;
            0     204     2     e   Lorg/sireum/Graph$Internal$Edge;
            0     204     3     n   Lorg/sireum/Z;
    Signature: #194                         // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Graph$Internal$Edge<TE;>;Lorg/sireum/Z;)Lorg/sireum/Graph<TW;TE;>;
    MethodParameters:
      Name                           Flags
      g                              final
      e                              final
      n                              final

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.IS<org.sireum.Z, org.sireum.Graph$Internal$Edge<E>> incoming(org.sireum.Graph<W, E>, org.sireum.Z);
    descriptor: (Lorg/sireum/Graph;Lorg/sireum/Z;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=3
         0: aload_1
         1: invokevirtual #65                 // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
         4: aload_2
         5: invokevirtual #87                 // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
         8: astore        4
        10: aload         4
        12: instanceof    #218                // class org/sireum/Some
        15: ifeq          64
        18: aload         4
        20: checkcast     #218                // class org/sireum/Some
        23: astore        5
        25: getstatic     #223                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        28: aload         5
        30: invokevirtual #227                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        33: astore        6
        35: aload         6
        37: invokevirtual #230                // Method scala/Some.isEmpty:()Z
        40: ifne          61
        43: aload         6
        45: invokevirtual #231                // Method scala/Some.get:()Ljava/lang/Object;
        48: checkcast     #38                 // class org/sireum/Graph$Internal$Edges
        51: astore        7
        53: aload         7
        55: invokeinterface #234,  1          // InterfaceMethod org/sireum/Graph$Internal$Edges.elements:()Lorg/sireum/IS;
        60: areturn
        61: goto          67
        64: goto          67
        67: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        70: invokevirtual #238                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        73: getstatic     #243                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        76: invokevirtual #246                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        79: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 61
          locals = [ class org/sireum/Graph$Internal$, class org/sireum/Graph, class org/sireum/Z, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 179: 0
        line 180: 10
        line 179: 43
        line 180: 53
        line 181: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           53       8     7     s   Lorg/sireum/Graph$Internal$Edges;
            0      80     0  this   Lorg/sireum/Graph$Internal$;
            0      80     1     g   Lorg/sireum/Graph;
            0      80     2   dst   Lorg/sireum/Z;
    Signature: #216                         // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Z;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edge<TE;>;>;
    MethodParameters:
      Name                           Flags
      g                              final
      dst                            final

  public <W extends java.lang.Object, E extends java.lang.Object> org.sireum.IS<org.sireum.Z, org.sireum.Graph$Internal$Edge<E>> outgoing(org.sireum.Graph<W, E>, org.sireum.Z);
    descriptor: (Lorg/sireum/Graph;Lorg/sireum/Z;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=3
         0: aload_1
         1: invokevirtual #129                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
         4: aload_2
         5: invokevirtual #87                 // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
         8: astore        4
        10: aload         4
        12: instanceof    #218                // class org/sireum/Some
        15: ifeq          64
        18: aload         4
        20: checkcast     #218                // class org/sireum/Some
        23: astore        5
        25: getstatic     #223                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        28: aload         5
        30: invokevirtual #227                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        33: astore        6
        35: aload         6
        37: invokevirtual #230                // Method scala/Some.isEmpty:()Z
        40: ifne          61
        43: aload         6
        45: invokevirtual #231                // Method scala/Some.get:()Ljava/lang/Object;
        48: checkcast     #38                 // class org/sireum/Graph$Internal$Edges
        51: astore        7
        53: aload         7
        55: invokeinterface #234,  1          // InterfaceMethod org/sireum/Graph$Internal$Edges.elements:()Lorg/sireum/IS;
        60: areturn
        61: goto          67
        64: goto          67
        67: getstatic     #73                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        70: invokevirtual #238                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        73: getstatic     #243                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        76: invokevirtual #246                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        79: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 61
          locals = [ class org/sireum/Graph$Internal$, class org/sireum/Graph, class org/sireum/Z, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 186: 0
        line 187: 10
        line 186: 43
        line 187: 53
        line 188: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           53       8     7     s   Lorg/sireum/Graph$Internal$Edges;
            0      80     0  this   Lorg/sireum/Graph$Internal$;
            0      80     1     g   Lorg/sireum/Graph;
            0      80     2   src   Lorg/sireum/Z;
    Signature: #216                         // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/Graph<TW;TE;>;Lorg/sireum/Z;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Graph$Internal$Edge<TE;>;>;
    MethodParameters:
      Name                           Flags
      g                              final
      src                            final

  public static final org.sireum.Graph$Internal$Edges $anonfun$addEdge$1(org.sireum.Graph);
    descriptor: (Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #255                // Field org/sireum/Graph$Internal$Edges$.MODULE$:Lorg/sireum/Graph$Internal$Edges$;
         3: aload_0
         4: invokevirtual #258                // Method org/sireum/Graph.multi:()Z
         7: invokevirtual #262                // Method org/sireum/Graph$Internal$Edges$.empty:(Z)Lorg/sireum/Graph$Internal$Edges;
        10: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   g$1   Lorg/sireum/Graph;
    MethodParameters:
      Name                           Flags
      g$1                            final

  public static final org.sireum.Graph$Internal$Edges $anonfun$addEdge$2(org.sireum.Graph);
    descriptor: (Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #255                // Field org/sireum/Graph$Internal$Edges$.MODULE$:Lorg/sireum/Graph$Internal$Edges$;
         3: aload_0
         4: invokevirtual #258                // Method org/sireum/Graph.multi:()Z
         7: invokevirtual #262                // Method org/sireum/Graph$Internal$Edges$.empty:(Z)Lorg/sireum/Graph$Internal$Edges;
        10: areturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   g$1   Lorg/sireum/Graph;
    MethodParameters:
      Name                           Flags
      g$1                            final

  public org.sireum.Graph$Internal$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #263                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Internal$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #275,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static #18= #2 of #17;           // Internal$=class org/sireum/Graph$Internal$ of class org/sireum/Graph
  public static #21= #20 of #2;           // Edge=class org/sireum/Graph$Internal$Edge of class org/sireum/Graph$Internal$
  public static #24= #23 of #2;           // Edge$=class org/sireum/Graph$Internal$Edge$ of class org/sireum/Graph$Internal$
  public static final #27= #26 of #23;    // Data=class org/sireum/Graph$Internal$Edge$Data of class org/sireum/Graph$Internal$Edge$
  public static #30= #29 of #23;          // Data$=class org/sireum/Graph$Internal$Edge$Data$ of class org/sireum/Graph$Internal$Edge$
  public static final #33= #32 of #23;    // Plain=class org/sireum/Graph$Internal$Edge$Plain of class org/sireum/Graph$Internal$Edge$
  public static #36= #35 of #23;          // Plain$=class org/sireum/Graph$Internal$Edge$Plain$ of class org/sireum/Graph$Internal$Edge$
  public static #39= #38 of #2;           // Edges=class org/sireum/Graph$Internal$Edges of class org/sireum/Graph$Internal$
  public static #42= #41 of #2;           // Edges$=class org/sireum/Graph$Internal$Edges$ of class org/sireum/Graph$Internal$
  public static #47= #44 of #46;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
SourceFile: "Graph.scala"
BootstrapMethods:
  0: #105 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #89 ()Ljava/lang/Object;
      #94 REF_invokeStatic org/sireum/Graph$Internal$.$anonfun$addEdge$1:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
      #96 ()Lorg/sireum/Graph$Internal$Edges;
      #97 5
      #98 1
      #96 ()Lorg/sireum/Graph$Internal$Edges;
  1: #105 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #89 ()Ljava/lang/Object;
      #136 REF_invokeStatic org/sireum/Graph$Internal$.$anonfun$addEdge$2:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
      #96 ()Lorg/sireum/Graph$Internal$Edges;
      #97 5
      #98 1
      #96 ()Lorg/sireum/Graph$Internal$Edges;
  2: #272 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 REF_invokeStatic org/sireum/Graph$Internal$.$anonfun$addEdge$1:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
      #136 REF_invokeStatic org/sireum/Graph$Internal$.$anonfun$addEdge$2:(Lorg/sireum/Graph;)Lorg/sireum/Graph$Internal$Edges;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 5A 00 5B 01 00 85 00 5B 01 00 34
   00 33 01 00 B5 00 B6 01 00 39 00 3A 01 00 A8 00
   A9 01 00 D6 00 D7 01 00 FB 00 D7 01 00 C0 00 C1
   01
  Scala: length = 0x0 (unknown attribute)

