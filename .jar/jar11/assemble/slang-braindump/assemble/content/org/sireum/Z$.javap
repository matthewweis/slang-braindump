Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Z$.class
  Last modified May 29, 2022; size 6482 bytes
  SHA-256 checksum b25b116cc5d85309f81b3402062e3e868dcbe1f4249f5c51f9d520b274d4f340
  Compiled from "Z.scala"
public final class org.sireum.Z$ extends java.lang.Object implements org.sireum.$ZCompanion<org.sireum.Z>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Z$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 10, methods: 35, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Z$
    #2 = Class              #1            // org/sireum/Z$
    #3 = Utf8               Ljava/lang/Object;Lorg/sireum/$ZCompanion<Lorg/sireum/Z;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/$ZCompanion
    #7 = Class              #6            // org/sireum/$ZCompanion
    #8 = Utf8               Z.scala
    #9 = Utf8               org/sireum/Z$$String$
   #10 = Class              #9            // org/sireum/Z$$String$
   #11 = Utf8               org/sireum/Z
   #12 = Class              #11           // org/sireum/Z
   #13 = Utf8               $String$
   #14 = Utf8               org/sireum/Z$BigInt$
   #15 = Class              #14           // org/sireum/Z$BigInt$
   #16 = Utf8               BigInt$
   #17 = Utf8               org/sireum/Z$Int$
   #18 = Class              #17           // org/sireum/Z$Int$
   #19 = Utf8               Int$
   #20 = Utf8               org/sireum/Z$Long$
   #21 = Class              #20           // org/sireum/Z$Long$
   #22 = Utf8               Long$
   #23 = Utf8               org/sireum/Z$MP$
   #24 = Class              #23           // org/sireum/Z$MP$
   #25 = Utf8               MP$
   #26 = Utf8               org/sireum/Z$U$
   #27 = Class              #26           // org/sireum/Z$U$
   #28 = Utf8               U$
   #29 = Utf8               org/sireum/Z$U$_64$
   #30 = Class              #29           // org/sireum/Z$U$_64$
   #31 = Utf8               _64$
   #32 = Utf8               MODULE$
   #33 = Utf8               Lorg/sireum/Z$;
   #34 = Utf8               longMin
   #35 = Utf8               Lscala/math/BigInt;
   #36 = Utf8               longMax
   #37 = Utf8               Name
   #38 = Utf8               Ljava/lang/String;
   #39 = Utf8               isBitVector
   #40 = Utf8               Z
   #41 = Utf8               isSigned
   #42 = Utf8               isZeroIndex
   #43 = Utf8               Index
   #44 = Utf8               Lorg/sireum/Z;
   #45 = Utf8               hasMin
   #46 = Utf8               hasMax
   #47 = Utf8               <clinit>
   #48 = Utf8               ()V
   #49 = Utf8               <init>
   #50 = NameAndType        #49:#48       // "<init>":()V
   #51 = Methodref          #2.#50        // org/sireum/Z$."<init>":()V
   #52 = NameAndType        #32:#33       // MODULE$:Lorg/sireum/Z$;
   #53 = Fieldref           #2.#52        // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #54 = Utf8               scala/package$
   #55 = Class              #54           // scala/package$
   #56 = Utf8               Lscala/package$;
   #57 = NameAndType        #32:#56       // MODULE$:Lscala/package$;
   #58 = Fieldref           #55.#57       // scala/package$.MODULE$:Lscala/package$;
   #59 = Utf8               BigInt
   #60 = Utf8               ()Lscala/math/BigInt$;
   #61 = NameAndType        #59:#60       // BigInt:()Lscala/math/BigInt$;
   #62 = Methodref          #55.#61       // scala/package$.BigInt:()Lscala/math/BigInt$;
   #63 = Long               -9223372036854775808l
   #65 = Utf8               scala/math/BigInt$
   #66 = Class              #65           // scala/math/BigInt$
   #67 = Utf8               apply
   #68 = Utf8               (J)Lscala/math/BigInt;
   #69 = NameAndType        #67:#68       // apply:(J)Lscala/math/BigInt;
   #70 = Methodref          #66.#69       // scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
   #71 = NameAndType        #34:#35       // longMin:Lscala/math/BigInt;
   #72 = Fieldref           #2.#71        // org/sireum/Z$.longMin:Lscala/math/BigInt;
   #73 = Long               9223372036854775807l
   #75 = NameAndType        #36:#35       // longMax:Lscala/math/BigInt;
   #76 = Fieldref           #2.#75        // org/sireum/Z$.longMax:Lscala/math/BigInt;
   #77 = String             #40           // Z
   #78 = NameAndType        #37:#38       // Name:Ljava/lang/String;
   #79 = Fieldref           #2.#78        // org/sireum/Z$.Name:Ljava/lang/String;
   #80 = NameAndType        #39:#40       // isBitVector:Z
   #81 = Fieldref           #2.#80        // org/sireum/Z$.isBitVector:Z
   #82 = NameAndType        #41:#40       // isSigned:Z
   #83 = Fieldref           #2.#82        // org/sireum/Z$.isSigned:Z
   #84 = NameAndType        #42:#40       // isZeroIndex:Z
   #85 = Fieldref           #2.#84        // org/sireum/Z$.isZeroIndex:Z
   #86 = Utf8               Lorg/sireum/Z$MP$;
   #87 = NameAndType        #32:#86       // MODULE$:Lorg/sireum/Z$MP$;
   #88 = Fieldref           #24.#87       // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
   #89 = Utf8               zero
   #90 = Utf8               ()Lorg/sireum/Z;
   #91 = NameAndType        #89:#90       // zero:()Lorg/sireum/Z;
   #92 = Methodref          #24.#91       // org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
   #93 = NameAndType        #43:#44       // Index:Lorg/sireum/Z;
   #94 = Fieldref           #2.#93        // org/sireum/Z$.Index:Lorg/sireum/Z;
   #95 = NameAndType        #45:#40       // hasMin:Z
   #96 = Fieldref           #2.#95        // org/sireum/Z$.hasMin:Z
   #97 = NameAndType        #46:#40       // hasMax:Z
   #98 = Fieldref           #2.#97        // org/sireum/Z$.hasMax:Z
   #99 = Utf8               Int
  #100 = Utf8               ()Lorg/sireum/Z$Int$;
  #101 = Utf8               Lorg/sireum/Z$Int$;
  #102 = NameAndType        #32:#101      // MODULE$:Lorg/sireum/Z$Int$;
  #103 = Fieldref           #18.#102      // org/sireum/Z$Int$.MODULE$:Lorg/sireum/Z$Int$;
  #104 = Utf8               this
  #105 = Utf8               Long
  #106 = Utf8               ()Lorg/sireum/Z$Long$;
  #107 = Utf8               Lorg/sireum/Z$Long$;
  #108 = NameAndType        #32:#107      // MODULE$:Lorg/sireum/Z$Long$;
  #109 = Fieldref           #21.#108      // org/sireum/Z$Long$.MODULE$:Lorg/sireum/Z$Long$;
  #110 = Utf8               $String
  #111 = Utf8               ()Lorg/sireum/Z$$String$;
  #112 = Utf8               Lorg/sireum/Z$$String$;
  #113 = NameAndType        #32:#112      // MODULE$:Lorg/sireum/Z$$String$;
  #114 = Fieldref           #10.#113      // org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
  #115 = Utf8               ()Lorg/sireum/Z$BigInt$;
  #116 = Utf8               Lorg/sireum/Z$BigInt$;
  #117 = NameAndType        #32:#116      // MODULE$:Lorg/sireum/Z$BigInt$;
  #118 = Fieldref           #15.#117      // org/sireum/Z$BigInt$.MODULE$:Lorg/sireum/Z$BigInt$;
  #119 = Utf8               ()Lscala/math/BigInt;
  #120 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #121 = Utf8               n
  #122 = Utf8               org/sireum/package$
  #123 = Class              #122          // org/sireum/package$
  #124 = Utf8               Lorg/sireum/package$;
  #125 = NameAndType        #32:#124      // MODULE$:Lorg/sireum/package$;
  #126 = Fieldref           #123.#125     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #127 = Utf8               java/lang/StringBuilder
  #128 = Class              #127          // java/lang/StringBuilder
  #129 = Integer            29
  #130 = Utf8               (I)V
  #131 = NameAndType        #49:#130      // "<init>":(I)V
  #132 = Methodref          #128.#131     // java/lang/StringBuilder."<init>":(I)V
  #133 = Utf8               Unsupported Z creation from
  #134 = String             #133          // Unsupported Z creation from
  #135 = Utf8               append
  #136 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #137 = NameAndType        #135:#136     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #138 = Methodref          #128.#137     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #139 = Utf8               ()Ljava/lang/String;
  #140 = NameAndType        #37:#139      // Name:()Ljava/lang/String;
  #141 = InterfaceMethodref #12.#140      // org/sireum/Z.Name:()Ljava/lang/String;
  #142 = Utf8               .
  #143 = String             #142          // .
  #144 = Utf8               toString
  #145 = NameAndType        #144:#139     // toString:()Ljava/lang/String;
  #146 = Methodref          #128.#145     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #147 = Utf8               halt
  #148 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #149 = NameAndType        #147:#148     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #150 = Methodref          #123.#149     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #151 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
  #152 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/Z;>;
  #153 = Utf8               s
  #154 = Utf8               java/lang/Throwable
  #155 = Class              #154          // java/lang/Throwable
  #156 = Utf8               org/sireum/Some$
  #157 = Class              #156          // org/sireum/Some$
  #158 = Utf8               Lorg/sireum/Some$;
  #159 = NameAndType        #32:#158      // MODULE$:Lorg/sireum/Some$;
  #160 = Fieldref           #157.#159     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #161 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #162 = NameAndType        #67:#161      // apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #163 = Methodref          #10.#162      // org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #164 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #165 = NameAndType        #67:#164      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #166 = Methodref          #157.#165     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #167 = Utf8               org/sireum/None$
  #168 = Class              #167          // org/sireum/None$
  #169 = Utf8               Lorg/sireum/None$;
  #170 = NameAndType        #32:#169      // MODULE$:Lorg/sireum/None$;
  #171 = Fieldref           #168.#170     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #172 = Utf8               ()Lorg/sireum/None;
  #173 = NameAndType        #67:#172      // apply:()Lorg/sireum/None;
  #174 = Methodref          #168.#173     // org/sireum/None$.apply:()Lorg/sireum/None;
  #175 = Utf8               ()Z
  #176 = Utf8               Min
  #177 = Integer            28
  #178 = Utf8               Unsupported
  #179 = String             #178          // Unsupported
  #180 = Methodref          #2.#140       // org/sireum/Z$.Name:()Ljava/lang/String;
  #181 = Utf8                operation \'Min\'
  #182 = String             #181          //  operation \'Min\'
  #183 = Utf8               Max
  #184 = Utf8                operation \'Max\'
  #185 = String             #184          //  operation \'Max\'
  #186 = Utf8               BitWidth
  #187 = Utf8               ()I
  #188 = Integer            33
  #189 = Utf8                operation \'BitWidth\'
  #190 = String             #189          //  operation \'BitWidth\'
  #191 = Utf8               random
  #192 = Utf8               scala/util/Random
  #193 = Class              #192          // scala/util/Random
  #194 = Methodref          #193.#50      // scala/util/Random."<init>":()V
  #195 = Utf8               nextInt
  #196 = Utf8               (I)I
  #197 = NameAndType        #195:#196     // nextInt:(I)I
  #198 = Methodref          #193.#197     // scala/util/Random.nextInt:(I)I
  #199 = Utf8               (ILscala/util/Random;)Lscala/math/BigInt;
  #200 = NameAndType        #67:#199      // apply:(ILscala/util/Random;)Lscala/math/BigInt;
  #201 = Methodref          #66.#200      // scala/math/BigInt$.apply:(ILscala/util/Random;)Lscala/math/BigInt;
  #202 = Utf8               (Lscala/math/BigInt;)Lorg/sireum/Z;
  #203 = NameAndType        #67:#202      // apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
  #204 = Methodref          #24.#203      // org/sireum/Z$MP$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
  #205 = Utf8               r
  #206 = Utf8               Lscala/util/Random;
  #207 = Utf8               randomSeed
  #208 = Utf8               seed
  #209 = Utf8               toMP
  #210 = NameAndType        #209:#90      // toMP:()Lorg/sireum/Z;
  #211 = InterfaceMethodref #12.#210      // org/sireum/Z.toMP:()Lorg/sireum/Z;
  #212 = Utf8               Lorg/sireum/Z$U$_64$;
  #213 = NameAndType        #32:#212      // MODULE$:Lorg/sireum/Z$U$_64$;
  #214 = Fieldref           #30.#213      // org/sireum/Z$U$_64$.MODULE$:Lorg/sireum/Z$U$_64$;
  #215 = Long               -1l
  #217 = Utf8               (J)J
  #218 = NameAndType        #67:#217      // apply:(J)J
  #219 = Methodref          #30.#218      // org/sireum/Z$U$_64$.apply:(J)J
  #220 = Utf8               toBigInt$extension
  #221 = NameAndType        #220:#68      // toBigInt$extension:(J)Lscala/math/BigInt;
  #222 = Methodref          #30.#221      // org/sireum/Z$U$_64$.toBigInt$extension:(J)Lscala/math/BigInt;
  #223 = Utf8               Lscala/math/BigInt$;
  #224 = NameAndType        #32:#223      // MODULE$:Lscala/math/BigInt$;
  #225 = Fieldref           #66.#224      // scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
  #226 = Utf8               int2bigInt
  #227 = Utf8               (I)Lscala/math/BigInt;
  #228 = NameAndType        #226:#227     // int2bigInt:(I)Lscala/math/BigInt;
  #229 = Methodref          #66.#228      // scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
  #230 = Utf8               scala/math/BigInt
  #231 = Class              #230          // scala/math/BigInt
  #232 = Utf8               $plus
  #233 = Utf8               (Lscala/math/BigInt;)Lscala/math/BigInt;
  #234 = NameAndType        #232:#233     // $plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #235 = Methodref          #231.#234     // scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #236 = Utf8               $percent
  #237 = NameAndType        #236:#120     // $percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #238 = InterfaceMethodref #12.#237      // org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #239 = Utf8               toLongOpt
  #240 = Utf8               ()Lscala/Option;
  #241 = NameAndType        #239:#240     // toLongOpt:()Lscala/Option;
  #242 = InterfaceMethodref #12.#241      // org/sireum/Z.toLongOpt:()Lscala/Option;
  #243 = Utf8               scala/Option
  #244 = Class              #243          // scala/Option
  #245 = Utf8               get
  #246 = Utf8               ()Ljava/lang/Object;
  #247 = NameAndType        #245:#246     // get:()Ljava/lang/Object;
  #248 = Methodref          #244.#247     // scala/Option.get:()Ljava/lang/Object;
  #249 = Utf8               scala/runtime/BoxesRunTime
  #250 = Class              #249          // scala/runtime/BoxesRunTime
  #251 = Utf8               unboxToLong
  #252 = Utf8               (Ljava/lang/Object;)J
  #253 = NameAndType        #251:#252     // unboxToLong:(Ljava/lang/Object;)J
  #254 = Methodref          #250.#253     // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #255 = Utf8               (J)V
  #256 = NameAndType        #49:#255      // "<init>":(J)V
  #257 = Methodref          #193.#256     // scala/util/Random."<init>":(J)V
  #258 = Utf8               (I)Lorg/sireum/Z;
  #259 = NameAndType        #67:#258      // apply:(I)Lorg/sireum/Z;
  #260 = Methodref          #18.#259      // org/sireum/Z$Int$.apply:(I)Lorg/sireum/Z;
  #261 = Utf8               I
  #262 = Utf8               (J)Lorg/sireum/Z;
  #263 = NameAndType        #67:#262      // apply:(J)Lorg/sireum/Z;
  #264 = Methodref          #21.#263      // org/sireum/Z$Long$.apply:(J)Lorg/sireum/Z;
  #265 = Utf8               J
  #266 = Methodref          #15.#203      // org/sireum/Z$BigInt$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
  #267 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #268 = NameAndType        #207:#120     // randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #269 = Methodref          #2.#268       // org/sireum/Z$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #270 = NameAndType        #191:#90      // random:()Lorg/sireum/Z;
  #271 = Methodref          #2.#270       // org/sireum/Z$.random:()Lorg/sireum/Z;
  #272 = NameAndType        #183:#90      // Max:()Lorg/sireum/Z;
  #273 = Methodref          #2.#272       // org/sireum/Z$.Max:()Lorg/sireum/Z;
  #274 = NameAndType        #176:#90      // Min:()Lorg/sireum/Z;
  #275 = Methodref          #2.#274       // org/sireum/Z$.Min:()Lorg/sireum/Z;
  #276 = NameAndType        #43:#90       // Index:()Lorg/sireum/Z;
  #277 = Methodref          #2.#276       // org/sireum/Z$.Index:()Lorg/sireum/Z;
  #278 = NameAndType        #67:#120      // apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #279 = Methodref          #2.#278       // org/sireum/Z$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #280 = Utf8               ()Lorg/sireum/$ZCompanionBigInt;
  #281 = NameAndType        #59:#115      // BigInt:()Lorg/sireum/Z$BigInt$;
  #282 = Methodref          #2.#281       // org/sireum/Z$.BigInt:()Lorg/sireum/Z$BigInt$;
  #283 = Utf8               ()Lorg/sireum/$ZCompanionString;
  #284 = NameAndType        #110:#111     // $String:()Lorg/sireum/Z$$String$;
  #285 = Methodref          #2.#284       // org/sireum/Z$.$String:()Lorg/sireum/Z$$String$;
  #286 = Utf8               ()Lorg/sireum/$ZCompanionLong;
  #287 = NameAndType        #105:#106     // Long:()Lorg/sireum/Z$Long$;
  #288 = Methodref          #2.#287       // org/sireum/Z$.Long:()Lorg/sireum/Z$Long$;
  #289 = Utf8               ()Lorg/sireum/$ZCompanionInt;
  #290 = NameAndType        #99:#100      // Int:()Lorg/sireum/Z$Int$;
  #291 = Methodref          #2.#290       // org/sireum/Z$.Int:()Lorg/sireum/Z$Int$;
  #292 = Methodref          #5.#50        // java/lang/Object."<init>":()V
  #293 = Utf8               Code
  #294 = Utf8               LineNumberTable
  #295 = Utf8               LocalVariableTable
  #296 = Utf8               StackMapTable
  #297 = Utf8               MethodParameters
  #298 = Utf8               Signature
  #299 = Utf8               InnerClasses
  #300 = Utf8               SourceFile
  #301 = Utf8               ScalaInlineInfo
  #302 = Utf8               Scala
{
  public static final org.sireum.Z$ MODULE$;
    descriptor: Lorg/sireum/Z$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.math.BigInt longMin;
    descriptor: Lscala/math/BigInt;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final scala.math.BigInt longMax;
    descriptor: Lscala/math/BigInt;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.lang.String Name;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isBitVector;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isSigned;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isZeroIndex;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.Z Index;
    descriptor: Lorg/sireum/Z;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean hasMin;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean hasMax;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class org/sireum/Z$
         3: dup
         4: invokespecial #51                 // Method "<init>":()V
         7: putstatic     #53                 // Field MODULE$:Lorg/sireum/Z$;
        10: getstatic     #58                 // Field scala/package$.MODULE$:Lscala/package$;
        13: invokevirtual #62                 // Method scala/package$.BigInt:()Lscala/math/BigInt$;
        16: ldc2_w        #63                 // long -9223372036854775808l
        19: invokevirtual #70                 // Method scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
        22: putstatic     #72                 // Field longMin:Lscala/math/BigInt;
        25: getstatic     #58                 // Field scala/package$.MODULE$:Lscala/package$;
        28: invokevirtual #62                 // Method scala/package$.BigInt:()Lscala/math/BigInt$;
        31: ldc2_w        #73                 // long 9223372036854775807l
        34: invokevirtual #70                 // Method scala/math/BigInt$.apply:(J)Lscala/math/BigInt;
        37: putstatic     #76                 // Field longMax:Lscala/math/BigInt;
        40: ldc           #77                 // String Z
        42: putstatic     #79                 // Field Name:Ljava/lang/String;
        45: iconst_0
        46: putstatic     #81                 // Field isBitVector:Z
        49: iconst_1
        50: putstatic     #83                 // Field isSigned:Z
        53: iconst_1
        54: putstatic     #85                 // Field isZeroIndex:Z
        57: getstatic     #88                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        60: invokevirtual #92                 // Method org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
        63: putstatic     #94                 // Field Index:Lorg/sireum/Z;
        66: iconst_0
        67: putstatic     #96                 // Field hasMin:Z
        70: iconst_0
        71: putstatic     #98                 // Field hasMax:Z
        74: return
      LineNumberTable:
        line 28: 0
        line 32: 10
        line 33: 25
        line 1183: 40
        line 1185: 45
        line 1187: 49
        line 1189: 53
        line 1191: 57
        line 1193: 66
        line 1195: 70
        line 28: 74

  public org.sireum.Z$Int$ Int();
    descriptor: ()Lorg/sireum/Z$Int$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #103                // Field org/sireum/Z$Int$.MODULE$:Lorg/sireum/Z$Int$;
         3: areturn
      LineNumberTable:
        line 1147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public org.sireum.Z$Long$ Long();
    descriptor: ()Lorg/sireum/Z$Long$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #109                // Field org/sireum/Z$Long$.MODULE$:Lorg/sireum/Z$Long$;
         3: areturn
      LineNumberTable:
        line 1156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public org.sireum.Z$$String$ $String();
    descriptor: ()Lorg/sireum/Z$$String$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #114                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
         3: areturn
      LineNumberTable:
        line 1165: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public org.sireum.Z$BigInt$ BigInt();
    descriptor: ()Lorg/sireum/Z$BigInt$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #118                // Field org/sireum/Z$BigInt$.MODULE$:Lorg/sireum/Z$BigInt$;
         3: areturn
      LineNumberTable:
        line 1174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public scala.math.BigInt longMin();
    descriptor: ()Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #72                 // Field longMin:Lscala/math/BigInt;
         3: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public scala.math.BigInt longMax();
    descriptor: ()Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field longMax:Lscala/math/BigInt;
         3: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public org.sireum.Z apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        15
         6: aload_3
         7: astore        4
         9: aload         4
        11: astore_2
        12: goto          56
        15: goto          18
        18: getstatic     #126                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        21: new           #128                // class java/lang/StringBuilder
        24: dup
        25: ldc           #129                // int 29
        27: invokespecial #132                // Method java/lang/StringBuilder."<init>":(I)V
        30: ldc           #134                // String Unsupported Z creation from
        32: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: aload_1
        36: invokeinterface #141,  1          // InterfaceMethod org/sireum/Z.Name:()Ljava/lang/String;
        41: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        44: ldc           #143                // String .
        46: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        52: invokevirtual #150                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        55: athrow
        56: aload_2
        57: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 15
          locals = [ top, class org/sireum/Z ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class org/sireum/Z$, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = []
      LineNumberTable:
        line 1136: 0
        line 1137: 2
        line 1138: 18
        line 1136: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lorg/sireum/Z$;
            0      58     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Option<org.sireum.Z> apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #160                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         3: getstatic     #114                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
         6: aload_1
         7: invokevirtual #163                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        10: invokevirtual #166                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        13: goto          26
        16: pop
        17: getstatic     #171                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        20: invokevirtual #174                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        23: goto          26
        26: areturn
      Exception table:
         from    to  target type
             0    13    16   Class java/lang/Throwable
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 1142: 0
        line 1144: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/Z$;
            0      27     1     s   Ljava/lang/String;
    Signature: #152                         // (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/Z;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String Name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #79                 // Field Name:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 1183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public boolean isBitVector();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #81                 // Field isBitVector:Z
         3: ireturn
      LineNumberTable:
        line 1185: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public boolean isSigned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #83                 // Field isSigned:Z
         3: ireturn
      LineNumberTable:
        line 1187: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public boolean isZeroIndex();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #85                 // Field isZeroIndex:Z
         3: ireturn
      LineNumberTable:
        line 1189: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public org.sireum.Z Index();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #94                 // Field Index:Lorg/sireum/Z;
         3: areturn
      LineNumberTable:
        line 1191: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public boolean hasMin();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #96                 // Field hasMin:Z
         3: ireturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public boolean hasMax();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #98                 // Field hasMax:Z
         3: ireturn
      LineNumberTable:
        line 1195: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/Z$;

  public org.sireum.Z Min();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #126                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: new           #128                // class java/lang/StringBuilder
         6: dup
         7: ldc           #177                // int 28
         9: invokespecial #132                // Method java/lang/StringBuilder."<init>":(I)V
        12: ldc           #179                // String Unsupported
        14: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: aload_0
        18: invokevirtual #180                // Method Name:()Ljava/lang/String;
        21: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc           #182                // String  operation \'Min\'
        26: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: invokevirtual #150                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        35: athrow
      LineNumberTable:
        line 1197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/sireum/Z$;

  public org.sireum.Z Max();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #126                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: new           #128                // class java/lang/StringBuilder
         6: dup
         7: ldc           #177                // int 28
         9: invokespecial #132                // Method java/lang/StringBuilder."<init>":(I)V
        12: ldc           #179                // String Unsupported
        14: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: aload_0
        18: invokevirtual #180                // Method Name:()Ljava/lang/String;
        21: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc           #185                // String  operation \'Max\'
        26: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: invokevirtual #150                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        35: athrow
      LineNumberTable:
        line 1199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/sireum/Z$;

  public int BitWidth();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #126                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: new           #128                // class java/lang/StringBuilder
         6: dup
         7: ldc           #188                // int 33
         9: invokespecial #132                // Method java/lang/StringBuilder."<init>":(I)V
        12: ldc           #179                // String Unsupported
        14: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: aload_0
        18: invokevirtual #180                // Method Name:()Ljava/lang/String;
        21: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc           #190                // String  operation \'BitWidth\'
        26: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: invokevirtual #150                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        35: athrow
      LineNumberTable:
        line 1201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/sireum/Z$;

  public org.sireum.Z random();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: new           #193                // class scala/util/Random
         3: dup
         4: invokespecial #194                // Method scala/util/Random."<init>":()V
         7: astore_1
         8: getstatic     #88                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        11: getstatic     #58                 // Field scala/package$.MODULE$:Lscala/package$;
        14: invokevirtual #62                 // Method scala/package$.BigInt:()Lscala/math/BigInt$;
        17: aload_1
        18: aload_1
        19: sipush        1024
        22: invokevirtual #198                // Method scala/util/Random.nextInt:(I)I
        25: iconst_1
        26: iadd
        27: invokevirtual #198                // Method scala/util/Random.nextInt:(I)I
        30: aload_1
        31: invokevirtual #201                // Method scala/math/BigInt$.apply:(ILscala/util/Random;)Lscala/math/BigInt;
        34: invokevirtual #204                // Method org/sireum/Z$MP$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        37: areturn
      LineNumberTable:
        line 1204: 0
        line 1205: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      29     1     r   Lscala/util/Random;
            0      38     0  this   Lorg/sireum/Z$;

  public org.sireum.Z randomSeed(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=3, args_size=2
         0: new           #193                // class scala/util/Random
         3: dup
         4: aload_1
         5: invokeinterface #211,  1          // InterfaceMethod org/sireum/Z.toMP:()Lorg/sireum/Z;
        10: getstatic     #88                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        13: getstatic     #214                // Field org/sireum/Z$U$_64$.MODULE$:Lorg/sireum/Z$U$_64$;
        16: getstatic     #214                // Field org/sireum/Z$U$_64$.MODULE$:Lorg/sireum/Z$U$_64$;
        19: ldc2_w        #215                // long -1l
        22: invokevirtual #219                // Method org/sireum/Z$U$_64$.apply:(J)J
        25: invokevirtual #222                // Method org/sireum/Z$U$_64$.toBigInt$extension:(J)Lscala/math/BigInt;
        28: getstatic     #225                // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
        31: iconst_1
        32: invokevirtual #229                // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
        35: invokevirtual #235                // Method scala/math/BigInt.$plus:(Lscala/math/BigInt;)Lscala/math/BigInt;
        38: invokevirtual #204                // Method org/sireum/Z$MP$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        41: invokeinterface #238,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        46: invokeinterface #242,  1          // InterfaceMethod org/sireum/Z.toLongOpt:()Lscala/Option;
        51: invokevirtual #248                // Method scala/Option.get:()Ljava/lang/Object;
        54: invokestatic  #254                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        57: invokespecial #257                // Method scala/util/Random."<init>":(J)V
        60: astore_2
        61: getstatic     #88                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        64: getstatic     #58                 // Field scala/package$.MODULE$:Lscala/package$;
        67: invokevirtual #62                 // Method scala/package$.BigInt:()Lscala/math/BigInt$;
        70: aload_2
        71: aload_2
        72: sipush        1024
        75: invokevirtual #198                // Method scala/util/Random.nextInt:(I)I
        78: iconst_1
        79: iadd
        80: invokevirtual #198                // Method scala/util/Random.nextInt:(I)I
        83: aload_2
        84: invokevirtual #201                // Method scala/math/BigInt$.apply:(ILscala/util/Random;)Lscala/math/BigInt;
        87: invokevirtual #204                // Method org/sireum/Z$MP$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        90: areturn
      LineNumberTable:
        line 1209: 0
        line 1210: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           61      29     2     r   Lscala/util/Random;
            0      91     0  this   Lorg/sireum/Z$;
            0      91     1  seed   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      seed                           final

  public org.sireum.Z apply(int);
    descriptor: (I)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #103                // Field org/sireum/Z$Int$.MODULE$:Lorg/sireum/Z$Int$;
         3: iload_1
         4: invokevirtual #260                // Method org/sireum/Z$Int$.apply:(I)Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 1215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Z$;
            0       8     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z apply(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #109                // Field org/sireum/Z$Long$.MODULE$:Lorg/sireum/Z$Long$;
         3: lload_1
         4: invokevirtual #264                // Method org/sireum/Z$Long$.apply:(J)Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 1217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Z$;
            0       8     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z apply(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #118                // Field org/sireum/Z$BigInt$.MODULE$:Lorg/sireum/Z$BigInt$;
         3: aload_1
         4: invokevirtual #266                // Method org/sireum/Z$BigInt$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 1219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Z$;
            0       8     1     n   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object randomSeed(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #269                // Method randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
         5: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Z$;
            0       6     1  seed   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      seed                           final

  public java.lang.Object random();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #271                // Method random:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  public java.lang.Object Max();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #273                // Method Max:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  public java.lang.Object Min();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #275                // Method Min:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  public java.lang.Object Index();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #277                // Method Index:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  public java.lang.Object apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #279                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
         5: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Z$;
            0       6     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.$ZCompanionBigInt BigInt();
    descriptor: ()Lorg/sireum/$ZCompanionBigInt;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #282                // Method BigInt:()Lorg/sireum/Z$BigInt$;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  public org.sireum.$ZCompanionString $String();
    descriptor: ()Lorg/sireum/$ZCompanionString;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #285                // Method $String:()Lorg/sireum/Z$$String$;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  public org.sireum.$ZCompanionLong Long();
    descriptor: ()Lorg/sireum/$ZCompanionLong;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #288                // Method Long:()Lorg/sireum/Z$Long$;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  public org.sireum.$ZCompanionInt Int();
    descriptor: ()Lorg/sireum/$ZCompanionInt;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #291                // Method Int:()Lorg/sireum/Z$Int$;
         4: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;

  private org.sireum.Z$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #292                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Z$;
}
InnerClasses:
  public static #13= #10 of #12;          // $String$=class org/sireum/Z$$String$ of class org/sireum/Z
  public static #16= #15 of #12;          // BigInt$=class org/sireum/Z$BigInt$ of class org/sireum/Z
  public static #19= #18 of #12;          // Int$=class org/sireum/Z$Int$ of class org/sireum/Z
  public static #22= #21 of #12;          // Long$=class org/sireum/Z$Long$ of class org/sireum/Z
  public static #25= #24 of #12;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
  public static #28= #27 of #12;          // U$=class org/sireum/Z$U$ of class org/sireum/Z
  public static #31= #30 of #27;          // _64$=class org/sireum/Z$U$_64$ of class org/sireum/Z$U$
Signature: #3                           // Ljava/lang/Object;Lorg/sireum/$ZCompanion<Lorg/sireum/Z;>;
SourceFile: "Z.scala"
  ScalaInlineInfo: length = 0xAE (unknown attribute)
   01 01 00 22 00 6E 01 1B 01 00 6E 00 6F 01 00 31
   00 30 01 00 3B 01 18 01 00 3B 00 73 01 00 BA 00
   BB 01 00 2B 00 F6 01 00 2B 00 5A 01 00 63 01 21
   01 00 63 00 64 01 00 69 01 1E 01 00 69 00 6A 01
   00 B7 00 F6 01 00 B7 00 5A 01 00 B0 00 F6 01 00
   B0 00 5A 01 00 25 00 8B 01 00 43 01 02 05 00 43
   01 06 05 00 43 00 97 01 00 43 01 0B 01 00 43 00
   78 01 00 43 00 CA 05 00 2E 00 AF 01 00 2D 00 AF
   01 00 27 00 AF 01 00 29 00 AF 01 00 2A 00 AF 01
   00 24 00 77 01 00 22 00 77 01 00 BF 00 F6 01 00
   BF 00 5A 01 00 CF 01 0B 01 00 CF 00 78 01
  Scala: length = 0x0 (unknown attribute)

