Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/params/rule/SameVersion.class
  Last modified May 29, 2022; size 14698 bytes
  SHA-256 checksum ee092e945a4aa593d1ea3983a61da00efe5ce5644d6ac2a2461177ee8ca72f05
  Compiled from "SameVersion.scala"
public final class coursier.params.rule.SameVersion extends coursier.params.rule.Rule
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/params/rule/SameVersion
  super_class: #4                         // coursier/params/rule/Rule
  interfaces: 0, fields: 1, methods: 33, attributes: 6
Constant pool:
    #1 = Utf8               coursier/params/rule/SameVersion
    #2 = Class              #1            // coursier/params/rule/SameVersion
    #3 = Utf8               coursier/params/rule/Rule
    #4 = Class              #3            // coursier/params/rule/Rule
    #5 = Utf8               SameVersion.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u0005Eh\u0001B\u0014)\u0005=B\u0001B\u0012\u0001\u0003\u0006\u0004%\ta\u0012\u0005\t-\u0002\u0011\t\u0011)A\u0005\u0011\")q\u000b\u0001C\u00011\u0016!1\f\u0001\u0001]\u0011\u001d\t\u0019\t\u0001C\u0001\u0003\u000bCq!!%\u0001\t\u0003\t\u0019\nC\u0004\u0002 \u0002!\t!!)\t\u000f\u0005\u0015\u0006\u0001\"\u0011\u0002(\"9\u0011Q\u0016\u0001\u0005B\u0005=\u0006bBAa\u0001\u0011\u0005\u00131\u0019\u0005\b\u0003\u000f\u0004A\u0011IAe\u0011\u001d\t\t\u000e\u0001C\u0005\u0003\'Dq!a7\u0001\t\u0003\ni\u000eC\u0004\u0002`\u0002!\t%!9\t\u000f\u0005\r\b\u0001\"\u0011\u0002f\"9\u00111\u001e\u0001\u0005B\u00055x!\u00020)\u0011\u0003yf!B\u0014)\u0011\u0003\u0001\u0007\"B,\u0013\t\u0003Y\u0007\"\u00027\u0013\t\u0003ig\u0001B>\u0013\u0005qD\u0011\"K\u000b\u0003\u0006\u0004%\t%a\u0003\t\u0017\u00055QC!A!\u0002\u0013I\u0016q\u0002\u0005\u000b\u0003#)\"Q1A\u0005\u0002\u0005M\u0001BCA\f+\t\u0005\t\u0015!\u0003\u0002\u0016!Q\u0011\u0011D\u000b\u0003\u0006\u0004%\t!a\u0007\t\u0015\u0005\u0015RC!A!\u0002\u0013\ti\u0002\u0003\u0004X+\u0011\u0005\u0011q\u0005\u0004\u0007\u0003g\u0011\"!!\u000e\t\u0019\u00055SD!A!\u0002\u0013\ty%!\u0016\t\u0013%j\"Q1A\u0005B\u0005-\u0001bCA\u0007;\t\u0005\t\u0015!\u0003Z\u00037B!\"!\u0005\u001e\u0005\u0003\u0005\u000b\u0011BA\u000b\u0011)\ti&\bB\u0001B\u0003%\u0011q\u0004\u0005\r\u0003\u0003i\"\u0011!Q\u0001\n\u0005%\u0012q\f\u0005\u0007/v!\t!!\u0019\t\r1\u0014B\u0011AA8\u0011%\t\u0019HEA\u0001\n\u0013\t)HA\u0006TC6,g+\u001a:tS>t\'BA\u0015+\u0003\u0011\u0011X\u000f\\3\u000b\u0005-b\u0013A\u00029be\u0006l7OC\u0001.\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\u0005\u0001A\"$\b\u0005\u00022e5\t\u0001&\u0003\u00024Q\t!!+\u001e7f!\t)\u0004(D\u00017\u0015\u00059\u0014!B:dC2\f\u0017BA\u001d7\u0005\u001d\u0001&o\u001c3vGR\u0004\"aO\"\u000f\u0005q\neBA\u001fA\u001b\u0005q$BA /\u0003\u0019a$o\\8u}%\tq\'\u0003\u0002Cm\u00059\u0001/Y2lC\u001e,\u0017B\u0001#F\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\t\u0011e\'\u0001\u0005nCR\u001c\u0007.\u001a:t+\u0005A\u0005cA%N!:\u0011!j\u0013\t\u0003{YJ!\u0001\u0014\u001c\u0002\rA\u0013X\rZ3g\u0013\tquJA\u0002TKRT!\u0001\u0014\u001c\u0011\u0005E#V\"\u0001*\u000b\u0005Mc\u0013\u0001B;uS2L!!\u0016*\u0003\u001b5{G-\u001e7f\u001b\u0006$8\r[3s\u0003%i\u0017\r^2iKJ\u001c\b%\u0001\u0004=S:LGO\u0010\u000b\u00033j\u0003\"!\r\u0001\t\u000b\u0019\u001b\u0001\u0019\u0001%\u0003\u0003\r\u0003\"!X\u000b\u000f\u0005E\n\u0012aC*b[\u00164VM]:j_:\u0004\"!\r\n\u0014\u0007I\tG\r\u0005\u00026E&\u00111M\u000e\u0002\u0007\u0003:L(+\u001a4\u0011\u0005\u0015TW\"\u00014\u000b\u0005\u001dD\u0017AA5p\u0015\u0005I\u0017\u0001\u00026bm\u0006L!\u0001\u00124\u0015\u0003}\u000bQ!\u00199qYf$2!\u00178w\u0011\u0015yG\u00031\u0001q\u0003\u0019iw\u000eZ;mKB\u0011\u0011\u000f^\u0007\u0002e*\u00111\u000fL\u0001\u0005G>\u0014X-\u0003\u0002ve\n1Qj\u001c3vY\u0016DQa\u001e\u000bA\u0002a\fQa\u001c;iKJ\u00042!N=q\u0013\tQhG\u0001\u0006=e\u0016\u0004X-\u0019;fIz\u00121cU1nKZ+\'o]5p]\u000e{gN\u001a7jGR\u001c\"!F?\u0011\u0007y\f9!D\u0001\u0000\u0015\u0011\t\t!a\u0001\u0002\u0011\r|gN\u001a7jGRT1!!\u0002-\u0003\u0015)\'O]8s\u0013\r\tIa \u0002\u0010+:\u001c\u0018\r^5tM&,GMU;mKV\t\u0011,A\u0003sk2,\u0007%C\u0002*\u0003\u000f\tq!\\8ek2,7/\u0006\u0002\u0002\u0016A\u0019\u0011*\u00149\u0002\u00115|G-\u001e7fg\u0002\nQBZ8v]\u00124VM]:j_:\u001cXCAA\u000f!\u0011IU*a\b\u0011\u0007%\u000b\t#C\u0002\u0002$=\u0013aa\u0015;sS:<\u0017A\u00044pk:$g+\u001a:tS>t7\u000f\t\u000b\t\u0003S\ti#a\f\u00022A\u0019\u00111F\u000b\u000e\u0003IAQ!\u000b\u000fA\u0002eCq!!\u0005\u001d\u0001\u0004\t)\u0002C\u0004\u0002\u001aq\u0001\r!!\b\u0003)\r\u000bg\u000e\u001e$pe\u000e,7+Y7f-\u0016\u00148/[8o\'\ri\u0012q\u0007\t\u0005\u0003s\t9E\u0004\u0003\u0002<\u0005\rc\u0002BA\u001f\u0003\u0003r1!PA \u0013\u0005i\u0013bAA\u0003Y%!\u0011QIA\u0002\u0003=\u0011Vm]8mkRLwN\\#se>\u0014\u0018\u0002BA%\u0003\u0017\u0012\u0011#\u00168tCRL7OZ5bE2,\'+\u001e7f\u0015\u0011\t)%a\u0001\u0002\u0015I,7o\u001c7vi&|g\u000eE\u0002r\u0003#J1!a\u0015s\u0005)\u0011Vm]8mkRLwN\\\u0005\u0005\u0003\u001b\n9&\u0003\u0003\u0002Z\u0005\r!a\u0004*fg>dW\u000f^5p]\u0016\u0013(o\u001c:\n\u0007%\n9%A\u0004wKJ\u001c\u0018n\u001c8\n\t\u0005\u0005\u0011q\t\u000b\r\u0003G\n)\'a\u001a\u0002j\u0005-\u0014Q\u000e\t\u0004\u0003Wi\u0002bBA\'I\u0001\u0007\u0011q\n\u0005\u0006S\u0011\u0002\r!\u0017\u0005\b\u0003#!\u0003\u0019AA\u000b\u0011\u001d\ti\u0006\na\u0001\u0003?Aq!!\u0001%\u0001\u0004\tI\u0003F\u0002Z\u0003cBQAR\u0013A\u0002!\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!a\u001e\u0011\t\u0005e\u0014qP\u0007\u0003\u0003wR1!! i\u0003\u0011a\u0017M\\4\n\t\u0005\u0005\u00151\u0010\u0002\u0007\u001f\nTWm\u0019;\u0002\u000b\rDWmY6\u0015\t\u0005\u001d\u0015Q\u0012\t\u0005k\u0005%E,C\u0002\u0002\fZ\u0012aa\u00149uS>t\u0007bBAH\u000b\u0001\u0007\u0011qJ\u0001\u0004e\u0016\u001c\u0018A\u0003;ssJ+7o\u001c7wKR1\u0011QSAN\u0003;\u0003raOAL\u0003o\ty%C\u0002\u0002\u001a\u0016\u0013a!R5uQ\u0016\u0014\bbBAH\r\u0001\u0007\u0011q\n\u0005\u0007\u0003\u00031\u0001\u0019\u0001/\u0002\u0019]LG\u000f[\'bi\u000eDWM]:\u0015\u0007e\u000b\u0019\u000bC\u0003G\u000f\u0001\u0007\u0001*\u0001\u0005u_N#(/\u001b8h)\t\tI\u000b\u0005\u0003\u0002z\u0005-\u0016\u0002BA\u0012\u0003w\n\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0005\u0003c\u000b9\fE\u00026\u0003gK1!!.7\u0005\u001d\u0011un\u001c7fC:Dq!!/\n\u0001\u0004\tY,A\u0002pE*\u00042!NA_\u0013\r\tyL\u000e\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000f\u0006\u0003\u00022\u0006\u0015\u0007bBA]\u0015\u0001\u0007\u00111X\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u00111\u001a\t\u0004k\u00055\u0017bAAhm\t\u0019\u0011J\u001c;\u0002\u000bQ,\b\u000f\\3\u0016\u0005\u0005U\u0007\u0003B\u001b\u0002X\"K1!!77\u0005\u0019!V\u000f\u001d7fc\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"!!+\u0002\u0019A\u0014x\u000eZ;di\u0006\u0013\u0018\u000e^=\u0016\u0005\u0005-\u0017A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0005\u0003w\u000b9\u000fC\u0004\u0002j>\u0001\r!a3\u0002\u00039\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR!\u0011\u0011VAx\u0011\u001d\tI\u000f\u0005a\u0001\u0003\u0017\u0004
    #9 = Utf8               coursier/error/ResolutionError$UnsatisfiableRule
   #10 = Class              #9            // coursier/error/ResolutionError$UnsatisfiableRule
   #11 = Utf8               coursier/error/ResolutionError
   #12 = Class              #11           // coursier/error/ResolutionError
   #13 = Utf8               UnsatisfiableRule
   #14 = Utf8               coursier/params/rule/SameVersion$CantForceSameVersion
   #15 = Class              #14           // coursier/params/rule/SameVersion$CantForceSameVersion
   #16 = Utf8               CantForceSameVersion
   #17 = Utf8               coursier/params/rule/SameVersion$SameVersionConflict
   #18 = Class              #17           // coursier/params/rule/SameVersion$SameVersionConflict
   #19 = Utf8               SameVersionConflict
   #20 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #21 = Class              #20           // java/lang/invoke/MethodHandles$Lookup
   #22 = Utf8               java/lang/invoke/MethodHandles
   #23 = Class              #22           // java/lang/invoke/MethodHandles
   #24 = Utf8               Lookup
   #25 = Utf8               scala/Predef$ArrowAssoc$
   #26 = Class              #25           // scala/Predef$ArrowAssoc$
   #27 = Utf8               scala/Predef
   #28 = Class              #27           // scala/Predef
   #29 = Utf8
   #30 = Utf8               matchers
   #31 = Utf8               Lscala/collection/immutable/Set;
   #32 = Utf8               Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;
   #33 = Utf8               apply
   #34 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
   #35 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/SameVersion;
   #36 = Utf8               coursier/params/rule/SameVersion$
   #37 = Class              #36           // coursier/params/rule/SameVersion$
   #38 = Utf8               MODULE$
   #39 = Utf8               Lcoursier/params/rule/SameVersion$;
   #40 = NameAndType        #38:#39       // MODULE$:Lcoursier/params/rule/SameVersion$;
   #41 = Fieldref           #37.#40       // coursier/params/rule/SameVersion$.MODULE$:Lcoursier/params/rule/SameVersion$;
   #42 = NameAndType        #33:#34       // apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
   #43 = Methodref          #37.#42       // coursier/params/rule/SameVersion$.apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
   #44 = Utf8               (Lcoursier/core/Module;Lscala/collection/immutable/Seq;)Lcoursier/params/rule/SameVersion;
   #45 = Utf8               (Lcoursier/core/Module;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;)Lcoursier/params/rule/SameVersion;
   #46 = Utf8               module
   #47 = Utf8               other
   #48 = NameAndType        #33:#44       // apply:(Lcoursier/core/Module;Lscala/collection/immutable/Seq;)Lcoursier/params/rule/SameVersion;
   #49 = Methodref          #37.#48       // coursier/params/rule/SameVersion$.apply:(Lcoursier/core/Module;Lscala/collection/immutable/Seq;)Lcoursier/params/rule/SameVersion;
   #50 = Utf8               ()Lscala/collection/immutable/Set;
   #51 = Utf8               ()Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;
   #52 = NameAndType        #30:#31       // matchers:Lscala/collection/immutable/Set;
   #53 = Fieldref           #2.#52        // coursier/params/rule/SameVersion.matchers:Lscala/collection/immutable/Set;
   #54 = Utf8               this
   #55 = Utf8               Lcoursier/params/rule/SameVersion;
   #56 = Utf8               check
   #57 = Utf8               (Lcoursier/core/Resolution;)Lscala/Option;
   #58 = Utf8               (Lcoursier/core/Resolution;)Lscala/Option<Lcoursier/params/rule/SameVersion$SameVersionConflict;>;
   #59 = Utf8               res
   #60 = Utf8               coursier/core/Resolution
   #61 = Class              #60           // coursier/core/Resolution
   #62 = Utf8               dependenciesWithRetainedVersions
   #63 = NameAndType        #62:#50       // dependenciesWithRetainedVersions:()Lscala/collection/immutable/Set;
   #64 = Methodref          #61.#63       // coursier/core/Resolution.dependenciesWithRetainedVersions:()Lscala/collection/immutable/Set;
   #65 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #66 = MethodType         #65           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #67 = Utf8               $anonfun$check$1$adapted
   #68 = Utf8               (Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #69 = NameAndType        #67:#68       // $anonfun$check$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #70 = Methodref          #2.#69        // coursier/params/rule/SameVersion.$anonfun$check$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #71 = MethodHandle       6:#70         // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
   #72 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/Object;
   #73 = MethodType         #72           //  (Lcoursier/core/Dependency;)Ljava/lang/Object;
   #74 = Integer            5
   #75 = Integer            1
   #76 = Utf8               java/lang/invoke/LambdaMetafactory
   #77 = Class              #76           // java/lang/invoke/LambdaMetafactory
   #78 = Utf8               altMetafactory
   #79 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #80 = NameAndType        #78:#79       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = Methodref          #77.#80       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #82 = MethodHandle       6:#81         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = Utf8               (Lcoursier/params/rule/SameVersion;)Lscala/Function1;
   #84 = NameAndType        #33:#83       // apply:(Lcoursier/params/rule/SameVersion;)Lscala/Function1;
   #85 = InvokeDynamic      #0:#84        // #0:apply:(Lcoursier/params/rule/SameVersion;)Lscala/Function1;
   #86 = Utf8               scala/collection/immutable/Set
   #87 = Class              #86           // scala/collection/immutable/Set
   #88 = Utf8               filter
   #89 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #90 = NameAndType        #88:#89       // filter:(Lscala/Function1;)Ljava/lang/Object;
   #91 = InterfaceMethodref #87.#90       // scala/collection/immutable/Set.filter:(Lscala/Function1;)Ljava/lang/Object;
   #92 = Utf8               $anonfun$check$3
   #93 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/core/Module;
   #94 = NameAndType        #92:#93       // $anonfun$check$3:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
   #95 = Methodref          #2.#94        // coursier/params/rule/SameVersion.$anonfun$check$3:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
   #96 = MethodHandle       6:#95         // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$3:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
   #97 = MethodType         #93           //  (Lcoursier/core/Dependency;)Lcoursier/core/Module;
   #98 = Utf8               ()Lscala/Function1;
   #99 = NameAndType        #33:#98       // apply:()Lscala/Function1;
  #100 = InvokeDynamic      #1:#99        // #1:apply:()Lscala/Function1;
  #101 = Utf8               map
  #102 = NameAndType        #101:#89      // map:(Lscala/Function1;)Ljava/lang/Object;
  #103 = InterfaceMethodref #87.#102      // scala/collection/immutable/Set.map:(Lscala/Function1;)Ljava/lang/Object;
  #104 = Utf8               $anonfun$check$4
  #105 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/String;
  #106 = NameAndType        #104:#105     // $anonfun$check$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #107 = Methodref          #2.#106       // coursier/params/rule/SameVersion.$anonfun$check$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #108 = MethodHandle       6:#107        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #109 = MethodType         #105          //  (Lcoursier/core/Dependency;)Ljava/lang/String;
  #110 = InvokeDynamic      #2:#99        // #2:apply:()Lscala/Function1;
  #111 = Utf8               size
  #112 = Utf8               ()I
  #113 = NameAndType        #111:#112     // size:()I
  #114 = InterfaceMethodref #87.#113      // scala/collection/immutable/Set.size:()I
  #115 = Utf8               scala/None$
  #116 = Class              #115          // scala/None$
  #117 = Utf8               Lscala/None$;
  #118 = NameAndType        #38:#117      // MODULE$:Lscala/None$;
  #119 = Fieldref           #116.#118     // scala/None$.MODULE$:Lscala/None$;
  #120 = Utf8               scala/Some
  #121 = Class              #120          // scala/Some
  #122 = Utf8               <init>
  #123 = Utf8               (Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)V
  #124 = NameAndType        #122:#123     // "<init>":(Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)V
  #125 = Methodref          #18.#124      // coursier/params/rule/SameVersion$SameVersionConflict."<init>":(Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)V
  #126 = Utf8               (Ljava/lang/Object;)V
  #127 = NameAndType        #122:#126     // "<init>":(Ljava/lang/Object;)V
  #128 = Methodref          #121.#127     // scala/Some."<init>":(Ljava/lang/Object;)V
  #129 = Utf8               scala/Option
  #130 = Class              #129          // scala/Option
  #131 = Utf8               deps
  #132 = Utf8               modules
  #133 = Utf8               versions
  #134 = Utf8               Lcoursier/core/Resolution;
  #135 = Utf8               tryResolve
  #136 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion$SameVersionConflict;)Lscala/util/Either;
  #137 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion$SameVersionConflict;)Lscala/util/Either<Lcoursier/error/ResolutionError$UnsatisfiableRule;Lcoursier/core/Resolution;>;
  #138 = Utf8               conflict
  #139 = Utf8               $anonfun$tryResolve$1$adapted
  #140 = NameAndType        #139:#68      // $anonfun$tryResolve$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
  #141 = Methodref          #2.#140       // coursier/params/rule/SameVersion.$anonfun$tryResolve$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
  #142 = MethodHandle       6:#141        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
  #143 = InvokeDynamic      #3:#84        // #3:apply:(Lcoursier/params/rule/SameVersion;)Lscala/Function1;
  #144 = Utf8               $anonfun$tryResolve$3
  #145 = NameAndType        #144:#105     // $anonfun$tryResolve$3:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #146 = Methodref          #2.#145       // coursier/params/rule/SameVersion.$anonfun$tryResolve$3:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #147 = MethodHandle       6:#146        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$3:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #148 = InvokeDynamic      #4:#99        // #4:apply:()Lscala/Function1;
  #149 = Utf8               scala/Predef$
  #150 = Class              #149          // scala/Predef$
  #151 = Utf8               Lscala/Predef$;
  #152 = NameAndType        #38:#151      // MODULE$:Lscala/Predef$;
  #153 = Fieldref           #150.#152     // scala/Predef$.MODULE$:Lscala/Predef$;
  #154 = Utf8               nonEmpty
  #155 = Utf8               ()Z
  #156 = NameAndType        #154:#155     // nonEmpty:()Z
  #157 = InterfaceMethodref #87.#156      // scala/collection/immutable/Set.nonEmpty:()Z
  #158 = Utf8               assert
  #159 = Utf8               (Z)V
  #160 = NameAndType        #158:#159     // assert:(Z)V
  #161 = Methodref          #150.#160     // scala/Predef$.assert:(Z)V
  #162 = Utf8               $anonfun$tryResolve$4
  #163 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
  #164 = NameAndType        #162:#163     // $anonfun$tryResolve$4:(Ljava/lang/String;)Lcoursier/core/Version;
  #165 = Methodref          #2.#164       // coursier/params/rule/SameVersion.$anonfun$tryResolve$4:(Ljava/lang/String;)Lcoursier/core/Version;
  #166 = MethodHandle       6:#165        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$4:(Ljava/lang/String;)Lcoursier/core/Version;
  #167 = MethodType         #163          //  (Ljava/lang/String;)Lcoursier/core/Version;
  #168 = InvokeDynamic      #5:#99        // #5:apply:()Lscala/Function1;
  #169 = Utf8               scala/math/Ordering$
  #170 = Class              #169          // scala/math/Ordering$
  #171 = Utf8               Lscala/math/Ordering$;
  #172 = NameAndType        #38:#171      // MODULE$:Lscala/math/Ordering$;
  #173 = Fieldref           #170.#172     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #174 = Utf8               $conforms
  #175 = NameAndType        #174:#98      // $conforms:()Lscala/Function1;
  #176 = Methodref          #150.#175     // scala/Predef$.$conforms:()Lscala/Function1;
  #177 = Utf8               ordered
  #178 = Utf8               (Lscala/Function1;)Lscala/math/Ordering;
  #179 = NameAndType        #177:#178     // ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #180 = Methodref          #170.#179     // scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #181 = Utf8               maxBy
  #182 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #183 = NameAndType        #181:#182     // maxBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #184 = InterfaceMethodref #87.#183      // scala/collection/immutable/Set.maxBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #185 = Utf8               java/lang/String
  #186 = Class              #185          // java/lang/String
  #187 = Utf8               forceVersions
  #188 = Utf8               ()Lscala/collection/immutable/Map;
  #189 = NameAndType        #187:#188     // forceVersions:()Lscala/collection/immutable/Map;
  #190 = Methodref          #61.#189      // coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
  #191 = Utf8               scala/collection/immutable/Map
  #192 = Class              #191          // scala/collection/immutable/Map
  #193 = Utf8               view
  #194 = Utf8               ()Lscala/collection/MapView;
  #195 = NameAndType        #193:#194     // view:()Lscala/collection/MapView;
  #196 = InterfaceMethodref #192.#195     // scala/collection/immutable/Map.view:()Lscala/collection/MapView;
  #197 = NameAndType        #132:#50      // modules:()Lscala/collection/immutable/Set;
  #198 = Methodref          #18.#197      // coursier/params/rule/SameVersion$SameVersionConflict.modules:()Lscala/collection/immutable/Set;
  #199 = Utf8               scala/collection/MapView
  #200 = Class              #199          // scala/collection/MapView
  #201 = Utf8               filterKeys
  #202 = Utf8               (Lscala/Function1;)Lscala/collection/MapView;
  #203 = NameAndType        #201:#202     // filterKeys:(Lscala/Function1;)Lscala/collection/MapView;
  #204 = InterfaceMethodref #200.#203     // scala/collection/MapView.filterKeys:(Lscala/Function1;)Lscala/collection/MapView;
  #205 = Utf8               $anonfun$tryResolve$5$adapted
  #206 = Utf8               (Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/Object;
  #207 = NameAndType        #205:#206     // $anonfun$tryResolve$5$adapted:(Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/Object;
  #208 = Methodref          #2.#207       // coursier/params/rule/SameVersion.$anonfun$tryResolve$5$adapted:(Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/Object;
  #209 = MethodHandle       6:#208        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$5$adapted:(Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/Object;
  #210 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #211 = MethodType         #210          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #212 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #213 = NameAndType        #33:#212      // apply:(Ljava/lang/String;)Lscala/Function1;
  #214 = InvokeDynamic      #6:#213       // #6:apply:(Ljava/lang/String;)Lscala/Function1;
  #215 = NameAndType        #88:#202      // filter:(Lscala/Function1;)Lscala/collection/MapView;
  #216 = InterfaceMethodref #200.#215     // scala/collection/MapView.filter:(Lscala/Function1;)Lscala/collection/MapView;
  #217 = Utf8               iterator
  #218 = Utf8               ()Lscala/collection/Iterator;
  #219 = NameAndType        #217:#218     // iterator:()Lscala/collection/Iterator;
  #220 = InterfaceMethodref #200.#219     // scala/collection/MapView.iterator:()Lscala/collection/Iterator;
  #221 = Utf8               scala/$less$colon$less$
  #222 = Class              #221          // scala/$less$colon$less$
  #223 = Utf8               Lscala/$less$colon$less$;
  #224 = NameAndType        #38:#223      // MODULE$:Lscala/$less$colon$less$;
  #225 = Fieldref           #222.#224     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #226 = Utf8               refl
  #227 = Utf8               ()Lscala/$eq$colon$eq;
  #228 = NameAndType        #226:#227     // refl:()Lscala/$eq$colon$eq;
  #229 = Methodref          #222.#228     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #230 = Utf8               scala/collection/Iterator
  #231 = Class              #230          // scala/collection/Iterator
  #232 = Utf8               toMap
  #233 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #234 = NameAndType        #232:#233     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #235 = InterfaceMethodref #231.#234     // scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #236 = Utf8               isEmpty
  #237 = NameAndType        #236:#155     // isEmpty:()Z
  #238 = InterfaceMethodref #192.#237     // scala/collection/immutable/Map.isEmpty:()Z
  #239 = Utf8               toSeq
  #240 = Utf8               ()Lscala/collection/immutable/Seq;
  #241 = NameAndType        #239:#240     // toSeq:()Lscala/collection/immutable/Seq;
  #242 = InterfaceMethodref #87.#241      // scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
  #243 = Utf8               $anonfun$tryResolve$6
  #244 = Utf8               (Ljava/lang/String;Lcoursier/core/Module;)Lscala/Tuple2;
  #245 = NameAndType        #243:#244     // $anonfun$tryResolve$6:(Ljava/lang/String;Lcoursier/core/Module;)Lscala/Tuple2;
  #246 = Methodref          #2.#245       // coursier/params/rule/SameVersion.$anonfun$tryResolve$6:(Ljava/lang/String;Lcoursier/core/Module;)Lscala/Tuple2;
  #247 = MethodHandle       6:#246        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$6:(Ljava/lang/String;Lcoursier/core/Module;)Lscala/Tuple2;
  #248 = Utf8               (Lcoursier/core/Module;)Lscala/Tuple2;
  #249 = MethodType         #248          //  (Lcoursier/core/Module;)Lscala/Tuple2;
  #250 = InvokeDynamic      #7:#213       // #7:apply:(Ljava/lang/String;)Lscala/Function1;
  #251 = Utf8               scala/collection/immutable/Seq
  #252 = Class              #251          // scala/collection/immutable/Seq
  #253 = InterfaceMethodref #252.#102     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #254 = Utf8               scala/collection/IterableOnce
  #255 = Class              #254          // scala/collection/IterableOnce
  #256 = Utf8               $plus$plus
  #257 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #258 = NameAndType        #256:#257     // $plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #259 = InterfaceMethodref #192.#258     // scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #260 = Utf8               withForceVersions
  #261 = Utf8               (Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #262 = NameAndType        #260:#261     // withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #263 = Methodref          #61.#262      // coursier/core/Resolution.withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #264 = Utf8               scala/package$
  #265 = Class              #264          // scala/package$
  #266 = Utf8               Lscala/package$;
  #267 = NameAndType        #38:#266      // MODULE$:Lscala/package$;
  #268 = Fieldref           #265.#267     // scala/package$.MODULE$:Lscala/package$;
  #269 = Utf8               Right
  #270 = Utf8               ()Lscala/util/Right$;
  #271 = NameAndType        #269:#270     // Right:()Lscala/util/Right$;
  #272 = Methodref          #265.#271     // scala/package$.Right:()Lscala/util/Right$;
  #273 = Utf8               scala/util/Right$
  #274 = Class              #273          // scala/util/Right$
  #275 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #276 = NameAndType        #33:#275      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #277 = Methodref          #274.#276     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #278 = Utf8               keySet
  #279 = NameAndType        #278:#50      // keySet:()Lscala/collection/immutable/Set;
  #280 = InterfaceMethodref #192.#279     // scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
  #281 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
  #282 = NameAndType        #122:#281     // "<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
  #283 = Methodref          #15.#282      // coursier/params/rule/SameVersion$CantForceSameVersion."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
  #284 = Utf8               Left
  #285 = Utf8               ()Lscala/util/Left$;
  #286 = NameAndType        #284:#285     // Left:()Lscala/util/Left$;
  #287 = Methodref          #265.#286     // scala/package$.Left:()Lscala/util/Left$;
  #288 = Utf8               scala/util/Left$
  #289 = Class              #288          // scala/util/Left$
  #290 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #291 = NameAndType        #33:#290      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #292 = Methodref          #289.#291     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #293 = Utf8               scala/util/Either
  #294 = Class              #293          // scala/util/Either
  #295 = Utf8               res0
  #296 = Utf8               c
  #297 = Utf8               Lcoursier/params/rule/SameVersion$CantForceSameVersion;
  #298 = Utf8               selectedVersion
  #299 = Utf8               Ljava/lang/String;
  #300 = Utf8               cantForce
  #301 = Utf8               Lscala/collection/immutable/Map;
  #302 = Utf8               Lcoursier/params/rule/SameVersion$SameVersionConflict;
  #303 = Utf8               withMatchers
  #304 = Utf8               (Lscala/collection/immutable/Set;)V
  #305 = NameAndType        #122:#304     // "<init>":(Lscala/collection/immutable/Set;)V
  #306 = Methodref          #2.#305       // coursier/params/rule/SameVersion."<init>":(Lscala/collection/immutable/Set;)V
  #307 = Utf8               toString
  #308 = Utf8               ()Ljava/lang/String;
  #309 = Utf8               java/lang/StringBuilder
  #310 = Class              #309          // java/lang/StringBuilder
  #311 = Utf8               SameVersion(
  #312 = String             #311          // SameVersion(
  #313 = Utf8               (Ljava/lang/String;)V
  #314 = NameAndType        #122:#313     // "<init>":(Ljava/lang/String;)V
  #315 = Methodref          #310.#314     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #316 = NameAndType        #30:#50       // matchers:()Lscala/collection/immutable/Set;
  #317 = Methodref          #2.#316       // coursier/params/rule/SameVersion.matchers:()Lscala/collection/immutable/Set;
  #318 = Utf8               valueOf
  #319 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #320 = NameAndType        #318:#319     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #321 = Methodref          #186.#320     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #322 = Utf8               append
  #323 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #324 = NameAndType        #322:#323     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #325 = Methodref          #310.#324     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #326 = Utf8               )
  #327 = String             #326          // )
  #328 = NameAndType        #307:#308     // toString:()Ljava/lang/String;
  #329 = Methodref          #310.#328     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #330 = Utf8               b
  #331 = Utf8               Ljava/lang/StringBuilder;
  #332 = Utf8               canEqual
  #333 = Utf8               (Ljava/lang/Object;)Z
  #334 = Utf8               obj
  #335 = Utf8               Ljava/lang/Object;
  #336 = Utf8               equals
  #337 = NameAndType        #332:#333     // canEqual:(Ljava/lang/Object;)Z
  #338 = Methodref          #2.#337       // coursier/params/rule/SameVersion.canEqual:(Ljava/lang/Object;)Z
  #339 = Utf8               java/lang/Object
  #340 = Class              #339          // java/lang/Object
  #341 = NameAndType        #336:#333     // equals:(Ljava/lang/Object;)Z
  #342 = Methodref          #340.#341     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #343 = Utf8               hashCode
  #344 = Utf8               SameVersion
  #345 = String             #344          // SameVersion
  #346 = Utf8               scala/runtime/Statics
  #347 = Class              #346          // scala/runtime/Statics
  #348 = Utf8               anyHash
  #349 = Utf8               (Ljava/lang/Object;)I
  #350 = NameAndType        #348:#349     // anyHash:(Ljava/lang/Object;)I
  #351 = Methodref          #347.#350     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #352 = Utf8               code
  #353 = Utf8               I
  #354 = Utf8               tuple
  #355 = Utf8               ()Lscala/Tuple1;
  #356 = Utf8               ()Lscala/Tuple1<Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;>;
  #357 = Utf8               scala/Tuple1
  #358 = Class              #357          // scala/Tuple1
  #359 = Methodref          #358.#127     // scala/Tuple1."<init>":(Ljava/lang/Object;)V
  #360 = Utf8               productPrefix
  #361 = Utf8               productArity
  #362 = Utf8               productElement
  #363 = Utf8               (I)Ljava/lang/Object;
  #364 = Utf8               n
  #365 = Utf8               java/lang/IndexOutOfBoundsException
  #366 = Class              #365          // java/lang/IndexOutOfBoundsException
  #367 = Utf8               scala/runtime/BoxesRunTime
  #368 = Class              #367          // scala/runtime/BoxesRunTime
  #369 = Utf8               boxToInteger
  #370 = Utf8               (I)Ljava/lang/Integer;
  #371 = NameAndType        #369:#370     // boxToInteger:(I)Ljava/lang/Integer;
  #372 = Methodref          #368.#371     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #373 = Methodref          #340.#328     // java/lang/Object.toString:()Ljava/lang/String;
  #374 = Methodref          #366.#314     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #375 = Utf8               productElementName
  #376 = Utf8               (I)Ljava/lang/String;
  #377 = String             #30           // matchers
  #378 = Utf8               (Lcoursier/core/Resolution;Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/util/Either;
  #379 = NameAndType        #135:#136     // tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion$SameVersionConflict;)Lscala/util/Either;
  #380 = Methodref          #2.#379       // coursier/params/rule/SameVersion.tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion$SameVersionConflict;)Lscala/util/Either;
  #381 = Utf8               Lcoursier/error/conflict/UnsatisfiedRule;
  #382 = Utf8               $anonfun$check$2
  #383 = Utf8               (Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
  #384 = Utf8               dep$1
  #385 = Utf8               x$1
  #386 = Utf8               coursier/core/Dependency
  #387 = Class              #386          // coursier/core/Dependency
  #388 = Utf8               ()Lcoursier/core/Module;
  #389 = NameAndType        #46:#388      // module:()Lcoursier/core/Module;
  #390 = Methodref          #387.#389     // coursier/core/Dependency.module:()Lcoursier/core/Module;
  #391 = Utf8               coursier/util/ModuleMatcher
  #392 = Class              #391          // coursier/util/ModuleMatcher
  #393 = Utf8               matches
  #394 = Utf8               (Lcoursier/core/Module;)Z
  #395 = NameAndType        #393:#394     // matches:(Lcoursier/core/Module;)Z
  #396 = Methodref          #392.#395     // coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
  #397 = Utf8               Lcoursier/core/Dependency;
  #398 = Utf8               Lcoursier/util/ModuleMatcher;
  #399 = Utf8               $anonfun$check$1
  #400 = Utf8               (Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
  #401 = Utf8               $this
  #402 = Utf8               dep
  #403 = Utf8               $anonfun$check$2$adapted
  #404 = Utf8               (Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #405 = NameAndType        #403:#404     // $anonfun$check$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #406 = Methodref          #2.#405       // coursier/params/rule/SameVersion.$anonfun$check$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #407 = MethodHandle       6:#406        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #408 = Utf8               (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #409 = MethodType         #408          //  (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #410 = Utf8               (Lcoursier/core/Dependency;)Lscala/Function1;
  #411 = NameAndType        #33:#410      // apply:(Lcoursier/core/Dependency;)Lscala/Function1;
  #412 = InvokeDynamic      #8:#411       // #8:apply:(Lcoursier/core/Dependency;)Lscala/Function1;
  #413 = Utf8               exists
  #414 = Utf8               (Lscala/Function1;)Z
  #415 = NameAndType        #413:#414     // exists:(Lscala/Function1;)Z
  #416 = InterfaceMethodref #87.#415      // scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
  #417 = Utf8               x$2
  #418 = Utf8               x$3
  #419 = Utf8               version
  #420 = NameAndType        #419:#308     // version:()Ljava/lang/String;
  #421 = Methodref          #387.#420     // coursier/core/Dependency.version:()Ljava/lang/String;
  #422 = Utf8               $anonfun$tryResolve$2
  #423 = Utf8               dep$2
  #424 = Utf8               x$4
  #425 = Utf8               $anonfun$tryResolve$1
  #426 = Utf8               $anonfun$tryResolve$2$adapted
  #427 = NameAndType        #426:#404     // $anonfun$tryResolve$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #428 = Methodref          #2.#427       // coursier/params/rule/SameVersion.$anonfun$tryResolve$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #429 = MethodHandle       6:#428        // REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #430 = InvokeDynamic      #9:#411       // #9:apply:(Lcoursier/core/Dependency;)Lscala/Function1;
  #431 = Utf8               x$5
  #432 = Utf8               x$6
  #433 = Utf8               coursier/core/Version$
  #434 = Class              #433          // coursier/core/Version$
  #435 = Utf8               Lcoursier/core/Version$;
  #436 = NameAndType        #38:#435      // MODULE$:Lcoursier/core/Version$;
  #437 = Fieldref           #434.#436     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #438 = NameAndType        #33:#163      // apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #439 = Methodref          #434.#438     // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #440 = Utf8               $anonfun$tryResolve$5
  #441 = Utf8               (Ljava/lang/String;Lscala/Tuple2;)Z
  #442 = Utf8               selectedVersion$1
  #443 = Utf8               x$7
  #444 = Utf8               scala/Tuple2
  #445 = Class              #444          // scala/Tuple2
  #446 = Utf8               _2
  #447 = Utf8               ()Ljava/lang/Object;
  #448 = NameAndType        #446:#447     // _2:()Ljava/lang/Object;
  #449 = Methodref          #445.#448     // scala/Tuple2._2:()Ljava/lang/Object;
  #450 = Utf8               Lscala/Tuple2;
  #451 = Utf8               m
  #452 = Utf8               Lscala/Predef$ArrowAssoc$;
  #453 = NameAndType        #38:#452      // MODULE$:Lscala/Predef$ArrowAssoc$;
  #454 = Fieldref           #26.#453      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #455 = Utf8               ArrowAssoc
  #456 = NameAndType        #455:#65      // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #457 = Methodref          #150.#456     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #458 = Utf8               $minus$greater$extension
  #459 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #460 = NameAndType        #458:#459     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #461 = Methodref          #26.#460      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #462 = Utf8               Lcoursier/core/Module;
  #463 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)V
  #464 = Utf8               ()V
  #465 = NameAndType        #122:#464     // "<init>":()V
  #466 = Methodref          #4.#465       // coursier/params/rule/Rule."<init>":()V
  #467 = NameAndType        #399:#400     // $anonfun$check$1:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
  #468 = Methodref          #2.#467       // coursier/params/rule/SameVersion.$anonfun$check$1:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
  #469 = Utf8               boxToBoolean
  #470 = Utf8               (Z)Ljava/lang/Boolean;
  #471 = NameAndType        #469:#470     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #472 = Methodref          #368.#471     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #473 = NameAndType        #425:#400     // $anonfun$tryResolve$1:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
  #474 = Methodref          #2.#473       // coursier/params/rule/SameVersion.$anonfun$tryResolve$1:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
  #475 = NameAndType        #440:#441     // $anonfun$tryResolve$5:(Ljava/lang/String;Lscala/Tuple2;)Z
  #476 = Methodref          #2.#475       // coursier/params/rule/SameVersion.$anonfun$tryResolve$5:(Ljava/lang/String;Lscala/Tuple2;)Z
  #477 = NameAndType        #382:#383     // $anonfun$check$2:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
  #478 = Methodref          #2.#477       // coursier/params/rule/SameVersion.$anonfun$check$2:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
  #479 = NameAndType        #422:#383     // $anonfun$tryResolve$2:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
  #480 = Methodref          #2.#479       // coursier/params/rule/SameVersion.$anonfun$tryResolve$2:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
  #481 = Utf8               $deserializeLambda$
  #482 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #483 = Utf8               scala/runtime/LambdaDeserialize
  #484 = Class              #483          // scala/runtime/LambdaDeserialize
  #485 = Utf8               bootstrap
  #486 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #487 = NameAndType        #485:#486     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #488 = Methodref          #484.#487     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #489 = MethodHandle       6:#488        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #490 = Utf8               lambdaDeserialize
  #491 = NameAndType        #490:#482     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #492 = InvokeDynamic      #10:#491      // #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #493 = Utf8               Signature
  #494 = Utf8               Code
  #495 = Utf8               MethodParameters
  #496 = Utf8               LineNumberTable
  #497 = Utf8               LocalVariableTable
  #498 = Utf8               StackMapTable
  #499 = Utf8               InnerClasses
  #500 = Utf8               SourceFile
  #501 = Utf8               RuntimeVisibleAnnotations
  #502 = Utf8               BootstrapMethods
  #503 = Utf8               ScalaInlineInfo
  #504 = Utf8               ScalaSig
{
  private final scala.collection.immutable.Set<coursier.util.ModuleMatcher> matchers;
    descriptor: Lscala/collection/immutable/Set;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #32                          // Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;

  public static coursier.params.rule.SameVersion apply(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #41                 // Field coursier/params/rule/SameVersion$.MODULE$:Lcoursier/params/rule/SameVersion$;
         3: aload_0
         4: invokevirtual #43                 // Method coursier/params/rule/SameVersion$.apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
         7: areturn
    Signature: #35                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/SameVersion;
    MethodParameters:
      Name                           Flags
      matchers                       final

  public static coursier.params.rule.SameVersion apply(coursier.core.Module, scala.collection.immutable.Seq<coursier.core.Module>);
    descriptor: (Lcoursier/core/Module;Lscala/collection/immutable/Seq;)Lcoursier/params/rule/SameVersion;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #41                 // Field coursier/params/rule/SameVersion$.MODULE$:Lcoursier/params/rule/SameVersion$;
         3: aload_0
         4: aload_1
         5: invokevirtual #49                 // Method coursier/params/rule/SameVersion$.apply:(Lcoursier/core/Module;Lscala/collection/immutable/Seq;)Lcoursier/params/rule/SameVersion;
         8: areturn
    Signature: #45                          // (Lcoursier/core/Module;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;)Lcoursier/params/rule/SameVersion;
    MethodParameters:
      Name                           Flags
      module                         final
      other                          final

  public scala.collection.immutable.Set<coursier.util.ModuleMatcher> matchers();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #53                 // Field matchers:Lscala/collection/immutable/Set;
         4: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/SameVersion;
    Signature: #51                          // ()Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;

  public scala.Option<coursier.params.rule.SameVersion$SameVersionConflict> check(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=5, args_size=2
         0: aload_1
         1: invokevirtual #64                 // Method coursier/core/Resolution.dependenciesWithRetainedVersions:()Lscala/collection/immutable/Set;
         4: aload_0
         5: invokedynamic #85,  0             // InvokeDynamic #0:apply:(Lcoursier/params/rule/SameVersion;)Lscala/Function1;
        10: invokeinterface #91,  2           // InterfaceMethod scala/collection/immutable/Set.filter:(Lscala/Function1;)Ljava/lang/Object;
        15: checkcast     #87                 // class scala/collection/immutable/Set
        18: astore_2
        19: aload_2
        20: invokedynamic #100,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        25: invokeinterface #103,  2          // InterfaceMethod scala/collection/immutable/Set.map:(Lscala/Function1;)Ljava/lang/Object;
        30: checkcast     #87                 // class scala/collection/immutable/Set
        33: astore_3
        34: aload_2
        35: invokedynamic #110,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        40: invokeinterface #103,  2          // InterfaceMethod scala/collection/immutable/Set.map:(Lscala/Function1;)Ljava/lang/Object;
        45: checkcast     #87                 // class scala/collection/immutable/Set
        48: astore        4
        50: aload         4
        52: invokeinterface #114,  1          // InterfaceMethod scala/collection/immutable/Set.size:()I
        57: iconst_1
        58: if_icmpgt     67
        61: getstatic     #119                // Field scala/None$.MODULE$:Lscala/None$;
        64: goto          85
        67: new           #121                // class scala/Some
        70: dup
        71: new           #18                 // class coursier/params/rule/SameVersion$SameVersionConflict
        74: dup
        75: aload_0
        76: aload_3
        77: aload         4
        79: invokespecial #125                // Method coursier/params/rule/SameVersion$SameVersionConflict."<init>":(Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)V
        82: invokespecial #128                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        85: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 67
          locals = [ class scala/collection/immutable/Set, class scala/collection/immutable/Set, class scala/collection/immutable/Set ]
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 24: 0
        line 25: 19
        line 26: 34
        line 28: 50
        line 29: 61
        line 31: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      66     2  deps   Lscala/collection/immutable/Set;
           34      51     3 modules   Lscala/collection/immutable/Set;
           50      35     4 versions   Lscala/collection/immutable/Set;
            0      86     0  this   Lcoursier/params/rule/SameVersion;
            0      86     1   res   Lcoursier/core/Resolution;
    Signature: #58                          // (Lcoursier/core/Resolution;)Lscala/Option<Lcoursier/params/rule/SameVersion$SameVersionConflict;>;
    MethodParameters:
      Name                           Flags
      res                            final

  public scala.util.Either<coursier.error.ResolutionError$UnsatisfiableRule, coursier.core.Resolution> tryResolve(coursier.core.Resolution, coursier.params.rule.SameVersion$SameVersionConflict);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion$SameVersionConflict;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=9, args_size=3
         0: aload_1
         1: invokevirtual #64                 // Method coursier/core/Resolution.dependenciesWithRetainedVersions:()Lscala/collection/immutable/Set;
         4: aload_0
         5: invokedynamic #143,  0            // InvokeDynamic #3:apply:(Lcoursier/params/rule/SameVersion;)Lscala/Function1;
        10: invokeinterface #91,  2           // InterfaceMethod scala/collection/immutable/Set.filter:(Lscala/Function1;)Ljava/lang/Object;
        15: checkcast     #87                 // class scala/collection/immutable/Set
        18: astore_3
        19: aload_3
        20: invokedynamic #148,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        25: invokeinterface #103,  2          // InterfaceMethod scala/collection/immutable/Set.map:(Lscala/Function1;)Ljava/lang/Object;
        30: checkcast     #87                 // class scala/collection/immutable/Set
        33: astore        4
        35: getstatic     #153                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        38: aload_3
        39: invokeinterface #157,  1          // InterfaceMethod scala/collection/immutable/Set.nonEmpty:()Z
        44: invokevirtual #161                // Method scala/Predef$.assert:(Z)V
        47: getstatic     #153                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        50: aload         4
        52: invokeinterface #114,  1          // InterfaceMethod scala/collection/immutable/Set.size:()I
        57: iconst_1
        58: if_icmple     65
        61: iconst_1
        62: goto          66
        65: iconst_0
        66: invokevirtual #161                // Method scala/Predef$.assert:(Z)V
        69: aload         4
        71: invokedynamic #168,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        76: getstatic     #173                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        79: getstatic     #153                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        82: invokevirtual #176                // Method scala/Predef$.$conforms:()Lscala/Function1;
        85: invokevirtual #180                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
        88: invokeinterface #184,  3          // InterfaceMethod scala/collection/immutable/Set.maxBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        93: checkcast     #186                // class java/lang/String
        96: astore        5
        98: aload_1
        99: invokevirtual #190                // Method coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
       102: invokeinterface #196,  1          // InterfaceMethod scala/collection/immutable/Map.view:()Lscala/collection/MapView;
       107: aload_2
       108: invokevirtual #198                // Method coursier/params/rule/SameVersion$SameVersionConflict.modules:()Lscala/collection/immutable/Set;
       111: invokeinterface #204,  2          // InterfaceMethod scala/collection/MapView.filterKeys:(Lscala/Function1;)Lscala/collection/MapView;
       116: aload         5
       118: invokedynamic #214,  0            // InvokeDynamic #6:apply:(Ljava/lang/String;)Lscala/Function1;
       123: invokeinterface #216,  2          // InterfaceMethod scala/collection/MapView.filter:(Lscala/Function1;)Lscala/collection/MapView;
       128: invokeinterface #220,  1          // InterfaceMethod scala/collection/MapView.iterator:()Lscala/collection/Iterator;
       133: getstatic     #225                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       136: invokevirtual #229                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       139: invokeinterface #235,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       144: astore        6
       146: aload         6
       148: invokeinterface #238,  1          // InterfaceMethod scala/collection/immutable/Map.isEmpty:()Z
       153: ifeq          212
       156: aload_1
       157: aload_1
       158: invokevirtual #190                // Method coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
       161: aload_2
       162: invokevirtual #198                // Method coursier/params/rule/SameVersion$SameVersionConflict.modules:()Lscala/collection/immutable/Set;
       165: invokeinterface #242,  1          // InterfaceMethod scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
       170: aload         5
       172: invokedynamic #250,  0            // InvokeDynamic #7:apply:(Ljava/lang/String;)Lscala/Function1;
       177: invokeinterface #253,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       182: checkcast     #255                // class scala/collection/IterableOnce
       185: invokeinterface #259,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
       190: checkcast     #192                // class scala/collection/immutable/Map
       193: invokevirtual #263                // Method coursier/core/Resolution.withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
       196: astore        7
       198: getstatic     #268                // Field scala/package$.MODULE$:Lscala/package$;
       201: invokevirtual #272                // Method scala/package$.Right:()Lscala/util/Right$;
       204: aload         7
       206: invokevirtual #277                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       209: goto          244
       212: new           #15                 // class coursier/params/rule/SameVersion$CantForceSameVersion
       215: dup
       216: aload_1
       217: aload_0
       218: aload         6
       220: invokeinterface #280,  1          // InterfaceMethod scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
       225: aload         5
       227: aload_2
       228: invokespecial #283                // Method coursier/params/rule/SameVersion$CantForceSameVersion."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
       231: astore        8
       233: getstatic     #268                // Field scala/package$.MODULE$:Lscala/package$;
       236: invokevirtual #287                // Method scala/package$.Left:()Lscala/util/Left$;
       239: aload         8
       241: invokevirtual #292                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       244: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 65
          locals = [ class coursier/params/rule/SameVersion, class coursier/core/Resolution, class coursier/params/rule/SameVersion$SameVersionConflict, class scala/collection/immutable/Set, class scala/collection/immutable/Set ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/params/rule/SameVersion, class coursier/core/Resolution, class coursier/params/rule/SameVersion$SameVersionConflict, class scala/collection/immutable/Set, class scala/collection/immutable/Set ]
          stack = [ class scala/Predef$, int ]
        frame_type = 253 /* append */
          offset_delta = 145
          locals = [ class java/lang/String, class scala/collection/immutable/Map ]
        frame_type = 95 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 39: 0
        line 40: 19
        line 41: 35
        line 42: 47
        line 44: 69
        line 48: 98
        line 51: 107
        line 52: 116
        line 54: 133
        line 56: 146
        line 57: 156
        line 58: 198
        line 60: 212
        line 61: 216
        line 62: 217
        line 63: 218
        line 64: 225
        line 65: 227
        line 67: 233
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          198      11     7  res0   Lcoursier/core/Resolution;
          233      11     8     c   Lcoursier/params/rule/SameVersion$CantForceSameVersion;
           19     225     3  deps   Lscala/collection/immutable/Set;
           35     209     4 versions   Lscala/collection/immutable/Set;
           98     146     5 selectedVersion   Ljava/lang/String;
          146      98     6 cantForce   Lscala/collection/immutable/Map;
            0     245     0  this   Lcoursier/params/rule/SameVersion;
            0     245     1   res   Lcoursier/core/Resolution;
            0     245     2 conflict   Lcoursier/params/rule/SameVersion$SameVersionConflict;
    Signature: #137                         // (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion$SameVersionConflict;)Lscala/util/Either<Lcoursier/error/ResolutionError$UnsatisfiableRule;Lcoursier/core/Resolution;>;
    MethodParameters:
      Name                           Flags
      res                            final
      conflict                       final

  public coursier.params.rule.SameVersion withMatchers(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/params/rule/SameVersion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/params/rule/SameVersion
         3: dup
         4: aload_1
         5: invokespecial #306                // Method "<init>":(Lscala/collection/immutable/Set;)V
         8: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/params/rule/SameVersion;
            0       9     1 matchers   Lscala/collection/immutable/Set;
    Signature: #35                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/SameVersion;
    MethodParameters:
      Name                           Flags
      matchers                       final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #310                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #312                // String SameVersion(
         7: invokespecial #315                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
        16: invokestatic  #321                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #325                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #327                // String )
        27: invokevirtual #325                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: invokevirtual #329                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      24     1     b   Ljava/lang/StringBuilder;
            0      36     0  this   Lcoursier/params/rule/SameVersion;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/params/rule/SameVersion
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/params/rule/SameVersion;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     58
         5: aload_0
         6: aload_1
         7: invokevirtual #338                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          62
        13: aload_1
        14: checkcast     #2                  // class coursier/params/rule/SameVersion
        17: astore_2
        18: iconst_1
        19: ifeq          54
        22: aload_0
        23: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
        26: aload_2
        27: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          54
        43: aload_3
        44: invokevirtual #342                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/params/rule/SameVersion, class java/lang/Object, class coursier/params/rule/SameVersion, class scala/collection/immutable/Set ]
          stack = [ class scala/collection/immutable/Set ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      37     2 other   Lcoursier/params/rule/SameVersion;
            0      64     0  this   Lcoursier/params/rule/SameVersion;
            0      64     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #345                // String SameVersion
         5: invokestatic  #351                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
        18: invokestatic  #351                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      17     1  code   I
            0      28     0  this   Lcoursier/params/rule/SameVersion;

  private scala.Tuple1<scala.collection.immutable.Set<coursier.util.ModuleMatcher>> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #358                // class scala/Tuple1
         3: dup
         4: aload_0
         5: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
         8: invokespecial #359                // Method scala/Tuple1."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/params/rule/SameVersion;
    Signature: #356                         // ()Lscala/Tuple1<Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #345                // String SameVersion
         3: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/params/rule/SameVersion;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/params/rule/SameVersion;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
        24: goto          42
        27: new           #366                // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_2
        32: invokestatic  #372                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #373                // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #374                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Set ]
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/params/rule/SameVersion;
            0      43     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #377                // String matchers
        23: goto          41
        26: new           #366                // class java/lang/IndexOutOfBoundsException
        29: dup
        30: iload_2
        31: invokestatic  #372                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        34: invokevirtual #373                // Method java/lang/Object.toString:()Ljava/lang/String;
        37: invokespecial #374                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/params/rule/SameVersion;
            0      42     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.util.Either tryResolve(coursier.core.Resolution, coursier.error.conflict.UnsatisfiedRule);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/util/Either;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: checkcast     #18                 // class coursier/params/rule/SameVersion$SameVersionConflict
         6: invokevirtual #380                // Method tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion$SameVersionConflict;)Lscala/util/Either;
         9: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/SameVersion;
            0      10     1   res   Lcoursier/core/Resolution;
            0      10     2 conflict   Lcoursier/error/conflict/UnsatisfiedRule;
    MethodParameters:
      Name                           Flags
      res                            final
      conflict                       final

  public static final boolean $anonfun$check$2(coursier.core.Dependency, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #390                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         5: invokevirtual #396                // Method coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
         8: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 dep$1   Lcoursier/core/Dependency;
            0       9     1   x$1   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      dep$1                          final
      x$1                            final

  public static final boolean $anonfun$check$1(coursier.params.rule.SameVersion, coursier.core.Dependency);
    descriptor: (Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
         4: aload_1
         5: invokedynamic #412,  0            // InvokeDynamic #8:apply:(Lcoursier/core/Dependency;)Lscala/Function1;
        10: invokeinterface #416,  2          // InterfaceMethod scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
        15: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 $this   Lcoursier/params/rule/SameVersion;
            0      16     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      dep                            final

  public static final coursier.core.Module $anonfun$check$3(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #390                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.lang.String $anonfun$check$4(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #421                // Method coursier/core/Dependency.version:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$3   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final boolean $anonfun$tryResolve$2(coursier.core.Dependency, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #390                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         5: invokevirtual #396                // Method coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
         8: ireturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 dep$2   Lcoursier/core/Dependency;
            0       9     1   x$4   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      dep$2                          final
      x$4                            final

  public static final boolean $anonfun$tryResolve$1(coursier.params.rule.SameVersion, coursier.core.Dependency);
    descriptor: (Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #317                // Method matchers:()Lscala/collection/immutable/Set;
         4: aload_1
         5: invokedynamic #430,  0            // InvokeDynamic #9:apply:(Lcoursier/core/Dependency;)Lscala/Function1;
        10: invokeinterface #416,  2          // InterfaceMethod scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
        15: ireturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 $this   Lcoursier/params/rule/SameVersion;
            0      16     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      dep                            final

  public static final java.lang.String $anonfun$tryResolve$3(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #421                // Method coursier/core/Dependency.version:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final coursier.core.Version $anonfun$tryResolve$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/Version;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #437                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #439                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
         7: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$6   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final boolean $anonfun$tryResolve$5(java.lang.String, scala.Tuple2);
    descriptor: (Ljava/lang/String;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #449                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: aload_0
         5: astore_2
         6: dup
         7: ifnonnull     18
        10: pop
        11: aload_2
        12: ifnull        29
        15: goto          25
        18: aload_2
        19: invokevirtual #342                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifne          29
        25: iconst_1
        26: goto          30
        29: iconst_0
        30: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/String, class scala/Tuple2, class java/lang/String ]
          stack = [ class java/lang/Object ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0 selectedVersion$1   Ljava/lang/String;
            0      31     1   x$7   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      selectedVersion$1              final
      x$7                            final

  public static final scala.Tuple2 $anonfun$tryResolve$6(java.lang.String, coursier.core.Module);
    descriptor: (Ljava/lang/String;Lcoursier/core/Module;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #454                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
         3: getstatic     #153                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #457                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        10: aload_0
        11: invokevirtual #461                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        14: areturn
      LineNumberTable:
        line 57: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 selectedVersion$1   Ljava/lang/String;
            0      15     1     m   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      selectedVersion$1              final
      m                              final

  public coursier.params.rule.SameVersion(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #53                 // Field matchers:Lscala/collection/immutable/Set;
         5: aload_0
         6: invokespecial #466                // Method coursier/params/rule/Rule."<init>":()V
         9: return
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/SameVersion;
            0      10     1 matchers   Lscala/collection/immutable/Set;
    Signature: #463                         // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)V
    MethodParameters:
      Name                           Flags
      matchers                       final

  public static final java.lang.Object $anonfun$check$1$adapted(coursier.params.rule.SameVersion, coursier.core.Dependency);
    descriptor: (Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #468                // Method $anonfun$check$1:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
         5: invokestatic  #472                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/params/rule/SameVersion;
            0       9     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      $this                          final
      dep                            final

  public static final java.lang.Object $anonfun$tryResolve$1$adapted(coursier.params.rule.SameVersion, coursier.core.Dependency);
    descriptor: (Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #474                // Method $anonfun$tryResolve$1:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Z
         5: invokestatic  #472                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/params/rule/SameVersion;
            0       9     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      $this                          final
      dep                            final

  public static final java.lang.Object $anonfun$tryResolve$5$adapted(java.lang.String, scala.Tuple2);
    descriptor: (Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #476                // Method $anonfun$tryResolve$5:(Ljava/lang/String;Lscala/Tuple2;)Z
         5: invokestatic  #472                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 selectedVersion$1   Ljava/lang/String;
            0       9     1   x$7   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      selectedVersion$1              final
      x$7                            final

  public static final java.lang.Object $anonfun$check$2$adapted(coursier.core.Dependency, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #478                // Method $anonfun$check$2:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
         5: invokestatic  #472                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 dep$1   Lcoursier/core/Dependency;
            0       9     1   x$1   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      dep$1                          final
      x$1                            final

  public static final java.lang.Object $anonfun$tryResolve$2$adapted(coursier.core.Dependency, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #480                // Method $anonfun$tryResolve$2:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Z
         5: invokestatic  #472                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 dep$2   Lcoursier/core/Dependency;
            0       9     1   x$4   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      dep$2                          final
      x$4                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #492,  0            // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static abstract #13= #10 of #12; // UnsatisfiableRule=class coursier/error/ResolutionError$UnsatisfiableRule of class coursier/error/ResolutionError
  public static final #16= #15 of #2;     // CantForceSameVersion=class coursier/params/rule/SameVersion$CantForceSameVersion of class coursier/params/rule/SameVersion
  public static final #19= #18 of #2;     // SameVersionConflict=class coursier/params/rule/SameVersion$SameVersionConflict of class coursier/params/rule/SameVersion
  public static final #24= #21 of #23;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #29= #26 of #28;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
SourceFile: "SameVersion.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Eh\u0001B\u0014)\u0005=B\u0001B\u0012\u0001\u0003\u0006\u0004%\ta\u0012\u0005\t-\u0002\u0011\t\u0011)A\u0005\u0011\")q\u000b\u0001C\u00011\u0016!1\f\u0001\u0001]\u0011\u001d\t\u0019\t\u0001C\u0001\u0003\u000bCq!!%\u0001\t\u0003\t\u0019\nC\u0004\u0002 \u0002!\t!!)\t\u000f\u0005\u0015\u0006\u0001\"\u0011\u0002(\"9\u0011Q\u0016\u0001\u0005B\u0005=\u0006bBAa\u0001\u0011\u0005\u00131\u0019\u0005\b\u0003\u000f\u0004A\u0011IAe\u0011\u001d\t\t\u000e\u0001C\u0005\u0003\'Dq!a7\u0001\t\u0003\ni\u000eC\u0004\u0002`\u0002!\t%!9\t\u000f\u0005\r\b\u0001\"\u0011\u0002f\"9\u00111\u001e\u0001\u0005B\u00055x!\u00020)\u0011\u0003yf!B\u0014)\u0011\u0003\u0001\u0007\"B,\u0013\t\u0003Y\u0007\"\u00027\u0013\t\u0003ig\u0001B>\u0013\u0005qD\u0011\"K\u000b\u0003\u0006\u0004%\t%a\u0003\t\u0017\u00055QC!A!\u0002\u0013I\u0016q\u0002\u0005\u000b\u0003#)\"Q1A\u0005\u0002\u0005M\u0001BCA\f+\t\u0005\t\u0015!\u0003\u0002\u0016!Q\u0011\u0011D\u000b\u0003\u0006\u0004%\t!a\u0007\t\u0015\u0005\u0015RC!A!\u0002\u0013\ti\u0002\u0003\u0004X+\u0011\u0005\u0011q\u0005\u0004\u0007\u0003g\u0011\"!!\u000e\t\u0019\u00055SD!A!\u0002\u0013\ty%!\u0016\t\u0013%j\"Q1A\u0005B\u0005-\u0001bCA\u0007;\t\u0005\t\u0015!\u0003Z\u00037B!\"!\u0005\u001e\u0005\u0003\u0005\u000b\u0011BA\u000b\u0011)\ti&\bB\u0001B\u0003%\u0011q\u0004\u0005\r\u0003\u0003i\"\u0011!Q\u0001\n\u0005%\u0012q\f\u0005\u0007/v!\t!!\u0019\t\r1\u0014B\u0011AA8\u0011%\t\u0019HEA\u0001\n\u0013\t)HA\u0006TC6,g+\u001a:tS>t\'BA\u0015+\u0003\u0011\u0011X\u000f\\3\u000b\u0005-b\u0013A\u00029be\u0006l7OC\u0001.\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\u0005\u0001A\"$\b\u0005\u00022e5\t\u0001&\u0003\u00024Q\t!!+\u001e7f!\t)\u0004(D\u00017\u0015\u00059\u0014!B:dC2\f\u0017BA\u001d7\u0005\u001d\u0001&o\u001c3vGR\u0004\"aO\"\u000f\u0005q\neBA\u001fA\u001b\u0005q$BA /\u0003\u0019a$o\\8u}%\tq\'\u0003\u0002Cm\u00059\u0001/Y2lC\u001e,\u0017B\u0001#F\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\t\u0011e\'\u0001\u0005nCR\u001c\u0007.\u001a:t+\u0005A\u0005cA%N!:\u0011!j\u0013\t\u0003{YJ!\u0001\u0014\u001c\u0002\rA\u0013X\rZ3g\u0013\tquJA\u0002TKRT!\u0001\u0014\u001c\u0011\u0005E#V\"\u0001*\u000b\u0005Mc\u0013\u0001B;uS2L!!\u0016*\u0003\u001b5{G-\u001e7f\u001b\u0006$8\r[3s\u0003%i\u0017\r^2iKJ\u001c\b%\u0001\u0004=S:LGO\u0010\u000b\u00033j\u0003\"!\r\u0001\t\u000b\u0019\u001b\u0001\u0019\u0001%\u0003\u0003\r\u0003\"!X\u000b\u000f\u0005E\n\u0012aC*b[\u00164VM]:j_:\u0004\"!\r\n\u0014\u0007I\tG\r\u0005\u00026E&\u00111M\u000e\u0002\u0007\u0003:L(+\u001a4\u0011\u0005\u0015TW\"\u00014\u000b\u0005\u001dD\u0017AA5p\u0015\u0005I\u0017\u0001\u00026bm\u0006L!\u0001\u00124\u0015\u0003}\u000bQ!\u00199qYf$2!\u00178w\u0011\u0015yG\u00031\u0001q\u0003\u0019iw\u000eZ;mKB\u0011\u0011\u000f^\u0007\u0002e*\u00111\u000fL\u0001\u0005G>\u0014X-\u0003\u0002ve\n1Qj\u001c3vY\u0016DQa\u001e\u000bA\u0002a\fQa\u001c;iKJ\u00042!N=q\u0013\tQhG\u0001\u0006=e\u0016\u0004X-\u0019;fIz\u00121cU1nKZ+\'o]5p]\u000e{gN\u001a7jGR\u001c\"!F?\u0011\u0007y\f9!D\u0001\u0000\u0015\u0011\t\t!a\u0001\u0002\u0011\r|gN\u001a7jGRT1!!\u0002-\u0003\u0015)\'O]8s\u0013\r\tIa \u0002\u0010+:\u001c\u0018\r^5tM&,GMU;mKV\t\u0011,A\u0003sk2,\u0007%C\u0002*\u0003\u000f\tq!\\8ek2,7/\u0006\u0002\u0002\u0016A\u0019\u0011*\u00149\u0002\u00115|G-\u001e7fg\u0002\nQBZ8v]\u00124VM]:j_:\u001cXCAA\u000f!\u0011IU*a\b\u0011\u0007%\u000b\t#C\u0002\u0002$=\u0013aa\u0015;sS:<\u0017A\u00044pk:$g+\u001a:tS>t7\u000f\t\u000b\t\u0003S\ti#a\f\u00022A\u0019\u00111F\u000b\u000e\u0003IAQ!\u000b\u000fA\u0002eCq!!\u0005\u001d\u0001\u0004\t)\u0002C\u0004\u0002\u001aq\u0001\r!!\b\u0003)\r\u000bg\u000e\u001e$pe\u000e,7+Y7f-\u0016\u00148/[8o\'\ri\u0012q\u0007\t\u0005\u0003s\t9E\u0004\u0003\u0002<\u0005\rc\u0002BA\u001f\u0003\u0003r1!PA \u0013\u0005i\u0013bAA\u0003Y%!\u0011QIA\u0002\u0003=\u0011Vm]8mkRLwN\\#se>\u0014\u0018\u0002BA%\u0003\u0017\u0012\u0011#\u00168tCRL7OZ5bE2,\'+\u001e7f\u0015\u0011\t)%a\u0001\u0002\u0015I,7o\u001c7vi&|g\u000eE\u0002r\u0003#J1!a\u0015s\u0005)\u0011Vm]8mkRLwN\\\u0005\u0005\u0003\u001b\n9&\u0003\u0003\u0002Z\u0005\r!a\u0004*fg>dW\u000f^5p]\u0016\u0013(o\u001c:\n\u0007%\n9%A\u0004wKJ\u001c\u0018n\u001c8\n\t\u0005\u0005\u0011q\t\u000b\r\u0003G\n)\'a\u001a\u0002j\u0005-\u0014Q\u000e\t\u0004\u0003Wi\u0002bBA\'I\u0001\u0007\u0011q\n\u0005\u0006S\u0011\u0002\r!\u0017\u0005\b\u0003#!\u0003\u0019AA\u000b\u0011\u001d\ti\u0006\na\u0001\u0003?Aq!!\u0001%\u0001\u0004\tI\u0003F\u0002Z\u0003cBQAR\u0013A\u0002!\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!a\u001e\u0011\t\u0005e\u0014qP\u0007\u0003\u0003wR1!! i\u0003\u0011a\u0017M\\4\n\t\u0005\u0005\u00151\u0010\u0002\u0007\u001f\nTWm\u0019;\u0002\u000b\rDWmY6\u0015\t\u0005\u001d\u0015Q\u0012\t\u0005k\u0005%E,C\u0002\u0002\fZ\u0012aa\u00149uS>t\u0007bBAH\u000b\u0001\u0007\u0011qJ\u0001\u0004e\u0016\u001c\u0018A\u0003;ssJ+7o\u001c7wKR1\u0011QSAN\u0003;\u0003raOAL\u0003o\ty%C\u0002\u0002\u001a\u0016\u0013a!R5uQ\u0016\u0014\bbBAH\r\u0001\u0007\u0011q\n\u0005\u0007\u0003\u00031\u0001\u0019\u0001/\u0002\u0019]LG\u000f[\'bi\u000eDWM]:\u0015\u0007e\u000b\u0019\u000bC\u0003G\u000f\u0001\u0007\u0001*\u0001\u0005u_N#(/\u001b8h)\t\tI\u000b\u0005\u0003\u0002z\u0005-\u0016\u0002BA\u0012\u0003w\n\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0005\u0003c\u000b9\fE\u00026\u0003gK1!!.7\u0005\u001d\u0011un\u001c7fC:Dq!!/\n\u0001\u0004\tY,A\u0002pE*\u00042!NA_\u0013\r\tyL\u000e\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000f\u0006\u0003\u00022\u0006\u0015\u0007bBA]\u0015\u0001\u0007\u00111X\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u00111\u001a\t\u0004k\u00055\u0017bAAhm\t\u0019\u0011J\u001c;\u0002\u000bQ,\b\u000f\\3\u0016\u0005\u0005U\u0007\u0003B\u001b\u0002X\"K1!!77\u0005\u0019!V\u000f\u001d7fc\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"!!+\u0002\u0019A\u0014x\u000eZ;di\u0006\u0013\u0018\u000e^=\u0016\u0005\u0005-\u0017A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0005\u0003w\u000b9\u000fC\u0004\u0002j>\u0001\r!a3\u0002\u00039\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR!\u0011\u0011VAx\u0011\u001d\tI\u000f\u0005a\u0001\u0003\u0017\u0004"
    )
BootstrapMethods:
  0: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #71 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #73 (Lcoursier/core/Dependency;)Ljava/lang/Object;
      #74 5
      #75 1
      #73 (Lcoursier/core/Dependency;)Ljava/lang/Object;
  1: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #96 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$3:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #97 (Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #74 5
      #75 1
      #97 (Lcoursier/core/Dependency;)Lcoursier/core/Module;
  2: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #108 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #109 (Lcoursier/core/Dependency;)Ljava/lang/String;
      #74 5
      #75 1
      #109 (Lcoursier/core/Dependency;)Ljava/lang/String;
  3: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #142 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #73 (Lcoursier/core/Dependency;)Ljava/lang/Object;
      #74 5
      #75 1
      #73 (Lcoursier/core/Dependency;)Ljava/lang/Object;
  4: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #147 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$3:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #109 (Lcoursier/core/Dependency;)Ljava/lang/String;
      #74 5
      #75 1
      #109 (Lcoursier/core/Dependency;)Ljava/lang/String;
  5: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #166 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$4:(Ljava/lang/String;)Lcoursier/core/Version;
      #167 (Ljava/lang/String;)Lcoursier/core/Version;
      #74 5
      #75 1
      #167 (Ljava/lang/String;)Lcoursier/core/Version;
  6: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #209 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$5$adapted:(Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/Object;
      #211 (Lscala/Tuple2;)Ljava/lang/Object;
      #74 5
      #75 1
      #211 (Lscala/Tuple2;)Ljava/lang/Object;
  7: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #247 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$6:(Ljava/lang/String;Lcoursier/core/Module;)Lscala/Tuple2;
      #249 (Lcoursier/core/Module;)Lscala/Tuple2;
      #74 5
      #75 1
      #249 (Lcoursier/core/Module;)Lscala/Tuple2;
  8: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #407 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #409 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #74 5
      #75 1
      #409 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  9: #82 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #429 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #409 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #74 5
      #75 1
      #409 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  10: #489 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #71 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #407 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #96 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$3:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #108 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$check$4:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #142 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$1$adapted:(Lcoursier/params/rule/SameVersion;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #429 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$2$adapted:(Lcoursier/core/Dependency;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #147 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$3:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #166 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$4:(Ljava/lang/String;)Lcoursier/core/Version;
      #209 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$5$adapted:(Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/Object;
      #247 REF_invokeStatic coursier/params/rule/SameVersion.$anonfun$tryResolve$6:(Ljava/lang/String;Lcoursier/core/Module;)Lscala/Tuple2;
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 01 00 1E 01 8F 01 90 01 00 43 00 44 01 01 7E
   01 7F 01 01 93 01 94 01 00 5C 00 5D 01 00 68 00
   69 01 01 A9 01 90 01 00 8B 00 44 01 01 A6 01 7F
   01 01 AA 01 94 01 00 90 00 69 01 00 A2 00 A3 01
   01 B8 01 B9 01 00 CD 00 CE 01 00 F3 00 F4 01 00
   7A 01 30 01 01 4C 01 4D 01 00 38 00 39 01 01 50
   01 4D 01 01 57 00 70 01 00 1E 00 32 01 01 69 00
   70 01 01 6A 01 6B 01 01 77 01 78 01 01 68 01 34
   01 01 33 01 34 01 00 87 01 7A 01 00 87 00 88 01
   01 62 01 63 01 01 2F 00 22 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
