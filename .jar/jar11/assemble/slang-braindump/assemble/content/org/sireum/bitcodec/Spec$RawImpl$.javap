Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/bitcodec/Spec$RawImpl$.class
  Last modified May 29, 2022; size 1919 bytes
  SHA-256 checksum edd378759ddef1a0f6f82b36379e06d1a03f80b32b5280c711150f21d3760a98
  Compiled from "Spec.scala"
public class org.sireum.bitcodec.Spec$RawImpl$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/bitcodec/Spec$RawImpl$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               org/sireum/bitcodec/Spec$RawImpl$
   #2 = Class              #1             // org/sireum/bitcodec/Spec$RawImpl$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Spec.scala
   #6 = Utf8               org/sireum/bitcodec/Spec$RawImpl
   #7 = Class              #6             // org/sireum/bitcodec/Spec$RawImpl
   #8 = Utf8               org/sireum/bitcodec/Spec
   #9 = Class              #8             // org/sireum/bitcodec/Spec
  #10 = Utf8               RawImpl
  #11 = Utf8               RawImpl$
  #12 = Utf8               MODULE$
  #13 = Utf8               Lorg/sireum/bitcodec/Spec$RawImpl$;
  #14 = Utf8               <clinit>
  #15 = Utf8               ()V
  #16 = Utf8               <init>
  #17 = NameAndType        #16:#15        // "<init>":()V
  #18 = Methodref          #2.#17         // org/sireum/bitcodec/Spec$RawImpl$."<init>":()V
  #19 = NameAndType        #12:#13        // MODULE$:Lorg/sireum/bitcodec/Spec$RawImpl$;
  #20 = Fieldref           #2.#19         // org/sireum/bitcodec/Spec$RawImpl$.MODULE$:Lorg/sireum/bitcodec/Spec$RawImpl$;
  #21 = Utf8               apply
  #22 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)Lorg/sireum/bitcodec/Spec$RawImpl;
  #23 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lscala/Function1<TT;Lorg/sireum/Z;>;)Lorg/sireum/bitcodec/Spec$RawImpl<TT;>;
  #24 = Utf8               name
  #25 = Utf8               maxSize
  #26 = Utf8               dependsOn
  #27 = Utf8               size
  #28 = Utf8               (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
  #29 = NameAndType        #16:#28        // "<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
  #30 = Methodref          #7.#29         // org/sireum/bitcodec/Spec$RawImpl."<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
  #31 = Utf8               this
  #32 = Utf8               Ljava/lang/String;
  #33 = Utf8               Lorg/sireum/Z;
  #34 = Utf8               Lorg/sireum/IS;
  #35 = Utf8               Lscala/Function1;
  #36 = Utf8               unapply
  #37 = Utf8               (Lorg/sireum/bitcodec/Spec$RawImpl;)Lscala/Some;
  #38 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/bitcodec/Spec$RawImpl<TT;>;)Lscala/Some<Lscala/Tuple3<Lorg/sireum/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;>;>;
  #39 = Utf8               o
  #40 = Utf8               scala/Some
  #41 = Class              #40            // scala/Some
  #42 = Utf8               scala/Tuple3
  #43 = Class              #42            // scala/Tuple3
  #44 = Utf8               org/sireum/String
  #45 = Class              #44            // org/sireum/String
  #46 = Utf8               ()Ljava/lang/String;
  #47 = NameAndType        #24:#46        // name:()Ljava/lang/String;
  #48 = Methodref          #7.#47         // org/sireum/bitcodec/Spec$RawImpl.name:()Ljava/lang/String;
  #49 = Utf8               (Ljava/lang/String;)V
  #50 = NameAndType        #16:#49        // "<init>":(Ljava/lang/String;)V
  #51 = Methodref          #45.#50        // org/sireum/String."<init>":(Ljava/lang/String;)V
  #52 = Utf8               ()Lorg/sireum/Z;
  #53 = NameAndType        #25:#52        // maxSize:()Lorg/sireum/Z;
  #54 = Methodref          #7.#53         // org/sireum/bitcodec/Spec$RawImpl.maxSize:()Lorg/sireum/Z;
  #55 = Utf8               ()Lorg/sireum/IS;
  #56 = NameAndType        #26:#55        // dependsOn:()Lorg/sireum/IS;
  #57 = Methodref          #7.#56         // org/sireum/bitcodec/Spec$RawImpl.dependsOn:()Lorg/sireum/IS;
  #58 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #59 = NameAndType        #16:#58        // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #60 = Methodref          #43.#59        // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #61 = Utf8               (Ljava/lang/Object;)V
  #62 = NameAndType        #16:#61        // "<init>":(Ljava/lang/Object;)V
  #63 = Methodref          #41.#62        // scala/Some."<init>":(Ljava/lang/Object;)V
  #64 = Utf8               Lorg/sireum/bitcodec/Spec$RawImpl;
  #65 = Methodref          #4.#17         // java/lang/Object."<init>":()V
  #66 = Utf8               Code
  #67 = Utf8               LineNumberTable
  #68 = Utf8               LocalVariableTable
  #69 = Utf8               Signature
  #70 = Utf8               MethodParameters
  #71 = Utf8               InnerClasses
  #72 = Utf8               SourceFile
  #73 = Utf8               ScalaInlineInfo
  #74 = Utf8               Scala
{
  public static final org.sireum.bitcodec.Spec$RawImpl$ MODULE$;
    descriptor: Lorg/sireum/bitcodec/Spec$RawImpl$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/bitcodec/Spec$RawImpl$
         3: dup
         4: invokespecial #18                 // Method "<init>":()V
         7: putstatic     #20                 // Field MODULE$:Lorg/sireum/bitcodec/Spec$RawImpl$;
        10: return
      LineNumberTable:
        line 421: 0

  public <T extends java.lang.Object> org.sireum.bitcodec.Spec$RawImpl<T> apply(java.lang.String, org.sireum.Z, org.sireum.IS<org.sireum.Z, org.sireum.String>, scala.Function1<T, org.sireum.Z>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)Lorg/sireum/bitcodec/Spec$RawImpl;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #7                  // class org/sireum/bitcodec/Spec$RawImpl
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #30                 // Method org/sireum/bitcodec/Spec$RawImpl."<init>":(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS;Lscala/Function1;)V
        12: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/bitcodec/Spec$RawImpl$;
            0      13     1  name   Ljava/lang/String;
            0      13     2 maxSize   Lorg/sireum/Z;
            0      13     3 dependsOn   Lorg/sireum/IS;
            0      13     4  size   Lscala/Function1;
    Signature: #23                          // <T:Ljava/lang/Object;>(Ljava/lang/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lscala/Function1<TT;Lorg/sireum/Z;>;)Lorg/sireum/bitcodec/Spec$RawImpl<TT;>;
    MethodParameters:
      Name                           Flags
      name                           final
      maxSize                        final
      dependsOn                      final
      size                           final

  public <T extends java.lang.Object> scala.Some<scala.Tuple3<org.sireum.String, org.sireum.Z, org.sireum.IS<org.sireum.Z, org.sireum.String>>> unapply(org.sireum.bitcodec.Spec$RawImpl<T>);
    descriptor: (Lorg/sireum/bitcodec/Spec$RawImpl;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: new           #41                 // class scala/Some
         3: dup
         4: new           #43                 // class scala/Tuple3
         7: dup
         8: new           #45                 // class org/sireum/String
        11: dup
        12: aload_1
        13: invokevirtual #48                 // Method org/sireum/bitcodec/Spec$RawImpl.name:()Ljava/lang/String;
        16: invokespecial #51                 // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        19: aload_1
        20: invokevirtual #54                 // Method org/sireum/bitcodec/Spec$RawImpl.maxSize:()Lorg/sireum/Z;
        23: aload_1
        24: invokevirtual #57                 // Method org/sireum/bitcodec/Spec$RawImpl.dependsOn:()Lorg/sireum/IS;
        27: invokespecial #60                 // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        30: invokespecial #63                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        33: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/bitcodec/Spec$RawImpl$;
            0      34     1     o   Lorg/sireum/bitcodec/Spec$RawImpl;
    Signature: #38                          // <T:Ljava/lang/Object;>(Lorg/sireum/bitcodec/Spec$RawImpl<TT;>;)Lscala/Some<Lscala/Tuple3<Lorg/sireum/String;Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.bitcodec.Spec$RawImpl$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #65                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/Spec$RawImpl$;
}
InnerClasses:
  public static final #10= #7 of #9;      // RawImpl=class org/sireum/bitcodec/Spec$RawImpl of class org/sireum/bitcodec/Spec
  public static #11= #2 of #9;            // RawImpl$=class org/sireum/bitcodec/Spec$RawImpl$ of class org/sireum/bitcodec/Spec
SourceFile: "Spec.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 10 00 0F 01 00 15 00 16 01 00 24
   00 25 01
  Scala: length = 0x0 (unknown attribute)

