Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/ResourceRoot$ClassLoader$.class
  Last modified May 29, 2022; size 1917 bytes
  SHA-256 checksum 71979b7049ec3efd871a78aaf0a64891a7a65134bcb3b14f18c95fe43427ad8d
  Compiled from "ResourcePath.scala"
public class os.ResourceRoot$ClassLoader$ extends scala.runtime.AbstractFunction1<java.lang.ClassLoader, os.ResourceRoot$ClassLoader> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/ResourceRoot$ClassLoader$
  super_class: #5                         // scala/runtime/AbstractFunction1
  interfaces: 1, fields: 1, methods: 7, attributes: 5
Constant pool:
   #1 = Utf8               os/ResourceRoot$ClassLoader$
   #2 = Class              #1             // os/ResourceRoot$ClassLoader$
   #3 = Utf8               Lscala/runtime/AbstractFunction1<Ljava/lang/ClassLoader;Los/ResourceRoot$ClassLoader;>;Ljava/io/Serializable;
   #4 = Utf8               scala/runtime/AbstractFunction1
   #5 = Class              #4             // scala/runtime/AbstractFunction1
   #6 = Utf8               java/io/Serializable
   #7 = Class              #6             // java/io/Serializable
   #8 = Utf8               ResourcePath.scala
   #9 = Utf8               os/ResourceRoot$ClassLoader
  #10 = Class              #9             // os/ResourceRoot$ClassLoader
  #11 = Utf8               os/ResourceRoot
  #12 = Class              #11            // os/ResourceRoot
  #13 = Utf8               ClassLoader
  #14 = Utf8               ClassLoader$
  #15 = Utf8               MODULE$
  #16 = Utf8               Los/ResourceRoot$ClassLoader$;
  #17 = Utf8               <clinit>
  #18 = Utf8               ()V
  #19 = Utf8               <init>
  #20 = NameAndType        #19:#18        // "<init>":()V
  #21 = Methodref          #2.#20         // os/ResourceRoot$ClassLoader$."<init>":()V
  #22 = NameAndType        #15:#16        // MODULE$:Los/ResourceRoot$ClassLoader$;
  #23 = Fieldref           #2.#22         // os/ResourceRoot$ClassLoader$.MODULE$:Los/ResourceRoot$ClassLoader$;
  #24 = Utf8               toString
  #25 = Utf8               ()Ljava/lang/String;
  #26 = String             #13            // ClassLoader
  #27 = Utf8               this
  #28 = Utf8               apply
  #29 = Utf8               (Ljava/lang/ClassLoader;)Los/ResourceRoot$ClassLoader;
  #30 = Utf8               cl
  #31 = Utf8               (Ljava/lang/ClassLoader;)V
  #32 = NameAndType        #19:#31        // "<init>":(Ljava/lang/ClassLoader;)V
  #33 = Methodref          #10.#32        // os/ResourceRoot$ClassLoader."<init>":(Ljava/lang/ClassLoader;)V
  #34 = Utf8               Ljava/lang/ClassLoader;
  #35 = Utf8               unapply
  #36 = Utf8               (Los/ResourceRoot$ClassLoader;)Lscala/Option;
  #37 = Utf8               (Los/ResourceRoot$ClassLoader;)Lscala/Option<Ljava/lang/ClassLoader;>;
  #38 = Utf8               x$0
  #39 = Utf8               scala/None$
  #40 = Class              #39            // scala/None$
  #41 = Utf8               Lscala/None$;
  #42 = NameAndType        #15:#41        // MODULE$:Lscala/None$;
  #43 = Fieldref           #40.#42        // scala/None$.MODULE$:Lscala/None$;
  #44 = Utf8               scala/Some
  #45 = Class              #44            // scala/Some
  #46 = Utf8               ()Ljava/lang/ClassLoader;
  #47 = NameAndType        #30:#46        // cl:()Ljava/lang/ClassLoader;
  #48 = Methodref          #10.#47        // os/ResourceRoot$ClassLoader.cl:()Ljava/lang/ClassLoader;
  #49 = Utf8               (Ljava/lang/Object;)V
  #50 = NameAndType        #19:#49        // "<init>":(Ljava/lang/Object;)V
  #51 = Methodref          #45.#50        // scala/Some."<init>":(Ljava/lang/Object;)V
  #52 = Utf8               Los/ResourceRoot$ClassLoader;
  #53 = Utf8               scala/Option
  #54 = Class              #53            // scala/Option
  #55 = Utf8               writeReplace
  #56 = Utf8               ()Ljava/lang/Object;
  #57 = Utf8               scala/runtime/ModuleSerializationProxy
  #58 = Class              #57            // scala/runtime/ModuleSerializationProxy
  #59 = Utf8               (Ljava/lang/Class;)V
  #60 = NameAndType        #19:#59        // "<init>":(Ljava/lang/Class;)V
  #61 = Methodref          #58.#60        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #62 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #63 = Utf8               v1
  #64 = Utf8               java/lang/ClassLoader
  #65 = Class              #64            // java/lang/ClassLoader
  #66 = NameAndType        #28:#29        // apply:(Ljava/lang/ClassLoader;)Los/ResourceRoot$ClassLoader;
  #67 = Methodref          #2.#66         // os/ResourceRoot$ClassLoader$.apply:(Ljava/lang/ClassLoader;)Los/ResourceRoot$ClassLoader;
  #68 = Utf8               Ljava/lang/Object;
  #69 = Methodref          #5.#20         // scala/runtime/AbstractFunction1."<init>":()V
  #70 = Utf8               Code
  #71 = Utf8               LineNumberTable
  #72 = Utf8               LocalVariableTable
  #73 = Utf8               MethodParameters
  #74 = Utf8               StackMapTable
  #75 = Utf8               Signature
  #76 = Utf8               InnerClasses
  #77 = Utf8               SourceFile
  #78 = Utf8               ScalaInlineInfo
  #79 = Utf8               Scala
{
  public static final os.ResourceRoot$ClassLoader$ MODULE$;
    descriptor: Los/ResourceRoot$ClassLoader$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/ResourceRoot$ClassLoader$
         3: dup
         4: invokespecial #21                 // Method "<init>":()V
         7: putstatic     #23                 // Field MODULE$:Los/ResourceRoot$ClassLoader$;
        10: return
      LineNumberTable:
        line 80: 0

  public final java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #26                 // String ClassLoader
         2: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Los/ResourceRoot$ClassLoader$;

  public os.ResourceRoot$ClassLoader apply(java.lang.ClassLoader);
    descriptor: (Ljava/lang/ClassLoader;)Los/ResourceRoot$ClassLoader;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #10                 // class os/ResourceRoot$ClassLoader
         3: dup
         4: aload_1
         5: invokespecial #33                 // Method os/ResourceRoot$ClassLoader."<init>":(Ljava/lang/ClassLoader;)V
         8: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/ResourceRoot$ClassLoader$;
            0       9     1    cl   Ljava/lang/ClassLoader;
    MethodParameters:
      Name                           Flags
      cl                             final

  public scala.Option<java.lang.ClassLoader> unapply(os.ResourceRoot$ClassLoader);
    descriptor: (Los/ResourceRoot$ClassLoader;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #43                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          21
        10: new           #45                 // class scala/Some
        13: dup
        14: aload_1
        15: invokevirtual #48                 // Method os/ResourceRoot$ClassLoader.cl:()Ljava/lang/ClassLoader;
        18: invokespecial #51                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Los/ResourceRoot$ClassLoader$;
            0      22     1   x$0   Los/ResourceRoot$ClassLoader;
    Signature: #37                          // (Los/ResourceRoot$ClassLoader;)Lscala/Option<Ljava/lang/ClassLoader;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #58                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class os/ResourceRoot$ClassLoader$
         6: invokespecial #61                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Los/ResourceRoot$ClassLoader$;

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #65                 // class java/lang/ClassLoader
         5: invokevirtual #67                 // Method apply:(Ljava/lang/ClassLoader;)Los/ResourceRoot$ClassLoader;
         8: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/ResourceRoot$ClassLoader$;
            0       9     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  public os.ResourceRoot$ClassLoader$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #69                 // Method scala/runtime/AbstractFunction1."<init>":()V
         4: return
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/ResourceRoot$ClassLoader$;
}
InnerClasses:
  public static #13= #10 of #12;          // ClassLoader=class os/ResourceRoot$ClassLoader of class os/ResourceRoot
  public static #14= #2 of #12;           // ClassLoader$=class os/ResourceRoot$ClassLoader$ of class os/ResourceRoot
Signature: #3                           // Lscala/runtime/AbstractFunction1<Ljava/lang/ClassLoader;Los/ResourceRoot$ClassLoader;>;Ljava/io/Serializable;
SourceFile: "ResourcePath.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 13 00 12 01 00 1C 00 1D 01 00 1C
   00 3E 01 00 18 00 19 01 00 23 00 24 01 00 37 00
   38 01
  Scala: length = 0x0 (unknown attribute)

