Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.class
  Last modified May 29, 2022; size 3413 bytes
  SHA-256 checksum f446b55b45c59c6ce7b2981ae0b1e4b00e098e0b5031409b8a2b3075667b6e6c
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$MapHasParKeyValueStream<K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$MapHasParKeyValueStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 5, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$MapHasParKeyValueStream
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$MapHasParKeyValueStream
   #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamExtensions.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions
   #8 = Class              #7             // scala/collection/convert/StreamExtensions
   #9 = Utf8               MapHasParKeyValueStream
  #10 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
  #11 = Class              #10            // scala/collection/convert/StreamExtensions$StreamShape
  #12 = Utf8               StreamShape
  #13 = Utf8               cc
  #14 = Utf8               Lscala/collection/MapOps;
  #15 = Utf8               TCC;
  #16 = Utf8               $outer
  #17 = Utf8               Lscala/collection/convert/StreamExtensions;
  #18 = Utf8               asJavaParKeyStream
  #19 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
  #20 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TK;TS;TSt;>;Lscala/collection/StepperShape<TK;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
  #21 = Utf8               s
  #22 = Utf8               st
  #23 = Utf8               isEfficient
  #24 = NameAndType        #13:#14        // cc:Lscala/collection/MapOps;
  #25 = Fieldref           #2.#24         // scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.cc:Lscala/collection/MapOps;
  #26 = Utf8               scala/collection/MapOps
  #27 = Class              #26            // scala/collection/MapOps
  #28 = Utf8               keyStepper
  #29 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #30 = NameAndType        #28:#29        // keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #31 = InterfaceMethodref #27.#30        // scala/collection/MapOps.keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #32 = Utf8               mkStream
  #33 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #34 = NameAndType        #32:#33        // mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #35 = InterfaceMethodref #11.#34        // scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #36 = Utf8               this
  #37 = Utf8               Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
  #38 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape;
  #39 = Utf8               Lscala/collection/StepperShape;
  #40 = Utf8               Lscala/$less$colon$less;
  #41 = Utf8               fromStepper_st
  #42 = Utf8               Lscala/collection/Stepper;
  #43 = Utf8               fromStepper_par
  #44 = Utf8               Z
  #45 = Utf8               scala/collection/Stepper
  #46 = Class              #45            // scala/collection/Stepper
  #47 = Utf8               asJavaParValueStream
  #48 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TV;TS;TSt;>;Lscala/collection/StepperShape<TV;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
  #49 = Utf8               valueStepper
  #50 = NameAndType        #49:#29        // valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #51 = InterfaceMethodref #27.#50        // scala/collection/MapOps.valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #52 = Utf8               asJavaParStream
  #53 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<Lscala/Tuple2<TK;TV;>;TS;TSt;>;Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
  #54 = Utf8               stepper
  #55 = NameAndType        #54:#29        // stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #56 = InterfaceMethodref #27.#55        // scala/collection/MapOps.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #57 = Utf8               scala$collection$convert$StreamExtensions$MapHasParKeyValueStream$$$outer
  #58 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #59 = NameAndType        #16:#17        // $outer:Lscala/collection/convert/StreamExtensions;
  #60 = Fieldref           #2.#59         // scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.$outer:Lscala/collection/convert/StreamExtensions;
  #61 = Utf8               <init>
  #62 = Utf8               (Lscala/collection/convert/StreamExtensions;Lscala/collection/MapOps;)V
  #63 = Utf8               (TCC;)V
  #64 = Utf8               ()V
  #65 = NameAndType        #61:#64        // "<init>":()V
  #66 = Methodref          #5.#65         // java/lang/Object."<init>":()V
  #67 = Utf8               Signature
  #68 = Utf8               Code
  #69 = Utf8               StackMapTable
  #70 = Utf8               LineNumberTable
  #71 = Utf8               LocalVariableTable
  #72 = Utf8               MethodParameters
  #73 = Utf8               InnerClasses
  #74 = Utf8               SourceFile
  #75 = Utf8               ScalaInlineInfo
  #76 = Utf8               Scala
{
  private final CC cc;
    descriptor: Lscala/collection/MapOps;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #15                          // TCC;

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaParKeyStream(scala.collection.convert.StreamExtensions$StreamShape<K, S, St>, scala.collection.StepperShape<K, St>, scala.$less$colon$less<CC, scala.collection.MapOps<K, V, scala.collection.Map, ?>>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #25                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #31,  2           // InterfaceMethod scala/collection/MapOps.keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_1
        12: istore        5
        14: astore        4
        16: ifnonnull     21
        19: aconst_null
        20: athrow
        21: aload_1
        22: aload         4
        24: iload         5
        26: invokeinterface #35,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        31: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 21
          locals = [ class scala/collection/Stepper, int ]
      LineNumberTable:
        line 99: 0
        line 368: 21
        line 99: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
            0      32     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      32     2    st   Lscala/collection/StepperShape;
            0      32     3 isEfficient   Lscala/$less$colon$less;
           21      10     4 fromStepper_st   Lscala/collection/Stepper;
           21      10     5 fromStepper_par   Z
    Signature: #20                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TK;TS;TSt;>;Lscala/collection/StepperShape<TK;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final
      isEfficient                    final

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaParValueStream(scala.collection.convert.StreamExtensions$StreamShape<V, S, St>, scala.collection.StepperShape<V, St>, scala.$less$colon$less<CC, scala.collection.MapOps<K, V, scala.collection.Map, ?>>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #25                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #51,  2           // InterfaceMethod scala/collection/MapOps.valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_1
        12: istore        5
        14: astore        4
        16: ifnonnull     21
        19: aconst_null
        20: athrow
        21: aload_1
        22: aload         4
        24: iload         5
        26: invokeinterface #35,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        31: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 21
          locals = [ class scala/collection/Stepper, int ]
      LineNumberTable:
        line 110: 0
        line 368: 21
        line 110: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
            0      32     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      32     2    st   Lscala/collection/StepperShape;
            0      32     3 isEfficient   Lscala/$less$colon$less;
           21      10     4 fromStepper_st   Lscala/collection/Stepper;
           21      10     5 fromStepper_par   Z
    Signature: #48                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TV;TS;TSt;>;Lscala/collection/StepperShape<TV;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final
      isEfficient                    final

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaParStream(scala.collection.convert.StreamExtensions$StreamShape<scala.Tuple2<K, V>, S, St>, scala.collection.StepperShape<scala.Tuple2<K, V>, St>, scala.$less$colon$less<CC, scala.collection.MapOps<K, V, scala.collection.Map, ?>>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #25                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #56,  2           // InterfaceMethod scala/collection/MapOps.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_1
        12: istore        5
        14: astore        4
        16: ifnonnull     21
        19: aconst_null
        20: athrow
        21: aload_1
        22: aload         4
        24: iload         5
        26: invokeinterface #35,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        31: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 21
          locals = [ class scala/collection/Stepper, int ]
      LineNumberTable:
        line 121: 0
        line 368: 21
        line 121: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
            0      32     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      32     2    st   Lscala/collection/StepperShape;
            0      32     3 isEfficient   Lscala/$less$colon$less;
           21      10     4 fromStepper_st   Lscala/collection/Stepper;
           21      10     5 fromStepper_par   Z
    Signature: #53                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<Lscala/Tuple2<TK;TV;>;TS;TSt;>;Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final
      isEfficient                    final

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$MapHasParKeyValueStream$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #60                 // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;

  public scala.collection.convert.StreamExtensions$MapHasParKeyValueStream(CC);
    descriptor: (Lscala/collection/convert/StreamExtensions;Lscala/collection/MapOps;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #25                 // Field cc:Lscala/collection/MapOps;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #60                 // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #66                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2    cc   Lscala/collection/MapOps;
    Signature: #63                          // (TCC;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      cc                             final
}
InnerClasses:
  public #9= #2 of #8;                    // MapHasParKeyValueStream=class scala/collection/convert/StreamExtensions$MapHasParKeyValueStream of class scala/collection/convert/StreamExtensions
  public static #12= #11 of #8;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>Ljava/lang/Object;
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 3D 00 3E 00 00 12 00 13 00 00 34
   00 13 00 00 2F 00 13 00 00 39 00 3A 00
  Scala: length = 0x0 (unknown attribute)

