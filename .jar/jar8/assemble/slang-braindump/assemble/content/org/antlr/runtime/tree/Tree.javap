Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/antlr/runtime/tree/Tree.class
  Last modified May 29, 2022; size 1346 bytes
  SHA-256 checksum 746c356bccf1c2d491e912a82d1b64129fc089421a9d69c51b0a140c8dbbb506
  Compiled from "Tree.java"
public interface org.antlr.runtime.tree.Tree
  minor version: 0
  major version: 49
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #5                          // org/antlr/runtime/tree/Tree
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 27, attributes: 1
Constant pool:
   #1 = Class              #55            // org/antlr/runtime/tree/CommonTree
   #2 = Fieldref           #56.#57        // org/antlr/runtime/Token.INVALID_TOKEN:Lorg/antlr/runtime/Token;
   #3 = Methodref          #1.#58         // org/antlr/runtime/tree/CommonTree."<init>":(Lorg/antlr/runtime/Token;)V
   #4 = Fieldref           #5.#59         // org/antlr/runtime/tree/Tree.INVALID_NODE:Lorg/antlr/runtime/tree/Tree;
   #5 = Class              #60            // org/antlr/runtime/tree/Tree
   #6 = Class              #61            // java/lang/Object
   #7 = Utf8               INVALID_NODE
   #8 = Utf8               Lorg/antlr/runtime/tree/Tree;
   #9 = Utf8               getChild
  #10 = Utf8               (I)Lorg/antlr/runtime/tree/Tree;
  #11 = Utf8               getChildCount
  #12 = Utf8               ()I
  #13 = Utf8               getParent
  #14 = Utf8               ()Lorg/antlr/runtime/tree/Tree;
  #15 = Utf8               setParent
  #16 = Utf8               (Lorg/antlr/runtime/tree/Tree;)V
  #17 = Utf8               hasAncestor
  #18 = Utf8               (I)Z
  #19 = Utf8               getAncestor
  #20 = Utf8               getAncestors
  #21 = Utf8               ()Ljava/util/List;
  #22 = Utf8               Signature
  #23 = Utf8               ()Ljava/util/List<*>;
  #24 = Utf8               getChildIndex
  #25 = Utf8               setChildIndex
  #26 = Utf8               (I)V
  #27 = Utf8               freshenParentAndChildIndexes
  #28 = Utf8               ()V
  #29 = Utf8               addChild
  #30 = Utf8               setChild
  #31 = Utf8               (ILorg/antlr/runtime/tree/Tree;)V
  #32 = Utf8               deleteChild
  #33 = Utf8               (I)Ljava/lang/Object;
  #34 = Utf8               replaceChildren
  #35 = Utf8               (IILjava/lang/Object;)V
  #36 = Utf8               isNil
  #37 = Utf8               ()Z
  #38 = Utf8               getTokenStartIndex
  #39 = Utf8               setTokenStartIndex
  #40 = Utf8               getTokenStopIndex
  #41 = Utf8               setTokenStopIndex
  #42 = Utf8               dupNode
  #43 = Utf8               getType
  #44 = Utf8               getText
  #45 = Utf8               ()Ljava/lang/String;
  #46 = Utf8               getLine
  #47 = Utf8               getCharPositionInLine
  #48 = Utf8               toStringTree
  #49 = Utf8               toString
  #50 = Utf8               <clinit>
  #51 = Utf8               Code
  #52 = Utf8               LineNumberTable
  #53 = Utf8               SourceFile
  #54 = Utf8               Tree.java
  #55 = Utf8               org/antlr/runtime/tree/CommonTree
  #56 = Class              #62            // org/antlr/runtime/Token
  #57 = NameAndType        #63:#64        // INVALID_TOKEN:Lorg/antlr/runtime/Token;
  #58 = NameAndType        #65:#66        // "<init>":(Lorg/antlr/runtime/Token;)V
  #59 = NameAndType        #7:#8          // INVALID_NODE:Lorg/antlr/runtime/tree/Tree;
  #60 = Utf8               org/antlr/runtime/tree/Tree
  #61 = Utf8               java/lang/Object
  #62 = Utf8               org/antlr/runtime/Token
  #63 = Utf8               INVALID_TOKEN
  #64 = Utf8               Lorg/antlr/runtime/Token;
  #65 = Utf8               <init>
  #66 = Utf8               (Lorg/antlr/runtime/Token;)V
{
  public static final org.antlr.runtime.tree.Tree INVALID_NODE;
    descriptor: Lorg/antlr/runtime/tree/Tree;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public abstract org.antlr.runtime.tree.Tree getChild(int);
    descriptor: (I)Lorg/antlr/runtime/tree/Tree;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getChildCount();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract org.antlr.runtime.tree.Tree getParent();
    descriptor: ()Lorg/antlr/runtime/tree/Tree;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void setParent(org.antlr.runtime.tree.Tree);
    descriptor: (Lorg/antlr/runtime/tree/Tree;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean hasAncestor(int);
    descriptor: (I)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract org.antlr.runtime.tree.Tree getAncestor(int);
    descriptor: (I)Lorg/antlr/runtime/tree/Tree;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.util.List<?> getAncestors();
    descriptor: ()Ljava/util/List;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #23                          // ()Ljava/util/List<*>;

  public abstract int getChildIndex();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void setChildIndex(int);
    descriptor: (I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void freshenParentAndChildIndexes();
    descriptor: ()V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void addChild(org.antlr.runtime.tree.Tree);
    descriptor: (Lorg/antlr/runtime/tree/Tree;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void setChild(int, org.antlr.runtime.tree.Tree);
    descriptor: (ILorg/antlr/runtime/tree/Tree;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.Object deleteChild(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void replaceChildren(int, int, java.lang.Object);
    descriptor: (IILjava/lang/Object;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isNil();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getTokenStartIndex();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void setTokenStartIndex(int);
    descriptor: (I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getTokenStopIndex();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void setTokenStopIndex(int);
    descriptor: (I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract org.antlr.runtime.tree.Tree dupNode();
    descriptor: ()Lorg/antlr/runtime/tree/Tree;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getType();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.String getText();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getLine();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getCharPositionInLine();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.String toStringTree();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #1                  // class org/antlr/runtime/tree/CommonTree
         3: dup
         4: getstatic     #2                  // Field org/antlr/runtime/Token.INVALID_TOKEN:Lorg/antlr/runtime/Token;
         7: invokespecial #3                  // Method org/antlr/runtime/tree/CommonTree."<init>":(Lorg/antlr/runtime/Token;)V
        10: putstatic     #4                  // Field INVALID_NODE:Lorg/antlr/runtime/tree/Tree;
        13: return
      LineNumberTable:
        line 45: 0
}
SourceFile: "Tree.java"
