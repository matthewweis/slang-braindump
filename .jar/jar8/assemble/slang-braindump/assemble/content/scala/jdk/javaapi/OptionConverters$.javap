Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/jdk/javaapi/OptionConverters$.class
  Last modified May 29, 2022; size 3734 bytes
  SHA-256 checksum 7598da5476d8605805f42b75172b93f395d91d0bd08c8ef610f0d6cebed6a535
  Compiled from "OptionConverters.scala"
public final class scala.jdk.javaapi.OptionConverters$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/jdk/javaapi/OptionConverters$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 10, attributes: 3
Constant pool:
    #1 = Utf8               scala/jdk/javaapi/OptionConverters$
    #2 = Class              #1            // scala/jdk/javaapi/OptionConverters$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               OptionConverters.scala
    #6 = Utf8               MODULE$
    #7 = Utf8               Lscala/jdk/javaapi/OptionConverters$;
    #8 = Utf8               <clinit>
    #9 = Utf8               ()V
   #10 = Utf8               <init>
   #11 = NameAndType        #10:#9        // "<init>":()V
   #12 = Methodref          #2.#11        // scala/jdk/javaapi/OptionConverters$."<init>":()V
   #13 = NameAndType        #6:#7         // MODULE$:Lscala/jdk/javaapi/OptionConverters$;
   #14 = Fieldref           #2.#13        // scala/jdk/javaapi/OptionConverters$.MODULE$:Lscala/jdk/javaapi/OptionConverters$;
   #15 = Utf8               toJava
   #16 = Utf8               (Lscala/Option;)Ljava/util/Optional;
   #17 = Utf8               <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Ljava/util/Optional<TA;>;
   #18 = Utf8               o
   #19 = Utf8               scala/Some
   #20 = Class              #19           // scala/Some
   #21 = Utf8               value
   #22 = Utf8               ()Ljava/lang/Object;
   #23 = NameAndType        #21:#22       // value:()Ljava/lang/Object;
   #24 = Methodref          #20.#23       // scala/Some.value:()Ljava/lang/Object;
   #25 = Utf8               java/util/Optional
   #26 = Class              #25           // java/util/Optional
   #27 = Utf8               ofNullable
   #28 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;
   #29 = NameAndType        #27:#28       // ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
   #30 = Methodref          #26.#29       // java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
   #31 = Utf8               empty
   #32 = Utf8               ()Ljava/util/Optional;
   #33 = NameAndType        #31:#32       // empty:()Ljava/util/Optional;
   #34 = Methodref          #26.#33       // java/util/Optional.empty:()Ljava/util/Optional;
   #35 = Utf8               this
   #36 = Utf8               Lscala/Option;
   #37 = Utf8               toJavaOptionalDouble
   #38 = Utf8               (Lscala/Option;)Ljava/util/OptionalDouble;
   #39 = Utf8               (Lscala/Option<Ljava/lang/Double;>;)Ljava/util/OptionalDouble;
   #40 = Utf8               java/lang/Double
   #41 = Class              #40           // java/lang/Double
   #42 = Utf8               scala/runtime/BoxesRunTime
   #43 = Class              #42           // scala/runtime/BoxesRunTime
   #44 = Utf8               unboxToDouble
   #45 = Utf8               (Ljava/lang/Object;)D
   #46 = NameAndType        #44:#45       // unboxToDouble:(Ljava/lang/Object;)D
   #47 = Methodref          #43.#46       // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
   #48 = Utf8               java/util/OptionalDouble
   #49 = Class              #48           // java/util/OptionalDouble
   #50 = Utf8               of
   #51 = Utf8               (D)Ljava/util/OptionalDouble;
   #52 = NameAndType        #50:#51       // of:(D)Ljava/util/OptionalDouble;
   #53 = Methodref          #49.#52       // java/util/OptionalDouble.of:(D)Ljava/util/OptionalDouble;
   #54 = Utf8               ()Ljava/util/OptionalDouble;
   #55 = NameAndType        #31:#54       // empty:()Ljava/util/OptionalDouble;
   #56 = Methodref          #49.#55       // java/util/OptionalDouble.empty:()Ljava/util/OptionalDouble;
   #57 = Utf8               toJavaOptionalInt
   #58 = Utf8               (Lscala/Option;)Ljava/util/OptionalInt;
   #59 = Utf8               (Lscala/Option<Ljava/lang/Integer;>;)Ljava/util/OptionalInt;
   #60 = Utf8               java/lang/Integer
   #61 = Class              #60           // java/lang/Integer
   #62 = Utf8               unboxToInt
   #63 = Utf8               (Ljava/lang/Object;)I
   #64 = NameAndType        #62:#63       // unboxToInt:(Ljava/lang/Object;)I
   #65 = Methodref          #43.#64       // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   #66 = Utf8               java/util/OptionalInt
   #67 = Class              #66           // java/util/OptionalInt
   #68 = Utf8               (I)Ljava/util/OptionalInt;
   #69 = NameAndType        #50:#68       // of:(I)Ljava/util/OptionalInt;
   #70 = Methodref          #67.#69       // java/util/OptionalInt.of:(I)Ljava/util/OptionalInt;
   #71 = Utf8               ()Ljava/util/OptionalInt;
   #72 = NameAndType        #31:#71       // empty:()Ljava/util/OptionalInt;
   #73 = Methodref          #67.#72       // java/util/OptionalInt.empty:()Ljava/util/OptionalInt;
   #74 = Utf8               toJavaOptionalLong
   #75 = Utf8               (Lscala/Option;)Ljava/util/OptionalLong;
   #76 = Utf8               (Lscala/Option<Ljava/lang/Long;>;)Ljava/util/OptionalLong;
   #77 = Utf8               java/lang/Long
   #78 = Class              #77           // java/lang/Long
   #79 = Utf8               unboxToLong
   #80 = Utf8               (Ljava/lang/Object;)J
   #81 = NameAndType        #79:#80       // unboxToLong:(Ljava/lang/Object;)J
   #82 = Methodref          #43.#81       // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
   #83 = Utf8               java/util/OptionalLong
   #84 = Class              #83           // java/util/OptionalLong
   #85 = Utf8               (J)Ljava/util/OptionalLong;
   #86 = NameAndType        #50:#85       // of:(J)Ljava/util/OptionalLong;
   #87 = Methodref          #84.#86       // java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
   #88 = Utf8               ()Ljava/util/OptionalLong;
   #89 = NameAndType        #31:#88       // empty:()Ljava/util/OptionalLong;
   #90 = Methodref          #84.#89       // java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
   #91 = Utf8               toScala
   #92 = Utf8               (Ljava/util/Optional;)Lscala/Option;
   #93 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Lscala/Option<TA;>;
   #94 = Utf8               isPresent
   #95 = Utf8               ()Z
   #96 = NameAndType        #94:#95       // isPresent:()Z
   #97 = Methodref          #26.#96       // java/util/Optional.isPresent:()Z
   #98 = Utf8               get
   #99 = NameAndType        #98:#22       // get:()Ljava/lang/Object;
  #100 = Methodref          #26.#99       // java/util/Optional.get:()Ljava/lang/Object;
  #101 = Utf8               (Ljava/lang/Object;)V
  #102 = NameAndType        #10:#101      // "<init>":(Ljava/lang/Object;)V
  #103 = Methodref          #20.#102      // scala/Some."<init>":(Ljava/lang/Object;)V
  #104 = Utf8               scala/None$
  #105 = Class              #104          // scala/None$
  #106 = Utf8               Lscala/None$;
  #107 = NameAndType        #6:#106       // MODULE$:Lscala/None$;
  #108 = Fieldref           #105.#107     // scala/None$.MODULE$:Lscala/None$;
  #109 = Utf8               Ljava/util/Optional;
  #110 = Utf8               (Ljava/util/OptionalDouble;)Lscala/Option;
  #111 = Utf8               (Ljava/util/OptionalDouble;)Lscala/Option<Ljava/lang/Double;>;
  #112 = Methodref          #49.#96       // java/util/OptionalDouble.isPresent:()Z
  #113 = Utf8               getAsDouble
  #114 = Utf8               ()D
  #115 = NameAndType        #113:#114     // getAsDouble:()D
  #116 = Methodref          #49.#115      // java/util/OptionalDouble.getAsDouble:()D
  #117 = Utf8               valueOf
  #118 = Utf8               (D)Ljava/lang/Double;
  #119 = NameAndType        #117:#118     // valueOf:(D)Ljava/lang/Double;
  #120 = Methodref          #41.#119      // java/lang/Double.valueOf:(D)Ljava/lang/Double;
  #121 = Utf8               Ljava/util/OptionalDouble;
  #122 = Utf8               (Ljava/util/OptionalInt;)Lscala/Option;
  #123 = Utf8               (Ljava/util/OptionalInt;)Lscala/Option<Ljava/lang/Integer;>;
  #124 = Methodref          #67.#96       // java/util/OptionalInt.isPresent:()Z
  #125 = Utf8               getAsInt
  #126 = Utf8               ()I
  #127 = NameAndType        #125:#126     // getAsInt:()I
  #128 = Methodref          #67.#127      // java/util/OptionalInt.getAsInt:()I
  #129 = Utf8               (I)Ljava/lang/Integer;
  #130 = NameAndType        #117:#129     // valueOf:(I)Ljava/lang/Integer;
  #131 = Methodref          #61.#130      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #132 = Utf8               Ljava/util/OptionalInt;
  #133 = Utf8               (Ljava/util/OptionalLong;)Lscala/Option;
  #134 = Utf8               (Ljava/util/OptionalLong;)Lscala/Option<Ljava/lang/Long;>;
  #135 = Methodref          #84.#96       // java/util/OptionalLong.isPresent:()Z
  #136 = Utf8               getAsLong
  #137 = Utf8               ()J
  #138 = NameAndType        #136:#137     // getAsLong:()J
  #139 = Methodref          #84.#138      // java/util/OptionalLong.getAsLong:()J
  #140 = Utf8               (J)Ljava/lang/Long;
  #141 = NameAndType        #117:#140     // valueOf:(J)Ljava/lang/Long;
  #142 = Methodref          #78.#141      // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #143 = Utf8               Ljava/util/OptionalLong;
  #144 = Methodref          #4.#11        // java/lang/Object."<init>":()V
  #145 = Utf8               Code
  #146 = Utf8               LineNumberTable
  #147 = Utf8               StackMapTable
  #148 = Utf8               LocalVariableTable
  #149 = Utf8               Signature
  #150 = Utf8               MethodParameters
  #151 = Utf8               SourceFile
  #152 = Utf8               ScalaInlineInfo
  #153 = Utf8               Scala
{
  public static final scala.jdk.javaapi.OptionConverters$ MODULE$;
    descriptor: Lscala/jdk/javaapi/OptionConverters$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/jdk/javaapi/OptionConverters$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lscala/jdk/javaapi/OptionConverters$;
        10: return
      LineNumberTable:
        line 30: 0

  public <A extends java.lang.Object> java.util.Optional<A> toJava(scala.Option<A>);
    descriptor: (Lscala/Option;)Ljava/util/Optional;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: aload_1
         1: instanceof    #20                 // class scala/Some
         4: ifeq          21
         7: aload_1
         8: checkcast     #20                 // class scala/Some
        11: invokevirtual #24                 // Method scala/Some.value:()Ljava/lang/Object;
        14: invokestatic  #30                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
        17: astore_2
        18: goto          25
        21: invokestatic  #34                 // Method java/util/Optional.empty:()Ljava/util/Optional;
        24: astore_2
        25: aload_2
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ class java/util/Optional ]
      LineNumberTable:
        line 33: 0
        line 34: 21
        line 32: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      27     1     o   Lscala/Option;
    Signature: #17                          // <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Ljava/util/Optional<TA;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public java.util.OptionalDouble toJavaOptionalDouble(scala.Option<java.lang.Double>);
    descriptor: (Lscala/Option;)Ljava/util/OptionalDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: instanceof    #20                 // class scala/Some
         4: ifeq          27
         7: aload_1
         8: checkcast     #20                 // class scala/Some
        11: invokevirtual #24                 // Method scala/Some.value:()Ljava/lang/Object;
        14: checkcast     #41                 // class java/lang/Double
        17: invokestatic  #47                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        20: invokestatic  #53                 // Method java/util/OptionalDouble.of:(D)Ljava/util/OptionalDouble;
        23: astore_2
        24: goto          31
        27: invokestatic  #56                 // Method java/util/OptionalDouble.empty:()Ljava/util/OptionalDouble;
        30: astore_2
        31: aload_2
        32: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 27 /* same */
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ class java/util/OptionalDouble ]
      LineNumberTable:
        line 42: 0
        line 43: 27
        line 41: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      33     1     o   Lscala/Option;
    Signature: #39                          // (Lscala/Option<Ljava/lang/Double;>;)Ljava/util/OptionalDouble;
    MethodParameters:
      Name                           Flags
      o                              final

  public java.util.OptionalInt toJavaOptionalInt(scala.Option<java.lang.Integer>);
    descriptor: (Lscala/Option;)Ljava/util/OptionalInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: aload_1
         1: instanceof    #20                 // class scala/Some
         4: ifeq          27
         7: aload_1
         8: checkcast     #20                 // class scala/Some
        11: invokevirtual #24                 // Method scala/Some.value:()Ljava/lang/Object;
        14: checkcast     #61                 // class java/lang/Integer
        17: invokestatic  #65                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        20: invokestatic  #70                 // Method java/util/OptionalInt.of:(I)Ljava/util/OptionalInt;
        23: astore_2
        24: goto          31
        27: invokestatic  #73                 // Method java/util/OptionalInt.empty:()Ljava/util/OptionalInt;
        30: astore_2
        31: aload_2
        32: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 27 /* same */
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ class java/util/OptionalInt ]
      LineNumberTable:
        line 51: 0
        line 52: 27
        line 50: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      33     1     o   Lscala/Option;
    Signature: #59                          // (Lscala/Option<Ljava/lang/Integer;>;)Ljava/util/OptionalInt;
    MethodParameters:
      Name                           Flags
      o                              final

  public java.util.OptionalLong toJavaOptionalLong(scala.Option<java.lang.Long>);
    descriptor: (Lscala/Option;)Ljava/util/OptionalLong;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: instanceof    #20                 // class scala/Some
         4: ifeq          27
         7: aload_1
         8: checkcast     #20                 // class scala/Some
        11: invokevirtual #24                 // Method scala/Some.value:()Ljava/lang/Object;
        14: checkcast     #78                 // class java/lang/Long
        17: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        20: invokestatic  #87                 // Method java/util/OptionalLong.of:(J)Ljava/util/OptionalLong;
        23: astore_2
        24: goto          31
        27: invokestatic  #90                 // Method java/util/OptionalLong.empty:()Ljava/util/OptionalLong;
        30: astore_2
        31: aload_2
        32: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 27 /* same */
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ class java/util/OptionalLong ]
      LineNumberTable:
        line 60: 0
        line 61: 27
        line 59: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      33     1     o   Lscala/Option;
    Signature: #76                          // (Lscala/Option<Ljava/lang/Long;>;)Ljava/util/OptionalLong;
    MethodParameters:
      Name                           Flags
      o                              final

  public <A extends java.lang.Object> scala.Option<A> toScala(java.util.Optional<A>);
    descriptor: (Ljava/util/Optional;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #97                 // Method java/util/Optional.isPresent:()Z
         4: ifeq          19
         7: new           #20                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #100                // Method java/util/Optional.get:()Ljava/lang/Object;
        15: invokespecial #103                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        18: areturn
        19: getstatic     #108                // Field scala/None$.MODULE$:Lscala/None$;
        22: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 19 /* same */
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      23     1     o   Ljava/util/Optional;
    Signature: #93                          // <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public scala.Option<java.lang.Double> toScala(java.util.OptionalDouble);
    descriptor: (Ljava/util/OptionalDouble;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #112                // Method java/util/OptionalDouble.isPresent:()Z
         4: ifeq          22
         7: new           #20                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #116                // Method java/util/OptionalDouble.getAsDouble:()D
        15: invokestatic  #120                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        18: invokespecial #103                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
        22: getstatic     #108                // Field scala/None$.MODULE$:Lscala/None$;
        25: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      26     1     o   Ljava/util/OptionalDouble;
    Signature: #111                         // (Ljava/util/OptionalDouble;)Lscala/Option<Ljava/lang/Double;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public scala.Option<java.lang.Integer> toScala(java.util.OptionalInt);
    descriptor: (Ljava/util/OptionalInt;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #124                // Method java/util/OptionalInt.isPresent:()Z
         4: ifeq          22
         7: new           #20                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #128                // Method java/util/OptionalInt.getAsInt:()I
        15: invokestatic  #131                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        18: invokespecial #103                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
        22: getstatic     #108                // Field scala/None$.MODULE$:Lscala/None$;
        25: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      26     1     o   Ljava/util/OptionalInt;
    Signature: #123                         // (Ljava/util/OptionalInt;)Lscala/Option<Ljava/lang/Integer;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public scala.Option<java.lang.Long> toScala(java.util.OptionalLong);
    descriptor: (Ljava/util/OptionalLong;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #135                // Method java/util/OptionalLong.isPresent:()Z
         4: ifeq          22
         7: new           #20                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #139                // Method java/util/OptionalLong.getAsLong:()J
        15: invokestatic  #142                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        18: invokespecial #103                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
        22: getstatic     #108                // Field scala/None$.MODULE$:Lscala/None$;
        25: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/jdk/javaapi/OptionConverters$;
            0      26     1     o   Ljava/util/OptionalLong;
    Signature: #134                         // (Ljava/util/OptionalLong;)Lscala/Option<Ljava/lang/Long;>;
    MethodParameters:
      Name                           Flags
      o                              final

  private scala.jdk.javaapi.OptionConverters$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #144                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/javaapi/OptionConverters$;
}
SourceFile: "OptionConverters.scala"
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 0A 00 09 01 00 0F 00 10 01 00 25
   00 26 01 00 39 00 3A 01 00 4A 00 4B 01 00 5B 00
   5C 01 00 5B 00 6E 01 00 5B 00 7A 01 00 5B 00 85
   01
  Scala: length = 0x0 (unknown attribute)

