Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/DiffMatchPatch$Patch.class
  Last modified May 29, 2022; size 2376 bytes
  SHA-256 checksum dcd85629061195df36250afab2842776e7c068a0134db3236a8d496531df9e1d
  Compiled from "DiffMatchPatch.java"
public class org.sireum.DiffMatchPatch$Patch
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                         // org/sireum/DiffMatchPatch$Patch
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 5, methods: 2, attributes: 2
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Object."<init>":()V
    #2 = Class              #4            // java/lang/Object
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Class              #8            // java/util/LinkedList
    #8 = Utf8               java/util/LinkedList
    #9 = Methodref          #7.#3         // java/util/LinkedList."<init>":()V
   #10 = Fieldref           #11.#12       // org/sireum/DiffMatchPatch$Patch.diffs:Ljava/util/LinkedList;
   #11 = Class              #13           // org/sireum/DiffMatchPatch$Patch
   #12 = NameAndType        #14:#15       // diffs:Ljava/util/LinkedList;
   #13 = Utf8               org/sireum/DiffMatchPatch$Patch
   #14 = Utf8               diffs
   #15 = Utf8               Ljava/util/LinkedList;
   #16 = Fieldref           #11.#17       // org/sireum/DiffMatchPatch$Patch.length1:I
   #17 = NameAndType        #18:#19       // length1:I
   #18 = Utf8               length1
   #19 = Utf8               I
   #20 = Class              #21           // java/lang/StringBuilder
   #21 = Utf8               java/lang/StringBuilder
   #22 = Methodref          #20.#3        // java/lang/StringBuilder."<init>":()V
   #23 = Fieldref           #11.#24       // org/sireum/DiffMatchPatch$Patch.start1:I
   #24 = NameAndType        #25:#19       // start1:I
   #25 = Utf8               start1
   #26 = Methodref          #20.#27       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #27 = NameAndType        #28:#29       // append:(I)Ljava/lang/StringBuilder;
   #28 = Utf8               append
   #29 = Utf8               (I)Ljava/lang/StringBuilder;
   #30 = String             #31           // ,0
   #31 = Utf8               ,0
   #32 = Methodref          #20.#33       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #33 = NameAndType        #28:#34       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #34 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #35 = Methodref          #20.#36       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #36 = NameAndType        #37:#38       // toString:()Ljava/lang/String;
   #37 = Utf8               toString
   #38 = Utf8               ()Ljava/lang/String;
   #39 = Methodref          #40.#41       // java/lang/Integer.toString:(I)Ljava/lang/String;
   #40 = Class              #42           // java/lang/Integer
   #41 = NameAndType        #37:#43       // toString:(I)Ljava/lang/String;
   #42 = Utf8               java/lang/Integer
   #43 = Utf8               (I)Ljava/lang/String;
   #44 = String             #45           // ,
   #45 = Utf8               ,
   #46 = Fieldref           #11.#47       // org/sireum/DiffMatchPatch$Patch.length2:I
   #47 = NameAndType        #48:#19       // length2:I
   #48 = Utf8               length2
   #49 = Fieldref           #11.#50       // org/sireum/DiffMatchPatch$Patch.start2:I
   #50 = NameAndType        #51:#19       // start2:I
   #51 = Utf8               start2
   #52 = String             #53           // @@ -
   #53 = Utf8               @@ -
   #54 = String             #55           //  +
   #55 = Utf8                +
   #56 = String             #57           //  @@\n
   #57 = Utf8                @@\n
   #58 = Methodref          #7.#59        // java/util/LinkedList.iterator:()Ljava/util/Iterator;
   #59 = NameAndType        #60:#61       // iterator:()Ljava/util/Iterator;
   #60 = Utf8               iterator
   #61 = Utf8               ()Ljava/util/Iterator;
   #62 = InterfaceMethodref #63.#64       // java/util/Iterator.hasNext:()Z
   #63 = Class              #65           // java/util/Iterator
   #64 = NameAndType        #66:#67       // hasNext:()Z
   #65 = Utf8               java/util/Iterator
   #66 = Utf8               hasNext
   #67 = Utf8               ()Z
   #68 = InterfaceMethodref #63.#69       // java/util/Iterator.next:()Ljava/lang/Object;
   #69 = NameAndType        #70:#71       // next:()Ljava/lang/Object;
   #70 = Utf8               next
   #71 = Utf8               ()Ljava/lang/Object;
   #72 = Class              #73           // org/sireum/DiffMatchPatch$Diff
   #73 = Utf8               org/sireum/DiffMatchPatch$Diff
   #74 = Fieldref           #75.#76       // org/sireum/DiffMatchPatch$1.$SwitchMap$org$sireum$DiffMatchPatch$Operation:[I
   #75 = Class              #77           // org/sireum/DiffMatchPatch$1
   #76 = NameAndType        #78:#79       // $SwitchMap$org$sireum$DiffMatchPatch$Operation:[I
   #77 = Utf8               org/sireum/DiffMatchPatch$1
   #78 = Utf8               $SwitchMap$org$sireum$DiffMatchPatch$Operation
   #79 = Utf8               [I
   #80 = Fieldref           #72.#81       // org/sireum/DiffMatchPatch$Diff.operation:Lorg/sireum/DiffMatchPatch$Operation;
   #81 = NameAndType        #82:#83       // operation:Lorg/sireum/DiffMatchPatch$Operation;
   #82 = Utf8               operation
   #83 = Utf8               Lorg/sireum/DiffMatchPatch$Operation;
   #84 = Methodref          #85.#86       // org/sireum/DiffMatchPatch$Operation.ordinal:()I
   #85 = Class              #87           // org/sireum/DiffMatchPatch$Operation
   #86 = NameAndType        #88:#89       // ordinal:()I
   #87 = Utf8               org/sireum/DiffMatchPatch$Operation
   #88 = Utf8               ordinal
   #89 = Utf8               ()I
   #90 = Methodref          #20.#91       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #91 = NameAndType        #28:#92       // append:(C)Ljava/lang/StringBuilder;
   #92 = Utf8               (C)Ljava/lang/StringBuilder;
   #93 = Fieldref           #72.#94       // org/sireum/DiffMatchPatch$Diff.text:Ljava/lang/String;
   #94 = NameAndType        #95:#96       // text:Ljava/lang/String;
   #95 = Utf8               text
   #96 = Utf8               Ljava/lang/String;
   #97 = String             #98           // UTF-8
   #98 = Utf8               UTF-8
   #99 = Methodref          #100.#101     // java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #100 = Class              #102          // java/net/URLEncoder
  #101 = NameAndType        #103:#104     // encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #102 = Utf8               java/net/URLEncoder
  #103 = Utf8               encode
  #104 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #105 = Methodref          #106.#107     // java/lang/String.replace:(CC)Ljava/lang/String;
  #106 = Class              #108          // java/lang/String
  #107 = NameAndType        #109:#110     // replace:(CC)Ljava/lang/String;
  #108 = Utf8               java/lang/String
  #109 = Utf8               replace
  #110 = Utf8               (CC)Ljava/lang/String;
  #111 = String             #112          // \n
  #112 = Utf8               \n
  #113 = Class              #114          // java/io/UnsupportedEncodingException
  #114 = Utf8               java/io/UnsupportedEncodingException
  #115 = Class              #116          // java/lang/Error
  #116 = Utf8               java/lang/Error
  #117 = String             #118          // This system does not support UTF-8.
  #118 = Utf8               This system does not support UTF-8.
  #119 = Methodref          #115.#120     // java/lang/Error."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #120 = NameAndType        #5:#121       // "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #121 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V
  #122 = Methodref          #123.#124     // org/sireum/DiffMatchPatch.access$000:(Ljava/lang/String;)Ljava/lang/String;
  #123 = Class              #125          // org/sireum/DiffMatchPatch
  #124 = NameAndType        #126:#127     // access$000:(Ljava/lang/String;)Ljava/lang/String;
  #125 = Utf8               org/sireum/DiffMatchPatch
  #126 = Utf8               access$000
  #127 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #128 = Utf8               Signature
  #129 = Utf8               Ljava/util/LinkedList<Lorg/sireum/DiffMatchPatch$Diff;>;
  #130 = Utf8               Code
  #131 = Utf8               LineNumberTable
  #132 = Utf8               StackMapTable
  #133 = Utf8               SourceFile
  #134 = Utf8               DiffMatchPatch.java
  #135 = Utf8               InnerClasses
  #136 = Utf8               Patch
  #137 = Utf8               Diff
  #138 = Utf8               Operation
{
  public java.util.LinkedList<org.sireum.DiffMatchPatch$Diff> diffs;
    descriptor: Ljava/util/LinkedList;
    flags: (0x0001) ACC_PUBLIC
    Signature: #129                         // Ljava/util/LinkedList<Lorg/sireum/DiffMatchPatch$Diff;>;

  public int start1;
    descriptor: I
    flags: (0x0001) ACC_PUBLIC

  public int start2;
    descriptor: I
    flags: (0x0001) ACC_PUBLIC

  public int length1;
    descriptor: I
    flags: (0x0001) ACC_PUBLIC

  public int length2;
    descriptor: I
    flags: (0x0001) ACC_PUBLIC

  public org.sireum.DiffMatchPatch$Patch();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #7                  // class java/util/LinkedList
         8: dup
         9: invokespecial #9                  // Method java/util/LinkedList."<init>":()V
        12: putfield      #10                 // Field diffs:Ljava/util/LinkedList;
        15: return
      LineNumberTable:
        line 2405: 0
        line 2406: 4
        line 2407: 15

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=1
         0: aload_0
         1: getfield      #16                 // Field length1:I
         4: ifne          33
         7: new           #20                 // class java/lang/StringBuilder
        10: dup
        11: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
        14: aload_0
        15: getfield      #23                 // Field start1:I
        18: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        21: ldc           #30                 // String ,0
        23: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: astore_1
        30: goto          86
        33: aload_0
        34: getfield      #16                 // Field length1:I
        37: iconst_1
        38: if_icmpne     54
        41: aload_0
        42: getfield      #23                 // Field start1:I
        45: iconst_1
        46: iadd
        47: invokestatic  #39                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
        50: astore_1
        51: goto          86
        54: new           #20                 // class java/lang/StringBuilder
        57: dup
        58: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
        61: aload_0
        62: getfield      #23                 // Field start1:I
        65: iconst_1
        66: iadd
        67: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        70: ldc           #44                 // String ,
        72: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        75: aload_0
        76: getfield      #16                 // Field length1:I
        79: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        82: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        85: astore_1
        86: aload_0
        87: getfield      #46                 // Field length2:I
        90: ifne          119
        93: new           #20                 // class java/lang/StringBuilder
        96: dup
        97: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       100: aload_0
       101: getfield      #49                 // Field start2:I
       104: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       107: ldc           #30                 // String ,0
       109: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       112: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       115: astore_2
       116: goto          172
       119: aload_0
       120: getfield      #46                 // Field length2:I
       123: iconst_1
       124: if_icmpne     140
       127: aload_0
       128: getfield      #49                 // Field start2:I
       131: iconst_1
       132: iadd
       133: invokestatic  #39                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       136: astore_2
       137: goto          172
       140: new           #20                 // class java/lang/StringBuilder
       143: dup
       144: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       147: aload_0
       148: getfield      #49                 // Field start2:I
       151: iconst_1
       152: iadd
       153: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       156: ldc           #44                 // String ,
       158: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       161: aload_0
       162: getfield      #46                 // Field length2:I
       165: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       168: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       171: astore_2
       172: new           #20                 // class java/lang/StringBuilder
       175: dup
       176: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       179: astore_3
       180: aload_3
       181: ldc           #52                 // String @@ -
       183: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       186: aload_1
       187: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: ldc           #54                 // String  +
       192: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       195: aload_2
       196: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       199: ldc           #56                 // String  @@\n
       201: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       204: pop
       205: aload_0
       206: getfield      #10                 // Field diffs:Ljava/util/LinkedList;
       209: invokevirtual #58                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       212: astore        4
       214: aload         4
       216: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       221: ifeq          350
       224: aload         4
       226: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       231: checkcast     #72                 // class org/sireum/DiffMatchPatch$Diff
       234: astore        5
       236: getstatic     #74                 // Field org/sireum/DiffMatchPatch$1.$SwitchMap$org$sireum$DiffMatchPatch$Operation:[I
       239: aload         5
       241: getfield      #80                 // Field org/sireum/DiffMatchPatch$Diff.operation:Lorg/sireum/DiffMatchPatch$Operation;
       244: invokevirtual #84                 // Method org/sireum/DiffMatchPatch$Operation.ordinal:()I
       247: iaload
       248: tableswitch   { // 1 to 3
                       1: 276
                       2: 286
                       3: 296
                 default: 303
            }
       276: aload_3
       277: bipush        43
       279: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       282: pop
       283: goto          303
       286: aload_3
       287: bipush        45
       289: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       292: pop
       293: goto          303
       296: aload_3
       297: bipush        32
       299: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       302: pop
       303: aload_3
       304: aload         5
       306: getfield      #93                 // Field org/sireum/DiffMatchPatch$Diff.text:Ljava/lang/String;
       309: ldc           #97                 // String UTF-8
       311: invokestatic  #99                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       314: bipush        43
       316: bipush        32
       318: invokevirtual #105                // Method java/lang/String.replace:(CC)Ljava/lang/String;
       321: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       324: ldc           #111                // String \n
       326: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       329: pop
       330: goto          347
       333: astore        6
       335: new           #115                // class java/lang/Error
       338: dup
       339: ldc           #117                // String This system does not support UTF-8.
       341: aload         6
       343: invokespecial #119                // Method java/lang/Error."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       346: athrow
       347: goto          214
       350: aload_3
       351: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       354: invokestatic  #122                // Method org/sireum/DiffMatchPatch.access$000:(Ljava/lang/String;)Ljava/lang/String;
       357: areturn
      Exception table:
         from    to  target type
           303   330   333   Class java/io/UnsupportedEncodingException
      LineNumberTable:
        line 2417: 0
        line 2418: 7
        line 2419: 33
        line 2420: 41
        line 2422: 54
        line 2424: 86
        line 2425: 93
        line 2426: 119
        line 2427: 127
        line 2429: 140
        line 2431: 172
        line 2432: 180
        line 2433: 201
        line 2435: 205
        line 2436: 236
        line 2438: 276
        line 2439: 283
        line 2441: 286
        line 2442: 293
        line 2444: 296
        line 2448: 303
        line 2449: 326
        line 2453: 330
        line 2450: 333
        line 2452: 335
        line 2454: 347
        line 2455: 350
      StackMapTable: number_of_entries = 14
        frame_type = 33 /* same */
        frame_type = 20 /* same */
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class java/lang/String ]
        frame_type = 32 /* same */
        frame_type = 20 /* same */
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class java/lang/String ]
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ class java/lang/StringBuilder, class java/util/Iterator ]
        frame_type = 252 /* append */
          offset_delta = 61
          locals = [ class org/sireum/DiffMatchPatch$Diff ]
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 6 /* same */
        frame_type = 93 /* same_locals_1_stack_item */
          stack = [ class java/io/UnsupportedEncodingException ]
        frame_type = 250 /* chop */
          offset_delta = 13
        frame_type = 250 /* chop */
          offset_delta = 2
}
SourceFile: "DiffMatchPatch.java"
InnerClasses:
  public static #136= #11 of #123;        // Patch=class org/sireum/DiffMatchPatch$Patch of class org/sireum/DiffMatchPatch
  public static #137= #72 of #123;        // Diff=class org/sireum/DiffMatchPatch$Diff of class org/sireum/DiffMatchPatch
  static #75;                             // class org/sireum/DiffMatchPatch$1
  public static final #138= #85 of #123;  // Operation=class org/sireum/DiffMatchPatch$Operation of class org/sireum/DiffMatchPatch
