Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/math/Numeric$FloatIsFractional.class
  Last modified May 29, 2022; size 4450 bytes
  SHA-256 checksum 583b57956a66b3a1536ca351ad832c1cf05ffe24e73f207ad6be0cc86844f24e
  Compiled from "Numeric.scala"
public interface scala.math.Numeric$FloatIsFractional extends scala.math.Fractional<java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/math/Numeric$FloatIsFractional
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 27, attributes: 5
Constant pool:
    #1 = Utf8               scala/math/Numeric$FloatIsFractional
    #2 = Class              #1            // scala/math/Numeric$FloatIsFractional
    #3 = Utf8               Ljava/lang/Object;Lscala/math/Fractional<Ljava/lang/Object;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Fractional
    #7 = Class              #6            // scala/math/Fractional
    #8 = Utf8               Numeric.scala
    #9 = Utf8               scala/math/Numeric
   #10 = Class              #9            // scala/math/Numeric
   #11 = Utf8               FloatIsFractional
   #12 = Utf8               plus$
   #13 = Utf8               (Lscala/math/Numeric$FloatIsFractional;FF)F
   #14 = Utf8               $this
   #15 = Utf8               x
   #16 = Utf8               y
   #17 = Utf8               plus
   #18 = Utf8               (FF)F
   #19 = NameAndType        #17:#18       // plus:(FF)F
   #20 = InterfaceMethodref #2.#19        // scala/math/Numeric$FloatIsFractional.plus:(FF)F
   #21 = Utf8               Lscala/math/Numeric$FloatIsFractional;
   #22 = Utf8               F
   #23 = Utf8               this
   #24 = Utf8               minus$
   #25 = Utf8               minus
   #26 = NameAndType        #25:#18       // minus:(FF)F
   #27 = InterfaceMethodref #2.#26        // scala/math/Numeric$FloatIsFractional.minus:(FF)F
   #28 = Utf8               times$
   #29 = Utf8               times
   #30 = NameAndType        #29:#18       // times:(FF)F
   #31 = InterfaceMethodref #2.#30        // scala/math/Numeric$FloatIsFractional.times:(FF)F
   #32 = Utf8               negate$
   #33 = Utf8               (Lscala/math/Numeric$FloatIsFractional;F)F
   #34 = Utf8               negate
   #35 = Utf8               (F)F
   #36 = NameAndType        #34:#35       // negate:(F)F
   #37 = InterfaceMethodref #2.#36        // scala/math/Numeric$FloatIsFractional.negate:(F)F
   #38 = Utf8               fromInt$
   #39 = Utf8               (Lscala/math/Numeric$FloatIsFractional;I)F
   #40 = Utf8               fromInt
   #41 = Utf8               (I)F
   #42 = NameAndType        #40:#41       // fromInt:(I)F
   #43 = InterfaceMethodref #2.#42        // scala/math/Numeric$FloatIsFractional.fromInt:(I)F
   #44 = Utf8               I
   #45 = Utf8               parseString$
   #46 = Utf8               (Lscala/math/Numeric$FloatIsFractional;Ljava/lang/String;)Lscala/Option;
   #47 = Utf8               str
   #48 = Utf8               parseString
   #49 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #50 = NameAndType        #48:#49       // parseString:(Ljava/lang/String;)Lscala/Option;
   #51 = InterfaceMethodref #2.#50        // scala/math/Numeric$FloatIsFractional.parseString:(Ljava/lang/String;)Lscala/Option;
   #52 = Utf8               Ljava/lang/String;
   #53 = Utf8               (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
   #54 = Utf8               scala/collection/StringParsers$
   #55 = Class              #54           // scala/collection/StringParsers$
   #56 = Utf8               MODULE$
   #57 = Utf8               Lscala/collection/StringParsers$;
   #58 = NameAndType        #56:#57       // MODULE$:Lscala/collection/StringParsers$;
   #59 = Fieldref           #55.#58       // scala/collection/StringParsers$.MODULE$:Lscala/collection/StringParsers$;
   #60 = Utf8               checkFloatFormat
   #61 = Utf8               (Ljava/lang/String;)Z
   #62 = NameAndType        #60:#61       // checkFloatFormat:(Ljava/lang/String;)Z
   #63 = Methodref          #55.#62       // scala/collection/StringParsers$.checkFloatFormat:(Ljava/lang/String;)Z
   #64 = Utf8               scala/Some
   #65 = Class              #64           // scala/Some
   #66 = Utf8               java/lang/Float
   #67 = Class              #66           // java/lang/Float
   #68 = Utf8               parseFloat
   #69 = Utf8               (Ljava/lang/String;)F
   #70 = NameAndType        #68:#69       // parseFloat:(Ljava/lang/String;)F
   #71 = Methodref          #67.#70       // java/lang/Float.parseFloat:(Ljava/lang/String;)F
   #72 = Utf8               valueOf
   #73 = Utf8               (F)Ljava/lang/Float;
   #74 = NameAndType        #72:#73       // valueOf:(F)Ljava/lang/Float;
   #75 = Methodref          #67.#74       // java/lang/Float.valueOf:(F)Ljava/lang/Float;
   #76 = Utf8               <init>
   #77 = Utf8               (Ljava/lang/Object;)V
   #78 = NameAndType        #76:#77       // "<init>":(Ljava/lang/Object;)V
   #79 = Methodref          #65.#78       // scala/Some."<init>":(Ljava/lang/Object;)V
   #80 = Utf8               scala/None$
   #81 = Class              #80           // scala/None$
   #82 = Utf8               Lscala/None$;
   #83 = NameAndType        #56:#82       // MODULE$:Lscala/None$;
   #84 = Fieldref           #81.#83       // scala/None$.MODULE$:Lscala/None$;
   #85 = Utf8               toInt$
   #86 = Utf8               (Lscala/math/Numeric$FloatIsFractional;F)I
   #87 = Utf8               toInt
   #88 = Utf8               (F)I
   #89 = NameAndType        #87:#88       // toInt:(F)I
   #90 = InterfaceMethodref #2.#89        // scala/math/Numeric$FloatIsFractional.toInt:(F)I
   #91 = Utf8               toLong$
   #92 = Utf8               (Lscala/math/Numeric$FloatIsFractional;F)J
   #93 = Utf8               toLong
   #94 = Utf8               (F)J
   #95 = NameAndType        #93:#94       // toLong:(F)J
   #96 = InterfaceMethodref #2.#95        // scala/math/Numeric$FloatIsFractional.toLong:(F)J
   #97 = Utf8               toFloat$
   #98 = Utf8               toFloat
   #99 = NameAndType        #98:#35       // toFloat:(F)F
  #100 = InterfaceMethodref #2.#99        // scala/math/Numeric$FloatIsFractional.toFloat:(F)F
  #101 = Utf8               toDouble$
  #102 = Utf8               (Lscala/math/Numeric$FloatIsFractional;F)D
  #103 = Utf8               toDouble
  #104 = Utf8               (F)D
  #105 = NameAndType        #103:#104     // toDouble:(F)D
  #106 = InterfaceMethodref #2.#105       // scala/math/Numeric$FloatIsFractional.toDouble:(F)D
  #107 = Utf8               div$
  #108 = Utf8               div
  #109 = NameAndType        #108:#18      // div:(FF)F
  #110 = InterfaceMethodref #2.#109       // scala/math/Numeric$FloatIsFractional.div:(FF)F
  #111 = Utf8               abs$
  #112 = Utf8               abs
  #113 = NameAndType        #112:#35      // abs:(F)F
  #114 = InterfaceMethodref #2.#113       // scala/math/Numeric$FloatIsFractional.abs:(F)F
  #115 = Utf8               scala/math/package$
  #116 = Class              #115          // scala/math/package$
  #117 = Utf8               Lscala/math/package$;
  #118 = NameAndType        #56:#117      // MODULE$:Lscala/math/package$;
  #119 = Fieldref           #116.#118     // scala/math/package$.MODULE$:Lscala/math/package$;
  #120 = Utf8               java/lang/Math
  #121 = Class              #120          // java/lang/Math
  #122 = Methodref          #121.#113     // java/lang/Math.abs:(F)F
  #123 = Utf8               sign$
  #124 = Utf8               sign
  #125 = NameAndType        #124:#35      // sign:(F)F
  #126 = InterfaceMethodref #2.#125       // scala/math/Numeric$FloatIsFractional.sign:(F)F
  #127 = Utf8               signum
  #128 = NameAndType        #127:#35      // signum:(F)F
  #129 = Methodref          #121.#128     // java/lang/Math.signum:(F)F
  #130 = Utf8               $init$
  #131 = Utf8               (Lscala/math/Numeric$FloatIsFractional;)V
  #132 = Utf8               Code
  #133 = Utf8               LineNumberTable
  #134 = Utf8               LocalVariableTable
  #135 = Utf8               MethodParameters
  #136 = Utf8               StackMapTable
  #137 = Utf8               Signature
  #138 = Utf8               InnerClasses
  #139 = Utf8               SourceFile
  #140 = Utf8               ScalaInlineInfo
  #141 = Utf8               Scala
{
  public static float plus$(scala.math.Numeric$FloatIsFractional, float, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;FF)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: invokespecial #20                 // InterfaceMethod plus:(FF)F
         6: freturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       7     1     x   F
            0       7     2     y   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default float plus(float, float);
    descriptor: (FF)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: fload_1
         1: fload_2
         2: fadd
         3: freturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       4     1     x   F
            0       4     2     y   F
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static float minus$(scala.math.Numeric$FloatIsFractional, float, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;FF)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: invokespecial #27                 // InterfaceMethod minus:(FF)F
         6: freturn
      LineNumberTable:
        line 143: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       7     1     x   F
            0       7     2     y   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default float minus(float, float);
    descriptor: (FF)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: fload_1
         1: fload_2
         2: fsub
         3: freturn
      LineNumberTable:
        line 143: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       4     1     x   F
            0       4     2     y   F
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static float times$(scala.math.Numeric$FloatIsFractional, float, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;FF)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: invokespecial #31                 // InterfaceMethod times:(FF)F
         6: freturn
      LineNumberTable:
        line 144: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       7     1     x   F
            0       7     2     y   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default float times(float, float);
    descriptor: (FF)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: fload_1
         1: fload_2
         2: fmul
         3: freturn
      LineNumberTable:
        line 144: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       4     1     x   F
            0       4     2     y   F
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static float negate$(scala.math.Numeric$FloatIsFractional, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;F)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokespecial #37                 // InterfaceMethod negate:(F)F
         5: freturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default float negate(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: fneg
         2: freturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       3     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public static float fromInt$(scala.math.Numeric$FloatIsFractional, int);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;I)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #43                 // InterfaceMethod fromInt:(I)F
         5: freturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default float fromInt(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: i2f
         2: freturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       3     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public static scala.Option parseString$(scala.math.Numeric$FloatIsFractional, java.lang.String);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #51                 // InterfaceMethod parseString:(Ljava/lang/String;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1   str   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      str                            final

  public default scala.Option<java.lang.Object> parseString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #59                 // Field scala/collection/StringParsers$.MODULE$:Lscala/collection/StringParsers$;
         3: aload_1
         4: invokevirtual #63                 // Method scala/collection/StringParsers$.checkFloatFormat:(Ljava/lang/String;)Z
         7: ifeq          25
        10: new           #65                 // class scala/Some
        13: dup
        14: aload_1
        15: invokestatic  #71                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
        18: invokestatic  #75                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
        21: invokespecial #79                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        24: areturn
        25: getstatic     #84                 // Field scala/None$.MODULE$:Lscala/None$;
        28: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 25 /* same */
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lscala/math/Numeric$FloatIsFractional;
            0      29     1   str   Ljava/lang/String;
    Signature: #53                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      str                            final

  public static int toInt$(scala.math.Numeric$FloatIsFractional, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;F)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokespecial #90                 // InterfaceMethod toInt:(F)I
         5: ireturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default int toInt(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: f2i
         2: ireturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       3     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public static long toLong$(scala.math.Numeric$FloatIsFractional, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;F)J
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokespecial #96                 // InterfaceMethod toLong:(F)J
         5: lreturn
      LineNumberTable:
        line 149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default long toLong(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: fload_1
         1: f2l
         2: lreturn
      LineNumberTable:
        line 149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       3     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public static float toFloat$(scala.math.Numeric$FloatIsFractional, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;F)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokespecial #100                // InterfaceMethod toFloat:(F)F
         5: freturn
      LineNumberTable:
        line 150: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default float toFloat(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: freturn
      LineNumberTable:
        line 150: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       2     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public static double toDouble$(scala.math.Numeric$FloatIsFractional, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;F)D
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokespecial #106                // InterfaceMethod toDouble:(F)D
         5: dreturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default double toDouble(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: fload_1
         1: f2d
         2: dreturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       3     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public static float div$(scala.math.Numeric$FloatIsFractional, float, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;FF)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: fload_1
         2: fload_2
         3: invokespecial #110                // InterfaceMethod div:(FF)F
         6: freturn
      LineNumberTable:
        line 152: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       7     1     x   F
            0       7     2     y   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default float div(float, float);
    descriptor: (FF)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: fload_1
         1: fload_2
         2: fdiv
         3: freturn
      LineNumberTable:
        line 152: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       4     1     x   F
            0       4     2     y   F
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static float abs$(scala.math.Numeric$FloatIsFractional, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;F)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokespecial #114                // InterfaceMethod abs:(F)F
         5: freturn
      LineNumberTable:
        line 154: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default float abs(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #119                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: fload_1
         5: invokestatic  #122                // Method java/lang/Math.abs:(F)F
         8: freturn
      LineNumberTable:
        line 154: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       9     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public static float sign$(scala.math.Numeric$FloatIsFractional, float);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;F)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokespecial #126                // InterfaceMethod sign:(F)F
         5: freturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$FloatIsFractional;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default float sign(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #119                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: fload_1
         5: invokestatic  #129                // Method java/lang/Math.signum:(F)F
         8: freturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$FloatIsFractional;
            0       9     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public static void $init$(scala.math.Numeric$FloatIsFractional);
    descriptor: (Lscala/math/Numeric$FloatIsFractional;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/math/Numeric$FloatIsFractional;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public static #11= #2 of #10;           // FloatIsFractional=class scala/math/Numeric$FloatIsFractional of class scala/math/Numeric
Signature: #3                           // Ljava/lang/Object;Lscala/math/Fractional<Ljava/lang/Object;>;
SourceFile: "Numeric.scala"
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 00 00 1B 00 82 00 83 01 00 70 00 23 00 00 6F
   00 21 01 00 6C 00 12 00 00 6B 00 0D 01 00 28 00
   29 00 00 26 00 27 01 00 19 00 12 00 00 18 00 0D
   01 00 22 00 23 00 00 20 00 21 01 00 30 00 31 00
   00 2D 00 2E 01 00 11 00 12 00 00 0C 00 0D 01 00
   7C 00 23 00 00 7B 00 21 01 00 1D 00 12 00 00 1C
   00 0D 01 00 67 00 68 00 00 65 00 66 01 00 62 00
   23 00 00 61 00 21 01 00 57 00 58 00 00 55 00 56
   01 00 5D 00 5E 00 00 5B 00 5C 01
  Scala: length = 0x0 (unknown attribute)

