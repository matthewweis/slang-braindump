Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/cli/CliOpt$Type$Choice.class
  Last modified May 29, 2022; size 8432 bytes
  SHA-256 checksum 66889cd861ac7044dda4891297fdc9f264e5f3119a3657285ef8e43ea6d0a2eb
  Compiled from "CliOpt.scala"
public final class org.sireum.cli.CliOpt$Type$Choice implements org.sireum.cli.CliOpt$Type
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/cli/CliOpt$Type$Choice
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 27, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/cli/CliOpt$Type$Choice
    #2 = Class              #1            // org/sireum/cli/CliOpt$Type$Choice
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/cli/CliOpt$Type
    #6 = Class              #5            // org/sireum/cli/CliOpt$Type
    #7 = Utf8               CliOpt.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/cli/CliOpt
   #14 = Class              #13           // org/sireum/cli/CliOpt
   #15 = Utf8               Type
   #16 = Utf8               org/sireum/cli/CliOpt$Type$
   #17 = Class              #16           // org/sireum/cli/CliOpt$Type$
   #18 = Utf8               Type$
   #19 = Utf8               Choice
   #20 = Utf8               hashCode
   #21 = Utf8               I
   #22 = Utf8               $content
   #23 = Utf8               Lscala/collection/immutable/Seq;
   #24 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #25 = Utf8               _name
   #26 = Utf8               Ljava/lang/String;
   #27 = Utf8               _bsep
   #28 = Utf8               Z
   #29 = Utf8               _sep
   #30 = Utf8               _elements
   #31 = Utf8               Lorg/sireum/IS;
   #32 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
   #33 = Utf8               bitmap$0
   #34 = Utf8               B
   #35 = Utf8               hash
   #36 = Utf8               ()Lorg/sireum/Z;
   #37 = Utf8               org/sireum/DatatypeSig
   #38 = Class              #37           // org/sireum/DatatypeSig
   #39 = Utf8               hash$
   #40 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #41 = NameAndType        #39:#40       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #42 = InterfaceMethodref #38.#41       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #43 = Utf8               this
   #44 = Utf8               Lorg/sireum/cli/CliOpt$Type$Choice;
   #45 = Utf8               $cannotMixImmutableAndMutable
   #46 = Utf8               ()Lscala/runtime/Nothing$;
   #47 = Utf8               org/sireum/Immutable
   #48 = Class              #47           // org/sireum/Immutable
   #49 = Utf8               $cannotMixImmutableAndMutable$
   #50 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #51 = NameAndType        #49:#50       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #52 = InterfaceMethodref #48.#51       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #53 = Utf8               $hasEquals
   #54 = Utf8               ()Z
   #55 = Utf8               $hasEquals$
   #56 = Utf8               (Lorg/sireum/Immutable;)Z
   #57 = NameAndType        #55:#56       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #58 = InterfaceMethodref #48.#57       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #59 = Utf8               $hasString
   #60 = Utf8               $hasString$
   #61 = NameAndType        #60:#56       // $hasString$:(Lorg/sireum/Immutable;)Z
   #62 = InterfaceMethodref #48.#61       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #63 = Utf8               $clone
   #64 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #65 = Utf8               org/sireum/$internal/ImmutableMarker
   #66 = Class              #65           // org/sireum/$internal/ImmutableMarker
   #67 = Utf8               $clone$
   #68 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #69 = NameAndType        #67:#68       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #70 = InterfaceMethodref #66.#69       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #71 = Utf8               name
   #72 = Utf8               ()Ljava/lang/String;
   #73 = NameAndType        #25:#26       // _name:Ljava/lang/String;
   #74 = Fieldref           #2.#73        // org/sireum/cli/CliOpt$Type$Choice._name:Ljava/lang/String;
   #75 = Utf8               getName
   #76 = Utf8               sep
   #77 = Utf8               ()Lorg/sireum/Option;
   #78 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/C;>;
   #79 = NameAndType        #27:#28       // _bsep:Z
   #80 = Fieldref           #2.#79        // org/sireum/cli/CliOpt$Type$Choice._bsep:Z
   #81 = Utf8               org/sireum/None$
   #82 = Class              #81           // org/sireum/None$
   #83 = Utf8               MODULE$
   #84 = Utf8               Lorg/sireum/None$;
   #85 = NameAndType        #83:#84       // MODULE$:Lorg/sireum/None$;
   #86 = Fieldref           #82.#85       // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #87 = Utf8               apply
   #88 = Utf8               ()Lorg/sireum/None;
   #89 = NameAndType        #87:#88       // apply:()Lorg/sireum/None;
   #90 = Methodref          #82.#89       // org/sireum/None$.apply:()Lorg/sireum/None;
   #91 = Utf8               org/sireum/Some$
   #92 = Class              #91           // org/sireum/Some$
   #93 = Utf8               Lorg/sireum/Some$;
   #94 = NameAndType        #83:#93       // MODULE$:Lorg/sireum/Some$;
   #95 = Fieldref           #92.#94       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #96 = Utf8               org/sireum/C
   #97 = Class              #96           // org/sireum/C
   #98 = NameAndType        #29:#21       // _sep:I
   #99 = Fieldref           #2.#98        // org/sireum/cli/CliOpt$Type$Choice._sep:I
  #100 = Utf8               <init>
  #101 = Utf8               (I)V
  #102 = NameAndType        #100:#101     // "<init>":(I)V
  #103 = Methodref          #97.#102      // org/sireum/C."<init>":(I)V
  #104 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #105 = NameAndType        #87:#104      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #106 = Methodref          #92.#105      // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #107 = Utf8               getSep
  #108 = NameAndType        #76:#77       // sep:()Lorg/sireum/Option;
  #109 = Methodref          #2.#108       // org/sireum/cli/CliOpt$Type$Choice.sep:()Lorg/sireum/Option;
  #110 = Utf8               elements
  #111 = Utf8               ()Lorg/sireum/IS;
  #112 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
  #113 = NameAndType        #30:#31       // _elements:Lorg/sireum/IS;
  #114 = Fieldref           #2.#113       // org/sireum/cli/CliOpt$Type$Choice._elements:Lorg/sireum/IS;
  #115 = Utf8               getElements
  #116 = Utf8               toString
  #117 = NameAndType        #59:#54       // $hasString:()Z
  #118 = Methodref          #2.#117       // org/sireum/cli/CliOpt$Type$Choice.$hasString:()Z
  #119 = Utf8               string$
  #120 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #121 = NameAndType        #119:#120     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #122 = InterfaceMethodref #38.#121      // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #123 = Utf8               java/lang/StringBuilder
  #124 = Class              #123          // java/lang/StringBuilder
  #125 = Utf8               ()V
  #126 = NameAndType        #100:#125     // "<init>":()V
  #127 = Methodref          #124.#126     // java/lang/StringBuilder."<init>":()V
  #128 = String             #19           // Choice
  #129 = Utf8               append
  #130 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #131 = NameAndType        #129:#130     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #132 = Methodref          #124.#131     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #133 = Utf8               (C)Ljava/lang/StringBuilder;
  #134 = NameAndType        #129:#133     // append:(C)Ljava/lang/StringBuilder;
  #135 = Methodref          #124.#134     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #136 = Utf8               org/sireum/String$
  #137 = Class              #136          // org/sireum/String$
  #138 = Utf8               Lorg/sireum/String$;
  #139 = NameAndType        #83:#138      // MODULE$:Lorg/sireum/String$;
  #140 = Fieldref           #137.#139     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #141 = Utf8               org/sireum/String
  #142 = Class              #141          // org/sireum/String
  #143 = NameAndType        #71:#72       // name:()Ljava/lang/String;
  #144 = Methodref          #2.#143       // org/sireum/cli/CliOpt$Type$Choice.name:()Ljava/lang/String;
  #145 = Utf8               (Ljava/lang/String;)V
  #146 = NameAndType        #100:#145     // "<init>":(Ljava/lang/String;)V
  #147 = Methodref          #142.#146     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #148 = Utf8               escape
  #149 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #150 = NameAndType        #148:#149     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #151 = Methodref          #137.#150     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #152 = Utf8               ,
  #153 = String             #152          // ,
  #154 = NameAndType        #110:#111     // elements:()Lorg/sireum/IS;
  #155 = Methodref          #2.#154       // org/sireum/cli/CliOpt$Type$Choice.elements:()Lorg/sireum/IS;
  #156 = NameAndType        #116:#72      // toString:()Ljava/lang/String;
  #157 = Methodref          #124.#156     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #158 = Utf8               sb
  #159 = Utf8               Ljava/lang/StringBuilder;
  #160 = Utf8               java/lang/String
  #161 = Class              #160          // java/lang/String
  #162 = Utf8               string
  #163 = Methodref          #2.#156       // org/sireum/cli/CliOpt$Type$Choice.toString:()Ljava/lang/String;
  #164 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #165 = NameAndType        #87:#164      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #166 = Methodref          #137.#165     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #167 = Utf8               hashCode$lzycompute
  #168 = Utf8               ()I
  #169 = NameAndType        #33:#34       // bitmap$0:B
  #170 = Fieldref           #2.#169       // org/sireum/cli/CliOpt$Type$Choice.bitmap$0:B
  #171 = NameAndType        #53:#54       // $hasEquals:()Z
  #172 = Methodref          #2.#171       // org/sireum/cli/CliOpt$Type$Choice.$hasEquals:()Z
  #173 = NameAndType        #20:#168      // hashCode:()I
  #174 = Methodref          #4.#173       // java/lang/Object.hashCode:()I
  #175 = Utf8               scala/package$
  #176 = Class              #175          // scala/package$
  #177 = Utf8               Lscala/package$;
  #178 = NameAndType        #83:#177      // MODULE$:Lscala/package$;
  #179 = Fieldref           #176.#178     // scala/package$.MODULE$:Lscala/package$;
  #180 = Utf8               Seq
  #181 = Utf8               ()Lscala/collection/immutable/Seq$;
  #182 = NameAndType        #180:#181     // Seq:()Lscala/collection/immutable/Seq$;
  #183 = Methodref          #176.#182     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #184 = Utf8               scala/runtime/ScalaRunTime$
  #185 = Class              #184          // scala/runtime/ScalaRunTime$
  #186 = Utf8               Lscala/runtime/ScalaRunTime$;
  #187 = NameAndType        #83:#186      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #188 = Fieldref           #185.#187     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #189 = Utf8               getClass
  #190 = Utf8               ()Ljava/lang/Class;
  #191 = NameAndType        #189:#190     // getClass:()Ljava/lang/Class;
  #192 = Methodref          #2.#191       // org/sireum/cli/CliOpt$Type$Choice.getClass:()Ljava/lang/Class;
  #193 = Utf8               java/lang/Class
  #194 = Class              #193          // java/lang/Class
  #195 = NameAndType        #75:#72       // getName:()Ljava/lang/String;
  #196 = Methodref          #194.#195     // java/lang/Class.getName:()Ljava/lang/String;
  #197 = Utf8               genericWrapArray
  #198 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #199 = NameAndType        #197:#198     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #200 = Methodref          #185.#199     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #201 = Utf8               scala/collection/immutable/Seq$
  #202 = Class              #201          // scala/collection/immutable/Seq$
  #203 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #204 = NameAndType        #87:#203      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #205 = Methodref          #202.#204     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #206 = Utf8               scala/collection/Seq
  #207 = Class              #206          // scala/collection/Seq
  #208 = InterfaceMethodref #207.#173     // scala/collection/Seq.hashCode:()I
  #209 = NameAndType        #20:#21       // hashCode:I
  #210 = Fieldref           #2.#209       // org/sireum/cli/CliOpt$Type$Choice.hashCode:I
  #211 = Utf8               java/lang/Throwable
  #212 = Class              #211          // java/lang/Throwable
  #213 = NameAndType        #167:#168     // hashCode$lzycompute:()I
  #214 = Methodref          #2.#213       // org/sireum/cli/CliOpt$Type$Choice.hashCode$lzycompute:()I
  #215 = Utf8               equals
  #216 = Utf8               (Ljava/lang/Object;)Z
  #217 = Utf8               o
  #218 = NameAndType        #215:#216     // equals:(Ljava/lang/Object;)Z
  #219 = Methodref          #4.#218       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #220 = Methodref          #2.#173       // org/sireum/cli/CliOpt$Type$Choice.hashCode:()I
  #221 = Utf8               Ljava/lang/Object;
  #222 = Utf8               org/sireum/Option
  #223 = Class              #222          // org/sireum/Option
  #224 = Utf8               org/sireum/IS
  #225 = Class              #224          // org/sireum/IS
  #226 = Utf8               (Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$Choice;
  #227 = Utf8               (Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/cli/CliOpt$Type$Choice;
  #228 = Utf8               (Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)V
  #229 = NameAndType        #100:#228     // "<init>":(Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)V
  #230 = Methodref          #2.#229       // org/sireum/cli/CliOpt$Type$Choice."<init>":(Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)V
  #231 = Utf8               Lorg/sireum/Option;
  #232 = Utf8               apply$default$1
  #233 = Utf8               apply$default$2
  #234 = Utf8               apply$default$3
  #235 = Utf8               $content$lzycompute
  #236 = Utf8               ()Lscala/collection/immutable/Seq;
  #237 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #238 = Utf8               scala/Tuple2
  #239 = Class              #238          // scala/Tuple2
  #240 = Utf8               type
  #241 = String             #240          // type
  #242 = Utf8               List
  #243 = Utf8               ()Lscala/collection/immutable/List$;
  #244 = NameAndType        #242:#243     // List:()Lscala/collection/immutable/List$;
  #245 = Methodref          #176.#244     // scala/package$.List:()Lscala/collection/immutable/List$;
  #246 = Utf8               org
  #247 = String             #246          // org
  #248 = Utf8               sireum
  #249 = String             #248          // sireum
  #250 = Utf8               cli
  #251 = String             #250          // cli
  #252 = Utf8               [Ljava/lang/Object;
  #253 = Class              #252          // "[Ljava/lang/Object;"
  #254 = Utf8               wrapRefArray
  #255 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #256 = NameAndType        #254:#255     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #257 = Methodref          #185.#256     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #258 = Utf8               scala/collection/immutable/List$
  #259 = Class              #258          // scala/collection/immutable/List$
  #260 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #261 = NameAndType        #87:#260      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #262 = Methodref          #259.#261     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #263 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #264 = NameAndType        #100:#263     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #265 = Methodref          #239.#264     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #266 = String             #71           // name
  #267 = String             #76           // sep
  #268 = String             #110          // elements
  #269 = Utf8               scala/collection/immutable/Seq
  #270 = Class              #269          // scala/collection/immutable/Seq
  #271 = NameAndType        #22:#23       // $content:Lscala/collection/immutable/Seq;
  #272 = Fieldref           #2.#271       // org/sireum/cli/CliOpt$Type$Choice.$content:Lscala/collection/immutable/Seq;
  #273 = NameAndType        #235:#236     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #274 = Methodref          #2.#273       // org/sireum/cli/CliOpt$Type$Choice.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #275 = Utf8               ()Ljava/lang/Object;
  #276 = NameAndType        #63:#64       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #277 = Methodref          #2.#276       // org/sireum/cli/CliOpt$Type$Choice.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #278 = Utf8               $anonfun$_sep$4
  #279 = Utf8               scala/runtime/BoxesRunTime
  #280 = Class              #279          // scala/runtime/BoxesRunTime
  #281 = Utf8               unboxToInt
  #282 = Utf8               (Ljava/lang/Object;)I
  #283 = NameAndType        #281:#282     // unboxToInt:(Ljava/lang/Object;)I
  #284 = Methodref          #280.#283     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #285 = Utf8               (Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
  #286 = Utf8               __name
  #287 = Utf8               __sep
  #288 = Utf8               __elements
  #289 = Methodref          #4.#126       // java/lang/Object."<init>":()V
  #290 = Utf8               $init$
  #291 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #292 = NameAndType        #290:#291     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #293 = InterfaceMethodref #66.#292      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #294 = Utf8               (Lorg/sireum/Immutable;)V
  #295 = NameAndType        #290:#294     // $init$:(Lorg/sireum/Immutable;)V
  #296 = InterfaceMethodref #48.#295      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #297 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #298 = NameAndType        #290:#297     // $init$:(Lorg/sireum/DatatypeSig;)V
  #299 = InterfaceMethodref #38.#298      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #300 = Utf8               isEmpty
  #301 = NameAndType        #300:#54      // isEmpty:()Z
  #302 = InterfaceMethodref #223.#301     // org/sireum/Option.isEmpty:()Z
  #303 = MethodType         #275          //  ()Ljava/lang/Object;
  #304 = Utf8               $anonfun$_sep$4$adapted
  #305 = NameAndType        #304:#275     // $anonfun$_sep$4$adapted:()Ljava/lang/Object;
  #306 = Methodref          #2.#305       // org/sireum/cli/CliOpt$Type$Choice.$anonfun$_sep$4$adapted:()Ljava/lang/Object;
  #307 = MethodHandle       6:#306        // REF_invokeStatic org/sireum/cli/CliOpt$Type$Choice.$anonfun$_sep$4$adapted:()Ljava/lang/Object;
  #308 = Integer            1
  #309 = Utf8               java/lang/invoke/LambdaMetafactory
  #310 = Class              #309          // java/lang/invoke/LambdaMetafactory
  #311 = Utf8               altMetafactory
  #312 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #313 = NameAndType        #311:#312     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #314 = Methodref          #310.#313     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #315 = MethodHandle       6:#314        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #316 = Utf8               ()Lscala/Function0;
  #317 = NameAndType        #87:#316      // apply:()Lscala/Function0;
  #318 = InvokeDynamic      #0:#317       // #0:apply:()Lscala/Function0;
  #319 = Utf8               getOrElse
  #320 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #321 = NameAndType        #319:#320     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #322 = InterfaceMethodref #223.#321     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #323 = Utf8               value
  #324 = NameAndType        #323:#168     // value:()I
  #325 = Methodref          #97.#324      // org/sireum/C.value:()I
  #326 = NameAndType        #278:#168     // $anonfun$_sep$4:()I
  #327 = Methodref          #2.#326       // org/sireum/cli/CliOpt$Type$Choice.$anonfun$_sep$4:()I
  #328 = Utf8               $deserializeLambda$
  #329 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #330 = Utf8               scala/runtime/LambdaDeserialize
  #331 = Class              #330          // scala/runtime/LambdaDeserialize
  #332 = Utf8               bootstrap
  #333 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #334 = NameAndType        #332:#333     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #335 = Methodref          #331.#334     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #336 = MethodHandle       6:#335        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #337 = Utf8               lambdaDeserialize
  #338 = NameAndType        #337:#329     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #339 = InvokeDynamic      #1:#338       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #340 = Utf8               Signature
  #341 = Utf8               Code
  #342 = Utf8               LineNumberTable
  #343 = Utf8               LocalVariableTable
  #344 = Utf8               StackMapTable
  #345 = Utf8               MethodParameters
  #346 = Utf8               InnerClasses
  #347 = Utf8               SourceFile
  #348 = Utf8               BootstrapMethods
  #349 = Utf8               ScalaInlineInfo
  #350 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #24                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final java.lang.String _name;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bsep;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int _sep;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _elements;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #32                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #42                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #52                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #74                 // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #74                 // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public org.sireum.Option<org.sireum.C> sep();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #80                 // Field _bsep:Z
         4: ifeq          16
         7: getstatic     #86                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #90                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #95                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #97                 // class org/sireum/C
        22: dup
        23: aload_0
        24: getfield      #99                 // Field _sep:I
        27: invokespecial #103                // Method org/sireum/C."<init>":(I)V
        30: invokevirtual #106                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #78                          // ()Lorg/sireum/Option<Lorg/sireum/C;>;

  public org.sireum.Option<org.sireum.C> getSep();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method sep:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #78                          // ()Lorg/sireum/Option<Lorg/sireum/C;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> elements();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field _elements:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getElements();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field _elements:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #118                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #122                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          113
        14: new           #124                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #127                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #128                // String Choice
        25: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #135                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #140                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #142                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #144                // Method name:()Ljava/lang/String;
        48: invokespecial #147                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #151                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: ldc           #153                // String ,
        61: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: getstatic     #140                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        69: aload_0
        70: invokevirtual #109                // Method sep:()Lorg/sireum/Option;
        73: invokevirtual #151                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: ldc           #153                // String ,
        83: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: getstatic     #140                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        91: aload_0
        92: invokevirtual #155                // Method elements:()Lorg/sireum/IS;
        95: invokevirtual #151                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        98: invokevirtual #132                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: bipush        41
       105: invokevirtual #135                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: invokevirtual #157                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       113: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 98
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      91     1    sb   Ljava/lang/StringBuilder;
            0     114     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #118                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #122                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #140                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #163                // Method toString:()Ljava/lang/String;
        21: invokevirtual #166                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #170                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     109
        15: aload_0
        16: aload_0
        17: invokevirtual #172                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #174                // Method java/lang/Object.hashCode:()I
        27: goto          95
        30: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_4
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #192                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #196                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: new           #142                // class org/sireum/String
        58: dup
        59: aload_0
        60: invokevirtual #144                // Method name:()Ljava/lang/String;
        63: invokespecial #147                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        66: aastore
        67: dup
        68: iconst_2
        69: aload_0
        70: invokevirtual #109                // Method sep:()Lorg/sireum/Option;
        73: aastore
        74: dup
        75: iconst_3
        76: aload_0
        77: invokevirtual #155                // Method elements:()Lorg/sireum/IS;
        80: aastore
        81: invokevirtual #200                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        84: invokevirtual #205                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        87: checkcast     #207                // class scala/collection/Seq
        90: invokeinterface #208,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        95: putfield      #210                // Field hashCode:I
        98: aload_0
        99: aload_0
       100: getfield      #170                // Field bitmap$0:B
       103: iconst_1
       104: ior
       105: i2b
       106: putfield      #170                // Field bitmap$0:B
       109: aload_1
       110: monitorexit
       111: goto          117
       114: aload_1
       115: monitorexit
       116: athrow
       117: aload_0
       118: getfield      #210                // Field hashCode:I
       121: ireturn
      Exception table:
         from    to  target type
             4   109   114   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class org/sireum/cli/CliOpt$Type$Choice ]
          stack = [ class org/sireum/cli/CliOpt$Type$Choice ]
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class org/sireum/cli/CliOpt$Type$Choice ]
          stack = [ class org/sireum/cli/CliOpt$Type$Choice, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     122     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #170                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #214                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #210                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #172                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #219                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          169
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          169
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/cli/CliOpt$Type$Choice
        30: ifeq          160
        33: aload_3
        34: checkcast     #2                  // class org/sireum/cli/CliOpt$Type$Choice
        37: astore        4
        39: aload_0
        40: invokevirtual #220                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #220                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          156
        55: aload_0
        56: invokevirtual #144                // Method name:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #144                // Method name:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          155
        79: aload         5
        81: invokevirtual #219                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          155
        87: aload_0
        88: invokevirtual #109                // Method sep:()Lorg/sireum/Option;
        91: aload         4
        93: invokevirtual #109                // Method sep:()Lorg/sireum/Option;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          155
       111: aload         6
       113: invokevirtual #219                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          155
       119: aload_0
       120: invokevirtual #155                // Method elements:()Lorg/sireum/IS;
       123: aload         4
       125: invokevirtual #155                // Method elements:()Lorg/sireum/IS;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          155
       143: aload         7
       145: invokevirtual #219                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          155
       151: iconst_1
       152: goto          156
       155: iconst_0
       156: istore_2
       157: goto          168
       160: goto          163
       163: iconst_0
       164: istore_2
       165: goto          168
       168: iload_2
       169: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Choice ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Choice, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Choice, class java/lang/String, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Choice, class java/lang/String, class org/sireum/Option, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Choice ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/cli/CliOpt$Type$Choice, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     170     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
            0     170     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.cli.CliOpt$Type$Choice apply(java.lang.String, org.sireum.Option<org.sireum.C>, org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$Choice;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/sireum/cli/CliOpt$Type$Choice
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #230                // Method "<init>":(Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)V
        10: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
            0      11     1  name   Ljava/lang/String;
            0      11     2   sep   Lorg/sireum/Option;
            0      11     3 elements   Lorg/sireum/IS;
    Signature: #227                         // (Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/cli/CliOpt$Type$Choice;
    MethodParameters:
      Name                           Flags
      name                           final
      sep                            final
      elements                       final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #144                // Method name:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public org.sireum.Option<org.sireum.C> apply$default$2();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method sep:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #78                          // ()Lorg/sireum/Option<Lorg/sireum/C;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$3();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #155                // Method elements:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #170                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     167
        15: aload_0
        16: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_4
        26: anewarray     #239                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #239                // class scala/Tuple2
        34: dup
        35: ldc           #241                // String type
        37: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #245                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #161                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #247                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #249                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #251                // String cli
        64: aastore
        65: dup
        66: iconst_3
        67: ldc           #128                // String Choice
        69: aastore
        70: checkcast     #253                // class "[Ljava/lang/Object;"
        73: invokevirtual #257                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        76: invokevirtual #262                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        79: invokespecial #265                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_1
        85: new           #239                // class scala/Tuple2
        88: dup
        89: ldc_w         #266                // String name
        92: new           #142                // class org/sireum/String
        95: dup
        96: aload_0
        97: invokevirtual #144                // Method name:()Ljava/lang/String;
       100: invokespecial #147                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       103: invokespecial #265                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       106: aastore
       107: dup
       108: iconst_2
       109: new           #239                // class scala/Tuple2
       112: dup
       113: ldc_w         #267                // String sep
       116: aload_0
       117: invokevirtual #109                // Method sep:()Lorg/sireum/Option;
       120: invokespecial #265                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       123: aastore
       124: dup
       125: iconst_3
       126: new           #239                // class scala/Tuple2
       129: dup
       130: ldc_w         #268                // String elements
       133: aload_0
       134: invokevirtual #155                // Method elements:()Lorg/sireum/IS;
       137: invokespecial #265                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       140: aastore
       141: checkcast     #253                // class "[Ljava/lang/Object;"
       144: invokevirtual #257                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       147: invokevirtual #205                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       150: checkcast     #270                // class scala/collection/immutable/Seq
       153: putfield      #272                // Field $content:Lscala/collection/immutable/Seq;
       156: aload_0
       157: aload_0
       158: getfield      #170                // Field bitmap$0:B
       161: iconst_2
       162: ior
       163: i2b
       164: putfield      #170                // Field bitmap$0:B
       167: aload_1
       168: monitorexit
       169: goto          175
       172: aload_1
       173: monitorexit
       174: athrow
       175: aload_0
       176: getfield      #272                // Field $content:Lscala/collection/immutable/Seq;
       179: areturn
      Exception table:
         from    to  target type
             4   167   172   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 167
          locals = [ class org/sireum/cli/CliOpt$Type$Choice ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     180     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #237                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #170                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #274                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #272                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
    Signature: #237                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #277                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;

  public static final int $anonfun$_sep$4();
    descriptor: ()I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: invokestatic  #284                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: ireturn
      LineNumberTable:
        line 93: 0

  public org.sireum.cli.CliOpt$Type$Choice(java.lang.String, org.sireum.Option<org.sireum.C>, org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: invokespecial #289                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #293                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #296                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #299                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #74                 // Field _name:Ljava/lang/String;
        21: aload_0
        22: aload_2
        23: invokeinterface #302,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        28: putfield      #80                 // Field _bsep:Z
        31: aload_0
        32: aload_2
        33: invokedynamic #318,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        38: invokeinterface #322,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        43: checkcast     #97                 // class org/sireum/C
        46: invokevirtual #325                // Method org/sireum/C.value:()I
        49: putfield      #99                 // Field _sep:I
        52: aload_0
        53: aload_3
        54: putfield      #114                // Field _elements:Lorg/sireum/IS;
        57: return
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lorg/sireum/cli/CliOpt$Type$Choice;
            0      58     1 __name   Ljava/lang/String;
            0      58     2 __sep   Lorg/sireum/Option;
            0      58     3 __elements   Lorg/sireum/IS;
    Signature: #285                         // (Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      __name                         final
      __sep                          final
      __elements                     final

  public static final java.lang.Object $anonfun$_sep$4$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #97                 // class org/sireum/C
         3: dup
         4: invokestatic  #327                // Method $anonfun$_sep$4:()I
         7: invokespecial #103                // Method org/sireum/C."<init>":(I)V
        10: areturn
      LineNumberTable:
        line 93: 0

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #339,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #6 of #14;           // Type=class org/sireum/cli/CliOpt$Type of class org/sireum/cli/CliOpt
  public static #18= #17 of #14;          // Type$=class org/sireum/cli/CliOpt$Type$ of class org/sireum/cli/CliOpt
  public static final #19= #2 of #17;     // Choice=class org/sireum/cli/CliOpt$Type$Choice of class org/sireum/cli/CliOpt$Type$
SourceFile: "CliOpt.scala"
BootstrapMethods:
  0: #315 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #303 ()Ljava/lang/Object;
      #307 REF_invokeStatic org/sireum/cli/CliOpt$Type$Choice.$anonfun$_sep$4$adapted:()Ljava/lang/Object;
      #303 ()Ljava/lang/Object;
      #308 1
  1: #336 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #307 REF_invokeStatic org/sireum/cli/CliOpt$Type$Choice.$anonfun$_sep$4$adapted:()Ljava/lang/Object;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 01 16 00 A8 01 01 30 01 13 01 00 2D
   00 2E 01 00 3F 01 13 01 00 3F 00 40 01 00 16 00
   EC 01 00 EB 00 EC 01 00 35 00 36 01 00 3B 00 36
   01 00 64 00 E4 01 00 57 00 E2 01 00 E8 00 48 01
   00 E9 00 4D 01 00 EA 00 6F 01 00 6E 00 6F 01 00
   D7 00 D8 01 00 73 00 6F 01 00 4B 00 48 01 00 6B
   00 4D 01 00 23 00 24 01 00 14 00 A8 01 00 A7 00
   A8 01 00 47 00 48 01 00 4C 00 4D 01 00 A2 00 48
   01 00 74 00 48 01
  Scala: length = 0x0 (unknown attribute)

