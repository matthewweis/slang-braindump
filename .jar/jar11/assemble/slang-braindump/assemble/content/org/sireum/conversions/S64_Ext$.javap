Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/conversions/S64_Ext$.class
  Last modified May 29, 2022; size 5731 bytes
  SHA-256 checksum 2732c4075ba227d2a30403d5ffae78d4e79778667994152d83578505ccdf66c9
  Compiled from "extension.scala"
public final class org.sireum.conversions.S64_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/S64_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 23, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/conversions/S64_Ext$
    #2 = Class              #1            // org/sireum/conversions/S64_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               extension.scala
    #6 = Utf8               org/sireum/R$$String$
    #7 = Class              #6            // org/sireum/R$$String$
    #8 = Utf8               org/sireum/R
    #9 = Class              #8            // org/sireum/R
   #10 = Utf8               $String$
   #11 = Utf8               org/sireum/S64$S64$Slang
   #12 = Class              #11           // org/sireum/S64$S64$Slang
   #13 = Utf8               org/sireum/S64
   #14 = Class              #13           // org/sireum/S64
   #15 = Utf8               S64$Slang
   #16 = Utf8               org/sireum/S64$S64$Slang$s64$
   #17 = Class              #16           // org/sireum/S64$S64$Slang$s64$
   #18 = Utf8               s64$
   #19 = Utf8               MODULE$
   #20 = Utf8               Lorg/sireum/conversions/S64_Ext$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // org/sireum/conversions/S64_Ext$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Lorg/sireum/conversions/S64_Ext$;
   #27 = Fieldref           #2.#26        // org/sireum/conversions/S64_Ext$.MODULE$:Lorg/sireum/conversions/S64_Ext$;
   #28 = Utf8               toB
   #29 = Utf8               (J)Z
   #30 = Utf8               n
   #31 = Utf8               org/sireum/B$
   #32 = Class              #31           // org/sireum/B$
   #33 = Utf8               Lorg/sireum/B$;
   #34 = NameAndType        #19:#33       // MODULE$:Lorg/sireum/B$;
   #35 = Fieldref           #32.#34       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #36 = Utf8               org/sireum/S64$
   #37 = Class              #36           // org/sireum/S64$
   #38 = Utf8               Lorg/sireum/S64$;
   #39 = NameAndType        #19:#38       // MODULE$:Lorg/sireum/S64$;
   #40 = Fieldref           #37.#39       // org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
   #41 = Utf8               scala/StringContext
   #42 = Class              #41           // scala/StringContext
   #43 = Utf8               scala/runtime/ScalaRunTime$
   #44 = Class              #43           // scala/runtime/ScalaRunTime$
   #45 = Utf8               Lscala/runtime/ScalaRunTime$;
   #46 = NameAndType        #19:#45       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #47 = Fieldref           #44.#46       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #48 = Utf8               java/lang/String
   #49 = Class              #48           // java/lang/String
   #50 = Utf8               0
   #51 = String             #50           // 0
   #52 = Utf8               [Ljava/lang/Object;
   #53 = Class              #52           // "[Ljava/lang/Object;"
   #54 = Utf8               wrapRefArray
   #55 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #56 = NameAndType        #54:#55       // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #57 = Methodref          #44.#56       // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #58 = Utf8               (Lscala/collection/immutable/Seq;)V
   #59 = NameAndType        #23:#58       // "<init>":(Lscala/collection/immutable/Seq;)V
   #60 = Methodref          #42.#59       // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
   #61 = Utf8               (Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
   #62 = NameAndType        #15:#61       // S64$Slang:(Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
   #63 = Methodref          #37.#62       // org/sireum/S64$.S64$Slang:(Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
   #64 = Utf8               s64
   #65 = Utf8               ()Lorg/sireum/S64$S64$Slang$s64$;
   #66 = NameAndType        #64:#65       // s64:()Lorg/sireum/S64$S64$Slang$s64$;
   #67 = Methodref          #12.#66       // org/sireum/S64$S64$Slang.s64:()Lorg/sireum/S64$S64$Slang$s64$;
   #68 = Utf8               scala/collection/immutable/Nil$
   #69 = Class              #68           // scala/collection/immutable/Nil$
   #70 = Utf8               Lscala/collection/immutable/Nil$;
   #71 = NameAndType        #19:#70       // MODULE$:Lscala/collection/immutable/Nil$;
   #72 = Fieldref           #69.#71       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #73 = Utf8               apply
   #74 = Utf8               (Lscala/collection/immutable/Seq;)J
   #75 = NameAndType        #73:#74       // apply:(Lscala/collection/immutable/Seq;)J
   #76 = Methodref          #17.#75       // org/sireum/S64$S64$Slang$s64$.apply:(Lscala/collection/immutable/Seq;)J
   #77 = Utf8               (Z)Z
   #78 = NameAndType        #73:#77       // apply:(Z)Z
   #79 = Methodref          #32.#78       // org/sireum/B$.apply:(Z)Z
   #80 = Utf8               this
   #81 = Utf8               J
   #82 = Utf8               toZ
   #83 = Utf8               (J)Lorg/sireum/Z;
   #84 = Utf8               (J)V
   #85 = NameAndType        #23:#84       // "<init>":(J)V
   #86 = Methodref          #14.#85       // org/sireum/S64."<init>":(J)V
   #87 = Utf8               toMP
   #88 = Utf8               ()Lorg/sireum/Z;
   #89 = NameAndType        #87:#88       // toMP:()Lorg/sireum/Z;
   #90 = Methodref          #14.#89       // org/sireum/S64.toMP:()Lorg/sireum/Z;
   #91 = Utf8               toZ8
   #92 = Utf8               org/sireum/Z8$
   #93 = Class              #92           // org/sireum/Z8$
   #94 = Utf8               Lorg/sireum/Z8$;
   #95 = NameAndType        #19:#94       // MODULE$:Lorg/sireum/Z8$;
   #96 = Fieldref           #93.#95       // org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
   #97 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #98 = NameAndType        #73:#97       // apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #99 = Methodref          #93.#98       // org/sireum/Z8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #100 = Utf8               toZ16
  #101 = Utf8               org/sireum/Z16$
  #102 = Class              #101          // org/sireum/Z16$
  #103 = Utf8               Lorg/sireum/Z16$;
  #104 = NameAndType        #19:#103      // MODULE$:Lorg/sireum/Z16$;
  #105 = Fieldref           #102.#104     // org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
  #106 = Methodref          #102.#98      // org/sireum/Z16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #107 = Utf8               toZ32
  #108 = Utf8               org/sireum/Z32$
  #109 = Class              #108          // org/sireum/Z32$
  #110 = Utf8               Lorg/sireum/Z32$;
  #111 = NameAndType        #19:#110      // MODULE$:Lorg/sireum/Z32$;
  #112 = Fieldref           #109.#111     // org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
  #113 = Methodref          #109.#98      // org/sireum/Z32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #114 = Utf8               toZ64
  #115 = Utf8               org/sireum/Z64$
  #116 = Class              #115          // org/sireum/Z64$
  #117 = Utf8               Lorg/sireum/Z64$;
  #118 = NameAndType        #19:#117      // MODULE$:Lorg/sireum/Z64$;
  #119 = Fieldref           #116.#118     // org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
  #120 = Methodref          #116.#98      // org/sireum/Z64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #121 = Utf8               toN
  #122 = Utf8               org/sireum/N$
  #123 = Class              #122          // org/sireum/N$
  #124 = Utf8               Lorg/sireum/N$;
  #125 = NameAndType        #19:#124      // MODULE$:Lorg/sireum/N$;
  #126 = Fieldref           #123.#125     // org/sireum/N$.MODULE$:Lorg/sireum/N$;
  #127 = Methodref          #123.#98      // org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #128 = Utf8               toN8
  #129 = Utf8               org/sireum/N8$
  #130 = Class              #129          // org/sireum/N8$
  #131 = Utf8               Lorg/sireum/N8$;
  #132 = NameAndType        #19:#131      // MODULE$:Lorg/sireum/N8$;
  #133 = Fieldref           #130.#132     // org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
  #134 = Methodref          #130.#98      // org/sireum/N8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #135 = Utf8               toN16
  #136 = Utf8               org/sireum/N16$
  #137 = Class              #136          // org/sireum/N16$
  #138 = Utf8               Lorg/sireum/N16$;
  #139 = NameAndType        #19:#138      // MODULE$:Lorg/sireum/N16$;
  #140 = Fieldref           #137.#139     // org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
  #141 = Methodref          #137.#98      // org/sireum/N16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #142 = Utf8               toN32
  #143 = Utf8               org/sireum/N32$
  #144 = Class              #143          // org/sireum/N32$
  #145 = Utf8               Lorg/sireum/N32$;
  #146 = NameAndType        #19:#145      // MODULE$:Lorg/sireum/N32$;
  #147 = Fieldref           #144.#146     // org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
  #148 = Methodref          #144.#98      // org/sireum/N32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #149 = Utf8               toN64
  #150 = Utf8               org/sireum/N64$
  #151 = Class              #150          // org/sireum/N64$
  #152 = Utf8               Lorg/sireum/N64$;
  #153 = NameAndType        #19:#152      // MODULE$:Lorg/sireum/N64$;
  #154 = Fieldref           #151.#153     // org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
  #155 = Methodref          #151.#98      // org/sireum/N64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #156 = Utf8               toS8
  #157 = Utf8               (J)B
  #158 = Utf8               scala/Predef$
  #159 = Class              #158          // scala/Predef$
  #160 = Utf8               Lscala/Predef$;
  #161 = NameAndType        #19:#160      // MODULE$:Lscala/Predef$;
  #162 = Fieldref           #159.#161     // scala/Predef$.MODULE$:Lscala/Predef$;
  #163 = Utf8               org/sireum/conversions/Z_Ext$
  #164 = Class              #163          // org/sireum/conversions/Z_Ext$
  #165 = Utf8               Lorg/sireum/conversions/Z_Ext$;
  #166 = NameAndType        #19:#165      // MODULE$:Lorg/sireum/conversions/Z_Ext$;
  #167 = Fieldref           #164.#166     // org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
  #168 = Utf8               isInRangeSigned8
  #169 = Utf8               (Lorg/sireum/Z;)Z
  #170 = NameAndType        #168:#169     // isInRangeSigned8:(Lorg/sireum/Z;)Z
  #171 = Methodref          #164.#170     // org/sireum/conversions/Z_Ext$.isInRangeSigned8:(Lorg/sireum/Z;)Z
  #172 = Utf8               $4B
  #173 = NameAndType        #172:#77      // $4B:(Z)Z
  #174 = Methodref          #32.#173      // org/sireum/B$.$4B:(Z)Z
  #175 = Utf8               require
  #176 = Utf8               (Z)V
  #177 = NameAndType        #175:#176     // require:(Z)V
  #178 = Methodref          #159.#177     // scala/Predef$.require:(Z)V
  #179 = Utf8               org/sireum/S8$
  #180 = Class              #179          // org/sireum/S8$
  #181 = Utf8               Lorg/sireum/S8$;
  #182 = NameAndType        #19:#181      // MODULE$:Lorg/sireum/S8$;
  #183 = Fieldref           #180.#182     // org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
  #184 = Utf8               (Lorg/sireum/Z;)B
  #185 = NameAndType        #73:#184      // apply:(Lorg/sireum/Z;)B
  #186 = Methodref          #180.#185     // org/sireum/S8$.apply:(Lorg/sireum/Z;)B
  #187 = Utf8               mp
  #188 = Utf8               Lorg/sireum/Z;
  #189 = Utf8               toS16
  #190 = Utf8               (J)S
  #191 = Utf8               isInRangeSigned16
  #192 = NameAndType        #191:#169     // isInRangeSigned16:(Lorg/sireum/Z;)Z
  #193 = Methodref          #164.#192     // org/sireum/conversions/Z_Ext$.isInRangeSigned16:(Lorg/sireum/Z;)Z
  #194 = Utf8               org/sireum/S16$
  #195 = Class              #194          // org/sireum/S16$
  #196 = Utf8               Lorg/sireum/S16$;
  #197 = NameAndType        #19:#196      // MODULE$:Lorg/sireum/S16$;
  #198 = Fieldref           #195.#197     // org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
  #199 = Utf8               (Lorg/sireum/Z;)S
  #200 = NameAndType        #73:#199      // apply:(Lorg/sireum/Z;)S
  #201 = Methodref          #195.#200     // org/sireum/S16$.apply:(Lorg/sireum/Z;)S
  #202 = Utf8               toS32
  #203 = Utf8               (J)I
  #204 = Utf8               isInRangeSigned32
  #205 = NameAndType        #204:#169     // isInRangeSigned32:(Lorg/sireum/Z;)Z
  #206 = Methodref          #164.#205     // org/sireum/conversions/Z_Ext$.isInRangeSigned32:(Lorg/sireum/Z;)Z
  #207 = Utf8               org/sireum/S32$
  #208 = Class              #207          // org/sireum/S32$
  #209 = Utf8               Lorg/sireum/S32$;
  #210 = NameAndType        #19:#209      // MODULE$:Lorg/sireum/S32$;
  #211 = Fieldref           #208.#210     // org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
  #212 = Utf8               (Lorg/sireum/Z;)I
  #213 = NameAndType        #73:#212      // apply:(Lorg/sireum/Z;)I
  #214 = Methodref          #208.#213     // org/sireum/S32$.apply:(Lorg/sireum/Z;)I
  #215 = Utf8               toS64
  #216 = Utf8               (J)J
  #217 = Utf8               isInRangeSigned64
  #218 = NameAndType        #217:#169     // isInRangeSigned64:(Lorg/sireum/Z;)Z
  #219 = Methodref          #164.#218     // org/sireum/conversions/Z_Ext$.isInRangeSigned64:(Lorg/sireum/Z;)Z
  #220 = Utf8               (Lorg/sireum/Z;)J
  #221 = NameAndType        #73:#220      // apply:(Lorg/sireum/Z;)J
  #222 = Methodref          #37.#221      // org/sireum/S64$.apply:(Lorg/sireum/Z;)J
  #223 = Utf8               toU8
  #224 = Utf8               isInRangeUnsigned8
  #225 = NameAndType        #224:#169     // isInRangeUnsigned8:(Lorg/sireum/Z;)Z
  #226 = Methodref          #164.#225     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned8:(Lorg/sireum/Z;)Z
  #227 = Utf8               org/sireum/U8$
  #228 = Class              #227          // org/sireum/U8$
  #229 = Utf8               Lorg/sireum/U8$;
  #230 = NameAndType        #19:#229      // MODULE$:Lorg/sireum/U8$;
  #231 = Fieldref           #228.#230     // org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
  #232 = Methodref          #228.#185     // org/sireum/U8$.apply:(Lorg/sireum/Z;)B
  #233 = Utf8               toU16
  #234 = Utf8               isInRangeUnsigned16
  #235 = NameAndType        #234:#169     // isInRangeUnsigned16:(Lorg/sireum/Z;)Z
  #236 = Methodref          #164.#235     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned16:(Lorg/sireum/Z;)Z
  #237 = Utf8               org/sireum/U16$
  #238 = Class              #237          // org/sireum/U16$
  #239 = Utf8               Lorg/sireum/U16$;
  #240 = NameAndType        #19:#239      // MODULE$:Lorg/sireum/U16$;
  #241 = Fieldref           #238.#240     // org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
  #242 = Methodref          #238.#200     // org/sireum/U16$.apply:(Lorg/sireum/Z;)S
  #243 = Utf8               toU32
  #244 = Utf8               isInRangeUnsigned32
  #245 = NameAndType        #244:#169     // isInRangeUnsigned32:(Lorg/sireum/Z;)Z
  #246 = Methodref          #164.#245     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned32:(Lorg/sireum/Z;)Z
  #247 = Utf8               org/sireum/U32$
  #248 = Class              #247          // org/sireum/U32$
  #249 = Utf8               Lorg/sireum/U32$;
  #250 = NameAndType        #19:#249      // MODULE$:Lorg/sireum/U32$;
  #251 = Fieldref           #248.#250     // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
  #252 = Methodref          #248.#213     // org/sireum/U32$.apply:(Lorg/sireum/Z;)I
  #253 = Utf8               toU64
  #254 = Utf8               isInRangeUnsigned64
  #255 = NameAndType        #254:#169     // isInRangeUnsigned64:(Lorg/sireum/Z;)Z
  #256 = Methodref          #164.#255     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned64:(Lorg/sireum/Z;)Z
  #257 = Utf8               org/sireum/U64$
  #258 = Class              #257          // org/sireum/U64$
  #259 = Utf8               Lorg/sireum/U64$;
  #260 = NameAndType        #19:#259      // MODULE$:Lorg/sireum/U64$;
  #261 = Fieldref           #258.#260     // org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
  #262 = Methodref          #258.#221     // org/sireum/U64$.apply:(Lorg/sireum/Z;)J
  #263 = Utf8               toR
  #264 = Utf8               (J)Lscala/math/BigDecimal;
  #265 = Utf8               Lorg/sireum/R$$String$;
  #266 = NameAndType        #19:#265      // MODULE$:Lorg/sireum/R$$String$;
  #267 = Fieldref           #7.#266       // org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
  #268 = Utf8               toString
  #269 = Utf8               ()Ljava/lang/String;
  #270 = NameAndType        #268:#269     // toString:()Ljava/lang/String;
  #271 = Methodref          #14.#270      // org/sireum/S64.toString:()Ljava/lang/String;
  #272 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
  #273 = NameAndType        #73:#272      // apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #274 = Methodref          #7.#273       // org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #275 = Utf8               toRawU64
  #276 = NameAndType        #73:#216      // apply:(J)J
  #277 = Methodref          #258.#276     // org/sireum/U64$.apply:(J)J
  #278 = Methodref          #4.#24        // java/lang/Object."<init>":()V
  #279 = Utf8               Code
  #280 = Utf8               LineNumberTable
  #281 = Utf8               StackMapTable
  #282 = Utf8               LocalVariableTable
  #283 = Utf8               MethodParameters
  #284 = Utf8               InnerClasses
  #285 = Utf8               SourceFile
  #286 = Utf8               ScalaInlineInfo
  #287 = Utf8               Scala
{
  public static final org.sireum.conversions.S64_Ext$ MODULE$;
    descriptor: Lorg/sireum/conversions/S64_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/S64_Ext$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Lorg/sireum/conversions/S64_Ext$;
        10: return
      LineNumberTable:
        line 1103: 0

  public boolean toB(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=3, args_size=2
         0: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: lload_1
         4: getstatic     #40                 // Field org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
         7: new           #42                 // class scala/StringContext
        10: dup
        11: getstatic     #47                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        14: iconst_1
        15: anewarray     #49                 // class java/lang/String
        18: dup
        19: iconst_0
        20: ldc           #51                 // String 0
        22: aastore
        23: checkcast     #53                 // class "[Ljava/lang/Object;"
        26: invokevirtual #57                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        29: invokespecial #60                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        32: invokevirtual #63                 // Method org/sireum/S64$.S64$Slang:(Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
        35: invokevirtual #67                 // Method org/sireum/S64$S64$Slang.s64:()Lorg/sireum/S64$S64$Slang$s64$;
        38: getstatic     #72                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        41: invokevirtual #76                 // Method org/sireum/S64$S64$Slang$s64$.apply:(Lscala/collection/immutable/Seq;)J
        44: lcmp
        45: ifeq          52
        48: iconst_1
        49: goto          53
        52: iconst_0
        53: invokevirtual #79                 // Method org/sireum/B$.apply:(Z)Z
        56: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 116 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/conversions/S64_Ext$, long ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 1105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      57     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: areturn
      LineNumberTable:
        line 1107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      12     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ8(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #96                 // Field org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #99                 // Method org/sireum/Z8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ16(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #105                // Field org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #106                // Method org/sireum/Z16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ32(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #112                // Field org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #113                // Method org/sireum/Z32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ64(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #119                // Field org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #120                // Method org/sireum/Z64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #126                // Field org/sireum/N$.MODULE$:Lorg/sireum/N$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #127                // Method org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN8(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #133                // Field org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #134                // Method org/sireum/N8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN16(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #140                // Field org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #141                // Method org/sireum/N16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN32(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #147                // Field org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #148                // Method org/sireum/N32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN64(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #154                // Field org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        14: invokevirtual #155                // Method org/sireum/N64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 1125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public byte toS8(long);
    descriptor: (J)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #171                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned8:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #183                // Field org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
        34: aload_3
        35: invokevirtual #186                // Method org/sireum/S8$.apply:(Lorg/sireum/Z;)B
        38: ireturn
      LineNumberTable:
        line 1128: 0
        line 1129: 12
        line 1130: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public short toS16(long);
    descriptor: (J)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #193                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned16:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #198                // Field org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
        34: aload_3
        35: invokevirtual #201                // Method org/sireum/S16$.apply:(Lorg/sireum/Z;)S
        38: ireturn
      LineNumberTable:
        line 1134: 0
        line 1135: 12
        line 1136: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public int toS32(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #206                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned32:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #211                // Field org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
        34: aload_3
        35: invokevirtual #214                // Method org/sireum/S32$.apply:(Lorg/sireum/Z;)I
        38: ireturn
      LineNumberTable:
        line 1140: 0
        line 1141: 12
        line 1142: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public long toS64(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #219                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned64:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #40                 // Field org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
        34: aload_3
        35: invokevirtual #222                // Method org/sireum/S64$.apply:(Lorg/sireum/Z;)J
        38: lreturn
      LineNumberTable:
        line 1146: 0
        line 1147: 12
        line 1148: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public byte toU8(long);
    descriptor: (J)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #226                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned8:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #231                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        34: aload_3
        35: invokevirtual #232                // Method org/sireum/U8$.apply:(Lorg/sireum/Z;)B
        38: ireturn
      LineNumberTable:
        line 1152: 0
        line 1153: 12
        line 1154: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public short toU16(long);
    descriptor: (J)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #236                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned16:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #241                // Field org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
        34: aload_3
        35: invokevirtual #242                // Method org/sireum/U16$.apply:(Lorg/sireum/Z;)S
        38: ireturn
      LineNumberTable:
        line 1158: 0
        line 1159: 12
        line 1160: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public int toU32(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #246                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned32:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #251                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        34: aload_3
        35: invokevirtual #252                // Method org/sireum/U32$.apply:(Lorg/sireum/Z;)I
        38: ireturn
      LineNumberTable:
        line 1164: 0
        line 1165: 12
        line 1166: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public long toU64(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #14                 // class org/sireum/S64
         3: dup
         4: lload_1
         5: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
         8: invokevirtual #90                 // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        11: astore_3
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_3
        22: invokevirtual #256                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned64:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #261                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        34: aload_3
        35: invokevirtual #262                // Method org/sireum/U64$.apply:(Lorg/sireum/Z;)J
        38: lreturn
      LineNumberTable:
        line 1170: 0
        line 1171: 12
        line 1172: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      39     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal toR(long);
    descriptor: (J)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #267                // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
         3: new           #14                 // class org/sireum/S64
         6: dup
         7: lload_1
         8: invokespecial #86                 // Method org/sireum/S64."<init>":(J)V
        11: invokevirtual #271                // Method org/sireum/S64.toString:()Ljava/lang/String;
        14: invokevirtual #274                // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        17: areturn
      LineNumberTable:
        line 1175: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S64_Ext$;
            0      18     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public long toRawU64(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #261                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
         3: lload_1
         4: invokevirtual #277                // Method org/sireum/U64$.apply:(J)J
         7: lreturn
      LineNumberTable:
        line 1177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/S64_Ext$;
            0       8     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  private org.sireum.conversions.S64_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #278                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 1103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/S64_Ext$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/R$$String$ of class org/sireum/R
  public static #15= #12 of #14;          // S64$Slang=class org/sireum/S64$S64$Slang of class org/sireum/S64
  public #18= #17 of #12;                 // s64$=class org/sireum/S64$S64$Slang$s64$ of class org/sireum/S64$S64$Slang
SourceFile: "extension.scala"
  ScalaInlineInfo: length = 0x72 (unknown attribute)
   01 01 00 16 00 17 00 16 01 00 1C 00 1D 01 00 79
   00 53 01 00 87 00 53 01 00 8E 00 53 01 00 95 00
   53 01 00 80 00 53 01 01 07 01 08 01 01 13 00 D8
   01 00 BD 00 BE 01 00 CA 00 CB 01 00 D7 00 D8 01
   00 9C 00 9D 01 00 E9 00 BE 01 00 F3 00 CB 01 00
   FD 00 D8 01 00 DF 00 9D 01 00 52 00 53 01 00 64
   00 53 01 00 6B 00 53 01 00 72 00 53 01 00 5B 00
   53 01
  Scala: length = 0x0 (unknown attribute)

