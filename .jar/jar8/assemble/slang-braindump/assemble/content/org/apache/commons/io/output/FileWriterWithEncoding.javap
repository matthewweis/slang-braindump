Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/FileWriterWithEncoding.class
  Last modified May 29, 2022; size 4823 bytes
  SHA-256 checksum a41df4fe0e1e0117a1ccb9da9102bbeda71d475eff3db94caa1e460002c27f2c
  Compiled from "FileWriterWithEncoding.java"
public class org.apache.commons.io.output.FileWriterWithEncoding extends java.io.Writer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #34                         // org/apache/commons/io/output/FileWriterWithEncoding
  super_class: #35                        // java/io/Writer
  interfaces: 0, fields: 1, methods: 20, attributes: 1
Constant pool:
    #1 = Class              #103          // java/io/File
    #2 = Methodref          #1.#104       // java/io/File."<init>":(Ljava/lang/String;)V
    #3 = Methodref          #34.#105      // org/apache/commons/io/output/FileWriterWithEncoding."<init>":(Ljava/io/File;Ljava/lang/String;Z)V
    #4 = Methodref          #34.#106      // org/apache/commons/io/output/FileWriterWithEncoding."<init>":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V
    #5 = Methodref          #34.#107      // org/apache/commons/io/output/FileWriterWithEncoding."<init>":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V
    #6 = Methodref          #35.#108      // java/io/Writer."<init>":()V
    #7 = Methodref          #34.#109      // org/apache/commons/io/output/FileWriterWithEncoding.initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;
    #8 = Fieldref           #34.#110      // org/apache/commons/io/output/FileWriterWithEncoding.out:Ljava/io/Writer;
    #9 = String             #62           // file
   #10 = Methodref          #111.#112     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #11 = String             #57           // encoding
   #12 = Methodref          #1.#113       // java/io/File.exists:()Z
   #13 = Class              #114          // java/io/FileOutputStream
   #14 = Methodref          #13.#115      // java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
   #15 = Class              #116          // java/nio/charset/Charset
   #16 = Class              #117          // java/io/OutputStreamWriter
   #17 = Methodref          #16.#118      // java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
   #18 = Class              #119          // java/nio/charset/CharsetEncoder
   #19 = Methodref          #16.#120      // java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V
   #20 = Class              #121          // java/lang/String
   #21 = Methodref          #16.#122      // java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
   #22 = Class              #123          // java/io/IOException
   #23 = Class              #124          // java/lang/RuntimeException
   #24 = Methodref          #125.#126     // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V
   #25 = Methodref          #127.#128     // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V
   #26 = Methodref          #129.#130     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
   #27 = Methodref          #35.#131      // java/io/Writer.write:(I)V
   #28 = Methodref          #35.#132      // java/io/Writer.write:([C)V
   #29 = Methodref          #35.#133      // java/io/Writer.write:([CII)V
   #30 = Methodref          #35.#134      // java/io/Writer.write:(Ljava/lang/String;)V
   #31 = Methodref          #35.#135      // java/io/Writer.write:(Ljava/lang/String;II)V
   #32 = Methodref          #35.#136      // java/io/Writer.flush:()V
   #33 = Methodref          #35.#137      // java/io/Writer.close:()V
   #34 = Class              #138          // org/apache/commons/io/output/FileWriterWithEncoding
   #35 = Class              #139          // java/io/Writer
   #36 = Utf8               out
   #37 = Utf8               Ljava/io/Writer;
   #38 = Utf8               <init>
   #39 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
   #40 = Utf8               Code
   #41 = Utf8               LineNumberTable
   #42 = Utf8               LocalVariableTable
   #43 = Utf8               this
   #44 = Utf8               Lorg/apache/commons/io/output/FileWriterWithEncoding;
   #45 = Utf8               fileName
   #46 = Utf8               Ljava/lang/String;
   #47 = Utf8               charsetName
   #48 = Utf8               Exceptions
   #49 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)V
   #50 = Utf8               append
   #51 = Utf8               Z
   #52 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)V
   #53 = Utf8               charset
   #54 = Utf8               Ljava/nio/charset/Charset;
   #55 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
   #56 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V
   #57 = Utf8               encoding
   #58 = Utf8               Ljava/nio/charset/CharsetEncoder;
   #59 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V
   #60 = Utf8               charsetEncoder
   #61 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
   #62 = Utf8               file
   #63 = Utf8               Ljava/io/File;
   #64 = Utf8               (Ljava/io/File;Ljava/lang/String;Z)V
   #65 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V
   #66 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)V
   #67 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V
   #68 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V
   #69 = Utf8               initWriter
   #70 = Utf8               (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;
   #71 = Utf8               e
   #72 = Utf8               Ljava/io/IOException;
   #73 = Utf8               ex
   #74 = Utf8               Ljava/lang/Exception;
   #75 = Utf8               Ljava/lang/Object;
   #76 = Utf8               stream
   #77 = Utf8               Ljava/io/OutputStream;
   #78 = Utf8               fileExistedAlready
   #79 = Utf8               StackMapTable
   #80 = Class              #140          // java/io/OutputStream
   #81 = Class              #141          // java/lang/Exception
   #82 = Class              #103          // java/io/File
   #83 = Class              #142          // java/lang/Object
   #84 = Class              #123          // java/io/IOException
   #85 = Utf8               write
   #86 = Utf8               (I)V
   #87 = Utf8               idx
   #88 = Utf8               I
   #89 = Utf8               ([C)V
   #90 = Utf8               chr
   #91 = Utf8               [C
   #92 = Utf8               ([CII)V
   #93 = Utf8               st
   #94 = Utf8               end
   #95 = Utf8               (Ljava/lang/String;)V
   #96 = Utf8               str
   #97 = Utf8               (Ljava/lang/String;II)V
   #98 = Utf8               flush
   #99 = Utf8               ()V
  #100 = Utf8               close
  #101 = Utf8               SourceFile
  #102 = Utf8               FileWriterWithEncoding.java
  #103 = Utf8               java/io/File
  #104 = NameAndType        #38:#95       // "<init>":(Ljava/lang/String;)V
  #105 = NameAndType        #38:#64       // "<init>":(Ljava/io/File;Ljava/lang/String;Z)V
  #106 = NameAndType        #38:#66       // "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V
  #107 = NameAndType        #38:#68       // "<init>":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V
  #108 = NameAndType        #38:#99       // "<init>":()V
  #109 = NameAndType        #69:#70       // initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;
  #110 = NameAndType        #36:#37       // out:Ljava/io/Writer;
  #111 = Class              #143          // java/util/Objects
  #112 = NameAndType        #144:#145     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #113 = NameAndType        #146:#147     // exists:()Z
  #114 = Utf8               java/io/FileOutputStream
  #115 = NameAndType        #38:#148      // "<init>":(Ljava/io/File;Z)V
  #116 = Utf8               java/nio/charset/Charset
  #117 = Utf8               java/io/OutputStreamWriter
  #118 = NameAndType        #38:#149      // "<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
  #119 = Utf8               java/nio/charset/CharsetEncoder
  #120 = NameAndType        #38:#150      // "<init>":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V
  #121 = Utf8               java/lang/String
  #122 = NameAndType        #38:#151      // "<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
  #123 = Utf8               java/io/IOException
  #124 = Utf8               java/lang/RuntimeException
  #125 = Class              #152          // org/apache/commons/io/IOUtils
  #126 = NameAndType        #100:#153     // close:(Ljava/io/Closeable;)V
  #127 = Class              #141          // java/lang/Exception
  #128 = NameAndType        #154:#155     // addSuppressed:(Ljava/lang/Throwable;)V
  #129 = Class              #156          // org/apache/commons/io/FileUtils
  #130 = NameAndType        #157:#158     // deleteQuietly:(Ljava/io/File;)Z
  #131 = NameAndType        #85:#86       // write:(I)V
  #132 = NameAndType        #85:#89       // write:([C)V
  #133 = NameAndType        #85:#92       // write:([CII)V
  #134 = NameAndType        #85:#95       // write:(Ljava/lang/String;)V
  #135 = NameAndType        #85:#97       // write:(Ljava/lang/String;II)V
  #136 = NameAndType        #98:#99       // flush:()V
  #137 = NameAndType        #100:#99      // close:()V
  #138 = Utf8               org/apache/commons/io/output/FileWriterWithEncoding
  #139 = Utf8               java/io/Writer
  #140 = Utf8               java/io/OutputStream
  #141 = Utf8               java/lang/Exception
  #142 = Utf8               java/lang/Object
  #143 = Utf8               java/util/Objects
  #144 = Utf8               requireNonNull
  #145 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #146 = Utf8               exists
  #147 = Utf8               ()Z
  #148 = Utf8               (Ljava/io/File;Z)V
  #149 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
  #150 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V
  #151 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V
  #152 = Utf8               org/apache/commons/io/IOUtils
  #153 = Utf8               (Ljava/io/Closeable;)V
  #154 = Utf8               addSuppressed
  #155 = Utf8               (Ljava/lang/Throwable;)V
  #156 = Utf8               org/apache/commons/io/FileUtils
  #157 = Utf8               deleteQuietly
  #158 = Utf8               (Ljava/io/File;)Z
{
  private final java.io.Writer out;
    descriptor: Ljava/io/Writer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: new           #1                  // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #2                  // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: aload_2
        10: iconst_0
        11: invokespecial #3                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;Z)V
        14: return
      LineNumberTable:
        line 67: 0
        line 68: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1 fileName   Ljava/lang/String;
            0      15     2 charsetName   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.lang.String, boolean) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/lang/String;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: new           #1                  // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #2                  // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: aload_2
        10: iload_3
        11: invokespecial #3                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;Z)V
        14: return
      LineNumberTable:
        line 81: 0
        line 82: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1 fileName   Ljava/lang/String;
            0      15     2 charsetName   Ljava/lang/String;
            0      15     3 append   Z
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: new           #1                  // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #2                  // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: aload_2
        10: iconst_0
        11: invokespecial #4                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V
        14: return
      LineNumberTable:
        line 93: 0
        line 94: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1 fileName   Ljava/lang/String;
            0      15     2 charset   Ljava/nio/charset/Charset;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset, boolean) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: new           #1                  // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #2                  // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: aload_2
        10: iload_3
        11: invokespecial #4                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V
        14: return
      LineNumberTable:
        line 107: 0
        line 108: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1 fileName   Ljava/lang/String;
            0      15     2 charset   Ljava/nio/charset/Charset;
            0      15     3 append   Z
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: new           #1                  // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #2                  // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: aload_2
        10: iconst_0
        11: invokespecial #5                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V
        14: return
      LineNumberTable:
        line 119: 0
        line 120: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1 fileName   Ljava/lang/String;
            0      15     2 encoding   Ljava/nio/charset/CharsetEncoder;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder, boolean) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: new           #1                  // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #2                  // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: aload_2
        10: iload_3
        11: invokespecial #5                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V
        14: return
      LineNumberTable:
        line 133: 0
        line 134: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1 fileName   Ljava/lang/String;
            0      15     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;
            0      15     3 append   Z
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: invokespecial #3                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;Z)V
         7: return
      LineNumberTable:
        line 145: 0
        line 146: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0       8     1  file   Ljava/io/File;
            0       8     2 charsetName   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.lang.String, boolean) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/lang/String;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokespecial #6                  // Method java/io/Writer."<init>":()V
         4: aload_0
         5: aload_1
         6: aload_2
         7: iload_3
         8: invokestatic  #7                  // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;
        11: putfield      #8                  // Field out:Ljava/io/Writer;
        14: return
      LineNumberTable:
        line 158: 0
        line 159: 4
        line 160: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1  file   Ljava/io/File;
            0      15     2 charsetName   Ljava/lang/String;
            0      15     3 append   Z
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: invokespecial #4                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V
         7: return
      LineNumberTable:
        line 171: 0
        line 172: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0       8     1  file   Ljava/io/File;
            0       8     2 charset   Ljava/nio/charset/Charset;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokespecial #6                  // Method java/io/Writer."<init>":()V
         4: aload_0
         5: aload_1
         6: aload_2
         7: iload_3
         8: invokestatic  #7                  // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;
        11: putfield      #8                  // Field out:Ljava/io/Writer;
        14: return
      LineNumberTable:
        line 184: 0
        line 185: 4
        line 186: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1  file   Ljava/io/File;
            0      15     2 encoding   Ljava/nio/charset/Charset;
            0      15     3 append   Z
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: invokespecial #5                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V
         7: return
      LineNumberTable:
        line 197: 0
        line 198: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0       8     1  file   Ljava/io/File;
            0       8     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder, boolean) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokespecial #6                  // Method java/io/Writer."<init>":()V
         4: aload_0
         5: aload_1
         6: aload_2
         7: iload_3
         8: invokestatic  #7                  // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;
        11: putfield      #8                  // Field out:Ljava/io/Writer;
        14: return
      LineNumberTable:
        line 211: 0
        line 212: 4
        line 213: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      15     1  file   Ljava/io/File;
            0      15     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;
            0      15     3 append   Z
    Exceptions:
      throws java.io.IOException

  private static java.io.Writer initWriter(java.io.File, java.lang.Object, boolean) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_0
         1: ldc           #9                  // String file
         3: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: aload_1
         8: ldc           #11                 // String encoding
        10: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        13: pop
        14: aconst_null
        15: astore_3
        16: aload_0
        17: invokevirtual #12                 // Method java/io/File.exists:()Z
        20: istore        4
        22: new           #13                 // class java/io/FileOutputStream
        25: dup
        26: aload_0
        27: iload_2
        28: invokespecial #14                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
        31: astore_3
        32: aload_1
        33: instanceof    #15                 // class java/nio/charset/Charset
        36: ifeq          52
        39: new           #16                 // class java/io/OutputStreamWriter
        42: dup
        43: aload_3
        44: aload_1
        45: checkcast     #15                 // class java/nio/charset/Charset
        48: invokespecial #17                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
        51: areturn
        52: aload_1
        53: instanceof    #18                 // class java/nio/charset/CharsetEncoder
        56: ifeq          72
        59: new           #16                 // class java/io/OutputStreamWriter
        62: dup
        63: aload_3
        64: aload_1
        65: checkcast     #18                 // class java/nio/charset/CharsetEncoder
        68: invokespecial #19                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V
        71: areturn
        72: new           #16                 // class java/io/OutputStreamWriter
        75: dup
        76: aload_3
        77: aload_1
        78: checkcast     #20                 // class java/lang/String
        81: invokespecial #21                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
        84: areturn
        85: astore        5
        87: aload_3
        88: invokestatic  #24                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V
        91: goto          103
        94: astore        6
        96: aload         5
        98: aload         6
       100: invokevirtual #25                 // Method java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V
       103: iload         4
       105: ifne          113
       108: aload_0
       109: invokestatic  #26                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
       112: pop
       113: aload         5
       115: athrow
      Exception table:
         from    to  target type
            22    51    85   Class java/io/IOException
            22    51    85   Class java/lang/RuntimeException
            52    71    85   Class java/io/IOException
            52    71    85   Class java/lang/RuntimeException
            72    84    85   Class java/io/IOException
            72    84    85   Class java/lang/RuntimeException
            87    91    94   Class java/io/IOException
      LineNumberTable:
        line 228: 0
        line 229: 7
        line 230: 14
        line 231: 16
        line 233: 22
        line 234: 32
        line 235: 39
        line 236: 52
        line 237: 59
        line 239: 72
        line 241: 85
        line 243: 87
        line 246: 91
        line 244: 94
        line 245: 96
        line 247: 103
        line 248: 108
        line 250: 113
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           96       7     6     e   Ljava/io/IOException;
           87      29     5    ex   Ljava/lang/Exception;
            0     116     0  file   Ljava/io/File;
            0     116     1 encoding   Ljava/lang/Object;
            0     116     2 append   Z
           16     100     3 stream   Ljava/io/OutputStream;
           22      94     4 fileExistedAlready   Z
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 52
          locals = [ class java/io/OutputStream, int ]
        frame_type = 19 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/io/File, class java/lang/Object, int, class java/io/OutputStream, int, class java/lang/Exception ]
          stack = [ class java/io/IOException ]
        frame_type = 8 /* same */
        frame_type = 9 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #8                  // Field out:Ljava/io/Writer;
         4: iload_1
         5: invokevirtual #27                 // Method java/io/Writer.write:(I)V
         8: return
      LineNumberTable:
        line 262: 0
        line 263: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0       9     1   idx   I
    Exceptions:
      throws java.io.IOException

  public void write(char[]) throws java.io.IOException;
    descriptor: ([C)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #8                  // Field out:Ljava/io/Writer;
         4: aload_1
         5: invokevirtual #28                 // Method java/io/Writer.write:([C)V
         8: return
      LineNumberTable:
        line 272: 0
        line 273: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0       9     1   chr   [C
    Exceptions:
      throws java.io.IOException

  public void write(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #8                  // Field out:Ljava/io/Writer;
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #29                 // Method java/io/Writer.write:([CII)V
        10: return
      LineNumberTable:
        line 284: 0
        line 285: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      11     1   chr   [C
            0      11     2    st   I
            0      11     3   end   I
    Exceptions:
      throws java.io.IOException

  public void write(java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #8                  // Field out:Ljava/io/Writer;
         4: aload_1
         5: invokevirtual #30                 // Method java/io/Writer.write:(Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 294: 0
        line 295: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0       9     1   str   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public void write(java.lang.String, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/String;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #8                  // Field out:Ljava/io/Writer;
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #31                 // Method java/io/Writer.write:(Ljava/lang/String;II)V
        10: return
      LineNumberTable:
        line 306: 0
        line 307: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
            0      11     1   str   Ljava/lang/String;
            0      11     2    st   I
            0      11     3   end   I
    Exceptions:
      throws java.io.IOException

  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field out:Ljava/io/Writer;
         4: invokevirtual #32                 // Method java/io/Writer.flush:()V
         7: return
      LineNumberTable:
        line 315: 0
        line 316: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field out:Ljava/io/Writer;
         4: invokevirtual #33                 // Method java/io/Writer.close:()V
         7: return
      LineNumberTable:
        line 324: 0
        line 325: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "FileWriterWithEncoding.java"
