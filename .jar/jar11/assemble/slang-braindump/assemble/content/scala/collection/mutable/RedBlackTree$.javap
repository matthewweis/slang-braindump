Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/mutable/RedBlackTree$.class
  Last modified May 29, 2022; size 23871 bytes
  SHA-256 checksum 2028824b2f9fe1e7c11018115c8d4da91a3244fd44308f4f9d16466a2148af0e
  Compiled from "RedBlackTree.scala"
public final class scala.collection.mutable.RedBlackTree$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/mutable/RedBlackTree$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 65, attributes: 4
Constant pool:
    #1 = Utf8               scala/collection/mutable/RedBlackTree$
    #2 = Class              #1            // scala/collection/mutable/RedBlackTree$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               RedBlackTree.scala
    #6 = Utf8               scala/collection/mutable/RedBlackTree$EntriesIterator
    #7 = Class              #6            // scala/collection/mutable/RedBlackTree$EntriesIterator
    #8 = Utf8               scala/collection/mutable/RedBlackTree
    #9 = Class              #8            // scala/collection/mutable/RedBlackTree
   #10 = Utf8               EntriesIterator
   #11 = Utf8               scala/collection/mutable/RedBlackTree$KeysIterator
   #12 = Class              #11           // scala/collection/mutable/RedBlackTree$KeysIterator
   #13 = Utf8               KeysIterator
   #14 = Utf8               scala/collection/mutable/RedBlackTree$Node
   #15 = Class              #14           // scala/collection/mutable/RedBlackTree$Node
   #16 = Utf8               Node
   #17 = Utf8               scala/collection/mutable/RedBlackTree$Node$
   #18 = Class              #17           // scala/collection/mutable/RedBlackTree$Node$
   #19 = Utf8               Node$
   #20 = Utf8               scala/collection/mutable/RedBlackTree$Tree
   #21 = Class              #20           // scala/collection/mutable/RedBlackTree$Tree
   #22 = Utf8               Tree
   #23 = Utf8               scala/collection/mutable/RedBlackTree$ValuesIterator
   #24 = Class              #23           // scala/collection/mutable/RedBlackTree$ValuesIterator
   #25 = Utf8               ValuesIterator
   #26 = Utf8               MODULE$
   #27 = Utf8               Lscala/collection/mutable/RedBlackTree$;
   #28 = Utf8               <clinit>
   #29 = Utf8               ()V
   #30 = Utf8               <init>
   #31 = NameAndType        #30:#29       // "<init>":()V
   #32 = Methodref          #2.#31        // scala/collection/mutable/RedBlackTree$."<init>":()V
   #33 = NameAndType        #26:#27       // MODULE$:Lscala/collection/mutable/RedBlackTree$;
   #34 = Fieldref           #2.#33        // scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
   #35 = Utf8               isRed
   #36 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;)Z
   #37 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node<**>;)Z
   #38 = Utf8               node
   #39 = Utf8               red
   #40 = Utf8               ()Z
   #41 = NameAndType        #39:#40       // red:()Z
   #42 = Methodref          #15.#41       // scala/collection/mutable/RedBlackTree$Node.red:()Z
   #43 = Utf8               this
   #44 = Utf8               Lscala/collection/mutable/RedBlackTree$Node;
   #45 = Utf8               isBlack
   #46 = Utf8               size
   #47 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;)I
   #48 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node<**>;)I
   #49 = Utf8               left
   #50 = Utf8               ()Lscala/collection/mutable/RedBlackTree$Node;
   #51 = NameAndType        #49:#50       // left:()Lscala/collection/mutable/RedBlackTree$Node;
   #52 = Methodref          #15.#51       // scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
   #53 = NameAndType        #46:#47       // size:(Lscala/collection/mutable/RedBlackTree$Node;)I
   #54 = Methodref          #2.#53        // scala/collection/mutable/RedBlackTree$.size:(Lscala/collection/mutable/RedBlackTree$Node;)I
   #55 = Utf8               right
   #56 = NameAndType        #55:#50       // right:()Lscala/collection/mutable/RedBlackTree$Node;
   #57 = Methodref          #15.#56       // scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
   #58 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;)I
   #59 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree<**>;)I
   #60 = Utf8               tree
   #61 = Utf8               ()I
   #62 = NameAndType        #46:#61       // size:()I
   #63 = Methodref          #21.#62       // scala/collection/mutable/RedBlackTree$Tree.size:()I
   #64 = Utf8               Lscala/collection/mutable/RedBlackTree$Tree;
   #65 = Utf8               isEmpty
   #66 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;)Z
   #67 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree<**>;)Z
   #68 = Utf8               root
   #69 = NameAndType        #68:#50       // root:()Lscala/collection/mutable/RedBlackTree$Node;
   #70 = Methodref          #21.#69       // scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
   #71 = Utf8               clear
   #72 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;)V
   #73 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree<**>;)V
   #74 = Utf8               root_$eq
   #75 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;)V
   #76 = NameAndType        #74:#75       // root_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
   #77 = Methodref          #21.#76       // scala/collection/mutable/RedBlackTree$Tree.root_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
   #78 = Utf8               size_$eq
   #79 = Utf8               (I)V
   #80 = NameAndType        #78:#79       // size_$eq:(I)V
   #81 = Methodref          #21.#80       // scala/collection/mutable/RedBlackTree$Tree.size_$eq:(I)V
   #82 = Utf8               get
   #83 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
   #84 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<TB;>;
   #85 = Utf8               key
   #86 = Utf8               evidence$1
   #87 = Utf8               getNode
   #88 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
   #89 = NameAndType        #87:#88       // getNode:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
   #90 = Methodref          #2.#89        // scala/collection/mutable/RedBlackTree$.getNode:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
   #91 = Utf8               scala/None$
   #92 = Class              #91           // scala/None$
   #93 = Utf8               Lscala/None$;
   #94 = NameAndType        #26:#93       // MODULE$:Lscala/None$;
   #95 = Fieldref           #92.#94       // scala/None$.MODULE$:Lscala/None$;
   #96 = Utf8               scala/Some
   #97 = Class              #96           // scala/Some
   #98 = Utf8               value
   #99 = Utf8               ()Ljava/lang/Object;
  #100 = NameAndType        #98:#99       // value:()Ljava/lang/Object;
  #101 = Methodref          #15.#100      // scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
  #102 = Utf8               (Ljava/lang/Object;)V
  #103 = NameAndType        #30:#102      // "<init>":(Ljava/lang/Object;)V
  #104 = Methodref          #97.#103      // scala/Some."<init>":(Ljava/lang/Object;)V
  #105 = Utf8               Ljava/lang/Object;
  #106 = Utf8               Lscala/math/Ordering;
  #107 = Utf8               scala/math/Ordering
  #108 = Class              #107          // scala/math/Ordering
  #109 = Utf8               scala/Option
  #110 = Class              #109          // scala/Option
  #111 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
  #112 = Utf8               ord
  #113 = NameAndType        #85:#99       // key:()Ljava/lang/Object;
  #114 = Methodref          #15.#113      // scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
  #115 = Utf8               compare
  #116 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I
  #117 = NameAndType        #115:#116     // compare:(Ljava/lang/Object;Ljava/lang/Object;)I
  #118 = InterfaceMethodref #108.#117     // scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
  #119 = Utf8               cmp
  #120 = Utf8               I
  #121 = Utf8               contains
  #122 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
  #123 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;TA;Lscala/math/Ordering<TA;>;)Z
  #124 = Utf8               evidence$2
  #125 = Utf8               min
  #126 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #127 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;)Lscala/Option<Lscala/Tuple2<TA;TB;>;>;
  #128 = Utf8               scala$collection$mutable$RedBlackTree$$minNode
  #129 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #130 = NameAndType        #128:#129     // scala$collection$mutable$RedBlackTree$$minNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #131 = Methodref          #2.#130       // scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$minNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #132 = Utf8               scala/Tuple2
  #133 = Class              #132          // scala/Tuple2
  #134 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #135 = NameAndType        #30:#134      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #136 = Methodref          #133.#135     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #137 = Utf8               minKey
  #138 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;)Lscala/Option<TA;>;
  #139 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
  #140 = Utf8               minNodeNonNull
  #141 = NameAndType        #140:#129     // minNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #142 = Methodref          #2.#141       // scala/collection/mutable/RedBlackTree$.minNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #143 = Utf8               max
  #144 = Utf8               maxNode
  #145 = NameAndType        #144:#129     // maxNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #146 = Methodref          #2.#145       // scala/collection/mutable/RedBlackTree$.maxNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #147 = Utf8               maxKey
  #148 = Utf8               maxNodeNonNull
  #149 = NameAndType        #148:#129     // maxNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #150 = Methodref          #2.#149       // scala/collection/mutable/RedBlackTree$.maxNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #151 = Utf8               minAfter
  #152 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<Lscala/Tuple2<TA;TB;>;>;
  #153 = Utf8               scala$collection$mutable$RedBlackTree$$minNodeAfter
  #154 = NameAndType        #153:#88      // scala$collection$mutable$RedBlackTree$$minNodeAfter:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
  #155 = Methodref          #2.#154       // scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$minNodeAfter:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
  #156 = Utf8               minKeyAfter
  #157 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<TA;>;
  #158 = Utf8               scala$collection$mutable$RedBlackTree$$successor
  #159 = NameAndType        #158:#129     // scala$collection$mutable$RedBlackTree$$successor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #160 = Methodref          #2.#159       // scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$successor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #161 = Utf8               y
  #162 = Utf8               x
  #163 = Utf8               maxBefore
  #164 = Utf8               maxNodeBefore
  #165 = NameAndType        #164:#88      // maxNodeBefore:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
  #166 = Methodref          #2.#165       // scala/collection/mutable/RedBlackTree$.maxNodeBefore:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
  #167 = Utf8               maxKeyBefore
  #168 = Utf8               predecessor
  #169 = NameAndType        #168:#129     // predecessor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #170 = Methodref          #2.#169       // scala/collection/mutable/RedBlackTree$.predecessor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #171 = Utf8               insert
  #172 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)V
  #173 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;TB;Lscala/math/Ordering<TA;>;)V
  #174 = Utf8               value_$eq
  #175 = NameAndType        #174:#102     // value_$eq:(Ljava/lang/Object;)V
  #176 = Methodref          #15.#175      // scala/collection/mutable/RedBlackTree$Node.value_$eq:(Ljava/lang/Object;)V
  #177 = Utf8               Lscala/collection/mutable/RedBlackTree$Node$;
  #178 = NameAndType        #26:#177      // MODULE$:Lscala/collection/mutable/RedBlackTree$Node$;
  #179 = Fieldref           #18.#178      // scala/collection/mutable/RedBlackTree$Node$.MODULE$:Lscala/collection/mutable/RedBlackTree$Node$;
  #180 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #181 = NameAndType        #30:#180      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #182 = Methodref          #15.#181      // scala/collection/mutable/RedBlackTree$Node."<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #183 = Utf8               left_$eq
  #184 = NameAndType        #183:#75      // left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
  #185 = Methodref          #15.#184      // scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
  #186 = Utf8               right_$eq
  #187 = NameAndType        #186:#75      // right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
  #188 = Methodref          #15.#187      // scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
  #189 = Utf8               fixAfterInsert
  #190 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
  #191 = NameAndType        #189:#190     // fixAfterInsert:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
  #192 = Methodref          #2.#191       // scala/collection/mutable/RedBlackTree$.fixAfterInsert:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
  #193 = Utf8               z
  #194 = Utf8               leaf_red
  #195 = Utf8               Z
  #196 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)V
  #197 = Utf8               parent
  #198 = NameAndType        #197:#50      // parent:()Lscala/collection/mutable/RedBlackTree$Node;
  #199 = Methodref          #15.#198      // scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
  #200 = NameAndType        #35:#36       // isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #201 = Methodref          #2.#200       // scala/collection/mutable/RedBlackTree$.isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #202 = Utf8               red_$eq
  #203 = Utf8               (Z)V
  #204 = NameAndType        #202:#203     // red_$eq:(Z)V
  #205 = Methodref          #15.#204      // scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
  #206 = Utf8               rotateLeft
  #207 = NameAndType        #206:#190     // rotateLeft:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
  #208 = Methodref          #2.#207       // scala/collection/mutable/RedBlackTree$.rotateLeft:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
  #209 = Utf8               rotateRight
  #210 = NameAndType        #209:#190     // rotateRight:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
  #211 = Methodref          #2.#210       // scala/collection/mutable/RedBlackTree$.rotateRight:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
  #212 = Utf8               delete
  #213 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)V
  #214 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)V
  #215 = Utf8               transplant
  #216 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #217 = NameAndType        #215:#216     // transplant:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #218 = Methodref          #2.#217       // scala/collection/mutable/RedBlackTree$.transplant:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #219 = Utf8               parent_$eq
  #220 = NameAndType        #219:#75      // parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
  #221 = Methodref          #15.#220      // scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
  #222 = Utf8               fixAfterDelete
  #223 = NameAndType        #222:#216     // fixAfterDelete:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #224 = Methodref          #2.#223       // scala/collection/mutable/RedBlackTree$.fixAfterDelete:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
  #225 = Utf8               yIsRed
  #226 = Utf8               xParent
  #227 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)V
  #228 = NameAndType        #45:#36       // isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #229 = Methodref          #2.#228       // scala/collection/mutable/RedBlackTree$.isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #230 = Utf8               w
  #231 = Utf8               to
  #232 = Utf8               from
  #233 = Utf8               foreach
  #234 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Function1;)V
  #235 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Function1<Lscala/Tuple2<TA;TB;>;TU;>;)V
  #236 = Utf8               f
  #237 = Utf8               foreachNodeNonNull
  #238 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
  #239 = NameAndType        #237:#238     // foreachNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
  #240 = Methodref          #2.#239       // scala/collection/mutable/RedBlackTree$.foreachNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
  #241 = Utf8               scala/Function1
  #242 = Class              #241          // scala/Function1
  #243 = Utf8               apply
  #244 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #245 = NameAndType        #243:#244     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #246 = InterfaceMethodref #242.#245     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #247 = Utf8               Lscala/Function1;
  #248 = Utf8               foreachNode_node
  #249 = Utf8               foreachNode_foreachNodeNonNull_node
  #250 = Utf8               foreachNodeNonNull_node
  #251 = Utf8               foreachNode
  #252 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/Function1<Lscala/Tuple2<TA;TB;>;TU;>;)V
  #253 = Utf8               foreachKey
  #254 = Utf8               <A:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;Lscala/Function1<TA;TU;>;)V
  #255 = Utf8               g$1
  #256 = NameAndType        #255:#238     // g$1:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
  #257 = Methodref          #2.#256       // scala/collection/mutable/RedBlackTree$.g$1:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
  #258 = Utf8               r
  #259 = Utf8               g$1_l
  #260 = Utf8               g$1_r
  #261 = Utf8               g$1_node
  #262 = Utf8               foreachEntry
  #263 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Function2;)V
  #264 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Function2<TA;TB;TU;>;)V
  #265 = Utf8               g$2
  #266 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
  #267 = NameAndType        #265:#266     // g$2:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
  #268 = Methodref          #2.#267       // scala/collection/mutable/RedBlackTree$.g$2:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
  #269 = Utf8               scala/Function2
  #270 = Class              #269          // scala/Function2
  #271 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #272 = NameAndType        #243:#271     // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #273 = InterfaceMethodref #270.#272     // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #274 = Utf8               Lscala/Function2;
  #275 = Utf8               g$2_l
  #276 = Utf8               g$2_r
  #277 = Utf8               g$2_node
  #278 = Utf8               transform
  #279 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Function2<TA;TB;TB;>;)V
  #280 = Utf8               transformNodeNonNull
  #281 = NameAndType        #280:#266     // transformNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
  #282 = Methodref          #2.#281       // scala/collection/mutable/RedBlackTree$.transformNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
  #283 = Utf8               transformNode_node
  #284 = Utf8               transformNode_transformNodeNonNull_node
  #285 = Utf8               transformNodeNonNull_node
  #286 = Utf8               transformNode
  #287 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/Function2<TA;TB;TB;>;)V
  #288 = Utf8               iterator
  #289 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
  #290 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)Lscala/collection/Iterator<Lscala/Tuple2<TA;TB;>;>;
  #291 = Utf8               start
  #292 = Utf8               end
  #293 = Utf8               evidence$3
  #294 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #295 = NameAndType        #30:#294      // "<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #296 = Methodref          #7.#295       // scala/collection/mutable/RedBlackTree$EntriesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #297 = Utf8               Lscala/Option;
  #298 = Utf8               iterator$default$2
  #299 = Utf8               ()Lscala/None$;
  #300 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>()Lscala/None$;
  #301 = Utf8               iterator$default$3
  #302 = Utf8               keysIterator
  #303 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)Lscala/collection/Iterator<TA;>;
  #304 = Utf8               evidence$4
  #305 = Methodref          #12.#295      // scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #306 = Utf8               keysIterator$default$2
  #307 = Utf8               <A:Ljava/lang/Object;>()Lscala/None$;
  #308 = Utf8               keysIterator$default$3
  #309 = Utf8               valuesIterator
  #310 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)Lscala/collection/Iterator<TB;>;
  #311 = Utf8               evidence$5
  #312 = Methodref          #24.#295      // scala/collection/mutable/RedBlackTree$ValuesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #313 = Utf8               valuesIterator$default$2
  #314 = Utf8               valuesIterator$default$3
  #315 = Utf8               isValid
  #316 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)Z
  #317 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/math/Ordering<TA;>;)Z
  #318 = Utf8               evidence$9
  #319 = Utf8               isValidBST
  #320 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;Lscala/math/Ordering;)Z
  #321 = NameAndType        #319:#320     // isValidBST:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/math/Ordering;)Z
  #322 = Methodref          #2.#321       // scala/collection/mutable/RedBlackTree$.isValidBST:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/math/Ordering;)Z
  #323 = Utf8               hasProperParentRefs
  #324 = NameAndType        #323:#66      // hasProperParentRefs:(Lscala/collection/mutable/RedBlackTree$Tree;)Z
  #325 = Methodref          #2.#324       // scala/collection/mutable/RedBlackTree$.hasProperParentRefs:(Lscala/collection/mutable/RedBlackTree$Tree;)Z
  #326 = Utf8               isValidRedBlackTree
  #327 = NameAndType        #326:#66      // isValidRedBlackTree:(Lscala/collection/mutable/RedBlackTree$Tree;)Z
  #328 = Methodref          #2.#327       // scala/collection/mutable/RedBlackTree$.isValidRedBlackTree:(Lscala/collection/mutable/RedBlackTree$Tree;)Z
  #329 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;)Z
  #330 = Utf8               hasProperParentRefs$1
  #331 = NameAndType        #330:#36      // hasProperParentRefs$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #332 = Methodref          #2.#331       // scala/collection/mutable/RedBlackTree$.hasProperParentRefs$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #333 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/math/Ordering<TA;>;)Z
  #334 = Utf8               noRedAfterRed$1
  #335 = NameAndType        #334:#36      // noRedAfterRed$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #336 = Methodref          #2.#335       // scala/collection/mutable/RedBlackTree$.noRedAfterRed$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
  #337 = Utf8               blackHeight$1
  #338 = NameAndType        #337:#47      // blackHeight$1:(Lscala/collection/mutable/RedBlackTree$Node;)I
  #339 = Methodref          #2.#338       // scala/collection/mutable/RedBlackTree$.blackHeight$1:(Lscala/collection/mutable/RedBlackTree$Node;)I
  #340 = Utf8               fromOrderedKeys
  #341 = Utf8               (Lscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Tree;
  #342 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Iterator<TA;>;I)Lscala/collection/mutable/RedBlackTree$Tree<TA;Lscala/runtime/Null$;>;
  #343 = Utf8               xs
  #344 = Utf8               java/lang/Integer
  #345 = Class              #344          // java/lang/Integer
  #346 = Utf8               numberOfLeadingZeros
  #347 = Utf8               (I)I
  #348 = NameAndType        #346:#347     // numberOfLeadingZeros:(I)I
  #349 = Methodref          #345.#348     // java/lang/Integer.numberOfLeadingZeros:(I)I
  #350 = Utf8               f$3
  #351 = Utf8               (IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
  #352 = NameAndType        #350:#351     // f$3:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
  #353 = Methodref          #2.#352       // scala/collection/mutable/RedBlackTree$.f$3:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
  #354 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;I)V
  #355 = NameAndType        #30:#354      // "<init>":(Lscala/collection/mutable/RedBlackTree$Node;I)V
  #356 = Methodref          #21.#355      // scala/collection/mutable/RedBlackTree$Tree."<init>":(Lscala/collection/mutable/RedBlackTree$Node;I)V
  #357 = Utf8               maxUsedDepth
  #358 = Utf8               Lscala/collection/Iterator;
  #359 = Utf8               fromOrderedEntries
  #360 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/Iterator<Lscala/Tuple2<TA;TB;>;>;I)Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;
  #361 = Utf8               f$4
  #362 = NameAndType        #361:#351     // f$4:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
  #363 = Methodref          #2.#362       // scala/collection/mutable/RedBlackTree$.f$4:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
  #364 = Utf8               copyTree
  #365 = Utf8               n
  #366 = NameAndType        #364:#129     // copyTree:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #367 = Methodref          #2.#366       // scala/collection/mutable/RedBlackTree$.copyTree:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #368 = Utf8               c
  #369 = Utf8               f$1
  #370 = Utf8               l
  #371 = Utf8               f$2
  #372 = Utf8               lh
  #373 = Utf8               rh
  #374 = Utf8               level
  #375 = Utf8               xs$1
  #376 = Utf8               maxUsedDepth$1
  #377 = Utf8               scala/collection/Iterator
  #378 = Class              #377          // scala/collection/Iterator
  #379 = Utf8               next
  #380 = NameAndType        #379:#99      // next:()Ljava/lang/Object;
  #381 = InterfaceMethodref #378.#380     // scala/collection/Iterator.next:()Ljava/lang/Object;
  #382 = Utf8               leftSize
  #383 = Utf8               xs$2
  #384 = Utf8               maxUsedDepth$2
  #385 = Utf8               _1
  #386 = NameAndType        #385:#99      // _1:()Ljava/lang/Object;
  #387 = Methodref          #133.#386     // scala/Tuple2._1:()Ljava/lang/Object;
  #388 = Utf8               _2
  #389 = NameAndType        #388:#99      // _2:()Ljava/lang/Object;
  #390 = Methodref          #133.#389     // scala/Tuple2._2:()Ljava/lang/Object;
  #391 = Utf8               scala/MatchError
  #392 = Class              #391          // scala/MatchError
  #393 = Methodref          #392.#103     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #394 = Utf8               k
  #395 = Utf8               v
  #396 = Methodref          #4.#31        // java/lang/Object."<init>":()V
  #397 = Utf8               Code
  #398 = Utf8               LineNumberTable
  #399 = Utf8               StackMapTable
  #400 = Utf8               LocalVariableTable
  #401 = Utf8               Signature
  #402 = Utf8               MethodParameters
  #403 = Utf8               InnerClasses
  #404 = Utf8               SourceFile
  #405 = Utf8               ScalaInlineInfo
  #406 = Utf8               Scala
{
  public static final scala.collection.mutable.RedBlackTree$ MODULE$;
    descriptor: Lscala/collection/mutable/RedBlackTree$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/collection/mutable/RedBlackTree$
         3: dup
         4: invokespecial #32                 // Method "<init>":()V
         7: putstatic     #34                 // Field MODULE$:Lscala/collection/mutable/RedBlackTree$;
        10: return
      LineNumberTable:
        line 25: 0

  public boolean isRed(scala.collection.mutable.RedBlackTree$Node<?, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        13
         4: aload_1
         5: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
         8: ifeq          13
        11: iconst_1
        12: ireturn
        13: iconst_0
        14: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      15     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #37                          // (Lscala/collection/mutable/RedBlackTree$Node<**>;)Z
    MethodParameters:
      Name                           Flags
      node                           final

  public boolean isBlack(scala.collection.mutable.RedBlackTree$Node<?, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        11
         4: aload_1
         5: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
         8: ifne          13
        11: iconst_1
        12: ireturn
        13: iconst_0
        14: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      15     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #37                          // (Lscala/collection/mutable/RedBlackTree$Node<**>;)Z
    MethodParameters:
      Name                           Flags
      node                           final

  public int size(scala.collection.mutable.RedBlackTree$Node<?, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: iconst_0
         5: ireturn
         6: iconst_1
         7: aload_0
         8: aload_1
         9: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        12: invokevirtual #54                 // Method size:(Lscala/collection/mutable/RedBlackTree$Node;)I
        15: iadd
        16: aload_0
        17: aload_1
        18: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        21: invokevirtual #54                 // Method size:(Lscala/collection/mutable/RedBlackTree$Node;)I
        24: iadd
        25: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      26     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #48                          // (Lscala/collection/mutable/RedBlackTree$Node<**>;)I
    MethodParameters:
      Name                           Flags
      node                           final

  public int size(scala.collection.mutable.RedBlackTree$Tree<?, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #63                 // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
         4: ireturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/RedBlackTree$;
            0       5     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #59                          // (Lscala/collection/mutable/RedBlackTree$Tree<**>;)I
    MethodParameters:
      Name                           Flags
      tree                           final

  public boolean isEmpty(scala.collection.mutable.RedBlackTree$Tree<?, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnonnull     9
         7: iconst_1
         8: ireturn
         9: iconst_0
        10: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 9 /* same */
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      11     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #67                          // (Lscala/collection/mutable/RedBlackTree$Tree<**>;)Z
    MethodParameters:
      Name                           Flags
      tree                           final

  public void clear(scala.collection.mutable.RedBlackTree$Tree<?, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aconst_null
         2: invokevirtual #77                 // Method scala/collection/mutable/RedBlackTree$Tree.root_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
         5: aload_1
         6: iconst_0
         7: invokevirtual #81                 // Method scala/collection/mutable/RedBlackTree$Tree.size_$eq:(I)V
        10: return
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      11     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #73                          // (Lscala/collection/mutable/RedBlackTree$Tree<**>;)V
    MethodParameters:
      Name                           Flags
      tree                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.Option<B> get(scala.collection.mutable.RedBlackTree$Tree<A, B>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: aload_3
         7: invokespecial #90                 // Method getNode:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        10: astore        5
        12: aload         5
        14: ifnonnull     25
        17: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        20: astore        4
        22: goto          39
        25: new           #97                 // class scala/Some
        28: dup
        29: aload         5
        31: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        34: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        37: astore        4
        39: aload         4
        41: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 72: 0
        line 73: 12
        line 74: 25
        line 72: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      42     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      42     2   key   Ljava/lang/Object;
            0      42     3 evidence$1   Lscala/math/Ordering;
    Signature: #84                          // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<TB;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      evidence$1                     final

  private <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> getNode(scala.collection.mutable.RedBlackTree$Node<A, B>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=5, args_size=4
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_3
         7: aload_2
         8: aload_1
         9: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        12: invokeinterface #118,  3          // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        17: istore        4
        19: iload         4
        21: iconst_0
        22: if_icmpge     37
        25: aload_1
        26: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        29: aload_2
        30: aload_3
        31: astore_3
        32: astore_2
        33: astore_1
        34: goto          0
        37: iload         4
        39: iconst_0
        40: if_icmple     55
        43: aload_1
        44: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        47: aload_2
        48: aload_3
        49: astore_3
        50: astore_2
        51: astore_1
        52: goto          0
        55: aload_1
        56: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 0 /* same */
        frame_type = 5 /* same */
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ int ]
        frame_type = 17 /* same */
      LineNumberTable:
        line 78: 0
        line 80: 6
        line 81: 19
        line 82: 37
        line 83: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      37     4   cmp   I
            0      57     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      57     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      57     2   key   Ljava/lang/Object;
            0      57     3   ord   Lscala/math/Ordering;
    Signature: #111                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final
      key                            final
      ord                            final

  public <A extends java.lang.Object> boolean contains(scala.collection.mutable.RedBlackTree$Tree<A, ?>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: aload_3
         7: invokespecial #90                 // Method getNode:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        10: ifnull        15
        13: iconst_1
        14: ireturn
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      17     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      17     2   key   Ljava/lang/Object;
            0      17     3 evidence$2   Lscala/math/Ordering;
    Signature: #123                         // <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;TA;Lscala/math/Ordering<TA;>;)Z
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      evidence$2                     final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.Option<scala.Tuple2<A, B>> min(scala.collection.mutable.RedBlackTree$Tree<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: invokevirtual #131                // Method scala$collection$mutable$RedBlackTree$$minNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
         8: astore_3
         9: aload_3
        10: ifnonnull     20
        13: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        16: astore_2
        17: goto          43
        20: new           #97                 // class scala/Some
        23: dup
        24: new           #133                // class scala/Tuple2
        27: dup
        28: aload_3
        29: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        32: aload_3
        33: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        36: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        39: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        42: astore_2
        43: aload_2
        44: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 88: 0
        line 89: 9
        line 90: 20
        line 88: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      45     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #127                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;)Lscala/Option<Lscala/Tuple2<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      tree                           final

  public <A extends java.lang.Object> scala.Option<A> minKey(scala.collection.mutable.RedBlackTree$Tree<A, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: invokevirtual #131                // Method scala$collection$mutable$RedBlackTree$$minNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
         8: astore_3
         9: aload_3
        10: ifnonnull     20
        13: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        16: astore_2
        17: goto          32
        20: new           #97                 // class scala/Some
        23: dup
        24: aload_3
        25: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        28: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        31: astore_2
        32: aload_2
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 93: 0
        line 94: 9
        line 95: 20
        line 93: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      34     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #138                         // <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      tree                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> scala$collection$mutable$RedBlackTree$$minNode(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: aload_1
         8: invokevirtual #142                // Method minNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        11: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      12     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #139                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> minNodeNonNull(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnonnull     9
         7: aload_1
         8: areturn
         9: aload_1
        10: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        13: astore_1
        14: goto          0
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 8 /* same */
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      17     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #139                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.Option<scala.Tuple2<A, B>> max(scala.collection.mutable.RedBlackTree$Tree<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: invokespecial #146                // Method maxNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
         8: astore_3
         9: aload_3
        10: ifnonnull     20
        13: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        16: astore_2
        17: goto          43
        20: new           #97                 // class scala/Some
        23: dup
        24: new           #133                // class scala/Tuple2
        27: dup
        28: aload_3
        29: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        32: aload_3
        33: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        36: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        39: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        42: astore_2
        43: aload_2
        44: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 104: 0
        line 105: 9
        line 106: 20
        line 104: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      45     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #127                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;)Lscala/Option<Lscala/Tuple2<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      tree                           final

  public <A extends java.lang.Object> scala.Option<A> maxKey(scala.collection.mutable.RedBlackTree$Tree<A, ?>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: invokespecial #146                // Method maxNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
         8: astore_3
         9: aload_3
        10: ifnonnull     20
        13: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        16: astore_2
        17: goto          32
        20: new           #97                 // class scala/Some
        23: dup
        24: aload_3
        25: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        28: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        31: astore_2
        32: aload_2
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 109: 0
        line 110: 9
        line 111: 20
        line 109: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      34     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #138                         // <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      tree                           final

  private <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> maxNode(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: aload_1
         8: invokevirtual #150                // Method maxNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        11: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      12     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #139                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> maxNodeNonNull(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnonnull     9
         7: aload_1
         8: areturn
         9: aload_1
        10: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        13: astore_1
        14: goto          0
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 8 /* same */
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      17     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #139                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.Option<scala.Tuple2<A, B>> minAfter(scala.collection.mutable.RedBlackTree$Tree<A, B>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: aload_3
         7: invokevirtual #155                // Method scala$collection$mutable$RedBlackTree$$minNodeAfter:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        10: astore        5
        12: aload         5
        14: ifnonnull     25
        17: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        20: astore        4
        22: goto          51
        25: new           #97                 // class scala/Some
        28: dup
        29: new           #133                // class scala/Tuple2
        32: dup
        33: aload         5
        35: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        38: aload         5
        40: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        43: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        46: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        49: astore        4
        51: aload         4
        53: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 125: 0
        line 126: 12
        line 127: 25
        line 125: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      54     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      54     2   key   Ljava/lang/Object;
            0      54     3   ord   Lscala/math/Ordering;
    Signature: #152                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<Lscala/Tuple2<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      ord                            final

  public <A extends java.lang.Object> scala.Option<A> minKeyAfter(scala.collection.mutable.RedBlackTree$Tree<A, ?>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: aload_3
         7: invokevirtual #155                // Method scala$collection$mutable$RedBlackTree$$minNodeAfter:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        10: astore        5
        12: aload         5
        14: ifnonnull     25
        17: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        20: astore        4
        22: goto          39
        25: new           #97                 // class scala/Some
        28: dup
        29: aload         5
        31: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        34: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        37: astore        4
        39: aload         4
        41: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 131: 0
        line 132: 12
        line 133: 25
        line 131: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      42     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      42     2   key   Ljava/lang/Object;
            0      42     3   ord   Lscala/math/Ordering;
    Signature: #157                         // <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      ord                            final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> scala$collection$mutable$RedBlackTree$$minNodeAfter(scala.collection.mutable.RedBlackTree$Node<A, B>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=4
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aconst_null
         7: astore        4
         9: aload_1
        10: astore        5
        12: iconst_1
        13: istore        6
        15: aload         5
        17: ifnull        68
        20: iload         6
        22: iconst_0
        23: if_icmpeq     68
        26: aload         5
        28: astore        4
        30: aload_3
        31: aload_2
        32: aload         5
        34: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        37: invokeinterface #118,  3          // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        42: istore        6
        44: iload         6
        46: iconst_0
        47: if_icmpge     58
        50: aload         5
        52: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        55: goto          63
        58: aload         5
        60: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        63: astore        5
        65: goto          15
        68: iload         6
        70: iconst_0
        71: if_icmpgt     77
        74: aload         4
        76: areturn
        77: aload_0
        78: aload         4
        80: invokevirtual #160                // Method scala$collection$mutable$RedBlackTree$$successor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        83: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 6 /* same */
        frame_type = 254 /* append */
          offset_delta = 8
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node, int ]
        frame_type = 42 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 4 /* same */
        frame_type = 8 /* same */
      LineNumberTable:
        line 137: 0
        line 139: 6
        line 140: 9
        line 141: 12
        line 142: 15
        line 143: 26
        line 144: 30
        line 145: 44
        line 142: 65
        line 147: 68
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      74     4     y   Lscala/collection/mutable/RedBlackTree$Node;
           12      71     5     x   Lscala/collection/mutable/RedBlackTree$Node;
           15      68     6   cmp   I
            0      84     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      84     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      84     2   key   Ljava/lang/Object;
            0      84     3   ord   Lscala/math/Ordering;
    Signature: #111                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final
      key                            final
      ord                            final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.Option<scala.Tuple2<A, B>> maxBefore(scala.collection.mutable.RedBlackTree$Tree<A, B>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: aload_3
         7: invokespecial #166                // Method maxNodeBefore:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        10: astore        5
        12: aload         5
        14: ifnonnull     25
        17: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        20: astore        4
        22: goto          51
        25: new           #97                 // class scala/Some
        28: dup
        29: new           #133                // class scala/Tuple2
        32: dup
        33: aload         5
        35: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        38: aload         5
        40: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        43: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        46: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        49: astore        4
        51: aload         4
        53: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 155: 0
        line 156: 12
        line 157: 25
        line 155: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      54     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      54     2   key   Ljava/lang/Object;
            0      54     3   ord   Lscala/math/Ordering;
    Signature: #152                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<Lscala/Tuple2<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      ord                            final

  public <A extends java.lang.Object> scala.Option<A> maxKeyBefore(scala.collection.mutable.RedBlackTree$Tree<A, ?>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: aload_3
         7: invokespecial #166                // Method maxNodeBefore:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        10: astore        5
        12: aload         5
        14: ifnonnull     25
        17: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        20: astore        4
        22: goto          39
        25: new           #97                 // class scala/Some
        28: dup
        29: aload         5
        31: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        34: invokespecial #104                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        37: astore        4
        39: aload         4
        41: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/Option, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 161: 0
        line 162: 12
        line 163: 25
        line 161: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      42     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      42     2   key   Ljava/lang/Object;
            0      42     3   ord   Lscala/math/Ordering;
    Signature: #157                         // <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;TA;Lscala/math/Ordering<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      ord                            final

  private <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> maxNodeBefore(scala.collection.mutable.RedBlackTree$Node<A, B>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=7, args_size=4
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aconst_null
         7: astore        4
         9: aload_1
        10: astore        5
        12: iconst_1
        13: istore        6
        15: aload         5
        17: ifnull        68
        20: iload         6
        22: iconst_0
        23: if_icmpeq     68
        26: aload         5
        28: astore        4
        30: aload_3
        31: aload_2
        32: aload         5
        34: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        37: invokeinterface #118,  3          // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        42: istore        6
        44: iload         6
        46: iconst_0
        47: if_icmpge     58
        50: aload         5
        52: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        55: goto          63
        58: aload         5
        60: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        63: astore        5
        65: goto          15
        68: iload         6
        70: iconst_0
        71: if_icmple     77
        74: aload         4
        76: areturn
        77: aload_0
        78: aload         4
        80: invokespecial #170                // Method predecessor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        83: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 6 /* same */
        frame_type = 254 /* append */
          offset_delta = 8
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node, int ]
        frame_type = 42 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 4 /* same */
        frame_type = 8 /* same */
      LineNumberTable:
        line 167: 0
        line 169: 6
        line 170: 9
        line 171: 12
        line 172: 15
        line 173: 26
        line 174: 30
        line 175: 44
        line 172: 65
        line 177: 68
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      74     4     y   Lscala/collection/mutable/RedBlackTree$Node;
           12      71     5     x   Lscala/collection/mutable/RedBlackTree$Node;
           15      68     6   cmp   I
            0      84     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      84     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      84     2   key   Ljava/lang/Object;
            0      84     3   ord   Lscala/math/Ordering;
    Signature: #111                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final
      key                            final
      ord                            final

  public <A extends java.lang.Object, B extends java.lang.Object> void insert(scala.collection.mutable.RedBlackTree$Tree<A, B>, A, B, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Ordering;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=11, args_size=5
         0: aconst_null
         1: astore        5
         3: aload_1
         4: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         7: astore        6
         9: iconst_1
        10: istore        7
        12: aload         6
        14: ifnull        66
        17: iload         7
        19: iconst_0
        20: if_icmpeq     66
        23: aload         6
        25: astore        5
        27: aload         4
        29: aload_2
        30: aload         6
        32: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        35: invokeinterface #118,  3          // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        40: istore        7
        42: iload         7
        44: iconst_0
        45: if_icmpge     56
        48: aload         6
        50: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        53: goto          61
        56: aload         6
        58: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        61: astore        6
        63: goto          12
        66: iload         7
        68: iconst_0
        69: if_icmpne     79
        72: aload         5
        74: aload_3
        75: invokevirtual #176                // Method scala/collection/mutable/RedBlackTree$Node.value_$eq:(Ljava/lang/Object;)V
        78: return
        79: getstatic     #179                // Field scala/collection/mutable/RedBlackTree$Node$.MODULE$:Lscala/collection/mutable/RedBlackTree$Node$;
        82: pop
        83: iconst_1
        84: istore        9
        86: new           #15                 // class scala/collection/mutable/RedBlackTree$Node
        89: dup
        90: aload_2
        91: aload_3
        92: iload         9
        94: aconst_null
        95: aconst_null
        96: aload         5
        98: invokespecial #182                // Method scala/collection/mutable/RedBlackTree$Node."<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
       101: astore        10
       103: aload         10
       105: aconst_null
       106: astore        10
       108: astore        8
       110: aload         5
       112: ifnonnull     124
       115: aload_1
       116: aload         8
       118: invokevirtual #77                 // Method scala/collection/mutable/RedBlackTree$Tree.root_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       121: goto          147
       124: iload         7
       126: iconst_0
       127: if_icmpge     140
       130: aload         5
       132: aload         8
       134: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       137: goto          147
       140: aload         5
       142: aload         8
       144: invokevirtual #188                // Method scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       147: aload_0
       148: aload_1
       149: aload         8
       151: invokespecial #192                // Method fixAfterInsert:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       154: aload_1
       155: aload_1
       156: invokevirtual #63                 // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
       159: iconst_1
       160: iadd
       161: invokevirtual #81                 // Method scala/collection/mutable/RedBlackTree$Tree.size_$eq:(I)V
       164: return
      StackMapTable: number_of_entries = 8
        frame_type = 254 /* append */
          offset_delta = 12
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node, int ]
        frame_type = 43 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 4 /* same */
        frame_type = 12 /* same */
        frame_type = 254 /* append */
          offset_delta = 44
          locals = [ class scala/collection/mutable/RedBlackTree$Node, int, null ]
        frame_type = 15 /* same */
        frame_type = 6 /* same */
      LineNumberTable:
        line 184: 0
        line 185: 3
        line 186: 9
        line 187: 12
        line 188: 23
        line 189: 27
        line 190: 42
        line 187: 63
        line 193: 66
        line 195: 79
        line 53: 86
        line 195: 103
        line 197: 110
        line 198: 124
        line 199: 140
        line 201: 147
        line 202: 154
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          110      54     8     z   Lscala/collection/mutable/RedBlackTree$Node;
            3     161     5     y   Lscala/collection/mutable/RedBlackTree$Node;
            9     155     6     x   Lscala/collection/mutable/RedBlackTree$Node;
           12     152     7   cmp   I
            0     165     0  this   Lscala/collection/mutable/RedBlackTree$;
            0     165     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0     165     2   key   Ljava/lang/Object;
            0     165     3 value   Ljava/lang/Object;
            0     165     4   ord   Lscala/math/Ordering;
           86      17     9 leaf_red   Z
    Signature: #173                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;TB;Lscala/math/Ordering<TA;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      value                          final
      ord                            final

  private <A extends java.lang.Object, B extends java.lang.Object> void fixAfterInsert(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=6, args_size=3
         0: aload_2
         1: astore_3
         2: aload_0
         3: aload_3
         4: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
         7: invokevirtual #201                // Method isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        10: ifeq          256
        13: aload_3
        14: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        17: aload_3
        18: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        21: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        24: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        27: if_acmpne     143
        30: aload_3
        31: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        34: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        37: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        40: astore        4
        42: aload_0
        43: aload         4
        45: invokevirtual #201                // Method isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        48: ifeq          87
        51: aload_3
        52: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        55: iconst_0
        56: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
        59: aload         4
        61: iconst_0
        62: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
        65: aload_3
        66: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        69: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        72: iconst_1
        73: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
        76: aload_3
        77: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        80: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        83: astore_3
        84: goto          2
        87: aload_3
        88: aload_3
        89: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        92: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        95: if_acmpne     109
        98: aload_3
        99: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       102: astore_3
       103: aload_0
       104: aload_1
       105: aload_3
       106: invokespecial #208                // Method rotateLeft:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       109: aload_3
       110: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       113: iconst_0
       114: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       117: aload_3
       118: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       121: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       124: iconst_1
       125: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       128: aload_0
       129: aload_1
       130: aload_3
       131: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       134: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       137: invokespecial #211                // Method rotateRight:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       140: goto          2
       143: aload_3
       144: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       147: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       150: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       153: astore        5
       155: aload_0
       156: aload         5
       158: invokevirtual #201                // Method isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
       161: ifeq          200
       164: aload_3
       165: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       168: iconst_0
       169: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       172: aload         5
       174: iconst_0
       175: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       178: aload_3
       179: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       182: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       185: iconst_1
       186: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       189: aload_3
       190: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       193: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       196: astore_3
       197: goto          2
       200: aload_3
       201: aload_3
       202: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       205: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       208: if_acmpne     222
       211: aload_3
       212: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       215: astore_3
       216: aload_0
       217: aload_1
       218: aload_3
       219: invokespecial #211                // Method rotateRight:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       222: aload_3
       223: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       226: iconst_0
       227: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       230: aload_3
       231: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       234: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       237: iconst_1
       238: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       241: aload_0
       242: aload_1
       243: aload_3
       244: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       247: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       250: invokespecial #208                // Method rotateLeft:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       253: goto          2
       256: aload_1
       257: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
       260: iconst_0
       261: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       264: return
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 84
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 21 /* same */
        frame_type = 250 /* chop */
          offset_delta = 33
        frame_type = 253 /* append */
          offset_delta = 56
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 21 /* same */
        frame_type = 249 /* chop */
          offset_delta = 33
      LineNumberTable:
        line 207: 0
        line 208: 2
        line 209: 13
        line 210: 30
        line 211: 42
        line 212: 51
        line 213: 59
        line 214: 65
        line 215: 76
        line 217: 87
        line 218: 98
        line 219: 103
        line 221: 109
        line 222: 117
        line 223: 128
        line 226: 143
        line 227: 155
        line 228: 164
        line 229: 172
        line 230: 178
        line 231: 189
        line 233: 200
        line 234: 211
        line 235: 216
        line 237: 222
        line 238: 230
        line 239: 241
        line 209: 253
        line 243: 256
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           42      98     4     y   Lscala/collection/mutable/RedBlackTree$Node;
          155      98     5     y   Lscala/collection/mutable/RedBlackTree$Node;
            2     262     3     z   Lscala/collection/mutable/RedBlackTree$Node;
            0     265     0  this   Lscala/collection/mutable/RedBlackTree$;
            0     265     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0     265     2  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #196                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      node                           final

  public <A extends java.lang.Object, B extends java.lang.Object> void delete(scala.collection.mutable.RedBlackTree$Tree<A, B>, A, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=9, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: aload_3
         7: invokespecial #90                 // Method getNode:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        10: astore        4
        12: aload         4
        14: ifnull        242
        17: aload         4
        19: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
        22: istore        6
        24: aload         4
        26: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        29: ifnonnull     61
        32: aload         4
        34: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        37: astore        7
        39: aload_0
        40: aload_1
        41: aload         4
        43: aload         4
        45: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        48: invokespecial #218                // Method transplant:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
        51: aload         4
        53: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        56: astore        8
        58: goto          218
        61: aload         4
        63: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        66: ifnonnull     98
        69: aload         4
        71: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        74: astore        7
        76: aload_0
        77: aload_1
        78: aload         4
        80: aload         4
        82: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        85: invokespecial #218                // Method transplant:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
        88: aload         4
        90: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        93: astore        8
        95: goto          218
        98: aload_0
        99: aload         4
       101: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       104: invokevirtual #142                // Method minNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
       107: astore        5
       109: aload         5
       111: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
       114: istore        6
       116: aload         5
       118: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       121: astore        7
       123: aload         5
       125: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       128: aload         4
       130: if_acmpne     140
       133: aload         5
       135: astore        8
       137: goto          179
       140: aload         5
       142: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       145: astore        8
       147: aload_0
       148: aload_1
       149: aload         5
       151: aload         5
       153: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       156: invokespecial #218                // Method transplant:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
       159: aload         5
       161: aload         4
       163: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       166: invokevirtual #188                // Method scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       169: aload         5
       171: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       174: aload         5
       176: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       179: aload_0
       180: aload_1
       181: aload         4
       183: aload         5
       185: invokespecial #218                // Method transplant:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
       188: aload         5
       190: aload         4
       192: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       195: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       198: aload         5
       200: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       203: aload         5
       205: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       208: aload         5
       210: aload         4
       212: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
       215: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       218: iload         6
       220: ifne          232
       223: aload_0
       224: aload_1
       225: aload         7
       227: aload         8
       229: invokespecial #224                // Method fixAfterDelete:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
       232: aload_1
       233: aload_1
       234: invokevirtual #63                 // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
       237: iconst_1
       238: isub
       239: invokevirtual #81                 // Method scala/collection/mutable/RedBlackTree$Tree.size_$eq:(I)V
       242: return
      StackMapTable: number_of_entries = 7
        frame_type = 254 /* append */
          offset_delta = 61
          locals = [ class scala/collection/mutable/RedBlackTree$Node, top, int ]
        frame_type = 36 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node, int, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/collection/mutable/RedBlackTree$Node, top, int, class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
        frame_type = 13 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/mutable/RedBlackTree$, class scala/collection/mutable/RedBlackTree$Tree, class java/lang/Object, class scala/math/Ordering, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 249: 0
        line 250: 12
        line 252: 17
        line 256: 24
        line 257: 32
        line 258: 39
        line 259: 51
        line 261: 61
        line 262: 69
        line 263: 76
        line 264: 88
        line 267: 98
        line 268: 109
        line 269: 116
        line 271: 123
        line 273: 140
        line 274: 147
        line 275: 159
        line 276: 169
        line 278: 179
        line 279: 188
        line 280: 198
        line 281: 208
        line 284: 218
        line 285: 232
        line 250: 242
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17     225     5     y   Lscala/collection/mutable/RedBlackTree$Node;
           24     218     6 yIsRed   Z
           24     218     7     x   Lscala/collection/mutable/RedBlackTree$Node;
           24     218     8 xParent   Lscala/collection/mutable/RedBlackTree$Node;
           12     230     4     z   Lscala/collection/mutable/RedBlackTree$Node;
            0     243     0  this   Lscala/collection/mutable/RedBlackTree$;
            0     243     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0     243     2   key   Ljava/lang/Object;
            0     243     3   ord   Lscala/math/Ordering;
    Signature: #214                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;TA;Lscala/math/Ordering<TA;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      key                            final
      ord                            final

  private <A extends java.lang.Object, B extends java.lang.Object> void fixAfterDelete(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.collection.mutable.RedBlackTree$Node<A, B>, scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=8, args_size=4
         0: aload_2
         1: astore        4
         3: aload_3
         4: astore        5
         6: aload         4
         8: aload_1
         9: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        12: if_acmpeq     361
        15: aload_0
        16: aload         4
        18: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        21: ifeq          361
        24: aload         4
        26: aload         5
        28: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        31: if_acmpne     194
        34: aload         5
        36: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        39: astore        6
        41: aload         6
        43: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
        46: ifeq          75
        49: aload         6
        51: iconst_0
        52: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
        55: aload         5
        57: iconst_1
        58: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
        61: aload_0
        62: aload_1
        63: aload         5
        65: invokespecial #208                // Method rotateLeft:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
        68: aload         5
        70: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        73: astore        6
        75: aload_0
        76: aload         6
        78: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        81: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        84: ifeq          112
        87: aload_0
        88: aload         6
        90: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        93: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        96: ifeq          112
        99: aload         6
       101: iconst_1
       102: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       105: aload         5
       107: astore        4
       109: goto          351
       112: aload_0
       113: aload         6
       115: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       118: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
       121: ifeq          153
       124: aload         6
       126: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       129: iconst_0
       130: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       133: aload         6
       135: iconst_1
       136: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       139: aload_0
       140: aload_1
       141: aload         6
       143: invokespecial #211                // Method rotateRight:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       146: aload         5
       148: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       151: astore        6
       153: aload         6
       155: aload         5
       157: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
       160: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       163: aload         5
       165: iconst_0
       166: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       169: aload         6
       171: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       174: iconst_0
       175: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       178: aload_0
       179: aload_1
       180: aload         5
       182: invokespecial #208                // Method rotateLeft:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       185: aload_1
       186: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
       189: astore        4
       191: goto          351
       194: aload         5
       196: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       199: astore        7
       201: aload         7
       203: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
       206: ifeq          235
       209: aload         7
       211: iconst_0
       212: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       215: aload         5
       217: iconst_1
       218: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       221: aload_0
       222: aload_1
       223: aload         5
       225: invokespecial #211                // Method rotateRight:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       228: aload         5
       230: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       233: astore        7
       235: aload_0
       236: aload         7
       238: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       241: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
       244: ifeq          272
       247: aload_0
       248: aload         7
       250: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       253: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
       256: ifeq          272
       259: aload         7
       261: iconst_1
       262: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       265: aload         5
       267: astore        4
       269: goto          351
       272: aload_0
       273: aload         7
       275: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       278: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
       281: ifeq          313
       284: aload         7
       286: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       289: iconst_0
       290: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       293: aload         7
       295: iconst_1
       296: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       299: aload_0
       300: aload_1
       301: aload         7
       303: invokespecial #208                // Method rotateLeft:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       306: aload         5
       308: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       311: astore        7
       313: aload         7
       315: aload         5
       317: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
       320: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       323: aload         5
       325: iconst_0
       326: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       329: aload         7
       331: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
       334: iconst_0
       335: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       338: aload_0
       339: aload_1
       340: aload         5
       342: invokespecial #211                // Method rotateRight:(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
       345: aload_1
       346: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
       349: astore        4
       351: aload         4
       353: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
       356: astore        5
       358: goto          6
       361: aload         4
       363: ifnull        372
       366: aload         4
       368: iconst_0
       369: invokevirtual #205                // Method scala/collection/mutable/RedBlackTree$Node.red_$eq:(Z)V
       372: return
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 6
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 68
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 36 /* same */
        frame_type = 40 /* same */
        frame_type = 250 /* chop */
          offset_delta = 40
        frame_type = 253 /* append */
          offset_delta = 40
          locals = [ top, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 36 /* same */
        frame_type = 40 /* same */
        frame_type = 249 /* chop */
          offset_delta = 37
        frame_type = 9 /* same */
        frame_type = 10 /* same */
      LineNumberTable:
        line 290: 0
        line 291: 3
        line 292: 6
        line 293: 24
        line 294: 34
        line 297: 41
        line 298: 49
        line 299: 55
        line 300: 61
        line 301: 68
        line 303: 75
        line 304: 99
        line 305: 105
        line 307: 112
        line 308: 124
        line 309: 133
        line 310: 139
        line 311: 146
        line 313: 153
        line 314: 163
        line 315: 169
        line 316: 178
        line 317: 185
        line 320: 194
        line 323: 201
        line 324: 209
        line 325: 215
        line 326: 221
        line 327: 228
        line 329: 235
        line 330: 259
        line 331: 265
        line 333: 272
        line 334: 284
        line 335: 293
        line 336: 299
        line 337: 306
        line 339: 313
        line 340: 323
        line 341: 329
        line 342: 338
        line 343: 345
        line 346: 351
        line 292: 358
        line 348: 361
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           41     150     6     w   Lscala/collection/mutable/RedBlackTree$Node;
          201     150     7     w   Lscala/collection/mutable/RedBlackTree$Node;
            3     369     4     x   Lscala/collection/mutable/RedBlackTree$Node;
            6     366     5 xParent   Lscala/collection/mutable/RedBlackTree$Node;
            0     373     0  this   Lscala/collection/mutable/RedBlackTree$;
            0     373     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0     373     2  node   Lscala/collection/mutable/RedBlackTree$Node;
            0     373     3 parent   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #227                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      node                           final
      parent                         final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> scala$collection$mutable$RedBlackTree$$successor(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnull        16
         7: aload_0
         8: aload_1
         9: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        12: invokevirtual #142                // Method minNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        15: areturn
        16: aload_1
        17: astore_2
        18: aload_1
        19: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        22: astore_3
        23: aload_3
        24: ifnull        45
        27: aload_2
        28: aload_3
        29: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        32: if_acmpne     45
        35: aload_3
        36: astore_2
        37: aload_3
        38: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        41: astore_3
        42: goto          23
        45: aload_3
        46: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 16 /* same */
        frame_type = 253 /* append */
          offset_delta = 6
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 21 /* same */
      LineNumberTable:
        line 358: 0
        line 360: 16
        line 361: 18
        line 362: 23
        line 363: 35
        line 364: 37
        line 362: 42
        line 366: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      28     2     x   Lscala/collection/mutable/RedBlackTree$Node;
           23      23     3     y   Lscala/collection/mutable/RedBlackTree$Node;
            0      47     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      47     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #139                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final

  private <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> predecessor(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnull        16
         7: aload_0
         8: aload_1
         9: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        12: invokevirtual #150                // Method maxNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        15: areturn
        16: aload_1
        17: astore_2
        18: aload_1
        19: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        22: astore_3
        23: aload_3
        24: ifnull        45
        27: aload_2
        28: aload_3
        29: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        32: if_acmpne     45
        35: aload_3
        36: astore_2
        37: aload_3
        38: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        41: astore_3
        42: goto          23
        45: aload_3
        46: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 16 /* same */
        frame_type = 253 /* append */
          offset_delta = 6
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 21 /* same */
      LineNumberTable:
        line 375: 0
        line 377: 16
        line 378: 18
        line 379: 23
        line 380: 35
        line 381: 37
        line 379: 42
        line 383: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      28     2     x   Lscala/collection/mutable/RedBlackTree$Node;
           23      23     3     y   Lscala/collection/mutable/RedBlackTree$Node;
            0      47     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      47     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #139                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      node                           final

  private <A extends java.lang.Object, B extends java.lang.Object> void rotateLeft(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=4, args_size=3
         0: aload_2
         1: ifnull        95
         4: aload_2
         5: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
         8: astore_3
         9: aload_2
        10: aload_3
        11: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        14: invokevirtual #188                // Method scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        17: aload_3
        18: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        21: ifnull        32
        24: aload_3
        25: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        28: aload_2
        29: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        32: aload_3
        33: aload_2
        34: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        37: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        40: aload_2
        41: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        44: ifnonnull     55
        47: aload_1
        48: aload_3
        49: invokevirtual #77                 // Method scala/collection/mutable/RedBlackTree$Tree.root_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        52: goto          85
        55: aload_2
        56: aload_2
        57: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        60: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        63: if_acmpne     77
        66: aload_2
        67: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        70: aload_3
        71: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        74: goto          85
        77: aload_2
        78: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        81: aload_3
        82: invokevirtual #188                // Method scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        85: aload_3
        86: aload_2
        87: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        90: aload_2
        91: aload_3
        92: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        95: return
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 22 /* same */
        frame_type = 21 /* same */
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 9
      LineNumberTable:
        line 387: 0
        line 389: 4
        line 390: 9
        line 392: 17
        line 393: 32
        line 395: 40
        line 396: 55
        line 397: 77
        line 399: 85
        line 400: 90
        line 387: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      86     3     y   Lscala/collection/mutable/RedBlackTree$Node;
            0      96     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      96     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      96     2     x   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #196                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      x                              final

  private <A extends java.lang.Object, B extends java.lang.Object> void rotateRight(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=4, args_size=3
         0: aload_2
         1: ifnull        95
         4: aload_2
         5: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
         8: astore_3
         9: aload_2
        10: aload_3
        11: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        14: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        17: aload_3
        18: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        21: ifnull        32
        24: aload_3
        25: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        28: aload_2
        29: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        32: aload_3
        33: aload_2
        34: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        37: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        40: aload_2
        41: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        44: ifnonnull     55
        47: aload_1
        48: aload_3
        49: invokevirtual #77                 // Method scala/collection/mutable/RedBlackTree$Tree.root_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        52: goto          85
        55: aload_2
        56: aload_2
        57: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        60: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        63: if_acmpne     77
        66: aload_2
        67: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        70: aload_3
        71: invokevirtual #188                // Method scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        74: goto          85
        77: aload_2
        78: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        81: aload_3
        82: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        85: aload_3
        86: aload_2
        87: invokevirtual #188                // Method scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        90: aload_2
        91: aload_3
        92: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        95: return
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 22 /* same */
        frame_type = 21 /* same */
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 9
      LineNumberTable:
        line 403: 0
        line 405: 4
        line 406: 9
        line 408: 17
        line 409: 32
        line 411: 40
        line 412: 55
        line 413: 77
        line 415: 85
        line 416: 90
        line 403: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      86     3     y   Lscala/collection/mutable/RedBlackTree$Node;
            0      96     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      96     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      96     2     x   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #196                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      x                              final

  private <A extends java.lang.Object, B extends java.lang.Object> void transplant(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.collection.mutable.RedBlackTree$Node<A, B>, scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=4, args_size=4
         0: aload_2
         1: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnonnull     15
         7: aload_1
         8: aload_3
         9: invokevirtual #77                 // Method scala/collection/mutable/RedBlackTree$Tree.root_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        12: goto          45
        15: aload_2
        16: aload_2
        17: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        20: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        23: if_acmpne     37
        26: aload_2
        27: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        30: aload_3
        31: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$Node.left_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        34: goto          45
        37: aload_2
        38: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        41: aload_3
        42: invokevirtual #188                // Method scala/collection/mutable/RedBlackTree$Node.right_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        45: aload_3
        46: ifnull        57
        49: aload_3
        50: aload_2
        51: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        54: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        57: return
      StackMapTable: number_of_entries = 4
        frame_type = 15 /* same */
        frame_type = 21 /* same */
        frame_type = 7 /* same */
        frame_type = 11 /* same */
      LineNumberTable:
        line 424: 0
        line 425: 15
        line 426: 37
        line 428: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      58     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      58     2    to   Lscala/collection/mutable/RedBlackTree$Node;
            0      58     3  from   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #227                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      to                             final
      from                           final

  public <A extends java.lang.Object, B extends java.lang.Object, U extends java.lang.Object> void foreach(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.Function1<scala.Tuple2<A, B>, U>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=3
         0: aload_1
         1: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         4: astore_3
         5: aload_3
         6: ifnull        133
         9: aload_3
        10: astore        4
        12: aload         4
        14: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        17: ifnull        90
        20: aload         4
        22: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        25: astore        5
        27: aload         5
        29: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        32: ifnull        45
        35: aload_0
        36: aload         5
        38: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        41: aload_2
        42: invokespecial #240                // Method foreachNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
        45: aload_2
        46: new           #133                // class scala/Tuple2
        49: dup
        50: aload         5
        52: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        55: aload         5
        57: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        60: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        63: invokeinterface #246,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        68: pop
        69: aload         5
        71: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        74: ifnull        87
        77: aload         5
        79: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        82: astore        5
        84: goto          27
        87: aconst_null
        88: astore        5
        90: aload_2
        91: new           #133                // class scala/Tuple2
        94: dup
        95: aload         4
        97: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
       100: aload         4
       102: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
       105: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       108: invokeinterface #246,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       113: pop
       114: aload         4
       116: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       119: ifnull        132
       122: aload         4
       124: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       127: astore        4
       129: goto          12
       132: return
       133: return
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 12
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 17 /* same */
        frame_type = 41 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 41 /* same */
        frame_type = 250 /* chop */
          offset_delta = 0
      LineNumberTable:
        line 433: 0
        line 436: 5
        line 439: 12
        line 439: 27
        line 440: 45
        line 441: 69
        line 439: 87
        line 440: 90
        line 441: 114
        line 436: 132
        line 433: 133
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     134     0  this   Lscala/collection/mutable/RedBlackTree$;
            0     134     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0     134     2     f   Lscala/Function1;
            5     128     3 foreachNode_node   Lscala/collection/mutable/RedBlackTree$Node;
           12     120     4 foreachNode_foreachNodeNonNull_node   Lscala/collection/mutable/RedBlackTree$Node;
           27      60     5 foreachNodeNonNull_node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #235                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Function1<Lscala/Tuple2<TA;TB;>;TU;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      f                              final

  private <A extends java.lang.Object, B extends java.lang.Object, U extends java.lang.Object> void foreachNode(scala.collection.mutable.RedBlackTree$Node<A, B>, scala.Function1<scala.Tuple2<A, B>, U>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=4, args_size=3
         0: aload_1
         1: ifnull        59
         4: aload_1
         5: astore_3
         6: aload_3
         7: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        10: ifnull        22
        13: aload_0
        14: aload_3
        15: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        18: aload_2
        19: invokespecial #240                // Method foreachNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
        22: aload_2
        23: new           #133                // class scala/Tuple2
        26: dup
        27: aload_3
        28: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        31: aload_3
        32: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        35: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        38: invokeinterface #246,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        43: pop
        44: aload_3
        45: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        48: ifnull        59
        51: aload_3
        52: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        55: astore_3
        56: goto          6
        59: return
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 15 /* same */
        frame_type = 250 /* chop */
          offset_delta = 36
      LineNumberTable:
        line 436: 0
        line 439: 6
        line 440: 22
        line 441: 44
        line 436: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      60     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      60     2     f   Lscala/Function1;
            6      53     3 foreachNodeNonNull_node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #252                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/Function1<Lscala/Tuple2<TA;TB;>;TU;>;)V
    MethodParameters:
      Name                           Flags
      node                           final
      f                              final

  private <A extends java.lang.Object, B extends java.lang.Object, U extends java.lang.Object> void foreachNodeNonNull(scala.collection.mutable.RedBlackTree$Node<A, B>, scala.Function1<scala.Tuple2<A, B>, U>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=3, args_size=3
         0: aload_1
         1: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnull        16
         7: aload_0
         8: aload_1
         9: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        12: aload_2
        13: invokespecial #240                // Method foreachNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
        16: aload_2
        17: new           #133                // class scala/Tuple2
        20: dup
        21: aload_1
        22: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        25: aload_1
        26: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        29: invokespecial #136                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        32: invokeinterface #246,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        37: pop
        38: aload_1
        39: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        42: ifnull        55
        45: aload_1
        46: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        49: aload_2
        50: astore_2
        51: astore_1
        52: goto          0
        55: return
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 15 /* same */
        frame_type = 38 /* same */
      LineNumberTable:
        line 439: 0
        line 440: 16
        line 441: 38
        line 438: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      56     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      56     2     f   Lscala/Function1;
    Signature: #252                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/Function1<Lscala/Tuple2<TA;TB;>;TU;>;)V
    MethodParameters:
      Name                           Flags
      node                           final
      f                              final

  public <A extends java.lang.Object, U extends java.lang.Object> void foreachKey(scala.collection.mutable.RedBlackTree$Tree<A, ?>, scala.Function1<A, U>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_1
         1: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         4: astore_3
         5: aload_3
         6: ifnull        62
         9: aload_3
        10: astore        4
        12: aload         4
        14: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        17: astore        5
        19: aload         5
        21: ifnull        31
        24: aload_0
        25: aload         5
        27: aload_2
        28: invokespecial #257                // Method g$1:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
        31: aload_2
        32: aload         4
        34: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        37: invokeinterface #246,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        42: pop
        43: aload         4
        45: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        48: astore        6
        50: aload         6
        52: ifnull        62
        55: aload         6
        57: astore        4
        59: goto          12
        62: return
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 12
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 249 /* chop */
          offset_delta = 30
      LineNumberTable:
        line 452: 0
        line 453: 5
        line 446: 12
        line 447: 19
        line 448: 31
        line 449: 43
        line 450: 50
        line 453: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      57     3     r   Lscala/collection/mutable/RedBlackTree$Node;
            0      63     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      63     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      63     2     f   Lscala/Function1;
           19      43     5 g$1_l   Lscala/collection/mutable/RedBlackTree$Node;
           50      12     6 g$1_r   Lscala/collection/mutable/RedBlackTree$Node;
           12      50     4 g$1_node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #254                         // <A:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;Lscala/Function1<TA;TU;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      f                              final

  public <A extends java.lang.Object, B extends java.lang.Object, U extends java.lang.Object> void foreachEntry(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.Function2<A, B, U>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_1
         1: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         4: astore_3
         5: aload_3
         6: ifnull        67
         9: aload_3
        10: astore        4
        12: aload         4
        14: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        17: astore        5
        19: aload         5
        21: ifnull        31
        24: aload_0
        25: aload         5
        27: aload_2
        28: invokespecial #268                // Method g$2:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
        31: aload_2
        32: aload         4
        34: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        37: aload         4
        39: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        42: invokeinterface #273,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        47: pop
        48: aload         4
        50: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        53: astore        6
        55: aload         6
        57: ifnull        67
        60: aload         6
        62: astore        4
        64: goto          12
        67: return
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 12
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 249 /* chop */
          offset_delta = 35
      LineNumberTable:
        line 464: 0
        line 465: 5
        line 458: 12
        line 459: 19
        line 460: 31
        line 461: 48
        line 462: 55
        line 465: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      62     3     r   Lscala/collection/mutable/RedBlackTree$Node;
            0      68     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      68     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      68     2     f   Lscala/Function2;
           19      48     5 g$2_l   Lscala/collection/mutable/RedBlackTree$Node;
           55      12     6 g$2_r   Lscala/collection/mutable/RedBlackTree$Node;
           12      55     4 g$2_node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #264                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Function2<TA;TB;TU;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      f                              final

  public <A extends java.lang.Object, B extends java.lang.Object> void transform(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.Function2<A, B, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=3
         0: aload_1
         1: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         4: astore_3
         5: aload_3
         6: ifnull        127
         9: aload_3
        10: astore        4
        12: aload         4
        14: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        17: ifnull        87
        20: aload         4
        22: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        25: astore        5
        27: aload         5
        29: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        32: ifnull        45
        35: aload_0
        36: aload         5
        38: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        41: aload_2
        42: invokespecial #282                // Method transformNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
        45: aload         5
        47: aload_2
        48: aload         5
        50: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        53: aload         5
        55: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        58: invokeinterface #273,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        63: invokevirtual #176                // Method scala/collection/mutable/RedBlackTree$Node.value_$eq:(Ljava/lang/Object;)V
        66: aload         5
        68: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        71: ifnull        84
        74: aload         5
        76: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        79: astore        5
        81: goto          27
        84: aconst_null
        85: astore        5
        87: aload         4
        89: aload_2
        90: aload         4
        92: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        95: aload         4
        97: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
       100: invokeinterface #273,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       105: invokevirtual #176                // Method scala/collection/mutable/RedBlackTree$Node.value_$eq:(Ljava/lang/Object;)V
       108: aload         4
       110: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       113: ifnull        126
       116: aload         4
       118: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
       121: astore        4
       123: goto          12
       126: return
       127: return
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 12
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 17 /* same */
        frame_type = 38 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 38 /* same */
        frame_type = 250 /* chop */
          offset_delta = 0
      LineNumberTable:
        line 468: 0
        line 471: 5
        line 474: 12
        line 474: 27
        line 475: 45
        line 476: 66
        line 474: 84
        line 475: 87
        line 476: 108
        line 471: 126
        line 468: 127
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     128     0  this   Lscala/collection/mutable/RedBlackTree$;
            0     128     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0     128     2     f   Lscala/Function2;
            5     122     3 transformNode_node   Lscala/collection/mutable/RedBlackTree$Node;
           12     114     4 transformNode_transformNodeNonNull_node   Lscala/collection/mutable/RedBlackTree$Node;
           27      57     5 transformNodeNonNull_node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #279                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Function2<TA;TB;TB;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      f                              final

  private <A extends java.lang.Object, B extends java.lang.Object, U extends java.lang.Object> void transformNode(scala.collection.mutable.RedBlackTree$Node<A, B>, scala.Function2<A, B, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=4, args_size=3
         0: aload_1
         1: ifnull        55
         4: aload_1
         5: astore_3
         6: aload_3
         7: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        10: ifnull        22
        13: aload_0
        14: aload_3
        15: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        18: aload_2
        19: invokespecial #282                // Method transformNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
        22: aload_3
        23: aload_2
        24: aload_3
        25: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        28: aload_3
        29: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        32: invokeinterface #273,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        37: invokevirtual #176                // Method scala/collection/mutable/RedBlackTree$Node.value_$eq:(Ljava/lang/Object;)V
        40: aload_3
        41: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        44: ifnull        55
        47: aload_3
        48: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        51: astore_3
        52: goto          6
        55: return
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 15 /* same */
        frame_type = 250 /* chop */
          offset_delta = 32
      LineNumberTable:
        line 471: 0
        line 474: 6
        line 475: 22
        line 476: 40
        line 471: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      56     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      56     2     f   Lscala/Function2;
            6      49     3 transformNodeNonNull_node   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #287                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/Function2<TA;TB;TB;>;)V
    MethodParameters:
      Name                           Flags
      node                           final
      f                              final

  private <A extends java.lang.Object, B extends java.lang.Object, U extends java.lang.Object> void transformNodeNonNull(scala.collection.mutable.RedBlackTree$Node<A, B>, scala.Function2<A, B, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=3
         0: aload_1
         1: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnull        16
         7: aload_0
         8: aload_1
         9: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        12: aload_2
        13: invokespecial #282                // Method transformNodeNonNull:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
        16: aload_1
        17: aload_2
        18: aload_1
        19: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        22: aload_1
        23: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        26: invokeinterface #273,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        31: invokevirtual #176                // Method scala/collection/mutable/RedBlackTree$Node.value_$eq:(Ljava/lang/Object;)V
        34: aload_1
        35: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        38: ifnull        51
        41: aload_1
        42: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        45: aload_2
        46: astore_2
        47: astore_1
        48: goto          0
        51: return
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 15 /* same */
        frame_type = 34 /* same */
      LineNumberTable:
        line 474: 0
        line 475: 16
        line 476: 34
        line 473: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      52     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      52     2     f   Lscala/Function2;
    Signature: #287                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;U:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/Function2<TA;TB;TB;>;)V
    MethodParameters:
      Name                           Flags
      node                           final
      f                              final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.Iterator<scala.Tuple2<A, B>> iterator(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.Option<A>, scala.Option<A>, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #7                  // class scala/collection/mutable/RedBlackTree$EntriesIterator
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #296                // Method scala/collection/mutable/RedBlackTree$EntriesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        12: areturn
      LineNumberTable:
        line 480: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      13     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      13     2 start   Lscala/Option;
            0      13     3   end   Lscala/Option;
            0      13     4 evidence$3   Lscala/math/Ordering;
    Signature: #290                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)Lscala/collection/Iterator<Lscala/Tuple2<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      start                          final
      end                            final
      evidence$3                     final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.None$ iterator$default$2();
    descriptor: ()Lscala/None$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 479: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/RedBlackTree$;
    Signature: #300                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>()Lscala/None$;

  public <A extends java.lang.Object, B extends java.lang.Object> scala.None$ iterator$default$3();
    descriptor: ()Lscala/None$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 479: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/RedBlackTree$;
    Signature: #300                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>()Lscala/None$;

  public <A extends java.lang.Object> scala.collection.Iterator<A> keysIterator(scala.collection.mutable.RedBlackTree$Tree<A, ?>, scala.Option<A>, scala.Option<A>, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #12                 // class scala/collection/mutable/RedBlackTree$KeysIterator
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #305                // Method scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        12: areturn
      LineNumberTable:
        line 483: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      13     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      13     2 start   Lscala/Option;
            0      13     3   end   Lscala/Option;
            0      13     4 evidence$4   Lscala/math/Ordering;
    Signature: #303                         // <A:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;*>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)Lscala/collection/Iterator<TA;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      start                          final
      end                            final
      evidence$4                     final

  public <A extends java.lang.Object> scala.None$ keysIterator$default$2();
    descriptor: ()Lscala/None$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 482: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/RedBlackTree$;
    Signature: #307                         // <A:Ljava/lang/Object;>()Lscala/None$;

  public <A extends java.lang.Object> scala.None$ keysIterator$default$3();
    descriptor: ()Lscala/None$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 482: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/RedBlackTree$;
    Signature: #307                         // <A:Ljava/lang/Object;>()Lscala/None$;

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.Iterator<B> valuesIterator(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.Option<A>, scala.Option<A>, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #24                 // class scala/collection/mutable/RedBlackTree$ValuesIterator
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #312                // Method scala/collection/mutable/RedBlackTree$ValuesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        12: areturn
      LineNumberTable:
        line 486: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      13     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      13     2 start   Lscala/Option;
            0      13     3   end   Lscala/Option;
            0      13     4 evidence$5   Lscala/math/Ordering;
    Signature: #310                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)Lscala/collection/Iterator<TB;>;
    MethodParameters:
      Name                           Flags
      tree                           final
      start                          final
      end                            final
      evidence$5                     final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.None$ valuesIterator$default$2();
    descriptor: ()Lscala/None$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 485: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/RedBlackTree$;
    Signature: #300                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>()Lscala/None$;

  public <A extends java.lang.Object, B extends java.lang.Object> scala.None$ valuesIterator$default$3();
    descriptor: ()Lscala/None$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 485: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/RedBlackTree$;
    Signature: #300                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>()Lscala/None$;

  public <A extends java.lang.Object, B extends java.lang.Object> boolean isValid(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: aload_2
         6: invokespecial #322                // Method isValidBST:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/math/Ordering;)Z
         9: ifeq          45
        12: aload_0
        13: aload_1
        14: invokespecial #325                // Method hasProperParentRefs:(Lscala/collection/mutable/RedBlackTree$Tree;)Z
        17: ifeq          45
        20: aload_0
        21: aload_1
        22: invokespecial #328                // Method isValidRedBlackTree:(Lscala/collection/mutable/RedBlackTree$Tree;)Z
        25: ifeq          45
        28: aload_0
        29: aload_1
        30: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        33: invokevirtual #54                 // Method size:(Lscala/collection/mutable/RedBlackTree$Node;)I
        36: aload_1
        37: invokevirtual #63                 // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        40: if_icmpne     45
        43: iconst_1
        44: ireturn
        45: iconst_0
        46: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 45 /* same */
      LineNumberTable:
        line 544: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      47     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      47     2 evidence$9   Lscala/math/Ordering;
    Signature: #317                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/math/Ordering<TA;>;)Z
    MethodParameters:
      Name                           Flags
      tree                           final
      evidence$9                     final

  private <A extends java.lang.Object, B extends java.lang.Object> boolean hasProperParentRefs(scala.collection.mutable.RedBlackTree$Tree<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnonnull     9
         7: iconst_1
         8: ireturn
         9: aload_1
        10: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        13: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        16: ifnonnull     32
        19: aload_0
        20: aload_1
        21: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        24: invokespecial #332                // Method hasProperParentRefs$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        27: ifeq          32
        30: iconst_1
        31: ireturn
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 9 /* same */
        frame_type = 22 /* same */
      LineNumberTable:
        line 560: 0
        line 561: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      34     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #329                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;)Z
    MethodParameters:
      Name                           Flags
      tree                           final

  private <A extends java.lang.Object, B extends java.lang.Object> boolean isValidBST(scala.collection.mutable.RedBlackTree$Node<A, B>, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Lscala/math/Ordering;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: iconst_1
         5: ireturn
         6: aload_1
         7: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        10: ifnull        34
        13: aload_2
        14: aload_1
        15: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        18: aload_1
        19: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        22: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        25: invokeinterface #118,  3          // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        30: iconst_0
        31: if_icmple     62
        34: aload_1
        35: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        38: ifnull        64
        41: aload_2
        42: aload_1
        43: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        46: aload_1
        47: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        50: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        53: invokeinterface #118,  3          // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        58: iconst_0
        59: if_icmplt     64
        62: iconst_0
        63: ireturn
        64: aload_0
        65: aload_1
        66: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        69: aload_2
        70: invokespecial #322                // Method isValidBST:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/math/Ordering;)Z
        73: ifeq          86
        76: aload_1
        77: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        80: aload_2
        81: astore_2
        82: astore_1
        83: goto          0
        86: iconst_0
        87: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 0 /* same */
        frame_type = 5 /* same */
        frame_type = 27 /* same */
        frame_type = 27 /* same */
        frame_type = 1 /* same */
        frame_type = 21 /* same */
      LineNumberTable:
        line 568: 0
        line 570: 6
        line 571: 34
        line 572: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      88     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      88     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      88     2   ord   Lscala/math/Ordering;
    Signature: #333                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;Lscala/math/Ordering<TA;>;)Z
    MethodParameters:
      Name                           Flags
      node                           final
      ord                            final

  private <A extends java.lang.Object, B extends java.lang.Object> boolean isValidRedBlackTree(scala.collection.mutable.RedBlackTree$Tree<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
         5: invokevirtual #229                // Method isBlack:(Lscala/collection/mutable/RedBlackTree$Node;)Z
         8: ifeq          36
        11: aload_0
        12: aload_1
        13: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        16: invokespecial #336                // Method noRedAfterRed$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        19: ifeq          36
        22: aload_0
        23: aload_1
        24: invokevirtual #70                 // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        27: invokespecial #339                // Method blackHeight$1:(Lscala/collection/mutable/RedBlackTree$Node;)I
        30: iconst_0
        31: if_icmplt     36
        34: iconst_1
        35: ireturn
        36: iconst_0
        37: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 36 /* same */
      LineNumberTable:
        line 600: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      38     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
    Signature: #329                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;)Z
    MethodParameters:
      Name                           Flags
      tree                           final

  public <A extends java.lang.Object> scala.collection.mutable.RedBlackTree$Tree<A, scala.runtime.Null$> fromOrderedKeys(scala.collection.Iterator<A>, int);
    descriptor: (Lscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Tree;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=3
         0: bipush        32
         2: iload_2
         3: invokestatic  #349                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
         6: isub
         7: istore_3
         8: new           #21                 // class scala/collection/mutable/RedBlackTree$Tree
        11: dup
        12: iconst_1
        13: iload_2
        14: aload_1
        15: iload_3
        16: invokestatic  #353                // Method f$3:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
        19: iload_2
        20: invokespecial #356                // Method scala/collection/mutable/RedBlackTree$Tree."<init>":(Lscala/collection/mutable/RedBlackTree$Node;I)V
        23: areturn
      LineNumberTable:
        line 607: 0
        line 621: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      15     3 maxUsedDepth   I
            0      24     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      24     1    xs   Lscala/collection/Iterator;
            0      24     2  size   I
    Signature: #342                         // <A:Ljava/lang/Object;>(Lscala/collection/Iterator<TA;>;I)Lscala/collection/mutable/RedBlackTree$Tree<TA;Lscala/runtime/Null$;>;
    MethodParameters:
      Name                           Flags
      xs                             final
      size                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Tree<A, B> fromOrderedEntries(scala.collection.Iterator<scala.Tuple2<A, B>>, int);
    descriptor: (Lscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Tree;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=3
         0: bipush        32
         2: iload_2
         3: invokestatic  #349                // Method java/lang/Integer.numberOfLeadingZeros:(I)I
         6: isub
         7: istore_3
         8: new           #21                 // class scala/collection/mutable/RedBlackTree$Tree
        11: dup
        12: iconst_1
        13: iload_2
        14: aload_1
        15: iload_3
        16: invokestatic  #363                // Method f$4:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
        19: iload_2
        20: invokespecial #356                // Method scala/collection/mutable/RedBlackTree$Tree."<init>":(Lscala/collection/mutable/RedBlackTree$Node;I)V
        23: areturn
      LineNumberTable:
        line 626: 0
        line 642: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      15     3 maxUsedDepth   I
            0      24     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      24     1    xs   Lscala/collection/Iterator;
            0      24     2  size   I
    Signature: #360                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/Iterator<Lscala/Tuple2<TA;TB;>;>;I)Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;
    MethodParameters:
      Name                           Flags
      xs                             final
      size                           final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.collection.mutable.RedBlackTree$Node<A, B> copyTree(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=3, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: new           #15                 // class scala/collection/mutable/RedBlackTree$Node
         9: dup
        10: aload_1
        11: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        14: aload_1
        15: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        18: aload_1
        19: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
        22: aload_0
        23: aload_1
        24: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        27: invokevirtual #367                // Method copyTree:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        30: aload_0
        31: aload_1
        32: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        35: invokevirtual #367                // Method copyTree:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        38: aconst_null
        39: invokespecial #182                // Method scala/collection/mutable/RedBlackTree$Node."<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
        42: astore_2
        43: aload_2
        44: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        47: ifnull        58
        50: aload_2
        51: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        54: aload_2
        55: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        58: aload_2
        59: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        62: ifnull        73
        65: aload_2
        66: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        69: aload_2
        70: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
        73: aload_2
        74: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 51
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 14 /* same */
      LineNumberTable:
        line 646: 0
        line 647: 6
        line 648: 43
        line 649: 58
        line 650: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      31     2     c   Lscala/collection/mutable/RedBlackTree$Node;
            0      75     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      75     1     n   Lscala/collection/mutable/RedBlackTree$Node;
    Signature: #139                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
    MethodParameters:
      Name                           Flags
      n                              final

  private final void g$1(scala.collection.mutable.RedBlackTree$Node, scala.Function1);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
         4: astore_3
         5: aload_3
         6: ifnull        15
         9: aload_0
        10: aload_3
        11: aload_2
        12: invokespecial #257                // Method g$1:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function1;)V
        15: aload_2
        16: aload_1
        17: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        20: invokeinterface #246,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        25: pop
        26: aload_1
        27: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        30: astore        4
        32: aload         4
        34: ifnull        43
        37: aload         4
        39: astore_1
        40: goto          0
        43: return
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
      LineNumberTable:
        line 446: 0
        line 447: 5
        line 448: 15
        line 449: 26
        line 450: 32
        line 445: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      38     3     l   Lscala/collection/mutable/RedBlackTree$Node;
           32      11     4     r   Lscala/collection/mutable/RedBlackTree$Node;
            0      44     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      44     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      44     2   f$1   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      node                           final
      f$1                            final

  private final void g$2(scala.collection.mutable.RedBlackTree$Node, scala.Function2);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
         4: astore_3
         5: aload_3
         6: ifnull        15
         9: aload_0
        10: aload_3
        11: aload_2
        12: invokespecial #268                // Method g$2:(Lscala/collection/mutable/RedBlackTree$Node;Lscala/Function2;)V
        15: aload_2
        16: aload_1
        17: invokevirtual #114                // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        20: aload_1
        21: invokevirtual #101                // Method scala/collection/mutable/RedBlackTree$Node.value:()Ljava/lang/Object;
        24: invokeinterface #273,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        29: pop
        30: aload_1
        31: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        34: astore        4
        36: aload         4
        38: ifnull        47
        41: aload         4
        43: astore_1
        44: goto          0
        47: return
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
      LineNumberTable:
        line 458: 0
        line 459: 5
        line 460: 15
        line 461: 30
        line 462: 36
        line 457: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      42     3     l   Lscala/collection/mutable/RedBlackTree$Node;
           36      11     4     r   Lscala/collection/mutable/RedBlackTree$Node;
            0      48     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      48     1  node   Lscala/collection/mutable/RedBlackTree$Node;
            0      48     2   f$2   Lscala/Function2;
    MethodParameters:
      Name                           Flags
      node                           final
      f$2                            final

  private final boolean hasProperParentRefs$1(scala.collection.mutable.RedBlackTree$Node);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: iconst_1
         5: ireturn
         6: aload_1
         7: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        10: ifnull        24
        13: aload_1
        14: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        17: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        20: aload_1
        21: if_acmpne     42
        24: aload_1
        25: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        28: ifnull        44
        31: aload_1
        32: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        35: invokevirtual #199                // Method scala/collection/mutable/RedBlackTree$Node.parent:()Lscala/collection/mutable/RedBlackTree$Node;
        38: aload_1
        39: if_acmpeq     44
        42: iconst_0
        43: ireturn
        44: aload_0
        45: aload_1
        46: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        49: invokespecial #332                // Method hasProperParentRefs$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        52: ifeq          63
        55: aload_1
        56: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        59: astore_1
        60: goto          0
        63: iconst_0
        64: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 0 /* same */
        frame_type = 5 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 1 /* same */
        frame_type = 18 /* same */
      LineNumberTable:
        line 552: 0
        line 554: 6
        line 555: 24
        line 556: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      65     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    MethodParameters:
      Name                           Flags
      node                           final

  private final boolean noRedAfterRed$1(scala.collection.mutable.RedBlackTree$Node);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: iconst_1
         5: ireturn
         6: aload_1
         7: invokevirtual #42                 // Method scala/collection/mutable/RedBlackTree$Node.red:()Z
        10: ifeq          37
        13: aload_0
        14: aload_1
        15: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        18: invokevirtual #201                // Method isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        21: ifne          35
        24: aload_0
        25: aload_1
        26: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        29: invokevirtual #201                // Method isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        32: ifeq          37
        35: iconst_0
        36: ireturn
        37: aload_0
        38: aload_1
        39: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        42: invokespecial #336                // Method noRedAfterRed$1:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        45: ifeq          56
        48: aload_1
        49: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        52: astore_1
        53: goto          0
        56: iconst_0
        57: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 0 /* same */
        frame_type = 5 /* same */
        frame_type = 28 /* same */
        frame_type = 1 /* same */
        frame_type = 18 /* same */
      LineNumberTable:
        line 583: 0
        line 584: 6
        line 585: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      58     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    MethodParameters:
      Name                           Flags
      node                           final

  private final int blackHeight$1(scala.collection.mutable.RedBlackTree$Node);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: iconst_1
         5: ireturn
         6: aload_0
         7: aload_1
         8: invokevirtual #52                 // Method scala/collection/mutable/RedBlackTree$Node.left:()Lscala/collection/mutable/RedBlackTree$Node;
        11: invokespecial #339                // Method blackHeight$1:(Lscala/collection/mutable/RedBlackTree$Node;)I
        14: istore_2
        15: aload_0
        16: aload_1
        17: invokevirtual #57                 // Method scala/collection/mutable/RedBlackTree$Node.right:()Lscala/collection/mutable/RedBlackTree$Node;
        20: invokespecial #339                // Method blackHeight$1:(Lscala/collection/mutable/RedBlackTree$Node;)I
        23: istore_3
        24: iload_2
        25: iconst_m1
        26: if_icmpeq     34
        29: iload_2
        30: iload_3
        31: if_icmpeq     36
        34: iconst_m1
        35: ireturn
        36: aload_0
        37: aload_1
        38: invokevirtual #201                // Method isRed:(Lscala/collection/mutable/RedBlackTree$Node;)Z
        41: ifeq          46
        44: iload_2
        45: ireturn
        46: iload_2
        47: iconst_1
        48: iadd
        49: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 6 /* same */
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [ int, int ]
        frame_type = 1 /* same */
        frame_type = 9 /* same */
      LineNumberTable:
        line 589: 0
        line 591: 6
        line 592: 15
        line 594: 24
        line 595: 36
        line 596: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      34     2    lh   I
           24      25     3    rh   I
            0      50     0  this   Lscala/collection/mutable/RedBlackTree$;
            0      50     1  node   Lscala/collection/mutable/RedBlackTree$Node;
    MethodParameters:
      Name                           Flags
      node                           final

  private static final scala.collection.mutable.RedBlackTree$Node f$3(int, int, scala.collection.Iterator, int);
    descriptor: (IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=8, locals=9, args_size=4
         0: iload_1
         1: tableswitch   { // 0 to 1
                       0: 24
                       1: 26
                 default: 59
            }
        24: aconst_null
        25: areturn
        26: new           #15                 // class scala/collection/mutable/RedBlackTree$Node
        29: dup
        30: aload_2
        31: invokeinterface #381,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        36: aconst_null
        37: iload_0
        38: iload_3
        39: if_icmpne     51
        42: iload_0
        43: iconst_1
        44: if_icmpeq     51
        47: iconst_1
        48: goto          52
        51: iconst_0
        52: aconst_null
        53: aconst_null
        54: aconst_null
        55: invokespecial #182                // Method scala/collection/mutable/RedBlackTree$Node."<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
        58: areturn
        59: iload_1
        60: iconst_1
        61: isub
        62: iconst_2
        63: idiv
        64: istore        4
        66: iload_0
        67: iconst_1
        68: iadd
        69: iload         4
        71: aload_2
        72: iload_3
        73: invokestatic  #353                // Method f$3:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
        76: astore        5
        78: aload_2
        79: invokeinterface #381,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        84: astore        6
        86: iload_0
        87: iconst_1
        88: iadd
        89: iload_1
        90: iconst_1
        91: isub
        92: iload         4
        94: isub
        95: aload_2
        96: iload_3
        97: invokestatic  #353                // Method f$3:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
       100: astore        7
       102: new           #15                 // class scala/collection/mutable/RedBlackTree$Node
       105: dup
       106: aload         6
       108: aconst_null
       109: iconst_0
       110: aload         5
       112: aload         7
       114: aconst_null
       115: invokespecial #182                // Method scala/collection/mutable/RedBlackTree$Node."<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
       118: astore        8
       120: aload         5
       122: ifnull        132
       125: aload         5
       127: aload         8
       129: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       132: aload         7
       134: aload         8
       136: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       139: aload         8
       141: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 24 /* same */
        frame_type = 1 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ int, int, class scala/collection/Iterator, int ]
          stack = [ uninitialized 26, uninitialized 26, class java/lang/Object, null ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ int, int, class scala/collection/Iterator, int ]
          stack = [ uninitialized 26, uninitialized 26, class java/lang/Object, null, int ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 72
          locals = [ int, int, class scala/collection/Iterator, int, int, class scala/collection/mutable/RedBlackTree$Node, class java/lang/Object, class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
          stack = []
      LineNumberTable:
        line 608: 0
        line 609: 24
        line 610: 26
        line 612: 59
        line 613: 66
        line 614: 78
        line 615: 86
        line 616: 102
        line 617: 120
        line 618: 132
        line 619: 139
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      75     4 leftSize   I
           78      63     5  left   Lscala/collection/mutable/RedBlackTree$Node;
           86      55     6     x   Ljava/lang/Object;
          102      39     7 right   Lscala/collection/mutable/RedBlackTree$Node;
          120      21     8     n   Lscala/collection/mutable/RedBlackTree$Node;
            0     142     0 level   I
            0     142     1  size   I
            0     142     2  xs$1   Lscala/collection/Iterator;
            0     142     3 maxUsedDepth$1   I
    MethodParameters:
      Name                           Flags
      level                          final
      size                           final
      xs$1                           final
      maxUsedDepth$1                 final

  private static final scala.collection.mutable.RedBlackTree$Node f$4(int, int, scala.collection.Iterator, int);
    descriptor: (IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=8, locals=14, args_size=4
         0: iload_1
         1: tableswitch   { // 0 to 1
                       0: 24
                       1: 26
                 default: 98
            }
        24: aconst_null
        25: areturn
        26: aload_2
        27: invokeinterface #381,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        32: checkcast     #133                // class scala/Tuple2
        35: astore        4
        37: aload         4
        39: ifnull        59
        42: aload         4
        44: invokevirtual #387                // Method scala/Tuple2._1:()Ljava/lang/Object;
        47: astore        5
        49: aload         4
        51: invokevirtual #390                // Method scala/Tuple2._2:()Ljava/lang/Object;
        54: astore        6
        56: goto          68
        59: new           #392                // class scala/MatchError
        62: dup
        63: aconst_null
        64: invokespecial #393                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        67: athrow
        68: new           #15                 // class scala/collection/mutable/RedBlackTree$Node
        71: dup
        72: aload         5
        74: aload         6
        76: iload_0
        77: iload_3
        78: if_icmpne     90
        81: iload_0
        82: iconst_1
        83: if_icmpeq     90
        86: iconst_1
        87: goto          91
        90: iconst_0
        91: aconst_null
        92: aconst_null
        93: aconst_null
        94: invokespecial #182                // Method scala/collection/mutable/RedBlackTree$Node."<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
        97: areturn
        98: iload_1
        99: iconst_1
       100: isub
       101: iconst_2
       102: idiv
       103: istore        7
       105: iload_0
       106: iconst_1
       107: iadd
       108: iload         7
       110: aload_2
       111: iload_3
       112: invokestatic  #363                // Method f$4:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
       115: astore        8
       117: aload_2
       118: invokeinterface #381,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
       123: checkcast     #133                // class scala/Tuple2
       126: astore        9
       128: aload         9
       130: ifnull        150
       133: aload         9
       135: invokevirtual #387                // Method scala/Tuple2._1:()Ljava/lang/Object;
       138: astore        10
       140: aload         9
       142: invokevirtual #390                // Method scala/Tuple2._2:()Ljava/lang/Object;
       145: astore        11
       147: goto          159
       150: new           #392                // class scala/MatchError
       153: dup
       154: aconst_null
       155: invokespecial #393                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       158: athrow
       159: iload_0
       160: iconst_1
       161: iadd
       162: iload_1
       163: iconst_1
       164: isub
       165: iload         7
       167: isub
       168: aload_2
       169: iload_3
       170: invokestatic  #363                // Method f$4:(IILscala/collection/Iterator;I)Lscala/collection/mutable/RedBlackTree$Node;
       173: astore        12
       175: new           #15                 // class scala/collection/mutable/RedBlackTree$Node
       178: dup
       179: aload         10
       181: aload         11
       183: iconst_0
       184: aload         8
       186: aload         12
       188: aconst_null
       189: invokespecial #182                // Method scala/collection/mutable/RedBlackTree$Node."<init>":(Ljava/lang/Object;Ljava/lang/Object;ZLscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;Lscala/collection/mutable/RedBlackTree$Node;)V
       192: astore        13
       194: aload         8
       196: ifnull        206
       199: aload         8
       201: aload         13
       203: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       206: aload         12
       208: aload         13
       210: invokevirtual #221                // Method scala/collection/mutable/RedBlackTree$Node.parent_$eq:(Lscala/collection/mutable/RedBlackTree$Node;)V
       213: aload         13
       215: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 24 /* same */
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class scala/Tuple2 ]
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ int, int, class scala/collection/Iterator, int, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = [ uninitialized 68, uninitialized 68, class java/lang/Object, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ int, int, class scala/collection/Iterator, int, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = [ uninitialized 68, uninitialized 68, class java/lang/Object, class java/lang/Object, int ]
        frame_type = 248 /* chop */
          offset_delta = 6
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ int, int, class scala/collection/Iterator, int, top, top, top, int, class scala/collection/mutable/RedBlackTree$Node, class scala/Tuple2 ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 253 /* append */
          offset_delta = 46
          locals = [ class scala/collection/mutable/RedBlackTree$Node, class scala/collection/mutable/RedBlackTree$Node ]
      LineNumberTable:
        line 627: 0
        line 628: 24
        line 630: 26
        line 631: 68
        line 633: 98
        line 634: 105
        line 635: 117
        line 636: 159
        line 637: 175
        line 638: 194
        line 639: 206
        line 640: 213
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           49      10     5     k   Ljava/lang/Object;
           56       3     6     v   Ljava/lang/Object;
          140      10    10     k   Ljava/lang/Object;
          147       3    11     v   Ljava/lang/Object;
          105     110     7 leftSize   I
          117      98     8  left   Lscala/collection/mutable/RedBlackTree$Node;
          175      40    12 right   Lscala/collection/mutable/RedBlackTree$Node;
          194      21    13     n   Lscala/collection/mutable/RedBlackTree$Node;
            0     216     0 level   I
            0     216     1  size   I
            0     216     2  xs$2   Lscala/collection/Iterator;
            0     216     3 maxUsedDepth$2   I
    MethodParameters:
      Name                           Flags
      level                          final
      size                           final
      xs$2                           final
      maxUsedDepth$2                 final

  private scala.collection.mutable.RedBlackTree$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #396                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/RedBlackTree$;
}
InnerClasses:
  private static final #10= #7 of #9;     // EntriesIterator=class scala/collection/mutable/RedBlackTree$EntriesIterator of class scala/collection/mutable/RedBlackTree
  private static final #13= #12 of #9;    // KeysIterator=class scala/collection/mutable/RedBlackTree$KeysIterator of class scala/collection/mutable/RedBlackTree
  public static final #16= #15 of #9;     // Node=class scala/collection/mutable/RedBlackTree$Node of class scala/collection/mutable/RedBlackTree
  public static #19= #18 of #9;           // Node$=class scala/collection/mutable/RedBlackTree$Node$ of class scala/collection/mutable/RedBlackTree
  public static final #22= #21 of #9;     // Tree=class scala/collection/mutable/RedBlackTree$Tree of class scala/collection/mutable/RedBlackTree
  private static final #25= #24 of #9;    // ValuesIterator=class scala/collection/mutable/RedBlackTree$ValuesIterator of class scala/collection/mutable/RedBlackTree
SourceFile: "RedBlackTree.scala"
  ScalaInlineInfo: length = 0x144 (unknown attribute)
   01 01 00 40 00 1E 00 1D 01 01 51 00 2F 01 00 47
   00 48 01 00 79 00 7A 01 01 6C 00 81 01 00 D4 00
   D5 01 01 5E 01 5F 01 01 69 01 5F 01 00 DE 00 D8
   01 00 BD 00 BE 01 00 E9 00 EA 01 01 06 01 07 01
   00 FD 00 EA 01 00 FB 00 EE 01 00 ED 00 EE 01 01
   67 01 55 01 01 54 01 55 01 00 FF 00 EE 01 01 09
   01 0A 01 00 52 00 53 01 00 57 00 58 01 01 43 00
   42 01 01 4A 00 24 01 00 AB 00 AC 01 00 2D 00 24
   01 00 41 00 42 01 00 23 00 24 01 01 3B 01 3C 01
   01 3F 01 40 01 01 46 00 42 01 01 20 01 21 01 01
   2A 01 2B 01 01 2D 01 2B 01 01 2E 01 21 01 01 32
   01 2B 01 01 34 01 2B 01 00 8F 00 7E 01 00 A3 00
   53 01 00 93 00 7E 01 00 A7 00 53 01 00 90 00 81
   01 00 A4 00 58 01 00 94 00 81 01 00 7D 00 7E 01
   00 97 00 53 01 00 89 00 7E 01 00 9C 00 53 01 00
   8C 00 81 01 01 4E 00 24 01 00 A8 00 81 01 00 CE
   00 BE 01 00 D1 00 BE 01 00 80 00 81 01 00 99 00
   58 01 00 9E 00 81 01 00 2E 00 2F 01 00 2E 00 3A
   01 01 16 01 07 01 01 1E 01 0A 01 01 18 01 0A 01
   00 D7 00 D8 01 01 35 01 21 01 01 39 01 2B 01 01
   3A 01 2B 01
  Scala: length = 0x0 (unknown attribute)

