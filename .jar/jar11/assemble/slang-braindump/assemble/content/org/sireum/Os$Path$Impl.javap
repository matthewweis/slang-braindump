Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Os$Path$Impl.class
  Last modified May 29, 2022; size 19727 bytes
  SHA-256 checksum 4b758fdf6bb3112dc1f3cf6eb944766f32b989078194efb01410b8ff9cc3df4b
  Compiled from "Os.scala"
public final class org.sireum.Os$Path$Impl implements org.sireum.Os$Path,org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Os$Path$Impl
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 4, methods: 106, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/Os$Path$Impl
    #2 = Class              #1            // org/sireum/Os$Path$Impl
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/Os$Path
    #6 = Class              #5            // org/sireum/Os$Path
    #7 = Utf8               org/sireum/DatatypeSig
    #8 = Class              #7            // org/sireum/DatatypeSig
    #9 = Utf8               Os.scala
   #10 = Utf8               org/sireum/Indexable$Pos
   #11 = Class              #10           // org/sireum/Indexable$Pos
   #12 = Utf8               org/sireum/Indexable
   #13 = Class              #12           // org/sireum/Indexable
   #14 = Utf8               Pos
   #15 = Utf8               org/sireum/Os
   #16 = Class              #15           // org/sireum/Os
   #17 = Utf8               Path
   #18 = Utf8               org/sireum/Os$Path$
   #19 = Class              #18           // org/sireum/Os$Path$
   #20 = Utf8               Path$
   #21 = Utf8               Impl
   #22 = Utf8               org/sireum/Os$Path$Kind$
   #23 = Class              #22           // org/sireum/Os$Path$Kind$
   #24 = Utf8               Kind$
   #25 = Utf8               org/sireum/Os$Path$Kind$Type
   #26 = Class              #25           // org/sireum/Os$Path$Kind$Type
   #27 = Utf8               Type
   #28 = Utf8               org/sireum/Os$Proc
   #29 = Class              #28           // org/sireum/Os$Proc
   #30 = Utf8               Proc
   #31 = Utf8               hashCode
   #32 = Utf8               I
   #33 = Utf8               $content
   #34 = Utf8               Lscala/collection/immutable/Seq;
   #35 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #36 = Utf8               _value
   #37 = Utf8               Ljava/lang/String;
   #38 = Utf8               bitmap$0
   #39 = Utf8               B
   #40 = Utf8               hash
   #41 = Utf8               ()Lorg/sireum/Z;
   #42 = Utf8               hash$
   #43 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #44 = NameAndType        #42:#43       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #45 = InterfaceMethodref #8.#44        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #46 = Utf8               this
   #47 = Utf8               Lorg/sireum/Os$Path$Impl;
   #48 = Utf8               procString
   #49 = Utf8               ()Ljava/lang/String;
   #50 = Utf8               procString$
   #51 = Utf8               (Lorg/sireum/Os$Path;)Ljava/lang/String;
   #52 = NameAndType        #50:#51       // procString$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
   #53 = InterfaceMethodref #6.#52        // org/sireum/Os$Path.procString$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
   #54 = Utf8               $div
   #55 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Path;
   #56 = Utf8               name
   #57 = Utf8               $div$
   #58 = Utf8               (Lorg/sireum/Os$Path;Ljava/lang/String;)Lorg/sireum/Os$Path;
   #59 = NameAndType        #57:#58       // $div$:(Lorg/sireum/Os$Path;Ljava/lang/String;)Lorg/sireum/Os$Path;
   #60 = InterfaceMethodref #6.#59        // org/sireum/Os$Path.$div$:(Lorg/sireum/Os$Path;Ljava/lang/String;)Lorg/sireum/Os$Path;
   #61 = Utf8               $div$plus
   #62 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Os$Path;
   #63 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Path;
   #64 = Utf8               names
   #65 = Utf8               $div$plus$
   #66 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Path;
   #67 = NameAndType        #65:#66       // $div$plus$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Path;
   #68 = InterfaceMethodref #6.#67        // org/sireum/Os$Path.$div$plus$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Path;
   #69 = Utf8               Lorg/sireum/IS;
   #70 = Utf8               call
   #71 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
   #72 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Proc;
   #73 = Utf8               args
   #74 = Utf8               call$
   #75 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
   #76 = NameAndType        #74:#75       // call$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
   #77 = InterfaceMethodref #6.#76        // org/sireum/Os$Path.call$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
   #78 = Utf8               canon
   #79 = Utf8               ()Lorg/sireum/Os$Path;
   #80 = Utf8               canon$
   #81 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
   #82 = NameAndType        #80:#81       // canon$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
   #83 = InterfaceMethodref #6.#82        // org/sireum/Os$Path.canon$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
   #84 = Utf8               abs
   #85 = Utf8               abs$
   #86 = NameAndType        #85:#81       // abs$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
   #87 = InterfaceMethodref #6.#86        // org/sireum/Os$Path.abs$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
   #88 = Utf8               chmod
   #89 = Utf8               (Ljava/lang/String;)V
   #90 = Utf8               mask
   #91 = Utf8               chmod$
   #92 = Utf8               (Lorg/sireum/Os$Path;Ljava/lang/String;)V
   #93 = NameAndType        #91:#92       // chmod$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
   #94 = InterfaceMethodref #6.#93        // org/sireum/Os$Path.chmod$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
   #95 = Utf8               chmodAll
   #96 = Utf8               chmodAll$
   #97 = NameAndType        #96:#92       // chmodAll$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
   #98 = InterfaceMethodref #6.#97        // org/sireum/Os$Path.chmodAll$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
   #99 = Utf8               copyTo
  #100 = Utf8               (Lorg/sireum/Os$Path;)V
  #101 = Utf8               target
  #102 = Utf8               copyTo$
  #103 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #104 = NameAndType        #102:#103     // copyTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #105 = InterfaceMethodref #6.#104       // org/sireum/Os$Path.copyTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #106 = Utf8               Lorg/sireum/Os$Path;
  #107 = Utf8               copyOverTo
  #108 = Utf8               copyOverTo$
  #109 = NameAndType        #108:#103     // copyOverTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #110 = InterfaceMethodref #6.#109       // org/sireum/Os$Path.copyOverTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #111 = Utf8               downloadFrom
  #112 = Utf8               (Ljava/lang/String;)Z
  #113 = Utf8               url
  #114 = Utf8               downloadFrom$
  #115 = Utf8               (Lorg/sireum/Os$Path;Ljava/lang/String;)Z
  #116 = NameAndType        #114:#115     // downloadFrom$:(Lorg/sireum/Os$Path;Ljava/lang/String;)Z
  #117 = InterfaceMethodref #6.#116       // org/sireum/Os$Path.downloadFrom$:(Lorg/sireum/Os$Path;Ljava/lang/String;)Z
  #118 = Utf8               exists
  #119 = Utf8               ()Z
  #120 = Utf8               exists$
  #121 = Utf8               (Lorg/sireum/Os$Path;)Z
  #122 = NameAndType        #120:#121     // exists$:(Lorg/sireum/Os$Path;)Z
  #123 = InterfaceMethodref #6.#122       // org/sireum/Os$Path.exists$:(Lorg/sireum/Os$Path;)Z
  #124 = Utf8               ext
  #125 = Utf8               ext$
  #126 = NameAndType        #125:#51      // ext$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #127 = InterfaceMethodref #6.#126       // org/sireum/Os$Path.ext$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #128 = Utf8               isAbs
  #129 = Utf8               isAbs$
  #130 = NameAndType        #129:#121     // isAbs$:(Lorg/sireum/Os$Path;)Z
  #131 = InterfaceMethodref #6.#130       // org/sireum/Os$Path.isAbs$:(Lorg/sireum/Os$Path;)Z
  #132 = Utf8               isDir
  #133 = Utf8               isDir$
  #134 = NameAndType        #133:#121     // isDir$:(Lorg/sireum/Os$Path;)Z
  #135 = InterfaceMethodref #6.#134       // org/sireum/Os$Path.isDir$:(Lorg/sireum/Os$Path;)Z
  #136 = Utf8               isFile
  #137 = Utf8               isFile$
  #138 = NameAndType        #137:#121     // isFile$:(Lorg/sireum/Os$Path;)Z
  #139 = InterfaceMethodref #6.#138       // org/sireum/Os$Path.isFile$:(Lorg/sireum/Os$Path;)Z
  #140 = Utf8               isSymLink
  #141 = Utf8               isSymLink$
  #142 = NameAndType        #141:#121     // isSymLink$:(Lorg/sireum/Os$Path;)Z
  #143 = InterfaceMethodref #6.#142       // org/sireum/Os$Path.isSymLink$:(Lorg/sireum/Os$Path;)Z
  #144 = Utf8               kind
  #145 = Utf8               ()Lorg/sireum/Os$Path$Kind$Type;
  #146 = Utf8               kind$
  #147 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path$Kind$Type;
  #148 = NameAndType        #146:#147     // kind$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path$Kind$Type;
  #149 = InterfaceMethodref #6.#148       // org/sireum/Os$Path.kind$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path$Kind$Type;
  #150 = Utf8               lastModified
  #151 = Utf8               lastModified$
  #152 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Z;
  #153 = NameAndType        #151:#152     // lastModified$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
  #154 = InterfaceMethodref #6.#153       // org/sireum/Os$Path.lastModified$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
  #155 = Utf8               length
  #156 = Utf8               length$
  #157 = NameAndType        #156:#152     // length$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
  #158 = InterfaceMethodref #6.#157       // org/sireum/Os$Path.length$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
  #159 = Utf8               list
  #160 = Utf8               ()Lorg/sireum/IS;
  #161 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;
  #162 = Utf8               list$
  #163 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/IS;
  #164 = NameAndType        #162:#163     // list$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
  #165 = InterfaceMethodref #6.#164       // org/sireum/Os$Path.list$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
  #166 = Utf8               mergeFrom
  #167 = Utf8               (Lorg/sireum/IS;)V
  #168 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;)V
  #169 = Utf8               sources
  #170 = Utf8               mergeFrom$
  #171 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #172 = NameAndType        #170:#171     // mergeFrom$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #173 = InterfaceMethodref #6.#172       // org/sireum/Os$Path.mergeFrom$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #174 = Utf8               md5
  #175 = Utf8               md5$
  #176 = NameAndType        #175:#51      // md5$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #177 = InterfaceMethodref #6.#176       // org/sireum/Os$Path.md5$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #178 = Utf8               moveTo
  #179 = Utf8               moveTo$
  #180 = NameAndType        #179:#103     // moveTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #181 = InterfaceMethodref #6.#180       // org/sireum/Os$Path.moveTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #182 = Utf8               moveOverTo
  #183 = Utf8               moveOverTo$
  #184 = NameAndType        #183:#103     // moveOverTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #185 = InterfaceMethodref #6.#184       // org/sireum/Os$Path.moveOverTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #186 = Utf8               mkdir
  #187 = Utf8               ()V
  #188 = Utf8               mkdir$
  #189 = NameAndType        #188:#100     // mkdir$:(Lorg/sireum/Os$Path;)V
  #190 = InterfaceMethodref #6.#189       // org/sireum/Os$Path.mkdir$:(Lorg/sireum/Os$Path;)V
  #191 = Utf8               mkdirAll
  #192 = Utf8               mkdirAll$
  #193 = NameAndType        #192:#100     // mkdirAll$:(Lorg/sireum/Os$Path;)V
  #194 = InterfaceMethodref #6.#193       // org/sireum/Os$Path.mkdirAll$:(Lorg/sireum/Os$Path;)V
  #195 = Utf8               mklink
  #196 = Utf8               mklink$
  #197 = NameAndType        #196:#103     // mklink$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #198 = InterfaceMethodref #6.#197       // org/sireum/Os$Path.mklink$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #199 = Utf8               name$
  #200 = NameAndType        #199:#51      // name$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #201 = InterfaceMethodref #6.#200       // org/sireum/Os$Path.name$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #202 = Utf8               overlayCopy
  #203 = Utf8               (Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
  #204 = Utf8               (Lorg/sireum/Os$Path;ZZLscala/Function1<Lorg/sireum/Os$Path;Lorg/sireum/B;>;Z)Lorg/sireum/HashSMap<Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;>;
  #205 = Utf8               includeDir
  #206 = Utf8               followLink
  #207 = Utf8               pred
  #208 = Utf8               report
  #209 = Utf8               overlayCopy$
  #210 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
  #211 = NameAndType        #209:#210     // overlayCopy$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
  #212 = InterfaceMethodref #6.#211       // org/sireum/Os$Path.overlayCopy$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
  #213 = Utf8               Z
  #214 = Utf8               Lscala/Function1;
  #215 = Utf8               overlayMove
  #216 = Utf8               overlayMove$
  #217 = NameAndType        #216:#210     // overlayMove$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
  #218 = InterfaceMethodref #6.#217       // org/sireum/Os$Path.overlayMove$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
  #219 = Utf8               properties
  #220 = Utf8               ()Lorg/sireum/Map;
  #221 = Utf8               ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;
  #222 = Utf8               properties$
  #223 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Map;
  #224 = NameAndType        #222:#223     // properties$:(Lorg/sireum/Os$Path;)Lorg/sireum/Map;
  #225 = InterfaceMethodref #6.#224       // org/sireum/Os$Path.properties$:(Lorg/sireum/Os$Path;)Lorg/sireum/Map;
  #226 = Utf8               readSymLink
  #227 = Utf8               ()Lorg/sireum/Option;
  #228 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/Os$Path;>;
  #229 = Utf8               readSymLink$
  #230 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Option;
  #231 = NameAndType        #229:#230     // readSymLink$:(Lorg/sireum/Os$Path;)Lorg/sireum/Option;
  #232 = InterfaceMethodref #6.#231       // org/sireum/Os$Path.readSymLink$:(Lorg/sireum/Os$Path;)Lorg/sireum/Option;
  #233 = Utf8               relativize
  #234 = Utf8               other
  #235 = Utf8               relativize$
  #236 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #237 = NameAndType        #235:#236     // relativize$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #238 = InterfaceMethodref #6.#237       // org/sireum/Os$Path.relativize$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #239 = Utf8               read
  #240 = Utf8               read$
  #241 = NameAndType        #240:#51      // read$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #242 = InterfaceMethodref #6.#241       // org/sireum/Os$Path.read$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #243 = Utf8               readLines
  #244 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
  #245 = Utf8               readLines$
  #246 = NameAndType        #245:#163     // readLines$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
  #247 = InterfaceMethodref #6.#246       // org/sireum/Os$Path.readLines$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
  #248 = Utf8               readLineStream
  #249 = Utf8               ()Lorg/sireum/Jen;
  #250 = Utf8               ()Lorg/sireum/Jen<Lorg/sireum/String;>;
  #251 = Utf8               readLineStream$
  #252 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
  #253 = NameAndType        #251:#252     // readLineStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
  #254 = InterfaceMethodref #6.#253       // org/sireum/Os$Path.readLineStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
  #255 = Utf8               readLineMStream
  #256 = Utf8               ()Lorg/sireum/MJen;
  #257 = Utf8               ()Lorg/sireum/MJen<Lorg/sireum/String;>;
  #258 = Utf8               readLineMStream$
  #259 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
  #260 = NameAndType        #258:#259     // readLineMStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
  #261 = InterfaceMethodref #6.#260       // org/sireum/Os$Path.readLineMStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
  #262 = Utf8               readU8s
  #263 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;
  #264 = Utf8               readU8s$
  #265 = NameAndType        #264:#163     // readU8s$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
  #266 = InterfaceMethodref #6.#265       // org/sireum/Os$Path.readU8s$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
  #267 = Utf8               readU8ms
  #268 = Utf8               ()Lorg/sireum/MS;
  #269 = Utf8               ()Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;
  #270 = Utf8               readU8ms$
  #271 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/MS;
  #272 = NameAndType        #270:#271     // readU8ms$:(Lorg/sireum/Os$Path;)Lorg/sireum/MS;
  #273 = InterfaceMethodref #6.#272       // org/sireum/Os$Path.readU8ms$:(Lorg/sireum/Os$Path;)Lorg/sireum/MS;
  #274 = Utf8               readU8Stream
  #275 = Utf8               ()Lorg/sireum/Jen<Lorg/sireum/U8;>;
  #276 = Utf8               readU8Stream$
  #277 = NameAndType        #276:#252     // readU8Stream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
  #278 = InterfaceMethodref #6.#277       // org/sireum/Os$Path.readU8Stream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
  #279 = Utf8               readU8MStream
  #280 = Utf8               ()Lorg/sireum/MJen<Lorg/sireum/U8;>;
  #281 = Utf8               readU8MStream$
  #282 = NameAndType        #281:#259     // readU8MStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
  #283 = InterfaceMethodref #6.#282       // org/sireum/Os$Path.readU8MStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
  #284 = Utf8               readCStream
  #285 = Utf8               ()Lorg/sireum/Jen<Lorg/sireum/C;>;
  #286 = Utf8               readCStream$
  #287 = NameAndType        #286:#252     // readCStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
  #288 = InterfaceMethodref #6.#287       // org/sireum/Os$Path.readCStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
  #289 = Utf8               readIndexableC
  #290 = Utf8               ()Lorg/sireum/Indexable$Pos;
  #291 = Utf8               ()Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;
  #292 = Utf8               readIndexableC$
  #293 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Indexable$Pos;
  #294 = NameAndType        #292:#293     // readIndexableC$:(Lorg/sireum/Os$Path;)Lorg/sireum/Indexable$Pos;
  #295 = InterfaceMethodref #6.#294       // org/sireum/Os$Path.readIndexableC$:(Lorg/sireum/Os$Path;)Lorg/sireum/Indexable$Pos;
  #296 = Utf8               readCMStream
  #297 = Utf8               ()Lorg/sireum/MJen<Lorg/sireum/C;>;
  #298 = Utf8               readCMStream$
  #299 = NameAndType        #298:#259     // readCMStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
  #300 = InterfaceMethodref #6.#299       // org/sireum/Os$Path.readCMStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
  #301 = Utf8               remove
  #302 = Utf8               remove$
  #303 = NameAndType        #302:#100     // remove$:(Lorg/sireum/Os$Path;)V
  #304 = InterfaceMethodref #6.#303       // org/sireum/Os$Path.remove$:(Lorg/sireum/Os$Path;)V
  #305 = Utf8               removeAll
  #306 = Utf8               removeAll$
  #307 = NameAndType        #306:#100     // removeAll$:(Lorg/sireum/Os$Path;)V
  #308 = InterfaceMethodref #6.#307       // org/sireum/Os$Path.removeAll$:(Lorg/sireum/Os$Path;)V
  #309 = Utf8               removeOnExit
  #310 = Utf8               removeOnExit$
  #311 = NameAndType        #310:#100     // removeOnExit$:(Lorg/sireum/Os$Path;)V
  #312 = InterfaceMethodref #6.#311       // org/sireum/Os$Path.removeOnExit$:(Lorg/sireum/Os$Path;)V
  #313 = Utf8               sha1
  #314 = Utf8               sha1$
  #315 = NameAndType        #314:#51      // sha1$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #316 = InterfaceMethodref #6.#315       // org/sireum/Os$Path.sha1$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #317 = Utf8               size
  #318 = Utf8               size$
  #319 = NameAndType        #318:#152     // size$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
  #320 = InterfaceMethodref #6.#319       // org/sireum/Os$Path.size$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
  #321 = Utf8               slash
  #322 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
  #323 = Utf8               slash$
  #324 = NameAndType        #323:#171     // slash$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #325 = InterfaceMethodref #6.#324       // org/sireum/Os$Path.slash$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #326 = Utf8               toUri
  #327 = Utf8               toUri$
  #328 = NameAndType        #327:#51      // toUri$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #329 = InterfaceMethodref #6.#328       // org/sireum/Os$Path.toUri$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
  #330 = Utf8               write
  #331 = Utf8               content
  #332 = Utf8               write$
  #333 = NameAndType        #332:#92      // write$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
  #334 = InterfaceMethodref #6.#333       // org/sireum/Os$Path.write$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
  #335 = Utf8               writeOver
  #336 = Utf8               writeOver$
  #337 = NameAndType        #336:#92      // writeOver$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
  #338 = InterfaceMethodref #6.#337       // org/sireum/Os$Path.writeOver$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
  #339 = Utf8               writeAppend
  #340 = Utf8               writeAppend$
  #341 = NameAndType        #340:#92      // writeAppend$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
  #342 = InterfaceMethodref #6.#341       // org/sireum/Os$Path.writeAppend$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
  #343 = Utf8               writeLineStream
  #344 = Utf8               (Lorg/sireum/Jen;)V
  #345 = Utf8               (Lorg/sireum/Jen<Lorg/sireum/String;>;)V
  #346 = Utf8               writeLineStream$
  #347 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #348 = NameAndType        #346:#347     // writeLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #349 = InterfaceMethodref #6.#348       // org/sireum/Os$Path.writeLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #350 = Utf8               Lorg/sireum/Jen;
  #351 = Utf8               writeOverLineStream
  #352 = Utf8               writeOverLineStream$
  #353 = NameAndType        #352:#347     // writeOverLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #354 = InterfaceMethodref #6.#353       // org/sireum/Os$Path.writeOverLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #355 = Utf8               writeAppendLineStream
  #356 = Utf8               writeAppendLineStream$
  #357 = NameAndType        #356:#347     // writeAppendLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #358 = InterfaceMethodref #6.#357       // org/sireum/Os$Path.writeAppendLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #359 = Utf8               writeLineMStream
  #360 = Utf8               (Lorg/sireum/MJen;)V
  #361 = Utf8               (Lorg/sireum/MJen<Lorg/sireum/String;>;)V
  #362 = Utf8               writeLineMStream$
  #363 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #364 = NameAndType        #362:#363     // writeLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #365 = InterfaceMethodref #6.#364       // org/sireum/Os$Path.writeLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #366 = Utf8               Lorg/sireum/MJen;
  #367 = Utf8               writeOverLineMStream
  #368 = Utf8               writeOverLineMStream$
  #369 = NameAndType        #368:#363     // writeOverLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #370 = InterfaceMethodref #6.#369       // org/sireum/Os$Path.writeOverLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #371 = Utf8               writeAppendLineMStream
  #372 = Utf8               writeAppendLineMStream$
  #373 = NameAndType        #372:#363     // writeAppendLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #374 = InterfaceMethodref #6.#373       // org/sireum/Os$Path.writeAppendLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #375 = Utf8               writeU8s
  #376 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
  #377 = Utf8               writeU8s$
  #378 = NameAndType        #377:#171     // writeU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #379 = InterfaceMethodref #6.#378       // org/sireum/Os$Path.writeU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #380 = Utf8               writeU8Parts
  #381 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #382 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #383 = Utf8               offset
  #384 = Utf8               len
  #385 = Utf8               writeU8Parts$
  #386 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #387 = NameAndType        #385:#386     // writeU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #388 = InterfaceMethodref #6.#387       // org/sireum/Os$Path.writeU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #389 = Utf8               Lorg/sireum/Z;
  #390 = Utf8               writeOverU8s
  #391 = Utf8               writeOverU8s$
  #392 = NameAndType        #391:#171     // writeOverU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #393 = InterfaceMethodref #6.#392       // org/sireum/Os$Path.writeOverU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #394 = Utf8               writeOverU8Parts
  #395 = Utf8               writeOverU8Parts$
  #396 = NameAndType        #395:#386     // writeOverU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #397 = InterfaceMethodref #6.#396       // org/sireum/Os$Path.writeOverU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #398 = Utf8               writeAppendU8s
  #399 = Utf8               writeAppendU8s$
  #400 = NameAndType        #399:#171     // writeAppendU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #401 = InterfaceMethodref #6.#400       // org/sireum/Os$Path.writeAppendU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
  #402 = Utf8               writeAppendU8Parts
  #403 = Utf8               writeAppendU8Parts$
  #404 = NameAndType        #403:#386     // writeAppendU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #405 = InterfaceMethodref #6.#404       // org/sireum/Os$Path.writeAppendU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #406 = Utf8               writeU8ms
  #407 = Utf8               (Lorg/sireum/MS;)V
  #408 = Utf8               (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
  #409 = Utf8               writeU8ms$
  #410 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
  #411 = NameAndType        #409:#410     // writeU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
  #412 = InterfaceMethodref #6.#411       // org/sireum/Os$Path.writeU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
  #413 = Utf8               Lorg/sireum/MS;
  #414 = Utf8               writeU8Partms
  #415 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #416 = Utf8               (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #417 = Utf8               writeU8Partms$
  #418 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #419 = NameAndType        #417:#418     // writeU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #420 = InterfaceMethodref #6.#419       // org/sireum/Os$Path.writeU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #421 = Utf8               writeOverU8ms
  #422 = Utf8               writeOverU8ms$
  #423 = NameAndType        #422:#410     // writeOverU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
  #424 = InterfaceMethodref #6.#423       // org/sireum/Os$Path.writeOverU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
  #425 = Utf8               writeOverU8Partms
  #426 = Utf8               writeOverU8Partms$
  #427 = NameAndType        #426:#418     // writeOverU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #428 = InterfaceMethodref #6.#427       // org/sireum/Os$Path.writeOverU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #429 = Utf8               writeAppendU8ms
  #430 = Utf8               writeAppendU8ms$
  #431 = NameAndType        #430:#410     // writeAppendU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
  #432 = InterfaceMethodref #6.#431       // org/sireum/Os$Path.writeAppendU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
  #433 = Utf8               writeAppendU8Partms
  #434 = Utf8               writeAppendU8Partms$
  #435 = NameAndType        #434:#418     // writeAppendU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #436 = InterfaceMethodref #6.#435       // org/sireum/Os$Path.writeAppendU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #437 = Utf8               writeU8Stream
  #438 = Utf8               (Lorg/sireum/Jen<Lorg/sireum/U8;>;)V
  #439 = Utf8               writeU8Stream$
  #440 = NameAndType        #439:#347     // writeU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #441 = InterfaceMethodref #6.#440       // org/sireum/Os$Path.writeU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #442 = Utf8               writeOverU8Stream
  #443 = Utf8               writeOverU8Stream$
  #444 = NameAndType        #443:#347     // writeOverU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #445 = InterfaceMethodref #6.#444       // org/sireum/Os$Path.writeOverU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #446 = Utf8               writeAppendU8Stream
  #447 = Utf8               writeAppendU8Stream$
  #448 = NameAndType        #447:#347     // writeAppendU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #449 = InterfaceMethodref #6.#448       // org/sireum/Os$Path.writeAppendU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #450 = Utf8               writeU8MStream
  #451 = Utf8               (Lorg/sireum/MJen<Lorg/sireum/U8;>;)V
  #452 = Utf8               writeU8MStream$
  #453 = NameAndType        #452:#363     // writeU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #454 = InterfaceMethodref #6.#453       // org/sireum/Os$Path.writeU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #455 = Utf8               writeOverU8MStream
  #456 = Utf8               writeOverU8MStream$
  #457 = NameAndType        #456:#363     // writeOverU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #458 = InterfaceMethodref #6.#457       // org/sireum/Os$Path.writeOverU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #459 = Utf8               writeAppendU8MStream
  #460 = Utf8               writeAppendU8MStream$
  #461 = NameAndType        #460:#363     // writeAppendU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #462 = InterfaceMethodref #6.#461       // org/sireum/Os$Path.writeAppendU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #463 = Utf8               writeCStream
  #464 = Utf8               (Lorg/sireum/Jen<Lorg/sireum/C;>;)V
  #465 = Utf8               writeCStream$
  #466 = NameAndType        #465:#347     // writeCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #467 = InterfaceMethodref #6.#466       // org/sireum/Os$Path.writeCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #468 = Utf8               writeOverCStream
  #469 = Utf8               writeOverCStream$
  #470 = NameAndType        #469:#347     // writeOverCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #471 = InterfaceMethodref #6.#470       // org/sireum/Os$Path.writeOverCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #472 = Utf8               writeAppendCStream
  #473 = Utf8               writeAppendCStream$
  #474 = NameAndType        #473:#347     // writeAppendCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #475 = InterfaceMethodref #6.#474       // org/sireum/Os$Path.writeAppendCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
  #476 = Utf8               writeCMStream
  #477 = Utf8               (Lorg/sireum/MJen<Lorg/sireum/C;>;)V
  #478 = Utf8               writeCMStream$
  #479 = NameAndType        #478:#363     // writeCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #480 = InterfaceMethodref #6.#479       // org/sireum/Os$Path.writeCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #481 = Utf8               writeOverCMStream
  #482 = Utf8               writeOverCMStream$
  #483 = NameAndType        #482:#363     // writeOverCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #484 = InterfaceMethodref #6.#483       // org/sireum/Os$Path.writeOverCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #485 = Utf8               writeAppendCMStream
  #486 = Utf8               writeAppendCMStream$
  #487 = NameAndType        #486:#363     // writeAppendCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #488 = InterfaceMethodref #6.#487       // org/sireum/Os$Path.writeAppendCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
  #489 = Utf8               zipTo
  #490 = Utf8               zipTo$
  #491 = NameAndType        #490:#103     // zipTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #492 = InterfaceMethodref #6.#491       // org/sireum/Os$Path.zipTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #493 = Utf8               unzipTo
  #494 = Utf8               unzipTo$
  #495 = NameAndType        #494:#103     // unzipTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #496 = InterfaceMethodref #6.#495       // org/sireum/Os$Path.unzipTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
  #497 = Utf8               up
  #498 = Utf8               up$
  #499 = NameAndType        #498:#81      // up$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #500 = InterfaceMethodref #6.#499       // org/sireum/Os$Path.up$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #501 = Utf8               $cannotMixImmutableAndMutable
  #502 = Utf8               ()Lscala/runtime/Nothing$;
  #503 = Utf8               org/sireum/Immutable
  #504 = Class              #503          // org/sireum/Immutable
  #505 = Utf8               $cannotMixImmutableAndMutable$
  #506 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #507 = NameAndType        #505:#506     // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #508 = InterfaceMethodref #504.#507     // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #509 = Utf8               $hasEquals
  #510 = Utf8               $hasEquals$
  #511 = Utf8               (Lorg/sireum/Immutable;)Z
  #512 = NameAndType        #510:#511     // $hasEquals$:(Lorg/sireum/Immutable;)Z
  #513 = InterfaceMethodref #504.#512     // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
  #514 = Utf8               $hasString
  #515 = Utf8               $hasString$
  #516 = NameAndType        #515:#511     // $hasString$:(Lorg/sireum/Immutable;)Z
  #517 = InterfaceMethodref #504.#516     // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
  #518 = Utf8               $clone
  #519 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
  #520 = Utf8               org/sireum/$internal/ImmutableMarker
  #521 = Class              #520          // org/sireum/$internal/ImmutableMarker
  #522 = Utf8               $clone$
  #523 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #524 = NameAndType        #522:#523     // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #525 = InterfaceMethodref #521.#524     // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #526 = Utf8               value
  #527 = NameAndType        #36:#37       // _value:Ljava/lang/String;
  #528 = Fieldref           #2.#527       // org/sireum/Os$Path$Impl._value:Ljava/lang/String;
  #529 = Utf8               getValue
  #530 = Utf8               toString
  #531 = Utf8               string
  #532 = NameAndType        #531:#49      // string:()Ljava/lang/String;
  #533 = Methodref          #2.#532       // org/sireum/Os$Path$Impl.string:()Ljava/lang/String;
  #534 = Utf8               hashCode$lzycompute
  #535 = Utf8               ()I
  #536 = NameAndType        #38:#39       // bitmap$0:B
  #537 = Fieldref           #2.#536       // org/sireum/Os$Path$Impl.bitmap$0:B
  #538 = NameAndType        #509:#119     // $hasEquals:()Z
  #539 = Methodref          #2.#538       // org/sireum/Os$Path$Impl.$hasEquals:()Z
  #540 = NameAndType        #31:#535      // hashCode:()I
  #541 = Methodref          #4.#540       // java/lang/Object.hashCode:()I
  #542 = Utf8               scala/package$
  #543 = Class              #542          // scala/package$
  #544 = Utf8               MODULE$
  #545 = Utf8               Lscala/package$;
  #546 = NameAndType        #544:#545     // MODULE$:Lscala/package$;
  #547 = Fieldref           #543.#546     // scala/package$.MODULE$:Lscala/package$;
  #548 = Utf8               Seq
  #549 = Utf8               ()Lscala/collection/immutable/Seq$;
  #550 = NameAndType        #548:#549     // Seq:()Lscala/collection/immutable/Seq$;
  #551 = Methodref          #543.#550     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #552 = Utf8               scala/runtime/ScalaRunTime$
  #553 = Class              #552          // scala/runtime/ScalaRunTime$
  #554 = Utf8               Lscala/runtime/ScalaRunTime$;
  #555 = NameAndType        #544:#554     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #556 = Fieldref           #553.#555     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #557 = Utf8               getClass
  #558 = Utf8               ()Ljava/lang/Class;
  #559 = NameAndType        #557:#558     // getClass:()Ljava/lang/Class;
  #560 = Methodref          #2.#559       // org/sireum/Os$Path$Impl.getClass:()Ljava/lang/Class;
  #561 = Utf8               java/lang/Class
  #562 = Class              #561          // java/lang/Class
  #563 = Utf8               getName
  #564 = NameAndType        #563:#49      // getName:()Ljava/lang/String;
  #565 = Methodref          #562.#564     // java/lang/Class.getName:()Ljava/lang/String;
  #566 = Utf8               org/sireum/String
  #567 = Class              #566          // org/sireum/String
  #568 = NameAndType        #526:#49      // value:()Ljava/lang/String;
  #569 = Methodref          #2.#568       // org/sireum/Os$Path$Impl.value:()Ljava/lang/String;
  #570 = Utf8               <init>
  #571 = NameAndType        #570:#89      // "<init>":(Ljava/lang/String;)V
  #572 = Methodref          #567.#571     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #573 = Utf8               genericWrapArray
  #574 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #575 = NameAndType        #573:#574     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #576 = Methodref          #553.#575     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #577 = Utf8               scala/collection/immutable/Seq$
  #578 = Class              #577          // scala/collection/immutable/Seq$
  #579 = Utf8               apply
  #580 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #581 = NameAndType        #579:#580     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #582 = Methodref          #578.#581     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #583 = Utf8               scala/collection/Seq
  #584 = Class              #583          // scala/collection/Seq
  #585 = InterfaceMethodref #584.#540     // scala/collection/Seq.hashCode:()I
  #586 = NameAndType        #31:#32       // hashCode:I
  #587 = Fieldref           #2.#586       // org/sireum/Os$Path$Impl.hashCode:I
  #588 = Utf8               java/lang/Throwable
  #589 = Class              #588          // java/lang/Throwable
  #590 = NameAndType        #534:#535     // hashCode$lzycompute:()I
  #591 = Methodref          #2.#590       // org/sireum/Os$Path$Impl.hashCode$lzycompute:()I
  #592 = Utf8               equals
  #593 = Utf8               (Ljava/lang/Object;)Z
  #594 = Utf8               o
  #595 = NameAndType        #592:#593     // equals:(Ljava/lang/Object;)Z
  #596 = Methodref          #4.#595       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #597 = Methodref          #2.#540       // org/sireum/Os$Path$Impl.hashCode:()I
  #598 = Utf8               Ljava/lang/Object;
  #599 = Utf8               java/lang/String
  #600 = Class              #599          // java/lang/String
  #601 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #602 = Methodref          #2.#571       // org/sireum/Os$Path$Impl."<init>":(Ljava/lang/String;)V
  #603 = Utf8               apply$default$1
  #604 = Utf8               $content$lzycompute
  #605 = Utf8               ()Lscala/collection/immutable/Seq;
  #606 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #607 = Utf8               scala/Tuple2
  #608 = Class              #607          // scala/Tuple2
  #609 = Utf8               type
  #610 = String             #609          // type
  #611 = Utf8               List
  #612 = Utf8               ()Lscala/collection/immutable/List$;
  #613 = NameAndType        #611:#612     // List:()Lscala/collection/immutable/List$;
  #614 = Methodref          #543.#613     // scala/package$.List:()Lscala/collection/immutable/List$;
  #615 = Utf8               org
  #616 = String             #615          // org
  #617 = Utf8               sireum
  #618 = String             #617          // sireum
  #619 = String             #21           // Impl
  #620 = Utf8               [Ljava/lang/Object;
  #621 = Class              #620          // "[Ljava/lang/Object;"
  #622 = Utf8               wrapRefArray
  #623 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #624 = NameAndType        #622:#623     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #625 = Methodref          #553.#624     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #626 = Utf8               scala/collection/immutable/List$
  #627 = Class              #626          // scala/collection/immutable/List$
  #628 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #629 = NameAndType        #579:#628     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #630 = Methodref          #627.#629     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #631 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #632 = NameAndType        #570:#631     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #633 = Methodref          #608.#632     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #634 = String             #526          // value
  #635 = Utf8               scala/collection/immutable/Seq
  #636 = Class              #635          // scala/collection/immutable/Seq
  #637 = NameAndType        #33:#34       // $content:Lscala/collection/immutable/Seq;
  #638 = Fieldref           #2.#637       // org/sireum/Os$Path$Impl.$content:Lscala/collection/immutable/Seq;
  #639 = NameAndType        #604:#605     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #640 = Methodref          #2.#639       // org/sireum/Os$Path$Impl.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #641 = Utf8               ()Ljava/lang/Object;
  #642 = NameAndType        #518:#519     // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #643 = Methodref          #2.#642       // org/sireum/Os$Path$Impl.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #644 = Utf8               __value
  #645 = NameAndType        #570:#187     // "<init>":()V
  #646 = Methodref          #4.#645       // java/lang/Object."<init>":()V
  #647 = Utf8               $init$
  #648 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #649 = NameAndType        #647:#648     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #650 = InterfaceMethodref #521.#649     // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #651 = Utf8               (Lorg/sireum/Immutable;)V
  #652 = NameAndType        #647:#651     // $init$:(Lorg/sireum/Immutable;)V
  #653 = InterfaceMethodref #504.#652     // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #654 = NameAndType        #647:#100     // $init$:(Lorg/sireum/Os$Path;)V
  #655 = InterfaceMethodref #6.#654       // org/sireum/Os$Path.$init$:(Lorg/sireum/Os$Path;)V
  #656 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #657 = NameAndType        #647:#656     // $init$:(Lorg/sireum/DatatypeSig;)V
  #658 = InterfaceMethodref #8.#657       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #659 = Utf8               Signature
  #660 = Utf8               Code
  #661 = Utf8               LineNumberTable
  #662 = Utf8               LocalVariableTable
  #663 = Utf8               MethodParameters
  #664 = Utf8               StackMapTable
  #665 = Utf8               InnerClasses
  #666 = Utf8               SourceFile
  #667 = Utf8               ScalaInlineInfo
  #668 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #35                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final java.lang.String _value;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #45                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public java.lang.String procString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod org/sireum/Os$Path.procString$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.Os$Path $div(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #60                 // InterfaceMethod org/sireum/Os$Path.$div$:(Lorg/sireum/Os$Path;Ljava/lang/String;)Lorg/sireum/Os$Path;
         5: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1  name   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name                           final

  public org.sireum.Os$Path $div$plus(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #68                 // InterfaceMethod org/sireum/Os$Path.$div$plus$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Path;
         5: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 names   Lorg/sireum/IS;
    Signature: #63                          // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      names                          final

  public org.sireum.Os$Proc call(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #77                 // InterfaceMethod org/sireum/Os$Path.call$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1  args   Lorg/sireum/IS;
    Signature: #72                          // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Proc;
    MethodParameters:
      Name                           Flags
      args                           final

  public org.sireum.Os$Path canon();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #83                 // InterfaceMethod org/sireum/Os$Path.canon$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.Os$Path abs();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod org/sireum/Os$Path.abs$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void chmod(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #94                 // InterfaceMethod org/sireum/Os$Path.chmod$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1  mask   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      mask                           final

  public void chmodAll(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #98                 // InterfaceMethod org/sireum/Os$Path.chmodAll$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1  mask   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      mask                           final

  public void copyTo(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #105                // InterfaceMethod org/sireum/Os$Path.copyTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 target   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public void copyOverTo(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #110                // InterfaceMethod org/sireum/Os$Path.copyOverTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 target   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public boolean downloadFrom(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #117                // InterfaceMethod org/sireum/Os$Path.downloadFrom$:(Lorg/sireum/Os$Path;Ljava/lang/String;)Z
         5: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  public boolean exists();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #123                // InterfaceMethod org/sireum/Os$Path.exists$:(Lorg/sireum/Os$Path;)Z
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public java.lang.String ext();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #127                // InterfaceMethod org/sireum/Os$Path.ext$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public boolean isAbs();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #131                // InterfaceMethod org/sireum/Os$Path.isAbs$:(Lorg/sireum/Os$Path;)Z
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public boolean isDir();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #135                // InterfaceMethod org/sireum/Os$Path.isDir$:(Lorg/sireum/Os$Path;)Z
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public boolean isFile();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #139                // InterfaceMethod org/sireum/Os$Path.isFile$:(Lorg/sireum/Os$Path;)Z
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public boolean isSymLink();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #143                // InterfaceMethod org/sireum/Os$Path.isSymLink$:(Lorg/sireum/Os$Path;)Z
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.Os$Path$Kind$Type kind();
    descriptor: ()Lorg/sireum/Os$Path$Kind$Type;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #149                // InterfaceMethod org/sireum/Os$Path.kind$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path$Kind$Type;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.Z lastModified();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #154                // InterfaceMethod org/sireum/Os$Path.lastModified$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.Z length();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #158                // InterfaceMethod org/sireum/Os$Path.length$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.IS<org.sireum.Z, org.sireum.Os$Path> list();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #165                // InterfaceMethod org/sireum/Os$Path.list$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #161                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;

  public void mergeFrom(org.sireum.IS<org.sireum.Z, org.sireum.Os$Path>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #173                // InterfaceMethod org/sireum/Os$Path.mergeFrom$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 sources   Lorg/sireum/IS;
    Signature: #168                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;)V
    MethodParameters:
      Name                           Flags
      sources                        final

  public java.lang.String md5();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #177                // InterfaceMethod org/sireum/Os$Path.md5$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void moveTo(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #181                // InterfaceMethod org/sireum/Os$Path.moveTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 target   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public void moveOverTo(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #185                // InterfaceMethod org/sireum/Os$Path.moveOverTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 target   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public void mkdir();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #190                // InterfaceMethod org/sireum/Os$Path.mkdir$:(Lorg/sireum/Os$Path;)V
         4: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void mkdirAll();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #194                // InterfaceMethod org/sireum/Os$Path.mkdirAll$:(Lorg/sireum/Os$Path;)V
         4: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void mklink(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #198                // InterfaceMethod org/sireum/Os$Path.mklink$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 target   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #201                // InterfaceMethod org/sireum/Os$Path.name$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.HashSMap<org.sireum.Os$Path, org.sireum.Os$Path> overlayCopy(org.sireum.Os$Path, boolean, boolean, scala.Function1<org.sireum.Os$Path, org.sireum.B>, boolean);
    descriptor: (Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: aload         4
         6: iload         5
         8: invokestatic  #212                // InterfaceMethod org/sireum/Os$Path.overlayCopy$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
        11: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/Os$Path$Impl;
            0      12     1 target   Lorg/sireum/Os$Path;
            0      12     2 includeDir   Z
            0      12     3 followLink   Z
            0      12     4  pred   Lscala/Function1;
            0      12     5 report   Z
    Signature: #204                         // (Lorg/sireum/Os$Path;ZZLscala/Function1<Lorg/sireum/Os$Path;Lorg/sireum/B;>;Z)Lorg/sireum/HashSMap<Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;>;
    MethodParameters:
      Name                           Flags
      target                         final
      includeDir                     final
      followLink                     final
      pred                           final
      report                         final

  public org.sireum.HashSMap<org.sireum.Os$Path, org.sireum.Os$Path> overlayMove(org.sireum.Os$Path, boolean, boolean, scala.Function1<org.sireum.Os$Path, org.sireum.B>, boolean);
    descriptor: (Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: aload         4
         6: iload         5
         8: invokestatic  #218                // InterfaceMethod org/sireum/Os$Path.overlayMove$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
        11: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/Os$Path$Impl;
            0      12     1 target   Lorg/sireum/Os$Path;
            0      12     2 includeDir   Z
            0      12     3 followLink   Z
            0      12     4  pred   Lscala/Function1;
            0      12     5 report   Z
    Signature: #204                         // (Lorg/sireum/Os$Path;ZZLscala/Function1<Lorg/sireum/Os$Path;Lorg/sireum/B;>;Z)Lorg/sireum/HashSMap<Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;>;
    MethodParameters:
      Name                           Flags
      target                         final
      includeDir                     final
      followLink                     final
      pred                           final
      report                         final

  public org.sireum.Map<org.sireum.String, org.sireum.String> properties();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #225                // InterfaceMethod org/sireum/Os$Path.properties$:(Lorg/sireum/Os$Path;)Lorg/sireum/Map;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #221                         // ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;

  public org.sireum.Option<org.sireum.Os$Path> readSymLink();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #232                // InterfaceMethod org/sireum/Os$Path.readSymLink$:(Lorg/sireum/Os$Path;)Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #228                         // ()Lorg/sireum/Option<Lorg/sireum/Os$Path;>;

  public org.sireum.Os$Path relativize(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #238                // InterfaceMethod org/sireum/Os$Path.relativize$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
         5: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 other   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      other                          final

  public java.lang.String read();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #242                // InterfaceMethod org/sireum/Os$Path.read$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> readLines();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #247                // InterfaceMethod org/sireum/Os$Path.readLines$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #244                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.Jen<org.sireum.String> readLineStream();
    descriptor: ()Lorg/sireum/Jen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #254                // InterfaceMethod org/sireum/Os$Path.readLineStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #250                         // ()Lorg/sireum/Jen<Lorg/sireum/String;>;

  public org.sireum.MJen<org.sireum.String> readLineMStream();
    descriptor: ()Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #261                // InterfaceMethod org/sireum/Os$Path.readLineMStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #257                         // ()Lorg/sireum/MJen<Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.U8> readU8s();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #266                // InterfaceMethod org/sireum/Os$Path.readU8s$:(Lorg/sireum/Os$Path;)Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #263                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;

  public org.sireum.MS<org.sireum.Z, org.sireum.U8> readU8ms();
    descriptor: ()Lorg/sireum/MS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #273                // InterfaceMethod org/sireum/Os$Path.readU8ms$:(Lorg/sireum/Os$Path;)Lorg/sireum/MS;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #269                         // ()Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;

  public org.sireum.Jen<org.sireum.U8> readU8Stream();
    descriptor: ()Lorg/sireum/Jen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #278                // InterfaceMethod org/sireum/Os$Path.readU8Stream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #275                         // ()Lorg/sireum/Jen<Lorg/sireum/U8;>;

  public org.sireum.MJen<org.sireum.U8> readU8MStream();
    descriptor: ()Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #283                // InterfaceMethod org/sireum/Os$Path.readU8MStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #280                         // ()Lorg/sireum/MJen<Lorg/sireum/U8;>;

  public org.sireum.Jen<org.sireum.C> readCStream();
    descriptor: ()Lorg/sireum/Jen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #288                // InterfaceMethod org/sireum/Os$Path.readCStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/Jen;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #285                         // ()Lorg/sireum/Jen<Lorg/sireum/C;>;

  public org.sireum.Indexable$Pos<org.sireum.C> readIndexableC();
    descriptor: ()Lorg/sireum/Indexable$Pos;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #295                // InterfaceMethod org/sireum/Os$Path.readIndexableC$:(Lorg/sireum/Os$Path;)Lorg/sireum/Indexable$Pos;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #291                         // ()Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;

  public org.sireum.MJen<org.sireum.C> readCMStream();
    descriptor: ()Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #300                // InterfaceMethod org/sireum/Os$Path.readCMStream$:(Lorg/sireum/Os$Path;)Lorg/sireum/MJen;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #297                         // ()Lorg/sireum/MJen<Lorg/sireum/C;>;

  public void remove();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #304                // InterfaceMethod org/sireum/Os$Path.remove$:(Lorg/sireum/Os$Path;)V
         4: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void removeAll();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #308                // InterfaceMethod org/sireum/Os$Path.removeAll$:(Lorg/sireum/Os$Path;)V
         4: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void removeOnExit();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #312                // InterfaceMethod org/sireum/Os$Path.removeOnExit$:(Lorg/sireum/Os$Path;)V
         4: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public java.lang.String sha1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #316                // InterfaceMethod org/sireum/Os$Path.sha1$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #320                // InterfaceMethod org/sireum/Os$Path.size$:(Lorg/sireum/Os$Path;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void slash(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #325                // InterfaceMethod org/sireum/Os$Path.slash$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1  args   Lorg/sireum/IS;
    Signature: #322                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      args                           final

  public java.lang.String toUri();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #329                // InterfaceMethod org/sireum/Os$Path.toUri$:(Lorg/sireum/Os$Path;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public void write(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #334                // InterfaceMethod org/sireum/Os$Path.write$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOver(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #338                // InterfaceMethod org/sireum/Os$Path.writeOver$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppend(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #342                // InterfaceMethod org/sireum/Os$Path.writeAppend$:(Lorg/sireum/Os$Path;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeLineStream(org.sireum.Jen<org.sireum.String>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #349                // InterfaceMethod org/sireum/Os$Path.writeLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #345                         // (Lorg/sireum/Jen<Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverLineStream(org.sireum.Jen<org.sireum.String>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #354                // InterfaceMethod org/sireum/Os$Path.writeOverLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #345                         // (Lorg/sireum/Jen<Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendLineStream(org.sireum.Jen<org.sireum.String>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #358                // InterfaceMethod org/sireum/Os$Path.writeAppendLineStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #345                         // (Lorg/sireum/Jen<Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeLineMStream(org.sireum.MJen<org.sireum.String>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #365                // InterfaceMethod org/sireum/Os$Path.writeLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #361                         // (Lorg/sireum/MJen<Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverLineMStream(org.sireum.MJen<org.sireum.String>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #370                // InterfaceMethod org/sireum/Os$Path.writeOverLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #361                         // (Lorg/sireum/MJen<Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendLineMStream(org.sireum.MJen<org.sireum.String>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #374                // InterfaceMethod org/sireum/Os$Path.writeAppendLineMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #361                         // (Lorg/sireum/MJen<Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeU8s(org.sireum.IS<org.sireum.Z, org.sireum.U8>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #379                // InterfaceMethod org/sireum/Os$Path.writeU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/IS;
    Signature: #376                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeU8Parts(org.sireum.IS<org.sireum.Z, org.sireum.U8>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #388                // InterfaceMethod org/sireum/Os$Path.writeU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
         7: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$Path$Impl;
            0       8     1 content   Lorg/sireum/IS;
            0       8     2 offset   Lorg/sireum/Z;
            0       8     3   len   Lorg/sireum/Z;
    Signature: #382                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
    MethodParameters:
      Name                           Flags
      content                        final
      offset                         final
      len                            final

  public void writeOverU8s(org.sireum.IS<org.sireum.Z, org.sireum.U8>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #393                // InterfaceMethod org/sireum/Os$Path.writeOverU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/IS;
    Signature: #376                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverU8Parts(org.sireum.IS<org.sireum.Z, org.sireum.U8>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #397                // InterfaceMethod org/sireum/Os$Path.writeOverU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
         7: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$Path$Impl;
            0       8     1 content   Lorg/sireum/IS;
            0       8     2 offset   Lorg/sireum/Z;
            0       8     3   len   Lorg/sireum/Z;
    Signature: #382                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
    MethodParameters:
      Name                           Flags
      content                        final
      offset                         final
      len                            final

  public void writeAppendU8s(org.sireum.IS<org.sireum.Z, org.sireum.U8>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #401                // InterfaceMethod org/sireum/Os$Path.writeAppendU8s$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/IS;
    Signature: #376                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendU8Parts(org.sireum.IS<org.sireum.Z, org.sireum.U8>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #405                // InterfaceMethod org/sireum/Os$Path.writeAppendU8Parts$:(Lorg/sireum/Os$Path;Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;)V
         7: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$Path$Impl;
            0       8     1 content   Lorg/sireum/IS;
            0       8     2 offset   Lorg/sireum/Z;
            0       8     3   len   Lorg/sireum/Z;
    Signature: #382                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
    MethodParameters:
      Name                           Flags
      content                        final
      offset                         final
      len                            final

  public void writeU8ms(org.sireum.MS<org.sireum.Z, org.sireum.U8>);
    descriptor: (Lorg/sireum/MS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #412                // InterfaceMethod org/sireum/Os$Path.writeU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MS;
    Signature: #408                         // (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeU8Partms(org.sireum.MS<org.sireum.Z, org.sireum.U8>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #420                // InterfaceMethod org/sireum/Os$Path.writeU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
         7: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$Path$Impl;
            0       8     1 content   Lorg/sireum/MS;
            0       8     2 offset   Lorg/sireum/Z;
            0       8     3   len   Lorg/sireum/Z;
    Signature: #416                         // (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
    MethodParameters:
      Name                           Flags
      content                        final
      offset                         final
      len                            final

  public void writeOverU8ms(org.sireum.MS<org.sireum.Z, org.sireum.U8>);
    descriptor: (Lorg/sireum/MS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #424                // InterfaceMethod org/sireum/Os$Path.writeOverU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MS;
    Signature: #408                         // (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverU8Partms(org.sireum.MS<org.sireum.Z, org.sireum.U8>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #428                // InterfaceMethod org/sireum/Os$Path.writeOverU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
         7: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$Path$Impl;
            0       8     1 content   Lorg/sireum/MS;
            0       8     2 offset   Lorg/sireum/Z;
            0       8     3   len   Lorg/sireum/Z;
    Signature: #416                         // (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
    MethodParameters:
      Name                           Flags
      content                        final
      offset                         final
      len                            final

  public void writeAppendU8ms(org.sireum.MS<org.sireum.Z, org.sireum.U8>);
    descriptor: (Lorg/sireum/MS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #432                // InterfaceMethod org/sireum/Os$Path.writeAppendU8ms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MS;
    Signature: #408                         // (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendU8Partms(org.sireum.MS<org.sireum.Z, org.sireum.U8>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #436                // InterfaceMethod org/sireum/Os$Path.writeAppendU8Partms$:(Lorg/sireum/Os$Path;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)V
         7: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$Path$Impl;
            0       8     1 content   Lorg/sireum/MS;
            0       8     2 offset   Lorg/sireum/Z;
            0       8     3   len   Lorg/sireum/Z;
    Signature: #416                         // (Lorg/sireum/MS<Lorg/sireum/Z;Lorg/sireum/U8;>;Lorg/sireum/Z;Lorg/sireum/Z;)V
    MethodParameters:
      Name                           Flags
      content                        final
      offset                         final
      len                            final

  public void writeU8Stream(org.sireum.Jen<org.sireum.U8>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #441                // InterfaceMethod org/sireum/Os$Path.writeU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #438                         // (Lorg/sireum/Jen<Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverU8Stream(org.sireum.Jen<org.sireum.U8>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #445                // InterfaceMethod org/sireum/Os$Path.writeOverU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #438                         // (Lorg/sireum/Jen<Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendU8Stream(org.sireum.Jen<org.sireum.U8>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #449                // InterfaceMethod org/sireum/Os$Path.writeAppendU8Stream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #438                         // (Lorg/sireum/Jen<Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeU8MStream(org.sireum.MJen<org.sireum.U8>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #454                // InterfaceMethod org/sireum/Os$Path.writeU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #451                         // (Lorg/sireum/MJen<Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverU8MStream(org.sireum.MJen<org.sireum.U8>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #458                // InterfaceMethod org/sireum/Os$Path.writeOverU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #451                         // (Lorg/sireum/MJen<Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendU8MStream(org.sireum.MJen<org.sireum.U8>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #462                // InterfaceMethod org/sireum/Os$Path.writeAppendU8MStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #451                         // (Lorg/sireum/MJen<Lorg/sireum/U8;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeCStream(org.sireum.Jen<org.sireum.C>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #467                // InterfaceMethod org/sireum/Os$Path.writeCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #464                         // (Lorg/sireum/Jen<Lorg/sireum/C;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverCStream(org.sireum.Jen<org.sireum.C>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #471                // InterfaceMethod org/sireum/Os$Path.writeOverCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #464                         // (Lorg/sireum/Jen<Lorg/sireum/C;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendCStream(org.sireum.Jen<org.sireum.C>);
    descriptor: (Lorg/sireum/Jen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #475                // InterfaceMethod org/sireum/Os$Path.writeAppendCStream$:(Lorg/sireum/Os$Path;Lorg/sireum/Jen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/Jen;
    Signature: #464                         // (Lorg/sireum/Jen<Lorg/sireum/C;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeCMStream(org.sireum.MJen<org.sireum.C>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #480                // InterfaceMethod org/sireum/Os$Path.writeCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #477                         // (Lorg/sireum/MJen<Lorg/sireum/C;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeOverCMStream(org.sireum.MJen<org.sireum.C>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #484                // InterfaceMethod org/sireum/Os$Path.writeOverCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #477                         // (Lorg/sireum/MJen<Lorg/sireum/C;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void writeAppendCMStream(org.sireum.MJen<org.sireum.C>);
    descriptor: (Lorg/sireum/MJen;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #488                // InterfaceMethod org/sireum/Os$Path.writeAppendCMStream$:(Lorg/sireum/Os$Path;Lorg/sireum/MJen;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 content   Lorg/sireum/MJen;
    Signature: #477                         // (Lorg/sireum/MJen<Lorg/sireum/C;>;)V
    MethodParameters:
      Name                           Flags
      content                        final

  public void zipTo(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #492                // InterfaceMethod org/sireum/Os$Path.zipTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 target   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public void unzipTo(org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #496                // InterfaceMethod org/sireum/Os$Path.unzipTo$:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;)V
         5: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Path$Impl;
            0       6     1 target   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public org.sireum.Os$Path up();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #500                // InterfaceMethod org/sireum/Os$Path.up$:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #508                // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #513                // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #517                // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #525                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public java.lang.String value();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #528                // Field _value:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public java.lang.String getValue();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #528                // Field _value:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #533                // Method string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #537                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     95
        15: aload_0
        16: aload_0
        17: invokevirtual #539                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #541                // Method java/lang/Object.hashCode:()I
        27: goto          81
        30: getstatic     #547                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #551                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #556                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_2
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #560                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #565                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: new           #567                // class org/sireum/String
        58: dup
        59: aload_0
        60: invokevirtual #569                // Method value:()Ljava/lang/String;
        63: invokespecial #572                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        66: aastore
        67: invokevirtual #576                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        70: invokevirtual #582                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        73: checkcast     #584                // class scala/collection/Seq
        76: invokeinterface #585,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        81: putfield      #587                // Field hashCode:I
        84: aload_0
        85: aload_0
        86: getfield      #537                // Field bitmap$0:B
        89: iconst_1
        90: ior
        91: i2b
        92: putfield      #537                // Field bitmap$0:B
        95: aload_1
        96: monitorexit
        97: goto          103
       100: aload_1
       101: monitorexit
       102: athrow
       103: aload_0
       104: getfield      #587                // Field hashCode:I
       107: ireturn
      Exception table:
         from    to  target type
             4    95   100   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/Os$Path$Impl, class org/sireum/Os$Path$Impl ]
          stack = [ class org/sireum/Os$Path$Impl ]
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/sireum/Os$Path$Impl, class org/sireum/Os$Path$Impl ]
          stack = [ class org/sireum/Os$Path$Impl, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lorg/sireum/Os$Path$Impl;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #537                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #591                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #587                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Os$Path$Impl;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #539                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #596                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/Os$Path$Impl
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/Os$Path$Impl
        37: astore        4
        39: aload_0
        40: invokevirtual #597                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #597                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #569                // Method value:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #569                // Method value:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #596                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/Os$Path$Impl ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Path$Impl, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Path$Impl, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$Path$Impl, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Path$Impl ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/Os$Path$Impl, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$Path$Impl, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/Os$Path$Impl;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Os$Path$Impl apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/Os$Path$Impl
         3: dup
         4: aload_1
         5: invokespecial #602                // Method "<init>":(Ljava/lang/String;)V
         8: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/Os$Path$Impl;
            0       9     1 value   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      value                          final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #569                // Method value:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #537                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     132
        15: aload_0
        16: getstatic     #547                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #551                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #556                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_2
        26: anewarray     #608                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #608                // class scala/Tuple2
        34: dup
        35: ldc_w         #610                // String type
        38: getstatic     #547                // Field scala/package$.MODULE$:Lscala/package$;
        41: invokevirtual #614                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        44: getstatic     #556                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        47: iconst_3
        48: anewarray     #600                // class java/lang/String
        51: dup
        52: iconst_0
        53: ldc_w         #616                // String org
        56: aastore
        57: dup
        58: iconst_1
        59: ldc_w         #618                // String sireum
        62: aastore
        63: dup
        64: iconst_2
        65: ldc_w         #619                // String Impl
        68: aastore
        69: checkcast     #621                // class "[Ljava/lang/Object;"
        72: invokevirtual #625                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        75: invokevirtual #630                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        78: invokespecial #633                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        81: aastore
        82: dup
        83: iconst_1
        84: new           #608                // class scala/Tuple2
        87: dup
        88: ldc_w         #634                // String value
        91: new           #567                // class org/sireum/String
        94: dup
        95: aload_0
        96: invokevirtual #569                // Method value:()Ljava/lang/String;
        99: invokespecial #572                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       102: invokespecial #633                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       105: aastore
       106: checkcast     #621                // class "[Ljava/lang/Object;"
       109: invokevirtual #625                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       112: invokevirtual #582                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       115: checkcast     #636                // class scala/collection/immutable/Seq
       118: putfield      #638                // Field $content:Lscala/collection/immutable/Seq;
       121: aload_0
       122: aload_0
       123: getfield      #537                // Field bitmap$0:B
       126: iconst_2
       127: ior
       128: i2b
       129: putfield      #537                // Field bitmap$0:B
       132: aload_1
       133: monitorexit
       134: goto          140
       137: aload_1
       138: monitorexit
       139: athrow
       140: aload_0
       141: getfield      #638                // Field $content:Lscala/collection/immutable/Seq;
       144: areturn
      Exception table:
         from    to  target type
             4   132   137   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 132
          locals = [ class org/sireum/Os$Path$Impl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     145     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #606                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #537                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #640                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #638                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Os$Path$Impl;
    Signature: #606                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #569                // Method value:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #643                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$Impl;

  public org.sireum.Os$Path$Impl(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #646                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #650                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #653                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #655                // InterfaceMethod org/sireum/Os$Path.$init$:(Lorg/sireum/Os$Path;)V
        16: aload_0
        17: invokestatic  #658                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        20: aload_0
        21: aload_1
        22: putfield      #528                // Field _value:Ljava/lang/String;
        25: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/sireum/Os$Path$Impl;
            0      26     1 __value   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      __value                        final
}
InnerClasses:
  public static #14= #11 of #13;          // Pos=class org/sireum/Indexable$Pos of class org/sireum/Indexable
  public static #17= #6 of #16;           // Path=class org/sireum/Os$Path of class org/sireum/Os
  public static #20= #19 of #16;          // Path$=class org/sireum/Os$Path$ of class org/sireum/Os
  public static final #21= #2 of #19;     // Impl=class org/sireum/Os$Path$Impl of class org/sireum/Os$Path$
  public static #24= #23 of #19;          // Kind$=class org/sireum/Os$Path$Kind$ of class org/sireum/Os$Path$
  public static #27= #26 of #23;          // Type=class org/sireum/Os$Path$Kind$Type of class org/sireum/Os$Path$Kind$
  public static final #30= #29 of #16;    // Proc=class org/sireum/Os$Proc of class org/sireum/Os
SourceFile: "Os.scala"
  ScalaInlineInfo: length = 0x216 (unknown attribute)
   01 01 00 6A 01 F5 01 F6 01 02 06 02 81 01 02 06
   02 07 01 00 21 02 5D 01 02 5C 02 5D 01 00 36 00
   37 01 00 3D 00 3E 01 01 FD 00 77 01 02 02 00 77
   01 02 3A 00 59 01 00 54 00 4F 01 02 43 02 59 01
   02 5B 00 31 01 00 46 00 47 01 00 4E 00 4F 01 00
   58 00 59 01 00 5F 00 59 01 00 6B 00 64 01 00 63
   00 64 01 00 6F 00 70 01 02 50 02 51 01 00 76 00
   77 01 00 7C 00 31 01 02 11 00 31 01 00 28 00 29
   01 00 1F 02 17 01 02 16 02 17 01 00 80 00 77 01
   00 84 00 77 01 00 88 00 77 01 00 8C 00 77 01 00
   90 00 91 01 00 96 00 29 01 00 9B 00 29 01 00 9F
   00 A0 01 00 AE 00 31 01 00 A6 00 A7 01 00 BA 00
   BB 01 00 BF 00 BB 01 00 C3 00 64 01 00 B6 00 64
   01 00 B2 00 64 01 00 38 00 31 01 00 CA 00 CB 01
   00 D7 00 CB 01 00 30 00 31 01 00 DB 00 DC 01 00
   EF 00 31 01 01 28 01 00 01 01 1C 00 F9 01 01 21
   01 22 01 00 FF 01 00 01 00 F8 00 F9 01 00 F3 00
   A0 01 00 E2 00 E3 01 01 17 01 00 01 01 12 00 F9
   01 01 0B 01 0C 01 01 06 00 A0 01 00 E9 00 51 01
   01 2D 00 BB 01 01 31 00 BB 01 01 35 00 BB 01 01
   39 00 31 01 01 3D 00 29 01 01 41 00 A7 01 02 13
   00 31 01 02 12 00 31 01 01 46 00 31 01 01 ED 00
   64 01 01 F1 00 4F 01 02 0E 00 31 01 01 4A 00 59
   01 01 53 00 59 01 01 E5 01 68 01 01 D8 01 58 01
   01 73 01 68 01 01 63 01 58 01 01 CB 01 68 01 01
   B1 01 9F 01 01 92 01 7D 01 01 BE 01 58 01 01 AD
   01 97 01 01 8E 00 A7 01 01 DC 01 68 01 01 CF 01
   58 01 01 67 01 68 01 01 57 01 58 01 01 4F 00 59
   01 01 E1 01 68 01 01 D4 01 58 01 01 6F 01 68 01
   01 5F 01 58 01 01 C7 01 68 01 01 A9 01 9F 01 01
   8A 01 7D 01 01 BA 01 58 01 01 A5 01 97 01 01 86
   00 A7 01 01 C2 01 68 01 01 9E 01 9F 01 01 7C 01
   7D 01 01 B5 01 58 01 01 96 01 97 01 01 77 00 A7
   01 01 E9 00 64 01
  Scala: length = 0x0 (unknown attribute)

