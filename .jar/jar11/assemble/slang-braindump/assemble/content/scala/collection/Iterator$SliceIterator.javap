Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/Iterator$SliceIterator.class
  Last modified May 29, 2022; size 2987 bytes
  SHA-256 checksum 94c67967ba0d278d76f89d2b3b84984b10537e64b52436eba9f37d200190dc24
  Compiled from "Iterator.scala"
public final class scala.collection.Iterator$SliceIterator<A extends java.lang.Object> extends scala.collection.AbstractIterator<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/Iterator$SliceIterator
  super_class: #5                         // scala/collection/AbstractIterator
  interfaces: 0, fields: 3, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/Iterator$SliceIterator
    #2 = Class              #1            // scala/collection/Iterator$SliceIterator
    #3 = Utf8               <A:Ljava/lang/Object;>Lscala/collection/AbstractIterator<TA;>;
    #4 = Utf8               scala/collection/AbstractIterator
    #5 = Class              #4            // scala/collection/AbstractIterator
    #6 = Utf8               Iterator.scala
    #7 = Utf8               scala/collection/Iterator
    #8 = Class              #7            // scala/collection/Iterator
    #9 = Utf8               SliceIterator
   #10 = Utf8               underlying
   #11 = Utf8               Lscala/collection/Iterator;
   #12 = Utf8               Lscala/collection/Iterator<TA;>;
   #13 = Utf8               scala$collection$Iterator$SliceIterator$$remaining
   #14 = Utf8               I
   #15 = Utf8               dropping
   #16 = Utf8               ()Lscala/collection/Iterator;
   #17 = Utf8               ()Lscala/collection/Iterator<TA;>;
   #18 = NameAndType        #10:#11       // underlying:Lscala/collection/Iterator;
   #19 = Fieldref           #2.#18        // scala/collection/Iterator$SliceIterator.underlying:Lscala/collection/Iterator;
   #20 = Utf8               this
   #21 = Utf8               Lscala/collection/Iterator$SliceIterator;
   #22 = Utf8               unbounded
   #23 = Utf8               ()Z
   #24 = NameAndType        #13:#14       // scala$collection$Iterator$SliceIterator$$remaining:I
   #25 = Fieldref           #2.#24        // scala/collection/Iterator$SliceIterator.scala$collection$Iterator$SliceIterator$$remaining:I
   #26 = Utf8               skip
   #27 = Utf8               ()V
   #28 = NameAndType        #15:#14       // dropping:I
   #29 = Fieldref           #2.#28        // scala/collection/Iterator$SliceIterator.dropping:I
   #30 = NameAndType        #10:#16       // underlying:()Lscala/collection/Iterator;
   #31 = Methodref          #2.#30        // scala/collection/Iterator$SliceIterator.underlying:()Lscala/collection/Iterator;
   #32 = Utf8               hasNext
   #33 = NameAndType        #32:#23       // hasNext:()Z
   #34 = InterfaceMethodref #8.#33        // scala/collection/Iterator.hasNext:()Z
   #35 = Utf8               next
   #36 = Utf8               ()Ljava/lang/Object;
   #37 = NameAndType        #35:#36       // next:()Ljava/lang/Object;
   #38 = InterfaceMethodref #8.#37        // scala/collection/Iterator.next:()Ljava/lang/Object;
   #39 = Utf8               knownSize
   #40 = Utf8               ()I
   #41 = NameAndType        #39:#40       // knownSize:()I
   #42 = InterfaceMethodref #8.#41        // scala/collection/Iterator.knownSize:()I
   #43 = Utf8               scala/runtime/RichInt$
   #44 = Class              #43           // scala/runtime/RichInt$
   #45 = Utf8               MODULE$
   #46 = Utf8               Lscala/runtime/RichInt$;
   #47 = NameAndType        #45:#46       // MODULE$:Lscala/runtime/RichInt$;
   #48 = Fieldref           #44.#47       // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
   #49 = Utf8               scala/math/package$
   #50 = Class              #49           // scala/math/package$
   #51 = Utf8               Lscala/math/package$;
   #52 = NameAndType        #45:#51       // MODULE$:Lscala/math/package$;
   #53 = Fieldref           #50.#52       // scala/math/package$.MODULE$:Lscala/math/package$;
   #54 = Utf8               java/lang/Math
   #55 = Class              #54           // java/lang/Math
   #56 = Utf8               max
   #57 = Utf8               (II)I
   #58 = NameAndType        #56:#57       // max:(II)I
   #59 = Methodref          #55.#58       // java/lang/Math.max:(II)I
   #60 = Utf8               min
   #61 = NameAndType        #60:#57       // min:(II)I
   #62 = Methodref          #55.#61       // java/lang/Math.min:(II)I
   #63 = Utf8               size
   #64 = Utf8               max$extension_that
   #65 = NameAndType        #26:#27       // skip:()V
   #66 = Methodref          #2.#65        // scala/collection/Iterator$SliceIterator.skip:()V
   #67 = Utf8               ()TA;
   #68 = Utf8               scala/collection/Iterator$
   #69 = Class              #68           // scala/collection/Iterator$
   #70 = Utf8               Lscala/collection/Iterator$;
   #71 = NameAndType        #45:#70       // MODULE$:Lscala/collection/Iterator$;
   #72 = Fieldref           #69.#71       // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
   #73 = Utf8               scala$collection$Iterator$$_empty
   #74 = NameAndType        #73:#11       // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #75 = Fieldref           #69.#74       // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #76 = Utf8               sliceIterator
   #77 = Utf8               (II)Lscala/collection/Iterator;
   #78 = Utf8               (II)Lscala/collection/Iterator<TA;>;
   #79 = Utf8               from
   #80 = Utf8               until
   #81 = Utf8               adjustedBound$1
   #82 = Utf8               (I)I
   #83 = NameAndType        #81:#82       // adjustedBound$1:(I)I
   #84 = Methodref          #2.#83        // scala/collection/Iterator$SliceIterator.adjustedBound$1:(I)I
   #85 = Utf8               rest
   #86 = Utf8               min$extension_that
   #87 = Utf8               lo$1
   #88 = Utf8               <init>
   #89 = Utf8               (Lscala/collection/Iterator;II)V
   #90 = Utf8               (Lscala/collection/Iterator<TA;>;II)V
   #91 = Utf8               start
   #92 = Utf8               limit
   #93 = NameAndType        #88:#27       // "<init>":()V
   #94 = Methodref          #5.#93        // scala/collection/AbstractIterator."<init>":()V
   #95 = Utf8               Signature
   #96 = Utf8               Code
   #97 = Utf8               LineNumberTable
   #98 = Utf8               LocalVariableTable
   #99 = Utf8               StackMapTable
  #100 = Utf8               MethodParameters
  #101 = Utf8               InnerClasses
  #102 = Utf8               SourceFile
  #103 = Utf8               ScalaInlineInfo
  #104 = Utf8               Scala
{
  private final scala.collection.Iterator<A> underlying;
    descriptor: Lscala/collection/Iterator;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/collection/Iterator<TA;>;

  public int scala$collection$Iterator$SliceIterator$$remaining;
    descriptor: I
    flags: (0x0001) ACC_PUBLIC

  private int dropping;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  public scala.collection.Iterator<A> underlying();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #19                 // Field underlying:Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 1212: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/Iterator$SliceIterator;
    Signature: #17                          // ()Lscala/collection/Iterator<TA;>;

  private boolean unbounded();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
         4: iconst_0
         5: if_icmpge     10
         8: iconst_1
         9: ireturn
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
      LineNumberTable:
        line 1215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/Iterator$SliceIterator;

  private void skip();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field dropping:I
         4: iconst_0
         5: if_icmple     51
         8: aload_0
         9: invokevirtual #31                 // Method underlying:()Lscala/collection/Iterator;
        12: invokeinterface #34,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        17: ifeq          43
        20: aload_0
        21: invokevirtual #31                 // Method underlying:()Lscala/collection/Iterator;
        24: invokeinterface #38,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        29: pop
        30: aload_0
        31: aload_0
        32: getfield      #29                 // Field dropping:I
        35: iconst_1
        36: isub
        37: putfield      #29                 // Field dropping:I
        40: goto          0
        43: aload_0
        44: iconst_0
        45: putfield      #29                 // Field dropping:I
        48: goto          0
        51: return
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 42 /* same */
        frame_type = 7 /* same */
      LineNumberTable:
        line 1217: 0
        line 1218: 8
        line 1219: 20
        line 1220: 30
        line 1222: 43
        line 1218: 48
        line 1217: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lscala/collection/Iterator$SliceIterator;

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=1
         0: aload_0
         1: invokevirtual #31                 // Method underlying:()Lscala/collection/Iterator;
         4: invokeinterface #42,  1           // InterfaceMethod scala/collection/Iterator.knownSize:()I
         9: istore_1
        10: iload_1
        11: iconst_0
        12: if_icmpge     17
        15: iconst_m1
        16: ireturn
        17: getstatic     #48                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        20: pop
        21: iconst_0
        22: istore_2
        23: iload_1
        24: aload_0
        25: getfield      #29                 // Field dropping:I
        28: isub
        29: istore        4
        31: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        34: pop
        35: iload_2
        36: iload         4
        38: invokestatic  #59                 // Method java/lang/Math.max:(II)I
        41: istore        5
        43: aload_0
        44: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        47: iconst_0
        48: if_icmpge     55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: ifeq          62
        59: iload         5
        61: ireturn
        62: getstatic     #48                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        65: pop
        66: aload_0
        67: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        70: istore_3
        71: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        74: pop
        75: iload_3
        76: iload         5
        78: invokestatic  #62                 // Method java/lang/Math.min:(II)I
        81: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class scala/collection/Iterator$SliceIterator, int, int, top, int, int ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 5 /* same */
      LineNumberTable:
        line 1225: 0
        line 1226: 10
        line 1228: 17
        line 1215: 43
        line 1229: 56
        line 1230: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      71     1  size   I
            0      82     0  this   Lscala/collection/Iterator$SliceIterator;
           31      12     4 max$extension_that   I

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #66                 // Method skip:()V
         4: aload_0
         5: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
         8: iconst_0
         9: if_icmpeq     26
        12: aload_0
        13: invokevirtual #31                 // Method underlying:()Lscala/collection/Iterator;
        16: invokeinterface #34,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        21: ifeq          26
        24: iconst_1
        25: ireturn
        26: iconst_0
        27: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 26 /* same */
      LineNumberTable:
        line 1233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/collection/Iterator$SliceIterator;

  public A next();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #66                 // Method skip:()V
         4: aload_0
         5: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
         8: iconst_0
         9: if_icmple     32
        12: aload_0
        13: aload_0
        14: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        17: iconst_1
        18: isub
        19: putfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        22: aload_0
        23: invokevirtual #31                 // Method underlying:()Lscala/collection/Iterator;
        26: invokeinterface #38,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        31: areturn
        32: aload_0
        33: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        36: iconst_0
        37: if_icmpge     44
        40: iconst_1
        41: goto          45
        44: iconst_0
        45: ifeq          58
        48: aload_0
        49: invokevirtual #31                 // Method underlying:()Lscala/collection/Iterator;
        52: invokeinterface #38,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        57: areturn
        58: getstatic     #72                 // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        61: pop
        62: getstatic     #75                 // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        65: invokeinterface #38,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        70: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 32 /* same */
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 12 /* same */
      LineNumberTable:
        line 1235: 0
        line 1236: 4
        line 1237: 12
        line 1238: 22
        line 1215: 32
        line 1240: 45
        line 1241: 58
        line 980: 62
        line 1241: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lscala/collection/Iterator$SliceIterator;
    Signature: #67                          // ()TA;

  public scala.collection.Iterator<A> sliceIterator(int, int);
    descriptor: (II)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=8, args_size=3
         0: getstatic     #48                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         3: pop
         4: iconst_0
         5: istore        5
         7: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        10: pop
        11: iload_1
        12: iload         5
        14: invokestatic  #59                 // Method java/lang/Math.max:(II)I
        17: istore        6
        19: iload_2
        20: iconst_0
        21: if_icmpge     33
        24: aload_0
        25: iload         6
        27: invokespecial #84                 // Method adjustedBound$1:(I)I
        30: goto          95
        33: iload_2
        34: iload         6
        36: if_icmpgt     43
        39: iconst_0
        40: goto          95
        43: aload_0
        44: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        47: iconst_0
        48: if_icmpge     55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: ifeq          66
        59: iload_2
        60: iload         6
        62: isub
        63: goto          95
        66: getstatic     #48                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        69: pop
        70: aload_0
        71: iload         6
        73: invokespecial #84                 // Method adjustedBound$1:(I)I
        76: istore        4
        78: iload_2
        79: iload         6
        81: isub
        82: istore        7
        84: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        87: pop
        88: iload         4
        90: iload         7
        92: invokestatic  #62                 // Method java/lang/Math.min:(II)I
        95: istore_3
        96: iload_3
        97: iconst_0
        98: if_icmpne     109
       101: getstatic     #72                 // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
       104: pop
       105: getstatic     #75                 // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
       108: areturn
       109: aload_0
       110: aload_0
       111: getfield      #29                 // Field dropping:I
       114: iload         6
       116: iadd
       117: putfield      #29                 // Field dropping:I
       120: aload_0
       121: iload_3
       122: putfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
       125: aload_0
       126: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class scala/collection/Iterator$SliceIterator, int, int, top, top, int, int ]
          stack = []
        frame_type = 9 /* same */
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 9 /* same */
        frame_type = 92 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/Iterator$SliceIterator, int, int, int, top, int, int ]
          stack = []
      LineNumberTable:
        line 1244: 0
        line 1249: 19
        line 1250: 33
        line 1215: 43
        line 1251: 56
        line 1252: 70
        line 1253: 96
        line 980: 105
        line 1253: 108
        line 1255: 109
        line 1256: 120
        line 1257: 125
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           96      30     3  rest   I
            0     127     0  this   Lscala/collection/Iterator$SliceIterator;
            0     127     1  from   I
            0     127     2 until   I
            7      12     5 max$extension_that   I
           84      11     7 min$extension_that   I
    Signature: #78                          // (II)Lscala/collection/Iterator<TA;>;
    MethodParameters:
      Name                           Flags
      from                           final
      until                          final

  private final int adjustedBound$1(int);
    descriptor: (I)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
         4: iconst_0
         5: if_icmpge     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ifeq          18
        16: iconst_m1
        17: ireturn
        18: getstatic     #48                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        21: pop
        22: iconst_0
        23: istore_2
        24: aload_0
        25: getfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        28: iload_1
        29: isub
        30: istore_3
        31: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        34: pop
        35: iload_2
        36: iload_3
        37: invokestatic  #59                 // Method java/lang/Math.max:(II)I
        40: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 4 /* same */
      LineNumberTable:
        line 1215: 0
        line 1246: 13
        line 1247: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lscala/collection/Iterator$SliceIterator;
            0      41     1  lo$1   I
           31       9     3 max$extension_that   I
    MethodParameters:
      Name                           Flags
      lo$1                           final

  public scala.collection.Iterator$SliceIterator(scala.collection.Iterator<A>, int, int);
    descriptor: (Lscala/collection/Iterator;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #19                 // Field underlying:Lscala/collection/Iterator;
         5: aload_0
         6: invokespecial #94                 // Method scala/collection/AbstractIterator."<init>":()V
         9: aload_0
        10: iload_3
        11: putfield      #25                 // Field scala$collection$Iterator$SliceIterator$$remaining:I
        14: aload_0
        15: iload_2
        16: putfield      #29                 // Field dropping:I
        19: return
      LineNumberTable:
        line 1212: 0
        line 1213: 9
        line 1214: 14
        line 1212: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/collection/Iterator$SliceIterator;
            0      20     1 underlying   Lscala/collection/Iterator;
            0      20     2 start   I
            0      20     3 limit   I
    Signature: #90                          // (Lscala/collection/Iterator<TA;>;II)V
    MethodParameters:
      Name                           Flags
      underlying                     final
      start                          final
      limit                          final
}
InnerClasses:
  public static final #9= #2 of #8;       // SliceIterator=class scala/collection/Iterator$SliceIterator of class scala/collection/Iterator
Signature: #3                           // <A:Ljava/lang/Object;>Lscala/collection/AbstractIterator<TA;>;
SourceFile: "Iterator.scala"
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 58 00 59 01 00 51 00 52 01 00 20
   00 17 01 00 27 00 28 01 00 23 00 24 01 00 1A 00
   1B 01 00 4C 00 4D 01 00 16 00 17 05 00 0A 00 10
   01
  Scala: length = 0x0 (unknown attribute)

