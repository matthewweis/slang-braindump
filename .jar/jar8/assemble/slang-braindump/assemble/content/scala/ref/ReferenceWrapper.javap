Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/ref/ReferenceWrapper.class
  Last modified May 29, 2022; size 2915 bytes
  SHA-256 checksum 6220b40d1c8c95ba077b1839dc4f940b412bb5e2f77bcf1b8eb31f4e33b0930e
  Compiled from "ReferenceWrapper.scala"
public interface scala.ref.ReferenceWrapper<T extends java.lang.Object> extends scala.ref.Reference<T>, scala.Proxy
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/ref/ReferenceWrapper
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 0, methods: 14, attributes: 5
Constant pool:
   #1 = Utf8               scala/ref/ReferenceWrapper
   #2 = Class              #1             // scala/ref/ReferenceWrapper
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/ref/Reference<TT;>;Lscala/Proxy;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/ref/Reference
   #7 = Class              #6             // scala/ref/Reference
   #8 = Utf8               scala/Proxy
   #9 = Class              #8             // scala/Proxy
  #10 = Utf8               ReferenceWrapper.scala
  #11 = Utf8               Lscala/reflect/ScalaSignature;
  #12 = Utf8               bytes
  #13 = Utf8               \u0006\u000593q!\u0003\u0006\u0011\u0002\u0007\u0005q\u0002C\u0003%\u0001\u0011\u0005Q\u0005C\u0004*\u0001\t\u0007i\u0011\u0001\u0016\t\u000ba\u0002A\u0011I\u001d\t\u000bu\u0002A\u0011\u0001 \t\u000b}\u0002A\u0011A\u0013\t\u000b\u0001\u0003A\u0011A!\t\u000b\u0015\u0003A\u0011\u0001$\t\u000b\u001d\u0003A\u0011\u0001%\u0003!I+g-\u001a:f]\u000e,wK]1qa\u0016\u0014(BA\u0006\r\u0003\r\u0011XM\u001a\u0006\u0002\u001b\u0005)1oY1mC\u000e\u0001QC\u0001\t\u001c\'\u0011\u0001\u0011#F\u0011\u0011\u0005I\u0019R\"\u0001\u0007\n\u0005Qa!AB!osJ+g\rE\u0002\u0017/ei\u0011AC\u0005\u00031)\u0011\u0011BU3gKJ,gnY3\u0011\u0005iYB\u0002\u0001\u0003\u00079\u0001!)\u0019A\u000f\u0003\u0003Q\u000b\"AH\t\u0011\u0005Iy\u0012B\u0001\u0011\r\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"A\u0005\u0012\n\u0005\rb!!\u0002)s_bL\u0018A\u0002\u0013j]&$H\u0005F\u0001\'!\t\u0011r%\u0003\u0002)\u0019\t!QK\\5u\u0003))h\u000eZ3sYfLgnZ\u000b\u0002WA\u0012A&\u000e\t\u0004[M\"T\"\u0001\u0018\u000b\u0005-y#B\u0001\u00192\u0003\u0011a\u0017M\\4\u000b\u0003I\nAA[1wC&\u0011\u0001D\f\t\u00035U\"\u0011B\u000e\u0002\u0002\u0002\u0003\u0005)\u0011A\u001c\u0003\u0007}#\u0013\'\u0005\u0002\u001f3\u0005\u0019q-\u001a;\u0016\u0003i\u00022AE\u001e\u001a\u0013\taDB\u0001\u0004PaRLwN\\\u0001\u0006CB\u0004H.\u001f\u000b\u00023\u0005)1\r\\3be\u00069QM\\9vKV,G#\u0001\"\u0011\u0005I\u0019\u0015B\u0001#\r\u0005\u001d\u0011un\u001c7fC:\f!\"[:F]F,X-^3e+\u0005\u0011\u0015\u0001B:fY\u001a,\u0012!\u0013\u0019\u0003\u00152\u00032!L\u001aL!\tQB\nB\u0005N\u0011\u0005\u0005\t\u0011!B\u0001o\t\u0019q\f\n\u001a
  #14 = Utf8               underlying
  #15 = Utf8               ()Ljava/lang/ref/Reference;
  #16 = Utf8               ()Ljava/lang/ref/Reference<+TT;>;
  #17 = Utf8               get$
  #18 = Utf8               (Lscala/ref/ReferenceWrapper;)Lscala/Option;
  #19 = Utf8               $this
  #20 = Utf8               get
  #21 = Utf8               ()Lscala/Option;
  #22 = NameAndType        #20:#21        // get:()Lscala/Option;
  #23 = InterfaceMethodref #2.#22         // scala/ref/ReferenceWrapper.get:()Lscala/Option;
  #24 = Utf8               Lscala/ref/ReferenceWrapper;
  #25 = Utf8               ()Lscala/Option<TT;>;
  #26 = Utf8               scala/Option$
  #27 = Class              #26            // scala/Option$
  #28 = Utf8               MODULE$
  #29 = Utf8               Lscala/Option$;
  #30 = NameAndType        #28:#29        // MODULE$:Lscala/Option$;
  #31 = Fieldref           #27.#30        // scala/Option$.MODULE$:Lscala/Option$;
  #32 = NameAndType        #14:#15        // underlying:()Ljava/lang/ref/Reference;
  #33 = InterfaceMethodref #2.#32         // scala/ref/ReferenceWrapper.underlying:()Ljava/lang/ref/Reference;
  #34 = Utf8               java/lang/ref/Reference
  #35 = Class              #34            // java/lang/ref/Reference
  #36 = Utf8               ()Ljava/lang/Object;
  #37 = NameAndType        #20:#36        // get:()Ljava/lang/Object;
  #38 = Methodref          #35.#37        // java/lang/ref/Reference.get:()Ljava/lang/Object;
  #39 = Utf8               apply
  #40 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #41 = NameAndType        #39:#40        // apply:(Ljava/lang/Object;)Lscala/Option;
  #42 = Methodref          #27.#41        // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #43 = Utf8               this
  #44 = Utf8               apply$
  #45 = Utf8               (Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
  #46 = NameAndType        #39:#36        // apply:()Ljava/lang/Object;
  #47 = InterfaceMethodref #2.#46         // scala/ref/ReferenceWrapper.apply:()Ljava/lang/Object;
  #48 = Utf8               ()TT;
  #49 = Utf8               java/util/NoSuchElementException
  #50 = Class              #49            // java/util/NoSuchElementException
  #51 = Utf8               <init>
  #52 = Utf8               ()V
  #53 = NameAndType        #51:#52        // "<init>":()V
  #54 = Methodref          #50.#53        // java/util/NoSuchElementException."<init>":()V
  #55 = Utf8               ret
  #56 = Utf8               Ljava/lang/Object;
  #57 = Utf8               clear$
  #58 = Utf8               (Lscala/ref/ReferenceWrapper;)V
  #59 = Utf8               clear
  #60 = NameAndType        #59:#52        // clear:()V
  #61 = InterfaceMethodref #2.#60         // scala/ref/ReferenceWrapper.clear:()V
  #62 = Methodref          #35.#60        // java/lang/ref/Reference.clear:()V
  #63 = Utf8               enqueue$
  #64 = Utf8               (Lscala/ref/ReferenceWrapper;)Z
  #65 = Utf8               enqueue
  #66 = Utf8               ()Z
  #67 = NameAndType        #65:#66        // enqueue:()Z
  #68 = InterfaceMethodref #2.#67         // scala/ref/ReferenceWrapper.enqueue:()Z
  #69 = Methodref          #35.#67        // java/lang/ref/Reference.enqueue:()Z
  #70 = Utf8               isEnqueued$
  #71 = Utf8               isEnqueued
  #72 = NameAndType        #71:#66        // isEnqueued:()Z
  #73 = InterfaceMethodref #2.#72         // scala/ref/ReferenceWrapper.isEnqueued:()Z
  #74 = Methodref          #35.#72        // java/lang/ref/Reference.isEnqueued:()Z
  #75 = Utf8               self$
  #76 = Utf8               (Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
  #77 = Utf8               self
  #78 = NameAndType        #77:#15        // self:()Ljava/lang/ref/Reference;
  #79 = InterfaceMethodref #2.#78         // scala/ref/ReferenceWrapper.self:()Ljava/lang/ref/Reference;
  #80 = Utf8               $init$
  #81 = Utf8               Signature
  #82 = Utf8               Code
  #83 = Utf8               LineNumberTable
  #84 = Utf8               LocalVariableTable
  #85 = Utf8               MethodParameters
  #86 = Utf8               StackMapTable
  #87 = Utf8               SourceFile
  #88 = Utf8               RuntimeVisibleAnnotations
  #89 = Utf8               ScalaInlineInfo
  #90 = Utf8               ScalaSig
{
  public abstract java.lang.ref.Reference<? extends T> underlying();
    descriptor: ()Ljava/lang/ref/Reference;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #16                          // ()Ljava/lang/ref/Reference<+TT;>;

  public static scala.Option get$(scala.ref.ReferenceWrapper);
    descriptor: (Lscala/ref/ReferenceWrapper;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #23                 // InterfaceMethod get:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/ref/ReferenceWrapper;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.Option<T> get();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #31                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokeinterface #33,  1           // InterfaceMethod underlying:()Ljava/lang/ref/Reference;
         9: invokevirtual #38                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
        12: invokevirtual #42                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        15: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/ref/ReferenceWrapper;
    Signature: #25                          // ()Lscala/Option<TT;>;

  public static java.lang.Object apply$(scala.ref.ReferenceWrapper);
    descriptor: (Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #47                 // InterfaceMethod apply:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/ref/ReferenceWrapper;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default T apply();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #33,  1           // InterfaceMethod underlying:()Ljava/lang/ref/Reference;
         6: invokevirtual #38                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
         9: astore_1
        10: aload_1
        11: ifnonnull     22
        14: new           #50                 // class java/util/NoSuchElementException
        17: dup
        18: invokespecial #54                 // Method java/util/NoSuchElementException."<init>":()V
        21: athrow
        22: aload_1
        23: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 22: 0
        line 23: 10
        line 24: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      13     1   ret   Ljava/lang/Object;
            0      24     0  this   Lscala/ref/ReferenceWrapper;
    Signature: #48                          // ()TT;

  public static void clear$(scala.ref.ReferenceWrapper);
    descriptor: (Lscala/ref/ReferenceWrapper;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #61                 // InterfaceMethod clear:()V
         4: return
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/ref/ReferenceWrapper;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #33,  1           // InterfaceMethod underlying:()Ljava/lang/ref/Reference;
         6: invokevirtual #62                 // Method java/lang/ref/Reference.clear:()V
         9: return
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/ref/ReferenceWrapper;

  public static boolean enqueue$(scala.ref.ReferenceWrapper);
    descriptor: (Lscala/ref/ReferenceWrapper;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #68                 // InterfaceMethod enqueue:()Z
         4: ireturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/ref/ReferenceWrapper;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean enqueue();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #33,  1           // InterfaceMethod underlying:()Ljava/lang/ref/Reference;
         6: invokevirtual #69                 // Method java/lang/ref/Reference.enqueue:()Z
         9: ireturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/ref/ReferenceWrapper;

  public static boolean isEnqueued$(scala.ref.ReferenceWrapper);
    descriptor: (Lscala/ref/ReferenceWrapper;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #73                 // InterfaceMethod isEnqueued:()Z
         4: ireturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/ref/ReferenceWrapper;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean isEnqueued();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #33,  1           // InterfaceMethod underlying:()Ljava/lang/ref/Reference;
         6: invokevirtual #74                 // Method java/lang/ref/Reference.isEnqueued:()Z
         9: ireturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/ref/ReferenceWrapper;

  public static java.lang.ref.Reference self$(scala.ref.ReferenceWrapper);
    descriptor: (Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #79                 // InterfaceMethod self:()Ljava/lang/ref/Reference;
         4: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/ref/ReferenceWrapper;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default java.lang.ref.Reference<? extends T> self();
    descriptor: ()Ljava/lang/ref/Reference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #33,  1           // InterfaceMethod underlying:()Ljava/lang/ref/Reference;
         6: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/ref/ReferenceWrapper;
    Signature: #16                          // ()Ljava/lang/ref/Reference<+TT;>;

  public static void $init$(scala.ref.ReferenceWrapper);
    descriptor: (Lscala/ref/ReferenceWrapper;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/ref/ReferenceWrapper;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/ref/Reference<TT;>;Lscala/Proxy;
SourceFile: "ReferenceWrapper.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u000593q!\u0003\u0006\u0011\u0002\u0007\u0005q\u0002C\u0003%\u0001\u0011\u0005Q\u0005C\u0004*\u0001\t\u0007i\u0011\u0001\u0016\t\u000ba\u0002A\u0011I\u001d\t\u000bu\u0002A\u0011\u0001 \t\u000b}\u0002A\u0011A\u0013\t\u000b\u0001\u0003A\u0011A!\t\u000b\u0015\u0003A\u0011\u0001$\t\u000b\u001d\u0003A\u0011\u0001%\u0003!I+g-\u001a:f]\u000e,wK]1qa\u0016\u0014(BA\u0006\r\u0003\r\u0011XM\u001a\u0006\u0002\u001b\u0005)1oY1mC\u000e\u0001QC\u0001\t\u001c\'\u0011\u0001\u0011#F\u0011\u0011\u0005I\u0019R\"\u0001\u0007\n\u0005Qa!AB!osJ+g\rE\u0002\u0017/ei\u0011AC\u0005\u00031)\u0011\u0011BU3gKJ,gnY3\u0011\u0005iYB\u0002\u0001\u0003\u00079\u0001!)\u0019A\u000f\u0003\u0003Q\u000b\"AH\t\u0011\u0005Iy\u0012B\u0001\u0011\r\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"A\u0005\u0012\n\u0005\rb!!\u0002)s_bL\u0018A\u0002\u0013j]&$H\u0005F\u0001\'!\t\u0011r%\u0003\u0002)\u0019\t!QK\\5u\u0003))h\u000eZ3sYfLgnZ\u000b\u0002WA\u0012A&\u000e\t\u0004[M\"T\"\u0001\u0018\u000b\u0005-y#B\u0001\u00192\u0003\u0011a\u0017M\\4\u000b\u0003I\nAA[1wC&\u0011\u0001D\f\t\u00035U\"\u0011B\u000e\u0002\u0002\u0002\u0003\u0005)\u0011A\u001c\u0003\u0007}#\u0013\'\u0005\u0002\u001f3\u0005\u0019q-\u001a;\u0016\u0003i\u00022AE\u001e\u001a\u0013\taDB\u0001\u0004PaRLwN\\\u0001\u0006CB\u0004H.\u001f\u000b\u00023\u0005)1\r\\3be\u00069QM\\9vKV,G#\u0001\"\u0011\u0005I\u0019\u0015B\u0001#\r\u0005\u001d\u0011un\u001c7fC:\f!\"[:F]F,X-^3e+\u0005\u0011\u0015\u0001B:fY\u001a,\u0012!\u0013\u0019\u0003\u00152\u00032!L\u001aL!\tQB\nB\u0005N\u0011\u0005\u0005\t\u0011!B\u0001o\t\u0019q\f\n\u001a"
    )
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 00 00 0E 00 50 00 3A 01 00 27 00 24 00 00 2C
   00 2D 01 00 3B 00 34 00 00 39 00 3A 01 00 41 00
   42 00 00 3F 00 40 01 00 14 00 15 00 00 11 00 12
   01 00 47 00 42 00 00 46 00 40 01 00 4D 00 0F 00
   00 4B 00 4C 01 00 0E 00 0F 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
