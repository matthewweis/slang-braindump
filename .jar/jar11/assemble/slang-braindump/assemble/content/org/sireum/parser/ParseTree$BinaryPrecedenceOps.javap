Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/parser/ParseTree$BinaryPrecedenceOps.class
  Last modified May 29, 2022; size 1588 bytes
  SHA-256 checksum 8f8fb2659a67524b8d81f99c94d501eae81b00bbb6caacbe9325c9a48aee40a0
  Compiled from "ParseTree.scala"
public interface org.sireum.parser.ParseTree$BinaryPrecedenceOps<Builder extends java.lang.Object, T1 extends java.lang.Object, T2 extends java.lang.Object> extends org.sireum.Immutable
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/sireum/parser/ParseTree$BinaryPrecedenceOps
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 12, attributes: 5
Constant pool:
   #1 = Utf8               org/sireum/parser/ParseTree$BinaryPrecedenceOps
   #2 = Class              #1             // org/sireum/parser/ParseTree$BinaryPrecedenceOps
   #3 = Utf8               <Builder:Ljava/lang/Object;T1:Ljava/lang/Object;T2:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Immutable;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               org/sireum/Immutable
   #7 = Class              #6             // org/sireum/Immutable
   #8 = Utf8               ParseTree.scala
   #9 = Utf8               org/sireum/parser/ParseTree
  #10 = Class              #9             // org/sireum/parser/ParseTree
  #11 = Utf8               BinaryPrecedenceOps
  #12 = Utf8               messageKind
  #13 = Utf8               ()Ljava/lang/String;
  #14 = Utf8               isBinary
  #15 = Utf8               (Ljava/lang/Object;)Z
  #16 = Utf8               (TT2;)Z
  #17 = Utf8               t
  #18 = Utf8               isRightAssoc
  #19 = Utf8               isHigherPrecedence
  #20 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #21 = Utf8               n1
  #22 = Utf8               n2
  #23 = Utf8               lowestPrecedence
  #24 = Utf8               ()Lorg/sireum/Z;
  #25 = Utf8               shouldParenthesizeOperands
  #26 = Utf8               precedence
  #27 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #28 = Utf8               (TT2;)Lorg/sireum/Option<Lorg/sireum/Z;>;
  #29 = Utf8               posOpt
  #30 = Utf8               (TT2;)Lorg/sireum/Option<Lorg/sireum/message/Position;>;
  #31 = Utf8               parenthesize
  #32 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #33 = Utf8               (TBuilder;TT2;)TT2;
  #34 = Utf8               builder
  #35 = Utf8               binary
  #36 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #37 = Utf8               (TBuilder;TT2;TT2;TT2;)TT2;
  #38 = Utf8               left
  #39 = Utf8               op
  #40 = Utf8               right
  #41 = Utf8               transform
  #42 = Utf8               (TBuilder;TT1;)TT2;
  #43 = Utf8               tree
  #44 = Utf8               toString
  #45 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #46 = Utf8               (TT2;)Ljava/lang/String;
  #47 = Utf8               Signature
  #48 = Utf8               MethodParameters
  #49 = Utf8               InnerClasses
  #50 = Utf8               SourceFile
  #51 = Utf8               ScalaInlineInfo
  #52 = Utf8               Scala
{
  public abstract java.lang.String messageKind();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isBinary(T2);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #16                          // (TT2;)Z
    MethodParameters:
      Name                           Flags
      t                              final

  public abstract boolean isRightAssoc(T2);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #16                          // (TT2;)Z
    MethodParameters:
      Name                           Flags
      t                              final

  public abstract boolean isHigherPrecedence(org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      n1                             final
      n2                             final

  public abstract org.sireum.Z lowestPrecedence();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean shouldParenthesizeOperands(T2);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #16                          // (TT2;)Z
    MethodParameters:
      Name                           Flags
      t                              final

  public abstract org.sireum.Option<org.sireum.Z> precedence(T2);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #28                          // (TT2;)Lorg/sireum/Option<Lorg/sireum/Z;>;
    MethodParameters:
      Name                           Flags
      t                              final

  public abstract org.sireum.Option<org.sireum.message.Position> posOpt(T2);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #30                          // (TT2;)Lorg/sireum/Option<Lorg/sireum/message/Position;>;
    MethodParameters:
      Name                           Flags
      t                              final

  public abstract T2 parenthesize(Builder, T2);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #33                          // (TBuilder;TT2;)TT2;
    MethodParameters:
      Name                           Flags
      builder                        final
      t                              final

  public abstract T2 binary(Builder, T2, T2, T2);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #37                          // (TBuilder;TT2;TT2;TT2;)TT2;
    MethodParameters:
      Name                           Flags
      builder                        final
      left                           final
      op                             final
      right                          final

  public abstract T2 transform(Builder, T1);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #42                          // (TBuilder;TT1;)TT2;
    MethodParameters:
      Name                           Flags
      builder                        final
      tree                           final

  public abstract java.lang.String toString(T2);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #46                          // (TT2;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      t                              final
}
InnerClasses:
  public static #11= #2 of #10;           // BinaryPrecedenceOps=class org/sireum/parser/ParseTree$BinaryPrecedenceOps of class org/sireum/parser/ParseTree
Signature: #3                           // <Builder:Ljava/lang/Object;T1:Ljava/lang/Object;T2:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Immutable;
SourceFile: "ParseTree.scala"
  ScalaInlineInfo: length = 0x40 (unknown attribute)
   01 00 00 0C 00 23 00 24 00 00 0E 00 0F 00 00 13
   00 14 00 00 12 00 0F 00 00 17 00 18 00 00 0C 00
   0D 00 00 1F 00 20 00 00 1D 00 1B 00 00 1A 00 1B
   00 00 19 00 0F 00 00 2C 00 2D 00 00 29 00 20 00

  Scala: length = 0x0 (unknown attribute)

