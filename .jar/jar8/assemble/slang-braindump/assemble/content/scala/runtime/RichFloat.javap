Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/runtime/RichFloat.class
  Last modified May 29, 2022; size 14112 bytes
  SHA-256 checksum 68796341d79a8aee335b10ca7ccc5923ce2993f89930f03d3d0d261e3744e494
  Compiled from "RichFloat.scala"
public final class scala.runtime.RichFloat extends java.lang.Object implements scala.runtime.FractionalProxy<java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/runtime/RichFloat
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 82, attributes: 6
Constant pool:
    #1 = Utf8               scala/runtime/RichFloat
    #2 = Class              #1            // scala/runtime/RichFloat
    #3 = Utf8               Ljava/lang/Object;Lscala/runtime/FractionalProxy<Ljava/lang/Object;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/runtime/FractionalProxy
    #7 = Class              #6            // scala/runtime/FractionalProxy
    #8 = Utf8               RichFloat.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\t=b\u0001B!C\u0005\u001dC\u0001b\u0015\u0001\u0003\u0006\u0004%\t\u0001\u0016\u0005\t+\u0002\u0011\t\u0011)A\u0005!\")a\u000b\u0001C\u0001/\")!\f\u0001C\t7\")1\r\u0001C\tI\")\u0001\u000e\u0001C!S\")Q\u000e\u0001C!)\")a\u000e\u0001C!_\")1\u000f\u0001C!i\")\u0001\u0010\u0001C!s\")Q\u0010\u0001C!}\"9\u0011Q\u0001\u0001\u0005B\u0005\u001d\u0001bBA\b\u0001\u0011\u0005\u0013q\u0001\u0005\b\u0003#\u0001A\u0011IA\u0004\u0011\u001d\t\u0019\u0002\u0001C!\u0003\u000fAq!!\u0006\u0001\t\u0003\n9\u0001C\u0004\u0002\u0018\u0001!\t!a\u0002\t\u000f\u0005e\u0001\u0001\"\u0001\u0002\b!9\u00111\u0004\u0001\u0005\u0002\u0005\u001d\u0001bBA\u000f\u0001\u0011\u0005\u0011q\u0001\u0005\b\u0003?\u0001A\u0011AA\u0004\u0011\u0019\t\t\u0003\u0001C!)\"9\u00111\u0005\u0001\u0005B\u0005\u0015\u0002bBA\u0016\u0001\u0011\u0005\u0013Q\u0006\u0005\u0007\u0003c\u0001A\u0011\t;\t\r\u0005\u001d\u0003\u0001\"\u0001u\u0011\u0019\tI\u0005\u0001C\u0001)\"1\u00111\n\u0001\u0005\u0002QCa!!\u0014\u0001\t\u0003!\u0006BBA(\u0001\u0011\u0005A\u000bC\u0005\u0002R\u0001\t\t\u0011\"\u0011\u0002T!I\u0011Q\u000b\u0001\u0002\u0002\u0013\u0005\u0013qK\u0004\n\u0003G\u0012\u0015\u0011!E\u0001\u0003K2\u0001\"\u0011\"\u0002\u0002#\u0005\u0011q\r\u0005\u0007-\n\"\t!a\u001c\t\u000f\u0005E$\u0005\"\u0002\u0002t!9\u0011\u0011\u0010\u0012\u0005\u0006\u0005m\u0004bBA@E\u0011\u0015\u0011\u0011\u0011\u0005\b\u0003\u000b\u0013CQAAD\u0011\u001d\tYI\tC\u0003\u0003\u001bCq!!%#\t\u000b\t\u0019\nC\u0004\u0002\u0018\n\")!!\'\t\u000f\u0005u%\u0005\"\u0002\u0002 \"9\u00111\u0015\u0012\u0005\u0006\u0005\u0015\u0006bBAUE\u0011\u0015\u00111\u0016\u0005\b\u0003_\u0013CQAAY\u0011\u001d\t)L\tC\u0003\u0003oCq!a/#\t\u000b\ti\fC\u0004\u0002B\n\")!a1\t\u000f\u0005\u001d\'\u0005\"\u0002\u0002J\"9\u0011Q\u001a\u0012\u0005\u0006\u0005=\u0007bBAjE\u0011\u0015\u0011Q\u001b\u0005\b\u00033\u0014CQAAn\u0011\u001d\tyN\tC\u0003\u0003CDq!!:#\t\u000b\t9\u000fC\u0004\u0002p\n\")!!=\t\u000f\u0005e(\u0005\"\u0002\u0002|\"9!\u0011\u0001\u0012\u0005\u0006\t\r\u0001b\u0002B\u0004E\u0011\u0015!\u0011\u0002\u0005\b\u0005\u001b\u0011CQ\u0001B\b\u0011\u001d\u0011\u0019B\tC\u0003\u0005+AqA!\u0007#\t\u000b\u0011Y\u0002C\u0005\u0003 \t\n\t\u0011\"\u0002\u0003\"!I!Q\u0005\u0012\u0002\u0002\u0013\u0015!q\u0005\u0002\n%&\u001c\u0007N\u00127pCRT!a\u0011#\u0002\u000fI,h\u000e^5nK*\tQ)A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001AE\n\u0005\u0002J\u00156\tA)\u0003\u0002L\t\n1\u0011I\\=WC2\u00042!\u0014(Q\u001b\u0005\u0011\u0015BA(C\u0005=1%/Y2uS>t\u0017\r\u001c)s_bL\bCA%R\u0013\t\u0011FIA\u0003GY>\fG/\u0001\u0003tK24W#\u0001)\u0002\u000bM,GN\u001a\u0011\u0002\rqJg.\u001b;?)\tA\u0016\f\u0005\u0002N\u0001!)1k\u0001a\u0001!\u0006\u0019a.^7\u0016\u0003q\u00032!\u00181Q\u001d\tIe,\u0003\u0002`\t\u00069\u0001/Y2lC\u001e,\u0017BA1c\u0005)1%/Y2uS>t\u0017\r\u001c\u0006\u0003?\u0012\u000b1a\u001c:e+\u0005)\u0007cA/g!&\u0011qM\u0019\u0002\t\u001fJ$WM]5oO\u0006YAm\\;cY\u00164\u0016\r\\;f+\u0005Q\u0007CA%l\u0013\taGI\u0001\u0004E_V\u0014G.Z\u0001\u000bM2|\u0017\r\u001e,bYV,\u0017!\u00037p]\u001e4\u0016\r\\;f+\u0005\u0001\bCA%r\u0013\t\u0011HI\u0001\u0003M_:<\u0017\u0001C5oiZ\u000bG.^3\u0016\u0003U\u0004\"!\u0013<\n\u0005]$%aA%oi\u0006I!-\u001f;f-\u0006dW/Z\u000b\u0002uB\u0011\u0011j_\u0005\u0003y\u0012\u0013AAQ=uK\u0006Q1\u000f[8siZ\u000bG.^3\u0016\u0003}\u00042!SA\u0001\u0013\r\t\u0019\u0001\u0012\u0002\u0006\'\"|\'\u000f^\u0001\bSN<\u0006n\u001c7f+\t\tI\u0001E\u0002J\u0003\u0017I1!!\u0004E\u0005\u001d\u0011un\u001c7fC:\f1\"[:WC2LGMQ=uK\u0006a\u0011n\u001d,bY&$7\u000b[8si\u0006Y\u0011n\u001d,bY&$7\t[1s\u0003)I7OV1mS\u0012Le\u000e^\u0001\u0006SNt\u0015MT\u0001\u000bSNLeNZ5oSRL\u0018\u0001C5t\r&t\u0017\u000e^3\u0002\u001b%\u001c\bk\\:J]\u001aLg.\u001b;z\u00035I7OT3h\u0013:4\u0017N\\5us\u0006\u0019\u0011MY:\u0002\u00075\f\u0007\u0010F\u0002Q\u0003OAa!!\u000b\u0018\u0001\u0004\u0001\u0016\u0001\u0002;iCR\f1!\\5o)\r\u0001\u0016q\u0006\u0005\u0007\u0003SA\u0002\u0019\u0001)\u0002\rMLwM\\;nQ-I\u0012QGA\u001e\u0003{\t\t%a\u0011\u0011\u0007%\u000b9$C\u0002\u0002:\u0011\u0013!\u0002Z3qe\u0016\u001c\u0017\r^3e\u0003\u001diWm]:bO\u0016\f#!a\u0010\u0002\tNLwM\\;nA\u0011|Wm\u001d\u0011o_R\u0004\u0003.\u00198eY\u0016\u0004S\u0006\r\u00181M\u0002z\'\u000f\t$m_\u0006$hFT1Ow\u0001*8/\u001a\u0011ag&<g\u000e\u0019\u0011nKRDw\u000e\u001a\u0011j]N$X-\u00193\u0002\u000bMLgnY3\"\u0005\u0005\u0015\u0013A\u0002\u001a/cMr\u0003\'A\u0003s_VtG-\u0001\u0003dK&d\u0017!\u00024m_>\u0014\u0018!\u0003;p%\u0006$\u0017.\u00198t\u0003%!x\u000eR3he\u0016,7/\u0001\u0005iCND7i\u001c3f)\u0005)\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\n\u0005e\u0003\"CA.A\u0005\u0005\t\u0019AA/\u0003\rAH%\r\t\u0004\u0013\u0006}\u0013bAA1\t\n\u0019\u0011I\\=\u0002\u0013IK7\r\u001b$m_\u0006$\bCA\'#\'\r\u0011\u0013\u0011\u000e\t\u0004\u0013\u0006-\u0014bAA7\t\n1\u0011I\\=SK\u001a$\"!!\u001a\u0002\u001b9,X\u000eJ3yi\u0016t7/[8o)\ra\u0016Q\u000f\u0005\u0007\u0003o\"\u0003\u0019\u0001-\u0002\u000b\u0011\"\b.[:\u0002\u001b=\u0014H\rJ3yi\u0016t7/[8o)\r)\u0017Q\u0010\u0005\u0007\u0003o*\u0003\u0019\u0001-\u0002+\u0011|WO\u00197f-\u0006dW/\u001a\u0013fqR,gn]5p]R\u0019!.a!\t\r\u0005]d\u00051\u0001Y\u0003Q1Gn\\1u-\u0006dW/\u001a\u0013fqR,gn]5p]R\u0019\u0001+!#\t\r\u0005]t\u00051\u0001Y\u0003MawN\\4WC2,X\rJ3yi\u0016t7/[8o)\r\u0001\u0018q\u0012\u0005\u0007\u0003oB\u0003\u0019\u0001-\u0002%%tGOV1mk\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0004k\u0006U\u0005BBA<S\u0001\u0007\u0001,A\ncsR,g+\u00197vK\u0012*\u0007\u0010^3og&|g\u000eF\u0002{\u00037Ca!a\u001e+\u0001\u0004A\u0016\u0001F:i_J$h+\u00197vK\u0012*\u0007\u0010^3og&|g\u000eF\u0002\u0000\u0003CCa!a\u001e,\u0001\u0004A\u0016!E5t/\"|G.\u001a\u0013fqR,gn]5p]R!\u0011\u0011BAT\u0011\u0019\t9\b\fa\u00011\u0006)\u0012n\u001d,bY&$\')\u001f;fI\u0015DH/\u001a8tS>tG\u0003BA\u0005\u0003[Ca!a\u001e.\u0001\u0004A\u0016AF5t-\u0006d\u0017\u000eZ*i_J$H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005%\u00111\u0017\u0005\u0007\u0003or\u0003\u0019\u0001-\u0002+%\u001ch+\u00197jI\u000eC\u0017M\u001d\u0013fqR,gn]5p]R!\u0011\u0011BA]\u0011\u0019\t9h\fa\u00011\u0006!\u0012n\u001d,bY&$\u0017J\u001c;%Kb$XM\\:j_:$B!!\u0003\u0002@\"1\u0011q\u000f\u0019A\u0002a\u000bq\"[:OC:#S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u0013\t)\r\u0003\u0004\u0002xE\u0002\r\u0001W\u0001\u0015SNLeNZ5oSRLH%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005%\u00111\u001a\u0005\u0007\u0003o\u0012\u0004\u0019\u0001-\u0002%%\u001ch)\u001b8ji\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u0013\t\t\u000e\u0003\u0004\u0002xM\u0002\r\u0001W\u0001\u0018SN\u0004vn]%oM&t\u0017\u000e^=%Kb$XM\\:j_:$B!!\u0003\u0002X\"1\u0011q\u000f\u001bA\u0002a\u000bq#[:OK\u001eLeNZ5oSRLH%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005%\u0011Q\u001c\u0005\u0007\u0003o*\u0004\u0019\u0001-\u0002\u001b\u0005\u00147\u000fJ3yi\u0016t7/[8o)\r\u0001\u00161\u001d\u0005\u0007\u0003o2\u0004\u0019\u0001-\u0002\u001b5\f\u0007\u0010J3yi\u0016t7/[8o)\u0011\tI/!<\u0015\u0007A\u000bY\u000f\u0003\u0004\u0002*]\u0002\r\u0001\u0015\u0005\u0007\u0003o:\u0004\u0019\u0001-\u0002\u001b5Lg\u000eJ3yi\u0016t7/[8o)\u0011\t\u00190a>\u0015\u0007A\u000b)\u0010\u0003\u0004\u0002*a\u0002\r\u0001\u0015\u0005\u0007\u0003oB\u0004\u0019\u0001-\u0002!MLwM\\;nI\u0015DH/\u001a8tS>tGcA;\u0002~\"1\u0011qO\u001dA\u0002aC3\"OA\u001b\u0003w\ti$!\u0011\u0002D\u0005y!o\\;oI\u0012*\u0007\u0010^3og&|g\u000eF\u0002v\u0005\u000bAa!a\u001e;\u0001\u0004A\u0016AD2fS2$S\r\u001f;f]NLwN\u001c\u000b\u0004!\n-\u0001BBA<w\u0001\u0007\u0001,A\bgY>|\'\u000fJ3yi\u0016t7/[8o)\r\u0001&\u0011\u0003\u0005\u0007\u0003ob\u0004\u0019\u0001-\u0002\'Q|\'+\u00193jC:\u001cH%\u001a=uK:\u001c\u0018n\u001c8\u0015\u0007A\u00139\u0002\u0003\u0004\u0002xu\u0002\r\u0001W\u0001\u0014i>$Um\u001a:fKN$S\r\u001f;f]NLwN\u001c\u000b\u0004!\nu\u0001BBA<}\u0001\u0007\u0001,\u0001\niCND7i\u001c3fI\u0015DH/\u001a8tS>tG\u0003BA*\u0005GAa!a\u001e@\u0001\u0004A\u0016\u0001E3rk\u0006d7\u000fJ3yi\u0016t7/[8o)\u0011\u0011IC!\f\u0015\t\u0005%!1\u0006\u0005\n\u00037\u0002\u0015\u0011!a\u0001\u0003;Ba!a\u001eA\u0001\u0004A\u0006
   #12 = Utf8               scala/math/Numeric$FloatIsFractional$
   #13 = Class              #12           // scala/math/Numeric$FloatIsFractional$
   #14 = Utf8               scala/math/Numeric
   #15 = Class              #14           // scala/math/Numeric
   #16 = Utf8               FloatIsFractional$
   #17 = Utf8               scala/math/Ordering$Float$
   #18 = Class              #17           // scala/math/Ordering$Float$
   #19 = Utf8               scala/math/Ordering
   #20 = Class              #19           // scala/math/Ordering
   #21 = Utf8               Float$
   #22 = Utf8               scala/math/Ordering$Float$TotalOrdering$
   #23 = Class              #22           // scala/math/Ordering$Float$TotalOrdering$
   #24 = Utf8               TotalOrdering$
   #25 = Utf8               self
   #26 = Utf8               F
   #27 = Utf8               equals$extension
   #28 = Utf8               (FLjava/lang/Object;)Z
   #29 = Utf8               $this
   #30 = Utf8               x$1
   #31 = Utf8               scala/runtime/RichFloat$
   #32 = Class              #31           // scala/runtime/RichFloat$
   #33 = Utf8               MODULE$
   #34 = Utf8               Lscala/runtime/RichFloat$;
   #35 = NameAndType        #33:#34       // MODULE$:Lscala/runtime/RichFloat$;
   #36 = Fieldref           #32.#35       // scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
   #37 = NameAndType        #27:#28       // equals$extension:(FLjava/lang/Object;)Z
   #38 = Methodref          #32.#37       // scala/runtime/RichFloat$.equals$extension:(FLjava/lang/Object;)Z
   #39 = Utf8               Ljava/lang/Object;
   #40 = Utf8               hashCode$extension
   #41 = Utf8               (F)I
   #42 = Utf8               java/lang/Float
   #43 = Class              #42           // java/lang/Float
   #44 = Utf8               hashCode
   #45 = NameAndType        #44:#41       // hashCode:(F)I
   #46 = Methodref          #43.#45       // java/lang/Float.hashCode:(F)I
   #47 = Utf8               toDegrees$extension
   #48 = Utf8               (F)F
   #49 = Utf8               scala/math/package$
   #50 = Class              #49           // scala/math/package$
   #51 = Utf8               Lscala/math/package$;
   #52 = NameAndType        #33:#51       // MODULE$:Lscala/math/package$;
   #53 = Fieldref           #50.#52       // scala/math/package$.MODULE$:Lscala/math/package$;
   #54 = Utf8               java/lang/Math
   #55 = Class              #54           // java/lang/Math
   #56 = Utf8               toDegrees
   #57 = Utf8               (D)D
   #58 = NameAndType        #56:#57       // toDegrees:(D)D
   #59 = Methodref          #55.#58       // java/lang/Math.toDegrees:(D)D
   #60 = Utf8               toRadians$extension
   #61 = Utf8               toRadians
   #62 = NameAndType        #61:#57       // toRadians:(D)D
   #63 = Methodref          #55.#62       // java/lang/Math.toRadians:(D)D
   #64 = Utf8               floor$extension
   #65 = Utf8               floor
   #66 = NameAndType        #65:#57       // floor:(D)D
   #67 = Methodref          #55.#66       // java/lang/Math.floor:(D)D
   #68 = Utf8               ceil$extension
   #69 = Utf8               ceil
   #70 = NameAndType        #69:#57       // ceil:(D)D
   #71 = Methodref          #55.#70       // java/lang/Math.ceil:(D)D
   #72 = Utf8               round$extension
   #73 = Utf8               round
   #74 = NameAndType        #73:#41       // round:(F)I
   #75 = Methodref          #55.#74       // java/lang/Math.round:(F)I
   #76 = Utf8               signum$extension
   #77 = Utf8               signum
   #78 = NameAndType        #77:#48       // signum:(F)F
   #79 = Methodref          #55.#78       // java/lang/Math.signum:(F)F
   #80 = Utf8               min$extension
   #81 = Utf8               (FF)F
   #82 = Utf8               that
   #83 = Utf8               min
   #84 = NameAndType        #83:#81       // min:(FF)F
   #85 = Methodref          #55.#84       // java/lang/Math.min:(FF)F
   #86 = Utf8               max$extension
   #87 = Utf8               max
   #88 = NameAndType        #87:#81       // max:(FF)F
   #89 = Methodref          #55.#88       // java/lang/Math.max:(FF)F
   #90 = Utf8               abs$extension
   #91 = Utf8               abs
   #92 = NameAndType        #91:#48       // abs:(F)F
   #93 = Methodref          #55.#92       // java/lang/Math.abs:(F)F
   #94 = Utf8               isNegInfinity$extension
   #95 = Utf8               (F)Z
   #96 = NameAndType        #94:#95       // isNegInfinity$extension:(F)Z
   #97 = Methodref          #32.#96       // scala/runtime/RichFloat$.isNegInfinity$extension:(F)Z
   #98 = Utf8               isPosInfinity$extension
   #99 = NameAndType        #98:#95       // isPosInfinity$extension:(F)Z
  #100 = Methodref          #32.#99       // scala/runtime/RichFloat$.isPosInfinity$extension:(F)Z
  #101 = Utf8               isFinite$extension
  #102 = Utf8               isFinite
  #103 = NameAndType        #102:#95      // isFinite:(F)Z
  #104 = Methodref          #43.#103      // java/lang/Float.isFinite:(F)Z
  #105 = Utf8               isInfinity$extension
  #106 = Utf8               isInfinite
  #107 = NameAndType        #106:#95      // isInfinite:(F)Z
  #108 = Methodref          #43.#107      // java/lang/Float.isInfinite:(F)Z
  #109 = Utf8               isNaN$extension
  #110 = Utf8               isNaN
  #111 = NameAndType        #110:#95      // isNaN:(F)Z
  #112 = Methodref          #43.#111      // java/lang/Float.isNaN:(F)Z
  #113 = Utf8               isValidInt$extension
  #114 = NameAndType        #113:#95      // isValidInt$extension:(F)Z
  #115 = Methodref          #32.#114      // scala/runtime/RichFloat$.isValidInt$extension:(F)Z
  #116 = Utf8               isValidChar$extension
  #117 = NameAndType        #116:#95      // isValidChar$extension:(F)Z
  #118 = Methodref          #32.#117      // scala/runtime/RichFloat$.isValidChar$extension:(F)Z
  #119 = Utf8               isValidShort$extension
  #120 = NameAndType        #119:#95      // isValidShort$extension:(F)Z
  #121 = Methodref          #32.#120      // scala/runtime/RichFloat$.isValidShort$extension:(F)Z
  #122 = Utf8               isValidByte$extension
  #123 = NameAndType        #122:#95      // isValidByte$extension:(F)Z
  #124 = Methodref          #32.#123      // scala/runtime/RichFloat$.isValidByte$extension:(F)Z
  #125 = Utf8               isWhole$extension
  #126 = NameAndType        #125:#95      // isWhole$extension:(F)Z
  #127 = Methodref          #32.#126      // scala/runtime/RichFloat$.isWhole$extension:(F)Z
  #128 = Utf8               shortValue$extension
  #129 = Utf8               (F)S
  #130 = Utf8               byteValue$extension
  #131 = Utf8               (F)B
  #132 = Utf8               intValue$extension
  #133 = Utf8               longValue$extension
  #134 = Utf8               (F)J
  #135 = Utf8               floatValue$extension
  #136 = Utf8               doubleValue$extension
  #137 = Utf8               (F)D
  #138 = Utf8               ord$extension
  #139 = Utf8               (F)Lscala/math/Ordering;
  #140 = Utf8               (F)Lscala/math/Ordering<Ljava/lang/Object;>;
  #141 = Utf8               Lscala/math/Ordering$Float$TotalOrdering$;
  #142 = NameAndType        #33:#141      // MODULE$:Lscala/math/Ordering$Float$TotalOrdering$;
  #143 = Fieldref           #23.#142      // scala/math/Ordering$Float$TotalOrdering$.MODULE$:Lscala/math/Ordering$Float$TotalOrdering$;
  #144 = Utf8               num$extension
  #145 = Utf8               (F)Lscala/math/Fractional;
  #146 = Utf8               (F)Lscala/math/Fractional<Ljava/lang/Object;>;
  #147 = Utf8               Lscala/math/Numeric$FloatIsFractional$;
  #148 = NameAndType        #33:#147      // MODULE$:Lscala/math/Numeric$FloatIsFractional$;
  #149 = Fieldref           #13.#148      // scala/math/Numeric$FloatIsFractional$.MODULE$:Lscala/math/Numeric$FloatIsFractional$;
  #150 = Utf8               sign
  #151 = Utf8               ()Ljava/lang/Object;
  #152 = Utf8               scala/runtime/ScalaNumberProxy
  #153 = Class              #152          // scala/runtime/ScalaNumberProxy
  #154 = Utf8               sign$
  #155 = Utf8               (Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
  #156 = NameAndType        #154:#155     // sign$:(Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
  #157 = InterfaceMethodref #153.#156     // scala/runtime/ScalaNumberProxy.sign$:(Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
  #158 = Utf8               this
  #159 = Utf8               Lscala/runtime/RichFloat;
  #160 = Utf8               compare
  #161 = Utf8               (Ljava/lang/Object;)I
  #162 = Utf8               y
  #163 = Utf8               scala/runtime/OrderedProxy
  #164 = Class              #163          // scala/runtime/OrderedProxy
  #165 = Utf8               compare$
  #166 = Utf8               (Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
  #167 = NameAndType        #165:#166     // compare$:(Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
  #168 = InterfaceMethodref #164.#167     // scala/runtime/OrderedProxy.compare$:(Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
  #169 = Utf8               $less
  #170 = Utf8               (Ljava/lang/Object;)Z
  #171 = Utf8               scala/math/Ordered
  #172 = Class              #171          // scala/math/Ordered
  #173 = Utf8               $less$
  #174 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)Z
  #175 = NameAndType        #173:#174     // $less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #176 = InterfaceMethodref #172.#175     // scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #177 = Utf8               $greater
  #178 = Utf8               $greater$
  #179 = NameAndType        #178:#174     // $greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #180 = InterfaceMethodref #172.#179     // scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #181 = Utf8               $less$eq
  #182 = Utf8               $less$eq$
  #183 = NameAndType        #182:#174     // $less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #184 = InterfaceMethodref #172.#183     // scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #185 = Utf8               $greater$eq
  #186 = Utf8               $greater$eq$
  #187 = NameAndType        #186:#174     // $greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #188 = InterfaceMethodref #172.#187     // scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #189 = Utf8               compareTo
  #190 = Utf8               compareTo$
  #191 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)I
  #192 = NameAndType        #190:#191     // compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #193 = InterfaceMethodref #172.#192     // scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #194 = Utf8               toString
  #195 = Utf8               ()Ljava/lang/String;
  #196 = Utf8               scala/Proxy
  #197 = Class              #196          // scala/Proxy
  #198 = Utf8               toString$
  #199 = Utf8               (Lscala/Proxy;)Ljava/lang/String;
  #200 = NameAndType        #198:#199     // toString$:(Lscala/Proxy;)Ljava/lang/String;
  #201 = InterfaceMethodref #197.#200     // scala/Proxy.toString$:(Lscala/Proxy;)Ljava/lang/String;
  #202 = Utf8               toChar
  #203 = Utf8               ()C
  #204 = Utf8               scala/math/ScalaNumericAnyConversions
  #205 = Class              #204          // scala/math/ScalaNumericAnyConversions
  #206 = Utf8               toChar$
  #207 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)C
  #208 = NameAndType        #206:#207     // toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
  #209 = InterfaceMethodref #205.#208     // scala/math/ScalaNumericAnyConversions.toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
  #210 = Utf8               toByte
  #211 = Utf8               ()B
  #212 = Utf8               toByte$
  #213 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)B
  #214 = NameAndType        #212:#213     // toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
  #215 = InterfaceMethodref #205.#214     // scala/math/ScalaNumericAnyConversions.toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
  #216 = Utf8               toShort
  #217 = Utf8               ()S
  #218 = Utf8               toShort$
  #219 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)S
  #220 = NameAndType        #218:#219     // toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
  #221 = InterfaceMethodref #205.#220     // scala/math/ScalaNumericAnyConversions.toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
  #222 = Utf8               toInt
  #223 = Utf8               ()I
  #224 = Utf8               toInt$
  #225 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)I
  #226 = NameAndType        #224:#225     // toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
  #227 = InterfaceMethodref #205.#226     // scala/math/ScalaNumericAnyConversions.toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
  #228 = Utf8               toLong
  #229 = Utf8               ()J
  #230 = Utf8               toLong$
  #231 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)J
  #232 = NameAndType        #230:#231     // toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
  #233 = InterfaceMethodref #205.#232     // scala/math/ScalaNumericAnyConversions.toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
  #234 = Utf8               toFloat
  #235 = Utf8               ()F
  #236 = Utf8               toFloat$
  #237 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)F
  #238 = NameAndType        #236:#237     // toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
  #239 = InterfaceMethodref #205.#238     // scala/math/ScalaNumericAnyConversions.toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
  #240 = Utf8               toDouble
  #241 = Utf8               ()D
  #242 = Utf8               toDouble$
  #243 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)D
  #244 = NameAndType        #242:#243     // toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
  #245 = InterfaceMethodref #205.#244     // scala/math/ScalaNumericAnyConversions.toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
  #246 = Utf8               unifiedPrimitiveHashcode
  #247 = Utf8               unifiedPrimitiveHashcode$
  #248 = NameAndType        #247:#225     // unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
  #249 = InterfaceMethodref #205.#248     // scala/math/ScalaNumericAnyConversions.unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
  #250 = Utf8               unifiedPrimitiveEquals
  #251 = Utf8               x
  #252 = Utf8               unifiedPrimitiveEquals$
  #253 = Utf8               (Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #254 = NameAndType        #252:#253     // unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #255 = InterfaceMethodref #205.#254     // scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #256 = NameAndType        #25:#26       // self:F
  #257 = Fieldref           #2.#256       // scala/runtime/RichFloat.self:F
  #258 = Utf8               num
  #259 = Utf8               ()Lscala/math/Fractional;
  #260 = Utf8               ()Lscala/math/Fractional<Ljava/lang/Object;>;
  #261 = NameAndType        #25:#235      // self:()F
  #262 = Methodref          #2.#261       // scala/runtime/RichFloat.self:()F
  #263 = Utf8               ord
  #264 = Utf8               ()Lscala/math/Ordering;
  #265 = Utf8               ()Lscala/math/Ordering<Ljava/lang/Object;>;
  #266 = Utf8               doubleValue
  #267 = Utf8               floatValue
  #268 = Utf8               longValue
  #269 = Utf8               intValue
  #270 = Utf8               byteValue
  #271 = Utf8               shortValue
  #272 = Utf8               isWhole
  #273 = Utf8               ()Z
  #274 = Utf8               isValidByte
  #275 = Utf8               isValidShort
  #276 = Utf8               isValidChar
  #277 = Utf8               isValidInt
  #278 = Utf8               isInfinity
  #279 = Utf8               isPosInfinity
  #280 = Utf8               isNegInfinity
  #281 = Utf8               abs$extension_$this
  #282 = Utf8               max$extension_$this
  #283 = Utf8               min$extension_$this
  #284 = Utf8               signum$extension_$this
  #285 = Utf8               round$extension_$this
  #286 = Utf8               ceil$extension_$this
  #287 = Utf8               floor$extension_$this
  #288 = Utf8               toRadians$extension_$this
  #289 = Utf8               toDegrees$extension_$this
  #290 = Utf8               equals
  #291 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #292 = Utf8               scala/runtime/BoxesRunTime
  #293 = Class              #292          // scala/runtime/BoxesRunTime
  #294 = Utf8               unboxToFloat
  #295 = Utf8               (Ljava/lang/Object;)F
  #296 = NameAndType        #294:#295     // unboxToFloat:(Ljava/lang/Object;)F
  #297 = Methodref          #293.#296     // scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
  #298 = Utf8               valueOf
  #299 = Utf8               (F)Ljava/lang/Float;
  #300 = NameAndType        #298:#299     // valueOf:(F)Ljava/lang/Float;
  #301 = Methodref          #43.#300      // java/lang/Float.valueOf:(F)Ljava/lang/Float;
  #302 = Utf8               min$extension_that
  #303 = Utf8               max$extension_that
  #304 = Utf8               ()Lscala/math/Numeric;
  #305 = Utf8               boxToFloat
  #306 = NameAndType        #305:#299     // boxToFloat:(F)Ljava/lang/Float;
  #307 = Methodref          #293.#306     // scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
  #308 = Utf8               <init>
  #309 = Utf8               (F)V
  #310 = Utf8               ()V
  #311 = NameAndType        #308:#310     // "<init>":()V
  #312 = Methodref          #5.#311       // java/lang/Object."<init>":()V
  #313 = Utf8               Code
  #314 = Utf8               LocalVariableTable
  #315 = Utf8               MethodParameters
  #316 = Utf8               LineNumberTable
  #317 = Utf8               Deprecated
  #318 = Utf8               Signature
  #319 = Utf8               InnerClasses
  #320 = Utf8               SourceFile
  #321 = Utf8               RuntimeVisibleAnnotations
  #322 = Utf8               ScalaInlineInfo
  #323 = Utf8               ScalaSig
{
  private final float self;
    descriptor: F
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static boolean equals$extension(float, java.lang.Object);
    descriptor: (FLjava/lang/Object;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: aload_1
         5: invokevirtual #38                 // Method scala/runtime/RichFloat$.equals$extension:(FLjava/lang/Object;)Z
         8: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   F
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public static int hashCode$extension(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: invokestatic  #46                 // Method java/lang/Float.hashCode:(F)I
         8: ireturn
      LineNumberTable:
        line 16: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static float toDegrees$extension(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: f2d
        10: invokestatic  #59                 // Method java/lang/Math.toDegrees:(D)D
        13: d2f
        14: freturn
      LineNumberTable:
        line 70: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static float toRadians$extension(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: f2d
        10: invokestatic  #63                 // Method java/lang/Math.toRadians:(D)D
        13: d2f
        14: freturn
      LineNumberTable:
        line 63: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static float floor$extension(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: f2d
        10: invokestatic  #67                 // Method java/lang/Math.floor:(D)D
        13: d2f
        14: freturn
      LineNumberTable:
        line 56: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static float ceil$extension(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: f2d
        10: invokestatic  #71                 // Method java/lang/Math.ceil:(D)D
        13: d2f
        14: freturn
      LineNumberTable:
        line 55: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static int round$extension(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: invokestatic  #75                 // Method java/lang/Math.round:(F)I
        12: ireturn
      LineNumberTable:
        line 54: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static int signum$extension(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: invokestatic  #79                 // Method java/lang/Math.signum:(F)F
        12: f2i
        13: ireturn
      LineNumberTable:
        line 52: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   F
    Deprecated: true
    MethodParameters:
      Name                           Flags
      $this                          final

  public static float min$extension(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: fload_1
        10: invokestatic  #85                 // Method java/lang/Math.min:(FF)F
        13: freturn
      LineNumberTable:
        line 50: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   F
            0      14     1  that   F
    MethodParameters:
      Name                           Flags
      $this                          final
      that                           final

  public static float max$extension(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: fload_1
        10: invokestatic  #89                 // Method java/lang/Math.max:(FF)F
        13: freturn
      LineNumberTable:
        line 49: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   F
            0      14     1  that   F
    MethodParameters:
      Name                           Flags
      $this                          final
      that                           final

  public static float abs$extension(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         7: pop
         8: fload_0
         9: invokestatic  #93                 // Method java/lang/Math.abs:(F)F
        12: freturn
      LineNumberTable:
        line 48: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isNegInfinity$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: invokevirtual #97                 // Method scala/runtime/RichFloat$.isNegInfinity$extension:(F)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isPosInfinity$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: invokevirtual #100                // Method scala/runtime/RichFloat$.isPosInfinity$extension:(F)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isFinite$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: invokestatic  #104                // Method java/lang/Float.isFinite:(F)Z
         8: ireturn
      LineNumberTable:
        line 41: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isInfinity$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: invokestatic  #108                // Method java/lang/Float.isInfinite:(F)Z
         8: ireturn
      LineNumberTable:
        line 40: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isNaN$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: invokestatic  #112                // Method java/lang/Float.isNaN:(F)Z
         8: ireturn
      LineNumberTable:
        line 39: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isValidInt$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: invokevirtual #115                // Method scala/runtime/RichFloat$.isValidInt$extension:(F)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isValidChar$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: invokevirtual #118                // Method scala/runtime/RichFloat$.isValidChar$extension:(F)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isValidShort$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: invokevirtual #121                // Method scala/runtime/RichFloat$.isValidShort$extension:(F)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isValidByte$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: invokevirtual #124                // Method scala/runtime/RichFloat$.isValidByte$extension:(F)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static boolean isWhole$extension(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: fload_0
         4: invokevirtual #127                // Method scala/runtime/RichFloat$.isWhole$extension:(F)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static short shortValue$extension(float);
    descriptor: (F)S
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: f2i
         6: i2s
         7: ireturn
      LineNumberTable:
        line 25: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static byte byteValue$extension(float);
    descriptor: (F)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: f2i
         6: i2b
         7: ireturn
      LineNumberTable:
        line 24: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static int intValue$extension(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: f2i
         6: ireturn
      LineNumberTable:
        line 23: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static long longValue$extension(float);
    descriptor: (F)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: f2l
         6: lreturn
      LineNumberTable:
        line 22: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static float floatValue$extension(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: freturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static double doubleValue$extension(float);
    descriptor: (F)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: fload_0
         5: f2d
         6: dreturn
      LineNumberTable:
        line 20: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   F
    MethodParameters:
      Name                           Flags
      $this                          final

  public static scala.math.Ordering<java.lang.Object> ord$extension(float);
    descriptor: (F)Lscala/math/Ordering;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #143                // Field scala/math/Ordering$Float$TotalOrdering$.MODULE$:Lscala/math/Ordering$Float$TotalOrdering$;
         7: areturn
      LineNumberTable:
        line 18: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    Signature: #140                         // (F)Lscala/math/Ordering<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static scala.math.Fractional<java.lang.Object> num$extension(float);
    descriptor: (F)Lscala/math/Fractional;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: getstatic     #149                // Field scala/math/Numeric$FloatIsFractional$.MODULE$:Lscala/math/Numeric$FloatIsFractional$;
         7: areturn
      LineNumberTable:
        line 17: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   F
    Signature: #146                         // (F)Lscala/math/Fractional<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public java.lang.Object sign();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #157                // InterfaceMethod scala/runtime/ScalaNumberProxy.sign$:(Lscala/runtime/ScalaNumberProxy;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public int compare(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #168                // InterfaceMethod scala/runtime/OrderedProxy.compare$:(Lscala/runtime/OrderedProxy;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichFloat;
            0       6     1     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      y                              final

  public boolean $less(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #176                // InterfaceMethod scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichFloat;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #180                // InterfaceMethod scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichFloat;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $less$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #184                // InterfaceMethod scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichFloat;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #188                // InterfaceMethod scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichFloat;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #193                // InterfaceMethod scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichFloat;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #201                // InterfaceMethod scala/Proxy.toString$:(Lscala/Proxy;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public char toChar();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #209                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public byte toByte();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #215                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public short toShort();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #221                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public int toInt();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #227                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public long toLong();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #233                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
         4: lreturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public float toFloat();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #239                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
         4: freturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public double toDouble();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #245                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
         4: dreturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public int unifiedPrimitiveHashcode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #249                // InterfaceMethod scala/math/ScalaNumericAnyConversions.unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public boolean unifiedPrimitiveEquals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #255                // InterfaceMethod scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/RichFloat;
            0       6     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public float self();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #257                // Field self:F
         4: freturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichFloat;

  public scala.math.Fractional<java.lang.Object> num();
    descriptor: ()Lscala/math/Fractional;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: pop
         9: getstatic     #149                // Field scala/math/Numeric$FloatIsFractional$.MODULE$:Lscala/math/Numeric$FloatIsFractional$;
        12: areturn
      LineNumberTable:
        line 17: 0
        line 17: 9
        line 17: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichFloat;
    Signature: #260                         // ()Lscala/math/Fractional<Ljava/lang/Object;>;

  public scala.math.Ordering<java.lang.Object> ord();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: pop
         9: getstatic     #143                // Field scala/math/Ordering$Float$TotalOrdering$.MODULE$:Lscala/math/Ordering$Float$TotalOrdering$;
        12: areturn
      LineNumberTable:
        line 18: 0
        line 18: 9
        line 18: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichFloat;
    Signature: #265                         // ()Lscala/math/Ordering<Ljava/lang/Object;>;

  public double doubleValue();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: f2d
         9: dreturn
      LineNumberTable:
        line 20: 0
        line 20: 8
        line 20: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichFloat;

  public float floatValue();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: freturn
      LineNumberTable:
        line 21: 0
        line 21: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichFloat;

  public long longValue();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: f2l
         9: lreturn
      LineNumberTable:
        line 22: 0
        line 22: 8
        line 22: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichFloat;

  public int intValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: f2i
         9: ireturn
      LineNumberTable:
        line 23: 0
        line 23: 8
        line 23: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichFloat;

  public byte byteValue();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: f2i
         9: i2b
        10: ireturn
      LineNumberTable:
        line 24: 0
        line 24: 8
        line 24: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public short shortValue();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: f2i
         9: i2s
        10: ireturn
      LineNumberTable:
        line 25: 0
        line 25: 8
        line 25: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public boolean isWhole();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: invokevirtual #127                // Method scala/runtime/RichFloat$.isWhole$extension:(F)Z
        10: ireturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public boolean isValidByte();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: invokevirtual #124                // Method scala/runtime/RichFloat$.isValidByte$extension:(F)Z
        10: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public boolean isValidShort();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: invokevirtual #121                // Method scala/runtime/RichFloat$.isValidShort$extension:(F)Z
        10: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public boolean isValidChar();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: invokevirtual #118                // Method scala/runtime/RichFloat$.isValidChar$extension:(F)Z
        10: ireturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public boolean isValidInt();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: invokevirtual #115                // Method scala/runtime/RichFloat$.isValidInt$extension:(F)Z
        10: ireturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public boolean isNaN();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: invokestatic  #112                // Method java/lang/Float.isNaN:(F)Z
        11: ireturn
      LineNumberTable:
        line 39: 0
        line 39: 8
        line 39: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichFloat;

  public boolean isInfinity();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: invokestatic  #108                // Method java/lang/Float.isInfinite:(F)Z
        11: ireturn
      LineNumberTable:
        line 40: 0
        line 40: 8
        line 40: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichFloat;

  public boolean isFinite();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: invokestatic  #104                // Method java/lang/Float.isFinite:(F)Z
        11: ireturn
      LineNumberTable:
        line 41: 0
        line 41: 8
        line 41: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichFloat;

  public boolean isPosInfinity();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: invokevirtual #100                // Method scala/runtime/RichFloat$.isPosInfinity$extension:(F)Z
        10: ireturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public boolean isNegInfinity();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: invokevirtual #97                 // Method scala/runtime/RichFloat$.isNegInfinity$extension:(F)Z
        10: ireturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/runtime/RichFloat;

  public float abs();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: invokestatic  #93                 // Method java/lang/Math.abs:(F)F
        17: freturn
      LineNumberTable:
        line 48: 0
        line 48: 9
        line 48: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/runtime/RichFloat;
            9       8     1 abs$extension_$this   F

  public float max(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_2
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_2
        14: fload_1
        15: invokestatic  #89                 // Method java/lang/Math.max:(FF)F
        18: freturn
      LineNumberTable:
        line 49: 0
        line 49: 9
        line 49: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/runtime/RichFloat;
            0      19     1  that   F
            9       9     2 max$extension_$this   F
    MethodParameters:
      Name                           Flags
      that                           final

  public float min(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_2
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_2
        14: fload_1
        15: invokestatic  #85                 // Method java/lang/Math.min:(FF)F
        18: freturn
      LineNumberTable:
        line 50: 0
        line 50: 9
        line 50: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/runtime/RichFloat;
            0      19     1  that   F
            9       9     2 min$extension_$this   F
    MethodParameters:
      Name                           Flags
      that                           final

  public int signum();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: invokestatic  #79                 // Method java/lang/Math.signum:(F)F
        17: f2i
        18: ireturn
      LineNumberTable:
        line 52: 0
        line 52: 9
        line 52: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/runtime/RichFloat;
            9       9     1 signum$extension_$this   F
    Deprecated: true

  public int round();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: invokestatic  #75                 // Method java/lang/Math.round:(F)I
        17: ireturn
      LineNumberTable:
        line 54: 0
        line 54: 9
        line 54: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/runtime/RichFloat;
            9       8     1 round$extension_$this   F

  public float ceil();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: f2d
        15: invokestatic  #71                 // Method java/lang/Math.ceil:(D)D
        18: d2f
        19: freturn
      LineNumberTable:
        line 55: 0
        line 55: 9
        line 55: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/runtime/RichFloat;
            9      10     1 ceil$extension_$this   F

  public float floor();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: f2d
        15: invokestatic  #67                 // Method java/lang/Math.floor:(D)D
        18: d2f
        19: freturn
      LineNumberTable:
        line 56: 0
        line 56: 9
        line 56: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/runtime/RichFloat;
            9      10     1 floor$extension_$this   F

  public float toRadians();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: f2d
        15: invokestatic  #63                 // Method java/lang/Math.toRadians:(D)D
        18: d2f
        19: freturn
      LineNumberTable:
        line 63: 0
        line 63: 9
        line 63: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/runtime/RichFloat;
            9      10     1 toRadians$extension_$this   F

  public float toDegrees();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: f2d
        15: invokestatic  #59                 // Method java/lang/Math.toDegrees:(D)D
        18: d2f
        19: freturn
      LineNumberTable:
        line 70: 0
        line 70: 9
        line 70: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/runtime/RichFloat;
            9      10     1 toDegrees$extension_$this   F

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: invokestatic  #46                 // Method java/lang/Float.hashCode:(F)I
        11: ireturn
      LineNumberTable:
        line 16: 0
        line 16: 8
        line 16: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichFloat;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: aload_0
         4: invokevirtual #262                // Method self:()F
         7: aload_1
         8: invokevirtual #38                 // Method scala/runtime/RichFloat$.equals$extension:(FLjava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichFloat;
            0      12     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object min(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: aload_1
         9: invokestatic  #297                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
        12: fstore_3
        13: fstore_2
        14: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        17: pop
        18: fload_2
        19: fload_3
        20: invokestatic  #85                 // Method java/lang/Math.min:(FF)F
        23: invokestatic  #301                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
        26: areturn
      LineNumberTable:
        line 16: 4
        line 50: 14
        line 16: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/runtime/RichFloat;
            0      27     1  that   Ljava/lang/Object;
           14       9     2 min$extension_$this   F
           14       9     3 min$extension_that   F
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Object max(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: aload_1
         9: invokestatic  #297                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
        12: fstore_3
        13: fstore_2
        14: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        17: pop
        18: fload_2
        19: fload_3
        20: invokestatic  #89                 // Method java/lang/Math.max:(FF)F
        23: invokestatic  #301                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
        26: areturn
      LineNumberTable:
        line 16: 4
        line 49: 14
        line 16: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/runtime/RichFloat;
            0      27     1  that   Ljava/lang/Object;
           14       9     2 max$extension_$this   F
           14       9     3 max$extension_that   F
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Object abs();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: fstore_1
         9: getstatic     #53                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: pop
        13: fload_1
        14: invokestatic  #93                 // Method java/lang/Math.abs:(F)F
        17: invokestatic  #301                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
        20: areturn
      LineNumberTable:
        line 16: 4
        line 48: 9
        line 16: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/runtime/RichFloat;
            9       8     1 abs$extension_$this   F

  public scala.math.Numeric num();
    descriptor: ()Lscala/math/Numeric;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
         3: pop
         4: aload_0
         5: invokevirtual #262                // Method self:()F
         8: pop
         9: getstatic     #149                // Field scala/math/Numeric$FloatIsFractional$.MODULE$:Lscala/math/Numeric$FloatIsFractional$;
        12: areturn
      LineNumberTable:
        line 16: 4
        line 17: 9
        line 16: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichFloat;

  public java.lang.Object self();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #262                // Method self:()F
         4: invokestatic  #307                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
         7: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/runtime/RichFloat;

  public scala.runtime.RichFloat(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: putfield      #257                // Field self:F
         5: aload_0
         6: invokespecial #312                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichFloat;
            0      10     1  self   F
    MethodParameters:
      Name                           Flags
      self                           final
}
InnerClasses:
  public static #16= #13 of #15;          // FloatIsFractional$=class scala/math/Numeric$FloatIsFractional$ of class scala/math/Numeric
  public static #21= #18 of #20;          // Float$=class scala/math/Ordering$Float$ of class scala/math/Ordering
  public static #24= #23 of #18;          // TotalOrdering$=class scala/math/Ordering$Float$TotalOrdering$ of class scala/math/Ordering$Float$
Signature: #3                           // Ljava/lang/Object;Lscala/runtime/FractionalProxy<Ljava/lang/Object;>;
SourceFile: "RichFloat.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t=b\u0001B!C\u0005\u001dC\u0001b\u0015\u0001\u0003\u0006\u0004%\t\u0001\u0016\u0005\t+\u0002\u0011\t\u0011)A\u0005!\")a\u000b\u0001C\u0001/\")!\f\u0001C\t7\")1\r\u0001C\tI\")\u0001\u000e\u0001C!S\")Q\u000e\u0001C!)\")a\u000e\u0001C!_\")1\u000f\u0001C!i\")\u0001\u0010\u0001C!s\")Q\u0010\u0001C!}\"9\u0011Q\u0001\u0001\u0005B\u0005\u001d\u0001bBA\b\u0001\u0011\u0005\u0013q\u0001\u0005\b\u0003#\u0001A\u0011IA\u0004\u0011\u001d\t\u0019\u0002\u0001C!\u0003\u000fAq!!\u0006\u0001\t\u0003\n9\u0001C\u0004\u0002\u0018\u0001!\t!a\u0002\t\u000f\u0005e\u0001\u0001\"\u0001\u0002\b!9\u00111\u0004\u0001\u0005\u0002\u0005\u001d\u0001bBA\u000f\u0001\u0011\u0005\u0011q\u0001\u0005\b\u0003?\u0001A\u0011AA\u0004\u0011\u0019\t\t\u0003\u0001C!)\"9\u00111\u0005\u0001\u0005B\u0005\u0015\u0002bBA\u0016\u0001\u0011\u0005\u0013Q\u0006\u0005\u0007\u0003c\u0001A\u0011\t;\t\r\u0005\u001d\u0003\u0001\"\u0001u\u0011\u0019\tI\u0005\u0001C\u0001)\"1\u00111\n\u0001\u0005\u0002QCa!!\u0014\u0001\t\u0003!\u0006BBA(\u0001\u0011\u0005A\u000bC\u0005\u0002R\u0001\t\t\u0011\"\u0011\u0002T!I\u0011Q\u000b\u0001\u0002\u0002\u0013\u0005\u0013qK\u0004\n\u0003G\u0012\u0015\u0011!E\u0001\u0003K2\u0001\"\u0011\"\u0002\u0002#\u0005\u0011q\r\u0005\u0007-\n\"\t!a\u001c\t\u000f\u0005E$\u0005\"\u0002\u0002t!9\u0011\u0011\u0010\u0012\u0005\u0006\u0005m\u0004bBA@E\u0011\u0015\u0011\u0011\u0011\u0005\b\u0003\u000b\u0013CQAAD\u0011\u001d\tYI\tC\u0003\u0003\u001bCq!!%#\t\u000b\t\u0019\nC\u0004\u0002\u0018\n\")!!\'\t\u000f\u0005u%\u0005\"\u0002\u0002 \"9\u00111\u0015\u0012\u0005\u0006\u0005\u0015\u0006bBAUE\u0011\u0015\u00111\u0016\u0005\b\u0003_\u0013CQAAY\u0011\u001d\t)L\tC\u0003\u0003oCq!a/#\t\u000b\ti\fC\u0004\u0002B\n\")!a1\t\u000f\u0005\u001d\'\u0005\"\u0002\u0002J\"9\u0011Q\u001a\u0012\u0005\u0006\u0005=\u0007bBAjE\u0011\u0015\u0011Q\u001b\u0005\b\u00033\u0014CQAAn\u0011\u001d\tyN\tC\u0003\u0003CDq!!:#\t\u000b\t9\u000fC\u0004\u0002p\n\")!!=\t\u000f\u0005e(\u0005\"\u0002\u0002|\"9!\u0011\u0001\u0012\u0005\u0006\t\r\u0001b\u0002B\u0004E\u0011\u0015!\u0011\u0002\u0005\b\u0005\u001b\u0011CQ\u0001B\b\u0011\u001d\u0011\u0019B\tC\u0003\u0005+AqA!\u0007#\t\u000b\u0011Y\u0002C\u0005\u0003 \t\n\t\u0011\"\u0002\u0003\"!I!Q\u0005\u0012\u0002\u0002\u0013\u0015!q\u0005\u0002\n%&\u001c\u0007N\u00127pCRT!a\u0011#\u0002\u000fI,h\u000e^5nK*\tQ)A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001AE\n\u0005\u0002J\u00156\tA)\u0003\u0002L\t\n1\u0011I\\=WC2\u00042!\u0014(Q\u001b\u0005\u0011\u0015BA(C\u0005=1%/Y2uS>t\u0017\r\u001c)s_bL\bCA%R\u0013\t\u0011FIA\u0003GY>\fG/\u0001\u0003tK24W#\u0001)\u0002\u000bM,GN\u001a\u0011\u0002\rqJg.\u001b;?)\tA\u0016\f\u0005\u0002N\u0001!)1k\u0001a\u0001!\u0006\u0019a.^7\u0016\u0003q\u00032!\u00181Q\u001d\tIe,\u0003\u0002`\t\u00069\u0001/Y2lC\u001e,\u0017BA1c\u0005)1%/Y2uS>t\u0017\r\u001c\u0006\u0003?\u0012\u000b1a\u001c:e+\u0005)\u0007cA/g!&\u0011qM\u0019\u0002\t\u001fJ$WM]5oO\u0006YAm\\;cY\u00164\u0016\r\\;f+\u0005Q\u0007CA%l\u0013\taGI\u0001\u0004E_V\u0014G.Z\u0001\u000bM2|\u0017\r\u001e,bYV,\u0017!\u00037p]\u001e4\u0016\r\\;f+\u0005\u0001\bCA%r\u0013\t\u0011HI\u0001\u0003M_:<\u0017\u0001C5oiZ\u000bG.^3\u0016\u0003U\u0004\"!\u0013<\n\u0005]$%aA%oi\u0006I!-\u001f;f-\u0006dW/Z\u000b\u0002uB\u0011\u0011j_\u0005\u0003y\u0012\u0013AAQ=uK\u0006Q1\u000f[8siZ\u000bG.^3\u0016\u0003}\u00042!SA\u0001\u0013\r\t\u0019\u0001\u0012\u0002\u0006\'\"|\'\u000f^\u0001\bSN<\u0006n\u001c7f+\t\tI\u0001E\u0002J\u0003\u0017I1!!\u0004E\u0005\u001d\u0011un\u001c7fC:\f1\"[:WC2LGMQ=uK\u0006a\u0011n\u001d,bY&$7\u000b[8si\u0006Y\u0011n\u001d,bY&$7\t[1s\u0003)I7OV1mS\u0012Le\u000e^\u0001\u0006SNt\u0015MT\u0001\u000bSNLeNZ5oSRL\u0018\u0001C5t\r&t\u0017\u000e^3\u0002\u001b%\u001c\bk\\:J]\u001aLg.\u001b;z\u00035I7OT3h\u0013:4\u0017N\\5us\u0006\u0019\u0011MY:\u0002\u00075\f\u0007\u0010F\u0002Q\u0003OAa!!\u000b\u0018\u0001\u0004\u0001\u0016\u0001\u0002;iCR\f1!\\5o)\r\u0001\u0016q\u0006\u0005\u0007\u0003SA\u0002\u0019\u0001)\u0002\rMLwM\\;nQ-I\u0012QGA\u001e\u0003{\t\t%a\u0011\u0011\u0007%\u000b9$C\u0002\u0002:\u0011\u0013!\u0002Z3qe\u0016\u001c\u0017\r^3e\u0003\u001diWm]:bO\u0016\f#!a\u0010\u0002\tNLwM\\;nA\u0011|Wm\u001d\u0011o_R\u0004\u0003.\u00198eY\u0016\u0004S\u0006\r\u00181M\u0002z\'\u000f\t$m_\u0006$hFT1Ow\u0001*8/\u001a\u0011ag&<g\u000e\u0019\u0011nKRDw\u000e\u001a\u0011j]N$X-\u00193\u0002\u000bMLgnY3\"\u0005\u0005\u0015\u0013A\u0002\u001a/cMr\u0003\'A\u0003s_VtG-\u0001\u0003dK&d\u0017!\u00024m_>\u0014\u0018!\u0003;p%\u0006$\u0017.\u00198t\u0003%!x\u000eR3he\u0016,7/\u0001\u0005iCND7i\u001c3f)\u0005)\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\n\u0005e\u0003\"CA.A\u0005\u0005\t\u0019AA/\u0003\rAH%\r\t\u0004\u0013\u0006}\u0013bAA1\t\n\u0019\u0011I\\=\u0002\u0013IK7\r\u001b$m_\u0006$\bCA\'#\'\r\u0011\u0013\u0011\u000e\t\u0004\u0013\u0006-\u0014bAA7\t\n1\u0011I\\=SK\u001a$\"!!\u001a\u0002\u001b9,X\u000eJ3yi\u0016t7/[8o)\ra\u0016Q\u000f\u0005\u0007\u0003o\"\u0003\u0019\u0001-\u0002\u000b\u0011\"\b.[:\u0002\u001b=\u0014H\rJ3yi\u0016t7/[8o)\r)\u0017Q\u0010\u0005\u0007\u0003o*\u0003\u0019\u0001-\u0002+\u0011|WO\u00197f-\u0006dW/\u001a\u0013fqR,gn]5p]R\u0019!.a!\t\r\u0005]d\u00051\u0001Y\u0003Q1Gn\\1u-\u0006dW/\u001a\u0013fqR,gn]5p]R\u0019\u0001+!#\t\r\u0005]t\u00051\u0001Y\u0003MawN\\4WC2,X\rJ3yi\u0016t7/[8o)\r\u0001\u0018q\u0012\u0005\u0007\u0003oB\u0003\u0019\u0001-\u0002%%tGOV1mk\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0004k\u0006U\u0005BBA<S\u0001\u0007\u0001,A\ncsR,g+\u00197vK\u0012*\u0007\u0010^3og&|g\u000eF\u0002{\u00037Ca!a\u001e+\u0001\u0004A\u0016\u0001F:i_J$h+\u00197vK\u0012*\u0007\u0010^3og&|g\u000eF\u0002\u0000\u0003CCa!a\u001e,\u0001\u0004A\u0016!E5t/\"|G.\u001a\u0013fqR,gn]5p]R!\u0011\u0011BAT\u0011\u0019\t9\b\fa\u00011\u0006)\u0012n\u001d,bY&$\')\u001f;fI\u0015DH/\u001a8tS>tG\u0003BA\u0005\u0003[Ca!a\u001e.\u0001\u0004A\u0016AF5t-\u0006d\u0017\u000eZ*i_J$H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005%\u00111\u0017\u0005\u0007\u0003or\u0003\u0019\u0001-\u0002+%\u001ch+\u00197jI\u000eC\u0017M\u001d\u0013fqR,gn]5p]R!\u0011\u0011BA]\u0011\u0019\t9h\fa\u00011\u0006!\u0012n\u001d,bY&$\u0017J\u001c;%Kb$XM\\:j_:$B!!\u0003\u0002@\"1\u0011q\u000f\u0019A\u0002a\u000bq\"[:OC:#S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u0013\t)\r\u0003\u0004\u0002xE\u0002\r\u0001W\u0001\u0015SNLeNZ5oSRLH%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005%\u00111\u001a\u0005\u0007\u0003o\u0012\u0004\u0019\u0001-\u0002%%\u001ch)\u001b8ji\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0005\u0003\u0013\t\t\u000e\u0003\u0004\u0002xM\u0002\r\u0001W\u0001\u0018SN\u0004vn]%oM&t\u0017\u000e^=%Kb$XM\\:j_:$B!!\u0003\u0002X\"1\u0011q\u000f\u001bA\u0002a\u000bq#[:OK\u001eLeNZ5oSRLH%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0005%\u0011Q\u001c\u0005\u0007\u0003o*\u0004\u0019\u0001-\u0002\u001b\u0005\u00147\u000fJ3yi\u0016t7/[8o)\r\u0001\u00161\u001d\u0005\u0007\u0003o2\u0004\u0019\u0001-\u0002\u001b5\f\u0007\u0010J3yi\u0016t7/[8o)\u0011\tI/!<\u0015\u0007A\u000bY\u000f\u0003\u0004\u0002*]\u0002\r\u0001\u0015\u0005\u0007\u0003o:\u0004\u0019\u0001-\u0002\u001b5Lg\u000eJ3yi\u0016t7/[8o)\u0011\t\u00190a>\u0015\u0007A\u000b)\u0010\u0003\u0004\u0002*a\u0002\r\u0001\u0015\u0005\u0007\u0003oB\u0004\u0019\u0001-\u0002!MLwM\\;nI\u0015DH/\u001a8tS>tGcA;\u0002~\"1\u0011qO\u001dA\u0002aC3\"OA\u001b\u0003w\ti$!\u0011\u0002D\u0005y!o\\;oI\u0012*\u0007\u0010^3og&|g\u000eF\u0002v\u0005\u000bAa!a\u001e;\u0001\u0004A\u0016AD2fS2$S\r\u001f;f]NLwN\u001c\u000b\u0004!\n-\u0001BBA<w\u0001\u0007\u0001,A\bgY>|\'\u000fJ3yi\u0016t7/[8o)\r\u0001&\u0011\u0003\u0005\u0007\u0003ob\u0004\u0019\u0001-\u0002\'Q|\'+\u00193jC:\u001cH%\u001a=uK:\u001c\u0018n\u001c8\u0015\u0007A\u00139\u0002\u0003\u0004\u0002xu\u0002\r\u0001W\u0001\u0014i>$Um\u001a:fKN$S\r\u001f;f]NLwN\u001c\u000b\u0004!\nu\u0001BBA<}\u0001\u0007\u0001,\u0001\niCND7i\u001c3fI\u0015DH/\u001a8tS>tG\u0003BA*\u0005GAa!a\u001e@\u0001\u0004A\u0016\u0001E3rk\u0006d7\u000fJ3yi\u0016t7/[8o)\u0011\u0011IC!\f\u0015\t\u0005%!1\u0006\u0005\n\u00037\u0002\u0015\u0011!a\u0001\u0003;Ba!a\u001eA\u0001\u0004A\u0006"
    )
  ScalaInlineInfo: length = 0x10D (unknown attribute)
   01 01 00 35 00 B1 00 AA 01 00 B9 00 AA 01 00 A9
   00 AA 01 00 B5 00 AA 01 01 34 01 35 01 00 5B 00
   EB 01 00 5B 00 97 01 01 0E 00 D3 01 00 45 00 EB
   01 00 A0 00 A1 01 00 BD 00 A1 01 01 0A 00 F1 01
   01 22 00 AA 01 01 0B 00 EB 01 00 41 00 EB 01 00
   2C 00 DF 01 01 0D 00 DF 01 00 66 01 11 01 01 16
   01 11 01 00 6E 01 11 01 01 18 01 11 01 01 17 01
   11 01 01 12 01 11 01 01 14 01 11 01 01 15 01 11
   01 01 13 01 11 01 01 10 01 11 01 01 0C 00 E5 01
   00 57 00 30 01 00 57 01 23 01 00 53 00 30 01 00
   53 01 23 01 01 02 01 03 01 01 02 01 30 01 01 07
   01 08 01 00 49 00 DF 01 00 19 00 EB 01 00 19 00
   97 01 01 0F 00 D9 01 00 96 00 97 01 00 4D 00 DF
   01 00 D2 00 D3 01 00 CA 00 CB 01 00 38 00 EB 01
   00 F0 00 F1 01 00 EA 00 EB 01 00 DE 00 DF 01 00
   E4 00 E5 01 00 3D 00 EB 01 00 D8 00 D9 01 00 C2
   00 C3 01 00 FA 00 AA 01 00 F6 00 DF 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
