Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/sys/process/ProcessBuilderImpl$AbstractBuilder.class
  Last modified May 29, 2022; size 17260 bytes
  SHA-256 checksum 16897a1c8a931c327d9deb9de7449dd134ca99ca7adbeaefbee236860b91de24
  Compiled from "ProcessBuilderImpl.scala"
public abstract class scala.sys.process.ProcessBuilderImpl$AbstractBuilder implements scala.sys.process.ProcessBuilder
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/sys/process/ProcessBuilderImpl$AbstractBuilder
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 61, attributes: 5
Constant pool:
    #1 = Utf8               scala/sys/process/ProcessBuilderImpl$AbstractBuilder
    #2 = Class              #1            // scala/sys/process/ProcessBuilderImpl$AbstractBuilder
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/sys/process/ProcessBuilder
    #6 = Class              #5            // scala/sys/process/ProcessBuilder
    #7 = Utf8               ProcessBuilderImpl.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               scala/sys/process/BasicIO$LazilyListed
   #14 = Class              #13           // scala/sys/process/BasicIO$LazilyListed
   #15 = Utf8               scala/sys/process/BasicIO
   #16 = Class              #15           // scala/sys/process/BasicIO
   #17 = Utf8               LazilyListed
   #18 = Utf8               scala/sys/process/BasicIO$LazilyListed$
   #19 = Class              #18           // scala/sys/process/BasicIO$LazilyListed$
   #20 = Utf8               LazilyListed$
   #21 = Utf8               scala/sys/process/BasicIO$Streamed
   #22 = Class              #21           // scala/sys/process/BasicIO$Streamed
   #23 = Utf8               Streamed
   #24 = Utf8               scala/sys/process/BasicIO$Streamed$
   #25 = Class              #24           // scala/sys/process/BasicIO$Streamed$
   #26 = Utf8               Streamed$
   #27 = Utf8               scala/sys/process/ProcessBuilder$Sink
   #28 = Class              #27           // scala/sys/process/ProcessBuilder$Sink
   #29 = Utf8               Sink
   #30 = Utf8               scala/sys/process/ProcessBuilder$Source
   #31 = Class              #30           // scala/sys/process/ProcessBuilder$Source
   #32 = Utf8               Source
   #33 = Utf8               scala/sys/process/ProcessBuilderImpl
   #34 = Class              #33           // scala/sys/process/ProcessBuilderImpl
   #35 = Utf8               AbstractBuilder
   #36 = Utf8               scala/sys/process/ProcessBuilderImpl$AndBuilder
   #37 = Class              #36           // scala/sys/process/ProcessBuilderImpl$AndBuilder
   #38 = Utf8               AndBuilder
   #39 = Utf8               scala/sys/process/ProcessBuilderImpl$DaemonBuilder
   #40 = Class              #39           // scala/sys/process/ProcessBuilderImpl$DaemonBuilder
   #41 = Utf8               DaemonBuilder
   #42 = Utf8               scala/sys/process/ProcessBuilderImpl$OrBuilder
   #43 = Class              #42           // scala/sys/process/ProcessBuilderImpl$OrBuilder
   #44 = Utf8               OrBuilder
   #45 = Utf8               scala/sys/process/ProcessBuilderImpl$PipedBuilder
   #46 = Class              #45           // scala/sys/process/ProcessBuilderImpl$PipedBuilder
   #47 = Utf8               PipedBuilder
   #48 = Utf8               scala/sys/process/ProcessBuilderImpl$SequenceBuilder
   #49 = Class              #48           // scala/sys/process/ProcessBuilderImpl$SequenceBuilder
   #50 = Utf8               SequenceBuilder
   #51 = Utf8               scala/sys/process/ProcessImpl$Spawn$
   #52 = Class              #51           // scala/sys/process/ProcessImpl$Spawn$
   #53 = Utf8               scala/sys/process/ProcessImpl
   #54 = Class              #53           // scala/sys/process/ProcessImpl
   #55 = Utf8               Spawn$
   #56 = Utf8               scala/sys/process/ProcessImpl$Spawn$$anon$1
   #57 = Class              #56           // scala/sys/process/ProcessImpl$Spawn$$anon$1
   #58 = Utf8               defaultStreamCapacity
   #59 = Utf8               I
   #60 = Utf8               $outer
   #61 = Utf8               Lscala/sys/process/ProcessBuilder$;
   #62 = Utf8               $hash$less
   #63 = Utf8               (Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #64 = Utf8               f
   #65 = Utf8               $hash$less$
   #66 = Utf8               (Lscala/sys/process/ProcessBuilder$Sink;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #67 = NameAndType        #65:#66       // $hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #68 = InterfaceMethodref #28.#67       // scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #69 = Utf8               this
   #70 = Utf8               Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
   #71 = Utf8               Ljava/io/File;
   #72 = Utf8               (Ljava/net/URL;)Lscala/sys/process/ProcessBuilder;
   #73 = Utf8               (Lscala/sys/process/ProcessBuilder$Sink;Ljava/net/URL;)Lscala/sys/process/ProcessBuilder;
   #74 = NameAndType        #65:#73       // $hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Ljava/net/URL;)Lscala/sys/process/ProcessBuilder;
   #75 = InterfaceMethodref #28.#74       // scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Ljava/net/URL;)Lscala/sys/process/ProcessBuilder;
   #76 = Utf8               Ljava/net/URL;
   #77 = Utf8               (Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
   #78 = Utf8               (Lscala/Function0<Ljava/io/InputStream;>;)Lscala/sys/process/ProcessBuilder;
   #79 = Utf8               in
   #80 = Utf8               (Lscala/sys/process/ProcessBuilder$Sink;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
   #81 = NameAndType        #65:#80       // $hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
   #82 = InterfaceMethodref #28.#81       // scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
   #83 = Utf8               Lscala/Function0;
   #84 = Utf8               (Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
   #85 = Utf8               b
   #86 = Utf8               (Lscala/sys/process/ProcessBuilder$Sink;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
   #87 = NameAndType        #65:#86       // $hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
   #88 = InterfaceMethodref #28.#87       // scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
   #89 = Utf8               Lscala/sys/process/ProcessBuilder;
   #90 = Utf8               $hash$greater
   #91 = Utf8               $hash$greater$
   #92 = Utf8               (Lscala/sys/process/ProcessBuilder$Source;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #93 = NameAndType        #91:#92       // $hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #94 = InterfaceMethodref #31.#93       // scala/sys/process/ProcessBuilder$Source.$hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #95 = Utf8               $hash$greater$greater
   #96 = Utf8               $hash$greater$greater$
   #97 = NameAndType        #96:#92       // $hash$greater$greater$:(Lscala/sys/process/ProcessBuilder$Source;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #98 = InterfaceMethodref #31.#97       // scala/sys/process/ProcessBuilder$Source.$hash$greater$greater$:(Lscala/sys/process/ProcessBuilder$Source;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
   #99 = Utf8               (Lscala/Function0<Ljava/io/OutputStream;>;)Lscala/sys/process/ProcessBuilder;
  #100 = Utf8               out
  #101 = Utf8               (Lscala/sys/process/ProcessBuilder$Source;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
  #102 = NameAndType        #91:#101      // $hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
  #103 = InterfaceMethodref #31.#102      // scala/sys/process/ProcessBuilder$Source.$hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
  #104 = Utf8               (Lscala/sys/process/ProcessBuilder$Source;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
  #105 = NameAndType        #91:#104      // $hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
  #106 = InterfaceMethodref #31.#105      // scala/sys/process/ProcessBuilder$Source.$hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
  #107 = Utf8               cat
  #108 = Utf8               ()Lscala/sys/process/ProcessBuilder;
  #109 = Utf8               cat$
  #110 = Utf8               (Lscala/sys/process/ProcessBuilder$Source;)Lscala/sys/process/ProcessBuilder;
  #111 = NameAndType        #109:#110     // cat$:(Lscala/sys/process/ProcessBuilder$Source;)Lscala/sys/process/ProcessBuilder;
  #112 = InterfaceMethodref #31.#111      // scala/sys/process/ProcessBuilder$Source.cat$:(Lscala/sys/process/ProcessBuilder$Source;)Lscala/sys/process/ProcessBuilder;
  #113 = Utf8               toSource
  #114 = Utf8               ()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
  #115 = Utf8               toSink
  #116 = Utf8               $hash$bar
  #117 = Utf8               other
  #118 = Utf8               canPipeTo
  #119 = Utf8               ()Z
  #120 = NameAndType        #118:#119     // canPipeTo:()Z
  #121 = InterfaceMethodref #6.#120       // scala/sys/process/ProcessBuilder.canPipeTo:()Z
  #122 = Utf8               java/lang/IllegalArgumentException
  #123 = Class              #122          // java/lang/IllegalArgumentException
  #124 = Utf8               java/lang/StringBuilder
  #125 = Class              #124          // java/lang/StringBuilder
  #126 = Integer            20
  #127 = Utf8               <init>
  #128 = Utf8               (I)V
  #129 = NameAndType        #127:#128     // "<init>":(I)V
  #130 = Methodref          #125.#129     // java/lang/StringBuilder."<init>":(I)V
  #131 = Utf8               requirement failed:
  #132 = String             #131          // requirement failed:
  #133 = Utf8               append
  #134 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #135 = NameAndType        #133:#134     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #136 = Methodref          #125.#135     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #137 = Utf8               Piping to multiple processes is not supported.
  #138 = String             #137          // Piping to multiple processes is not supported.
  #139 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #140 = NameAndType        #133:#139     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #141 = Methodref          #125.#140     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #142 = Utf8               toString
  #143 = Utf8               ()Ljava/lang/String;
  #144 = NameAndType        #142:#143     // toString:()Ljava/lang/String;
  #145 = Methodref          #125.#144     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #146 = Utf8               (Ljava/lang/String;)V
  #147 = NameAndType        #127:#146     // "<init>":(Ljava/lang/String;)V
  #148 = Methodref          #123.#147     // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #149 = Utf8               scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer
  #150 = Utf8               ()Lscala/sys/process/ProcessBuilder$;
  #151 = NameAndType        #149:#150     // scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer:()Lscala/sys/process/ProcessBuilder$;
  #152 = Methodref          #2.#151       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer:()Lscala/sys/process/ProcessBuilder$;
  #153 = Utf8               (Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;Z)V
  #154 = NameAndType        #127:#153     // "<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;Z)V
  #155 = Methodref          #46.#154      // scala/sys/process/ProcessBuilderImpl$PipedBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;Z)V
  #156 = Utf8               $hash$bar$bar
  #157 = Utf8               (Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
  #158 = NameAndType        #127:#157     // "<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
  #159 = Methodref          #43.#158      // scala/sys/process/ProcessBuilderImpl$OrBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
  #160 = Utf8               $hash$amp$amp
  #161 = Methodref          #37.#158      // scala/sys/process/ProcessBuilderImpl$AndBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
  #162 = Utf8               $hash$hash$hash
  #163 = Methodref          #49.#158      // scala/sys/process/ProcessBuilderImpl$SequenceBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
  #164 = Utf8               run
  #165 = Utf8               ()Lscala/sys/process/Process;
  #166 = Utf8               (Z)Lscala/sys/process/Process;
  #167 = NameAndType        #164:#166     // run:(Z)Lscala/sys/process/Process;
  #168 = Methodref          #2.#167       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.run:(Z)Lscala/sys/process/Process;
  #169 = Utf8               connectInput
  #170 = Utf8               scala/sys/process/BasicIO$
  #171 = Class              #170          // scala/sys/process/BasicIO$
  #172 = Utf8               MODULE$
  #173 = Utf8               Lscala/sys/process/BasicIO$;
  #174 = NameAndType        #172:#173     // MODULE$:Lscala/sys/process/BasicIO$;
  #175 = Fieldref           #171.#174     // scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
  #176 = Utf8               standard
  #177 = Utf8               (Z)Lscala/sys/process/ProcessIO;
  #178 = NameAndType        #176:#177     // standard:(Z)Lscala/sys/process/ProcessIO;
  #179 = Methodref          #171.#178     // scala/sys/process/BasicIO$.standard:(Z)Lscala/sys/process/ProcessIO;
  #180 = Utf8               (Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
  #181 = NameAndType        #164:#180     // run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
  #182 = Methodref          #2.#181       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
  #183 = Utf8               Z
  #184 = Utf8               (Lscala/sys/process/ProcessLogger;)Lscala/sys/process/Process;
  #185 = Utf8               log
  #186 = Utf8               (Lscala/sys/process/ProcessLogger;Z)Lscala/sys/process/Process;
  #187 = NameAndType        #164:#186     // run:(Lscala/sys/process/ProcessLogger;Z)Lscala/sys/process/Process;
  #188 = Methodref          #2.#187       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.run:(Lscala/sys/process/ProcessLogger;Z)Lscala/sys/process/Process;
  #189 = Utf8               Lscala/sys/process/ProcessLogger;
  #190 = Utf8               apply
  #191 = Utf8               (ZLscala/sys/process/ProcessLogger;)Lscala/sys/process/ProcessIO;
  #192 = NameAndType        #190:#191     // apply:(ZLscala/sys/process/ProcessLogger;)Lscala/sys/process/ProcessIO;
  #193 = Methodref          #171.#192     // scala/sys/process/BasicIO$.apply:(ZLscala/sys/process/ProcessLogger;)Lscala/sys/process/ProcessIO;
  #194 = Utf8               $bang$bang
  #195 = Utf8               scala/None$
  #196 = Class              #195          // scala/None$
  #197 = Utf8               Lscala/None$;
  #198 = NameAndType        #172:#197     // MODULE$:Lscala/None$;
  #199 = Fieldref           #196.#198     // scala/None$.MODULE$:Lscala/None$;
  #200 = Utf8               slurp
  #201 = Utf8               (Lscala/Option;Z)Ljava/lang/String;
  #202 = NameAndType        #200:#201     // slurp:(Lscala/Option;Z)Ljava/lang/String;
  #203 = Methodref          #2.#202       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.slurp:(Lscala/Option;Z)Ljava/lang/String;
  #204 = Utf8               (Lscala/sys/process/ProcessLogger;)Ljava/lang/String;
  #205 = Utf8               scala/Some
  #206 = Class              #205          // scala/Some
  #207 = Utf8               (Ljava/lang/Object;)V
  #208 = NameAndType        #127:#207     // "<init>":(Ljava/lang/Object;)V
  #209 = Methodref          #206.#208     // scala/Some."<init>":(Ljava/lang/Object;)V
  #210 = Utf8               $bang$bang$less
  #211 = Utf8               lazyLines
  #212 = Utf8               ()Lscala/collection/immutable/LazyList;
  #213 = Utf8               ()Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
  #214 = NameAndType        #58:#59       // defaultStreamCapacity:I
  #215 = Fieldref           #2.#214       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.defaultStreamCapacity:I
  #216 = Utf8               java/lang/Integer
  #217 = Class              #216          // java/lang/Integer
  #218 = Utf8               valueOf
  #219 = Utf8               (I)Ljava/lang/Integer;
  #220 = NameAndType        #218:#219     // valueOf:(I)Ljava/lang/Integer;
  #221 = Methodref          #217.#220     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #222 = Utf8               (ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
  #223 = NameAndType        #211:#222     // lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
  #224 = Methodref          #2.#223       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
  #225 = Utf8               (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/LazyList;
  #226 = Utf8               (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
  #227 = Utf8               lazyLines_$bang
  #228 = Utf8               (Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
  #229 = Utf8               (Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
  #230 = Utf8               capacity
  #231 = Utf8               Ljava/lang/Integer;
  #232 = Utf8               (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
  #233 = Utf8               (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
  #234 = Utf8               lineStream
  #235 = Utf8               ()Lscala/collection/immutable/Stream;
  #236 = Utf8               ()Lscala/collection/immutable/Stream<Ljava/lang/String;>;
  #237 = Utf8               (ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
  #238 = NameAndType        #234:#237     // lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
  #239 = Methodref          #2.#238       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
  #240 = Utf8               (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/Stream;
  #241 = Utf8               (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
  #242 = Utf8               lineStream_$bang
  #243 = Utf8               (Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
  #244 = Utf8               (Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
  #245 = Utf8               (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
  #246 = Utf8               (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
  #247 = Utf8               $bang
  #248 = Utf8               ()I
  #249 = Utf8               scala/sys/process/Process
  #250 = Class              #249          // scala/sys/process/Process
  #251 = Utf8               exitValue
  #252 = NameAndType        #251:#248     // exitValue:()I
  #253 = InterfaceMethodref #250.#252     // scala/sys/process/Process.exitValue:()I
  #254 = Utf8               (Lscala/sys/process/ProcessIO;)I
  #255 = Utf8               io
  #256 = Utf8               Lscala/sys/process/ProcessIO;
  #257 = Utf8               (Lscala/sys/process/ProcessLogger;)I
  #258 = Utf8               runBuffered
  #259 = Utf8               (Lscala/sys/process/ProcessLogger;Z)I
  #260 = NameAndType        #258:#259     // runBuffered:(Lscala/sys/process/ProcessLogger;Z)I
  #261 = Methodref          #2.#260       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.runBuffered:(Lscala/sys/process/ProcessLogger;Z)I
  #262 = Utf8               $bang$less
  #263 = Utf8               daemonized
  #264 = Utf8               (Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;)V
  #265 = NameAndType        #127:#264     // "<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;)V
  #266 = Methodref          #40.#265      // scala/sys/process/ProcessBuilderImpl$DaemonBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;)V
  #267 = Utf8               (Lscala/Option<Lscala/sys/process/ProcessLogger;>;Z)Ljava/lang/String;
  #268 = Utf8               withIn
  #269 = Utf8               java/lang/StringBuffer
  #270 = Class              #269          // java/lang/StringBuffer
  #271 = Utf8               ()V
  #272 = NameAndType        #127:#271     // "<init>":()V
  #273 = Methodref          #270.#272     // java/lang/StringBuffer."<init>":()V
  #274 = Utf8               (ZLjava/lang/Appendable;Lscala/Option;)Lscala/sys/process/ProcessIO;
  #275 = NameAndType        #190:#274     // apply:(ZLjava/lang/Appendable;Lscala/Option;)Lscala/sys/process/ProcessIO;
  #276 = Methodref          #171.#275     // scala/sys/process/BasicIO$.apply:(ZLjava/lang/Appendable;Lscala/Option;)Lscala/sys/process/ProcessIO;
  #277 = NameAndType        #247:#254     // $bang:(Lscala/sys/process/ProcessIO;)I
  #278 = Methodref          #2.#277       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$bang:(Lscala/sys/process/ProcessIO;)I
  #279 = Methodref          #270.#144     // java/lang/StringBuffer.toString:()Ljava/lang/String;
  #280 = Utf8               scala/sys/package$
  #281 = Class              #280          // scala/sys/package$
  #282 = Utf8               Lscala/sys/package$;
  #283 = NameAndType        #172:#282     // MODULE$:Lscala/sys/package$;
  #284 = Fieldref           #281.#283     // scala/sys/package$.MODULE$:Lscala/sys/package$;
  #285 = Utf8               Nonzero exit value:
  #286 = String             #285          // Nonzero exit value:
  #287 = Utf8               (I)Ljava/lang/StringBuilder;
  #288 = NameAndType        #133:#287     // append:(I)Ljava/lang/StringBuilder;
  #289 = Methodref          #125.#288     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #290 = Utf8               java/lang/RuntimeException
  #291 = Class              #290          // java/lang/RuntimeException
  #292 = Methodref          #291.#147     // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
  #293 = Utf8               buffer
  #294 = Utf8               Ljava/lang/StringBuffer;
  #295 = Utf8               code
  #296 = Utf8               Lscala/Option;
  #297 = Utf8               error_message
  #298 = Utf8               Ljava/lang/String;
  #299 = Utf8               (ZZLscala/Option<Lscala/sys/process/ProcessLogger;>;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
  #300 = Utf8               withInput
  #301 = Utf8               nonZeroException
  #302 = Utf8               Lscala/sys/process/BasicIO$LazilyListed$;
  #303 = NameAndType        #172:#302     // MODULE$:Lscala/sys/process/BasicIO$LazilyListed$;
  #304 = Fieldref           #19.#303      // scala/sys/process/BasicIO$LazilyListed$.MODULE$:Lscala/sys/process/BasicIO$LazilyListed$;
  #305 = Utf8               (ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed;
  #306 = NameAndType        #190:#305     // apply:(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed;
  #307 = Methodref          #19.#306      // scala/sys/process/BasicIO$LazilyListed$.apply:(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed;
  #308 = Utf8               process
  #309 = Utf8               ()Lscala/Function1;
  #310 = NameAndType        #308:#309     // process:()Lscala/Function1;
  #311 = Methodref          #14.#310      // scala/sys/process/BasicIO$LazilyListed.process:()Lscala/Function1;
  #312 = Utf8               (ZLscala/Function1;Lscala/Option;)Lscala/sys/process/ProcessIO;
  #313 = NameAndType        #190:#312     // apply:(ZLscala/Function1;Lscala/Option;)Lscala/sys/process/ProcessIO;
  #314 = Methodref          #171.#313     // scala/sys/process/BasicIO$.apply:(ZLscala/Function1;Lscala/Option;)Lscala/sys/process/ProcessIO;
  #315 = Utf8               done
  #316 = NameAndType        #315:#309     // done:()Lscala/Function1;
  #317 = Methodref          #14.#316      // scala/sys/process/BasicIO$LazilyListed.done:()Lscala/Function1;
  #318 = Utf8               scala/sys/process/Process$
  #319 = Class              #318          // scala/sys/process/Process$
  #320 = Utf8               Lscala/sys/process/Process$;
  #321 = NameAndType        #172:#320     // MODULE$:Lscala/sys/process/Process$;
  #322 = Fieldref           #319.#321     // scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
  #323 = Utf8               Spawn
  #324 = Utf8               ()Lscala/sys/process/ProcessImpl$Spawn$;
  #325 = NameAndType        #323:#324     // Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
  #326 = Methodref          #319.#325     // scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
  #327 = Utf8               LazyLines
  #328 = String             #327          // LazyLines
  #329 = MethodType         #271          //  ()V
  #330 = Utf8               $anonfun$lazyLines$1
  #331 = Utf8               (Lscala/Function1;Lscala/sys/process/Process;)V
  #332 = NameAndType        #330:#331     // $anonfun$lazyLines$1:(Lscala/Function1;Lscala/sys/process/Process;)V
  #333 = Methodref          #2.#332       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lazyLines$1:(Lscala/Function1;Lscala/sys/process/Process;)V
  #334 = MethodHandle       6:#333        // REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lazyLines$1:(Lscala/Function1;Lscala/sys/process/Process;)V
  #335 = Integer            1
  #336 = Utf8               java/lang/invoke/LambdaMetafactory
  #337 = Class              #336          // java/lang/invoke/LambdaMetafactory
  #338 = Utf8               altMetafactory
  #339 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #340 = NameAndType        #338:#339     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #341 = Methodref          #337.#340     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #342 = MethodHandle       6:#341        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #343 = Utf8               apply$mcV$sp
  #344 = Utf8               (Lscala/Function1;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #345 = NameAndType        #343:#344     // apply$mcV$sp:(Lscala/Function1;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #346 = InvokeDynamic      #0:#345       // #0:apply$mcV$sp:(Lscala/Function1;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #347 = Utf8               (Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #348 = NameAndType        #127:#347     // "<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #349 = Methodref          #57.#348      // scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #350 = Integer            7
  #351 = Utf8               -spawn-
  #352 = String             #351          // -spawn-
  #353 = Utf8               java/lang/Thread
  #354 = Class              #353          // java/lang/Thread
  #355 = Utf8               getName
  #356 = NameAndType        #355:#143     // getName:()Ljava/lang/String;
  #357 = Methodref          #354.#356     // java/lang/Thread.getName:()Ljava/lang/String;
  #358 = Utf8               setName
  #359 = NameAndType        #358:#146     // setName:(Ljava/lang/String;)V
  #360 = Methodref          #354.#359     // java/lang/Thread.setName:(Ljava/lang/String;)V
  #361 = Utf8               setDaemon
  #362 = Utf8               (Z)V
  #363 = NameAndType        #361:#362     // setDaemon:(Z)V
  #364 = Methodref          #354.#363     // java/lang/Thread.setDaemon:(Z)V
  #365 = Utf8               start
  #366 = NameAndType        #365:#271     // start:()V
  #367 = Methodref          #354.#366     // java/lang/Thread.start:()V
  #368 = Utf8               lazyList
  #369 = NameAndType        #368:#212     // lazyList:()Lscala/collection/immutable/LazyList;
  #370 = Methodref          #14.#369      // scala/sys/process/BasicIO$LazilyListed.lazyList:()Lscala/collection/immutable/LazyList;
  #371 = Utf8               lazilyListed
  #372 = Utf8               Lscala/sys/process/BasicIO$LazilyListed;
  #373 = Utf8               Lscala/sys/process/Process;
  #374 = Utf8               Lscala/Function1;
  #375 = Utf8               apply_thread
  #376 = Utf8               Ljava/lang/Thread;
  #377 = Utf8               apply_prefix
  #378 = Utf8               apply_f
  #379 = Utf8               scala/Option
  #380 = Class              #379          // scala/Option
  #381 = Utf8               scala/Function1
  #382 = Class              #381          // scala/Function1
  #383 = Utf8               java/lang/String
  #384 = Class              #383          // java/lang/String
  #385 = Utf8               scala/runtime/java8/JFunction0$mcV$sp
  #386 = Class              #385          // scala/runtime/java8/JFunction0$mcV$sp
  #387 = Utf8               (ZZLscala/Option<Lscala/sys/process/ProcessLogger;>;Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
  #388 = Utf8               Lscala/sys/process/BasicIO$Streamed$;
  #389 = NameAndType        #172:#388     // MODULE$:Lscala/sys/process/BasicIO$Streamed$;
  #390 = Fieldref           #25.#389      // scala/sys/process/BasicIO$Streamed$.MODULE$:Lscala/sys/process/BasicIO$Streamed$;
  #391 = Utf8               (ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$Streamed;
  #392 = NameAndType        #190:#391     // apply:(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$Streamed;
  #393 = Methodref          #25.#392      // scala/sys/process/BasicIO$Streamed$.apply:(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$Streamed;
  #394 = Methodref          #22.#310      // scala/sys/process/BasicIO$Streamed.process:()Lscala/Function1;
  #395 = Utf8               LineStream
  #396 = String             #395          // LineStream
  #397 = Utf8               $anonfun$lineStream$1
  #398 = Utf8               (Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)V
  #399 = NameAndType        #397:#398     // $anonfun$lineStream$1:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)V
  #400 = Methodref          #2.#399       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lineStream$1:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)V
  #401 = MethodHandle       6:#400        // REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lineStream$1:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)V
  #402 = Utf8               (Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #403 = NameAndType        #343:#402     // apply$mcV$sp:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #404 = InvokeDynamic      #1:#403       // #1:apply$mcV$sp:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #405 = Utf8               stream
  #406 = Utf8               ()Lscala/Function0;
  #407 = NameAndType        #405:#406     // stream:()Lscala/Function0;
  #408 = Methodref          #22.#407      // scala/sys/process/BasicIO$Streamed.stream:()Lscala/Function0;
  #409 = Utf8               scala/Function0
  #410 = Class              #409          // scala/Function0
  #411 = Utf8               ()Ljava/lang/Object;
  #412 = NameAndType        #190:#411     // apply:()Ljava/lang/Object;
  #413 = InterfaceMethodref #410.#412     // scala/Function0.apply:()Ljava/lang/Object;
  #414 = Utf8               scala/collection/immutable/Stream
  #415 = Class              #414          // scala/collection/immutable/Stream
  #416 = Utf8               streamed
  #417 = Utf8               Lscala/sys/process/BasicIO$Streamed;
  #418 = MethodType         #248          //  ()I
  #419 = Utf8               $anonfun$runBuffered$1
  #420 = Utf8               (Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)I
  #421 = NameAndType        #419:#420     // $anonfun$runBuffered$1:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)I
  #422 = Methodref          #2.#421       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$runBuffered$1:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)I
  #423 = MethodHandle       6:#422        // REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$runBuffered$1:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)I
  #424 = Utf8               apply$mcI$sp
  #425 = Utf8               (Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)Lscala/runtime/java8/JFunction0$mcI$sp;
  #426 = NameAndType        #424:#425     // apply$mcI$sp:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)Lscala/runtime/java8/JFunction0$mcI$sp;
  #427 = InvokeDynamic      #2:#426       // #2:apply$mcI$sp:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)Lscala/runtime/java8/JFunction0$mcI$sp;
  #428 = Utf8               scala/sys/process/ProcessLogger
  #429 = Class              #428          // scala/sys/process/ProcessLogger
  #430 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #431 = NameAndType        #293:#430     // buffer:(Lscala/Function0;)Ljava/lang/Object;
  #432 = InterfaceMethodref #429.#431     // scala/sys/process/ProcessLogger.buffer:(Lscala/Function0;)Ljava/lang/Object;
  #433 = Utf8               scala/runtime/BoxesRunTime
  #434 = Class              #433          // scala/runtime/BoxesRunTime
  #435 = Utf8               unboxToInt
  #436 = Utf8               (Ljava/lang/Object;)I
  #437 = NameAndType        #435:#436     // unboxToInt:(Ljava/lang/Object;)I
  #438 = Methodref          #434.#437     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #439 = Utf8               hasExitValue
  #440 = NameAndType        #60:#61       // $outer:Lscala/sys/process/ProcessBuilder$;
  #441 = Fieldref           #2.#440       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$outer:Lscala/sys/process/ProcessBuilder$;
  #442 = NameAndType        #115:#114     // toSink:()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
  #443 = Methodref          #2.#442       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.toSink:()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
  #444 = NameAndType        #113:#114     // toSource:()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
  #445 = Methodref          #2.#444       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.toSource:()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
  #446 = Utf8               $anonfun$$hash$bar$1
  #447 = Utf8               liftedTree1$1
  #448 = Utf8               (Lscala/sys/process/Process;)I
  #449 = Utf8               process$2
  #450 = Utf8               java/lang/Throwable
  #451 = Class              #450          // java/lang/Throwable
  #452 = Utf8               scala/util/control/NonFatal$
  #453 = Class              #452          // scala/util/control/NonFatal$
  #454 = Utf8               Lscala/util/control/NonFatal$;
  #455 = NameAndType        #172:#454     // MODULE$:Lscala/util/control/NonFatal$;
  #456 = Fieldref           #453.#455     // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
  #457 = Utf8               unapply
  #458 = Utf8               (Ljava/lang/Throwable;)Lscala/Option;
  #459 = NameAndType        #457:#458     // unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #460 = Methodref          #453.#459     // scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #461 = Utf8               isEmpty
  #462 = NameAndType        #461:#119     // isEmpty:()Z
  #463 = Methodref          #380.#462     // scala/Option.isEmpty:()Z
  #464 = Utf8               done$1
  #465 = NameAndType        #447:#448     // liftedTree1$1:(Lscala/sys/process/Process;)I
  #466 = Methodref          #2.#465       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder.liftedTree1$1:(Lscala/sys/process/Process;)I
  #467 = Utf8               apply$mcVI$sp
  #468 = NameAndType        #467:#128     // apply$mcVI$sp:(I)V
  #469 = InterfaceMethodref #382.#468     // scala/Function1.apply$mcVI$sp:(I)V
  #470 = Utf8               streamed$1
  #471 = Utf8               process$3
  #472 = Methodref          #22.#316      // scala/sys/process/BasicIO$Streamed.done:()Lscala/Function1;
  #473 = Utf8               $this
  #474 = Utf8               log$1
  #475 = Utf8               connectInput$1
  #476 = Utf8               (Lscala/sys/process/ProcessBuilder$;)V
  #477 = Methodref          #4.#272       // java/lang/Object."<init>":()V
  #478 = Utf8               $deserializeLambda$
  #479 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #480 = Utf8               scala/runtime/LambdaDeserialize
  #481 = Class              #480          // scala/runtime/LambdaDeserialize
  #482 = Utf8               bootstrap
  #483 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #484 = NameAndType        #482:#483     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #485 = Methodref          #481.#484     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #486 = MethodHandle       6:#485        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #487 = Utf8               lambdaDeserialize
  #488 = NameAndType        #487:#479     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #489 = InvokeDynamic      #3:#488       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #490 = Utf8               Code
  #491 = Utf8               LineNumberTable
  #492 = Utf8               LocalVariableTable
  #493 = Utf8               MethodParameters
  #494 = Utf8               Signature
  #495 = Utf8               StackMapTable
  #496 = Utf8               Deprecated
  #497 = Utf8               InnerClasses
  #498 = Utf8               SourceFile
  #499 = Utf8               BootstrapMethods
  #500 = Utf8               ScalaInlineInfo
  #501 = Utf8               Scala
{
  private final int defaultStreamCapacity;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final scala.sys.process.ProcessBuilder$ $outer;
    descriptor: Lscala/sys/process/ProcessBuilder$;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public scala.sys.process.ProcessBuilder $hash$less(java.io.File);
    descriptor: (Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #68                 // InterfaceMethod scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1     f   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.sys.process.ProcessBuilder $hash$less(java.net.URL);
    descriptor: (Ljava/net/URL;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #75                 // InterfaceMethod scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Ljava/net/URL;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1     f   Ljava/net/URL;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.sys.process.ProcessBuilder $hash$less(scala.Function0<java.io.InputStream>);
    descriptor: (Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #82                 // InterfaceMethod scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1    in   Lscala/Function0;
    Signature: #78                          // (Lscala/Function0<Ljava/io/InputStream;>;)Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      in                             final

  public scala.sys.process.ProcessBuilder $hash$less(scala.sys.process.ProcessBuilder);
    descriptor: (Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #88                 // InterfaceMethod scala/sys/process/ProcessBuilder$Sink.$hash$less$:(Lscala/sys/process/ProcessBuilder$Sink;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1     b   Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      b                              final

  public scala.sys.process.ProcessBuilder $hash$greater(java.io.File);
    descriptor: (Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #94                 // InterfaceMethod scala/sys/process/ProcessBuilder$Source.$hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1     f   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.sys.process.ProcessBuilder $hash$greater$greater(java.io.File);
    descriptor: (Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #98                 // InterfaceMethod scala/sys/process/ProcessBuilder$Source.$hash$greater$greater$:(Lscala/sys/process/ProcessBuilder$Source;Ljava/io/File;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1     f   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.sys.process.ProcessBuilder $hash$greater(scala.Function0<java.io.OutputStream>);
    descriptor: (Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #103                // InterfaceMethod scala/sys/process/ProcessBuilder$Source.$hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Lscala/Function0;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1   out   Lscala/Function0;
    Signature: #99                          // (Lscala/Function0<Ljava/io/OutputStream;>;)Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      out                            final

  public scala.sys.process.ProcessBuilder $hash$greater(scala.sys.process.ProcessBuilder);
    descriptor: (Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #106                // InterfaceMethod scala/sys/process/ProcessBuilder$Source.$hash$greater$:(Lscala/sys/process/ProcessBuilder$Source;Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       6     1     b   Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      b                              final

  public scala.sys.process.ProcessBuilder cat();
    descriptor: ()Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #112                // InterfaceMethod scala/sys/process/ProcessBuilder$Source.cat$:(Lscala/sys/process/ProcessBuilder$Source;)Lscala/sys/process/ProcessBuilder;
         4: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public scala.sys.process.ProcessBuilderImpl$AbstractBuilder toSource();
    descriptor: ()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public scala.sys.process.ProcessBuilderImpl$AbstractBuilder toSink();
    descriptor: ()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public scala.sys.process.ProcessBuilder $hash$bar(scala.sys.process.ProcessBuilder);
    descriptor: (Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_1
         1: invokeinterface #121,  1          // InterfaceMethod scala/sys/process/ProcessBuilder.canPipeTo:()Z
         6: ifne          39
         9: new           #123                // class java/lang/IllegalArgumentException
        12: dup
        13: new           #125                // class java/lang/StringBuilder
        16: dup
        17: ldc           #126                // int 20
        19: invokespecial #130                // Method java/lang/StringBuilder."<init>":(I)V
        22: ldc           #132                // String requirement failed:
        24: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: ldc           #138                // String Piping to multiple processes is not supported.
        29: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        32: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: invokespecial #148                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        38: athrow
        39: new           #46                 // class scala/sys/process/ProcessBuilderImpl$PipedBuilder
        42: dup
        43: aload_0
        44: invokevirtual #152                // Method scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer:()Lscala/sys/process/ProcessBuilder$;
        47: aload_0
        48: aload_1
        49: iconst_0
        50: invokespecial #155                // Method scala/sys/process/ProcessBuilderImpl$PipedBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;Z)V
        53: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 39 /* same */
      LineNumberTable:
        line 109: 0
        line 109: 27
        line 109: 29
        line 110: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      54     1 other   Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      other                          final

  public scala.sys.process.ProcessBuilder $hash$bar$bar(scala.sys.process.ProcessBuilder);
    descriptor: (Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #43                 // class scala/sys/process/ProcessBuilderImpl$OrBuilder
         3: dup
         4: aload_0
         5: invokevirtual #152                // Method scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer:()Lscala/sys/process/ProcessBuilder$;
         8: aload_0
         9: aload_1
        10: invokespecial #159                // Method scala/sys/process/ProcessBuilderImpl$OrBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
        13: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      14     1 other   Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      other                          final

  public scala.sys.process.ProcessBuilder $hash$amp$amp(scala.sys.process.ProcessBuilder);
    descriptor: (Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #37                 // class scala/sys/process/ProcessBuilderImpl$AndBuilder
         3: dup
         4: aload_0
         5: invokevirtual #152                // Method scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer:()Lscala/sys/process/ProcessBuilder$;
         8: aload_0
         9: aload_1
        10: invokespecial #161                // Method scala/sys/process/ProcessBuilderImpl$AndBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
        13: areturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      14     1 other   Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      other                          final

  public scala.sys.process.ProcessBuilder $hash$hash$hash(scala.sys.process.ProcessBuilder);
    descriptor: (Lscala/sys/process/ProcessBuilder;)Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #49                 // class scala/sys/process/ProcessBuilderImpl$SequenceBuilder
         3: dup
         4: aload_0
         5: invokevirtual #152                // Method scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer:()Lscala/sys/process/ProcessBuilder$;
         8: aload_0
         9: aload_1
        10: invokespecial #163                // Method scala/sys/process/ProcessBuilderImpl$SequenceBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;)V
        13: areturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      14     1 other   Lscala/sys/process/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      other                          final

  public scala.sys.process.Process run();
    descriptor: ()Lscala/sys/process/Process;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: invokevirtual #168                // Method run:(Z)Lscala/sys/process/Process;
         5: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public scala.sys.process.Process run(boolean);
    descriptor: (Z)Lscala/sys/process/Process;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #175                // Field scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
         4: iload_1
         5: invokevirtual #179                // Method scala/sys/process/BasicIO$.standard:(Z)Lscala/sys/process/ProcessIO;
         8: invokevirtual #182                // Method run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
        11: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      12     1 connectInput   Z
    MethodParameters:
      Name                           Flags
      connectInput                   final

  public scala.sys.process.Process run(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)Lscala/sys/process/Process;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: invokevirtual #188                // Method run:(Lscala/sys/process/ProcessLogger;Z)Lscala/sys/process/Process;
         6: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       7     1   log   Lscala/sys/process/ProcessLogger;
    MethodParameters:
      Name                           Flags
      log                            final

  public scala.sys.process.Process run(scala.sys.process.ProcessLogger, boolean);
    descriptor: (Lscala/sys/process/ProcessLogger;Z)Lscala/sys/process/Process;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: getstatic     #175                // Field scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
         4: iload_2
         5: aload_1
         6: invokevirtual #193                // Method scala/sys/process/BasicIO$.apply:(ZLscala/sys/process/ProcessLogger;)Lscala/sys/process/ProcessIO;
         9: invokevirtual #182                // Method run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
        12: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      13     1   log   Lscala/sys/process/ProcessLogger;
            0      13     2 connectInput   Z
    MethodParameters:
      Name                           Flags
      log                            final
      connectInput                   final

  public java.lang.String $bang$bang();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         4: iconst_0
         5: invokespecial #203                // Method slurp:(Lscala/Option;Z)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public java.lang.String $bang$bang(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #206                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: iconst_0
        10: invokespecial #203                // Method slurp:(Lscala/Option;Z)Ljava/lang/String;
        13: areturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      14     1   log   Lscala/sys/process/ProcessLogger;
    MethodParameters:
      Name                           Flags
      log                            final

  public java.lang.String $bang$bang$less();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         4: iconst_1
         5: invokespecial #203                // Method slurp:(Lscala/Option;Z)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public java.lang.String $bang$bang$less(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #206                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: iconst_1
        10: invokespecial #203                // Method slurp:(Lscala/Option;Z)Ljava/lang/String;
        13: areturn
      LineNumberTable:
        line 124: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      14     1   log   Lscala/sys/process/ProcessLogger;
    MethodParameters:
      Name                           Flags
      log                            final

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines();
    descriptor: ()Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_0
         7: getfield      #215                // Field defaultStreamCapacity:I
        10: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        13: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        16: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
    Signature: #213                         // ()Lscala/collection/immutable/LazyList<Ljava/lang/String;>;

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_0
        12: getfield      #215                // Field defaultStreamCapacity:I
        15: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        18: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        21: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      22     1   log   Lscala/sys/process/ProcessLogger;
    Signature: #226                         // (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      log                            final

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines_$bang();
    descriptor: ()Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_0
         7: getfield      #215                // Field defaultStreamCapacity:I
        10: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        13: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        16: areturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
    Signature: #213                         // ()Lscala/collection/immutable/LazyList<Ljava/lang/String;>;

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines_$bang(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_0
        12: getfield      #215                // Field defaultStreamCapacity:I
        15: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        18: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        21: areturn
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      22     1   log   Lscala/sys/process/ProcessLogger;
    Signature: #226                         // (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      log                            final

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_1
         7: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        10: areturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      11     1 capacity   Ljava/lang/Integer;
    Signature: #229                         // (Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      capacity                       final

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines(scala.sys.process.ProcessLogger, java.lang.Integer);
    descriptor: (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_2
        12: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        15: areturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      16     1   log   Lscala/sys/process/ProcessLogger;
            0      16     2 capacity   Ljava/lang/Integer;
    Signature: #233                         // (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      log                            final
      capacity                       final

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines_$bang(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_1
         7: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        10: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      11     1 capacity   Ljava/lang/Integer;
    Signature: #229                         // (Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      capacity                       final

  public scala.collection.immutable.LazyList<java.lang.String> lazyLines_$bang(scala.sys.process.ProcessLogger, java.lang.Integer);
    descriptor: (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_2
        12: invokespecial #224                // Method lazyLines:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
        15: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      16     1   log   Lscala/sys/process/ProcessLogger;
            0      16     2 capacity   Ljava/lang/Integer;
    Signature: #233                         // (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      log                            final
      capacity                       final

  public scala.collection.immutable.Stream<java.lang.String> lineStream();
    descriptor: ()Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_0
         7: getfield      #215                // Field defaultStreamCapacity:I
        10: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        13: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        16: areturn
      LineNumberTable:
        line 135: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
    Signature: #236                         // ()Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true

  public scala.collection.immutable.Stream<java.lang.String> lineStream(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_0
        12: getfield      #215                // Field defaultStreamCapacity:I
        15: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        18: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        21: areturn
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      22     1   log   Lscala/sys/process/ProcessLogger;
    Signature: #241                         // (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      log                            final

  public scala.collection.immutable.Stream<java.lang.String> lineStream_$bang();
    descriptor: ()Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_0
         7: getfield      #215                // Field defaultStreamCapacity:I
        10: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        13: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        16: areturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
    Signature: #236                         // ()Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true

  public scala.collection.immutable.Stream<java.lang.String> lineStream_$bang(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_0
        12: getfield      #215                // Field defaultStreamCapacity:I
        15: invokestatic  #221                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        18: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        21: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      22     1   log   Lscala/sys/process/ProcessLogger;
    Signature: #241                         // (Lscala/sys/process/ProcessLogger;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      log                            final

  public scala.collection.immutable.Stream<java.lang.String> lineStream(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_1
         7: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        10: areturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      11     1 capacity   Ljava/lang/Integer;
    Signature: #244                         // (Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      capacity                       final

  public scala.collection.immutable.Stream<java.lang.String> lineStream(scala.sys.process.ProcessLogger, java.lang.Integer);
    descriptor: (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: iconst_0
         2: iconst_1
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_2
        12: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        15: areturn
      LineNumberTable:
        line 140: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      16     1   log   Lscala/sys/process/ProcessLogger;
            0      16     2 capacity   Ljava/lang/Integer;
    Signature: #246                         // (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      log                            final
      capacity                       final

  public scala.collection.immutable.Stream<java.lang.String> lineStream_$bang(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: getstatic     #199                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload_1
         7: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        10: areturn
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      11     1 capacity   Ljava/lang/Integer;
    Signature: #244                         // (Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      capacity                       final

  public scala.collection.immutable.Stream<java.lang.String> lineStream_$bang(scala.sys.process.ProcessLogger, java.lang.Integer);
    descriptor: (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: iconst_0
         2: iconst_0
         3: new           #206                // class scala/Some
         6: dup
         7: aload_1
         8: invokespecial #209                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: aload_2
        12: invokespecial #239                // Method lineStream:(ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
        15: areturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      16     1   log   Lscala/sys/process/ProcessLogger;
            0      16     2 capacity   Ljava/lang/Integer;
    Signature: #246                         // (Lscala/sys/process/ProcessLogger;Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      log                            final
      capacity                       final

  public int $bang();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: invokevirtual #168                // Method run:(Z)Lscala/sys/process/Process;
         5: invokeinterface #253,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
        10: ireturn
      LineNumberTable:
        line 144: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public int $bang(scala.sys.process.ProcessIO);
    descriptor: (Lscala/sys/process/ProcessIO;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #182                // Method run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
         5: invokeinterface #253,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
        10: ireturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      11     1    io   Lscala/sys/process/ProcessIO;
    MethodParameters:
      Name                           Flags
      io                             final

  public int $bang(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: invokespecial #261                // Method runBuffered:(Lscala/sys/process/ProcessLogger;Z)I
         6: ireturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       7     1   log   Lscala/sys/process/ProcessLogger;
    MethodParameters:
      Name                           Flags
      log                            final

  public int $bang$less();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_1
         2: invokevirtual #168                // Method run:(Z)Lscala/sys/process/Process;
         5: invokeinterface #253,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
        10: ireturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public int $bang$less(scala.sys.process.ProcessLogger);
    descriptor: (Lscala/sys/process/ProcessLogger;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_1
         3: invokespecial #261                // Method runBuffered:(Lscala/sys/process/ProcessLogger;Z)I
         6: ireturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0       7     1   log   Lscala/sys/process/ProcessLogger;
    MethodParameters:
      Name                           Flags
      log                            final

  public scala.sys.process.ProcessBuilder daemonized();
    descriptor: ()Lscala/sys/process/ProcessBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #40                 // class scala/sys/process/ProcessBuilderImpl$DaemonBuilder
         3: dup
         4: aload_0
         5: invokevirtual #152                // Method scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer:()Lscala/sys/process/ProcessBuilder$;
         8: aload_0
         9: invokespecial #266                // Method scala/sys/process/ProcessBuilderImpl$DaemonBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;Lscala/sys/process/ProcessBuilder;)V
        12: areturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  private java.lang.String slurp(scala.Option<scala.sys.process.ProcessLogger>, boolean);
    descriptor: (Lscala/Option;Z)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=3
         0: new           #270                // class java/lang/StringBuffer
         3: dup
         4: invokespecial #273                // Method java/lang/StringBuffer."<init>":()V
         7: astore_3
         8: aload_0
         9: getstatic     #175                // Field scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
        12: iload_2
        13: aload_3
        14: aload_1
        15: invokevirtual #276                // Method scala/sys/process/BasicIO$.apply:(ZLjava/lang/Appendable;Lscala/Option;)Lscala/sys/process/ProcessIO;
        18: invokevirtual #278                // Method $bang:(Lscala/sys/process/ProcessIO;)I
        21: istore        4
        23: iload         4
        25: iconst_0
        26: if_icmpne     34
        29: aload_3
        30: invokevirtual #279                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
        33: areturn
        34: getstatic     #284                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        37: pop
        38: new           #125                // class java/lang/StringBuilder
        41: dup
        42: ldc           #126                // int 20
        44: invokespecial #130                // Method java/lang/StringBuilder."<init>":(I)V
        47: ldc_w         #286                // String Nonzero exit value:
        50: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        53: iload         4
        55: invokevirtual #289                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        58: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        61: astore        5
        63: new           #291                // class java/lang/RuntimeException
        66: dup
        67: aload         5
        69: invokespecial #292                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        72: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 34
          locals = [ class java/lang/StringBuffer, int ]
      LineNumberTable:
        line 160: 0
        line 161: 8
        line 163: 23
        line 164: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      65     3 buffer   Ljava/lang/StringBuffer;
           23      50     4  code   I
            0      73     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      73     1   log   Lscala/Option;
            0      73     2 withIn   Z
           63      10     5 error_message   Ljava/lang/String;
    Signature: #267                         // (Lscala/Option<Lscala/sys/process/ProcessLogger;>;Z)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      log                            final
      withIn                         final

  private scala.collection.immutable.LazyList<java.lang.String> lazyLines(boolean, boolean, scala.Option<scala.sys.process.ProcessLogger>, java.lang.Integer);
    descriptor: (ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=12, args_size=5
         0: getstatic     #304                // Field scala/sys/process/BasicIO$LazilyListed$.MODULE$:Lscala/sys/process/BasicIO$LazilyListed$;
         3: iload_2
         4: aload         4
         6: invokevirtual #307                // Method scala/sys/process/BasicIO$LazilyListed$.apply:(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed;
         9: astore        5
        11: aload_0
        12: getstatic     #175                // Field scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
        15: iload_1
        16: aload         5
        18: invokevirtual #311                // Method scala/sys/process/BasicIO$LazilyListed.process:()Lscala/Function1;
        21: aload_3
        22: invokevirtual #314                // Method scala/sys/process/BasicIO$.apply:(ZLscala/Function1;Lscala/Option;)Lscala/sys/process/ProcessIO;
        25: invokevirtual #182                // Method run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
        28: astore        6
        30: aload         5
        32: invokevirtual #317                // Method scala/sys/process/BasicIO$LazilyListed.done:()Lscala/Function1;
        35: astore        7
        37: getstatic     #322                // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
        40: invokevirtual #326                // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        43: ldc_w         #328                // String LazyLines
        46: getstatic     #322                // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
        49: invokevirtual #326                // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        52: ifnonnull     57
        55: aconst_null
        56: athrow
        57: iconst_0
        58: istore        11
        60: aload         7
        62: aload         6
        64: invokedynamic #346,  0            // InvokeDynamic #0:apply$mcV$sp:(Lscala/Function1;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
        69: astore        9
        71: astore        8
        73: ifnonnull     78
        76: aconst_null
        77: athrow
        78: new           #57                 // class scala/sys/process/ProcessImpl$Spawn$$anon$1
        81: dup
        82: aconst_null
        83: aload         9
        85: invokespecial #349                // Method scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
        88: astore        10
        90: aload         10
        92: new           #125                // class java/lang/StringBuilder
        95: dup
        96: ldc_w         #350                // int 7
        99: invokespecial #130                // Method java/lang/StringBuilder."<init>":(I)V
       102: aload         8
       104: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       107: ldc_w         #352                // String -spawn-
       110: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       113: aload         10
       115: invokevirtual #357                // Method java/lang/Thread.getName:()Ljava/lang/String;
       118: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       121: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       124: invokevirtual #360                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
       127: aload         10
       129: iload         11
       131: invokevirtual #364                // Method java/lang/Thread.setDaemon:(Z)V
       134: aload         10
       136: invokevirtual #367                // Method java/lang/Thread.start:()V
       139: aconst_null
       140: astore        8
       142: aconst_null
       143: astore        9
       145: aconst_null
       146: astore        10
       148: aload         5
       150: invokevirtual #370                // Method scala/sys/process/BasicIO$LazilyListed.lazyList:()Lscala/collection/immutable/LazyList;
       153: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class scala/sys/process/ProcessBuilderImpl$AbstractBuilder, int, int, class scala/Option, class java/lang/Integer, class scala/sys/process/BasicIO$LazilyListed, class scala/sys/process/Process, class scala/Function1 ]
          stack = [ class scala/sys/process/ProcessImpl$Spawn$, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class scala/sys/process/ProcessBuilderImpl$AbstractBuilder, int, int, class scala/Option, class java/lang/Integer, class scala/sys/process/BasicIO$LazilyListed, class scala/sys/process/Process, class scala/Function1, class java/lang/String, class scala/runtime/java8/JFunction0$mcV$sp, top, int ]
          stack = []
      LineNumberTable:
        line 173: 0
        line 174: 11
        line 177: 30
        line 179: 37
        line 180: 60
        line 187: 148
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     142     5 lazilyListed   Lscala/sys/process/BasicIO$LazilyListed;
           30     123     6 process   Lscala/sys/process/Process;
           37     116     7  done   Lscala/Function1;
            0     154     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0     154     1 withInput   Z
            0     154     2 nonZeroException   Z
            0     154     3   log   Lscala/Option;
            0     154     4 capacity   Ljava/lang/Integer;
           90      49    10 apply_thread   Ljava/lang/Thread;
           78      61     8 apply_prefix   Ljava/lang/String;
           78      61     9 apply_f   Lscala/Function0;
    Signature: #299                         // (ZZLscala/Option<Lscala/sys/process/ProcessLogger;>;Ljava/lang/Integer;)Lscala/collection/immutable/LazyList<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      withInput                      final
      nonZeroException               final
      log                            final
      capacity                       final

  private scala.collection.immutable.Stream<java.lang.String> lineStream(boolean, boolean, scala.Option<scala.sys.process.ProcessLogger>, java.lang.Integer);
    descriptor: (ZZLscala/Option;Ljava/lang/Integer;)Lscala/collection/immutable/Stream;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=11, args_size=5
         0: getstatic     #390                // Field scala/sys/process/BasicIO$Streamed$.MODULE$:Lscala/sys/process/BasicIO$Streamed$;
         3: iload_2
         4: aload         4
         6: invokevirtual #393                // Method scala/sys/process/BasicIO$Streamed$.apply:(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$Streamed;
         9: astore        5
        11: aload_0
        12: getstatic     #175                // Field scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
        15: iload_1
        16: aload         5
        18: invokevirtual #394                // Method scala/sys/process/BasicIO$Streamed.process:()Lscala/Function1;
        21: aload_3
        22: invokevirtual #314                // Method scala/sys/process/BasicIO$.apply:(ZLscala/Function1;Lscala/Option;)Lscala/sys/process/ProcessIO;
        25: invokevirtual #182                // Method run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
        28: astore        6
        30: getstatic     #322                // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
        33: invokevirtual #326                // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        36: ldc_w         #396                // String LineStream
        39: getstatic     #322                // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
        42: invokevirtual #326                // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        45: ifnonnull     50
        48: aconst_null
        49: athrow
        50: iconst_0
        51: istore        10
        53: aload         5
        55: aload         6
        57: invokedynamic #404,  0            // InvokeDynamic #1:apply$mcV$sp:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
        62: astore        8
        64: astore        7
        66: ifnonnull     71
        69: aconst_null
        70: athrow
        71: new           #57                 // class scala/sys/process/ProcessImpl$Spawn$$anon$1
        74: dup
        75: aconst_null
        76: aload         8
        78: invokespecial #349                // Method scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
        81: astore        9
        83: aload         9
        85: new           #125                // class java/lang/StringBuilder
        88: dup
        89: ldc_w         #350                // int 7
        92: invokespecial #130                // Method java/lang/StringBuilder."<init>":(I)V
        95: aload         7
        97: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       100: ldc_w         #352                // String -spawn-
       103: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       106: aload         9
       108: invokevirtual #357                // Method java/lang/Thread.getName:()Ljava/lang/String;
       111: invokevirtual #136                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       114: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       117: invokevirtual #360                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
       120: aload         9
       122: iload         10
       124: invokevirtual #364                // Method java/lang/Thread.setDaemon:(Z)V
       127: aload         9
       129: invokevirtual #367                // Method java/lang/Thread.start:()V
       132: aconst_null
       133: astore        7
       135: aconst_null
       136: astore        8
       138: aconst_null
       139: astore        9
       141: aload         5
       143: invokevirtual #408                // Method scala/sys/process/BasicIO$Streamed.stream:()Lscala/Function0;
       146: invokeinterface #413,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       151: checkcast     #415                // class scala/collection/immutable/Stream
       154: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class scala/sys/process/ProcessBuilderImpl$AbstractBuilder, int, int, class scala/Option, class java/lang/Integer, class scala/sys/process/BasicIO$Streamed, class scala/sys/process/Process ]
          stack = [ class scala/sys/process/ProcessImpl$Spawn$, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class scala/sys/process/ProcessBuilderImpl$AbstractBuilder, int, int, class scala/Option, class java/lang/Integer, class scala/sys/process/BasicIO$Streamed, class scala/sys/process/Process, class java/lang/String, class scala/runtime/java8/JFunction0$mcV$sp, top, int ]
          stack = []
      LineNumberTable:
        line 197: 0
        line 198: 11
        line 200: 30
        line 201: 141
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     143     5 streamed   Lscala/sys/process/BasicIO$Streamed;
           30     124     6 process   Lscala/sys/process/Process;
            0     155     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0     155     1 withInput   Z
            0     155     2 nonZeroException   Z
            0     155     3   log   Lscala/Option;
            0     155     4 capacity   Ljava/lang/Integer;
           83      49     9 apply_thread   Ljava/lang/Thread;
           71      61     7 apply_prefix   Ljava/lang/String;
           71      61     8 apply_f   Lscala/Function0;
    Signature: #387                         // (ZZLscala/Option<Lscala/sys/process/ProcessLogger;>;Ljava/lang/Integer;)Lscala/collection/immutable/Stream<Ljava/lang/String;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      withInput                      final
      nonZeroException               final
      log                            final
      capacity                       final

  private int runBuffered(scala.sys.process.ProcessLogger, boolean);
    descriptor: (Lscala/sys/process/ProcessLogger;Z)I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=3
         0: aload_1
         1: aload_0
         2: aload_1
         3: iload_2
         4: invokedynamic #427,  0            // InvokeDynamic #2:apply$mcI$sp:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)Lscala/runtime/java8/JFunction0$mcI$sp;
         9: invokeinterface #432,  2          // InterfaceMethod scala/sys/process/ProcessLogger.buffer:(Lscala/Function0;)Ljava/lang/Object;
        14: invokestatic  #438                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        17: ireturn
      LineNumberTable:
        line 205: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      18     1   log   Lscala/sys/process/ProcessLogger;
            0      18     2 connectInput   Z
    MethodParameters:
      Name                           Flags
      log                            final
      connectInput                   final

  public boolean canPipeTo();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 207: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public boolean hasExitValue();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 208: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public scala.sys.process.ProcessBuilder$ scala$sys$process$ProcessBuilderImpl$AbstractBuilder$$$outer();
    descriptor: ()Lscala/sys/process/ProcessBuilder$;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #441                // Field $outer:Lscala/sys/process/ProcessBuilder$;
         4: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public scala.sys.process.ProcessBuilder toSink();
    descriptor: ()Lscala/sys/process/ProcessBuilder;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #443                // Method toSink:()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
         4: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public scala.sys.process.ProcessBuilder toSource();
    descriptor: ()Lscala/sys/process/ProcessBuilder;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #445                // Method toSource:()Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
         4: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;

  public static final java.lang.String $anonfun$$hash$bar$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #138                // String Piping to multiple processes is not supported.
         2: areturn
      LineNumberTable:
        line 109: 0

  private static final int liftedTree1$1(scala.sys.process.Process);
    descriptor: (Lscala/sys/process/Process;)I
    flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokeinterface #253,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
         6: ireturn
         7: astore_2
         8: aload_2
         9: ifnull        31
        12: getstatic     #456                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
        15: aload_2
        16: invokevirtual #460                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
        19: invokevirtual #463                // Method scala/Option.isEmpty:()Z
        22: ifne          31
        25: bipush        -2
        27: istore_1
        28: goto          33
        31: aload_2
        32: athrow
        33: iload_1
        34: ireturn
      Exception table:
         from    to  target type
             0     6     7   Class java/lang/Throwable
      StackMapTable: number_of_entries = 3
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ top, class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/sys/process/Process, int, class java/lang/Throwable ]
          stack = []
      LineNumberTable:
        line 181: 0
        line 183: 8
        line 181: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0 process$2   Lscala/sys/process/Process;
    MethodParameters:
      Name                           Flags
      process$2                      final

  public static final void $anonfun$lazyLines$1(scala.Function1, scala.sys.process.Process);
    descriptor: (Lscala/Function1;Lscala/sys/process/Process;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #466                // Method liftedTree1$1:(Lscala/sys/process/Process;)I
         5: invokeinterface #469,  2          // InterfaceMethod scala/Function1.apply$mcVI$sp:(I)V
        10: return
      LineNumberTable:
        line 180: 0
        line 181: 1
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 done$1   Lscala/Function1;
            0      11     1 process$2   Lscala/sys/process/Process;
    MethodParameters:
      Name                           Flags
      done$1                         final
      process$2                      final

  public static final void $anonfun$lineStream$1(scala.sys.process.BasicIO$Streamed, scala.sys.process.Process);
    descriptor: (Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #472                // Method scala/sys/process/BasicIO$Streamed.done:()Lscala/Function1;
         4: aload_1
         5: invokeinterface #253,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
        10: invokeinterface #469,  2          // InterfaceMethod scala/Function1.apply$mcVI$sp:(I)V
        15: return
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 streamed$1   Lscala/sys/process/BasicIO$Streamed;
            0      16     1 process$3   Lscala/sys/process/Process;
    MethodParameters:
      Name                           Flags
      streamed$1                     final
      process$3                      final

  public static final int $anonfun$runBuffered$1(scala.sys.process.ProcessBuilderImpl$AbstractBuilder, scala.sys.process.ProcessLogger, boolean);
    descriptor: (Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokevirtual #188                // Method run:(Lscala/sys/process/ProcessLogger;Z)Lscala/sys/process/Process;
         6: invokeinterface #253,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
        11: ireturn
      LineNumberTable:
        line 205: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      12     1 log$1   Lscala/sys/process/ProcessLogger;
            0      12     2 connectInput$1   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      log$1                          final
      connectInput$1                 final

  public scala.sys.process.ProcessBuilderImpl$AbstractBuilder(scala.sys.process.ProcessBuilder$);
    descriptor: (Lscala/sys/process/ProcessBuilder$;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #441                // Field $outer:Lscala/sys/process/ProcessBuilder$;
        11: aload_0
        12: invokespecial #477                // Method java/lang/Object."<init>":()V
        15: aload_0
        16: sipush        4096
        19: putfield      #215                // Field defaultStreamCapacity:I
        22: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 102: 0
        line 106: 15
        line 102: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;
            0      23     1 $outer   Lscala/sys/process/ProcessBuilder$;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #489,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // LazilyListed=class scala/sys/process/BasicIO$LazilyListed of class scala/sys/process/BasicIO
  public static #20= #19 of #16;          // LazilyListed$=class scala/sys/process/BasicIO$LazilyListed$ of class scala/sys/process/BasicIO
  public static final #23= #22 of #16;    // Streamed=class scala/sys/process/BasicIO$Streamed of class scala/sys/process/BasicIO
  public static #26= #25 of #16;          // Streamed$=class scala/sys/process/BasicIO$Streamed$ of class scala/sys/process/BasicIO
  public static #29= #28 of #6;           // Sink=class scala/sys/process/ProcessBuilder$Sink of class scala/sys/process/ProcessBuilder
  public static #32= #31 of #6;           // Source=class scala/sys/process/ProcessBuilder$Source of class scala/sys/process/ProcessBuilder
  public abstract #35= #2 of #34;         // AbstractBuilder=class scala/sys/process/ProcessBuilderImpl$AbstractBuilder of class scala/sys/process/ProcessBuilderImpl
  public #38= #37 of #34;                 // AndBuilder=class scala/sys/process/ProcessBuilderImpl$AndBuilder of class scala/sys/process/ProcessBuilderImpl
  public #41= #40 of #34;                 // DaemonBuilder=class scala/sys/process/ProcessBuilderImpl$DaemonBuilder of class scala/sys/process/ProcessBuilderImpl
  public #44= #43 of #34;                 // OrBuilder=class scala/sys/process/ProcessBuilderImpl$OrBuilder of class scala/sys/process/ProcessBuilderImpl
  public #47= #46 of #34;                 // PipedBuilder=class scala/sys/process/ProcessBuilderImpl$PipedBuilder of class scala/sys/process/ProcessBuilderImpl
  public #50= #49 of #34;                 // SequenceBuilder=class scala/sys/process/ProcessBuilderImpl$SequenceBuilder of class scala/sys/process/ProcessBuilderImpl
  public #55= #52 of #54;                 // Spawn$=class scala/sys/process/ProcessImpl$Spawn$ of class scala/sys/process/ProcessImpl
  public final #57;                       // class scala/sys/process/ProcessImpl$Spawn$$anon$1
SourceFile: "ProcessBuilderImpl.scala"
BootstrapMethods:
  0: #342 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #329 ()V
      #334 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lazyLines$1:(Lscala/Function1;Lscala/sys/process/Process;)V
      #329 ()V
      #335 1
  1: #342 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #329 ()V
      #401 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lineStream$1:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)V
      #329 ()V
      #335 1
  2: #342 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #418 ()I
      #423 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$runBuffered$1:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)I
      #418 ()I
      #335 1
  3: #486 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lazyLines$1:(Lscala/Function1;Lscala/sys/process/Process;)V
      #401 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$lineStream$1:(Lscala/sys/process/BasicIO$Streamed;Lscala/sys/process/Process;)V
      #423 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$AbstractBuilder.$anonfun$runBuffered$1:(Lscala/sys/process/ProcessBuilderImpl$AbstractBuilder;Lscala/sys/process/ProcessLogger;Z)I
  ScalaInlineInfo: length = 0x130 (unknown attribute)
   01 00 00 3C 01 BE 00 8F 01 01 4A 01 4B 01 01 8D
   01 8E 01 01 A3 01 A4 01 00 F7 00 F8 00 00 F7 00
   FE 00 00 F7 01 01 00 00 C2 00 8F 00 00 C2 00 CC
   00 00 D2 00 8F 00 00 D2 00 CC 00 01 06 00 F8 00
   01 06 01 01 00 00 A0 00 54 00 00 74 00 54 00 00
   9C 00 54 00 00 5A 00 3F 00 00 5A 00 4D 00 00 5A
   00 54 00 00 5F 00 3F 00 00 A2 00 54 00 00 3E 00
   3F 00 00 3E 00 48 00 00 3E 00 4D 00 00 3E 00 54
   00 00 7F 01 DC 00 00 76 00 77 00 00 6B 00 6C 00
   01 07 00 6C 00 01 B7 00 77 00 00 D3 00 D4 00 00
   D3 00 E4 00 00 D3 00 E1 00 00 D3 00 E8 00 00 D3
   00 DE 01 00 E3 00 D4 00 00 E3 00 E4 00 00 E3 00
   E1 00 00 E3 00 E8 00 01 BF 01 C0 01 00 EA 00 EB
   00 00 EA 00 F3 00 00 EA 00 F0 00 00 EA 00 F5 00
   00 EA 00 ED 01 00 F2 00 EB 00 00 F2 00 F3 00 00
   F2 00 F0 00 00 F2 00 F5 00 00 A4 00 A5 00 00 A4
   00 B8 00 00 A4 00 BA 00 00 A4 00 A6 00 01 02 01
   03 01 00 95 00 96 00 00 C8 00 C9 01 00 73 00 6C
   00 00 73 00 72 00 00 71 00 6C 00 00 71 00 72 00

  Scala: length = 0x0 (unknown attribute)

