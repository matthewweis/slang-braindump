Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/TeeInputStream.class
  Last modified May 29, 2022; size 1622 bytes
  SHA-256 checksum 83f4e060455886d637d611a2fcc1cf7180da05f2ef9f05b51a95acaee4eec466
  Compiled from "TeeInputStream.java"
public class org.apache.commons.io.input.TeeInputStream extends org.apache.commons.io.input.ProxyInputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #13                         // org/apache/commons/io/input/TeeInputStream
  super_class: #14                        // org/apache/commons/io/input/ProxyInputStream
  interfaces: 0, fields: 2, methods: 6, attributes: 1
Constant pool:
   #1 = Class              #48            // org/apache/commons/io/IOUtils
   #2 = Methodref          #13.#49        // org/apache/commons/io/input/TeeInputStream."<init>":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
   #3 = Methodref          #14.#50        // org/apache/commons/io/input/ProxyInputStream."<init>":(Ljava/io/InputStream;)V
   #4 = Fieldref           #13.#51        // org/apache/commons/io/input/TeeInputStream.branch:Ljava/io/OutputStream;
   #5 = Fieldref           #13.#52        // org/apache/commons/io/input/TeeInputStream.closeBranch:Z
   #6 = Methodref          #14.#53        // org/apache/commons/io/input/ProxyInputStream.close:()V
   #7 = Methodref          #54.#53        // java/io/OutputStream.close:()V
   #8 = Methodref          #14.#55        // org/apache/commons/io/input/ProxyInputStream.read:()I
   #9 = Methodref          #54.#56        // java/io/OutputStream.write:(I)V
  #10 = Methodref          #14.#57        // org/apache/commons/io/input/ProxyInputStream.read:([BII)I
  #11 = Methodref          #54.#58        // java/io/OutputStream.write:([BII)V
  #12 = Methodref          #14.#59        // org/apache/commons/io/input/ProxyInputStream.read:([B)I
  #13 = Class              #60            // org/apache/commons/io/input/TeeInputStream
  #14 = Class              #61            // org/apache/commons/io/input/ProxyInputStream
  #15 = Utf8               branch
  #16 = Utf8               Ljava/io/OutputStream;
  #17 = Utf8               closeBranch
  #18 = Utf8               Z
  #19 = Utf8               <init>
  #20 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)V
  #21 = Utf8               Code
  #22 = Utf8               LineNumberTable
  #23 = Utf8               LocalVariableTable
  #24 = Utf8               this
  #25 = Utf8               Lorg/apache/commons/io/input/TeeInputStream;
  #26 = Utf8               input
  #27 = Utf8               Ljava/io/InputStream;
  #28 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
  #29 = Utf8               close
  #30 = Utf8               ()V
  #31 = Utf8               StackMapTable
  #32 = Class              #62            // java/lang/Throwable
  #33 = Utf8               Exceptions
  #34 = Class              #63            // java/io/IOException
  #35 = Utf8               read
  #36 = Utf8               ()I
  #37 = Utf8               ch
  #38 = Utf8               I
  #39 = Utf8               ([BII)I
  #40 = Utf8               bts
  #41 = Utf8               [B
  #42 = Utf8               st
  #43 = Utf8               end
  #44 = Utf8               n
  #45 = Utf8               ([B)I
  #46 = Utf8               SourceFile
  #47 = Utf8               TeeInputStream.java
  #48 = Utf8               org/apache/commons/io/IOUtils
  #49 = NameAndType        #19:#28        // "<init>":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
  #50 = NameAndType        #19:#64        // "<init>":(Ljava/io/InputStream;)V
  #51 = NameAndType        #15:#16        // branch:Ljava/io/OutputStream;
  #52 = NameAndType        #17:#18        // closeBranch:Z
  #53 = NameAndType        #29:#30        // close:()V
  #54 = Class              #65            // java/io/OutputStream
  #55 = NameAndType        #35:#36        // read:()I
  #56 = NameAndType        #66:#67        // write:(I)V
  #57 = NameAndType        #35:#39        // read:([BII)I
  #58 = NameAndType        #66:#68        // write:([BII)V
  #59 = NameAndType        #35:#45        // read:([B)I
  #60 = Utf8               org/apache/commons/io/input/TeeInputStream
  #61 = Utf8               org/apache/commons/io/input/ProxyInputStream
  #62 = Utf8               java/lang/Throwable
  #63 = Utf8               java/io/IOException
  #64 = Utf8               (Ljava/io/InputStream;)V
  #65 = Utf8               java/io/OutputStream
  #66 = Utf8               write
  #67 = Utf8               (I)V
  #68 = Utf8               ([BII)V
{
  private final java.io.OutputStream branch;
    descriptor: Ljava/io/OutputStream;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean closeBranch;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.input.TeeInputStream(java.io.InputStream, java.io.OutputStream);
    descriptor: (Ljava/io/InputStream;Ljava/io/OutputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
         7: return
      LineNumberTable:
        line 62: 0
        line 63: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/input/TeeInputStream;
            0       8     1 input   Ljava/io/InputStream;
            0       8     2 branch   Ljava/io/OutputStream;

  public org.apache.commons.io.input.TeeInputStream(java.io.InputStream, java.io.OutputStream, boolean);
    descriptor: (Ljava/io/InputStream;Ljava/io/OutputStream;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyInputStream."<init>":(Ljava/io/InputStream;)V
         5: aload_0
         6: aload_2
         7: putfield      #4                  // Field branch:Ljava/io/OutputStream;
        10: aload_0
        11: iload_3
        12: putfield      #5                  // Field closeBranch:Z
        15: return
      LineNumberTable:
        line 78: 0
        line 79: 5
        line 80: 10
        line 81: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/input/TeeInputStream;
            0      16     1 input   Ljava/io/InputStream;
            0      16     2 branch   Ljava/io/OutputStream;
            0      16     3 closeBranch   Z

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokespecial #6                  // Method org/apache/commons/io/input/ProxyInputStream.close:()V
         4: aload_0
         5: getfield      #5                  // Field closeBranch:Z
         8: ifeq          38
        11: aload_0
        12: getfield      #4                  // Field branch:Ljava/io/OutputStream;
        15: invokevirtual #7                  // Method java/io/OutputStream.close:()V
        18: goto          38
        21: astore_1
        22: aload_0
        23: getfield      #5                  // Field closeBranch:Z
        26: ifeq          36
        29: aload_0
        30: getfield      #4                  // Field branch:Ljava/io/OutputStream;
        33: invokevirtual #7                  // Method java/io/OutputStream.close:()V
        36: aload_1
        37: athrow
        38: return
      Exception table:
         from    to  target type
             0     4    21   any
      LineNumberTable:
        line 93: 0
        line 95: 4
        line 96: 11
        line 95: 21
        line 96: 29
        line 98: 36
        line 99: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/apache/commons/io/input/TeeInputStream;
      StackMapTable: number_of_entries = 3
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 1
    Exceptions:
      throws java.io.IOException

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method org/apache/commons/io/input/ProxyInputStream.read:()I
         4: istore_1
         5: iload_1
         6: iconst_m1
         7: if_icmpeq     18
        10: aload_0
        11: getfield      #4                  // Field branch:Ljava/io/OutputStream;
        14: iload_1
        15: invokevirtual #9                  // Method java/io/OutputStream.write:(I)V
        18: iload_1
        19: ireturn
      LineNumberTable:
        line 110: 0
        line 111: 5
        line 112: 10
        line 114: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/apache/commons/io/input/TeeInputStream;
            5      15     1    ch   I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: invokespecial #10                 // Method org/apache/commons/io/input/ProxyInputStream.read:([BII)I
         7: istore        4
         9: iload         4
        11: iconst_m1
        12: if_icmpeq     26
        15: aload_0
        16: getfield      #4                  // Field branch:Ljava/io/OutputStream;
        19: aload_1
        20: iload_2
        21: iload         4
        23: invokevirtual #11                 // Method java/io/OutputStream.write:([BII)V
        26: iload         4
        28: ireturn
      LineNumberTable:
        line 129: 0
        line 130: 9
        line 131: 15
        line 133: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/apache/commons/io/input/TeeInputStream;
            0      29     1   bts   [B
            0      29     2    st   I
            0      29     3   end   I
            9      20     4     n   I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read(byte[]) throws java.io.IOException;
    descriptor: ([B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #12                 // Method org/apache/commons/io/input/ProxyInputStream.read:([B)I
         5: istore_2
         6: iload_2
         7: iconst_m1
         8: if_icmpeq     21
        11: aload_0
        12: getfield      #4                  // Field branch:Ljava/io/OutputStream;
        15: aload_1
        16: iconst_0
        17: iload_2
        18: invokevirtual #11                 // Method java/io/OutputStream.write:([BII)V
        21: iload_2
        22: ireturn
      LineNumberTable:
        line 146: 0
        line 147: 6
        line 148: 11
        line 150: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/io/input/TeeInputStream;
            0      23     1   bts   [B
            6      17     2     n   I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ int ]
    Exceptions:
      throws java.io.IOException
}
SourceFile: "TeeInputStream.java"
