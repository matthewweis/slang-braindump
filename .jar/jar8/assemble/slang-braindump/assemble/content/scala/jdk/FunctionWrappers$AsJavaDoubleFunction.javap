Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/jdk/FunctionWrappers$AsJavaDoubleFunction.class
  Last modified May 29, 2022; size 3741 bytes
  SHA-256 checksum 9cc937d6ff3d1a527ff3707b53b5a613a13ad9842afcee5031c0fea7418afcea
  Compiled from "FunctionWrappers.scala"
public class scala.jdk.FunctionWrappers$AsJavaDoubleFunction<R extends java.lang.Object> extends java.lang.Object implements java.util.function.DoubleFunction<R>, scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/jdk/FunctionWrappers$AsJavaDoubleFunction
  super_class: #5                         // java/lang/Object
  interfaces: 3, fields: 1, methods: 15, attributes: 5
Constant pool:
    #1 = Utf8               scala/jdk/FunctionWrappers$AsJavaDoubleFunction
    #2 = Class              #1            // scala/jdk/FunctionWrappers$AsJavaDoubleFunction
    #3 = Utf8               <R:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/function/DoubleFunction<TR;>;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               java/util/function/DoubleFunction
    #7 = Class              #6            // java/util/function/DoubleFunction
    #8 = Utf8               scala/Product
    #9 = Class              #8            // scala/Product
   #10 = Utf8               java/io/Serializable
   #11 = Class              #10           // java/io/Serializable
   #12 = Utf8               FunctionWrappers.scala
   #13 = Utf8               scala/jdk/FunctionWrappers
   #14 = Class              #13           // scala/jdk/FunctionWrappers
   #15 = Utf8               AsJavaDoubleFunction
   #16 = Utf8               scala/runtime/ScalaRunTime$$anon$1
   #17 = Class              #16           // scala/runtime/ScalaRunTime$$anon$1
   #18 = Utf8               sf
   #19 = Utf8               Lscala/Function1;
   #20 = Utf8               Lscala/Function1<Ljava/lang/Object;TR;>;
   #21 = Utf8               productElementNames
   #22 = Utf8               ()Lscala/collection/Iterator;
   #23 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #24 = Utf8               productElementNames$
   #25 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #26 = NameAndType        #24:#25       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #27 = InterfaceMethodref #9.#26        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #28 = Utf8               this
   #29 = Utf8               Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
   #30 = Utf8               ()Lscala/Function1;
   #31 = Utf8               ()Lscala/Function1<Ljava/lang/Object;TR;>;
   #32 = NameAndType        #18:#19       // sf:Lscala/Function1;
   #33 = Fieldref           #2.#32        // scala/jdk/FunctionWrappers$AsJavaDoubleFunction.sf:Lscala/Function1;
   #34 = Utf8               apply
   #35 = Utf8               (D)Ljava/lang/Object;
   #36 = Utf8               (D)TR;
   #37 = Utf8               x1
   #38 = NameAndType        #18:#30       // sf:()Lscala/Function1;
   #39 = Methodref          #2.#38        // scala/jdk/FunctionWrappers$AsJavaDoubleFunction.sf:()Lscala/Function1;
   #40 = Utf8               java/lang/Double
   #41 = Class              #40           // java/lang/Double
   #42 = Utf8               valueOf
   #43 = Utf8               (D)Ljava/lang/Double;
   #44 = NameAndType        #42:#43       // valueOf:(D)Ljava/lang/Double;
   #45 = Methodref          #41.#44       // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #46 = Utf8               scala/Function1
   #47 = Class              #46           // scala/Function1
   #48 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #49 = NameAndType        #34:#48       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #50 = InterfaceMethodref #47.#49       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #51 = Utf8               D
   #52 = Utf8               copy
   #53 = Utf8               (Lscala/Function1;)Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
   #54 = Utf8               <R:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Object;TR;>;)Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction<TR;>;
   #55 = Utf8               <init>
   #56 = Utf8               (Lscala/Function1;)V
   #57 = NameAndType        #55:#56       // "<init>":(Lscala/Function1;)V
   #58 = Methodref          #2.#57        // scala/jdk/FunctionWrappers$AsJavaDoubleFunction."<init>":(Lscala/Function1;)V
   #59 = Utf8               copy$default$1
   #60 = Utf8               <R:Ljava/lang/Object;>()Lscala/Function1<Ljava/lang/Object;TR;>;
   #61 = Utf8               productPrefix
   #62 = Utf8               ()Ljava/lang/String;
   #63 = String             #15           // AsJavaDoubleFunction
   #64 = Utf8               productArity
   #65 = Utf8               ()I
   #66 = Utf8               productElement
   #67 = Utf8               (I)Ljava/lang/Object;
   #68 = Utf8               x$1
   #69 = Utf8               scala/runtime/Statics
   #70 = Class              #69           // scala/runtime/Statics
   #71 = Utf8               ioobe
   #72 = NameAndType        #71:#67       // ioobe:(I)Ljava/lang/Object;
   #73 = Methodref          #70.#72       // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
   #74 = Utf8               I
   #75 = Utf8               productIterator
   #76 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #77 = Utf8               (Lscala/Product;)V
   #78 = NameAndType        #55:#77       // "<init>":(Lscala/Product;)V
   #79 = Methodref          #17.#78       // scala/runtime/ScalaRunTime$$anon$1."<init>":(Lscala/Product;)V
   #80 = Utf8               canEqual
   #81 = Utf8               (Ljava/lang/Object;)Z
   #82 = Utf8               Ljava/lang/Object;
   #83 = Utf8               productElementName
   #84 = Utf8               (I)Ljava/lang/String;
   #85 = String             #18           // sf
   #86 = Utf8               java/lang/String
   #87 = Class              #86           // java/lang/String
   #88 = Utf8               hashCode
   #89 = Utf8               scala/util/hashing/MurmurHash3$
   #90 = Class              #89           // scala/util/hashing/MurmurHash3$
   #91 = Utf8               MODULE$
   #92 = Utf8               Lscala/util/hashing/MurmurHash3$;
   #93 = NameAndType        #91:#92       // MODULE$:Lscala/util/hashing/MurmurHash3$;
   #94 = Fieldref           #90.#93       // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
   #95 = Utf8               productHash
   #96 = Utf8               (Lscala/Product;)I
   #97 = NameAndType        #95:#96       // productHash:(Lscala/Product;)I
   #98 = Methodref          #90.#97       // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
   #99 = Utf8               toString
  #100 = Utf8               scala/runtime/ScalaRunTime$
  #101 = Class              #100          // scala/runtime/ScalaRunTime$
  #102 = Utf8               Lscala/runtime/ScalaRunTime$;
  #103 = NameAndType        #91:#102      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #104 = Fieldref           #101.#103     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #105 = Utf8               _toString
  #106 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #107 = NameAndType        #105:#106     // _toString:(Lscala/Product;)Ljava/lang/String;
  #108 = Methodref          #101.#107     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #109 = Utf8               equals
  #110 = NameAndType        #109:#81      // equals:(Ljava/lang/Object;)Z
  #111 = Methodref          #5.#110       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #112 = NameAndType        #80:#81       // canEqual:(Ljava/lang/Object;)Z
  #113 = Methodref          #2.#112       // scala/jdk/FunctionWrappers$AsJavaDoubleFunction.canEqual:(Ljava/lang/Object;)Z
  #114 = Utf8               (Lscala/Function1<Ljava/lang/Object;TR;>;)V
  #115 = Utf8               ()V
  #116 = NameAndType        #55:#115      // "<init>":()V
  #117 = Methodref          #5.#116       // java/lang/Object."<init>":()V
  #118 = Utf8               Signature
  #119 = Utf8               Code
  #120 = Utf8               LineNumberTable
  #121 = Utf8               LocalVariableTable
  #122 = Utf8               MethodParameters
  #123 = Utf8               StackMapTable
  #124 = Utf8               InnerClasses
  #125 = Utf8               SourceFile
  #126 = Utf8               ScalaInlineInfo
  #127 = Utf8               Scala
{
  private final scala.Function1<java.lang.Object, R> sf;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/Function1<Ljava/lang/Object;TR;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #27                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
    Signature: #23                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public scala.Function1<java.lang.Object, R> sf();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #33                 // Field sf:Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
    Signature: #31                          // ()Lscala/Function1<Ljava/lang/Object;TR;>;

  public R apply(double);
    descriptor: (D)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #39                 // Method sf:()Lscala/Function1;
         4: dload_1
         5: invokestatic  #45                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
         8: invokeinterface #50,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: areturn
      LineNumberTable:
        line 235: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
            0      14     1    x1   D
    Signature: #36                          // (D)TR;
    MethodParameters:
      Name                           Flags
      x1                             final

  public <R extends java.lang.Object> scala.jdk.FunctionWrappers$AsJavaDoubleFunction<R> copy(scala.Function1<java.lang.Object, R>);
    descriptor: (Lscala/Function1;)Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class scala/jdk/FunctionWrappers$AsJavaDoubleFunction
         3: dup
         4: aload_1
         5: invokespecial #58                 // Method "<init>":(Lscala/Function1;)V
         8: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
            0       9     1    sf   Lscala/Function1;
    Signature: #54                          // <R:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Object;TR;>;)Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction<TR;>;
    MethodParameters:
      Name                           Flags
      sf                             final

  public <R extends java.lang.Object> scala.Function1<java.lang.Object, R> copy$default$1();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #39                 // Method sf:()Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
    Signature: #60                          // <R:Ljava/lang/Object;>()Lscala/Function1<Ljava/lang/Object;TR;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #63                 // String AsJavaDoubleFunction
         2: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: tableswitch   { // 0 to 0
                       0: 20
                 default: 25
            }
        20: aload_0
        21: invokevirtual #39                 // Method sf:()Lscala/Function1;
        24: areturn
        25: iload_1
        26: invokestatic  #73                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        29: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 4 /* same */
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
            0      30     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #17                 // class scala/runtime/ScalaRunTime$$anon$1
         3: dup
         4: aload_0
         5: invokespecial #79                 // Method scala/runtime/ScalaRunTime$$anon$1."<init>":(Lscala/Product;)V
         8: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
    Signature: #76                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/jdk/FunctionWrappers$AsJavaDoubleFunction
         4: ireturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: tableswitch   { // 0 to 0
                       0: 20
                 default: 23
            }
        20: ldc           #85                 // String sf
        22: areturn
        23: iload_1
        24: invokestatic  #73                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        27: checkcast     #87                 // class java/lang/String
        30: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
            0      31     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #94                 // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
         3: aload_0
         4: invokevirtual #98                 // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #104                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #108                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     75
         5: aload_1
         6: instanceof    #2                  // class scala/jdk/FunctionWrappers$AsJavaDoubleFunction
         9: ifeq          17
        12: iconst_1
        13: istore_2
        14: goto          19
        17: iconst_0
        18: istore_2
        19: iload_2
        20: ifeq          77
        23: aload_1
        24: checkcast     #2                  // class scala/jdk/FunctionWrappers$AsJavaDoubleFunction
        27: astore_3
        28: aload_0
        29: invokevirtual #39                 // Method sf:()Lscala/Function1;
        32: aload_3
        33: invokevirtual #39                 // Method sf:()Lscala/Function1;
        36: astore        4
        38: dup
        39: ifnonnull     51
        42: pop
        43: aload         4
        45: ifnull        59
        48: goto          71
        51: aload         4
        53: invokevirtual #111                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          71
        59: aload_3
        60: aload_0
        61: invokevirtual #113                // Method canEqual:(Ljava/lang/Object;)Z
        64: ifeq          71
        67: iconst_1
        68: goto          72
        71: iconst_0
        72: ifeq          77
        75: iconst_1
        76: ireturn
        77: iconst_0
        78: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class scala/jdk/FunctionWrappers$AsJavaDoubleFunction, class java/lang/Object, int, class scala/jdk/FunctionWrappers$AsJavaDoubleFunction, class scala/Function1 ]
          stack = [ class scala/Function1 ]
        frame_type = 7 /* same */
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      79     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
            0      79     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.jdk.FunctionWrappers$AsJavaDoubleFunction(scala.Function1<java.lang.Object, R>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #33                 // Field sf:Lscala/Function1;
         5: aload_0
         6: invokespecial #117                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/jdk/FunctionWrappers$AsJavaDoubleFunction;
            0      10     1    sf   Lscala/Function1;
    Signature: #114                         // (Lscala/Function1<Ljava/lang/Object;TR;>;)V
    MethodParameters:
      Name                           Flags
      sf                             final
}
InnerClasses:
  public static #15= #2 of #14;           // AsJavaDoubleFunction=class scala/jdk/FunctionWrappers$AsJavaDoubleFunction of class scala/jdk/FunctionWrappers
  public final #17;                       // class scala/runtime/ScalaRunTime$$anon$1
Signature: #3                           // <R:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/function/DoubleFunction<TR;>;Lscala/Product;Ljava/io/Serializable;
SourceFile: "FunctionWrappers.scala"
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 00 00 0F 00 37 00 38 00 00 22 00 23 00 00 50
   00 51 00 00 34 00 35 00 00 3B 00 1E 00 00 6D 00
   51 00 00 58 00 41 00 00 40 00 41 00 00 42 00 43
   00 00 53 00 54 00 00 15 00 16 00 00 4B 00 16 00
   00 3D 00 3E 00 00 12 00 1E 00 00 63 00 3E 00
  Scala: length = 0x0 (unknown attribute)

