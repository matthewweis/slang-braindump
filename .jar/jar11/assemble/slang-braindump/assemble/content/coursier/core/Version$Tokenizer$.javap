Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/core/Version$Tokenizer$.class
  Last modified May 29, 2022; size 12021 bytes
  SHA-256 checksum c9bdb2d7e164db9b3eb898a7b38af257de17d464aa38f6a62a14d1d93209af62
  Compiled from "Version.scala"
public class coursier.core.Version$Tokenizer$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/core/Version$Tokenizer$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 12, attributes: 5
Constant pool:
    #1 = Utf8               coursier/core/Version$Tokenizer$
    #2 = Class              #1            // coursier/core/Version$Tokenizer$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Version.scala
    #6 = Utf8               coursier/core/Version$BigNumber
    #7 = Class              #6            // coursier/core/Version$BigNumber
    #8 = Utf8               coursier/core/Version
    #9 = Class              #8            // coursier/core/Version
   #10 = Utf8               BigNumber
   #11 = Utf8               coursier/core/Version$BigNumber$
   #12 = Class              #11           // coursier/core/Version$BigNumber$
   #13 = Utf8
   #14 = Utf8               coursier/core/Version$BuildMetadata
   #15 = Class              #14           // coursier/core/Version$BuildMetadata
   #16 = Utf8               BuildMetadata
   #17 = Utf8               coursier/core/Version$BuildMetadata$
   #18 = Class              #17           // coursier/core/Version$BuildMetadata$
   #19 = Utf8               coursier/core/Version$Item
   #20 = Class              #19           // coursier/core/Version$Item
   #21 = Utf8               Item
   #22 = Utf8               coursier/core/Version$Max$
   #23 = Class              #22           // coursier/core/Version$Max$
   #24 = Utf8               coursier/core/Version$Min$
   #25 = Class              #24           // coursier/core/Version$Min$
   #26 = Utf8               coursier/core/Version$Number
   #27 = Class              #26           // coursier/core/Version$Number
   #28 = Utf8               Number
   #29 = Utf8               coursier/core/Version$Number$
   #30 = Class              #29           // coursier/core/Version$Number$
   #31 = Utf8               coursier/core/Version$Tag
   #32 = Class              #31           // coursier/core/Version$Tag
   #33 = Utf8               Tag
   #34 = Utf8               coursier/core/Version$Tag$
   #35 = Class              #34           // coursier/core/Version$Tag$
   #36 = Utf8               coursier/core/Version$Tokenizer$Dot$
   #37 = Class              #36           // coursier/core/Version$Tokenizer$Dot$
   #38 = Utf8               coursier/core/Version$Tokenizer$Hyphen$
   #39 = Class              #38           // coursier/core/Version$Tokenizer$Hyphen$
   #40 = Utf8               coursier/core/Version$Tokenizer$None$
   #41 = Class              #40           // coursier/core/Version$Tokenizer$None$
   #42 = Utf8               coursier/core/Version$Tokenizer$Plus$
   #43 = Class              #42           // coursier/core/Version$Tokenizer$Plus$
   #44 = Utf8               coursier/core/Version$Tokenizer$Separator
   #45 = Class              #44           // coursier/core/Version$Tokenizer$Separator
   #46 = Utf8               Separator
   #47 = Utf8               coursier/core/Version$Tokenizer$Underscore$
   #48 = Class              #47           // coursier/core/Version$Tokenizer$Underscore$
   #49 = Utf8               coursier/core/compatibility/package$RichChar$
   #50 = Class              #49           // coursier/core/compatibility/package$RichChar$
   #51 = Utf8               coursier/core/compatibility/package
   #52 = Class              #51           // coursier/core/compatibility/package
   #53 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #54 = Class              #53           // java/lang/invoke/MethodHandles$Lookup
   #55 = Utf8               java/lang/invoke/MethodHandles
   #56 = Class              #55           // java/lang/invoke/MethodHandles
   #57 = Utf8               Lookup
   #58 = Utf8               scala/collection/immutable/LazyList$Deferrer$
   #59 = Class              #58           // scala/collection/immutable/LazyList$Deferrer$
   #60 = Utf8               scala/collection/immutable/LazyList
   #61 = Class              #60           // scala/collection/immutable/LazyList
   #62 = Utf8               MODULE$
   #63 = Utf8               Lcoursier/core/Version$Tokenizer$;
   #64 = Utf8               <clinit>
   #65 = Utf8               ()V
   #66 = Utf8               <init>
   #67 = NameAndType        #66:#65       // "<init>":()V
   #68 = Methodref          #2.#67        // coursier/core/Version$Tokenizer$."<init>":()V
   #69 = NameAndType        #62:#63       // MODULE$:Lcoursier/core/Version$Tokenizer$;
   #70 = Fieldref           #2.#69        // coursier/core/Version$Tokenizer$.MODULE$:Lcoursier/core/Version$Tokenizer$;
   #71 = Utf8               apply
   #72 = Utf8               (Ljava/lang/String;)Lscala/Tuple2;
   #73 = Utf8               (Ljava/lang/String;)Lscala/Tuple2<Lcoursier/core/Version$Item;Lscala/collection/immutable/LazyList<Lscala/Tuple2<Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;>;>;>;
   #74 = Utf8               str
   #75 = Utf8               scala/Predef$
   #76 = Class              #75           // scala/Predef$
   #77 = Utf8               Lscala/Predef$;
   #78 = NameAndType        #62:#77       // MODULE$:Lscala/Predef$;
   #79 = Fieldref           #76.#78       // scala/Predef$.MODULE$:Lscala/Predef$;
   #80 = Utf8               wrapString
   #81 = Utf8               (Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
   #82 = NameAndType        #80:#81       // wrapString:(Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
   #83 = Methodref          #76.#82       // scala/Predef$.wrapString:(Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
   #84 = Utf8               scala/collection/IterableFactory$
   #85 = Class              #84           // scala/collection/IterableFactory$
   #86 = Utf8               Lscala/collection/IterableFactory$;
   #87 = NameAndType        #62:#86       // MODULE$:Lscala/collection/IterableFactory$;
   #88 = Fieldref           #85.#87       // scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
   #89 = Utf8               scala/collection/compat/immutable/package$
   #90 = Class              #89           // scala/collection/compat/immutable/package$
   #91 = Utf8               Lscala/collection/compat/immutable/package$;
   #92 = NameAndType        #62:#91       // MODULE$:Lscala/collection/compat/immutable/package$;
   #93 = Fieldref           #90.#92       // scala/collection/compat/immutable/package$.MODULE$:Lscala/collection/compat/immutable/package$;
   #94 = Utf8               LazyList
   #95 = Utf8               ()Lscala/collection/immutable/LazyList$;
   #96 = NameAndType        #94:#95       // LazyList:()Lscala/collection/immutable/LazyList$;
   #97 = Methodref          #90.#96       // scala/collection/compat/immutable/package$.LazyList:()Lscala/collection/immutable/LazyList$;
   #98 = Utf8               toFactory
   #99 = Utf8               (Lscala/collection/IterableFactory;)Lscala/collection/Factory;
  #100 = NameAndType        #98:#99       // toFactory:(Lscala/collection/IterableFactory;)Lscala/collection/Factory;
  #101 = Methodref          #85.#100      // scala/collection/IterableFactory$.toFactory:(Lscala/collection/IterableFactory;)Lscala/collection/Factory;
  #102 = Utf8               scala/collection/immutable/WrappedString
  #103 = Class              #102          // scala/collection/immutable/WrappedString
  #104 = Utf8               to
  #105 = Utf8               (Lscala/collection/Factory;)Ljava/lang/Object;
  #106 = NameAndType        #104:#105     // to:(Lscala/collection/Factory;)Ljava/lang/Object;
  #107 = Methodref          #103.#106     // scala/collection/immutable/WrappedString.to:(Lscala/collection/Factory;)Ljava/lang/Object;
  #108 = Utf8               scala/None$
  #109 = Class              #108          // scala/None$
  #110 = Utf8               Lscala/None$;
  #111 = NameAndType        #62:#110      // MODULE$:Lscala/None$;
  #112 = Fieldref           #109.#111     // scala/None$.MODULE$:Lscala/None$;
  #113 = Utf8               parseItem$1
  #114 = Utf8               (Lscala/collection/immutable/LazyList;Lscala/Option;)Lscala/Tuple2;
  #115 = NameAndType        #113:#114     // parseItem$1:(Lscala/collection/immutable/LazyList;Lscala/Option;)Lscala/Tuple2;
  #116 = Methodref          #2.#115       // coursier/core/Version$Tokenizer$.parseItem$1:(Lscala/collection/immutable/LazyList;Lscala/Option;)Lscala/Tuple2;
  #117 = Utf8               scala/Tuple2
  #118 = Class              #117          // scala/Tuple2
  #119 = Utf8               _1
  #120 = Utf8               ()Ljava/lang/Object;
  #121 = NameAndType        #119:#120     // _1:()Ljava/lang/Object;
  #122 = Methodref          #118.#121     // scala/Tuple2._1:()Ljava/lang/Object;
  #123 = Utf8               _2
  #124 = NameAndType        #123:#120     // _2:()Ljava/lang/Object;
  #125 = Methodref          #118.#124     // scala/Tuple2._2:()Ljava/lang/Object;
  #126 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #127 = NameAndType        #66:#126      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #128 = Methodref          #118.#127     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #129 = Utf8               scala/MatchError
  #130 = Class              #129          // scala/MatchError
  #131 = Utf8               (Ljava/lang/Object;)V
  #132 = NameAndType        #66:#131      // "<init>":(Ljava/lang/Object;)V
  #133 = Methodref          #130.#132     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #134 = Utf8               java/lang/String
  #135 = Class              #134          // java/lang/String
  #136 = Utf8               helper$1
  #137 = Utf8               (Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
  #138 = NameAndType        #136:#137     // helper$1:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
  #139 = Methodref          #2.#138       // coursier/core/Version$Tokenizer$.helper$1:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
  #140 = Utf8               first
  #141 = Utf8               Lcoursier/core/Version$Item;
  #142 = Utf8               rem
  #143 = Utf8               Lscala/collection/immutable/LazyList;
  #144 = Utf8               this
  #145 = Utf8               Ljava/lang/String;
  #146 = Utf8               digits$1
  #147 = Utf8               (Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #148 = Utf8               b
  #149 = Utf8               s
  #150 = Utf8               isEmpty
  #151 = Utf8               ()Z
  #152 = NameAndType        #150:#151     // isEmpty:()Z
  #153 = Methodref          #61.#152      // scala/collection/immutable/LazyList.isEmpty:()Z
  #154 = Utf8               scala/runtime/RichChar$
  #155 = Class              #154          // scala/runtime/RichChar$
  #156 = Utf8               Lscala/runtime/RichChar$;
  #157 = NameAndType        #62:#156      // MODULE$:Lscala/runtime/RichChar$;
  #158 = Fieldref           #155.#157     // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
  #159 = Utf8               head
  #160 = NameAndType        #159:#120     // head:()Ljava/lang/Object;
  #161 = Methodref          #61.#160      // scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
  #162 = Utf8               scala/runtime/BoxesRunTime
  #163 = Class              #162          // scala/runtime/BoxesRunTime
  #164 = Utf8               unboxToChar
  #165 = Utf8               (Ljava/lang/Object;)C
  #166 = NameAndType        #164:#165     // unboxToChar:(Ljava/lang/Object;)C
  #167 = Methodref          #163.#166     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #168 = Utf8               charWrapper
  #169 = Utf8               (C)C
  #170 = NameAndType        #168:#169     // charWrapper:(C)C
  #171 = Methodref          #76.#170      // scala/Predef$.charWrapper:(C)C
  #172 = Utf8               isDigit$extension
  #173 = Utf8               (C)Z
  #174 = NameAndType        #172:#173     // isDigit$extension:(C)Z
  #175 = Methodref          #155.#174     // scala/runtime/RichChar$.isDigit$extension:(C)Z
  #176 = Utf8               scala/collection/mutable/StringBuilder
  #177 = Class              #176          // scala/collection/mutable/StringBuilder
  #178 = Utf8               result
  #179 = Utf8               ()Ljava/lang/String;
  #180 = NameAndType        #178:#179     // result:()Ljava/lang/String;
  #181 = Methodref          #177.#180     // scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
  #182 = Utf8               $plus$eq
  #183 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #184 = NameAndType        #182:#183     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #185 = Methodref          #177.#184     // scala/collection/mutable/StringBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #186 = Utf8               tail
  #187 = Utf8               ()Lscala/collection/immutable/LazyList;
  #188 = NameAndType        #186:#187     // tail:()Lscala/collection/immutable/LazyList;
  #189 = Methodref          #61.#188      // scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
  #190 = Utf8               Lscala/collection/mutable/StringBuilder;
  #191 = Utf8               letters$1
  #192 = Utf8               Lcoursier/core/compatibility/package$RichChar$;
  #193 = NameAndType        #62:#192      // MODULE$:Lcoursier/core/compatibility/package$RichChar$;
  #194 = Fieldref           #50.#193      // coursier/core/compatibility/package$RichChar$.MODULE$:Lcoursier/core/compatibility/package$RichChar$;
  #195 = Utf8               coursier/core/compatibility/package$
  #196 = Class              #195          // coursier/core/compatibility/package$
  #197 = Utf8               Lcoursier/core/compatibility/package$;
  #198 = NameAndType        #62:#197      // MODULE$:Lcoursier/core/compatibility/package$;
  #199 = Fieldref           #196.#198     // coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
  #200 = Utf8               RichChar
  #201 = NameAndType        #200:#169     // RichChar:(C)C
  #202 = Methodref          #196.#201     // coursier/core/compatibility/package$.RichChar:(C)C
  #203 = Utf8               letter$extension
  #204 = NameAndType        #203:#173     // letter$extension:(C)Z
  #205 = Methodref          #50.#204      // coursier/core/compatibility/package$RichChar$.letter$extension:(C)Z
  #206 = Utf8               toLowerCase
  #207 = NameAndType        #206:#179     // toLowerCase:()Ljava/lang/String;
  #208 = Methodref          #135.#207     // java/lang/String.toLowerCase:()Ljava/lang/String;
  #209 = Utf8               other$1
  #210 = Utf8               isLetterOrDigit$extension
  #211 = NameAndType        #210:#173     // isLetterOrDigit$extension:(C)Z
  #212 = Methodref          #155.#211     // scala/runtime/RichChar$.isLetterOrDigit$extension:(C)Z
  #213 = Utf8               parseSeparator$1
  #214 = Utf8               (Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #215 = NameAndType        #213:#214     // parseSeparator$1:(Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #216 = Methodref          #2.#215       // coursier/core/Version$Tokenizer$.parseSeparator$1:(Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #217 = Utf8               Lcoursier/core/Version$Tokenizer$None$;
  #218 = NameAndType        #62:#217      // MODULE$:Lcoursier/core/Version$Tokenizer$None$;
  #219 = Fieldref           #41.#218      // coursier/core/Version$Tokenizer$None$.MODULE$:Lcoursier/core/Version$Tokenizer$None$;
  #220 = Utf8               equals
  #221 = Utf8               (Ljava/lang/Object;)Z
  #222 = NameAndType        #220:#221     // equals:(Ljava/lang/Object;)Z
  #223 = Methodref          #4.#222       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #224 = Utf8               prev
  #225 = Utf8               coursier/core/Version$
  #226 = Class              #225          // coursier/core/Version$
  #227 = Utf8               Lcoursier/core/Version$;
  #228 = NameAndType        #62:#227      // MODULE$:Lcoursier/core/Version$;
  #229 = Fieldref           #226.#228     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #230 = Utf8               empty
  #231 = Utf8               ()Lcoursier/core/Version$Number;
  #232 = NameAndType        #230:#231     // empty:()Lcoursier/core/Version$Number;
  #233 = Methodref          #226.#232     // coursier/core/Version$.empty:()Lcoursier/core/Version$Number;
  #234 = Methodref          #177.#67      // scala/collection/mutable/StringBuilder."<init>":()V
  #235 = NameAndType        #146:#147     // digits$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #236 = Methodref          #2.#235       // coursier/core/Version$Tokenizer$.digits$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #237 = Utf8               scala/Option
  #238 = Class              #237          // scala/Option
  #239 = Utf8               length
  #240 = Utf8               ()I
  #241 = NameAndType        #239:#240     // length:()I
  #242 = Methodref          #135.#241     // java/lang/String.length:()I
  #243 = Utf8               Lcoursier/core/Version$BigNumber$;
  #244 = NameAndType        #62:#243      // MODULE$:Lcoursier/core/Version$BigNumber$;
  #245 = Fieldref           #12.#244      // coursier/core/Version$BigNumber$.MODULE$:Lcoursier/core/Version$BigNumber$;
  #246 = Utf8               scala/package$
  #247 = Class              #246          // scala/package$
  #248 = Utf8               Lscala/package$;
  #249 = NameAndType        #62:#248      // MODULE$:Lscala/package$;
  #250 = Fieldref           #247.#249     // scala/package$.MODULE$:Lscala/package$;
  #251 = Utf8               BigInt
  #252 = Utf8               ()Lscala/math/BigInt$;
  #253 = NameAndType        #251:#252     // BigInt:()Lscala/math/BigInt$;
  #254 = Methodref          #247.#253     // scala/package$.BigInt:()Lscala/math/BigInt$;
  #255 = Utf8               scala/math/BigInt$
  #256 = Class              #255          // scala/math/BigInt$
  #257 = Utf8               (Ljava/lang/String;)Lscala/math/BigInt;
  #258 = NameAndType        #71:#257      // apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #259 = Methodref          #256.#258     // scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #260 = Utf8               (Lscala/math/BigInt;)Lcoursier/core/Version$BigNumber;
  #261 = NameAndType        #71:#260      // apply:(Lscala/math/BigInt;)Lcoursier/core/Version$BigNumber;
  #262 = Methodref          #12.#261      // coursier/core/Version$BigNumber$.apply:(Lscala/math/BigInt;)Lcoursier/core/Version$BigNumber;
  #263 = Utf8               Lcoursier/core/Version$Number$;
  #264 = NameAndType        #62:#263      // MODULE$:Lcoursier/core/Version$Number$;
  #265 = Fieldref           #30.#264      // coursier/core/Version$Number$.MODULE$:Lcoursier/core/Version$Number$;
  #266 = Utf8               scala/collection/StringOps$
  #267 = Class              #266          // scala/collection/StringOps$
  #268 = Utf8               Lscala/collection/StringOps$;
  #269 = NameAndType        #62:#268      // MODULE$:Lscala/collection/StringOps$;
  #270 = Fieldref           #267.#269     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #271 = Utf8               augmentString
  #272 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #273 = NameAndType        #271:#272     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #274 = Methodref          #76.#273      // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #275 = Utf8               toInt$extension
  #276 = Utf8               (Ljava/lang/String;)I
  #277 = NameAndType        #275:#276     // toInt$extension:(Ljava/lang/String;)I
  #278 = Methodref          #267.#277     // scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
  #279 = Utf8               (I)Lcoursier/core/Version$Number;
  #280 = NameAndType        #71:#279      // apply:(I)Lcoursier/core/Version$Number;
  #281 = Methodref          #30.#280      // coursier/core/Version$Number$.apply:(I)Lcoursier/core/Version$Number;
  #282 = Utf8               coursier/core/Version$Numeric
  #283 = Class              #282          // coursier/core/Version$Numeric
  #284 = NameAndType        #191:#147     // letters$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #285 = Methodref          #2.#284       // coursier/core/Version$Tokenizer$.letters$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #286 = Utf8               hashCode
  #287 = NameAndType        #286:#240     // hashCode:()I
  #288 = Methodref          #135.#287     // java/lang/String.hashCode:()I
  #289 = Utf8               x
  #290 = String             #289          // x
  #291 = Methodref          #135.#222     // java/lang/String.equals:(Ljava/lang/Object;)Z
  #292 = Utf8               max
  #293 = String             #292          // max
  #294 = Utf8               min
  #295 = String             #294          // min
  #296 = Utf8               scala/Some
  #297 = Class              #296          // scala/Some
  #298 = Utf8               Lcoursier/core/Version$Tokenizer$Dot$;
  #299 = NameAndType        #62:#298      // MODULE$:Lcoursier/core/Version$Tokenizer$Dot$;
  #300 = Fieldref           #37.#299      // coursier/core/Version$Tokenizer$Dot$.MODULE$:Lcoursier/core/Version$Tokenizer$Dot$;
  #301 = Methodref          #297.#132     // scala/Some."<init>":(Ljava/lang/Object;)V
  #302 = Utf8               Lcoursier/core/Version$Max$;
  #303 = NameAndType        #62:#302      // MODULE$:Lcoursier/core/Version$Max$;
  #304 = Fieldref           #23.#303      // coursier/core/Version$Max$.MODULE$:Lcoursier/core/Version$Max$;
  #305 = Utf8               Lcoursier/core/Version$Min$;
  #306 = NameAndType        #62:#305      // MODULE$:Lcoursier/core/Version$Min$;
  #307 = Fieldref           #25.#306      // coursier/core/Version$Min$.MODULE$:Lcoursier/core/Version$Min$;
  #308 = Utf8               Lcoursier/core/Version$Tag$;
  #309 = NameAndType        #62:#308      // MODULE$:Lcoursier/core/Version$Tag$;
  #310 = Fieldref           #35.#309      // coursier/core/Version$Tag$.MODULE$:Lcoursier/core/Version$Tag$;
  #311 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version$Tag;
  #312 = NameAndType        #71:#311      // apply:(Ljava/lang/String;)Lcoursier/core/Version$Tag;
  #313 = Methodref          #35.#312      // coursier/core/Version$Tag$.apply:(Ljava/lang/String;)Lcoursier/core/Version$Tag;
  #314 = NameAndType        #209:#147     // other$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #315 = Methodref          #2.#314       // coursier/core/Version$Tokenizer$.other$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
  #316 = Utf8               *
  #317 = String             #316          // *
  #318 = Utf8               value
  #319 = NameAndType        #318:#120     // value:()Ljava/lang/Object;
  #320 = Methodref          #297.#319     // scala/Some.value:()Ljava/lang/Object;
  #321 = Utf8               Lcoursier/core/Version$Tokenizer$Plus$;
  #322 = NameAndType        #62:#321      // MODULE$:Lcoursier/core/Version$Tokenizer$Plus$;
  #323 = Fieldref           #43.#322      // coursier/core/Version$Tokenizer$Plus$.MODULE$:Lcoursier/core/Version$Tokenizer$Plus$;
  #324 = Utf8               digits0
  #325 = Utf8               item
  #326 = Utf8               Lcoursier/core/Version$Numeric;
  #327 = Utf8               letters0
  #328 = Utf8               sep
  #329 = Utf8               Lcoursier/core/Version$Tokenizer$Separator;
  #330 = Utf8               rem0
  #331 = Utf8               Lscala/Option;
  #332 = Utf8               nonEmpty
  #333 = NameAndType        #332:#151     // nonEmpty:()Z
  #334 = Methodref          #61.#333      // scala/collection/immutable/LazyList.nonEmpty:()Z
  #335 = Utf8               assert
  #336 = Utf8               (Z)V
  #337 = NameAndType        #335:#336     // assert:(Z)V
  #338 = Methodref          #76.#337      // scala/Predef$.assert:(Z)V
  #339 = Utf8               Lcoursier/core/Version$Tokenizer$Hyphen$;
  #340 = NameAndType        #62:#339      // MODULE$:Lcoursier/core/Version$Tokenizer$Hyphen$;
  #341 = Fieldref           #39.#340      // coursier/core/Version$Tokenizer$Hyphen$.MODULE$:Lcoursier/core/Version$Tokenizer$Hyphen$;
  #342 = Utf8               Lcoursier/core/Version$Tokenizer$Underscore$;
  #343 = NameAndType        #62:#342      // MODULE$:Lcoursier/core/Version$Tokenizer$Underscore$;
  #344 = Fieldref           #48.#343      // coursier/core/Version$Tokenizer$Underscore$.MODULE$:Lcoursier/core/Version$Tokenizer$Underscore$;
  #345 = Utf8               $anonfun$apply$1
  #346 = Utf8               (Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
  #347 = Utf8               $this
  #348 = Utf8               rem$1
  #349 = Utf8               $anonfun$apply$2
  #350 = Utf8               (Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Tuple2;
  #351 = Utf8               sep$1
  #352 = Utf8               item$1
  #353 = Utf8               scala/collection/immutable/LazyList$
  #354 = Class              #353          // scala/collection/immutable/LazyList$
  #355 = NameAndType        #230:#187     // empty:()Lscala/collection/immutable/LazyList;
  #356 = Methodref          #354.#355     // scala/collection/immutable/LazyList$.empty:()Lscala/collection/immutable/LazyList;
  #357 = Utf8               scala/runtime/ScalaRunTime$
  #358 = Class              #357          // scala/runtime/ScalaRunTime$
  #359 = Utf8               Lscala/runtime/ScalaRunTime$;
  #360 = NameAndType        #62:#359      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #361 = Fieldref           #358.#360     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #362 = Utf8               Lcoursier/core/Version$BuildMetadata$;
  #363 = NameAndType        #62:#362      // MODULE$:Lcoursier/core/Version$BuildMetadata$;
  #364 = Fieldref           #18.#363      // coursier/core/Version$BuildMetadata$.MODULE$:Lcoursier/core/Version$BuildMetadata$;
  #365 = Utf8               mkString
  #366 = NameAndType        #365:#179     // mkString:()Ljava/lang/String;
  #367 = Methodref          #61.#366      // scala/collection/immutable/LazyList.mkString:()Ljava/lang/String;
  #368 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version$BuildMetadata;
  #369 = NameAndType        #71:#368      // apply:(Ljava/lang/String;)Lcoursier/core/Version$BuildMetadata;
  #370 = Methodref          #18.#369      // coursier/core/Version$BuildMetadata$.apply:(Ljava/lang/String;)Lcoursier/core/Version$BuildMetadata;
  #371 = Utf8               [Ljava/lang/Object;
  #372 = Class              #371          // "[Ljava/lang/Object;"
  #373 = Utf8               wrapRefArray
  #374 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #375 = NameAndType        #373:#374     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #376 = Methodref          #358.#375     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #377 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #378 = NameAndType        #71:#377      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #379 = Methodref          #354.#378     // scala/collection/immutable/LazyList$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #380 = Utf8               Lscala/collection/immutable/LazyList$Deferrer$;
  #381 = NameAndType        #62:#380      // MODULE$:Lscala/collection/immutable/LazyList$Deferrer$;
  #382 = Fieldref           #59.#381      // scala/collection/immutable/LazyList$Deferrer$.MODULE$:Lscala/collection/immutable/LazyList$Deferrer$;
  #383 = Utf8               Lscala/collection/immutable/LazyList$;
  #384 = NameAndType        #62:#383      // MODULE$:Lscala/collection/immutable/LazyList$;
  #385 = Fieldref           #354.#384     // scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
  #386 = MethodType         #120          //  ()Ljava/lang/Object;
  #387 = NameAndType        #345:#346     // $anonfun$apply$1:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
  #388 = Methodref          #2.#387       // coursier/core/Version$Tokenizer$.$anonfun$apply$1:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
  #389 = MethodHandle       6:#388        // REF_invokeStatic coursier/core/Version$Tokenizer$.$anonfun$apply$1:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
  #390 = MethodType         #187          //  ()Lscala/collection/immutable/LazyList;
  #391 = Integer            5
  #392 = Integer            1
  #393 = Utf8               java/lang/invoke/LambdaMetafactory
  #394 = Class              #393          // java/lang/invoke/LambdaMetafactory
  #395 = Utf8               altMetafactory
  #396 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #397 = NameAndType        #395:#396     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #398 = Methodref          #394.#397     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #399 = MethodHandle       6:#398        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #400 = Utf8               (Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/Function0;
  #401 = NameAndType        #71:#400      // apply:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/Function0;
  #402 = InvokeDynamic      #0:#401       // #0:apply:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/Function0;
  #403 = Utf8               toDeferrer
  #404 = Utf8               (Lscala/Function0;)Lscala/Function0;
  #405 = NameAndType        #403:#404     // toDeferrer:(Lscala/Function0;)Lscala/Function0;
  #406 = Methodref          #354.#405     // scala/collection/immutable/LazyList$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
  #407 = NameAndType        #349:#350     // $anonfun$apply$2:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Tuple2;
  #408 = Methodref          #2.#407       // coursier/core/Version$Tokenizer$.$anonfun$apply$2:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Tuple2;
  #409 = MethodHandle       6:#408        // REF_invokeStatic coursier/core/Version$Tokenizer$.$anonfun$apply$2:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Tuple2;
  #410 = Utf8               ()Lscala/Tuple2;
  #411 = MethodType         #410          //  ()Lscala/Tuple2;
  #412 = Utf8               (Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Function0;
  #413 = NameAndType        #71:#412      // apply:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Function0;
  #414 = InvokeDynamic      #1:#413       // #1:apply:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Function0;
  #415 = Utf8               $hash$colon$colon$extension
  #416 = Utf8               (Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
  #417 = NameAndType        #415:#416     // $hash$colon$colon$extension:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
  #418 = Methodref          #59.#417      // scala/collection/immutable/LazyList$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
  #419 = Methodref          #4.#67        // java/lang/Object."<init>":()V
  #420 = Utf8               $deserializeLambda$
  #421 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #422 = Utf8               scala/runtime/LambdaDeserialize
  #423 = Class              #422          // scala/runtime/LambdaDeserialize
  #424 = Utf8               bootstrap
  #425 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #426 = NameAndType        #424:#425     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #427 = Methodref          #423.#426     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #428 = MethodHandle       6:#427        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #429 = Utf8               lambdaDeserialize
  #430 = NameAndType        #429:#421     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #431 = InvokeDynamic      #2:#430       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #432 = Utf8               Code
  #433 = Utf8               LineNumberTable
  #434 = Utf8               StackMapTable
  #435 = Utf8               LocalVariableTable
  #436 = Utf8               Signature
  #437 = Utf8               MethodParameters
  #438 = Utf8               InnerClasses
  #439 = Utf8               SourceFile
  #440 = Utf8               BootstrapMethods
  #441 = Utf8               ScalaInlineInfo
  #442 = Utf8               Scala
{
  public static final coursier.core.Version$Tokenizer$ MODULE$;
    descriptor: Lcoursier/core/Version$Tokenizer$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/core/Version$Tokenizer$
         3: dup
         4: invokespecial #68                 // Method "<init>":()V
         7: putstatic     #70                 // Field MODULE$:Lcoursier/core/Version$Tokenizer$;
        10: return
      LineNumberTable:
        line 103: 0

  public scala.Tuple2<coursier.core.Version$Item, scala.collection.immutable.LazyList<scala.Tuple2<coursier.core.Version$Tokenizer$Separator, coursier.core.Version$Item>>> apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=2
         0: aload_0
         1: getstatic     #79                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         4: aload_1
         5: invokevirtual #83                 // Method scala/Predef$.wrapString:(Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
         8: getstatic     #88                 // Field scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
        11: getstatic     #93                 // Field scala/collection/compat/immutable/package$.MODULE$:Lscala/collection/compat/immutable/package$;
        14: invokevirtual #97                 // Method scala/collection/compat/immutable/package$.LazyList:()Lscala/collection/immutable/LazyList$;
        17: invokevirtual #101                // Method scala/collection/IterableFactory$.toFactory:(Lscala/collection/IterableFactory;)Lscala/collection/Factory;
        20: invokevirtual #107                // Method scala/collection/immutable/WrappedString.to:(Lscala/collection/Factory;)Ljava/lang/Object;
        23: checkcast     #61                 // class scala/collection/immutable/LazyList
        26: getstatic     #112                // Field scala/None$.MODULE$:Lscala/None$;
        29: invokespecial #116                // Method parseItem$1:(Lscala/collection/immutable/LazyList;Lscala/Option;)Lscala/Tuple2;
        32: astore        4
        34: aload         4
        36: ifnull        74
        39: aload         4
        41: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
        44: checkcast     #20                 // class coursier/core/Version$Item
        47: astore        5
        49: aload         4
        51: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
        54: checkcast     #61                 // class scala/collection/immutable/LazyList
        57: astore        6
        59: new           #118                // class scala/Tuple2
        62: dup
        63: aload         5
        65: aload         6
        67: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        70: astore_2
        71: goto          87
        74: goto          77
        77: new           #130                // class scala/MatchError
        80: dup
        81: aload         4
        83: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        86: athrow
        87: aload_2
        88: astore_3
        89: aload_3
        90: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
        93: checkcast     #20                 // class coursier/core/Version$Item
        96: astore        7
        98: aload_3
        99: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       102: checkcast     #61                 // class scala/collection/immutable/LazyList
       105: astore        8
       107: new           #118                // class scala/Tuple2
       110: dup
       111: aload         7
       113: aload_0
       114: aload         8
       116: invokespecial #139                // Method helper$1:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
       119: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       122: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 74
          locals = [ top, top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$Tokenizer$, class java/lang/String, class scala/Tuple2, top, class scala/Tuple2, class coursier/core/Version$Item, class scala/collection/immutable/LazyList ]
          stack = []
      LineNumberTable:
        line 187: 0
        line 188: 107
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           49      25     5 first   Lcoursier/core/Version$Item;
           59      15     6   rem   Lscala/collection/immutable/LazyList;
           98      24     7 first   Lcoursier/core/Version$Item;
          107      15     8   rem   Lscala/collection/immutable/LazyList;
            0     123     0  this   Lcoursier/core/Version$Tokenizer$;
            0     123     1   str   Ljava/lang/String;
    Signature: #73                          // (Ljava/lang/String;)Lscala/Tuple2<Lcoursier/core/Version$Item;Lscala/collection/immutable/LazyList<Lscala/Tuple2<Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;>;>;>;
    MethodParameters:
      Name                           Flags
      str                            final

  private final scala.Tuple2 digits$1(scala.collection.mutable.StringBuilder, scala.collection.immutable.LazyList);
    descriptor: (Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: aload_2
         1: invokevirtual #153                // Method scala/collection/immutable/LazyList.isEmpty:()Z
         4: ifne          29
         7: getstatic     #158                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
        10: getstatic     #79                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        13: aload_2
        14: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        17: invokestatic  #167                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        20: invokevirtual #171                // Method scala/Predef$.charWrapper:(C)C
        23: invokevirtual #175                // Method scala/runtime/RichChar$.isDigit$extension:(C)Z
        26: ifne          44
        29: new           #118                // class scala/Tuple2
        32: dup
        33: aload_1
        34: invokevirtual #181                // Method scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
        37: aload_2
        38: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        41: goto          64
        44: aload_1
        45: aload_2
        46: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        49: invokevirtual #185                // Method scala/collection/mutable/StringBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        52: checkcast     #177                // class scala/collection/mutable/StringBuilder
        55: aload_2
        56: invokevirtual #189                // Method scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
        59: astore_2
        60: astore_1
        61: goto          0
        64: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 0 /* same */
        frame_type = 28 /* same */
        frame_type = 14 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 116: 0
        line 117: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lcoursier/core/Version$Tokenizer$;
            0      65     1     b   Lscala/collection/mutable/StringBuilder;
            0      65     2     s   Lscala/collection/immutable/LazyList;
    MethodParameters:
      Name                           Flags
      b                              final
      s                              final

  private final scala.Tuple2 letters$1(scala.collection.mutable.StringBuilder, scala.collection.immutable.LazyList);
    descriptor: (Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: aload_2
         1: invokevirtual #153                // Method scala/collection/immutable/LazyList.isEmpty:()Z
         4: ifne          29
         7: getstatic     #194                // Field coursier/core/compatibility/package$RichChar$.MODULE$:Lcoursier/core/compatibility/package$RichChar$;
        10: getstatic     #199                // Field coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
        13: aload_2
        14: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        17: invokestatic  #167                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        20: invokevirtual #202                // Method coursier/core/compatibility/package$.RichChar:(C)C
        23: invokevirtual #205                // Method coursier/core/compatibility/package$RichChar$.letter$extension:(C)Z
        26: ifne          47
        29: new           #118                // class scala/Tuple2
        32: dup
        33: aload_1
        34: invokevirtual #181                // Method scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
        37: invokevirtual #208                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
        40: aload_2
        41: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        44: goto          67
        47: aload_1
        48: aload_2
        49: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        52: invokevirtual #185                // Method scala/collection/mutable/StringBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        55: checkcast     #177                // class scala/collection/mutable/StringBuilder
        58: aload_2
        59: invokevirtual #189                // Method scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
        62: astore_2
        63: astore_1
        64: goto          0
        67: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 0 /* same */
        frame_type = 28 /* same */
        frame_type = 17 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 127: 0
        line 128: 29
        line 130: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lcoursier/core/Version$Tokenizer$;
            0      68     1     b   Lscala/collection/mutable/StringBuilder;
            0      68     2     s   Lscala/collection/immutable/LazyList;
    MethodParameters:
      Name                           Flags
      b                              final
      s                              final

  private final scala.Tuple2 other$1(scala.collection.mutable.StringBuilder, scala.collection.immutable.LazyList);
    descriptor: (Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=3
         0: aload_2
         1: invokevirtual #153                // Method scala/collection/immutable/LazyList.isEmpty:()Z
         4: ifne          62
         7: getstatic     #158                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
        10: getstatic     #79                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        13: aload_2
        14: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        17: invokestatic  #167                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        20: invokevirtual #171                // Method scala/Predef$.charWrapper:(C)C
        23: invokevirtual #212                // Method scala/runtime/RichChar$.isLetterOrDigit$extension:(C)Z
        26: ifne          62
        29: aload_2
        30: invokestatic  #216                // Method parseSeparator$1:(Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
        33: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
        36: getstatic     #219                // Field coursier/core/Version$Tokenizer$None$.MODULE$:Lcoursier/core/Version$Tokenizer$None$;
        39: astore        4
        41: dup
        42: ifnonnull     54
        45: pop
        46: aload         4
        48: ifnull        80
        51: goto          62
        54: aload         4
        56: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        59: ifne          80
        62: new           #118                // class scala/Tuple2
        65: dup
        66: aload_1
        67: invokevirtual #181                // Method scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
        70: invokevirtual #208                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
        73: aload_2
        74: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: goto          100
        80: aload_1
        81: aload_2
        82: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        85: invokevirtual #185                // Method scala/collection/mutable/StringBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        88: checkcast     #177                // class scala/collection/mutable/StringBuilder
        91: aload_2
        92: invokevirtual #189                // Method scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
        95: astore_2
        96: astore_1
        97: goto          0
       100: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 0 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/mutable/StringBuilder, class scala/collection/immutable/LazyList, top, class coursier/core/Version$Tokenizer$None$ ]
          stack = [ class java/lang/Object ]
        frame_type = 249 /* chop */
          offset_delta = 7
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ top, class coursier/core/Version$Tokenizer$None$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/mutable/StringBuilder, class scala/collection/immutable/LazyList ]
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 145: 0
        line 146: 62
        line 148: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     101     0  this   Lcoursier/core/Version$Tokenizer$;
            0     101     1     b   Lscala/collection/mutable/StringBuilder;
            0     101     2     s   Lscala/collection/immutable/LazyList;
    MethodParameters:
      Name                           Flags
      b                              final
      s                              final

  private final scala.Tuple2 parseItem$1(scala.collection.immutable.LazyList, scala.Option);
    descriptor: (Lscala/collection/immutable/LazyList;Lscala/Option;)Lscala/Tuple2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=42, args_size=3
         0: aload_1
         1: invokevirtual #153                // Method scala/collection/immutable/LazyList.isEmpty:()Z
         4: ifeq          24
         7: new           #118                // class scala/Tuple2
        10: dup
        11: getstatic     #229                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
        14: invokevirtual #233                // Method coursier/core/Version$.empty:()Lcoursier/core/Version$Number;
        17: aload_1
        18: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        21: goto          915
        24: getstatic     #158                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
        27: getstatic     #79                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        30: aload_1
        31: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        34: invokestatic  #167                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        37: invokevirtual #171                // Method scala/Predef$.charWrapper:(C)C
        40: invokevirtual #175                // Method scala/runtime/RichChar$.isDigit$extension:(C)Z
        43: ifeq          204
        46: aload_0
        47: new           #177                // class scala/collection/mutable/StringBuilder
        50: dup
        51: invokespecial #234                // Method scala/collection/mutable/StringBuilder."<init>":()V
        54: aload_1
        55: invokespecial #236                // Method digits$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
        58: astore        10
        60: aload         10
        62: ifnull        101
        65: aload         10
        67: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
        70: checkcast     #135                // class java/lang/String
        73: astore        11
        75: aload         10
        77: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
        80: checkcast     #61                 // class scala/collection/immutable/LazyList
        83: astore        12
        85: new           #118                // class scala/Tuple2
        88: dup
        89: aload         11
        91: aload         12
        93: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        96: astore        8
        98: goto          114
       101: goto          104
       104: new           #130                // class scala/MatchError
       107: dup
       108: aload         10
       110: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       113: athrow
       114: aload         8
       116: astore        9
       118: aload         9
       120: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       123: checkcast     #135                // class java/lang/String
       126: astore        13
       128: aload         9
       130: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       133: checkcast     #61                 // class scala/collection/immutable/LazyList
       136: astore        14
       138: aload         13
       140: invokevirtual #242                // Method java/lang/String.length:()I
       143: bipush        10
       145: if_icmplt     168
       148: getstatic     #245                // Field coursier/core/Version$BigNumber$.MODULE$:Lcoursier/core/Version$BigNumber$;
       151: getstatic     #250                // Field scala/package$.MODULE$:Lscala/package$;
       154: invokevirtual #254                // Method scala/package$.BigInt:()Lscala/math/BigInt$;
       157: aload         13
       159: invokevirtual #259                // Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
       162: invokevirtual #262                // Method coursier/core/Version$BigNumber$.apply:(Lscala/math/BigInt;)Lcoursier/core/Version$BigNumber;
       165: goto          188
       168: getstatic     #265                // Field coursier/core/Version$Number$.MODULE$:Lcoursier/core/Version$Number$;
       171: getstatic     #270                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       174: getstatic     #79                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       177: aload         13
       179: invokevirtual #274                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       182: invokevirtual #278                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
       185: invokevirtual #281                // Method coursier/core/Version$Number$.apply:(I)Lcoursier/core/Version$Number;
       188: astore        15
       190: new           #118                // class scala/Tuple2
       193: dup
       194: aload         15
       196: aload         14
       198: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       201: goto          915
       204: getstatic     #194                // Field coursier/core/compatibility/package$RichChar$.MODULE$:Lcoursier/core/compatibility/package$RichChar$;
       207: getstatic     #199                // Field coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
       210: aload_1
       211: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
       214: invokestatic  #167                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
       217: invokevirtual #202                // Method coursier/core/compatibility/package$.RichChar:(C)C
       220: invokevirtual #205                // Method coursier/core/compatibility/package$RichChar$.letter$extension:(C)Z
       223: ifeq          521
       226: aload_0
       227: new           #177                // class scala/collection/mutable/StringBuilder
       230: dup
       231: invokespecial #234                // Method scala/collection/mutable/StringBuilder."<init>":()V
       234: aload_1
       235: invokespecial #285                // Method letters$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
       238: astore        17
       240: aload         17
       242: ifnull        281
       245: aload         17
       247: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       250: checkcast     #135                // class java/lang/String
       253: astore        18
       255: aload         17
       257: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       260: checkcast     #61                 // class scala/collection/immutable/LazyList
       263: astore        19
       265: new           #118                // class scala/Tuple2
       268: dup
       269: aload         18
       271: aload         19
       273: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       276: astore        7
       278: goto          294
       281: goto          284
       284: new           #130                // class scala/MatchError
       287: dup
       288: aload         17
       290: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       293: athrow
       294: aload         7
       296: astore        16
       298: aload         16
       300: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       303: checkcast     #135                // class java/lang/String
       306: astore        20
       308: aload         16
       310: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       313: checkcast     #61                 // class scala/collection/immutable/LazyList
       316: astore        21
       318: aload         20
       320: astore        23
       322: aload         23
       324: ifnonnull     331
       327: iconst_0
       328: goto          336
       331: aload         23
       333: invokevirtual #288                // Method java/lang/String.hashCode:()I
       336: lookupswitch  { // 3
                     120: 372
                  107876: 389
                  108114: 406
                 default: 423
            }
       372: ldc_w         #290                // String x
       375: aload         23
       377: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       380: ifeq          386
       383: goto          426
       386: goto          490
       389: ldc_w         #293                // String max
       392: aload         23
       394: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       397: ifeq          403
       400: goto          482
       403: goto          490
       406: ldc_w         #295                // String min
       409: aload         23
       411: invokevirtual #291                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       414: ifeq          420
       417: goto          474
       420: goto          490
       423: goto          490
       426: aload_2
       427: new           #297                // class scala/Some
       430: dup
       431: getstatic     #300                // Field coursier/core/Version$Tokenizer$Dot$.MODULE$:Lcoursier/core/Version$Tokenizer$Dot$;
       434: invokespecial #301                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       437: astore        24
       439: dup
       440: ifnonnull     452
       443: pop
       444: aload         24
       446: ifnull        460
       449: goto          466
       452: aload         24
       454: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       457: ifeq          466
       460: getstatic     #304                // Field coursier/core/Version$Max$.MODULE$:Lcoursier/core/Version$Max$;
       463: goto          469
       466: goto          490
       469: astore        6
       471: goto          503
       474: getstatic     #307                // Field coursier/core/Version$Min$.MODULE$:Lcoursier/core/Version$Min$;
       477: astore        6
       479: goto          503
       482: getstatic     #304                // Field coursier/core/Version$Max$.MODULE$:Lcoursier/core/Version$Max$;
       485: astore        6
       487: goto          503
       490: getstatic     #310                // Field coursier/core/Version$Tag$.MODULE$:Lcoursier/core/Version$Tag$;
       493: aload         20
       495: invokevirtual #313                // Method coursier/core/Version$Tag$.apply:(Ljava/lang/String;)Lcoursier/core/Version$Tag;
       498: astore        6
       500: goto          503
       503: aload         6
       505: astore        22
       507: new           #118                // class scala/Tuple2
       510: dup
       511: aload         22
       513: aload         21
       515: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       518: goto          915
       521: aload_1
       522: invokestatic  #216                // Method parseSeparator$1:(Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
       525: astore        26
       527: aload         26
       529: ifnull        549
       532: aload         26
       534: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       537: checkcast     #45                 // class coursier/core/Version$Tokenizer$Separator
       540: astore        27
       542: aload         27
       544: astore        5
       546: goto          562
       549: goto          552
       552: new           #130                // class scala/MatchError
       555: dup
       556: aload         26
       558: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       561: athrow
       562: aload         5
       564: astore        25
       566: new           #118                // class scala/Tuple2
       569: dup
       570: aload_2
       571: aload         25
       573: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       576: astore        28
       578: aload         28
       580: ifnull        797
       583: aload         28
       585: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       588: checkcast     #45                 // class coursier/core/Version$Tokenizer$Separator
       591: astore        29
       593: getstatic     #219                // Field coursier/core/Version$Tokenizer$None$.MODULE$:Lcoursier/core/Version$Tokenizer$None$;
       596: aload         29
       598: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       601: ifeq          794
       604: aload_0
       605: new           #177                // class scala/collection/mutable/StringBuilder
       608: dup
       609: invokespecial #234                // Method scala/collection/mutable/StringBuilder."<init>":()V
       612: aload_1
       613: invokespecial #315                // Method other$1:(Lscala/collection/mutable/StringBuilder;Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
       616: astore        31
       618: aload         31
       620: ifnull        659
       623: aload         31
       625: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       628: checkcast     #135                // class java/lang/String
       631: astore        32
       633: aload         31
       635: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       638: checkcast     #61                 // class scala/collection/immutable/LazyList
       641: astore        33
       643: new           #118                // class scala/Tuple2
       646: dup
       647: aload         32
       649: aload         33
       651: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       654: astore        4
       656: goto          672
       659: goto          662
       662: new           #130                // class scala/MatchError
       665: dup
       666: aload         31
       668: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       671: athrow
       672: aload         4
       674: astore        30
       676: aload         30
       678: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       681: checkcast     #135                // class java/lang/String
       684: astore        34
       686: aload         30
       688: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       691: checkcast     #61                 // class scala/collection/immutable/LazyList
       694: astore        35
       696: aload_2
       697: new           #297                // class scala/Some
       700: dup
       701: getstatic     #300                // Field coursier/core/Version$Tokenizer$Dot$.MODULE$:Lcoursier/core/Version$Tokenizer$Dot$;
       704: invokespecial #301                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       707: astore        36
       709: dup
       710: ifnonnull     722
       713: pop
       714: aload         36
       716: ifnull        730
       719: goto          773
       722: aload         36
       724: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       727: ifeq          773
       730: aload         34
       732: ldc_w         #317                // String *
       735: astore        37
       737: dup
       738: ifnonnull     750
       741: pop
       742: aload         37
       744: ifnull        758
       747: goto          773
       750: aload         37
       752: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       755: ifeq          773
       758: new           #118                // class scala/Tuple2
       761: dup
       762: getstatic     #304                // Field coursier/core/Version$Max$.MODULE$:Lcoursier/core/Version$Max$;
       765: aload         35
       767: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       770: goto          790
       773: new           #118                // class scala/Tuple2
       776: dup
       777: getstatic     #310                // Field coursier/core/Version$Tag$.MODULE$:Lcoursier/core/Version$Tag$;
       780: aload         34
       782: invokevirtual #313                // Method coursier/core/Version$Tag$.apply:(Ljava/lang/String;)Lcoursier/core/Version$Tag;
       785: aload         35
       787: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       790: astore_3
       791: goto          914
       794: goto          800
       797: goto          800
       800: aload         28
       802: ifnull        893
       805: aload         28
       807: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       810: checkcast     #238                // class scala/Option
       813: astore        38
       815: aload         28
       817: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       820: checkcast     #45                 // class coursier/core/Version$Tokenizer$Separator
       823: astore        39
       825: aload         38
       827: instanceof    #297                // class scala/Some
       830: ifeq          890
       833: aload         38
       835: checkcast     #297                // class scala/Some
       838: astore        40
       840: aload         40
       842: invokevirtual #320                // Method scala/Some.value:()Ljava/lang/Object;
       845: checkcast     #45                 // class coursier/core/Version$Tokenizer$Separator
       848: astore        41
       850: getstatic     #300                // Field coursier/core/Version$Tokenizer$Dot$.MODULE$:Lcoursier/core/Version$Tokenizer$Dot$;
       853: aload         41
       855: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       858: ifeq          887
       861: getstatic     #323                // Field coursier/core/Version$Tokenizer$Plus$.MODULE$:Lcoursier/core/Version$Tokenizer$Plus$;
       864: aload         39
       866: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       869: ifeq          887
       872: new           #118                // class scala/Tuple2
       875: dup
       876: getstatic     #304                // Field coursier/core/Version$Max$.MODULE$:Lcoursier/core/Version$Max$;
       879: aload_1
       880: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       883: astore_3
       884: goto          914
       887: goto          896
       890: goto          896
       893: goto          896
       896: new           #118                // class scala/Tuple2
       899: dup
       900: getstatic     #229                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
       903: invokevirtual #233                // Method coursier/core/Version$.empty:()Lcoursier/core/Version$Number;
       906: aload_1
       907: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       910: astore_3
       911: goto          914
       914: aload_3
       915: areturn
      StackMapTable: number_of_entries = 50
        frame_type = 24 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 76
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, top, class scala/Tuple2, top, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList, class java/lang/String, class scala/collection/immutable/LazyList ]
          stack = []
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Version$Numeric ]
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 76
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList, class java/lang/String, class scala/collection/immutable/LazyList, top, class java/lang/String ]
          stack = []
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 35 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList, class java/lang/String, class scala/collection/immutable/LazyList, top, class java/lang/String, class scala/Some ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 5 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Version$Max$ ]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 7 /* same */
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, class coursier/core/Version$Item, class scala/Tuple2, top, top, top, top, top, top, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList, class java/lang/String, class scala/collection/immutable/LazyList, top, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 96
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, top, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList, class java/lang/String, class scala/collection/immutable/LazyList, class scala/Some ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class scala/collection/immutable/LazyList, class java/lang/String, class scala/collection/immutable/LazyList, class scala/Some, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 14
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, top, top, top, top, top, top, top, top, top, class scala/Option, class coursier/core/Version$Tokenizer$Separator, class scala/Some, class coursier/core/Version$Tokenizer$Separator ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, top, top, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option, class scala/Tuple2, top, class coursier/core/Version$Tokenizer$Separator, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/Option ]
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 113: 0
        line 114: 24
        line 119: 46
        line 121: 138
        line 122: 168
        line 124: 190
        line 125: 204
        line 132: 226
        line 133: 318
        line 134: 372
        line 133: 386
        line 136: 389
        line 133: 403
        line 135: 406
        line 133: 420
        line 134: 426
        line 135: 474
        line 136: 482
        line 137: 490
        line 133: 503
        line 139: 507
        line 141: 521
        line 142: 566
        line 143: 578
        line 150: 604
        line 152: 696
        line 153: 773
        line 143: 794
        line 155: 800
        line 156: 896
        line 142: 914
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           75      26    11 digits0   Ljava/lang/String;
           85      16    12   rem   Lscala/collection/immutable/LazyList;
          128      73    13 digits0   Ljava/lang/String;
          138      63    14   rem   Lscala/collection/immutable/LazyList;
          190      11    15  item   Lcoursier/core/Version$Numeric;
          255      26    18 letters0   Ljava/lang/String;
          265      16    19   rem   Lscala/collection/immutable/LazyList;
          308     210    20 letters0   Ljava/lang/String;
          318     200    21   rem   Lscala/collection/immutable/LazyList;
          507      11    22  item   Lcoursier/core/Version$Item;
          542       7    27   sep   Lcoursier/core/Version$Tokenizer$Separator;
          633      26    32  item   Ljava/lang/String;
          643      16    33  rem0   Lscala/collection/immutable/LazyList;
          686     104    34  item   Ljava/lang/String;
          696      94    35  rem0   Lscala/collection/immutable/LazyList;
          566     349    25   sep   Lcoursier/core/Version$Tokenizer$Separator;
            0     916     0  this   Lcoursier/core/Version$Tokenizer$;
            0     916     1     s   Lscala/collection/immutable/LazyList;
            0     916     2  prev   Lscala/Option;
    MethodParameters:
      Name                           Flags
      s                              final
      prev                           final

  private static final scala.Tuple2 parseSeparator$1(scala.collection.immutable.LazyList);
    descriptor: (Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #79                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #334                // Method scala/collection/immutable/LazyList.nonEmpty:()Z
         7: invokevirtual #338                // Method scala/Predef$.assert:(Z)V
        10: aload_0
        11: invokevirtual #161                // Method scala/collection/immutable/LazyList.head:()Ljava/lang/Object;
        14: invokestatic  #167                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        17: istore_1
        18: iload_1
        19: lookupswitch  { // 4
                      43: 111
                      45: 77
                      46: 60
                      95: 94
                 default: 128
            }
        60: new           #118                // class scala/Tuple2
        63: dup
        64: getstatic     #300                // Field coursier/core/Version$Tokenizer$Dot$.MODULE$:Lcoursier/core/Version$Tokenizer$Dot$;
        67: aload_0
        68: invokevirtual #189                // Method scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
        71: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        74: goto          142
        77: new           #118                // class scala/Tuple2
        80: dup
        81: getstatic     #341                // Field coursier/core/Version$Tokenizer$Hyphen$.MODULE$:Lcoursier/core/Version$Tokenizer$Hyphen$;
        84: aload_0
        85: invokevirtual #189                // Method scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
        88: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        91: goto          142
        94: new           #118                // class scala/Tuple2
        97: dup
        98: getstatic     #344                // Field coursier/core/Version$Tokenizer$Underscore$.MODULE$:Lcoursier/core/Version$Tokenizer$Underscore$;
       101: aload_0
       102: invokevirtual #189                // Method scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
       105: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       108: goto          142
       111: new           #118                // class scala/Tuple2
       114: dup
       115: getstatic     #323                // Field coursier/core/Version$Tokenizer$Plus$.MODULE$:Lcoursier/core/Version$Tokenizer$Plus$;
       118: aload_0
       119: invokevirtual #189                // Method scala/collection/immutable/LazyList.tail:()Lscala/collection/immutable/LazyList;
       122: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       125: goto          142
       128: new           #118                // class scala/Tuple2
       131: dup
       132: getstatic     #219                // Field coursier/core/Version$Tokenizer$None$.MODULE$:Lcoursier/core/Version$Tokenizer$None$;
       135: aload_0
       136: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       139: goto          142
       142: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 60
          locals = [ int ]
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 162: 0
        line 164: 10
        line 165: 60
        line 166: 77
        line 167: 94
        line 168: 111
        line 169: 128
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     143     0     s   Lscala/collection/immutable/LazyList;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final scala.collection.immutable.LazyList $anonfun$apply$1(coursier.core.Version$Tokenizer$, scala.collection.immutable.LazyList);
    descriptor: (Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #139                // Method helper$1:(Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
         5: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lcoursier/core/Version$Tokenizer$;
            0       6     1 rem$1   Lscala/collection/immutable/LazyList;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      rem$1                          final

  public static final scala.Tuple2 $anonfun$apply$2(coursier.core.Version$Tokenizer$Separator, coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #118                // class scala/Tuple2
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 sep$1   Lcoursier/core/Version$Tokenizer$Separator;
            0      10     1 item$1   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      sep$1                          final
      item$1                         final

  private final scala.collection.immutable.LazyList helper$1(scala.collection.immutable.LazyList);
    descriptor: (Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=10, locals=18, args_size=2
         0: aload_1
         1: invokevirtual #153                // Method scala/collection/immutable/LazyList.isEmpty:()Z
         4: ifeq          19
         7: getstatic     #93                 // Field scala/collection/compat/immutable/package$.MODULE$:Lscala/collection/compat/immutable/package$;
        10: invokevirtual #97                 // Method scala/collection/compat/immutable/package$.LazyList:()Lscala/collection/immutable/LazyList$;
        13: invokevirtual #356                // Method scala/collection/immutable/LazyList$.empty:()Lscala/collection/immutable/LazyList;
        16: goto          300
        19: aload_1
        20: invokestatic  #216                // Method parseSeparator$1:(Lscala/collection/immutable/LazyList;)Lscala/Tuple2;
        23: astore        6
        25: aload         6
        27: ifnull        66
        30: aload         6
        32: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
        35: checkcast     #45                 // class coursier/core/Version$Tokenizer$Separator
        38: astore        7
        40: aload         6
        42: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
        45: checkcast     #61                 // class scala/collection/immutable/LazyList
        48: astore        8
        50: new           #118                // class scala/Tuple2
        53: dup
        54: aload         7
        56: aload         8
        58: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        61: astore        4
        63: goto          79
        66: goto          69
        69: new           #130                // class scala/MatchError
        72: dup
        73: aload         6
        75: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        78: athrow
        79: aload         4
        81: astore        5
        83: aload         5
        85: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
        88: checkcast     #45                 // class coursier/core/Version$Tokenizer$Separator
        91: astore        9
        93: aload         5
        95: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
        98: checkcast     #61                 // class scala/collection/immutable/LazyList
       101: astore        10
       103: aload         9
       105: astore        11
       107: getstatic     #323                // Field coursier/core/Version$Tokenizer$Plus$.MODULE$:Lcoursier/core/Version$Tokenizer$Plus$;
       110: aload         11
       112: invokevirtual #223                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       115: ifeq          170
       118: getstatic     #93                 // Field scala/collection/compat/immutable/package$.MODULE$:Lscala/collection/compat/immutable/package$;
       121: invokevirtual #97                 // Method scala/collection/compat/immutable/package$.LazyList:()Lscala/collection/immutable/LazyList$;
       124: getstatic     #361                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       127: iconst_1
       128: anewarray     #118                // class scala/Tuple2
       131: dup
       132: iconst_0
       133: new           #118                // class scala/Tuple2
       136: dup
       137: aload         9
       139: getstatic     #364                // Field coursier/core/Version$BuildMetadata$.MODULE$:Lcoursier/core/Version$BuildMetadata$;
       142: aload         10
       144: invokevirtual #367                // Method scala/collection/immutable/LazyList.mkString:()Ljava/lang/String;
       147: invokevirtual #370                // Method coursier/core/Version$BuildMetadata$.apply:(Ljava/lang/String;)Lcoursier/core/Version$BuildMetadata;
       150: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       153: aastore
       154: checkcast     #372                // class "[Ljava/lang/Object;"
       157: invokevirtual #376                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       160: invokevirtual #379                // Method scala/collection/immutable/LazyList$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       163: checkcast     #61                 // class scala/collection/immutable/LazyList
       166: astore_2
       167: goto          299
       170: goto          173
       173: aload_0
       174: aload         10
       176: new           #297                // class scala/Some
       179: dup
       180: aload         9
       182: invokespecial #301                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       185: invokespecial #116                // Method parseItem$1:(Lscala/collection/immutable/LazyList;Lscala/Option;)Lscala/Tuple2;
       188: astore        13
       190: aload         13
       192: ifnull        230
       195: aload         13
       197: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       200: checkcast     #20                 // class coursier/core/Version$Item
       203: astore        14
       205: aload         13
       207: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       210: checkcast     #61                 // class scala/collection/immutable/LazyList
       213: astore        15
       215: new           #118                // class scala/Tuple2
       218: dup
       219: aload         14
       221: aload         15
       223: invokespecial #128                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       226: astore_3
       227: goto          243
       230: goto          233
       233: new           #130                // class scala/MatchError
       236: dup
       237: aload         13
       239: invokespecial #133                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       242: athrow
       243: aload_3
       244: astore        12
       246: aload         12
       248: invokevirtual #122                // Method scala/Tuple2._1:()Ljava/lang/Object;
       251: checkcast     #20                 // class coursier/core/Version$Item
       254: astore        16
       256: aload         12
       258: invokevirtual #125                // Method scala/Tuple2._2:()Ljava/lang/Object;
       261: checkcast     #61                 // class scala/collection/immutable/LazyList
       264: astore        17
       266: getstatic     #382                // Field scala/collection/immutable/LazyList$Deferrer$.MODULE$:Lscala/collection/immutable/LazyList$Deferrer$;
       269: getstatic     #385                // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
       272: aload_0
       273: aload         17
       275: invokedynamic #402,  0            // InvokeDynamic #0:apply:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/Function0;
       280: invokevirtual #406                // Method scala/collection/immutable/LazyList$.toDeferrer:(Lscala/Function0;)Lscala/Function0;
       283: aload         9
       285: aload         16
       287: invokedynamic #414,  0            // InvokeDynamic #1:apply:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Function0;
       292: invokevirtual #418                // Method scala/collection/immutable/LazyList$Deferrer$.$hash$colon$colon$extension:(Lscala/Function0;Lscala/Function0;)Lscala/collection/immutable/LazyList;
       295: astore_2
       296: goto          299
       299: aload_2
       300: areturn
      StackMapTable: number_of_entries = 11
        frame_type = 19 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, top, top, class scala/Tuple2, top, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/collection/immutable/LazyList ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 90
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/collection/immutable/LazyList, class coursier/core/Version$Tokenizer$Separator, class scala/collection/immutable/LazyList, class coursier/core/Version$Tokenizer$Separator ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 56
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/collection/immutable/LazyList, class coursier/core/Version$Tokenizer$Separator, class scala/collection/immutable/LazyList, class coursier/core/Version$Tokenizer$Separator, top, class scala/Tuple2, class coursier/core/Version$Item, class scala/collection/immutable/LazyList ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList, class scala/collection/immutable/LazyList, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class coursier/core/Version$Tokenizer$Separator, class scala/collection/immutable/LazyList, class coursier/core/Version$Tokenizer$Separator, class scala/collection/immutable/LazyList, class coursier/core/Version$Tokenizer$Separator ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/core/Version$Tokenizer$, class scala/collection/immutable/LazyList ]
          stack = [ class scala/collection/immutable/LazyList ]
      LineNumberTable:
        line 174: 0
        line 176: 19
        line 177: 103
        line 178: 107
        line 179: 118
        line 178: 170
        line 181: 173
        line 182: 266
        line 177: 299
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      26     7   sep   Lcoursier/core/Version$Tokenizer$Separator;
           50      16     8  rem0   Lscala/collection/immutable/LazyList;
          205      25    14  item   Lcoursier/core/Version$Item;
          215      15    15   rem   Lscala/collection/immutable/LazyList;
          256      39    16  item   Lcoursier/core/Version$Item;
          266      29    17   rem   Lscala/collection/immutable/LazyList;
           93     207     9   sep   Lcoursier/core/Version$Tokenizer$Separator;
          103     197    10  rem0   Lscala/collection/immutable/LazyList;
            0     301     0  this   Lcoursier/core/Version$Tokenizer$;
            0     301     1     s   Lscala/collection/immutable/LazyList;
    MethodParameters:
      Name                           Flags
      s                              final

  public coursier.core.Version$Tokenizer$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #419                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 192: 0
        line 103: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version$Tokenizer$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #431,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // BigNumber=class coursier/core/Version$BigNumber of class coursier/core/Version
  public static #13= #12 of #9;           // =class coursier/core/Version$BigNumber$ of class coursier/core/Version
  public static final #16= #15 of #9;     // BuildMetadata=class coursier/core/Version$BuildMetadata of class coursier/core/Version
  public static #13= #18 of #9;           // =class coursier/core/Version$BuildMetadata$ of class coursier/core/Version
  public static abstract #21= #20 of #9;  // Item=class coursier/core/Version$Item of class coursier/core/Version
  public static #13= #23 of #9;           // =class coursier/core/Version$Max$ of class coursier/core/Version
  public static #13= #25 of #9;           // =class coursier/core/Version$Min$ of class coursier/core/Version
  public static final #28= #27 of #9;     // Number=class coursier/core/Version$Number of class coursier/core/Version
  public static #13= #30 of #9;           // =class coursier/core/Version$Number$ of class coursier/core/Version
  public static final #33= #32 of #9;     // Tag=class coursier/core/Version$Tag of class coursier/core/Version
  public static #13= #35 of #9;           // =class coursier/core/Version$Tag$ of class coursier/core/Version
  public static #13= #2 of #9;            // =class coursier/core/Version$Tokenizer$ of class coursier/core/Version
  public static #13= #37 of #2;           // =class coursier/core/Version$Tokenizer$Dot$ of class coursier/core/Version$Tokenizer$
  public static #13= #39 of #2;           // =class coursier/core/Version$Tokenizer$Hyphen$ of class coursier/core/Version$Tokenizer$
  public static #13= #41 of #2;           // =class coursier/core/Version$Tokenizer$None$ of class coursier/core/Version$Tokenizer$
  public static #13= #43 of #2;           // =class coursier/core/Version$Tokenizer$Plus$ of class coursier/core/Version$Tokenizer$
  public static abstract #46= #45 of #2;  // Separator=class coursier/core/Version$Tokenizer$Separator of class coursier/core/Version$Tokenizer$
  public static #13= #48 of #2;           // =class coursier/core/Version$Tokenizer$Underscore$ of class coursier/core/Version$Tokenizer$
  public static #13= #50 of #52;          // =class coursier/core/compatibility/package$RichChar$ of class coursier/core/compatibility/package
  public static final #57= #54 of #56;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #13= #59 of #61;          // =class scala/collection/immutable/LazyList$Deferrer$ of class scala/collection/immutable/LazyList
SourceFile: "Version.scala"
BootstrapMethods:
  0: #399 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #386 ()Ljava/lang/Object;
      #389 REF_invokeStatic coursier/core/Version$Tokenizer$.$anonfun$apply$1:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
      #390 ()Lscala/collection/immutable/LazyList;
      #391 5
      #392 1
      #390 ()Lscala/collection/immutable/LazyList;
  1: #399 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #386 ()Ljava/lang/Object;
      #409 REF_invokeStatic coursier/core/Version$Tokenizer$.$anonfun$apply$2:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Tuple2;
      #411 ()Lscala/Tuple2;
      #391 5
      #392 1
      #411 ()Lscala/Tuple2;
  2: #428 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #389 REF_invokeStatic coursier/core/Version$Tokenizer$.$anonfun$apply$1:(Lcoursier/core/Version$Tokenizer$;Lscala/collection/immutable/LazyList;)Lscala/collection/immutable/LazyList;
      #409 REF_invokeStatic coursier/core/Version$Tokenizer$.$anonfun$apply$2:(Lcoursier/core/Version$Tokenizer$Separator;Lcoursier/core/Version$Item;)Lscala/Tuple2;
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 01 00 0A 01 66 01 67 01 01 6A 01 6B 01 00 4F
   00 4E 01 00 54 00 55 01 00 9F 00 A0 01 00 93 00
   94 01 00 CC 00 A0 01 00 DE 00 A0 01 00 7E 00 7F
   01 00 E2 00 E3 01
  Scala: length = 0x0 (unknown attribute)

