Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/parser/JsonParser$.class
  Last modified May 29, 2022; size 13494 bytes
  SHA-256 checksum 47b25fb396f60eec1b9366a67b31719325b02a3bfb315388cdc955937ff9c2c6
  Compiled from "JsonParser.scala"
public final class org.sireum.parser.JsonParser$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/JsonParser$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 22, methods: 29, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/parser/JsonParser$
    #2 = Class              #1            // org/sireum/parser/JsonParser$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonParser.scala
    #6 = Utf8               org/sireum/Indexable$Pos
    #7 = Class              #6            // org/sireum/Indexable$Pos
    #8 = Utf8               org/sireum/Indexable
    #9 = Class              #8            // org/sireum/Indexable
   #10 = Utf8               Pos
   #11 = Utf8               org/sireum/U32$U32$Slang
   #12 = Class              #11           // org/sireum/U32$U32$Slang
   #13 = Utf8               org/sireum/U32
   #14 = Class              #13           // org/sireum/U32
   #15 = Utf8               U32$Slang
   #16 = Utf8               org/sireum/U32$U32$Slang$u32$
   #17 = Class              #16           // org/sireum/U32$U32$Slang$u32$
   #18 = Utf8               u32$
   #19 = Utf8               org/sireum/U64$U64$Slang
   #20 = Class              #19           // org/sireum/U64$U64$Slang
   #21 = Utf8               org/sireum/U64
   #22 = Class              #21           // org/sireum/U64
   #23 = Utf8               U64$Slang
   #24 = Utf8               org/sireum/U64$U64$Slang$u64$
   #25 = Class              #24           // org/sireum/U64$U64$Slang$u64$
   #26 = Utf8               u64$
   #27 = Utf8               org/sireum/Z$BV$
   #28 = Class              #27           // org/sireum/Z$BV$
   #29 = Utf8               org/sireum/Z
   #30 = Class              #29           // org/sireum/Z
   #31 = Utf8               BV$
   #32 = Utf8               org/sireum/Z$BV$Long
   #33 = Class              #32           // org/sireum/Z$BV$Long
   #34 = Utf8               Long
   #35 = Utf8               org/sireum/parser/JsonParser$IndexableToken
   #36 = Class              #35           // org/sireum/parser/JsonParser$IndexableToken
   #37 = Utf8               org/sireum/parser/JsonParser
   #38 = Class              #37           // org/sireum/parser/JsonParser
   #39 = Utf8               IndexableToken
   #40 = Utf8               org/sireum/parser/JsonParser$IndexableToken$
   #41 = Class              #40           // org/sireum/parser/JsonParser$IndexableToken$
   #42 = Utf8               IndexableToken$
   #43 = Utf8               org/sireum/parser/JsonParser$Result
   #44 = Class              #43           // org/sireum/parser/JsonParser$Result
   #45 = Utf8               Result
   #46 = Utf8               org/sireum/parser/JsonParser$Result$
   #47 = Class              #46           // org/sireum/parser/JsonParser$Result$
   #48 = Utf8               Result$
   #49 = Utf8               org/sireum/parser/JsonParser$Result$Kind$
   #50 = Class              #49           // org/sireum/parser/JsonParser$Result$Kind$
   #51 = Utf8               Kind$
   #52 = Utf8               org/sireum/parser/JsonParser$Result$Kind$GrammaticalError$
   #53 = Class              #52           // org/sireum/parser/JsonParser$Result$Kind$GrammaticalError$
   #54 = Utf8               GrammaticalError$
   #55 = Utf8               org/sireum/parser/JsonParser$Result$Kind$LexicalError$
   #56 = Class              #55           // org/sireum/parser/JsonParser$Result$Kind$LexicalError$
   #57 = Utf8               LexicalError$
   #58 = Utf8               org/sireum/parser/JsonParser$Result$Kind$Normal$
   #59 = Class              #58           // org/sireum/parser/JsonParser$Result$Kind$Normal$
   #60 = Utf8               Normal$
   #61 = Utf8               org/sireum/parser/JsonParser$Result$Kind$Type
   #62 = Class              #61           // org/sireum/parser/JsonParser$Result$Kind$Type
   #63 = Utf8               Type
   #64 = Utf8               org/sireum/parser/ParseTree$Leaf
   #65 = Class              #64           // org/sireum/parser/ParseTree$Leaf
   #66 = Utf8               org/sireum/parser/ParseTree
   #67 = Class              #66           // org/sireum/parser/ParseTree
   #68 = Utf8               Leaf
   #69 = Utf8               org/sireum/parser/ParseTree$Leaf$
   #70 = Class              #69           // org/sireum/parser/ParseTree$Leaf$
   #71 = Utf8               Leaf$
   #72 = Utf8               MODULE$
   #73 = Utf8               Lorg/sireum/parser/JsonParser$;
   #74 = Utf8               kind
   #75 = Utf8               Ljava/lang/String;
   #76 = Utf8               minChar
   #77 = Utf8               I
   #78 = Utf8               maxChar
   #79 = Utf8               T_AFEF039D
   #80 = Utf8               T_D8AFD1B9
   #81 = Utf8               T_3EA44541
   #82 = Utf8               T_FDCE65E5
   #83 = Utf8               T_763C38BE
   #84 = Utf8               T_45445E21
   #85 = Utf8               T_5BF60471
   #86 = Utf8               T_A44269E9
   #87 = Utf8               T_9977908D
   #88 = Utf8               T_STRING
   #89 = Utf8               T_NUMBER
   #90 = Utf8               T_WS
   #91 = Utf8               T_valueFile
   #92 = Utf8               T_value
   #93 = Utf8               T_object
   #94 = Utf8               T_array
   #95 = Utf8               errorLeaf
   #96 = Utf8               Lorg/sireum/parser/ParseTree$Leaf;
   #97 = Utf8               eofLeaf
   #98 = Utf8               <clinit>
   #99 = Utf8               ()V
  #100 = Utf8               <init>
  #101 = NameAndType        #100:#99      // "<init>":()V
  #102 = Methodref          #2.#101       // org/sireum/parser/JsonParser$."<init>":()V
  #103 = NameAndType        #72:#73       // MODULE$:Lorg/sireum/parser/JsonParser$;
  #104 = Fieldref           #2.#103       // org/sireum/parser/JsonParser$.MODULE$:Lorg/sireum/parser/JsonParser$;
  #105 = Utf8               org/sireum/String$
  #106 = Class              #105          // org/sireum/String$
  #107 = Utf8               Lorg/sireum/String$;
  #108 = NameAndType        #72:#107      // MODULE$:Lorg/sireum/String$;
  #109 = Fieldref           #106.#108     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #110 = Utf8               JsonParser
  #111 = String             #110          // JsonParser
  #112 = Utf8               apply
  #113 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #114 = NameAndType        #112:#113     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #115 = Methodref          #106.#114     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #116 = NameAndType        #74:#75       // kind:Ljava/lang/String;
  #117 = Fieldref           #2.#116       // org/sireum/parser/JsonParser$.kind:Ljava/lang/String;
  #118 = Utf8               org/sireum/C$
  #119 = Class              #118          // org/sireum/C$
  #120 = Utf8               Lorg/sireum/C$;
  #121 = NameAndType        #72:#120      // MODULE$:Lorg/sireum/C$;
  #122 = Fieldref           #119.#121     // org/sireum/C$.MODULE$:Lorg/sireum/C$;
  #123 = Utf8               (C)I
  #124 = NameAndType        #112:#123     // apply:(C)I
  #125 = Methodref          #119.#124     // org/sireum/C$.apply:(C)I
  #126 = NameAndType        #76:#77       // minChar:I
  #127 = Fieldref           #2.#126       // org/sireum/parser/JsonParser$.minChar:I
  #128 = Utf8               org/sireum/conversions/U32$
  #129 = Class              #128          // org/sireum/conversions/U32$
  #130 = Utf8               Lorg/sireum/conversions/U32$;
  #131 = NameAndType        #72:#130      // MODULE$:Lorg/sireum/conversions/U32$;
  #132 = Fieldref           #129.#131     // org/sireum/conversions/U32$.MODULE$:Lorg/sireum/conversions/U32$;
  #133 = Utf8               org/sireum/U32$
  #134 = Class              #133          // org/sireum/U32$
  #135 = Utf8               Lorg/sireum/U32$;
  #136 = NameAndType        #72:#135      // MODULE$:Lorg/sireum/U32$;
  #137 = Fieldref           #134.#136     // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
  #138 = Utf8               scala/StringContext
  #139 = Class              #138          // scala/StringContext
  #140 = Utf8               scala/runtime/ScalaRunTime$
  #141 = Class              #140          // scala/runtime/ScalaRunTime$
  #142 = Utf8               Lscala/runtime/ScalaRunTime$;
  #143 = NameAndType        #72:#142      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #144 = Fieldref           #141.#143     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #145 = Utf8               java/lang/String
  #146 = Class              #145          // java/lang/String
  #147 = Utf8               0x0010FFFF
  #148 = String             #147          // 0x0010FFFF
  #149 = Utf8               [Ljava/lang/Object;
  #150 = Class              #149          // "[Ljava/lang/Object;"
  #151 = Utf8               wrapRefArray
  #152 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #153 = NameAndType        #151:#152     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #154 = Methodref          #141.#153     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #155 = Utf8               (Lscala/collection/immutable/Seq;)V
  #156 = NameAndType        #100:#155     // "<init>":(Lscala/collection/immutable/Seq;)V
  #157 = Methodref          #139.#156     // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
  #158 = Utf8               (Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
  #159 = NameAndType        #15:#158      // U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
  #160 = Methodref          #134.#159     // org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
  #161 = Utf8               u32
  #162 = Utf8               ()Lorg/sireum/U32$U32$Slang$u32$;
  #163 = NameAndType        #161:#162     // u32:()Lorg/sireum/U32$U32$Slang$u32$;
  #164 = Methodref          #12.#163      // org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
  #165 = Utf8               scala/collection/immutable/Nil$
  #166 = Class              #165          // scala/collection/immutable/Nil$
  #167 = Utf8               Lscala/collection/immutable/Nil$;
  #168 = NameAndType        #72:#167      // MODULE$:Lscala/collection/immutable/Nil$;
  #169 = Fieldref           #166.#168     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #170 = Utf8               (Lscala/collection/immutable/Seq;)I
  #171 = NameAndType        #112:#170     // apply:(Lscala/collection/immutable/Seq;)I
  #172 = Methodref          #17.#171      // org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
  #173 = Utf8               toC
  #174 = Utf8               (I)I
  #175 = NameAndType        #173:#174     // toC:(I)I
  #176 = Methodref          #129.#175     // org/sireum/conversions/U32$.toC:(I)I
  #177 = NameAndType        #78:#77       // maxChar:I
  #178 = Fieldref           #2.#177       // org/sireum/parser/JsonParser$.maxChar:I
  #179 = Utf8               0xAFEF039D
  #180 = String             #179          // 0xAFEF039D
  #181 = NameAndType        #79:#77       // T_AFEF039D:I
  #182 = Fieldref           #2.#181       // org/sireum/parser/JsonParser$.T_AFEF039D:I
  #183 = Utf8               0xD8AFD1B9
  #184 = String             #183          // 0xD8AFD1B9
  #185 = NameAndType        #80:#77       // T_D8AFD1B9:I
  #186 = Fieldref           #2.#185       // org/sireum/parser/JsonParser$.T_D8AFD1B9:I
  #187 = Utf8               0x3EA44541
  #188 = String             #187          // 0x3EA44541
  #189 = NameAndType        #81:#77       // T_3EA44541:I
  #190 = Fieldref           #2.#189       // org/sireum/parser/JsonParser$.T_3EA44541:I
  #191 = Utf8               0xFDCE65E5
  #192 = String             #191          // 0xFDCE65E5
  #193 = NameAndType        #82:#77       // T_FDCE65E5:I
  #194 = Fieldref           #2.#193       // org/sireum/parser/JsonParser$.T_FDCE65E5:I
  #195 = Utf8               0x763C38BE
  #196 = String             #195          // 0x763C38BE
  #197 = NameAndType        #83:#77       // T_763C38BE:I
  #198 = Fieldref           #2.#197       // org/sireum/parser/JsonParser$.T_763C38BE:I
  #199 = Utf8               0x45445E21
  #200 = String             #199          // 0x45445E21
  #201 = NameAndType        #84:#77       // T_45445E21:I
  #202 = Fieldref           #2.#201       // org/sireum/parser/JsonParser$.T_45445E21:I
  #203 = Utf8               0x5BF60471
  #204 = String             #203          // 0x5BF60471
  #205 = NameAndType        #85:#77       // T_5BF60471:I
  #206 = Fieldref           #2.#205       // org/sireum/parser/JsonParser$.T_5BF60471:I
  #207 = Utf8               0xA44269E9
  #208 = String             #207          // 0xA44269E9
  #209 = NameAndType        #86:#77       // T_A44269E9:I
  #210 = Fieldref           #2.#209       // org/sireum/parser/JsonParser$.T_A44269E9:I
  #211 = Utf8               0x9977908D
  #212 = String             #211          // 0x9977908D
  #213 = NameAndType        #87:#77       // T_9977908D:I
  #214 = Fieldref           #2.#213       // org/sireum/parser/JsonParser$.T_9977908D:I
  #215 = Utf8               0xA7CF0FE0
  #216 = String             #215          // 0xA7CF0FE0
  #217 = NameAndType        #88:#77       // T_STRING:I
  #218 = Fieldref           #2.#217       // org/sireum/parser/JsonParser$.T_STRING:I
  #219 = Utf8               0x28C20CF1
  #220 = String             #219          // 0x28C20CF1
  #221 = NameAndType        #89:#77       // T_NUMBER:I
  #222 = Fieldref           #2.#221       // org/sireum/parser/JsonParser$.T_NUMBER:I
  #223 = Utf8               0x0E3F5D1E
  #224 = String             #223          // 0x0E3F5D1E
  #225 = NameAndType        #90:#77       // T_WS:I
  #226 = Fieldref           #2.#225       // org/sireum/parser/JsonParser$.T_WS:I
  #227 = Utf8               0x94F3E412
  #228 = String             #227          // 0x94F3E412
  #229 = NameAndType        #91:#77       // T_valueFile:I
  #230 = Fieldref           #2.#229       // org/sireum/parser/JsonParser$.T_valueFile:I
  #231 = Utf8               0x82EEA07A
  #232 = String             #231          // 0x82EEA07A
  #233 = NameAndType        #92:#77       // T_value:I
  #234 = Fieldref           #2.#233       // org/sireum/parser/JsonParser$.T_value:I
  #235 = Utf8               0x5ED5358F
  #236 = String             #235          // 0x5ED5358F
  #237 = NameAndType        #93:#77       // T_object:I
  #238 = Fieldref           #2.#237       // org/sireum/parser/JsonParser$.T_object:I
  #239 = Utf8               0xB11A9723
  #240 = String             #239          // 0xB11A9723
  #241 = NameAndType        #94:#77       // T_array:I
  #242 = Fieldref           #2.#241       // org/sireum/parser/JsonParser$.T_array:I
  #243 = Utf8               Lorg/sireum/parser/ParseTree$Leaf$;
  #244 = NameAndType        #72:#243      // MODULE$:Lorg/sireum/parser/ParseTree$Leaf$;
  #245 = Fieldref           #70.#244      // org/sireum/parser/ParseTree$Leaf$.MODULE$:Lorg/sireum/parser/ParseTree$Leaf$;
  #246 = Utf8               <ERROR>
  #247 = String             #246          // <ERROR>
  #248 = Utf8               0xE3CDEDDA
  #249 = String             #248          // 0xE3CDEDDA
  #250 = Utf8               org/sireum/package$
  #251 = Class              #250          // org/sireum/package$
  #252 = Utf8               Lorg/sireum/package$;
  #253 = NameAndType        #72:#252      // MODULE$:Lorg/sireum/package$;
  #254 = Fieldref           #251.#253     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #255 = Utf8               F
  #256 = Utf8               ()Z
  #257 = NameAndType        #255:#256     // F:()Z
  #258 = Methodref          #251.#257     // org/sireum/package$.F:()Z
  #259 = Utf8               org/sireum/None$
  #260 = Class              #259          // org/sireum/None$
  #261 = Utf8               Lorg/sireum/None$;
  #262 = NameAndType        #72:#261      // MODULE$:Lorg/sireum/None$;
  #263 = Fieldref           #260.#262     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #264 = Utf8               ()Lorg/sireum/None;
  #265 = NameAndType        #112:#264     // apply:()Lorg/sireum/None;
  #266 = Methodref          #260.#265     // org/sireum/None$.apply:()Lorg/sireum/None;
  #267 = Utf8               (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
  #268 = NameAndType        #112:#267     // apply:(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
  #269 = Methodref          #70.#268      // org/sireum/parser/ParseTree$Leaf$.apply:(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
  #270 = NameAndType        #95:#96       // errorLeaf:Lorg/sireum/parser/ParseTree$Leaf;
  #271 = Fieldref           #2.#270       // org/sireum/parser/JsonParser$.errorLeaf:Lorg/sireum/parser/ParseTree$Leaf;
  #272 = Utf8               <EOF>
  #273 = String             #272          // <EOF>
  #274 = Utf8               EOF
  #275 = String             #274          // EOF
  #276 = Utf8               0xFC5CB374
  #277 = String             #276          // 0xFC5CB374
  #278 = NameAndType        #97:#96       // eofLeaf:Lorg/sireum/parser/ParseTree$Leaf;
  #279 = Fieldref           #2.#278       // org/sireum/parser/JsonParser$.eofLeaf:Lorg/sireum/parser/ParseTree$Leaf;
  #280 = Utf8               ()Ljava/lang/String;
  #281 = Utf8               this
  #282 = Utf8               ()I
  #283 = Utf8               ()Lorg/sireum/parser/ParseTree$Leaf;
  #284 = Utf8               parse
  #285 = Utf8               (Lorg/sireum/Option;Ljava/lang/String;Lorg/sireum/message/Reporter;)Lorg/sireum/Option;
  #286 = Utf8               (Lorg/sireum/Option<Lorg/sireum/String;>;Ljava/lang/String;Lorg/sireum/message/Reporter;)Lorg/sireum/Option<Lorg/sireum/parser/ParseTree;>;
  #287 = Utf8               uriOpt
  #288 = Utf8               input
  #289 = Utf8               reporter
  #290 = Utf8               org/sireum/message/DocInfo$
  #291 = Class              #290          // org/sireum/message/DocInfo$
  #292 = Utf8               Lorg/sireum/message/DocInfo$;
  #293 = NameAndType        #72:#292      // MODULE$:Lorg/sireum/message/DocInfo$;
  #294 = Fieldref           #291.#293     // org/sireum/message/DocInfo$.MODULE$:Lorg/sireum/message/DocInfo$;
  #295 = Utf8               create
  #296 = Utf8               (Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
  #297 = NameAndType        #295:#296     // create:(Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
  #298 = Methodref          #291.#297     // org/sireum/message/DocInfo$.create:(Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
  #299 = Utf8               T
  #300 = NameAndType        #299:#256     // T:()Z
  #301 = Methodref          #251.#300     // org/sireum/package$.T:()Z
  #302 = Utf8               lex
  #303 = Utf8               (Ljava/lang/String;Lorg/sireum/message/DocInfo;ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
  #304 = NameAndType        #302:#303     // lex:(Ljava/lang/String;Lorg/sireum/message/DocInfo;ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
  #305 = Methodref          #2.#304       // org/sireum/parser/JsonParser$.lex:(Ljava/lang/String;Lorg/sireum/message/DocInfo;ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
  #306 = Utf8               org/sireum/B$
  #307 = Class              #306          // org/sireum/B$
  #308 = Utf8               Lorg/sireum/B$;
  #309 = NameAndType        #72:#308      // MODULE$:Lorg/sireum/B$;
  #310 = Fieldref           #307.#309     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #311 = Utf8               org/sireum/message/Reporter
  #312 = Class              #311          // org/sireum/message/Reporter
  #313 = Utf8               hasError
  #314 = NameAndType        #313:#256     // hasError:()Z
  #315 = InterfaceMethodref #312.#314     // org/sireum/message/Reporter.hasError:()Z
  #316 = Utf8               $4B
  #317 = Utf8               (Z)Z
  #318 = NameAndType        #316:#317     // $4B:(Z)Z
  #319 = Methodref          #307.#318     // org/sireum/B$.$4B:(Z)Z
  #320 = Utf8               org/sireum/Indexable$
  #321 = Class              #320          // org/sireum/Indexable$
  #322 = Utf8               Lorg/sireum/Indexable$;
  #323 = NameAndType        #72:#322      // MODULE$:Lorg/sireum/Indexable$;
  #324 = Fieldref           #321.#323     // org/sireum/Indexable$.MODULE$:Lorg/sireum/Indexable$;
  #325 = Utf8               fromIsz
  #326 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Indexable;
  #327 = NameAndType        #325:#326     // fromIsz:(Lorg/sireum/IS;)Lorg/sireum/Indexable;
  #328 = Methodref          #321.#327     // org/sireum/Indexable$.fromIsz:(Lorg/sireum/IS;)Lorg/sireum/Indexable;
  #329 = Utf8               (Lorg/sireum/Indexable;)Lorg/sireum/parser/JsonParser;
  #330 = NameAndType        #112:#329     // apply:(Lorg/sireum/Indexable;)Lorg/sireum/parser/JsonParser;
  #331 = Methodref          #2.#330       // org/sireum/parser/JsonParser$.apply:(Lorg/sireum/Indexable;)Lorg/sireum/parser/JsonParser;
  #332 = Utf8               org/sireum/Z$
  #333 = Class              #332          // org/sireum/Z$
  #334 = Utf8               Lorg/sireum/Z$;
  #335 = NameAndType        #72:#334      // MODULE$:Lorg/sireum/Z$;
  #336 = Fieldref           #333.#335     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #337 = Utf8               (I)Lorg/sireum/Z;
  #338 = NameAndType        #112:#337     // apply:(I)Lorg/sireum/Z;
  #339 = Methodref          #333.#338     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #340 = Utf8               parseValueFile
  #341 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #342 = NameAndType        #340:#341     // parseValueFile:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #343 = Methodref          #38.#342      // org/sireum/parser/JsonParser.parseValueFile:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #344 = Utf8               ()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
  #345 = NameAndType        #74:#344      // kind:()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
  #346 = Methodref          #44.#345      // org/sireum/parser/JsonParser$Result.kind:()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
  #347 = Utf8               Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
  #348 = NameAndType        #72:#347      // MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
  #349 = Fieldref           #59.#348      // org/sireum/parser/JsonParser$Result$Kind$Normal$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
  #350 = Utf8               equals
  #351 = Utf8               (Ljava/lang/Object;)Z
  #352 = NameAndType        #350:#351     // equals:(Ljava/lang/Object;)Z
  #353 = Methodref          #4.#352       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #354 = Utf8               org/sireum/Some$
  #355 = Class              #354          // org/sireum/Some$
  #356 = Utf8               Lorg/sireum/Some$;
  #357 = NameAndType        #72:#356      // MODULE$:Lorg/sireum/Some$;
  #358 = Fieldref           #355.#357     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #359 = Utf8               tree
  #360 = Utf8               ()Lorg/sireum/parser/ParseTree;
  #361 = NameAndType        #359:#360     // tree:()Lorg/sireum/parser/ParseTree;
  #362 = Methodref          #44.#361      // org/sireum/parser/JsonParser$Result.tree:()Lorg/sireum/parser/ParseTree;
  #363 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #364 = NameAndType        #112:#363     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #365 = Methodref          #355.#364     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #366 = Utf8               Lorg/sireum/parser/JsonParser$Result$Kind$LexicalError$;
  #367 = NameAndType        #72:#366      // MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$LexicalError$;
  #368 = Fieldref           #56.#367      // org/sireum/parser/JsonParser$Result$Kind$LexicalError$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$LexicalError$;
  #369 = Utf8               org/sireum/message/PosInfo$
  #370 = Class              #369          // org/sireum/message/PosInfo$
  #371 = Utf8               Lorg/sireum/message/PosInfo$;
  #372 = NameAndType        #72:#371      // MODULE$:Lorg/sireum/message/PosInfo$;
  #373 = Fieldref           #370.#372     // org/sireum/message/PosInfo$.MODULE$:Lorg/sireum/message/PosInfo$;
  #374 = Utf8               newIndex
  #375 = Utf8               ()Lorg/sireum/Z;
  #376 = NameAndType        #374:#375     // newIndex:()Lorg/sireum/Z;
  #377 = Methodref          #44.#376      // org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
  #378 = Utf8               offsetLength
  #379 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)J
  #380 = NameAndType        #378:#379     // offsetLength:(Lorg/sireum/Z;Lorg/sireum/Z;)J
  #381 = Methodref          #2.#380       // org/sireum/parser/JsonParser$.offsetLength:(Lorg/sireum/Z;Lorg/sireum/Z;)J
  #382 = Utf8               (Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
  #383 = NameAndType        #112:#382     // apply:(Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
  #384 = Methodref          #370.#383     // org/sireum/message/PosInfo$.apply:(Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
  #385 = NameAndType        #74:#280      // kind:()Ljava/lang/String;
  #386 = Methodref          #2.#385       // org/sireum/parser/JsonParser$.kind:()Ljava/lang/String;
  #387 = Utf8               Could not recognize token
  #388 = String             #387          // Could not recognize token
  #389 = Utf8               error
  #390 = Utf8               (Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #391 = NameAndType        #389:#390     // error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #392 = InterfaceMethodref #312.#391     // org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #393 = Utf8               Lorg/sireum/parser/JsonParser$Result$Kind$GrammaticalError$;
  #394 = NameAndType        #72:#393      // MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$GrammaticalError$;
  #395 = Fieldref           #53.#394      // org/sireum/parser/JsonParser$Result$Kind$GrammaticalError$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$GrammaticalError$;
  #396 = Utf8               $less
  #397 = Utf8               (Lorg/sireum/Z;)Z
  #398 = NameAndType        #396:#397     // $less:(Lorg/sireum/Z;)Z
  #399 = InterfaceMethodref #30.#398      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #400 = Utf8               unary_$minus
  #401 = NameAndType        #400:#375     // unary_$minus:()Lorg/sireum/Z;
  #402 = InterfaceMethodref #30.#401      // org/sireum/Z.unary_$minus:()Lorg/sireum/Z;
  #403 = Utf8               org/sireum/IS
  #404 = Class              #403          // org/sireum/IS
  #405 = Utf8               size
  #406 = NameAndType        #405:#375     // size:()Lorg/sireum/Z;
  #407 = Methodref          #404.#406     // org/sireum/IS.size:()Lorg/sireum/Z;
  #408 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #409 = NameAndType        #112:#408     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #410 = Methodref          #404.#409     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #411 = Utf8               leaf
  #412 = NameAndType        #411:#283     // leaf:()Lorg/sireum/parser/ParseTree$Leaf;
  #413 = Methodref          #44.#412      // org/sireum/parser/JsonParser$Result.leaf:()Lorg/sireum/parser/ParseTree$Leaf;
  #414 = Utf8               posOpt
  #415 = Utf8               ()Lorg/sireum/Option;
  #416 = NameAndType        #414:#415     // posOpt:()Lorg/sireum/Option;
  #417 = Methodref          #65.#416      // org/sireum/parser/ParseTree$Leaf.posOpt:()Lorg/sireum/Option;
  #418 = Utf8               java/lang/StringBuilder
  #419 = Class              #418          // java/lang/StringBuilder
  #420 = Integer            25
  #421 = Utf8               (I)V
  #422 = NameAndType        #100:#421     // "<init>":(I)V
  #423 = Methodref          #419.#422     // java/lang/StringBuilder."<init>":(I)V
  #424 = Utf8               Could not parse token: \"
  #425 = String             #424          // Could not parse token: \"
  #426 = Utf8               append
  #427 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #428 = NameAndType        #426:#427     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #429 = Methodref          #419.#428     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #430 = Utf8               org/sireum/String
  #431 = Class              #430          // org/sireum/String
  #432 = Utf8               org/sireum/ops/StringOps$
  #433 = Class              #432          // org/sireum/ops/StringOps$
  #434 = Utf8               Lorg/sireum/ops/StringOps$;
  #435 = NameAndType        #72:#434      // MODULE$:Lorg/sireum/ops/StringOps$;
  #436 = Fieldref           #433.#435     // org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
  #437 = Utf8               text
  #438 = NameAndType        #437:#280     // text:()Ljava/lang/String;
  #439 = Methodref          #65.#438      // org/sireum/parser/ParseTree$Leaf.text:()Ljava/lang/String;
  #440 = Utf8               (Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #441 = NameAndType        #112:#440     // apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #442 = Methodref          #433.#441     // org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #443 = Utf8               org/sireum/ops/StringOps
  #444 = Class              #443          // org/sireum/ops/StringOps
  #445 = Utf8               escapeST
  #446 = Utf8               ()Lorg/sireum/ST;
  #447 = NameAndType        #445:#446     // escapeST:()Lorg/sireum/ST;
  #448 = Methodref          #444.#447     // org/sireum/ops/StringOps.escapeST:()Lorg/sireum/ST;
  #449 = Utf8               org/sireum/ST
  #450 = Class              #449          // org/sireum/ST
  #451 = Utf8               render
  #452 = NameAndType        #451:#280     // render:()Ljava/lang/String;
  #453 = Methodref          #450.#452     // org/sireum/ST.render:()Ljava/lang/String;
  #454 = Utf8               (Ljava/lang/String;)V
  #455 = NameAndType        #100:#454     // "<init>":(Ljava/lang/String;)V
  #456 = Methodref          #431.#455     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #457 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #458 = NameAndType        #426:#457     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #459 = Methodref          #419.#458     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #460 = Utf8               \"
  #461 = String             #460          // \"
  #462 = Utf8               toString
  #463 = NameAndType        #462:#280     // toString:()Ljava/lang/String;
  #464 = Methodref          #419.#463     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #465 = Utf8               $minus
  #466 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #467 = NameAndType        #465:#466     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #468 = InterfaceMethodref #30.#467      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #469 = Utf8               Expecting more input but reached the end
  #470 = String             #469          // Expecting more input but reached the end
  #471 = Utf8               scala/MatchError
  #472 = Class              #471          // scala/MatchError
  #473 = Utf8               (Ljava/lang/Object;)V
  #474 = NameAndType        #100:#473     // "<init>":(Ljava/lang/Object;)V
  #475 = Methodref          #472.#474     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #476 = Utf8               token
  #477 = Utf8               idx
  #478 = Utf8               Lorg/sireum/Z;
  #479 = Utf8               docInfo
  #480 = Utf8               Lorg/sireum/message/DocInfo;
  #481 = Utf8               tokens
  #482 = Utf8               Lorg/sireum/IS;
  #483 = Utf8               r
  #484 = Utf8               Lorg/sireum/parser/JsonParser$Result;
  #485 = Utf8               Lorg/sireum/Option;
  #486 = Utf8               Lorg/sireum/message/Reporter;
  #487 = Utf8               org/sireum/message/DocInfo
  #488 = Class              #487          // org/sireum/message/DocInfo
  #489 = Utf8               parseIndexable
  #490 = Utf8               (Lorg/sireum/Indexable$Pos;Lorg/sireum/message/Reporter;)Lorg/sireum/Option;
  #491 = Utf8               (Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;Lorg/sireum/message/Reporter;)Lorg/sireum/Option<Lorg/sireum/parser/ParseTree;>;
  #492 = Utf8               Lorg/sireum/parser/JsonParser$IndexableToken$;
  #493 = NameAndType        #72:#492      // MODULE$:Lorg/sireum/parser/JsonParser$IndexableToken$;
  #494 = Fieldref           #41.#493      // org/sireum/parser/JsonParser$IndexableToken$.MODULE$:Lorg/sireum/parser/JsonParser$IndexableToken$;
  #495 = Utf8               (Lorg/sireum/Indexable$Pos;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
  #496 = NameAndType        #112:#495     // apply:(Lorg/sireum/Indexable$Pos;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
  #497 = Methodref          #41.#496      // org/sireum/parser/JsonParser$IndexableToken$.apply:(Lorg/sireum/Indexable$Pos;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
  #498 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Option;
  #499 = NameAndType        #414:#498     // posOpt:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Option;
  #500 = InterfaceMethodref #7.#499       // org/sireum/Indexable$Pos.posOpt:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Option;
  #501 = Utf8               has
  #502 = NameAndType        #501:#397     // has:(Lorg/sireum/Z;)Z
  #503 = Methodref          #36.#502      // org/sireum/parser/JsonParser$IndexableToken.has:(Lorg/sireum/Z;)Z
  #504 = Utf8               at
  #505 = NameAndType        #504:#341     // at:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #506 = Methodref          #36.#505      // org/sireum/parser/JsonParser$IndexableToken.at:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #507 = Utf8               it
  #508 = Utf8               Lorg/sireum/parser/JsonParser$IndexableToken;
  #509 = Utf8               Lorg/sireum/Indexable$Pos;
  #510 = Utf8               (Ljava/lang/String;Lorg/sireum/message/DocInfo;ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/JsonParser$Result;>;
  #511 = Utf8               skipHidden
  #512 = Utf8               stopAtError
  #513 = Utf8               org/sireum/parser/JsonLexer$
  #514 = Class              #513          // org/sireum/parser/JsonLexer$
  #515 = Utf8               Lorg/sireum/parser/JsonLexer$;
  #516 = NameAndType        #72:#515      // MODULE$:Lorg/sireum/parser/JsonLexer$;
  #517 = Fieldref           #514.#516     // org/sireum/parser/JsonLexer$.MODULE$:Lorg/sireum/parser/JsonLexer$;
  #518 = Utf8               org/sireum/conversions/String$
  #519 = Class              #518          // org/sireum/conversions/String$
  #520 = Utf8               Lorg/sireum/conversions/String$;
  #521 = NameAndType        #72:#520      // MODULE$:Lorg/sireum/conversions/String$;
  #522 = Fieldref           #519.#521     // org/sireum/conversions/String$.MODULE$:Lorg/sireum/conversions/String$;
  #523 = Utf8               toCis
  #524 = Utf8               (Ljava/lang/String;)Lorg/sireum/IS;
  #525 = NameAndType        #523:#524     // toCis:(Ljava/lang/String;)Lorg/sireum/IS;
  #526 = Methodref          #519.#525     // org/sireum/conversions/String$.toCis:(Ljava/lang/String;)Lorg/sireum/IS;
  #527 = Utf8               fromIszDocInfo
  #528 = Utf8               (Lorg/sireum/IS;Lorg/sireum/message/DocInfo;)Lorg/sireum/Indexable$Pos;
  #529 = NameAndType        #527:#528     // fromIszDocInfo:(Lorg/sireum/IS;Lorg/sireum/message/DocInfo;)Lorg/sireum/Indexable$Pos;
  #530 = Methodref          #321.#529     // org/sireum/Indexable$.fromIszDocInfo:(Lorg/sireum/IS;Lorg/sireum/message/DocInfo;)Lorg/sireum/Indexable$Pos;
  #531 = Utf8               (Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
  #532 = NameAndType        #112:#531     // apply:(Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
  #533 = Methodref          #514.#532     // org/sireum/parser/JsonLexer$.apply:(Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
  #534 = Utf8               org/sireum/parser/JsonLexer
  #535 = Class              #534          // org/sireum/parser/JsonLexer
  #536 = Utf8               tokenizeAll
  #537 = Utf8               (ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
  #538 = NameAndType        #536:#537     // tokenizeAll:(ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
  #539 = Methodref          #535.#538     // org/sireum/parser/JsonLexer.tokenizeAll:(ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
  #540 = Utf8               Z
  #541 = Utf8               offset
  #542 = Utf8               length
  #543 = Utf8               org/sireum/conversions/Z$
  #544 = Class              #543          // org/sireum/conversions/Z$
  #545 = Utf8               Lorg/sireum/conversions/Z$;
  #546 = NameAndType        #72:#545      // MODULE$:Lorg/sireum/conversions/Z$;
  #547 = Fieldref           #544.#546     // org/sireum/conversions/Z$.MODULE$:Lorg/sireum/conversions/Z$;
  #548 = Utf8               toU64
  #549 = Utf8               (Lorg/sireum/Z;)J
  #550 = NameAndType        #548:#549     // toU64:(Lorg/sireum/Z;)J
  #551 = Methodref          #544.#550     // org/sireum/conversions/Z$.toU64:(Lorg/sireum/Z;)J
  #552 = Utf8               (J)V
  #553 = NameAndType        #100:#552     // "<init>":(J)V
  #554 = Methodref          #22.#553      // org/sireum/U64."<init>":(J)V
  #555 = Utf8               org/sireum/U64$
  #556 = Class              #555          // org/sireum/U64$
  #557 = Utf8               Lorg/sireum/U64$;
  #558 = NameAndType        #72:#557      // MODULE$:Lorg/sireum/U64$;
  #559 = Fieldref           #556.#558     // org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
  #560 = Utf8               32
  #561 = String             #560          // 32
  #562 = Utf8               (Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #563 = NameAndType        #23:#562      // U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #564 = Methodref          #556.#563     // org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #565 = Utf8               u64
  #566 = Utf8               ()Lorg/sireum/U64$U64$Slang$u64$;
  #567 = NameAndType        #565:#566     // u64:()Lorg/sireum/U64$U64$Slang$u64$;
  #568 = Methodref          #20.#567      // org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
  #569 = Utf8               (Lscala/collection/immutable/Seq;)J
  #570 = NameAndType        #112:#569     // apply:(Lscala/collection/immutable/Seq;)J
  #571 = Methodref          #25.#570      // org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
  #572 = Utf8               $less$less
  #573 = Utf8               (Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #574 = NameAndType        #572:#573     // $less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #575 = Methodref          #22.#574      // org/sireum/U64.$less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #576 = Utf8               0xFFFFFFFF
  #577 = String             #576          // 0xFFFFFFFF
  #578 = Utf8               $amp
  #579 = NameAndType        #578:#573     // $amp:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #580 = Methodref          #22.#579      // org/sireum/U64.$amp:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #581 = Utf8               $bar
  #582 = NameAndType        #581:#573     // $bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #583 = InterfaceMethodref #33.#582      // org/sireum/Z$BV$Long.$bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #584 = Utf8               value
  #585 = Utf8               ()J
  #586 = NameAndType        #584:#585     // value:()J
  #587 = Methodref          #22.#586      // org/sireum/U64.value:()J
  #588 = Utf8               (Lorg/sireum/Indexable<Lorg/sireum/parser/JsonParser$Result;>;)Lorg/sireum/parser/JsonParser;
  #589 = Utf8               (Lorg/sireum/Indexable;)V
  #590 = NameAndType        #100:#589     // "<init>":(Lorg/sireum/Indexable;)V
  #591 = Methodref          #38.#590      // org/sireum/parser/JsonParser."<init>":(Lorg/sireum/Indexable;)V
  #592 = Utf8               Lorg/sireum/Indexable;
  #593 = Utf8               unapply
  #594 = Utf8               (Lorg/sireum/parser/JsonParser;)Lscala/Some;
  #595 = Utf8               (Lorg/sireum/parser/JsonParser;)Lscala/Some<Lorg/sireum/Indexable<Lorg/sireum/parser/JsonParser$Result;>;>;
  #596 = Utf8               o
  #597 = Utf8               scala/Some
  #598 = Class              #597          // scala/Some
  #599 = Utf8               ()Lorg/sireum/Indexable;
  #600 = NameAndType        #481:#599     // tokens:()Lorg/sireum/Indexable;
  #601 = Methodref          #38.#600      // org/sireum/parser/JsonParser.tokens:()Lorg/sireum/Indexable;
  #602 = Methodref          #598.#474     // scala/Some."<init>":(Ljava/lang/Object;)V
  #603 = Utf8               Lorg/sireum/parser/JsonParser;
  #604 = Methodref          #4.#101       // java/lang/Object."<init>":()V
  #605 = Utf8               Code
  #606 = Utf8               LineNumberTable
  #607 = Utf8               LocalVariableTable
  #608 = Utf8               StackMapTable
  #609 = Utf8               Signature
  #610 = Utf8               MethodParameters
  #611 = Utf8               InnerClasses
  #612 = Utf8               SourceFile
  #613 = Utf8               ScalaInlineInfo
  #614 = Utf8               Scala
{
  public static final org.sireum.parser.JsonParser$ MODULE$;
    descriptor: Lorg/sireum/parser/JsonParser$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.lang.String kind;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int minChar;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int maxChar;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_AFEF039D;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_D8AFD1B9;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_3EA44541;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_FDCE65E5;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_763C38BE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_45445E21;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_5BF60471;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_A44269E9;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_9977908D;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_STRING;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_NUMBER;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_WS;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_valueFile;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_value;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_object;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int T_array;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.parser.ParseTree$Leaf errorLeaf;
    descriptor: Lorg/sireum/parser/ParseTree$Leaf;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.parser.ParseTree$Leaf eofLeaf;
    descriptor: Lorg/sireum/parser/ParseTree$Leaf;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=11, locals=0, args_size=0
         0: new           #2                  // class org/sireum/parser/JsonParser$
         3: dup
         4: invokespecial #102                // Method "<init>":()V
         7: putstatic     #104                // Field MODULE$:Lorg/sireum/parser/JsonParser$;
        10: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        13: ldc           #111                // String JsonParser
        15: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        18: putstatic     #117                // Field kind:Ljava/lang/String;
        21: getstatic     #122                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        24: iconst_0
        25: invokevirtual #125                // Method org/sireum/C$.apply:(C)I
        28: putstatic     #127                // Field minChar:I
        31: getstatic     #132                // Field org/sireum/conversions/U32$.MODULE$:Lorg/sireum/conversions/U32$;
        34: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        37: new           #139                // class scala/StringContext
        40: dup
        41: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        44: iconst_1
        45: anewarray     #146                // class java/lang/String
        48: dup
        49: iconst_0
        50: ldc           #148                // String 0x0010FFFF
        52: aastore
        53: checkcast     #150                // class "[Ljava/lang/Object;"
        56: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        59: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        62: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
        65: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
        68: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        71: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
        74: invokevirtual #176                // Method org/sireum/conversions/U32$.toC:(I)I
        77: putstatic     #178                // Field maxChar:I
        80: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        83: new           #139                // class scala/StringContext
        86: dup
        87: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        90: iconst_1
        91: anewarray     #146                // class java/lang/String
        94: dup
        95: iconst_0
        96: ldc           #180                // String 0xAFEF039D
        98: aastore
        99: checkcast     #150                // class "[Ljava/lang/Object;"
       102: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       105: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       108: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       111: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       114: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       117: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       120: putstatic     #182                // Field T_AFEF039D:I
       123: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       126: new           #139                // class scala/StringContext
       129: dup
       130: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       133: iconst_1
       134: anewarray     #146                // class java/lang/String
       137: dup
       138: iconst_0
       139: ldc           #184                // String 0xD8AFD1B9
       141: aastore
       142: checkcast     #150                // class "[Ljava/lang/Object;"
       145: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       148: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       151: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       154: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       157: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       160: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       163: putstatic     #186                // Field T_D8AFD1B9:I
       166: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       169: new           #139                // class scala/StringContext
       172: dup
       173: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       176: iconst_1
       177: anewarray     #146                // class java/lang/String
       180: dup
       181: iconst_0
       182: ldc           #188                // String 0x3EA44541
       184: aastore
       185: checkcast     #150                // class "[Ljava/lang/Object;"
       188: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       191: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       194: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       197: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       200: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       203: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       206: putstatic     #190                // Field T_3EA44541:I
       209: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       212: new           #139                // class scala/StringContext
       215: dup
       216: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       219: iconst_1
       220: anewarray     #146                // class java/lang/String
       223: dup
       224: iconst_0
       225: ldc           #192                // String 0xFDCE65E5
       227: aastore
       228: checkcast     #150                // class "[Ljava/lang/Object;"
       231: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       234: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       237: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       240: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       243: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       246: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       249: putstatic     #194                // Field T_FDCE65E5:I
       252: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       255: new           #139                // class scala/StringContext
       258: dup
       259: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       262: iconst_1
       263: anewarray     #146                // class java/lang/String
       266: dup
       267: iconst_0
       268: ldc           #196                // String 0x763C38BE
       270: aastore
       271: checkcast     #150                // class "[Ljava/lang/Object;"
       274: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       277: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       280: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       283: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       286: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       289: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       292: putstatic     #198                // Field T_763C38BE:I
       295: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       298: new           #139                // class scala/StringContext
       301: dup
       302: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       305: iconst_1
       306: anewarray     #146                // class java/lang/String
       309: dup
       310: iconst_0
       311: ldc           #200                // String 0x45445E21
       313: aastore
       314: checkcast     #150                // class "[Ljava/lang/Object;"
       317: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       320: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       323: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       326: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       329: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       332: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       335: putstatic     #202                // Field T_45445E21:I
       338: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       341: new           #139                // class scala/StringContext
       344: dup
       345: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       348: iconst_1
       349: anewarray     #146                // class java/lang/String
       352: dup
       353: iconst_0
       354: ldc           #204                // String 0x5BF60471
       356: aastore
       357: checkcast     #150                // class "[Ljava/lang/Object;"
       360: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       363: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       366: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       369: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       372: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       375: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       378: putstatic     #206                // Field T_5BF60471:I
       381: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       384: new           #139                // class scala/StringContext
       387: dup
       388: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       391: iconst_1
       392: anewarray     #146                // class java/lang/String
       395: dup
       396: iconst_0
       397: ldc           #208                // String 0xA44269E9
       399: aastore
       400: checkcast     #150                // class "[Ljava/lang/Object;"
       403: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       406: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       409: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       412: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       415: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       418: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       421: putstatic     #210                // Field T_A44269E9:I
       424: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       427: new           #139                // class scala/StringContext
       430: dup
       431: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       434: iconst_1
       435: anewarray     #146                // class java/lang/String
       438: dup
       439: iconst_0
       440: ldc           #212                // String 0x9977908D
       442: aastore
       443: checkcast     #150                // class "[Ljava/lang/Object;"
       446: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       449: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       452: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       455: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       458: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       461: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       464: putstatic     #214                // Field T_9977908D:I
       467: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       470: new           #139                // class scala/StringContext
       473: dup
       474: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       477: iconst_1
       478: anewarray     #146                // class java/lang/String
       481: dup
       482: iconst_0
       483: ldc           #216                // String 0xA7CF0FE0
       485: aastore
       486: checkcast     #150                // class "[Ljava/lang/Object;"
       489: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       492: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       495: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       498: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       501: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       504: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       507: putstatic     #218                // Field T_STRING:I
       510: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       513: new           #139                // class scala/StringContext
       516: dup
       517: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       520: iconst_1
       521: anewarray     #146                // class java/lang/String
       524: dup
       525: iconst_0
       526: ldc           #220                // String 0x28C20CF1
       528: aastore
       529: checkcast     #150                // class "[Ljava/lang/Object;"
       532: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       535: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       538: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       541: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       544: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       547: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       550: putstatic     #222                // Field T_NUMBER:I
       553: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       556: new           #139                // class scala/StringContext
       559: dup
       560: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       563: iconst_1
       564: anewarray     #146                // class java/lang/String
       567: dup
       568: iconst_0
       569: ldc           #224                // String 0x0E3F5D1E
       571: aastore
       572: checkcast     #150                // class "[Ljava/lang/Object;"
       575: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       578: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       581: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       584: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       587: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       590: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       593: putstatic     #226                // Field T_WS:I
       596: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       599: new           #139                // class scala/StringContext
       602: dup
       603: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       606: iconst_1
       607: anewarray     #146                // class java/lang/String
       610: dup
       611: iconst_0
       612: ldc           #228                // String 0x94F3E412
       614: aastore
       615: checkcast     #150                // class "[Ljava/lang/Object;"
       618: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       621: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       624: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       627: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       630: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       633: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       636: putstatic     #230                // Field T_valueFile:I
       639: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       642: new           #139                // class scala/StringContext
       645: dup
       646: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       649: iconst_1
       650: anewarray     #146                // class java/lang/String
       653: dup
       654: iconst_0
       655: ldc           #232                // String 0x82EEA07A
       657: aastore
       658: checkcast     #150                // class "[Ljava/lang/Object;"
       661: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       664: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       667: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       670: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       673: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       676: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       679: putstatic     #234                // Field T_value:I
       682: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       685: new           #139                // class scala/StringContext
       688: dup
       689: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       692: iconst_1
       693: anewarray     #146                // class java/lang/String
       696: dup
       697: iconst_0
       698: ldc           #236                // String 0x5ED5358F
       700: aastore
       701: checkcast     #150                // class "[Ljava/lang/Object;"
       704: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       707: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       710: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       713: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       716: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       719: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       722: putstatic     #238                // Field T_object:I
       725: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       728: new           #139                // class scala/StringContext
       731: dup
       732: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       735: iconst_1
       736: anewarray     #146                // class java/lang/String
       739: dup
       740: iconst_0
       741: ldc           #240                // String 0xB11A9723
       743: aastore
       744: checkcast     #150                // class "[Ljava/lang/Object;"
       747: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       750: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       753: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       756: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       759: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       762: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       765: putstatic     #242                // Field T_array:I
       768: getstatic     #245                // Field org/sireum/parser/ParseTree$Leaf$.MODULE$:Lorg/sireum/parser/ParseTree$Leaf$;
       771: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       774: ldc           #247                // String <ERROR>
       776: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       779: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       782: ldc           #247                // String <ERROR>
       784: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       787: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       790: new           #139                // class scala/StringContext
       793: dup
       794: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       797: iconst_1
       798: anewarray     #146                // class java/lang/String
       801: dup
       802: iconst_0
       803: ldc           #249                // String 0xE3CDEDDA
       805: aastore
       806: checkcast     #150                // class "[Ljava/lang/Object;"
       809: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       812: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       815: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       818: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       821: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       824: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       827: getstatic     #254                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       830: invokevirtual #258                // Method org/sireum/package$.F:()Z
       833: getstatic     #263                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       836: invokevirtual #266                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       839: invokevirtual #269                // Method org/sireum/parser/ParseTree$Leaf$.apply:(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
       842: putstatic     #271                // Field errorLeaf:Lorg/sireum/parser/ParseTree$Leaf;
       845: getstatic     #245                // Field org/sireum/parser/ParseTree$Leaf$.MODULE$:Lorg/sireum/parser/ParseTree$Leaf$;
       848: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       851: ldc_w         #273                // String <EOF>
       854: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       857: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       860: ldc_w         #275                // String EOF
       863: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       866: getstatic     #137                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       869: new           #139                // class scala/StringContext
       872: dup
       873: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       876: iconst_1
       877: anewarray     #146                // class java/lang/String
       880: dup
       881: iconst_0
       882: ldc_w         #277                // String 0xFC5CB374
       885: aastore
       886: checkcast     #150                // class "[Ljava/lang/Object;"
       889: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       892: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       895: invokevirtual #160                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
       898: invokevirtual #164                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
       901: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       904: invokevirtual #172                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
       907: getstatic     #254                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       910: invokevirtual #258                // Method org/sireum/package$.F:()Z
       913: getstatic     #263                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       916: invokevirtual #266                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       919: invokevirtual #269                // Method org/sireum/parser/ParseTree$Leaf$.apply:(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
       922: putstatic     #279                // Field eofLeaf:Lorg/sireum/parser/ParseTree$Leaf;
       925: return
      LineNumberTable:
        line 44: 0
        line 192: 10
        line 194: 21
        line 195: 31
        line 197: 80
        line 198: 123
        line 199: 166
        line 200: 209
        line 201: 252
        line 202: 295
        line 203: 338
        line 204: 381
        line 205: 424
        line 206: 467
        line 207: 510
        line 208: 553
        line 209: 596
        line 210: 639
        line 211: 682
        line 212: 725
        line 214: 768
        line 215: 845
        line 44: 925

  public java.lang.String kind();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #117                // Field kind:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int minChar();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #127                // Field minChar:I
         3: ireturn
      LineNumberTable:
        line 194: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int maxChar();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #178                // Field maxChar:I
         3: ireturn
      LineNumberTable:
        line 195: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_AFEF039D();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #182                // Field T_AFEF039D:I
         3: ireturn
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_D8AFD1B9();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #186                // Field T_D8AFD1B9:I
         3: ireturn
      LineNumberTable:
        line 198: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_3EA44541();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #190                // Field T_3EA44541:I
         3: ireturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_FDCE65E5();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #194                // Field T_FDCE65E5:I
         3: ireturn
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_763C38BE();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #198                // Field T_763C38BE:I
         3: ireturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_45445E21();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #202                // Field T_45445E21:I
         3: ireturn
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_5BF60471();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #206                // Field T_5BF60471:I
         3: ireturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_A44269E9();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #210                // Field T_A44269E9:I
         3: ireturn
      LineNumberTable:
        line 204: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_9977908D();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #214                // Field T_9977908D:I
         3: ireturn
      LineNumberTable:
        line 205: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_STRING();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #218                // Field T_STRING:I
         3: ireturn
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_NUMBER();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #222                // Field T_NUMBER:I
         3: ireturn
      LineNumberTable:
        line 207: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_WS();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #226                // Field T_WS:I
         3: ireturn
      LineNumberTable:
        line 208: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_valueFile();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #230                // Field T_valueFile:I
         3: ireturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_value();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #234                // Field T_value:I
         3: ireturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_object();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #238                // Field T_object:I
         3: ireturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public int T_array();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #242                // Field T_array:I
         3: ireturn
      LineNumberTable:
        line 212: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public org.sireum.parser.ParseTree$Leaf errorLeaf();
    descriptor: ()Lorg/sireum/parser/ParseTree$Leaf;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #271                // Field errorLeaf:Lorg/sireum/parser/ParseTree$Leaf;
         3: areturn
      LineNumberTable:
        line 214: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public org.sireum.parser.ParseTree$Leaf eofLeaf();
    descriptor: ()Lorg/sireum/parser/ParseTree$Leaf;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #279                // Field eofLeaf:Lorg/sireum/parser/ParseTree$Leaf;
         3: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/parser/JsonParser$;

  public org.sireum.Option<org.sireum.parser.ParseTree> parse(org.sireum.Option<org.sireum.String>, java.lang.String, org.sireum.message.Reporter);
    descriptor: (Lorg/sireum/Option;Ljava/lang/String;Lorg/sireum/message/Reporter;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=12, args_size=4
         0: getstatic     #294                // Field org/sireum/message/DocInfo$.MODULE$:Lorg/sireum/message/DocInfo$;
         3: aload_1
         4: aload_2
         5: invokevirtual #298                // Method org/sireum/message/DocInfo$.create:(Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
         8: astore        5
        10: aload_0
        11: aload_2
        12: aload         5
        14: getstatic     #254                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        17: invokevirtual #301                // Method org/sireum/package$.T:()Z
        20: getstatic     #254                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        23: invokevirtual #301                // Method org/sireum/package$.T:()Z
        26: aload_3
        27: invokevirtual #305                // Method lex:(Ljava/lang/String;Lorg/sireum/message/DocInfo;ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
        30: astore        6
        32: getstatic     #310                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        35: aload_3
        36: invokeinterface #315,  1          // InterfaceMethod org/sireum/message/Reporter.hasError:()Z
        41: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        44: ifeq          54
        47: getstatic     #263                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        50: invokevirtual #266                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        53: areturn
        54: aload_0
        55: getstatic     #324                // Field org/sireum/Indexable$.MODULE$:Lorg/sireum/Indexable$;
        58: aload         6
        60: invokevirtual #328                // Method org/sireum/Indexable$.fromIsz:(Lorg/sireum/IS;)Lorg/sireum/Indexable;
        63: invokevirtual #331                // Method apply:(Lorg/sireum/Indexable;)Lorg/sireum/parser/JsonParser;
        66: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        69: iconst_0
        70: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        73: invokevirtual #343                // Method org/sireum/parser/JsonParser.parseValueFile:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
        76: astore        7
        78: aload         7
        80: invokevirtual #346                // Method org/sireum/parser/JsonParser$Result.kind:()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
        83: astore        8
        85: getstatic     #349                // Field org/sireum/parser/JsonParser$Result$Kind$Normal$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
        88: aload         8
        90: invokevirtual #353                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        93: ifeq          108
        96: getstatic     #358                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        99: aload         7
       101: invokevirtual #362                // Method org/sireum/parser/JsonParser$Result.tree:()Lorg/sireum/parser/ParseTree;
       104: invokevirtual #365                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       107: areturn
       108: goto          111
       111: getstatic     #368                // Field org/sireum/parser/JsonParser$Result$Kind$LexicalError$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$LexicalError$;
       114: aload         8
       116: invokevirtual #353                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       119: ifeq          178
       122: aload_3
       123: getstatic     #358                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       126: getstatic     #373                // Field org/sireum/message/PosInfo$.MODULE$:Lorg/sireum/message/PosInfo$;
       129: aload         5
       131: aload_0
       132: aload         7
       134: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       137: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       140: iconst_1
       141: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       144: invokevirtual #381                // Method offsetLength:(Lorg/sireum/Z;Lorg/sireum/Z;)J
       147: invokevirtual #384                // Method org/sireum/message/PosInfo$.apply:(Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
       150: invokevirtual #365                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       153: aload_0
       154: invokevirtual #386                // Method kind:()Ljava/lang/String;
       157: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       160: ldc_w         #388                // String Could not recognize token
       163: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       166: invokeinterface #392,  4          // InterfaceMethod org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
       171: getstatic     #263                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       174: invokevirtual #266                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       177: areturn
       178: goto          181
       181: getstatic     #395                // Field org/sireum/parser/JsonParser$Result$Kind$GrammaticalError$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$GrammaticalError$;
       184: aload         8
       186: invokevirtual #353                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       189: ifeq          408
       192: getstatic     #310                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       195: aload         7
       197: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       200: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       203: iconst_0
       204: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       207: invokeinterface #399,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       212: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       215: ifeq          231
       218: aload         7
       220: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       223: invokeinterface #402,  1          // InterfaceMethod org/sireum/Z.unary_$minus:()Lorg/sireum/Z;
       228: goto          236
       231: aload         7
       233: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       236: astore        9
       238: getstatic     #310                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       241: aload         9
       243: aload         6
       245: invokevirtual #407                // Method org/sireum/IS.size:()Lorg/sireum/Z;
       248: invokeinterface #399,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       253: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       256: ifeq          350
       259: aload         6
       261: aload         9
       263: invokevirtual #410                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       266: checkcast     #44                 // class org/sireum/parser/JsonParser$Result
       269: invokevirtual #413                // Method org/sireum/parser/JsonParser$Result.leaf:()Lorg/sireum/parser/ParseTree$Leaf;
       272: astore        10
       274: aload_3
       275: aload         10
       277: invokevirtual #417                // Method org/sireum/parser/ParseTree$Leaf.posOpt:()Lorg/sireum/Option;
       280: aload_0
       281: invokevirtual #386                // Method kind:()Ljava/lang/String;
       284: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       287: new           #419                // class java/lang/StringBuilder
       290: dup
       291: ldc_w         #420                // int 25
       294: invokespecial #423                // Method java/lang/StringBuilder."<init>":(I)V
       297: ldc_w         #425                // String Could not parse token: \"
       300: invokevirtual #429                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       303: new           #431                // class org/sireum/String
       306: dup
       307: getstatic     #436                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
       310: aload         10
       312: invokevirtual #439                // Method org/sireum/parser/ParseTree$Leaf.text:()Ljava/lang/String;
       315: invokevirtual #442                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
       318: invokevirtual #448                // Method org/sireum/ops/StringOps.escapeST:()Lorg/sireum/ST;
       321: invokevirtual #453                // Method org/sireum/ST.render:()Ljava/lang/String;
       324: invokespecial #456                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       327: invokevirtual #459                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       330: ldc_w         #461                // String \"
       333: invokevirtual #429                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       336: invokevirtual #464                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       339: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       342: invokeinterface #392,  4          // InterfaceMethod org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
       347: goto          401
       350: aload         6
       352: aload         9
       354: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       357: iconst_1
       358: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       361: invokeinterface #468,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       366: invokevirtual #410                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       369: checkcast     #44                 // class org/sireum/parser/JsonParser$Result
       372: invokevirtual #413                // Method org/sireum/parser/JsonParser$Result.leaf:()Lorg/sireum/parser/ParseTree$Leaf;
       375: astore        11
       377: aload_3
       378: aload         11
       380: invokevirtual #417                // Method org/sireum/parser/ParseTree$Leaf.posOpt:()Lorg/sireum/Option;
       383: aload_0
       384: invokevirtual #386                // Method kind:()Ljava/lang/String;
       387: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       390: ldc_w         #470                // String Expecting more input but reached the end
       393: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       396: invokeinterface #392,  4          // InterfaceMethod org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
       401: getstatic     #263                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       404: invokevirtual #266                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       407: areturn
       408: goto          411
       411: new           #472                // class scala/MatchError
       414: dup
       415: aload         8
       417: invokespecial #475                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       420: athrow
      StackMapTable: number_of_entries = 11
        frame_type = 254 /* append */
          offset_delta = 54
          locals = [ top, class org/sireum/message/DocInfo, class org/sireum/IS ]
        frame_type = 253 /* append */
          offset_delta = 53
          locals = [ class org/sireum/parser/JsonParser$Result, class org/sireum/parser/JsonParser$Result$Kind$Type ]
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 66
        frame_type = 2 /* same */
        frame_type = 49 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
        frame_type = 252 /* append */
          offset_delta = 113
          locals = [ class org/sireum/Z ]
        frame_type = 50 /* same */
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 2 /* same */
      LineNumberTable:
        line 218: 0
        line 219: 10
        line 220: 32
        line 221: 47
        line 223: 54
        line 224: 78
        line 225: 85
        line 226: 111
        line 227: 122
        line 228: 171
        line 226: 178
        line 229: 181
        line 230: 192
        line 231: 238
        line 232: 259
        line 233: 274
        line 235: 350
        line 236: 377
        line 238: 401
        line 229: 408
        line 224: 411
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          274      73    10 token   Lorg/sireum/parser/ParseTree$Leaf;
          377      24    11 token   Lorg/sireum/parser/ParseTree$Leaf;
          238     170     9   idx   Lorg/sireum/Z;
           10     411     5 docInfo   Lorg/sireum/message/DocInfo;
           32     389     6 tokens   Lorg/sireum/IS;
           78     343     7     r   Lorg/sireum/parser/JsonParser$Result;
            0     421     0  this   Lorg/sireum/parser/JsonParser$;
            0     421     1 uriOpt   Lorg/sireum/Option;
            0     421     2 input   Ljava/lang/String;
            0     421     3 reporter   Lorg/sireum/message/Reporter;
    Signature: #286                         // (Lorg/sireum/Option<Lorg/sireum/String;>;Ljava/lang/String;Lorg/sireum/message/Reporter;)Lorg/sireum/Option<Lorg/sireum/parser/ParseTree;>;
    MethodParameters:
      Name                           Flags
      uriOpt                         final
      input                          final
      reporter                       final

  public org.sireum.Option<org.sireum.parser.ParseTree> parseIndexable(org.sireum.Indexable$Pos<org.sireum.C>, org.sireum.message.Reporter);
    descriptor: (Lorg/sireum/Indexable$Pos;Lorg/sireum/message/Reporter;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=10, args_size=3
         0: getstatic     #494                // Field org/sireum/parser/JsonParser$IndexableToken$.MODULE$:Lorg/sireum/parser/JsonParser$IndexableToken$;
         3: aload_1
         4: getstatic     #254                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #301                // Method org/sireum/package$.T:()Z
        10: invokevirtual #497                // Method org/sireum/parser/JsonParser$IndexableToken$.apply:(Lorg/sireum/Indexable$Pos;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
        13: astore        4
        15: aload_0
        16: aload         4
        18: invokevirtual #331                // Method apply:(Lorg/sireum/Indexable;)Lorg/sireum/parser/JsonParser;
        21: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        24: iconst_0
        25: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        28: invokevirtual #343                // Method org/sireum/parser/JsonParser.parseValueFile:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
        31: astore        5
        33: aload         5
        35: invokevirtual #346                // Method org/sireum/parser/JsonParser$Result.kind:()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
        38: astore        6
        40: getstatic     #349                // Field org/sireum/parser/JsonParser$Result$Kind$Normal$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
        43: aload         6
        45: invokevirtual #353                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        48: ifeq          63
        51: getstatic     #358                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        54: aload         5
        56: invokevirtual #362                // Method org/sireum/parser/JsonParser$Result.tree:()Lorg/sireum/parser/ParseTree;
        59: invokevirtual #365                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        62: areturn
        63: goto          66
        66: getstatic     #368                // Field org/sireum/parser/JsonParser$Result$Kind$LexicalError$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$LexicalError$;
        69: aload         6
        71: invokevirtual #353                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        74: ifeq          121
        77: aload_2
        78: aload_1
        79: aload         5
        81: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
        84: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        87: iconst_1
        88: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        91: invokeinterface #500,  3          // InterfaceMethod org/sireum/Indexable$Pos.posOpt:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Option;
        96: aload_0
        97: invokevirtual #386                // Method kind:()Ljava/lang/String;
       100: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       103: ldc_w         #388                // String Could not recognize token
       106: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       109: invokeinterface #392,  4          // InterfaceMethod org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
       114: getstatic     #263                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       117: invokevirtual #266                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       120: areturn
       121: goto          124
       124: getstatic     #395                // Field org/sireum/parser/JsonParser$Result$Kind$GrammaticalError$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$GrammaticalError$;
       127: aload         6
       129: invokevirtual #353                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       132: ifeq          340
       135: getstatic     #310                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       138: aload         5
       140: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       143: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       146: iconst_0
       147: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       150: invokeinterface #399,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       155: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       158: ifeq          174
       161: aload         5
       163: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       166: invokeinterface #402,  1          // InterfaceMethod org/sireum/Z.unary_$minus:()Lorg/sireum/Z;
       171: goto          179
       174: aload         5
       176: invokevirtual #377                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       179: astore        7
       181: getstatic     #310                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       184: aload         4
       186: aload         7
       188: invokevirtual #503                // Method org/sireum/parser/JsonParser$IndexableToken.has:(Lorg/sireum/Z;)Z
       191: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       194: ifeq          285
       197: aload         4
       199: aload         7
       201: invokevirtual #506                // Method org/sireum/parser/JsonParser$IndexableToken.at:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
       204: invokevirtual #413                // Method org/sireum/parser/JsonParser$Result.leaf:()Lorg/sireum/parser/ParseTree$Leaf;
       207: astore        8
       209: aload_2
       210: aload         8
       212: invokevirtual #417                // Method org/sireum/parser/ParseTree$Leaf.posOpt:()Lorg/sireum/Option;
       215: aload_0
       216: invokevirtual #386                // Method kind:()Ljava/lang/String;
       219: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       222: new           #419                // class java/lang/StringBuilder
       225: dup
       226: ldc_w         #420                // int 25
       229: invokespecial #423                // Method java/lang/StringBuilder."<init>":(I)V
       232: ldc_w         #425                // String Could not parse token: \"
       235: invokevirtual #429                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       238: new           #431                // class org/sireum/String
       241: dup
       242: getstatic     #436                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
       245: aload         8
       247: invokevirtual #439                // Method org/sireum/parser/ParseTree$Leaf.text:()Ljava/lang/String;
       250: invokevirtual #442                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
       253: invokevirtual #448                // Method org/sireum/ops/StringOps.escapeST:()Lorg/sireum/ST;
       256: invokevirtual #453                // Method org/sireum/ST.render:()Ljava/lang/String;
       259: invokespecial #456                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       262: invokevirtual #459                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       265: ldc_w         #461                // String \"
       268: invokevirtual #429                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       271: invokevirtual #464                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       274: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       277: invokeinterface #392,  4          // InterfaceMethod org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
       282: goto          333
       285: aload         4
       287: aload         7
       289: getstatic     #336                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       292: iconst_1
       293: invokevirtual #339                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       296: invokeinterface #468,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       301: invokevirtual #506                // Method org/sireum/parser/JsonParser$IndexableToken.at:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
       304: invokevirtual #413                // Method org/sireum/parser/JsonParser$Result.leaf:()Lorg/sireum/parser/ParseTree$Leaf;
       307: astore        9
       309: aload_2
       310: aload         9
       312: invokevirtual #417                // Method org/sireum/parser/ParseTree$Leaf.posOpt:()Lorg/sireum/Option;
       315: aload_0
       316: invokevirtual #386                // Method kind:()Ljava/lang/String;
       319: getstatic     #109                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       322: ldc_w         #470                // String Expecting more input but reached the end
       325: invokevirtual #115                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       328: invokeinterface #392,  4          // InterfaceMethod org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
       333: getstatic     #263                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       336: invokevirtual #266                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       339: areturn
       340: goto          343
       343: new           #472                // class scala/MatchError
       346: dup
       347: aload         6
       349: invokespecial #475                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       352: athrow
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 63
          locals = [ class org/sireum/parser/JsonParser$, class org/sireum/Indexable$Pos, class org/sireum/message/Reporter, top, class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/parser/JsonParser$Result, class org/sireum/parser/JsonParser$Result$Kind$Type ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 54 /* same */
        frame_type = 2 /* same */
        frame_type = 49 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
        frame_type = 252 /* append */
          offset_delta = 105
          locals = [ class org/sireum/Z ]
        frame_type = 47 /* same */
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 2 /* same */
      LineNumberTable:
        line 243: 0
        line 244: 15
        line 245: 33
        line 246: 40
        line 247: 66
        line 248: 77
        line 249: 114
        line 247: 121
        line 250: 124
        line 251: 135
        line 252: 181
        line 253: 197
        line 254: 209
        line 256: 285
        line 257: 309
        line 259: 333
        line 250: 340
        line 245: 343
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          209      73     8 token   Lorg/sireum/parser/ParseTree$Leaf;
          309      24     9 token   Lorg/sireum/parser/ParseTree$Leaf;
          181     159     7   idx   Lorg/sireum/Z;
           15     338     4    it   Lorg/sireum/parser/JsonParser$IndexableToken;
           33     320     5     r   Lorg/sireum/parser/JsonParser$Result;
            0     353     0  this   Lorg/sireum/parser/JsonParser$;
            0     353     1 input   Lorg/sireum/Indexable$Pos;
            0     353     2 reporter   Lorg/sireum/message/Reporter;
    Signature: #491                         // (Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;Lorg/sireum/message/Reporter;)Lorg/sireum/Option<Lorg/sireum/parser/ParseTree;>;
    MethodParameters:
      Name                           Flags
      input                          final
      reporter                       final

  public org.sireum.IS<org.sireum.Z, org.sireum.parser.JsonParser$Result> lex(java.lang.String, org.sireum.message.DocInfo, boolean, boolean, org.sireum.message.Reporter);
    descriptor: (Ljava/lang/String;Lorg/sireum/message/DocInfo;ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=6
         0: getstatic     #517                // Field org/sireum/parser/JsonLexer$.MODULE$:Lorg/sireum/parser/JsonLexer$;
         3: getstatic     #324                // Field org/sireum/Indexable$.MODULE$:Lorg/sireum/Indexable$;
         6: getstatic     #522                // Field org/sireum/conversions/String$.MODULE$:Lorg/sireum/conversions/String$;
         9: aload_1
        10: invokevirtual #526                // Method org/sireum/conversions/String$.toCis:(Ljava/lang/String;)Lorg/sireum/IS;
        13: aload_2
        14: invokevirtual #530                // Method org/sireum/Indexable$.fromIszDocInfo:(Lorg/sireum/IS;Lorg/sireum/message/DocInfo;)Lorg/sireum/Indexable$Pos;
        17: invokevirtual #533                // Method org/sireum/parser/JsonLexer$.apply:(Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
        20: iload_3
        21: iload         4
        23: aload         5
        25: invokevirtual #539                // Method org/sireum/parser/JsonLexer.tokenizeAll:(ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS;
        28: areturn
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/sireum/parser/JsonParser$;
            0      29     1 input   Ljava/lang/String;
            0      29     2 docInfo   Lorg/sireum/message/DocInfo;
            0      29     3 skipHidden   Z
            0      29     4 stopAtError   Z
            0      29     5 reporter   Lorg/sireum/message/Reporter;
    Signature: #510                         // (Ljava/lang/String;Lorg/sireum/message/DocInfo;ZZLorg/sireum/message/Reporter;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/JsonParser$Result;>;
    MethodParameters:
      Name                           Flags
      input                          final
      docInfo                        final
      skipHidden                     final
      stopAtError                    final
      reporter                       final

  public long offsetLength(org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=3
         0: new           #22                 // class org/sireum/U64
         3: dup
         4: getstatic     #547                // Field org/sireum/conversions/Z$.MODULE$:Lorg/sireum/conversions/Z$;
         7: aload_1
         8: invokevirtual #551                // Method org/sireum/conversions/Z$.toU64:(Lorg/sireum/Z;)J
        11: invokespecial #554                // Method org/sireum/U64."<init>":(J)V
        14: new           #22                 // class org/sireum/U64
        17: dup
        18: getstatic     #559                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        21: new           #139                // class scala/StringContext
        24: dup
        25: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        28: iconst_1
        29: anewarray     #146                // class java/lang/String
        32: dup
        33: iconst_0
        34: ldc_w         #561                // String 32
        37: aastore
        38: checkcast     #150                // class "[Ljava/lang/Object;"
        41: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        44: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        47: invokevirtual #564                // Method org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
        50: invokevirtual #568                // Method org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
        53: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        56: invokevirtual #571                // Method org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
        59: invokespecial #554                // Method org/sireum/U64."<init>":(J)V
        62: invokevirtual #575                // Method org/sireum/U64.$less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
        65: new           #22                 // class org/sireum/U64
        68: dup
        69: getstatic     #547                // Field org/sireum/conversions/Z$.MODULE$:Lorg/sireum/conversions/Z$;
        72: aload_2
        73: invokevirtual #551                // Method org/sireum/conversions/Z$.toU64:(Lorg/sireum/Z;)J
        76: invokespecial #554                // Method org/sireum/U64."<init>":(J)V
        79: new           #22                 // class org/sireum/U64
        82: dup
        83: getstatic     #559                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        86: new           #139                // class scala/StringContext
        89: dup
        90: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        93: iconst_1
        94: anewarray     #146                // class java/lang/String
        97: dup
        98: iconst_0
        99: ldc_w         #577                // String 0xFFFFFFFF
       102: aastore
       103: checkcast     #150                // class "[Ljava/lang/Object;"
       106: invokevirtual #154                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       109: invokespecial #157                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       112: invokevirtual #564                // Method org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
       115: invokevirtual #568                // Method org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
       118: getstatic     #169                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       121: invokevirtual #571                // Method org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
       124: invokespecial #554                // Method org/sireum/U64."<init>":(J)V
       127: invokevirtual #580                // Method org/sireum/U64.$amp:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
       130: invokeinterface #583,  2          // InterfaceMethod org/sireum/Z$BV$Long.$bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
       135: checkcast     #22                 // class org/sireum/U64
       138: invokevirtual #587                // Method org/sireum/U64.value:()J
       141: lreturn
      LineNumberTable:
        line 269: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     142     0  this   Lorg/sireum/parser/JsonParser$;
            0     142     1 offset   Lorg/sireum/Z;
            0     142     2 length   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      offset                         final
      length                         final

  public org.sireum.parser.JsonParser apply(org.sireum.Indexable<org.sireum.parser.JsonParser$Result>);
    descriptor: (Lorg/sireum/Indexable;)Lorg/sireum/parser/JsonParser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #38                 // class org/sireum/parser/JsonParser
         3: dup
         4: aload_1
         5: invokespecial #591                // Method org/sireum/parser/JsonParser."<init>":(Lorg/sireum/Indexable;)V
         8: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/parser/JsonParser$;
            0       9     1 tokens   Lorg/sireum/Indexable;
    Signature: #588                         // (Lorg/sireum/Indexable<Lorg/sireum/parser/JsonParser$Result;>;)Lorg/sireum/parser/JsonParser;
    MethodParameters:
      Name                           Flags
      tokens                         final

  public scala.Some<org.sireum.Indexable<org.sireum.parser.JsonParser$Result>> unapply(org.sireum.parser.JsonParser);
    descriptor: (Lorg/sireum/parser/JsonParser;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #598                // class scala/Some
         3: dup
         4: aload_1
         5: invokevirtual #601                // Method org/sireum/parser/JsonParser.tokens:()Lorg/sireum/Indexable;
         8: invokespecial #602                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/parser/JsonParser$;
            0      12     1     o   Lorg/sireum/parser/JsonParser;
    Signature: #595                         // (Lorg/sireum/parser/JsonParser;)Lscala/Some<Lorg/sireum/Indexable<Lorg/sireum/parser/JsonParser$Result;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  private org.sireum.parser.JsonParser$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #604                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$;
}
InnerClasses:
  public static #10= #7 of #9;            // Pos=class org/sireum/Indexable$Pos of class org/sireum/Indexable
  public static #15= #12 of #14;          // U32$Slang=class org/sireum/U32$U32$Slang of class org/sireum/U32
  public #18= #17 of #12;                 // u32$=class org/sireum/U32$U32$Slang$u32$ of class org/sireum/U32$U32$Slang
  public static #23= #20 of #22;          // U64$Slang=class org/sireum/U64$U64$Slang of class org/sireum/U64
  public #26= #25 of #20;                 // u64$=class org/sireum/U64$U64$Slang$u64$ of class org/sireum/U64$U64$Slang
  public static #31= #28 of #30;          // BV$=class org/sireum/Z$BV$ of class org/sireum/Z
  public static #34= #33 of #28;          // Long=class org/sireum/Z$BV$Long of class org/sireum/Z$BV$
  public static final #39= #36 of #38;    // IndexableToken=class org/sireum/parser/JsonParser$IndexableToken of class org/sireum/parser/JsonParser
  public static #42= #41 of #38;          // IndexableToken$=class org/sireum/parser/JsonParser$IndexableToken$ of class org/sireum/parser/JsonParser
  public static final #45= #44 of #38;    // Result=class org/sireum/parser/JsonParser$Result of class org/sireum/parser/JsonParser
  public static #48= #47 of #38;          // Result$=class org/sireum/parser/JsonParser$Result$ of class org/sireum/parser/JsonParser
  public static #51= #50 of #47;          // Kind$=class org/sireum/parser/JsonParser$Result$Kind$ of class org/sireum/parser/JsonParser$Result$
  public static final #54= #53 of #50;    // GrammaticalError$=class org/sireum/parser/JsonParser$Result$Kind$GrammaticalError$ of class org/sireum/parser/JsonParser$Result$Kind$
  public static final #57= #56 of #50;    // LexicalError$=class org/sireum/parser/JsonParser$Result$Kind$LexicalError$ of class org/sireum/parser/JsonParser$Result$Kind$
  public static final #60= #59 of #50;    // Normal$=class org/sireum/parser/JsonParser$Result$Kind$Normal$ of class org/sireum/parser/JsonParser$Result$Kind$
  public static #63= #62 of #50;          // Type=class org/sireum/parser/JsonParser$Result$Kind$Type of class org/sireum/parser/JsonParser$Result$Kind$
  public static final #68= #65 of #67;    // Leaf=class org/sireum/parser/ParseTree$Leaf of class org/sireum/parser/ParseTree
  public static #71= #70 of #67;          // Leaf$=class org/sireum/parser/ParseTree$Leaf$ of class org/sireum/parser/ParseTree
SourceFile: "JsonParser.scala"
  ScalaInlineInfo: length = 0x90 (unknown attribute)
   01 01 00 1C 00 64 00 63 01 00 51 01 1A 01 00 54
   01 1A 01 00 55 01 1A 01 00 53 01 1A 01 00 57 01
   1A 01 00 56 01 1A 01 00 4F 01 1A 01 00 50 01 1A
   01 00 52 01 1A 01 00 59 01 1A 01 00 58 01 1A 01
   00 5A 01 1A 01 00 5E 01 1A 01 00 5D 01 1A 01 00
   5C 01 1A 01 00 5B 01 1A 01 00 70 01 49 01 00 61
   01 1B 01 00 5F 01 1B 01 00 4A 01 18 01 01 2E 01
   2F 01 00 4E 01 1A 01 00 4C 01 1A 01 01 7A 01 7B
   01 01 1C 01 1D 01 01 E9 01 EA 01 02 51 02 52 01

  Scala: length = 0x0 (unknown attribute)

