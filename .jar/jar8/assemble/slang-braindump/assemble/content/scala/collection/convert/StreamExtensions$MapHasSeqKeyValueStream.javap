Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.class
  Last modified May 29, 2022; size 3042 bytes
  SHA-256 checksum 4121ecea423429441b6f4fc4b7ca222c82fa033ee329499efd638125c5ec2878
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$MapHasSeqKeyValueStream<K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 5, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream
   #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamExtensions.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions
   #8 = Class              #7             // scala/collection/convert/StreamExtensions
   #9 = Utf8               MapHasSeqKeyValueStream
  #10 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
  #11 = Class              #10            // scala/collection/convert/StreamExtensions$StreamShape
  #12 = Utf8               StreamShape
  #13 = Utf8               cc
  #14 = Utf8               Lscala/collection/MapOps;
  #15 = Utf8               TCC;
  #16 = Utf8               $outer
  #17 = Utf8               Lscala/collection/convert/StreamExtensions;
  #18 = Utf8               asJavaSeqKeyStream
  #19 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #20 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TK;TS;TSt;>;Lscala/collection/StepperShape<TK;TSt;>;)TS;
  #21 = Utf8               s
  #22 = Utf8               st
  #23 = NameAndType        #13:#14        // cc:Lscala/collection/MapOps;
  #24 = Fieldref           #2.#23         // scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.cc:Lscala/collection/MapOps;
  #25 = Utf8               scala/collection/MapOps
  #26 = Class              #25            // scala/collection/MapOps
  #27 = Utf8               keyStepper
  #28 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #29 = NameAndType        #27:#28        // keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #30 = InterfaceMethodref #26.#29        // scala/collection/MapOps.keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #31 = Utf8               mkStream
  #32 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #33 = NameAndType        #31:#32        // mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #34 = InterfaceMethodref #11.#33        // scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #35 = Utf8               this
  #36 = Utf8               Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
  #37 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape;
  #38 = Utf8               Lscala/collection/StepperShape;
  #39 = Utf8               fromStepper_st
  #40 = Utf8               Lscala/collection/Stepper;
  #41 = Utf8               fromStepper_par
  #42 = Utf8               Z
  #43 = Utf8               scala/collection/Stepper
  #44 = Class              #43            // scala/collection/Stepper
  #45 = Utf8               asJavaSeqValueStream
  #46 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TV;TS;TSt;>;Lscala/collection/StepperShape<TV;TSt;>;)TS;
  #47 = Utf8               valueStepper
  #48 = NameAndType        #47:#28        // valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #49 = InterfaceMethodref #26.#48        // scala/collection/MapOps.valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #50 = Utf8               asJavaSeqStream
  #51 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<Lscala/Tuple2<TK;TV;>;TS;TSt;>;Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TSt;>;)TS;
  #52 = Utf8               stepper
  #53 = NameAndType        #52:#28        // stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #54 = InterfaceMethodref #26.#53        // scala/collection/MapOps.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #55 = Utf8               scala$collection$convert$StreamExtensions$MapHasSeqKeyValueStream$$$outer
  #56 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #57 = NameAndType        #16:#17        // $outer:Lscala/collection/convert/StreamExtensions;
  #58 = Fieldref           #2.#57         // scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.$outer:Lscala/collection/convert/StreamExtensions;
  #59 = Utf8               <init>
  #60 = Utf8               (Lscala/collection/convert/StreamExtensions;Lscala/collection/MapOps;)V
  #61 = Utf8               (TCC;)V
  #62 = Utf8               ()V
  #63 = NameAndType        #59:#62        // "<init>":()V
  #64 = Methodref          #5.#63         // java/lang/Object."<init>":()V
  #65 = Utf8               Signature
  #66 = Utf8               Code
  #67 = Utf8               StackMapTable
  #68 = Utf8               LineNumberTable
  #69 = Utf8               LocalVariableTable
  #70 = Utf8               MethodParameters
  #71 = Utf8               InnerClasses
  #72 = Utf8               SourceFile
  #73 = Utf8               ScalaInlineInfo
  #74 = Utf8               Scala
{
  private final CC cc;
    descriptor: Lscala/collection/MapOps;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #15                          // TCC;

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaSeqKeyStream(scala.collection.convert.StreamExtensions$StreamShape<K, S, St>, scala.collection.StepperShape<K, St>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #24                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #30,  2           // InterfaceMethod scala/collection/MapOps.keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_0
        12: istore        4
        14: astore_3
        15: ifnonnull     20
        18: aconst_null
        19: athrow
        20: aload_1
        21: aload_3
        22: iload         4
        24: invokeinterface #34,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        29: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ class scala/collection/Stepper, int ]
      LineNumberTable:
        line 67: 0
        line 368: 20
        line 67: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
            0      30     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      30     2    st   Lscala/collection/StepperShape;
           20       9     3 fromStepper_st   Lscala/collection/Stepper;
           20       9     4 fromStepper_par   Z
    Signature: #20                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TK;TS;TSt;>;Lscala/collection/StepperShape<TK;TSt;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaSeqValueStream(scala.collection.convert.StreamExtensions$StreamShape<V, S, St>, scala.collection.StepperShape<V, St>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #24                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #49,  2           // InterfaceMethod scala/collection/MapOps.valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_0
        12: istore        4
        14: astore_3
        15: ifnonnull     20
        18: aconst_null
        19: athrow
        20: aload_1
        21: aload_3
        22: iload         4
        24: invokeinterface #34,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        29: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ class scala/collection/Stepper, int ]
      LineNumberTable:
        line 74: 0
        line 368: 20
        line 74: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
            0      30     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      30     2    st   Lscala/collection/StepperShape;
           20       9     3 fromStepper_st   Lscala/collection/Stepper;
           20       9     4 fromStepper_par   Z
    Signature: #46                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TV;TS;TSt;>;Lscala/collection/StepperShape<TV;TSt;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaSeqStream(scala.collection.convert.StreamExtensions$StreamShape<scala.Tuple2<K, V>, S, St>, scala.collection.StepperShape<scala.Tuple2<K, V>, St>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #24                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #54,  2           // InterfaceMethod scala/collection/MapOps.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_0
        12: istore        4
        14: astore_3
        15: ifnonnull     20
        18: aconst_null
        19: athrow
        20: aload_1
        21: aload_3
        22: iload         4
        24: invokeinterface #34,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        29: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ class scala/collection/Stepper, int ]
      LineNumberTable:
        line 81: 0
        line 368: 20
        line 81: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
            0      30     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      30     2    st   Lscala/collection/StepperShape;
           20       9     3 fromStepper_st   Lscala/collection/Stepper;
           20       9     4 fromStepper_par   Z
    Signature: #51                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<Lscala/Tuple2<TK;TV;>;TS;TSt;>;Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TSt;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$MapHasSeqKeyValueStream$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #58                 // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;

  public scala.collection.convert.StreamExtensions$MapHasSeqKeyValueStream(CC);
    descriptor: (Lscala/collection/convert/StreamExtensions;Lscala/collection/MapOps;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #24                 // Field cc:Lscala/collection/MapOps;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #58                 // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #64                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2    cc   Lscala/collection/MapOps;
    Signature: #61                          // (TCC;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      cc                             final
}
InnerClasses:
  public #9= #2 of #8;                    // MapHasSeqKeyValueStream=class scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream of class scala/collection/convert/StreamExtensions
  public static #12= #11 of #8;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>Ljava/lang/Object;
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 3B 00 3C 00 00 12 00 13 00 00 32
   00 13 00 00 2D 00 13 00 00 37 00 38 00
  Scala: length = 0x0 (unknown attribute)

