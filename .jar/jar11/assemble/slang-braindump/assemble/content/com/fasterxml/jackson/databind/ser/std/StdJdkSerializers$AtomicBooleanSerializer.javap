Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer.class
  Last modified May 29, 2022; size 2581 bytes
  SHA-256 checksum 2ed49d9b790be894ff25d3973ae44333ac733682c34cffbe31e07d19fb8aa68c
  Compiled from "StdJdkSerializers.java"
public class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.util.concurrent.atomic.AtomicBoolean>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #9                          // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer
  super_class: #10                        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  interfaces: 0, fields: 0, methods: 5, attributes: 3
Constant pool:
   #1 = Class              #45            // java/util/concurrent/atomic/AtomicBoolean
   #2 = Methodref          #10.#46        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;Z)V
   #3 = Methodref          #1.#47         // java/util/concurrent/atomic/AtomicBoolean.get:()Z
   #4 = Methodref          #48.#49        // com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V
   #5 = String             #50            // boolean
   #6 = Methodref          #9.#51         // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer.createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
   #7 = InterfaceMethodref #52.#53        // com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectBooleanFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonBooleanFormatVisitor;
   #8 = Methodref          #9.#54         // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer.serialize:(Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
   #9 = Class              #56            // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer
  #10 = Class              #57            // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #11 = Utf8               <init>
  #12 = Utf8               ()V
  #13 = Utf8               Code
  #14 = Utf8               LineNumberTable
  #15 = Utf8               LocalVariableTable
  #16 = Utf8               this
  #17 = Utf8               AtomicBooleanSerializer
  #18 = Utf8               InnerClasses
  #19 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer;
  #20 = Utf8               serialize
  #21 = Utf8               (Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #22 = Utf8               value
  #23 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;
  #24 = Utf8               gen
  #25 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
  #26 = Utf8               provider
  #27 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
  #28 = Utf8               Exceptions
  #29 = Class              #58            // java/io/IOException
  #30 = Utf8               getSchema
  #31 = Utf8               (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;
  #32 = Utf8               typeHint
  #33 = Utf8               Ljava/lang/reflect/Type;
  #34 = Utf8               acceptJsonFormatVisitor
  #35 = Utf8               (Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
  #36 = Utf8               visitor
  #37 = Utf8               Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;
  #38 = Utf8               Lcom/fasterxml/jackson/databind/JavaType;
  #39 = Class              #59            // com/fasterxml/jackson/databind/JsonMappingException
  #40 = Utf8               (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #41 = Utf8               Signature
  #42 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/util/concurrent/atomic/AtomicBoolean;>;
  #43 = Utf8               SourceFile
  #44 = Utf8               StdJdkSerializers.java
  #45 = Utf8               java/util/concurrent/atomic/AtomicBoolean
  #46 = NameAndType        #11:#60        // "<init>":(Ljava/lang/Class;Z)V
  #47 = NameAndType        #61:#62        // get:()Z
  #48 = Class              #63            // com/fasterxml/jackson/core/JsonGenerator
  #49 = NameAndType        #64:#65        // writeBoolean:(Z)V
  #50 = Utf8               boolean
  #51 = NameAndType        #66:#67        // createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #52 = Class              #68            // com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper
  #53 = NameAndType        #69:#70        // expectBooleanFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonBooleanFormatVisitor;
  #54 = NameAndType        #20:#21        // serialize:(Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #55 = Class              #71            // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers
  #56 = Utf8               com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer
  #57 = Utf8               com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #58 = Utf8               java/io/IOException
  #59 = Utf8               com/fasterxml/jackson/databind/JsonMappingException
  #60 = Utf8               (Ljava/lang/Class;Z)V
  #61 = Utf8               get
  #62 = Utf8               ()Z
  #63 = Utf8               com/fasterxml/jackson/core/JsonGenerator
  #64 = Utf8               writeBoolean
  #65 = Utf8               (Z)V
  #66 = Utf8               createSchemaNode
  #67 = Utf8               (Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #68 = Utf8               com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper
  #69 = Utf8               expectBooleanFormat
  #70 = Utf8               (Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonBooleanFormatVisitor;
  #71 = Utf8               com/fasterxml/jackson/databind/ser/std/StdJdkSerializers
{
  public com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class java/util/concurrent/atomic/AtomicBoolean
         3: iconst_0
         4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;Z)V
         7: return
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer;

  public void serialize(java.util.concurrent.atomic.AtomicBoolean, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_2
         1: aload_1
         2: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
         5: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V
         8: return
      LineNumberTable:
        line 67: 0
        line 68: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer;
            0       9     1 value   Ljava/util/concurrent/atomic/AtomicBoolean;
            0       9     2   gen   Lcom/fasterxml/jackson/core/JsonGenerator;
            0       9     3 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
    Exceptions:
      throws java.io.IOException

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    descriptor: (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: ldc           #5                  // String boolean
         3: iconst_1
         4: invokevirtual #6                  // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
         7: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer;
            0       8     1 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
            0       8     2 typeHint   Ljava/lang/reflect/Type;

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    descriptor: (Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: invokeinterface #7,  2            // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectBooleanFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonBooleanFormatVisitor;
         7: pop
         8: return
      LineNumberTable:
        line 77: 0
        line 78: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer;
            0       9     1 visitor   Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;
            0       9     2 typeHint   Lcom/fasterxml/jackson/databind/JavaType;
    Exceptions:
      throws com.fasterxml.jackson.databind.JsonMappingException

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: checkcast     #1                  // class java/util/concurrent/atomic/AtomicBoolean
         5: aload_2
         6: aload_3
         7: invokevirtual #8                  // Method serialize:(Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
        10: return
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer;
    Exceptions:
      throws java.io.IOException
}
Signature: #42                          // Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/util/concurrent/atomic/AtomicBoolean;>;
SourceFile: "StdJdkSerializers.java"
InnerClasses:
  public static #17= #9 of #55;           // AtomicBooleanSerializer=class com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicBooleanSerializer of class com/fasterxml/jackson/databind/ser/std/StdJdkSerializers
