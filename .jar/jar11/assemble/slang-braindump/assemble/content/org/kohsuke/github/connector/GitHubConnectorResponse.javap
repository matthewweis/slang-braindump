Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/kohsuke/github/connector/GitHubConnectorResponse.class
  Last modified May 29, 2022; size 5298 bytes
  SHA-256 checksum 8673edc8652a9894f6ed31a260c43d98c13af686496a9b7467a948cf1ccd0dd1
  Compiled from "GitHubConnectorResponse.java"
public abstract class org.kohsuke.github.connector.GitHubConnectorResponse implements java.io.Closeable
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #48                         // org/kohsuke/github/connector/GitHubConnectorResponse
  super_class: #49                        // java/lang/Object
  interfaces: 1, fields: 4, methods: 10, attributes: 2
Constant pool:
    #1 = Methodref          #49.#129      // java/lang/Object."<init>":()V
    #2 = Fieldref           #48.#130      // org/kohsuke/github/connector/GitHubConnectorResponse.request:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
    #3 = Fieldref           #48.#131      // org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:I
    #4 = Class              #132          // java/util/TreeMap
    #5 = Fieldref           #48.#133      // org/kohsuke/github/connector/GitHubConnectorResponse.nullableCaseInsensitiveComparator:Ljava/util/Comparator;
    #6 = Methodref          #4.#134       // java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
    #7 = InterfaceMethodref #84.#135      // java/util/Map.entrySet:()Ljava/util/Set;
    #8 = InterfaceMethodref #136.#137     // java/util/Set.iterator:()Ljava/util/Iterator;
    #9 = InterfaceMethodref #85.#138      // java/util/Iterator.hasNext:()Z
   #10 = InterfaceMethodref #85.#139      // java/util/Iterator.next:()Ljava/lang/Object;
   #11 = Class              #140          // java/util/Map$Entry
   #12 = InterfaceMethodref #11.#141      // java/util/Map$Entry.getKey:()Ljava/lang/Object;
   #13 = Class              #142          // java/lang/String
   #14 = Class              #143          // java/util/ArrayList
   #15 = InterfaceMethodref #11.#144      // java/util/Map$Entry.getValue:()Ljava/lang/Object;
   #16 = Class              #145          // java/util/Collection
   #17 = Methodref          #14.#146      // java/util/ArrayList."<init>":(Ljava/util/Collection;)V
   #18 = Methodref          #147.#148     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
   #19 = Methodref          #4.#149       // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #20 = Methodref          #147.#150     // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
   #21 = Fieldref           #48.#151      // org/kohsuke/github/connector/GitHubConnectorResponse.headers:Ljava/util/Map;
   #22 = Class              #152          // org/kohsuke/github/connector/GitHubConnectorResponseHttpUrlConnectionAdapter
   #23 = Methodref          #22.#153      // org/kohsuke/github/connector/GitHubConnectorResponseHttpUrlConnectionAdapter."<init>":(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #24 = InterfaceMethodref #84.#154      // java/util/Map.containsKey:(Ljava/lang/Object;)Z
   #25 = InterfaceMethodref #84.#155      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #26 = Class              #156          // java/util/List
   #27 = InterfaceMethodref #26.#157      // java/util/List.get:(I)Ljava/lang/Object;
   #28 = String             #158          // Content-Encoding
   #29 = Methodref          #48.#159      // org/kohsuke/github/connector/GitHubConnectorResponse.header:(Ljava/lang/String;)Ljava/lang/String;
   #30 = String             #160          // gzip
   #31 = Methodref          #13.#161      // java/lang/String.equals:(Ljava/lang/Object;)Z
   #32 = Class              #162          // java/util/zip/GZIPInputStream
   #33 = Methodref          #32.#163      // java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
   #34 = Class              #164          // java/lang/UnsupportedOperationException
   #35 = Class              #165          // java/lang/StringBuilder
   #36 = Methodref          #35.#129      // java/lang/StringBuilder."<init>":()V
   #37 = String             #166          // Unexpected Content-Encoding:
   #38 = Methodref          #35.#167      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #39 = Methodref          #35.#168      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #40 = Methodref          #34.#169      // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   #41 = Methodref          #170.#171     // java/lang/Integer.parseInt:(Ljava/lang/String;)I
   #42 = Class              #172          // java/lang/NumberFormatException
   #43 = String             #173          // :
   #44 = Methodref          #42.#174      // java/lang/NumberFormatException.getMessage:()Ljava/lang/String;
   #45 = Methodref          #42.#169      // java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
   #46 = Fieldref           #13.#175      // java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
   #47 = InterfaceMethodref #176.#177     // java/util/Comparator.nullsFirst:(Ljava/util/Comparator;)Ljava/util/Comparator;
   #48 = Class              #178          // org/kohsuke/github/connector/GitHubConnectorResponse
   #49 = Class              #179          // java/lang/Object
   #50 = Class              #180          // java/io/Closeable
   #51 = Class              #181          // org/kohsuke/github/connector/GitHubConnectorResponse$ByteArrayResponse
   #52 = Utf8               ByteArrayResponse
   #53 = Utf8               InnerClasses
   #54 = Utf8               nullableCaseInsensitiveComparator
   #55 = Utf8               Ljava/util/Comparator;
   #56 = Utf8               Signature
   #57 = Utf8               Ljava/util/Comparator<Ljava/lang/String;>;
   #58 = Utf8               statusCode
   #59 = Utf8               I
   #60 = Utf8               request
   #61 = Utf8               Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #62 = Utf8               RuntimeVisibleAnnotations
   #63 = Utf8               Ljavax/annotation/Nonnull;
   #64 = Utf8               headers
   #65 = Utf8               Ljava/util/Map;
   #66 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
   #67 = Utf8               <init>
   #68 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorRequest;ILjava/util/Map;)V
   #69 = Utf8               Code
   #70 = Utf8               LineNumberTable
   #71 = Utf8               LocalVariableTable
   #72 = Utf8               entry
   #73 = Utf8               Entry
   #74 = Utf8               Ljava/util/Map$Entry;
   #75 = Utf8               this
   #76 = Utf8               Lorg/kohsuke/github/connector/GitHubConnectorResponse;
   #77 = Utf8               caseInsensitiveMap
   #78 = Utf8               Ljava/util/TreeMap;
   #79 = Utf8               LocalVariableTypeTable
   #80 = Utf8               Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
   #81 = Utf8               Ljava/util/TreeMap<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
   #82 = Utf8               StackMapTable
   #83 = Class              #182          // org/kohsuke/github/connector/GitHubConnectorRequest
   #84 = Class              #183          // java/util/Map
   #85 = Class              #184          // java/util/Iterator
   #86 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorRequest;ILjava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;)V
   #87 = Utf8               RuntimeVisibleParameterAnnotations
   #88 = Utf8               toHttpURLConnection
   #89 = Utf8               ()Ljava/net/HttpURLConnection;
   #90 = Utf8               connection
   #91 = Utf8               Ljava/net/HttpURLConnection;
   #92 = Utf8               Deprecated
   #93 = Utf8               Ljava/lang/Deprecated;
   #94 = Utf8               header
   #95 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #96 = Utf8               name
   #97 = Utf8               Ljava/lang/String;
   #98 = Utf8               result
   #99 = Utf8               Ljavax/annotation/CheckForNull;
  #100 = Utf8               bodyStream
  #101 = Utf8               ()Ljava/io/InputStream;
  #102 = Utf8               Exceptions
  #103 = Class              #185          // java/io/IOException
  #104 = Utf8               ()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
  #105 = Utf8               ()I
  #106 = Utf8               allHeaders
  #107 = Utf8               ()Ljava/util/Map;
  #108 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
  #109 = Utf8               RuntimeInvisibleAnnotations
  #110 = Utf8               Ledu/umd/cs/findbugs/annotations/SuppressFBWarnings;
  #111 = Utf8               value
  #112 = Utf8               EI_EXPOSE_REP
  #113 = Utf8               justification
  #114 = Utf8               Unmodifiable map of unmodifiable lists
  #115 = Utf8               wrapStream
  #116 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;
  #117 = Utf8               stream
  #118 = Utf8               Ljava/io/InputStream;
  #119 = Utf8               encoding
  #120 = Utf8               parseInt
  #121 = Utf8               (Ljava/lang/String;)I
  #122 = Utf8               headerValue
  #123 = Utf8               e
  #124 = Utf8               Ljava/lang/NumberFormatException;
  #125 = Utf8               <clinit>
  #126 = Utf8               ()V
  #127 = Utf8               SourceFile
  #128 = Utf8               GitHubConnectorResponse.java
  #129 = NameAndType        #67:#126      // "<init>":()V
  #130 = NameAndType        #60:#61       // request:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
  #131 = NameAndType        #58:#59       // statusCode:I
  #132 = Utf8               java/util/TreeMap
  #133 = NameAndType        #54:#55       // nullableCaseInsensitiveComparator:Ljava/util/Comparator;
  #134 = NameAndType        #67:#186      // "<init>":(Ljava/util/Comparator;)V
  #135 = NameAndType        #187:#188     // entrySet:()Ljava/util/Set;
  #136 = Class              #189          // java/util/Set
  #137 = NameAndType        #190:#191     // iterator:()Ljava/util/Iterator;
  #138 = NameAndType        #192:#193     // hasNext:()Z
  #139 = NameAndType        #194:#195     // next:()Ljava/lang/Object;
  #140 = Utf8               java/util/Map$Entry
  #141 = NameAndType        #196:#195     // getKey:()Ljava/lang/Object;
  #142 = Utf8               java/lang/String
  #143 = Utf8               java/util/ArrayList
  #144 = NameAndType        #197:#195     // getValue:()Ljava/lang/Object;
  #145 = Utf8               java/util/Collection
  #146 = NameAndType        #67:#198      // "<init>":(Ljava/util/Collection;)V
  #147 = Class              #199          // java/util/Collections
  #148 = NameAndType        #200:#201     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;
  #149 = NameAndType        #202:#203     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #150 = NameAndType        #204:#205     // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
  #151 = NameAndType        #64:#65       // headers:Ljava/util/Map;
  #152 = Utf8               org/kohsuke/github/connector/GitHubConnectorResponseHttpUrlConnectionAdapter
  #153 = NameAndType        #67:#206      // "<init>":(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
  #154 = NameAndType        #207:#208     // containsKey:(Ljava/lang/Object;)Z
  #155 = NameAndType        #209:#210     // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #156 = Utf8               java/util/List
  #157 = NameAndType        #209:#211     // get:(I)Ljava/lang/Object;
  #158 = Utf8               Content-Encoding
  #159 = NameAndType        #94:#95       // header:(Ljava/lang/String;)Ljava/lang/String;
  #160 = Utf8               gzip
  #161 = NameAndType        #212:#208     // equals:(Ljava/lang/Object;)Z
  #162 = Utf8               java/util/zip/GZIPInputStream
  #163 = NameAndType        #67:#213      // "<init>":(Ljava/io/InputStream;)V
  #164 = Utf8               java/lang/UnsupportedOperationException
  #165 = Utf8               java/lang/StringBuilder
  #166 = Utf8               Unexpected Content-Encoding:
  #167 = NameAndType        #214:#215     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #168 = NameAndType        #216:#217     // toString:()Ljava/lang/String;
  #169 = NameAndType        #67:#218      // "<init>":(Ljava/lang/String;)V
  #170 = Class              #219          // java/lang/Integer
  #171 = NameAndType        #120:#121     // parseInt:(Ljava/lang/String;)I
  #172 = Utf8               java/lang/NumberFormatException
  #173 = Utf8               :
  #174 = NameAndType        #220:#217     // getMessage:()Ljava/lang/String;
  #175 = NameAndType        #221:#55      // CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
  #176 = Class              #222          // java/util/Comparator
  #177 = NameAndType        #223:#224     // nullsFirst:(Ljava/util/Comparator;)Ljava/util/Comparator;
  #178 = Utf8               org/kohsuke/github/connector/GitHubConnectorResponse
  #179 = Utf8               java/lang/Object
  #180 = Utf8               java/io/Closeable
  #181 = Utf8               org/kohsuke/github/connector/GitHubConnectorResponse$ByteArrayResponse
  #182 = Utf8               org/kohsuke/github/connector/GitHubConnectorRequest
  #183 = Utf8               java/util/Map
  #184 = Utf8               java/util/Iterator
  #185 = Utf8               java/io/IOException
  #186 = Utf8               (Ljava/util/Comparator;)V
  #187 = Utf8               entrySet
  #188 = Utf8               ()Ljava/util/Set;
  #189 = Utf8               java/util/Set
  #190 = Utf8               iterator
  #191 = Utf8               ()Ljava/util/Iterator;
  #192 = Utf8               hasNext
  #193 = Utf8               ()Z
  #194 = Utf8               next
  #195 = Utf8               ()Ljava/lang/Object;
  #196 = Utf8               getKey
  #197 = Utf8               getValue
  #198 = Utf8               (Ljava/util/Collection;)V
  #199 = Utf8               java/util/Collections
  #200 = Utf8               unmodifiableList
  #201 = Utf8               (Ljava/util/List;)Ljava/util/List;
  #202 = Utf8               put
  #203 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #204 = Utf8               unmodifiableMap
  #205 = Utf8               (Ljava/util/Map;)Ljava/util/Map;
  #206 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
  #207 = Utf8               containsKey
  #208 = Utf8               (Ljava/lang/Object;)Z
  #209 = Utf8               get
  #210 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #211 = Utf8               (I)Ljava/lang/Object;
  #212 = Utf8               equals
  #213 = Utf8               (Ljava/io/InputStream;)V
  #214 = Utf8               append
  #215 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #216 = Utf8               toString
  #217 = Utf8               ()Ljava/lang/String;
  #218 = Utf8               (Ljava/lang/String;)V
  #219 = Utf8               java/lang/Integer
  #220 = Utf8               getMessage
  #221 = Utf8               CASE_INSENSITIVE_ORDER
  #222 = Utf8               java/util/Comparator
  #223 = Utf8               nullsFirst
  #224 = Utf8               (Ljava/util/Comparator;)Ljava/util/Comparator;
{
  private static final java.util.Comparator<java.lang.String> nullableCaseInsensitiveComparator;
    descriptor: Ljava/util/Comparator;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #57                          // Ljava/util/Comparator<Ljava/lang/String;>;

  private final int statusCode;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.kohsuke.github.connector.GitHubConnectorRequest request;
    descriptor: Lorg/kohsuke/github/connector/GitHubConnectorRequest;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    RuntimeVisibleAnnotations:
      0: #63()
        javax.annotation.Nonnull

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;
    descriptor: Ljava/util/Map;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #66                          // Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
    RuntimeVisibleAnnotations:
      0: #63()
        javax.annotation.Nonnull

  protected org.kohsuke.github.connector.GitHubConnectorResponse(org.kohsuke.github.connector.GitHubConnectorRequest, int, java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorRequest;ILjava/util/Map;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=5, locals=7, args_size=4
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #2                  // Field request:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
         9: aload_0
        10: iload_2
        11: putfield      #3                  // Field statusCode:I
        14: new           #4                  // class java/util/TreeMap
        17: dup
        18: getstatic     #5                  // Field nullableCaseInsensitiveComparator:Ljava/util/Comparator;
        21: invokespecial #6                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
        24: astore        4
        26: aload_3
        27: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
        32: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        37: astore        5
        39: aload         5
        41: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
        46: ifeq          100
        49: aload         5
        51: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        56: checkcast     #11                 // class java/util/Map$Entry
        59: astore        6
        61: aload         4
        63: aload         6
        65: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        70: checkcast     #13                 // class java/lang/String
        73: new           #14                 // class java/util/ArrayList
        76: dup
        77: aload         6
        79: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        84: checkcast     #16                 // class java/util/Collection
        87: invokespecial #17                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
        90: invokestatic  #18                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
        93: invokevirtual #19                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        96: pop
        97: goto          39
       100: aload_0
       101: aload         4
       103: invokestatic  #20                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       106: putfield      #21                 // Field headers:Ljava/util/Map;
       109: return
      LineNumberTable:
        line 42: 0
        line 43: 4
        line 44: 9
        line 47: 14
        line 48: 26
        line 49: 61
        line 50: 97
        line 51: 100
        line 52: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           61      36     6 entry   Ljava/util/Map$Entry;
            0     110     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0     110     1 request   Lorg/kohsuke/github/connector/GitHubConnectorRequest;
            0     110     2 statusCode   I
            0     110     3 headers   Ljava/util/Map;
           26      84     4 caseInsensitiveMap   Ljava/util/TreeMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           61      36     6 entry   Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
            0     110     3 headers   Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
           26      84     4 caseInsensitiveMap   Ljava/util/TreeMap<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class org/kohsuke/github/connector/GitHubConnectorResponse, class org/kohsuke/github/connector/GitHubConnectorRequest, int, class java/util/Map, class java/util/TreeMap, class java/util/Iterator ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 60
    Signature: #86                          // (Lorg/kohsuke/github/connector/GitHubConnectorRequest;ILjava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;)V
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #63()
          javax.annotation.Nonnull
      parameter 1:
      parameter 2:
        0: #63()
          javax.annotation.Nonnull

  public java.net.HttpURLConnection toHttpURLConnection();
    descriptor: ()Ljava/net/HttpURLConnection;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #22                 // class org/kohsuke/github/connector/GitHubConnectorResponseHttpUrlConnectionAdapter
         3: dup
         4: aload_0
         5: invokespecial #23                 // Method org/kohsuke/github/connector/GitHubConnectorResponseHttpUrlConnectionAdapter."<init>":(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
         8: astore_1
         9: aload_1
        10: areturn
      LineNumberTable:
        line 64: 0
        line 65: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            9       2     1 connection   Ljava/net/HttpURLConnection;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #93()
        java.lang.Deprecated
      1: #63()
        javax.annotation.Nonnull

  public java.lang.String header(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aconst_null
         1: astore_2
         2: aload_0
         3: getfield      #21                 // Field headers:Ljava/util/Map;
         6: aload_1
         7: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
        12: ifeq          38
        15: aload_0
        16: getfield      #21                 // Field headers:Ljava/util/Map;
        19: aload_1
        20: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        25: checkcast     #26                 // class java/util/List
        28: iconst_0
        29: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
        34: checkcast     #13                 // class java/lang/String
        37: astore_2
        38: aload_2
        39: areturn
      LineNumberTable:
        line 77: 0
        line 78: 2
        line 79: 15
        line 81: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0      40     1  name   Ljava/lang/String;
            2      38     2 result   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [ class java/lang/String ]
    RuntimeVisibleAnnotations:
      0: #99()
        javax.annotation.CheckForNull

  public abstract java.io.InputStream bodyStream() throws java.io.IOException;
    descriptor: ()Ljava/io/InputStream;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException
    RuntimeVisibleAnnotations:
      0: #63()
        javax.annotation.Nonnull

  public org.kohsuke.github.connector.GitHubConnectorRequest request();
    descriptor: ()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field request:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
         4: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
    RuntimeVisibleAnnotations:
      0: #63()
        javax.annotation.Nonnull

  public int statusCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field statusCode:I
         4: ireturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> allHeaders();
    descriptor: ()Ljava/util/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #21                 // Field headers:Ljava/util/Map;
         4: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
    Signature: #108                         // ()Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
    RuntimeVisibleAnnotations:
      0: #63()
        javax.annotation.Nonnull
    RuntimeInvisibleAnnotations:
      0: #110(#111=[s#112],#113=s#114)
        edu.umd.cs.findbugs.annotations.SuppressFBWarnings(
          value=["EI_EXPOSE_REP"]
          justification="Unmodifiable map of unmodifiable lists"
        )

  protected java.io.InputStream wrapStream(java.io.InputStream) throws java.io.IOException;
    descriptor: (Ljava/io/InputStream;)Ljava/io/InputStream;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc           #28                 // String Content-Encoding
         3: invokevirtual #29                 // Method header:(Ljava/lang/String;)Ljava/lang/String;
         6: astore_2
         7: aload_2
         8: ifnull        15
        11: aload_1
        12: ifnonnull     17
        15: aload_1
        16: areturn
        17: aload_2
        18: ldc           #30                 // String gzip
        20: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        23: ifeq          35
        26: new           #32                 // class java/util/zip/GZIPInputStream
        29: dup
        30: aload_1
        31: invokespecial #33                 // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
        34: areturn
        35: new           #34                 // class java/lang/UnsupportedOperationException
        38: dup
        39: new           #35                 // class java/lang/StringBuilder
        42: dup
        43: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
        46: ldc           #37                 // String Unexpected Content-Encoding:
        48: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        51: aload_2
        52: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        58: invokespecial #40                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        61: athrow
      LineNumberTable:
        line 134: 0
        line 135: 7
        line 136: 15
        line 137: 17
        line 138: 26
        line 140: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0      62     1 stream   Ljava/io/InputStream;
            7      55     2 encoding   Ljava/lang/String;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ class java/lang/String ]
        frame_type = 1 /* same */
        frame_type = 17 /* same */
    Exceptions:
      throws java.io.IOException

  public final int parseInt(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #29                 // Method header:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_2
         6: aload_2
         7: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
        10: ireturn
        11: astore_2
        12: new           #42                 // class java/lang/NumberFormatException
        15: dup
        16: new           #35                 // class java/lang/StringBuilder
        19: dup
        20: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
        23: aload_1
        24: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: ldc           #43                 // String :
        29: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: aload_2
        33: invokevirtual #44                 // Method java/lang/NumberFormatException.getMessage:()Ljava/lang/String;
        36: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        42: invokespecial #45                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        45: athrow
      Exception table:
         from    to  target type
             0    10    11   Class java/lang/NumberFormatException
      LineNumberTable:
        line 154: 0
        line 155: 6
        line 156: 11
        line 157: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6       5     2 headerValue   Ljava/lang/String;
           12      34     2     e   Ljava/lang/NumberFormatException;
            0      46     0  this   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0      46     1  name   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
    Exceptions:
      throws java.lang.NumberFormatException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #46                 // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
         3: invokestatic  #47                 // InterfaceMethod java/util/Comparator.nullsFirst:(Ljava/util/Comparator;)Ljava/util/Comparator;
         6: putstatic     #5                  // Field nullableCaseInsensitiveComparator:Ljava/util/Comparator;
         9: return
      LineNumberTable:
        line 30: 0
        line 31: 3
        line 30: 9
}
SourceFile: "GitHubConnectorResponse.java"
InnerClasses:
  public static abstract #52= #51 of #48; // ByteArrayResponse=class org/kohsuke/github/connector/GitHubConnectorResponse$ByteArrayResponse of class org/kohsuke/github/connector/GitHubConnectorResponse
  public static #73= #11 of #84;          // Entry=class java/util/Map$Entry of class java/util/Map
