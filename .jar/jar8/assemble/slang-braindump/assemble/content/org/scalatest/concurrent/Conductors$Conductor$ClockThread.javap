Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/concurrent/Conductors$Conductor$ClockThread.class
  Last modified May 29, 2022; size 8268 bytes
  SHA-256 checksum a9b936236bab61cca7bb6fb1735baa5b2ca3474889345b6f36aa867e817ddea9
  Compiled from "Conductors.scala"
public class org.scalatest.concurrent.Conductors$Conductor$ClockThread extends java.lang.Thread implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/concurrent/Conductors$Conductor$ClockThread
  super_class: #4                         // java/lang/Thread
  interfaces: 2, fields: 6, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/concurrent/Conductors$Conductor$ClockThread
    #2 = Class              #1            // org/scalatest/concurrent/Conductors$Conductor$ClockThread
    #3 = Utf8               java/lang/Thread
    #4 = Class              #3            // java/lang/Thread
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Conductors.scala
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               org/scalatest/concurrent/Conductors$Conductor
   #16 = Class              #15           // org/scalatest/concurrent/Conductors$Conductor
   #17 = Utf8               org/scalatest/concurrent/Conductors
   #18 = Class              #17           // org/scalatest/concurrent/Conductors
   #19 = Utf8               Conductor
   #20 = Utf8               org/scalatest/concurrent/Conductors$Conductor$Clock
   #21 = Class              #20           // org/scalatest/concurrent/Conductors$Conductor$Clock
   #22 = Utf8               Clock
   #23 = Utf8               ClockThread
   #24 = Utf8               timeout
   #25 = Utf8               Lorg/scalatest/time/Span;
   #26 = Utf8               clockInterval
   #27 = Utf8               lastProgress
   #28 = Utf8               J
   #29 = Utf8               deadlockCount
   #30 = Utf8               I
   #31 = Utf8               MaxDeadlockDetectionsBeforeDeadlock
   #32 = Utf8               $outer
   #33 = Utf8               Lorg/scalatest/concurrent/Conductors$Conductor;
   #34 = Utf8               productElementNames
   #35 = Utf8               ()Lscala/collection/Iterator;
   #36 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #37 = Utf8               productElementNames$
   #38 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #39 = NameAndType        #37:#38       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #40 = InterfaceMethodref #6.#39        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #41 = Utf8               this
   #42 = Utf8               Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
   #43 = Utf8               ()Lorg/scalatest/time/Span;
   #44 = NameAndType        #24:#25       // timeout:Lorg/scalatest/time/Span;
   #45 = Fieldref           #2.#44        // org/scalatest/concurrent/Conductors$Conductor$ClockThread.timeout:Lorg/scalatest/time/Span;
   #46 = NameAndType        #26:#25       // clockInterval:Lorg/scalatest/time/Span;
   #47 = Fieldref           #2.#46        // org/scalatest/concurrent/Conductors$Conductor$ClockThread.clockInterval:Lorg/scalatest/time/Span;
   #48 = Utf8               ()J
   #49 = NameAndType        #27:#28       // lastProgress:J
   #50 = Fieldref           #2.#49        // org/scalatest/concurrent/Conductors$Conductor$ClockThread.lastProgress:J
   #51 = Utf8               lastProgress_$eq
   #52 = Utf8               (J)V
   #53 = Utf8               x$1
   #54 = Utf8               ()I
   #55 = NameAndType        #29:#30       // deadlockCount:I
   #56 = Fieldref           #2.#55        // org/scalatest/concurrent/Conductors$Conductor$ClockThread.deadlockCount:I
   #57 = Utf8               deadlockCount_$eq
   #58 = Utf8               (I)V
   #59 = NameAndType        #31:#30       // MaxDeadlockDetectionsBeforeDeadlock:I
   #60 = Fieldref           #2.#59        // org/scalatest/concurrent/Conductors$Conductor$ClockThread.MaxDeadlockDetectionsBeforeDeadlock:I
   #61 = Utf8               run
   #62 = Utf8               ()V
   #63 = Utf8               org/scalatest/concurrent/PimpedThreadGroup$
   #64 = Class              #63           // org/scalatest/concurrent/PimpedThreadGroup$
   #65 = Utf8               MODULE$
   #66 = Utf8               Lorg/scalatest/concurrent/PimpedThreadGroup$;
   #67 = NameAndType        #65:#66       // MODULE$:Lorg/scalatest/concurrent/PimpedThreadGroup$;
   #68 = Fieldref           #64.#67       // org/scalatest/concurrent/PimpedThreadGroup$.MODULE$:Lorg/scalatest/concurrent/PimpedThreadGroup$;
   #69 = Utf8               org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer
   #70 = Utf8               ()Lorg/scalatest/concurrent/Conductors$Conductor;
   #71 = NameAndType        #69:#70       // org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
   #72 = Methodref          #2.#71        // org/scalatest/concurrent/Conductors$Conductor$ClockThread.org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
   #73 = Utf8               org$scalatest$concurrent$Conductors$Conductor$$threadGroup
   #74 = Utf8               ()Ljava/lang/ThreadGroup;
   #75 = NameAndType        #73:#74       // org$scalatest$concurrent$Conductors$Conductor$$threadGroup:()Ljava/lang/ThreadGroup;
   #76 = Methodref          #16.#75       // org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$threadGroup:()Ljava/lang/ThreadGroup;
   #77 = Utf8               threadGroupToPimpedThreadGroup
   #78 = Utf8               (Ljava/lang/ThreadGroup;)Lorg/scalatest/concurrent/PimpedThreadGroup;
   #79 = NameAndType        #77:#78       // threadGroupToPimpedThreadGroup:(Ljava/lang/ThreadGroup;)Lorg/scalatest/concurrent/PimpedThreadGroup;
   #80 = Methodref          #64.#79       // org/scalatest/concurrent/PimpedThreadGroup$.threadGroupToPimpedThreadGroup:(Ljava/lang/ThreadGroup;)Lorg/scalatest/concurrent/PimpedThreadGroup;
   #81 = Utf8               org/scalatest/concurrent/PimpedThreadGroup
   #82 = Class              #81           // org/scalatest/concurrent/PimpedThreadGroup
   #83 = Utf8               areAnyThreadsAlive
   #84 = Utf8               ()Z
   #85 = NameAndType        #83:#84       // areAnyThreadsAlive:()Z
   #86 = Methodref          #82.#85       // org/scalatest/concurrent/PimpedThreadGroup.areAnyThreadsAlive:()Z
   #87 = Utf8               org$scalatest$concurrent$Conductors$Conductor$$firstExceptionThrown
   #88 = Utf8               ()Ljava/util/concurrent/ArrayBlockingQueue;
   #89 = NameAndType        #87:#88       // org$scalatest$concurrent$Conductors$Conductor$$firstExceptionThrown:()Ljava/util/concurrent/ArrayBlockingQueue;
   #90 = Methodref          #16.#89       // org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$firstExceptionThrown:()Ljava/util/concurrent/ArrayBlockingQueue;
   #91 = Utf8               java/util/concurrent/ArrayBlockingQueue
   #92 = Class              #91           // java/util/concurrent/ArrayBlockingQueue
   #93 = Utf8               isEmpty
   #94 = NameAndType        #93:#84       // isEmpty:()Z
   #95 = Methodref          #92.#94       // java/util/concurrent/ArrayBlockingQueue.isEmpty:()Z
   #96 = Utf8               getThreads
   #97 = Utf8               ()Lscala/collection/immutable/List;
   #98 = NameAndType        #96:#97       // getThreads:()Lscala/collection/immutable/List;
   #99 = Methodref          #82.#98       // org/scalatest/concurrent/PimpedThreadGroup.getThreads:()Lscala/collection/immutable/List;
  #100 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #101 = MethodType         #100          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #102 = Utf8               $anonfun$run$1$adapted
  #103 = Utf8               (Ljava/lang/Thread;)Ljava/lang/Object;
  #104 = NameAndType        #102:#103     // $anonfun$run$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #105 = Methodref          #2.#104       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.$anonfun$run$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #106 = MethodHandle       6:#105        // REF_invokeStatic org/scalatest/concurrent/Conductors$Conductor$ClockThread.$anonfun$run$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #107 = MethodType         #103          //  (Ljava/lang/Thread;)Ljava/lang/Object;
  #108 = Integer            5
  #109 = Integer            1
  #110 = Utf8               java/lang/invoke/LambdaMetafactory
  #111 = Class              #110          // java/lang/invoke/LambdaMetafactory
  #112 = Utf8               altMetafactory
  #113 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #114 = NameAndType        #112:#113     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #115 = Methodref          #111.#114     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #116 = MethodHandle       6:#115        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #117 = Utf8               apply
  #118 = Utf8               ()Lscala/Function1;
  #119 = NameAndType        #117:#118     // apply:()Lscala/Function1;
  #120 = InvokeDynamic      #0:#119       // #0:apply:()Lscala/Function1;
  #121 = Utf8               scala/collection/immutable/List
  #122 = Class              #121          // scala/collection/immutable/List
  #123 = Utf8               foreach
  #124 = Utf8               (Lscala/Function1;)V
  #125 = NameAndType        #123:#124     // foreach:(Lscala/Function1;)V
  #126 = Methodref          #122.#125     // scala/collection/immutable/List.foreach:(Lscala/Function1;)V
  #127 = Utf8               areAnyThreadsRunning
  #128 = NameAndType        #127:#84      // areAnyThreadsRunning:()Z
  #129 = Methodref          #82.#128      // org/scalatest/concurrent/PimpedThreadGroup.areAnyThreadsRunning:()Z
  #130 = Utf8               runningTooLong
  #131 = NameAndType        #130:#84      // runningTooLong:()Z
  #132 = Methodref          #2.#131       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.runningTooLong:()Z
  #133 = Utf8               stopDueToTimeout
  #134 = NameAndType        #133:#62      // stopDueToTimeout:()V
  #135 = Methodref          #2.#134       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.stopDueToTimeout:()V
  #136 = Utf8               org$scalatest$concurrent$Conductors$Conductor$$clock
  #137 = Utf8               ()Lorg/scalatest/concurrent/Conductors$Conductor$Clock;
  #138 = NameAndType        #136:#137     // org$scalatest$concurrent$Conductors$Conductor$$clock:()Lorg/scalatest/concurrent/Conductors$Conductor$Clock;
  #139 = Methodref          #16.#138      // org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$clock:()Lorg/scalatest/concurrent/Conductors$Conductor$Clock;
  #140 = Utf8               isAnyThreadWaitingForABeat
  #141 = NameAndType        #140:#84      // isAnyThreadWaitingForABeat:()Z
  #142 = Methodref          #21.#141      // org/scalatest/concurrent/Conductors$Conductor$Clock.isAnyThreadWaitingForABeat:()Z
  #143 = Utf8               advance
  #144 = Utf8               ()Lorg/scalatest/Succeeded$;
  #145 = NameAndType        #143:#144     // advance:()Lorg/scalatest/Succeeded$;
  #146 = Methodref          #21.#145      // org/scalatest/concurrent/Conductors$Conductor$Clock.advance:()Lorg/scalatest/Succeeded$;
  #147 = NameAndType        #57:#58       // deadlockCount_$eq:(I)V
  #148 = Methodref          #2.#147       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.deadlockCount_$eq:(I)V
  #149 = Utf8               java/lang/System
  #150 = Class              #149          // java/lang/System
  #151 = Utf8               nanoTime
  #152 = NameAndType        #151:#48      // nanoTime:()J
  #153 = Methodref          #150.#152     // java/lang/System.nanoTime:()J
  #154 = NameAndType        #51:#52       // lastProgress_$eq:(J)V
  #155 = Methodref          #2.#154       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.lastProgress_$eq:(J)V
  #156 = Utf8               areAnyThreadsInTimedWaiting
  #157 = NameAndType        #156:#84      // areAnyThreadsInTimedWaiting:()Z
  #158 = Methodref          #82.#157      // org/scalatest/concurrent/PimpedThreadGroup.areAnyThreadsInTimedWaiting:()Z
  #159 = Utf8               detectDeadlock
  #160 = NameAndType        #159:#62      // detectDeadlock:()V
  #161 = Methodref          #2.#160       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.detectDeadlock:()V
  #162 = NameAndType        #26:#43       // clockInterval:()Lorg/scalatest/time/Span;
  #163 = Methodref          #2.#162       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.clockInterval:()Lorg/scalatest/time/Span;
  #164 = Utf8               org/scalatest/time/Span
  #165 = Class              #164          // org/scalatest/time/Span
  #166 = Utf8               millisPart
  #167 = NameAndType        #166:#48      // millisPart:()J
  #168 = Methodref          #165.#167     // org/scalatest/time/Span.millisPart:()J
  #169 = Utf8               nanosPart
  #170 = NameAndType        #169:#54      // nanosPart:()I
  #171 = Methodref          #165.#170     // org/scalatest/time/Span.nanosPart:()I
  #172 = Utf8               sleep
  #173 = Utf8               (JI)V
  #174 = NameAndType        #172:#173     // sleep:(JI)V
  #175 = Methodref          #4.#174       // java/lang/Thread.sleep:(JI)V
  #176 = NameAndType        #27:#48       // lastProgress:()J
  #177 = Methodref          #2.#176       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.lastProgress:()J
  #178 = NameAndType        #24:#43       // timeout:()Lorg/scalatest/time/Span;
  #179 = Methodref          #2.#178       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.timeout:()Lorg/scalatest/time/Span;
  #180 = Utf8               totalNanos
  #181 = NameAndType        #180:#48      // totalNanos:()J
  #182 = Methodref          #165.#181     // org/scalatest/time/Span.totalNanos:()J
  #183 = Utf8               org/scalatest/Resources$
  #184 = Class              #183          // org/scalatest/Resources$
  #185 = Utf8               Lorg/scalatest/Resources$;
  #186 = NameAndType        #65:#185      // MODULE$:Lorg/scalatest/Resources$;
  #187 = Fieldref           #184.#186     // org/scalatest/Resources$.MODULE$:Lorg/scalatest/Resources$;
  #188 = Utf8               prettyString
  #189 = Utf8               ()Ljava/lang/String;
  #190 = NameAndType        #188:#189     // prettyString:()Ljava/lang/String;
  #191 = Methodref          #165.#190     // org/scalatest/time/Span.prettyString:()Ljava/lang/String;
  #192 = Utf8               testTimedOut
  #193 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #194 = NameAndType        #192:#193     // testTimedOut:(Ljava/lang/Object;)Ljava/lang/String;
  #195 = Methodref          #184.#194     // org/scalatest/Resources$.testTimedOut:(Ljava/lang/Object;)Ljava/lang/String;
  #196 = Utf8               java/lang/RuntimeException
  #197 = Class              #196          // java/lang/RuntimeException
  #198 = Utf8               <init>
  #199 = Utf8               (Ljava/lang/String;)V
  #200 = NameAndType        #198:#199     // "<init>":(Ljava/lang/String;)V
  #201 = Methodref          #197.#200     // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
  #202 = Utf8               offer
  #203 = Utf8               (Ljava/lang/Object;)Z
  #204 = NameAndType        #202:#203     // offer:(Ljava/lang/Object;)Z
  #205 = Methodref          #92.#204      // java/util/concurrent/ArrayBlockingQueue.offer:(Ljava/lang/Object;)Z
  #206 = Utf8               org$scalatest$concurrent$Conductors$Conductor$$mainThread
  #207 = Utf8               ()Ljava/lang/Thread;
  #208 = NameAndType        #206:#207     // org$scalatest$concurrent$Conductors$Conductor$$mainThread:()Ljava/lang/Thread;
  #209 = Methodref          #16.#208      // org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$mainThread:()Ljava/lang/Thread;
  #210 = Utf8               interrupt
  #211 = NameAndType        #210:#62      // interrupt:()V
  #212 = Methodref          #4.#211       // java/lang/Thread.interrupt:()V
  #213 = Utf8               errorMessage
  #214 = Utf8               Ljava/lang/String;
  #215 = NameAndType        #29:#54       // deadlockCount:()I
  #216 = Methodref          #2.#215       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.deadlockCount:()I
  #217 = NameAndType        #31:#54       // MaxDeadlockDetectionsBeforeDeadlock:()I
  #218 = Methodref          #2.#217       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.MaxDeadlockDetectionsBeforeDeadlock:()I
  #219 = Utf8               java/lang/Integer
  #220 = Class              #219          // java/lang/Integer
  #221 = Utf8               toString
  #222 = Utf8               (I)Ljava/lang/String;
  #223 = NameAndType        #221:#222     // toString:(I)Ljava/lang/String;
  #224 = Methodref          #220.#223     // java/lang/Integer.toString:(I)Ljava/lang/String;
  #225 = Utf8               scaledBy
  #226 = Utf8               (D)Lorg/scalatest/time/Span;
  #227 = NameAndType        #225:#226     // scaledBy:(D)Lorg/scalatest/time/Span;
  #228 = Methodref          #165.#227     // org/scalatest/time/Span.scaledBy:(D)Lorg/scalatest/time/Span;
  #229 = Utf8               suspectedDeadlock
  #230 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #231 = NameAndType        #229:#230     // suspectedDeadlock:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #232 = Methodref          #184.#231     // org/scalatest/Resources$.suspectedDeadlock:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #233 = Utf8               copy
  #234 = Utf8               (Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
  #235 = Utf8               (Lorg/scalatest/concurrent/Conductors$Conductor;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
  #236 = NameAndType        #198:#235     // "<init>":(Lorg/scalatest/concurrent/Conductors$Conductor;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
  #237 = Methodref          #2.#236       // org/scalatest/concurrent/Conductors$Conductor$ClockThread."<init>":(Lorg/scalatest/concurrent/Conductors$Conductor;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
  #238 = Utf8               copy$default$1
  #239 = Utf8               copy$default$2
  #240 = Utf8               productPrefix
  #241 = String             #23           // ClockThread
  #242 = Utf8               productArity
  #243 = Utf8               productElement
  #244 = Utf8               (I)Ljava/lang/Object;
  #245 = Utf8               scala/runtime/Statics
  #246 = Class              #245          // scala/runtime/Statics
  #247 = Utf8               ioobe
  #248 = NameAndType        #247:#244     // ioobe:(I)Ljava/lang/Object;
  #249 = Methodref          #246.#248     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #250 = Utf8               java/lang/Object
  #251 = Class              #250          // java/lang/Object
  #252 = Utf8               productIterator
  #253 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #254 = Utf8               scala/runtime/ScalaRunTime$
  #255 = Class              #254          // scala/runtime/ScalaRunTime$
  #256 = Utf8               Lscala/runtime/ScalaRunTime$;
  #257 = NameAndType        #65:#256      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #258 = Fieldref           #255.#257     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #259 = Utf8               typedProductIterator
  #260 = NameAndType        #259:#38      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #261 = Methodref          #255.#260     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #262 = Utf8               canEqual
  #263 = Utf8               Ljava/lang/Object;
  #264 = Utf8               productElementName
  #265 = String             #24           // timeout
  #266 = String             #26           // clockInterval
  #267 = Utf8               java/lang/String
  #268 = Class              #267          // java/lang/String
  #269 = Utf8               hashCode
  #270 = Utf8               _hashCode
  #271 = Utf8               (Lscala/Product;)I
  #272 = NameAndType        #270:#271     // _hashCode:(Lscala/Product;)I
  #273 = Methodref          #255.#272     // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
  #274 = Utf8               equals
  #275 = NameAndType        #274:#203     // equals:(Ljava/lang/Object;)Z
  #276 = Methodref          #251.#275     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #277 = NameAndType        #262:#203     // canEqual:(Ljava/lang/Object;)Z
  #278 = Methodref          #2.#277       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.canEqual:(Ljava/lang/Object;)Z
  #279 = NameAndType        #32:#33       // $outer:Lorg/scalatest/concurrent/Conductors$Conductor;
  #280 = Fieldref           #2.#279       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.$outer:Lorg/scalatest/concurrent/Conductors$Conductor;
  #281 = Utf8               $anonfun$run$1
  #282 = Utf8               (Ljava/lang/Thread;)V
  #283 = Utf8               t
  #284 = Utf8               isAlive
  #285 = NameAndType        #284:#84      // isAlive:()Z
  #286 = Methodref          #4.#285       // java/lang/Thread.isAlive:()Z
  #287 = Utf8               stop
  #288 = NameAndType        #287:#62      // stop:()V
  #289 = Methodref          #4.#288       // java/lang/Thread.stop:()V
  #290 = Utf8               Ljava/lang/Thread;
  #291 = Utf8               Conductor-Clock
  #292 = String             #291          // Conductor-Clock
  #293 = Methodref          #4.#200       // java/lang/Thread."<init>":(Ljava/lang/String;)V
  #294 = Utf8               $init$
  #295 = Utf8               (Lscala/Product;)V
  #296 = NameAndType        #294:#295     // $init$:(Lscala/Product;)V
  #297 = InterfaceMethodref #6.#296       // scala/Product.$init$:(Lscala/Product;)V
  #298 = Utf8               setDaemon
  #299 = Utf8               (Z)V
  #300 = NameAndType        #298:#299     // setDaemon:(Z)V
  #301 = Methodref          #2.#300       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.setDaemon:(Z)V
  #302 = NameAndType        #281:#282     // $anonfun$run$1:(Ljava/lang/Thread;)V
  #303 = Methodref          #2.#302       // org/scalatest/concurrent/Conductors$Conductor$ClockThread.$anonfun$run$1:(Ljava/lang/Thread;)V
  #304 = Utf8               scala/runtime/BoxedUnit
  #305 = Class              #304          // scala/runtime/BoxedUnit
  #306 = Utf8               UNIT
  #307 = Utf8               Lscala/runtime/BoxedUnit;
  #308 = NameAndType        #306:#307     // UNIT:Lscala/runtime/BoxedUnit;
  #309 = Fieldref           #305.#308     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #310 = Utf8               $deserializeLambda$
  #311 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #312 = Utf8               scala/runtime/LambdaDeserialize
  #313 = Class              #312          // scala/runtime/LambdaDeserialize
  #314 = Utf8               bootstrap
  #315 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #316 = NameAndType        #314:#315     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #317 = Methodref          #313.#316     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #318 = MethodHandle       6:#317        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #319 = Utf8               lambdaDeserialize
  #320 = NameAndType        #319:#311     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #321 = InvokeDynamic      #1:#320       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #322 = Utf8               Code
  #323 = Utf8               LineNumberTable
  #324 = Utf8               LocalVariableTable
  #325 = Utf8               Signature
  #326 = Utf8               MethodParameters
  #327 = Utf8               StackMapTable
  #328 = Utf8               InnerClasses
  #329 = Utf8               SourceFile
  #330 = Utf8               BootstrapMethods
  #331 = Utf8               ScalaInlineInfo
  #332 = Utf8               Scala
{
  private final org.scalatest.time.Span timeout;
    descriptor: Lorg/scalatest/time/Span;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.scalatest.time.Span clockInterval;
    descriptor: Lorg/scalatest/time/Span;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile long lastProgress;
    descriptor: J
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile int deadlockCount;
    descriptor: I
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private final int MaxDeadlockDetectionsBeforeDeadlock;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final org.scalatest.concurrent.Conductors$Conductor $outer;
    descriptor: Lorg/scalatest/concurrent/Conductors$Conductor;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #40                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
    Signature: #36                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public org.scalatest.time.Span timeout();
    descriptor: ()Lorg/scalatest/time/Span;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #45                 // Field timeout:Lorg/scalatest/time/Span;
         4: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public org.scalatest.time.Span clockInterval();
    descriptor: ()Lorg/scalatest/time/Span;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #47                 // Field clockInterval:Lorg/scalatest/time/Span;
         4: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  private long lastProgress();
    descriptor: ()J
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #50                 // Field lastProgress:J
         4: lreturn
      LineNumberTable:
        line 1034: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  private void lastProgress_$eq(long);
    descriptor: (J)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: putfield      #50                 // Field lastProgress:J
         5: return
      LineNumberTable:
        line 1034: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0       6     1   x$1   J
    MethodParameters:
      Name                           Flags
      x$1                            final

  private int deadlockCount();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field deadlockCount:I
         4: ireturn
      LineNumberTable:
        line 1037: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  private void deadlockCount_$eq(int);
    descriptor: (I)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #56                 // Field deadlockCount:I
         5: return
      LineNumberTable:
        line 1037: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  private int MaxDeadlockDetectionsBeforeDeadlock();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #60                 // Field MaxDeadlockDetectionsBeforeDeadlock:I
         4: ireturn
      LineNumberTable:
        line 1038: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #68                 // Field org/scalatest/concurrent/PimpedThreadGroup$.MODULE$:Lorg/scalatest/concurrent/PimpedThreadGroup$;
         3: aload_0
         4: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
         7: invokevirtual #76                 // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$threadGroup:()Ljava/lang/ThreadGroup;
        10: invokevirtual #80                 // Method org/scalatest/concurrent/PimpedThreadGroup$.threadGroupToPimpedThreadGroup:(Ljava/lang/ThreadGroup;)Lorg/scalatest/concurrent/PimpedThreadGroup;
        13: invokevirtual #86                 // Method org/scalatest/concurrent/PimpedThreadGroup.areAnyThreadsAlive:()Z
        16: ifeq          180
        19: aload_0
        20: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        23: invokevirtual #90                 // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$firstExceptionThrown:()Ljava/util/concurrent/ArrayBlockingQueue;
        26: invokevirtual #95                 // Method java/util/concurrent/ArrayBlockingQueue.isEmpty:()Z
        29: ifne          59
        32: getstatic     #68                 // Field org/scalatest/concurrent/PimpedThreadGroup$.MODULE$:Lorg/scalatest/concurrent/PimpedThreadGroup$;
        35: aload_0
        36: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        39: invokevirtual #76                 // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$threadGroup:()Ljava/lang/ThreadGroup;
        42: invokevirtual #80                 // Method org/scalatest/concurrent/PimpedThreadGroup$.threadGroupToPimpedThreadGroup:(Ljava/lang/ThreadGroup;)Lorg/scalatest/concurrent/PimpedThreadGroup;
        45: invokevirtual #99                 // Method org/scalatest/concurrent/PimpedThreadGroup.getThreads:()Lscala/collection/immutable/List;
        48: invokedynamic #120,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        53: invokevirtual #126                // Method scala/collection/immutable/List.foreach:(Lscala/Function1;)V
        56: goto          160
        59: getstatic     #68                 // Field org/scalatest/concurrent/PimpedThreadGroup$.MODULE$:Lorg/scalatest/concurrent/PimpedThreadGroup$;
        62: aload_0
        63: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        66: invokevirtual #76                 // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$threadGroup:()Ljava/lang/ThreadGroup;
        69: invokevirtual #80                 // Method org/scalatest/concurrent/PimpedThreadGroup$.threadGroupToPimpedThreadGroup:(Ljava/lang/ThreadGroup;)Lorg/scalatest/concurrent/PimpedThreadGroup;
        72: invokevirtual #129                // Method org/scalatest/concurrent/PimpedThreadGroup.areAnyThreadsRunning:()Z
        75: ifeq          95
        78: aload_0
        79: invokespecial #132                // Method runningTooLong:()Z
        82: ifeq          92
        85: aload_0
        86: invokespecial #135                // Method stopDueToTimeout:()V
        89: goto          92
        92: goto          160
        95: aload_0
        96: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        99: invokevirtual #139                // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$clock:()Lorg/scalatest/concurrent/Conductors$Conductor$Clock;
       102: invokevirtual #142                // Method org/scalatest/concurrent/Conductors$Conductor$Clock.isAnyThreadWaitingForABeat:()Z
       105: ifeq          134
       108: aload_0
       109: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
       112: invokevirtual #139                // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$clock:()Lorg/scalatest/concurrent/Conductors$Conductor$Clock;
       115: invokevirtual #146                // Method org/scalatest/concurrent/Conductors$Conductor$Clock.advance:()Lorg/scalatest/Succeeded$;
       118: pop
       119: aload_0
       120: iconst_0
       121: invokespecial #148                // Method deadlockCount_$eq:(I)V
       124: aload_0
       125: invokestatic  #153                // Method java/lang/System.nanoTime:()J
       128: invokespecial #155                // Method lastProgress_$eq:(J)V
       131: goto          160
       134: getstatic     #68                 // Field org/scalatest/concurrent/PimpedThreadGroup$.MODULE$:Lorg/scalatest/concurrent/PimpedThreadGroup$;
       137: aload_0
       138: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
       141: invokevirtual #76                 // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$threadGroup:()Ljava/lang/ThreadGroup;
       144: invokevirtual #80                 // Method org/scalatest/concurrent/PimpedThreadGroup$.threadGroupToPimpedThreadGroup:(Ljava/lang/ThreadGroup;)Lorg/scalatest/concurrent/PimpedThreadGroup;
       147: invokevirtual #158                // Method org/scalatest/concurrent/PimpedThreadGroup.areAnyThreadsInTimedWaiting:()Z
       150: ifne          160
       153: aload_0
       154: invokespecial #161                // Method detectDeadlock:()V
       157: goto          160
       160: aload_0
       161: invokevirtual #163                // Method clockInterval:()Lorg/scalatest/time/Span;
       164: invokevirtual #168                // Method org/scalatest/time/Span.millisPart:()J
       167: aload_0
       168: invokevirtual #163                // Method clockInterval:()Lorg/scalatest/time/Span;
       171: invokevirtual #171                // Method org/scalatest/time/Span.nanosPart:()I
       174: invokestatic  #175                // Method java/lang/Thread.sleep:(JI)V
       177: goto          0
       180: return
      StackMapTable: number_of_entries = 7
        frame_type = 0 /* same */
        frame_type = 58 /* same */
        frame_type = 32 /* same */
        frame_type = 2 /* same */
        frame_type = 38 /* same */
        frame_type = 25 /* same */
        frame_type = 19 /* same */
      LineNumberTable:
        line 1049: 0
        line 1050: 19
        line 1052: 32
        line 1061: 59
        line 1062: 78
        line 1066: 95
        line 1067: 108
        line 1068: 119
        line 1069: 124
        line 1071: 134
        line 1076: 153
        line 1078: 160
        line 1049: 177
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     181     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  private boolean runningTooLong();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=1, args_size=1
         0: invokestatic  #153                // Method java/lang/System.nanoTime:()J
         3: aload_0
         4: invokespecial #177                // Method lastProgress:()J
         7: lsub
         8: aload_0
         9: invokevirtual #179                // Method timeout:()Lorg/scalatest/time/Span;
        12: invokevirtual #182                // Method org/scalatest/time/Span.totalNanos:()J
        15: lcmp
        16: ifle          23
        19: iconst_1
        20: goto          24
        23: iconst_0
        24: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 1087: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  private void stopDueToTimeout();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #187                // Field org/scalatest/Resources$.MODULE$:Lorg/scalatest/Resources$;
         3: aload_0
         4: invokevirtual #179                // Method timeout:()Lorg/scalatest/time/Span;
         7: invokevirtual #191                // Method org/scalatest/time/Span.prettyString:()Ljava/lang/String;
        10: invokevirtual #195                // Method org/scalatest/Resources$.testTimedOut:(Ljava/lang/Object;)Ljava/lang/String;
        13: astore_1
        14: aload_0
        15: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        18: invokevirtual #90                 // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$firstExceptionThrown:()Ljava/util/concurrent/ArrayBlockingQueue;
        21: new           #197                // class java/lang/RuntimeException
        24: dup
        25: aload_1
        26: invokespecial #201                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        29: invokevirtual #205                // Method java/util/concurrent/ArrayBlockingQueue.offer:(Ljava/lang/Object;)Z
        32: pop
        33: aload_0
        34: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        37: invokevirtual #209                // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$mainThread:()Ljava/lang/Thread;
        40: invokevirtual #212                // Method java/lang/Thread.interrupt:()V
        43: return
      LineNumberTable:
        line 1093: 0
        line 1097: 14
        line 1098: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      29     1 errorMessage   Ljava/lang/String;
            0      44     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  private void detectDeadlock();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokespecial #216                // Method deadlockCount:()I
         4: aload_0
         5: invokespecial #218                // Method MaxDeadlockDetectionsBeforeDeadlock:()I
         8: if_icmplt     72
        11: getstatic     #187                // Field org/scalatest/Resources$.MODULE$:Lorg/scalatest/Resources$;
        14: aload_0
        15: invokespecial #218                // Method MaxDeadlockDetectionsBeforeDeadlock:()I
        18: invokestatic  #224                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
        21: aload_0
        22: invokevirtual #163                // Method clockInterval:()Lorg/scalatest/time/Span;
        25: aload_0
        26: invokespecial #218                // Method MaxDeadlockDetectionsBeforeDeadlock:()I
        29: i2d
        30: invokevirtual #228                // Method org/scalatest/time/Span.scaledBy:(D)Lorg/scalatest/time/Span;
        33: invokevirtual #191                // Method org/scalatest/time/Span.prettyString:()Ljava/lang/String;
        36: invokevirtual #232                // Method org/scalatest/Resources$.suspectedDeadlock:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
        39: astore_1
        40: aload_0
        41: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        44: invokevirtual #90                 // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$firstExceptionThrown:()Ljava/util/concurrent/ArrayBlockingQueue;
        47: new           #197                // class java/lang/RuntimeException
        50: dup
        51: aload_1
        52: invokespecial #201                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        55: invokevirtual #205                // Method java/util/concurrent/ArrayBlockingQueue.offer:(Ljava/lang/Object;)Z
        58: pop
        59: aload_0
        60: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        63: invokevirtual #209                // Method org/scalatest/concurrent/Conductors$Conductor.org$scalatest$concurrent$Conductors$Conductor$$mainThread:()Ljava/lang/Thread;
        66: invokevirtual #212                // Method java/lang/Thread.interrupt:()V
        69: goto          82
        72: aload_0
        73: aload_0
        74: invokespecial #216                // Method deadlockCount:()I
        77: iconst_1
        78: iadd
        79: invokespecial #148                // Method deadlockCount_$eq:(I)V
        82: return
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 72
        frame_type = 9 /* same */
      LineNumberTable:
        line 1106: 0
        line 1107: 11
        line 1108: 40
        line 1113: 59
        line 1115: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      29     1 errorMessage   Ljava/lang/String;
            0      83     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public org.scalatest.concurrent.Conductors$Conductor$ClockThread copy(org.scalatest.time.Span, org.scalatest.time.Span);
    descriptor: (Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #2                  // class org/scalatest/concurrent/Conductors$Conductor$ClockThread
         3: dup
         4: aload_0
         5: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
         8: aload_1
         9: aload_2
        10: invokespecial #237                // Method "<init>":(Lorg/scalatest/concurrent/Conductors$Conductor;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
        13: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0      14     1 timeout   Lorg/scalatest/time/Span;
            0      14     2 clockInterval   Lorg/scalatest/time/Span;
    MethodParameters:
      Name                           Flags
      timeout                        final
      clockInterval                  final

  public org.scalatest.time.Span copy$default$1();
    descriptor: ()Lorg/scalatest/time/Span;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #179                // Method timeout:()Lorg/scalatest/time/Span;
         4: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public org.scalatest.time.Span copy$default$2();
    descriptor: ()Lorg/scalatest/time/Span;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #163                // Method clockInterval:()Lorg/scalatest/time/Span;
         4: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #241                // String ClockThread
         2: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 38
            }
        24: aload_0
        25: invokevirtual #179                // Method timeout:()Lorg/scalatest/time/Span;
        28: goto          45
        31: aload_0
        32: invokevirtual #163                // Method clockInterval:()Lorg/scalatest/time/Span;
        35: goto          45
        38: iload_1
        39: invokestatic  #249                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        42: goto          45
        45: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0      46     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #258                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #261                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
    Signature: #253                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/concurrent/Conductors$Conductor$ClockThread
         4: ireturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 30
                 default: 36
            }
        24: ldc_w         #265                // String timeout
        27: goto          46
        30: ldc_w         #266                // String clockInterval
        33: goto          46
        36: iload_1
        37: invokestatic  #249                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        40: checkcast     #268                // class java/lang/String
        43: goto          46
        46: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0      47     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #258                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #273                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     132
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalatest/concurrent/Conductors$Conductor$ClockThread
        11: ifeq          33
        14: aload_3
        15: checkcast     #2                  // class org/scalatest/concurrent/Conductors$Conductor$ClockThread
        18: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        21: aload_0
        22: invokevirtual #72                 // Method org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer:()Lorg/scalatest/concurrent/Conductors$Conductor;
        25: if_acmpne     33
        28: iconst_1
        29: istore_2
        30: goto          41
        33: goto          36
        36: iconst_0
        37: istore_2
        38: goto          41
        41: iload_2
        42: ifeq          136
        45: aload_1
        46: checkcast     #2                  // class org/scalatest/concurrent/Conductors$Conductor$ClockThread
        49: astore        4
        51: aload_0
        52: invokevirtual #179                // Method timeout:()Lorg/scalatest/time/Span;
        55: aload         4
        57: invokevirtual #179                // Method timeout:()Lorg/scalatest/time/Span;
        60: astore        5
        62: dup
        63: ifnonnull     75
        66: pop
        67: aload         5
        69: ifnull        83
        72: goto          128
        75: aload         5
        77: invokevirtual #276                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        80: ifeq          128
        83: aload_0
        84: invokevirtual #163                // Method clockInterval:()Lorg/scalatest/time/Span;
        87: aload         4
        89: invokevirtual #163                // Method clockInterval:()Lorg/scalatest/time/Span;
        92: astore        6
        94: dup
        95: ifnonnull     107
        98: pop
        99: aload         6
       101: ifnull        115
       104: goto          128
       107: aload         6
       109: invokevirtual #276                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       112: ifeq          128
       115: aload         4
       117: aload_0
       118: invokevirtual #278                // Method canEqual:(Ljava/lang/Object;)Z
       121: ifeq          128
       124: iconst_1
       125: goto          129
       128: iconst_0
       129: ifeq          136
       132: iconst_1
       133: goto          137
       136: iconst_0
       137: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/concurrent/Conductors$Conductor$ClockThread, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class org/scalatest/concurrent/Conductors$Conductor$ClockThread, class java/lang/Object, int, class java/lang/Object, class org/scalatest/concurrent/Conductors$Conductor$ClockThread, class org/scalatest/time/Span ]
          stack = [ class org/scalatest/time/Span ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/scalatest/concurrent/Conductors$Conductor$ClockThread, class java/lang/Object, int, class java/lang/Object, class org/scalatest/concurrent/Conductors$Conductor$ClockThread, class org/scalatest/time/Span, class org/scalatest/time/Span ]
          stack = [ class org/scalatest/time/Span ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/concurrent/Conductors$Conductor$ClockThread, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/concurrent/Conductors$Conductor$ClockThread, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     138     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0     138     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalatest.concurrent.Conductors$Conductor org$scalatest$concurrent$Conductors$Conductor$ClockThread$$$outer();
    descriptor: ()Lorg/scalatest/concurrent/Conductors$Conductor;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #280                // Field $outer:Lorg/scalatest/concurrent/Conductors$Conductor;
         4: areturn
      LineNumberTable:
        line 1020: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;

  public static final void $anonfun$run$1(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #286                // Method java/lang/Thread.isAlive:()Z
         4: ifeq          14
         7: aload_0
         8: invokevirtual #289                // Method java/lang/Thread.stop:()V
        11: goto          14
        14: return
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
      LineNumberTable:
        line 1053: 0
        line 1054: 7
        line 1053: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0     t   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      t                              final

  public org.scalatest.concurrent.Conductors$Conductor$ClockThread(org.scalatest.concurrent.Conductors$Conductor, org.scalatest.time.Span, org.scalatest.time.Span);
    descriptor: (Lorg/scalatest/concurrent/Conductors$Conductor;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #45                 // Field timeout:Lorg/scalatest/time/Span;
         5: aload_0
         6: aload_3
         7: putfield      #47                 // Field clockInterval:Lorg/scalatest/time/Span;
        10: aload_1
        11: ifnonnull     16
        14: aconst_null
        15: athrow
        16: aload_0
        17: aload_1
        18: putfield      #280                // Field $outer:Lorg/scalatest/concurrent/Conductors$Conductor;
        21: aload_0
        22: ldc_w         #292                // String Conductor-Clock
        25: invokespecial #293                // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
        28: aload_0
        29: invokestatic  #297                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        32: aload_0
        33: iconst_1
        34: invokevirtual #301                // Method setDaemon:(Z)V
        37: aload_0
        38: invokestatic  #153                // Method java/lang/System.nanoTime:()J
        41: putfield      #50                 // Field lastProgress:J
        44: aload_0
        45: iconst_0
        46: putfield      #56                 // Field deadlockCount:I
        49: aload_0
        50: bipush        50
        52: putfield      #60                 // Field MaxDeadlockDetectionsBeforeDeadlock:I
        55: return
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 1020: 0
        line 1028: 32
        line 1034: 37
        line 1037: 44
        line 1038: 49
        line 1020: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lorg/scalatest/concurrent/Conductors$Conductor$ClockThread;
            0      56     1 $outer   Lorg/scalatest/concurrent/Conductors$Conductor;
            0      56     2 timeout   Lorg/scalatest/time/Span;
            0      56     3 clockInterval   Lorg/scalatest/time/Span;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      timeout                        final
      clockInterval                  final

  public static final java.lang.Object $anonfun$run$1$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #303                // Method $anonfun$run$1:(Ljava/lang/Thread;)V
         4: getstatic     #309                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 1052: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     t   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      t                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #321,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #19= #16 of #18;           // Conductor=class org/scalatest/concurrent/Conductors$Conductor of class org/scalatest/concurrent/Conductors
  private #22= #21 of #16;                // Clock=class org/scalatest/concurrent/Conductors$Conductor$Clock of class org/scalatest/concurrent/Conductors$Conductor
  private #23= #2 of #16;                 // ClockThread=class org/scalatest/concurrent/Conductors$Conductor$ClockThread of class org/scalatest/concurrent/Conductors$Conductor
SourceFile: "Conductors.scala"
BootstrapMethods:
  0: #116 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 (Ljava/lang/Object;)Ljava/lang/Object;
      #106 REF_invokeStatic org/scalatest/concurrent/Conductors$Conductor$ClockThread.$anonfun$run$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #107 (Ljava/lang/Thread;)Ljava/lang/Object;
      #108 5
      #109 1
      #107 (Ljava/lang/Thread;)Ljava/lang/Object;
  1: #318 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #106 REF_invokeStatic org/scalatest/concurrent/Conductors$Conductor$ClockThread.$anonfun$run$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 00 00 1B 01 19 01 1A 01 00 66 00 67 01 00 C6
   00 EB 00 00 1F 00 36 01 01 06 00 CB 00 00 1A 00
   2B 00 00 E9 00 EA 00 00 EE 00 2B 00 00 EF 00 2B
   00 00 1D 00 36 01 00 39 00 3A 01 00 9F 00 3E 01
   01 12 00 CB 00 01 0D 00 36 00 00 1B 00 30 01 00
   33 00 34 01 00 45 00 46 00 00 F2 00 36 00 00 F3
   00 F4 00 01 08 00 DE 00 00 22 00 23 00 00 FC 00
   23 00 00 F0 00 BD 00 00 3D 00 3E 00 00 82 00 54
   01 00 85 00 3E 01 00 18 00 2B 00
  Scala: length = 0x0 (unknown attribute)

