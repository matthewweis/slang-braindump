Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/jdk/StreamConverters.class
  Last modified May 29, 2022; size 7427 bytes
  SHA-256 checksum f3618b54c058e988057706d3aed989a7218666397a06c83a84b186a587fa0c6f
  Compiled from "StreamConverters.scala"
public final class scala.jdk.StreamConverters
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/jdk/StreamConverters
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 19, attributes: 4
Constant pool:
    #1 = Utf8               scala/jdk/StreamConverters
    #2 = Class              #1            // scala/jdk/StreamConverters
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               StreamConverters.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005m9Qa\u0001\u0003\t\u0002%1Qa\u0003\u0003\t\u00021AQ!G\u0001\u0005\u0002i\t\u0001c\u0015;sK\u0006l7i\u001c8wKJ$XM]:\u000b\u0005\u00151\u0011a\u00016eW*\tq!A\u0003tG\u0006d\u0017m\u0001\u0001\u0011\u0005)\tQ\"\u0001\u0003\u0003!M#(/Z1n\u0007>tg/\u001a:uKJ\u001c8cA\u0001\u000e#A\u0011abD\u0007\u0002\r%\u0011\u0001C\u0002\u0002\u0007\u0003:L(+\u001a4\u0011\u0005I9R\"A\n\u000b\u0005Q)\u0012aB2p]Z,\'\u000f\u001e\u0006\u0003-\u0019\t!bY8mY\u0016\u001cG/[8o\u0013\tA2C\u0001\tTiJ,\u0017-\\#yi\u0016t7/[8og\u00061A(\u001b8jiz\"\u0012!\u0003
    #9 = Utf8               scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream
   #10 = Class              #9            // scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream
   #11 = Utf8               scala/collection/convert/StreamExtensions
   #12 = Class              #11           // scala/collection/convert/StreamExtensions
   #13 = Utf8               AnyArrayHasSeqParStream
   #14 = Utf8               scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream
   #15 = Class              #14           // scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream
   #16 = Utf8               ByteArrayHasSeqParStream
   #17 = Utf8               scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream
   #18 = Class              #17           // scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream
   #19 = Utf8               CharArrayHasSeqParStream
   #20 = Utf8               scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream
   #21 = Class              #20           // scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream
   #22 = Utf8               DoubleArrayHasSeqParStream
   #23 = Utf8               scala/collection/convert/StreamExtensions$DoubleStreamHasToScala
   #24 = Class              #23           // scala/collection/convert/StreamExtensions$DoubleStreamHasToScala
   #25 = Utf8               DoubleStreamHasToScala
   #26 = Utf8               scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream
   #27 = Class              #26           // scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream
   #28 = Utf8               FloatArrayHasSeqParStream
   #29 = Utf8               scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream
   #30 = Class              #29           // scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream
   #31 = Utf8               IntArrayHasSeqParStream
   #32 = Utf8               scala/collection/convert/StreamExtensions$IntStreamHasToScala
   #33 = Class              #32           // scala/collection/convert/StreamExtensions$IntStreamHasToScala
   #34 = Utf8               IntStreamHasToScala
   #35 = Utf8               scala/collection/convert/StreamExtensions$IterableHasSeqStream
   #36 = Class              #35           // scala/collection/convert/StreamExtensions$IterableHasSeqStream
   #37 = Utf8               IterableHasSeqStream
   #38 = Utf8               scala/collection/convert/StreamExtensions$IterableNonGenericHasParStream
   #39 = Class              #38           // scala/collection/convert/StreamExtensions$IterableNonGenericHasParStream
   #40 = Utf8               IterableNonGenericHasParStream
   #41 = Utf8               scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream
   #42 = Class              #41           // scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream
   #43 = Utf8               LongArrayHasSeqParStream
   #44 = Utf8               scala/collection/convert/StreamExtensions$LongStreamHasToScala
   #45 = Class              #44           // scala/collection/convert/StreamExtensions$LongStreamHasToScala
   #46 = Utf8               LongStreamHasToScala
   #47 = Utf8               scala/collection/convert/StreamExtensions$MapHasParKeyValueStream
   #48 = Class              #47           // scala/collection/convert/StreamExtensions$MapHasParKeyValueStream
   #49 = Utf8               MapHasParKeyValueStream
   #50 = Utf8               scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream
   #51 = Class              #50           // scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream
   #52 = Utf8               MapHasSeqKeyValueStream
   #53 = Utf8               scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream
   #54 = Class              #53           // scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream
   #55 = Utf8               ShortArrayHasSeqParStream
   #56 = Utf8               scala/collection/convert/StreamExtensions$StepperHasParStream
   #57 = Class              #56           // scala/collection/convert/StreamExtensions$StepperHasParStream
   #58 = Utf8               StepperHasParStream
   #59 = Utf8               scala/collection/convert/StreamExtensions$StepperHasSeqStream
   #60 = Class              #59           // scala/collection/convert/StreamExtensions$StepperHasSeqStream
   #61 = Utf8               StepperHasSeqStream
   #62 = Utf8               scala/collection/convert/StreamExtensions$StreamHasToScala
   #63 = Class              #62           // scala/collection/convert/StreamExtensions$StreamHasToScala
   #64 = Utf8               StreamHasToScala
   #65 = Utf8               scala/collection/convert/StreamExtensions$StringHasSeqParStream
   #66 = Class              #65           // scala/collection/convert/StreamExtensions$StringHasSeqParStream
   #67 = Utf8               StringHasSeqParStream
   #68 = Utf8               (Ljava/util/stream/DoubleStream;)Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
   #69 = Utf8               stream
   #70 = Utf8               scala/jdk/StreamConverters$
   #71 = Class              #70           // scala/jdk/StreamConverters$
   #72 = Utf8               MODULE$
   #73 = Utf8               Lscala/jdk/StreamConverters$;
   #74 = NameAndType        #72:#73       // MODULE$:Lscala/jdk/StreamConverters$;
   #75 = Fieldref           #71.#74       // scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
   #76 = NameAndType        #25:#68       // DoubleStreamHasToScala:(Ljava/util/stream/DoubleStream;)Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
   #77 = Methodref          #71.#76       // scala/jdk/StreamConverters$.DoubleStreamHasToScala:(Ljava/util/stream/DoubleStream;)Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
   #78 = Utf8               Ljava/util/stream/DoubleStream;
   #79 = Utf8               (Ljava/util/stream/LongStream;)Lscala/collection/convert/StreamExtensions$LongStreamHasToScala;
   #80 = NameAndType        #46:#79       // LongStreamHasToScala:(Ljava/util/stream/LongStream;)Lscala/collection/convert/StreamExtensions$LongStreamHasToScala;
   #81 = Methodref          #71.#80       // scala/jdk/StreamConverters$.LongStreamHasToScala:(Ljava/util/stream/LongStream;)Lscala/collection/convert/StreamExtensions$LongStreamHasToScala;
   #82 = Utf8               Ljava/util/stream/LongStream;
   #83 = Utf8               (Ljava/util/stream/IntStream;)Lscala/collection/convert/StreamExtensions$IntStreamHasToScala;
   #84 = NameAndType        #34:#83       // IntStreamHasToScala:(Ljava/util/stream/IntStream;)Lscala/collection/convert/StreamExtensions$IntStreamHasToScala;
   #85 = Methodref          #71.#84       // scala/jdk/StreamConverters$.IntStreamHasToScala:(Ljava/util/stream/IntStream;)Lscala/collection/convert/StreamExtensions$IntStreamHasToScala;
   #86 = Utf8               Ljava/util/stream/IntStream;
   #87 = Utf8               (Ljava/util/stream/Stream;)Lscala/collection/convert/StreamExtensions$StreamHasToScala;
   #88 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/stream/Stream<TA;>;)Lscala/collection/convert/StreamExtensions$StreamHasToScala<TA;>;
   #89 = NameAndType        #64:#87       // StreamHasToScala:(Ljava/util/stream/Stream;)Lscala/collection/convert/StreamExtensions$StreamHasToScala;
   #90 = Methodref          #71.#89       // scala/jdk/StreamConverters$.StreamHasToScala:(Ljava/util/stream/Stream;)Lscala/collection/convert/StreamExtensions$StreamHasToScala;
   #91 = Utf8               Ljava/util/stream/Stream;
   #92 = Utf8               (Ljava/lang/String;)Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
   #93 = Utf8               s
   #94 = NameAndType        #67:#92       // StringHasSeqParStream:(Ljava/lang/String;)Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
   #95 = Methodref          #71.#94       // scala/jdk/StreamConverters$.StringHasSeqParStream:(Ljava/lang/String;)Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
   #96 = Utf8               Ljava/lang/String;
   #97 = Utf8               ([F)Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;
   #98 = Utf8               a
   #99 = NameAndType        #28:#97       // FloatArrayHasSeqParStream:([F)Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;
  #100 = Methodref          #71.#99       // scala/jdk/StreamConverters$.FloatArrayHasSeqParStream:([F)Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;
  #101 = Utf8               [F
  #102 = Utf8               ([C)Lscala/collection/convert/StreamExtensions$CharArrayHasSeqParStream;
  #103 = NameAndType        #19:#102      // CharArrayHasSeqParStream:([C)Lscala/collection/convert/StreamExtensions$CharArrayHasSeqParStream;
  #104 = Methodref          #71.#103      // scala/jdk/StreamConverters$.CharArrayHasSeqParStream:([C)Lscala/collection/convert/StreamExtensions$CharArrayHasSeqParStream;
  #105 = Utf8               [C
  #106 = Utf8               ([S)Lscala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream;
  #107 = NameAndType        #55:#106      // ShortArrayHasSeqParStream:([S)Lscala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream;
  #108 = Methodref          #71.#107      // scala/jdk/StreamConverters$.ShortArrayHasSeqParStream:([S)Lscala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream;
  #109 = Utf8               [S
  #110 = Utf8               ([B)Lscala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream;
  #111 = NameAndType        #16:#110      // ByteArrayHasSeqParStream:([B)Lscala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream;
  #112 = Methodref          #71.#111      // scala/jdk/StreamConverters$.ByteArrayHasSeqParStream:([B)Lscala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream;
  #113 = Utf8               [B
  #114 = Utf8               ([Ljava/lang/Object;)Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
  #115 = Utf8               <A:Ljava/lang/Object;>([TA;)Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream<TA;>;
  #116 = NameAndType        #13:#114      // AnyArrayHasSeqParStream:([Ljava/lang/Object;)Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
  #117 = Methodref          #71.#116      // scala/jdk/StreamConverters$.AnyArrayHasSeqParStream:([Ljava/lang/Object;)Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
  #118 = Utf8               [Ljava/lang/Object;
  #119 = Utf8               ([J)Lscala/collection/convert/StreamExtensions$LongArrayHasSeqParStream;
  #120 = NameAndType        #43:#119      // LongArrayHasSeqParStream:([J)Lscala/collection/convert/StreamExtensions$LongArrayHasSeqParStream;
  #121 = Methodref          #71.#120      // scala/jdk/StreamConverters$.LongArrayHasSeqParStream:([J)Lscala/collection/convert/StreamExtensions$LongArrayHasSeqParStream;
  #122 = Utf8               [J
  #123 = Utf8               ([I)Lscala/collection/convert/StreamExtensions$IntArrayHasSeqParStream;
  #124 = NameAndType        #31:#123      // IntArrayHasSeqParStream:([I)Lscala/collection/convert/StreamExtensions$IntArrayHasSeqParStream;
  #125 = Methodref          #71.#124      // scala/jdk/StreamConverters$.IntArrayHasSeqParStream:([I)Lscala/collection/convert/StreamExtensions$IntArrayHasSeqParStream;
  #126 = Utf8               [I
  #127 = Utf8               ([D)Lscala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream;
  #128 = NameAndType        #22:#127      // DoubleArrayHasSeqParStream:([D)Lscala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream;
  #129 = Methodref          #71.#128      // scala/jdk/StreamConverters$.DoubleArrayHasSeqParStream:([D)Lscala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream;
  #130 = Utf8               [D
  #131 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
  #132 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/collection/convert/StreamExtensions$StepperHasParStream<TA;>;
  #133 = Utf8               stepper
  #134 = NameAndType        #58:#131      // StepperHasParStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
  #135 = Methodref          #71.#134      // scala/jdk/StreamConverters$.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
  #136 = Utf8               Lscala/collection/Stepper;
  #137 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
  #138 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream<TA;>;
  #139 = NameAndType        #61:#137      // StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
  #140 = Methodref          #71.#139      // scala/jdk/StreamConverters$.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
  #141 = Utf8               (Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
  #142 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream<TK;TV;TCC;>;
  #143 = Utf8               cc
  #144 = NameAndType        #49:#141      // MapHasParKeyValueStream:(Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
  #145 = Methodref          #71.#144      // scala/jdk/StreamConverters$.MapHasParKeyValueStream:(Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
  #146 = Utf8               Lscala/collection/MapOps;
  #147 = Utf8               (Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
  #148 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream<TK;TV;TCC;>;
  #149 = NameAndType        #52:#147      // MapHasSeqKeyValueStream:(Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
  #150 = Methodref          #71.#149      // scala/jdk/StreamConverters$.MapHasSeqKeyValueStream:(Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
  #151 = Utf8               (Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/collection/convert/StreamExtensions$IterableNonGenericHasParStream;
  #152 = Utf8               <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>(TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)Lscala/collection/convert/StreamExtensions$IterableNonGenericHasParStream<TA;TC;>;
  #153 = Utf8               c
  #154 = Utf8               ev
  #155 = NameAndType        #40:#151      // IterableNonGenericHasParStream:(Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/collection/convert/StreamExtensions$IterableNonGenericHasParStream;
  #156 = Methodref          #71.#155      // scala/jdk/StreamConverters$.IterableNonGenericHasParStream:(Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/collection/convert/StreamExtensions$IterableNonGenericHasParStream;
  #157 = Utf8               Lscala/collection/IterableOnce;
  #158 = Utf8               Lscala/$less$colon$less;
  #159 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
  #160 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/collection/convert/StreamExtensions$IterableHasSeqStream<TA;>;
  #161 = NameAndType        #37:#159      // IterableHasSeqStream:(Lscala/collection/IterableOnce;)Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
  #162 = Methodref          #71.#161      // scala/jdk/StreamConverters$.IterableHasSeqStream:(Lscala/collection/IterableOnce;)Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
  #163 = Utf8               Code
  #164 = Utf8               LocalVariableTable
  #165 = Utf8               MethodParameters
  #166 = Utf8               Signature
  #167 = Utf8               InnerClasses
  #168 = Utf8               SourceFile
  #169 = Utf8               RuntimeVisibleAnnotations
  #170 = Utf8               ScalaSig
{
  public static scala.collection.convert.StreamExtensions$DoubleStreamHasToScala DoubleStreamHasToScala(java.util.stream.DoubleStream);
    descriptor: (Ljava/util/stream/DoubleStream;)Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #77                 // Method scala/jdk/StreamConverters$.DoubleStreamHasToScala:(Ljava/util/stream/DoubleStream;)Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/DoubleStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static scala.collection.convert.StreamExtensions$LongStreamHasToScala LongStreamHasToScala(java.util.stream.LongStream);
    descriptor: (Ljava/util/stream/LongStream;)Lscala/collection/convert/StreamExtensions$LongStreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #81                 // Method scala/jdk/StreamConverters$.LongStreamHasToScala:(Ljava/util/stream/LongStream;)Lscala/collection/convert/StreamExtensions$LongStreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/LongStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static scala.collection.convert.StreamExtensions$IntStreamHasToScala IntStreamHasToScala(java.util.stream.IntStream);
    descriptor: (Ljava/util/stream/IntStream;)Lscala/collection/convert/StreamExtensions$IntStreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #85                 // Method scala/jdk/StreamConverters$.IntStreamHasToScala:(Ljava/util/stream/IntStream;)Lscala/collection/convert/StreamExtensions$IntStreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/IntStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static <A extends java.lang.Object> scala.collection.convert.StreamExtensions$StreamHasToScala<A> StreamHasToScala(java.util.stream.Stream<A>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/collection/convert/StreamExtensions$StreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #90                 // Method scala/jdk/StreamConverters$.StreamHasToScala:(Ljava/util/stream/Stream;)Lscala/collection/convert/StreamExtensions$StreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/Stream;
    Signature: #88                          // <A:Ljava/lang/Object;>(Ljava/util/stream/Stream<TA;>;)Lscala/collection/convert/StreamExtensions$StreamHasToScala<TA;>;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static scala.collection.convert.StreamExtensions$StringHasSeqParStream StringHasSeqParStream(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #95                 // Method scala/jdk/StreamConverters$.StringHasSeqParStream:(Ljava/lang/String;)Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.collection.convert.StreamExtensions$FloatArrayHasSeqParStream FloatArrayHasSeqParStream(float[]);
    descriptor: ([F)Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #100                // Method scala/jdk/StreamConverters$.FloatArrayHasSeqParStream:([F)Lscala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [F
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.collection.convert.StreamExtensions$CharArrayHasSeqParStream CharArrayHasSeqParStream(char[]);
    descriptor: ([C)Lscala/collection/convert/StreamExtensions$CharArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #104                // Method scala/jdk/StreamConverters$.CharArrayHasSeqParStream:([C)Lscala/collection/convert/StreamExtensions$CharArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [C
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.collection.convert.StreamExtensions$ShortArrayHasSeqParStream ShortArrayHasSeqParStream(short[]);
    descriptor: ([S)Lscala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #108                // Method scala/jdk/StreamConverters$.ShortArrayHasSeqParStream:([S)Lscala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [S
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.collection.convert.StreamExtensions$ByteArrayHasSeqParStream ByteArrayHasSeqParStream(byte[]);
    descriptor: ([B)Lscala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #112                // Method scala/jdk/StreamConverters$.ByteArrayHasSeqParStream:([B)Lscala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [B
    MethodParameters:
      Name                           Flags
      a                              final

  public static <A extends java.lang.Object> scala.collection.convert.StreamExtensions$AnyArrayHasSeqParStream<A> AnyArrayHasSeqParStream(A[]);
    descriptor: ([Ljava/lang/Object;)Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #117                // Method scala/jdk/StreamConverters$.AnyArrayHasSeqParStream:([Ljava/lang/Object;)Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [Ljava/lang/Object;
    Signature: #115                         // <A:Ljava/lang/Object;>([TA;)Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream<TA;>;
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.collection.convert.StreamExtensions$LongArrayHasSeqParStream LongArrayHasSeqParStream(long[]);
    descriptor: ([J)Lscala/collection/convert/StreamExtensions$LongArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #121                // Method scala/jdk/StreamConverters$.LongArrayHasSeqParStream:([J)Lscala/collection/convert/StreamExtensions$LongArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [J
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.collection.convert.StreamExtensions$IntArrayHasSeqParStream IntArrayHasSeqParStream(int[]);
    descriptor: ([I)Lscala/collection/convert/StreamExtensions$IntArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #125                // Method scala/jdk/StreamConverters$.IntArrayHasSeqParStream:([I)Lscala/collection/convert/StreamExtensions$IntArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [I
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.collection.convert.StreamExtensions$DoubleArrayHasSeqParStream DoubleArrayHasSeqParStream(double[]);
    descriptor: ([D)Lscala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #129                // Method scala/jdk/StreamConverters$.DoubleArrayHasSeqParStream:([D)Lscala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [D
    MethodParameters:
      Name                           Flags
      a                              final

  public static <A extends java.lang.Object> scala.collection.convert.StreamExtensions$StepperHasParStream<A> StepperHasParStream(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #135                // Method scala/jdk/StreamConverters$.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stepper   Lscala/collection/Stepper;
    Signature: #132                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/collection/convert/StreamExtensions$StepperHasParStream<TA;>;
    MethodParameters:
      Name                           Flags
      stepper                        final

  public static <A extends java.lang.Object> scala.collection.convert.StreamExtensions$StepperHasSeqStream<A> StepperHasSeqStream(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #140                // Method scala/jdk/StreamConverters$.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stepper   Lscala/collection/Stepper;
    Signature: #138                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/collection/convert/StreamExtensions$StepperHasSeqStream<TA;>;
    MethodParameters:
      Name                           Flags
      stepper                        final

  public static <K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> scala.collection.convert.StreamExtensions$MapHasParKeyValueStream<K, V, CC> MapHasParKeyValueStream(CC);
    descriptor: (Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #145                // Method scala/jdk/StreamConverters$.MapHasParKeyValueStream:(Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    cc   Lscala/collection/MapOps;
    Signature: #142                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/collection/convert/StreamExtensions$MapHasParKeyValueStream<TK;TV;TCC;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public static <K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> scala.collection.convert.StreamExtensions$MapHasSeqKeyValueStream<K, V, CC> MapHasSeqKeyValueStream(CC);
    descriptor: (Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #150                // Method scala/jdk/StreamConverters$.MapHasSeqKeyValueStream:(Lscala/collection/MapOps;)Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    cc   Lscala/collection/MapOps;
    Signature: #148                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream<TK;TV;TCC;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public static <A extends java.lang.Object, C extends scala.collection.IterableOnce<?>> scala.collection.convert.StreamExtensions$IterableNonGenericHasParStream<A, C> IterableNonGenericHasParStream(C, scala.$less$colon$less<C, scala.collection.IterableOnce<A>>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/collection/convert/StreamExtensions$IterableNonGenericHasParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: aload_1
         5: invokevirtual #156                // Method scala/jdk/StreamConverters$.IterableNonGenericHasParStream:(Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/collection/convert/StreamExtensions$IterableNonGenericHasParStream;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     c   Lscala/collection/IterableOnce;
            0       9     1    ev   Lscala/$less$colon$less;
    Signature: #152                         // <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>(TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)Lscala/collection/convert/StreamExtensions$IterableNonGenericHasParStream<TA;TC;>;
    MethodParameters:
      Name                           Flags
      c                              final
      ev                             final

  public static <A extends java.lang.Object> scala.collection.convert.StreamExtensions$IterableHasSeqStream<A> IterableHasSeqStream(scala.collection.IterableOnce<A>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/jdk/StreamConverters$.MODULE$:Lscala/jdk/StreamConverters$;
         3: aload_0
         4: invokevirtual #162                // Method scala/jdk/StreamConverters$.IterableHasSeqStream:(Lscala/collection/IterableOnce;)Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    cc   Lscala/collection/IterableOnce;
    Signature: #160                         // <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/collection/convert/StreamExtensions$IterableHasSeqStream<TA;>;
    MethodParameters:
      Name                           Flags
      cc                             final
}
InnerClasses:
  public #13= #10 of #12;                 // AnyArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #16= #15 of #12;                 // ByteArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #19= #18 of #12;                 // CharArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #22= #21 of #12;                 // DoubleArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #25= #24 of #12;                 // DoubleStreamHasToScala=class scala/collection/convert/StreamExtensions$DoubleStreamHasToScala of class scala/collection/convert/StreamExtensions
  public #28= #27 of #12;                 // FloatArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #31= #30 of #12;                 // IntArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #34= #33 of #12;                 // IntStreamHasToScala=class scala/collection/convert/StreamExtensions$IntStreamHasToScala of class scala/collection/convert/StreamExtensions
  public #37= #36 of #12;                 // IterableHasSeqStream=class scala/collection/convert/StreamExtensions$IterableHasSeqStream of class scala/collection/convert/StreamExtensions
  public #40= #39 of #12;                 // IterableNonGenericHasParStream=class scala/collection/convert/StreamExtensions$IterableNonGenericHasParStream of class scala/collection/convert/StreamExtensions
  public #43= #42 of #12;                 // LongArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #46= #45 of #12;                 // LongStreamHasToScala=class scala/collection/convert/StreamExtensions$LongStreamHasToScala of class scala/collection/convert/StreamExtensions
  public #49= #48 of #12;                 // MapHasParKeyValueStream=class scala/collection/convert/StreamExtensions$MapHasParKeyValueStream of class scala/collection/convert/StreamExtensions
  public #52= #51 of #12;                 // MapHasSeqKeyValueStream=class scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream of class scala/collection/convert/StreamExtensions
  public #55= #54 of #12;                 // ShortArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
  public #58= #57 of #12;                 // StepperHasParStream=class scala/collection/convert/StreamExtensions$StepperHasParStream of class scala/collection/convert/StreamExtensions
  public #61= #60 of #12;                 // StepperHasSeqStream=class scala/collection/convert/StreamExtensions$StepperHasSeqStream of class scala/collection/convert/StreamExtensions
  public #64= #63 of #12;                 // StreamHasToScala=class scala/collection/convert/StreamExtensions$StreamHasToScala of class scala/collection/convert/StreamExtensions
  public #67= #66 of #12;                 // StringHasSeqParStream=class scala/collection/convert/StreamExtensions$StringHasSeqParStream of class scala/collection/convert/StreamExtensions
SourceFile: "StreamConverters.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005m9Qa\u0001\u0003\t\u0002%1Qa\u0003\u0003\t\u00021AQ!G\u0001\u0005\u0002i\t\u0001c\u0015;sK\u0006l7i\u001c8wKJ$XM]:\u000b\u0005\u00151\u0011a\u00016eW*\tq!A\u0003tG\u0006d\u0017m\u0001\u0001\u0011\u0005)\tQ\"\u0001\u0003\u0003!M#(/Z1n\u0007>tg/\u001a:uKJ\u001c8cA\u0001\u000e#A\u0011abD\u0007\u0002\r%\u0011\u0001C\u0002\u0002\u0007\u0003:L(+\u001a4\u0011\u0005I9R\"A\n\u000b\u0005Q)\u0012aB2p]Z,\'\u000f\u001e\u0006\u0003-\u0019\t!bY8mY\u0016\u001cG/[8o\u0013\tA2C\u0001\tTiJ,\u0017-\\#yi\u0016t7/[8og\u00061A(\u001b8jiz\"\u0012!\u0003"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
