Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/JsonNumber$.class
  Last modified May 29, 2022; size 4201 bytes
  SHA-256 checksum ceac902f9647f28c56a2ae2f65044df3a21b22d8a7b77d529105d62e45209c3f
  Compiled from "JsonNumber.scala"
public final class argonaut.JsonNumber$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/JsonNumber$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 4, methods: 14, attributes: 3
Constant pool:
    #1 = Utf8               argonaut/JsonNumber$
    #2 = Class              #1            // argonaut/JsonNumber$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonNumber.scala
    #6 = Utf8               MODULE$
    #7 = Utf8               Largonaut/JsonNumber$;
    #8 = Utf8               MaxLongString
    #9 = Utf8               Ljava/lang/String;
   #10 = Utf8               MinLongString
   #11 = Utf8               JsonNumberRegex
   #12 = Utf8               Lscala/util/matching/Regex;
   #13 = Utf8               <clinit>
   #14 = Utf8               ()V
   #15 = Utf8               <init>
   #16 = NameAndType        #15:#14       // "<init>":()V
   #17 = Methodref          #2.#16        // argonaut/JsonNumber$."<init>":()V
   #18 = NameAndType        #6:#7         // MODULE$:Largonaut/JsonNumber$;
   #19 = Fieldref           #2.#18        // argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
   #20 = Long               9223372036854775807l
   #22 = Utf8               scala/runtime/BoxesRunTime
   #23 = Class              #22           // scala/runtime/BoxesRunTime
   #24 = Utf8               boxToLong
   #25 = Utf8               (J)Ljava/lang/Long;
   #26 = NameAndType        #24:#25       // boxToLong:(J)Ljava/lang/Long;
   #27 = Methodref          #23.#26       // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   #28 = Utf8               toString
   #29 = Utf8               ()Ljava/lang/String;
   #30 = NameAndType        #28:#29       // toString:()Ljava/lang/String;
   #31 = Methodref          #4.#30        // java/lang/Object.toString:()Ljava/lang/String;
   #32 = NameAndType        #8:#9         // MaxLongString:Ljava/lang/String;
   #33 = Fieldref           #2.#32        // argonaut/JsonNumber$.MaxLongString:Ljava/lang/String;
   #34 = Long               -9223372036854775808l
   #36 = NameAndType        #10:#9        // MinLongString:Ljava/lang/String;
   #37 = Fieldref           #2.#36        // argonaut/JsonNumber$.MinLongString:Ljava/lang/String;
   #38 = Utf8               scala/collection/StringOps$
   #39 = Class              #38           // scala/collection/StringOps$
   #40 = Utf8               Lscala/collection/StringOps$;
   #41 = NameAndType        #6:#40        // MODULE$:Lscala/collection/StringOps$;
   #42 = Fieldref           #39.#41       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #43 = Utf8               scala/Predef$
   #44 = Class              #43           // scala/Predef$
   #45 = Utf8               Lscala/Predef$;
   #46 = NameAndType        #6:#45        // MODULE$:Lscala/Predef$;
   #47 = Fieldref           #44.#46       // scala/Predef$.MODULE$:Lscala/Predef$;
   #48 = Utf8               (-)?((?:[1-9][0-9]*|0))(?:\\.([0-9]+))?(?:[eE]([-+]?[0-9]+))?
   #49 = String             #48           // (-)?((?:[1-9][0-9]*|0))(?:\\.([0-9]+))?(?:[eE]([-+]?[0-9]+))?
   #50 = Utf8               augmentString
   #51 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #52 = NameAndType        #50:#51       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #53 = Methodref          #44.#52       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #54 = Utf8               r$extension
   #55 = Utf8               (Ljava/lang/String;)Lscala/util/matching/Regex;
   #56 = NameAndType        #54:#55       // r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
   #57 = Methodref          #39.#56       // scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
   #58 = NameAndType        #11:#12       // JsonNumberRegex:Lscala/util/matching/Regex;
   #59 = Fieldref           #2.#58        // argonaut/JsonNumber$.JsonNumberRegex:Lscala/util/matching/Regex;
   #60 = Utf8               unsafeDecimal
   #61 = Utf8               (Ljava/lang/String;)Largonaut/JsonNumber;
   #62 = Utf8               value
   #63 = Utf8               argonaut/JsonDecimal$
   #64 = Class              #63           // argonaut/JsonDecimal$
   #65 = Utf8               Largonaut/JsonDecimal$;
   #66 = NameAndType        #6:#65        // MODULE$:Largonaut/JsonDecimal$;
   #67 = Fieldref           #64.#66       // argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
   #68 = Utf8               apply
   #69 = Utf8               (Ljava/lang/String;)Largonaut/JsonDecimal;
   #70 = NameAndType        #68:#69       // apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
   #71 = Methodref          #64.#70       // argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
   #72 = Utf8               this
   #73 = Utf8               fromString
   #74 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #75 = Utf8               (Ljava/lang/String;)Lscala/Option<Largonaut/JsonNumber;>;
   #76 = Utf8               integer$1
   #77 = Utf8               (ILjava/lang/String;)I
   #78 = NameAndType        #76:#77       // integer$1:(ILjava/lang/String;)I
   #79 = Methodref          #2.#78        // argonaut/JsonNumber$.integer$1:(ILjava/lang/String;)I
   #80 = Utf8               decimal$1
   #81 = NameAndType        #80:#77       // decimal$1:(ILjava/lang/String;)I
   #82 = Methodref          #2.#81        // argonaut/JsonNumber$.decimal$1:(ILjava/lang/String;)I
   #83 = Utf8               exponent$1
   #84 = NameAndType        #83:#77       // exponent$1:(ILjava/lang/String;)I
   #85 = Methodref          #2.#84        // argonaut/JsonNumber$.exponent$1:(ILjava/lang/String;)I
   #86 = Utf8               java/lang/String
   #87 = Class              #86           // java/lang/String
   #88 = Utf8               length
   #89 = Utf8               ()I
   #90 = NameAndType        #88:#89       // length:()I
   #91 = Methodref          #87.#90       // java/lang/String.length:()I
   #92 = Utf8               scala/None$
   #93 = Class              #92           // scala/None$
   #94 = Utf8               Lscala/None$;
   #95 = NameAndType        #6:#94        // MODULE$:Lscala/None$;
   #96 = Fieldref           #93.#95       // scala/None$.MODULE$:Lscala/None$;
   #97 = Utf8               isLong$1
   #98 = Utf8               (Ljava/lang/String;)Z
   #99 = NameAndType        #97:#98       // isLong$1:(Ljava/lang/String;)Z
  #100 = Methodref          #2.#99        // argonaut/JsonNumber$.isLong$1:(Ljava/lang/String;)Z
  #101 = Utf8               scala/Some
  #102 = Class              #101          // scala/Some
  #103 = Utf8               argonaut/JsonLong
  #104 = Class              #103          // argonaut/JsonLong
  #105 = Utf8               toLong$extension
  #106 = Utf8               (Ljava/lang/String;)J
  #107 = NameAndType        #105:#106     // toLong$extension:(Ljava/lang/String;)J
  #108 = Methodref          #39.#107      // scala/collection/StringOps$.toLong$extension:(Ljava/lang/String;)J
  #109 = Utf8               (J)V
  #110 = NameAndType        #15:#109      // "<init>":(J)V
  #111 = Methodref          #104.#110     // argonaut/JsonLong."<init>":(J)V
  #112 = Utf8               (Ljava/lang/Object;)V
  #113 = NameAndType        #15:#112      // "<init>":(Ljava/lang/Object;)V
  #114 = Methodref          #102.#113     // scala/Some."<init>":(Ljava/lang/Object;)V
  #115 = Utf8               intIndex
  #116 = Utf8               I
  #117 = Utf8               decIndex
  #118 = Utf8               expIndex
  #119 = Utf8               invalid
  #120 = Utf8               Z
  #121 = Utf8               scala/Option
  #122 = Class              #121          // scala/Option
  #123 = Utf8               ()Lscala/util/matching/Regex;
  #124 = Utf8               digits$1
  #125 = Utf8               index
  #126 = Utf8               value$1
  #127 = Utf8               apply$extension
  #128 = Utf8               (Ljava/lang/String;I)C
  #129 = NameAndType        #127:#128     // apply$extension:(Ljava/lang/String;I)C
  #130 = Methodref          #39.#129      // scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
  #131 = Utf8               char
  #132 = Utf8               C
  #133 = Utf8               digits1$1
  #134 = NameAndType        #124:#77      // digits$1:(ILjava/lang/String;)I
  #135 = Methodref          #2.#134       // argonaut/JsonNumber$.digits$1:(ILjava/lang/String;)I
  #136 = Utf8               end
  #137 = Utf8               natural$1
  #138 = NameAndType        #137:#77      // natural$1:(ILjava/lang/String;)I
  #139 = Methodref          #2.#138       // argonaut/JsonNumber$.natural$1:(ILjava/lang/String;)I
  #140 = NameAndType        #133:#77      // digits1$1:(ILjava/lang/String;)I
  #141 = Methodref          #2.#140       // argonaut/JsonNumber$.digits1$1:(ILjava/lang/String;)I
  #142 = Utf8               sign
  #143 = Utf8               index0
  #144 = Utf8               e
  #145 = NameAndType        #10:#29       // MinLongString:()Ljava/lang/String;
  #146 = Methodref          #2.#145       // argonaut/JsonNumber$.MinLongString:()Ljava/lang/String;
  #147 = NameAndType        #8:#29        // MaxLongString:()Ljava/lang/String;
  #148 = Methodref          #2.#147       // argonaut/JsonNumber$.MaxLongString:()Ljava/lang/String;
  #149 = Utf8               compareTo
  #150 = Utf8               (Ljava/lang/String;)I
  #151 = NameAndType        #149:#150     // compareTo:(Ljava/lang/String;)I
  #152 = Methodref          #87.#151      // java/lang/String.compareTo:(Ljava/lang/String;)I
  #153 = Utf8               upperBound
  #154 = Methodref          #4.#16        // java/lang/Object."<init>":()V
  #155 = Utf8               Code
  #156 = Utf8               LineNumberTable
  #157 = Utf8               LocalVariableTable
  #158 = Utf8               MethodParameters
  #159 = Utf8               StackMapTable
  #160 = Utf8               Signature
  #161 = Utf8               SourceFile
  #162 = Utf8               ScalaInlineInfo
  #163 = Utf8               Scala
{
  public static final argonaut.JsonNumber$ MODULE$;
    descriptor: Largonaut/JsonNumber$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.lang.String MaxLongString;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.lang.String MinLongString;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final scala.util.matching.Regex JsonNumberRegex;
    descriptor: Lscala/util/matching/Regex;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class argonaut/JsonNumber$
         3: dup
         4: invokespecial #17                 // Method "<init>":()V
         7: putstatic     #19                 // Field MODULE$:Largonaut/JsonNumber$;
        10: ldc2_w        #20                 // long 9223372036854775807l
        13: invokestatic  #27                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        16: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
        19: putstatic     #33                 // Field MaxLongString:Ljava/lang/String;
        22: ldc2_w        #34                 // long -9223372036854775808l
        25: invokestatic  #27                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        28: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
        31: putstatic     #37                 // Field MinLongString:Ljava/lang/String;
        34: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        37: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        40: ldc           #49                 // String (-)?((?:[1-9][0-9]*|0))(?:\\.([0-9]+))?(?:[eE]([-+]?[0-9]+))?
        42: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        45: invokevirtual #57                 // Method scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
        48: putstatic     #59                 // Field JsonNumberRegex:Lscala/util/matching/Regex;
        51: return
      LineNumberTable:
        line 249: 0
        line 362: 10
        line 363: 22
        line 377: 34
        line 378: 37
        line 377: 48
        line 249: 51

  public argonaut.JsonNumber unsafeDecimal(java.lang.String);
    descriptor: (Ljava/lang/String;)Largonaut/JsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #67                 // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
         3: aload_1
         4: invokevirtual #71                 // Method argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
         7: areturn
      LineNumberTable:
        line 258: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonNumber$;
            0       8     1 value   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      value                          final

  public scala.Option<argonaut.JsonNumber> fromString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=2
         0: aload_0
         1: iconst_0
         2: aload_1
         3: invokespecial #79                 // Method integer$1:(ILjava/lang/String;)I
         6: istore_2
         7: aload_0
         8: iload_2
         9: aload_1
        10: invokespecial #82                 // Method decimal$1:(ILjava/lang/String;)I
        13: istore_3
        14: aload_0
        15: iload_3
        16: aload_1
        17: invokespecial #85                 // Method exponent$1:(ILjava/lang/String;)I
        20: istore        4
        22: iload         4
        24: aload_1
        25: invokevirtual #91                 // Method java/lang/String.length:()I
        28: if_icmpne     46
        31: iload_2
        32: iconst_0
        33: if_icmpeq     46
        36: iload_2
        37: iconst_m1
        38: if_icmpeq     46
        41: iload_3
        42: iconst_m1
        43: if_icmpne     50
        46: iconst_1
        47: goto          51
        50: iconst_0
        51: istore        5
        53: iload         5
        55: ifeq          64
        58: getstatic     #96                 // Field scala/None$.MODULE$:Lscala/None$;
        61: goto          122
        64: iload_2
        65: iload         4
        67: if_icmpne     108
        70: aload_0
        71: aload_1
        72: invokespecial #100                // Method isLong$1:(Ljava/lang/String;)Z
        75: ifeq          108
        78: new           #102                // class scala/Some
        81: dup
        82: new           #104                // class argonaut/JsonLong
        85: dup
        86: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        89: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        92: aload_1
        93: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        96: invokevirtual #108                // Method scala/collection/StringOps$.toLong$extension:(Ljava/lang/String;)J
        99: invokespecial #111                // Method argonaut/JsonLong."<init>":(J)V
       102: invokespecial #114                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       105: goto          122
       108: new           #102                // class scala/Some
       111: dup
       112: getstatic     #67                 // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
       115: aload_1
       116: invokevirtual #71                 // Method argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
       119: invokespecial #114                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       122: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 254 /* append */
          offset_delta = 46
          locals = [ int, int, int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 43 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 334: 0
        line 335: 7
        line 336: 14
        line 339: 22
        line 340: 31
        line 341: 36
        line 342: 41
        line 353: 53
        line 354: 58
        line 355: 64
        line 356: 78
        line 358: 108
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6     116     2 intIndex   I
           13     109     3 decIndex   I
           20     102     4 expIndex   I
           51      71     5 invalid   Z
            0     123     0  this   Largonaut/JsonNumber$;
            0     123     1 value   Ljava/lang/String;
    Signature: #75                          // (Ljava/lang/String;)Lscala/Option<Largonaut/JsonNumber;>;
    MethodParameters:
      Name                           Flags
      value                          final

  private java.lang.String MaxLongString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #33                 // Field MaxLongString:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 362: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/JsonNumber$;

  private java.lang.String MinLongString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #37                 // Field MinLongString:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 363: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/JsonNumber$;

  public scala.util.matching.Regex JsonNumberRegex();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #59                 // Field JsonNumberRegex:Lscala/util/matching/Regex;
         3: areturn
      LineNumberTable:
        line 377: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/JsonNumber$;

  private final int digits$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=3
         0: iload_1
         1: aload_2
         2: invokevirtual #91                 // Method java/lang/String.length:()I
         5: if_icmplt     15
         8: aload_2
         9: invokevirtual #91                 // Method java/lang/String.length:()I
        12: goto          53
        15: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        18: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        21: aload_2
        22: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        25: iload_1
        26: invokevirtual #130                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        29: istore        4
        31: iload         4
        33: bipush        48
        35: if_icmplt     52
        38: iload         4
        40: bipush        57
        42: if_icmpgt     52
        45: iload_1
        46: iconst_1
        47: iadd
        48: istore_1
        49: goto          0
        52: iload_1
        53: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 0 /* same */
        frame_type = 14 /* same */
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class argonaut/JsonNumber$, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 274: 0
        line 276: 15
        line 277: 31
        line 278: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      24     4  char   C
            0      54     0  this   Largonaut/JsonNumber$;
            0      54     1 index   I
            0      54     2 value$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      value$1                        final

  private final int digits1$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokespecial #135                // Method digits$1:(ILjava/lang/String;)I
         6: istore_3
         7: iload_3
         8: iload_1
         9: if_icmpne     16
        12: iconst_m1
        13: goto          17
        16: iload_3
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 284: 0
        line 285: 7
        line 286: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      11     3   end   I
            0      18     0  this   Largonaut/JsonNumber$;
            0      18     1 index   I
            0      18     2 value$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      value$1                        final

  private final int natural$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=3
         0: iload_1
         1: aload_2
         2: invokevirtual #91                 // Method java/lang/String.length:()I
         5: if_icmplt     12
         8: iconst_m1
         9: goto          63
        12: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        15: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        18: aload_2
        19: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        22: iload_1
        23: invokevirtual #130                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        26: istore_3
        27: iload_3
        28: bipush        48
        30: if_icmpne     39
        33: iload_1
        34: iconst_1
        35: iadd
        36: goto          63
        39: iload_3
        40: bipush        49
        42: if_icmplt     62
        45: iload_3
        46: bipush        57
        48: if_icmpgt     62
        51: aload_0
        52: iload_1
        53: iconst_1
        54: iadd
        55: aload_2
        56: invokespecial #135                // Method digits$1:(ILjava/lang/String;)I
        59: goto          63
        62: iload_1
        63: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
        frame_type = 22 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class argonaut/JsonNumber$, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 291: 0
        line 293: 12
        line 294: 27
        line 295: 39
        line 296: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      37     3  char   C
            0      64     0  this   Largonaut/JsonNumber$;
            0      64     1 index   I
            0      64     2 value$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      value$1                        final

  private final int integer$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: iload_1
         1: aload_2
         2: invokevirtual #91                 // Method java/lang/String.length:()I
         5: if_icmplt     12
         8: iconst_m1
         9: goto          48
        12: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        15: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        18: aload_2
        19: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        22: iload_1
        23: invokevirtual #130                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        26: bipush        45
        28: if_icmpne     42
        31: aload_0
        32: iload_1
        33: iconst_1
        34: iadd
        35: aload_2
        36: invokespecial #139                // Method natural$1:(ILjava/lang/String;)I
        39: goto          48
        42: aload_0
        43: iload_1
        44: aload_2
        45: invokespecial #139                // Method natural$1:(ILjava/lang/String;)I
        48: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 12 /* same */
        frame_type = 29 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 302: 0
        line 303: 12
        line 304: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Largonaut/JsonNumber$;
            0      49     1 index   I
            0      49     2 value$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      value$1                        final

  private final int decimal$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: iload_1
         1: iconst_0
         2: if_icmplt     13
         5: iload_1
         6: aload_2
         7: invokevirtual #91                 // Method java/lang/String.length:()I
        10: if_icmplt     17
        13: iload_1
        14: goto          48
        17: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        20: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        23: aload_2
        24: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        27: iload_1
        28: invokevirtual #130                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        31: bipush        46
        33: if_icmpne     47
        36: aload_0
        37: iload_1
        38: iconst_1
        39: iadd
        40: aload_2
        41: invokespecial #141                // Method digits1$1:(ILjava/lang/String;)I
        44: goto          48
        47: iload_1
        48: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 13 /* same */
        frame_type = 3 /* same */
        frame_type = 29 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 309: 0
        line 310: 17
        line 311: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Largonaut/JsonNumber$;
            0      49     1 index   I
            0      49     2 value$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      value$1                        final

  private final int exponent$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=6, args_size=3
         0: iload_1
         1: iconst_0
         2: if_icmplt     13
         5: iload_1
         6: aload_2
         7: invokevirtual #91                 // Method java/lang/String.length:()I
        10: if_icmplt     17
        13: iload_1
        14: goto          116
        17: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        20: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        23: aload_2
        24: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        27: iload_1
        28: invokevirtual #130                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        31: istore_3
        32: iload_3
        33: bipush        101
        35: if_icmpeq     44
        38: iload_3
        39: bipush        69
        41: if_icmpne     115
        44: iload_1
        45: iconst_1
        46: iadd
        47: istore        4
        49: iload         4
        51: aload_2
        52: invokevirtual #91                 // Method java/lang/String.length:()I
        55: if_icmpge     111
        58: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        61: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        64: aload_2
        65: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        68: iload         4
        70: invokevirtual #130                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        73: istore        5
        75: iload         5
        77: bipush        43
        79: if_icmpeq     89
        82: iload         5
        84: bipush        45
        86: if_icmpne     101
        89: aload_0
        90: iload         4
        92: iconst_1
        93: iadd
        94: aload_2
        95: invokespecial #141                // Method digits1$1:(ILjava/lang/String;)I
        98: goto          108
       101: aload_0
       102: iload         4
       104: aload_2
       105: invokespecial #141                // Method digits1$1:(ILjava/lang/String;)I
       108: goto          112
       111: iconst_m1
       112: goto          116
       115: iconst_m1
       116: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 13 /* same */
        frame_type = 3 /* same */
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ int, int ]
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class argonaut/JsonNumber$, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 316: 0
        line 318: 17
        line 319: 32
        line 320: 44
        line 321: 49
        line 322: 58
        line 323: 75
        line 324: 101
        line 326: 111
        line 329: 115
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           73      35     5  sign   C
           47      65     4 index0   I
           31      85     3     e   C
            0     117     0  this   Largonaut/JsonNumber$;
            0     117     1 index   I
            0     117     2 value$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      value$1                        final

  private final boolean isLong$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #42                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #53                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: iconst_0
        11: invokevirtual #130                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        14: bipush        45
        16: if_icmpne     26
        19: aload_0
        20: invokespecial #146                // Method MinLongString:()Ljava/lang/String;
        23: goto          30
        26: aload_0
        27: invokespecial #148                // Method MaxLongString:()Ljava/lang/String;
        30: astore_2
        31: aload_1
        32: invokevirtual #91                 // Method java/lang/String.length:()I
        35: aload_2
        36: invokevirtual #91                 // Method java/lang/String.length:()I
        39: if_icmplt     62
        42: aload_1
        43: invokevirtual #91                 // Method java/lang/String.length:()I
        46: aload_2
        47: invokevirtual #91                 // Method java/lang/String.length:()I
        50: if_icmpne     66
        53: aload_1
        54: aload_2
        55: invokevirtual #152                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
        58: iconst_0
        59: if_icmpgt     66
        62: iconst_1
        63: goto          67
        66: iconst_0
        67: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 26 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class java/lang/String ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 347: 0
        line 348: 31
        line 349: 42
        line 350: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30      37     2 upperBound   Ljava/lang/String;
            0      68     0  this   Largonaut/JsonNumber$;
            0      68     1 value$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      value$1                        final

  private argonaut.JsonNumber$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #154                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 381: 0
        line 249: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonNumber$;
}
SourceFile: "JsonNumber.scala"
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 01 00 0D 00 0F 00 0E 01 00 0B 00 7B 01 00 08
   00 1D 01 00 0A 00 1D 01 00 50 00 4D 01 00 7C 00
   4D 01 00 85 00 4D 01 00 53 00 4D 01 00 49 00 4A
   01 00 4C 00 4D 01 00 61 00 62 01 00 89 00 4D 01
   00 3C 00 3D 01
  Scala: length = 0x0 (unknown attribute)

