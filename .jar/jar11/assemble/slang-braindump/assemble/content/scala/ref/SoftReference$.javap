Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/ref/SoftReference$.class
  Last modified May 29, 2022; size 1255 bytes
  SHA-256 checksum 63a41dfe0f69f12bf720392b97ff12fdc4c08bd91af45fe14b25e54778bcba6a
  Compiled from "SoftReference.scala"
public final class scala.ref.SoftReference$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/ref/SoftReference$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 4, attributes: 3
Constant pool:
   #1 = Utf8               scala/ref/SoftReference$
   #2 = Class              #1             // scala/ref/SoftReference$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               SoftReference.scala
   #6 = Utf8               MODULE$
   #7 = Utf8               Lscala/ref/SoftReference$;
   #8 = Utf8               <clinit>
   #9 = Utf8               ()V
  #10 = Utf8               <init>
  #11 = NameAndType        #10:#9         // "<init>":()V
  #12 = Methodref          #2.#11         // scala/ref/SoftReference$."<init>":()V
  #13 = NameAndType        #6:#7          // MODULE$:Lscala/ref/SoftReference$;
  #14 = Fieldref           #2.#13         // scala/ref/SoftReference$.MODULE$:Lscala/ref/SoftReference$;
  #15 = Utf8               apply
  #16 = Utf8               (Ljava/lang/Object;)Lscala/ref/SoftReference;
  #17 = Utf8               <T:Ljava/lang/Object;>(TT;)Lscala/ref/SoftReference<TT;>;
  #18 = Utf8               value
  #19 = Utf8               scala/ref/SoftReference
  #20 = Class              #19            // scala/ref/SoftReference
  #21 = Utf8               (Ljava/lang/Object;)V
  #22 = NameAndType        #10:#21        // "<init>":(Ljava/lang/Object;)V
  #23 = Methodref          #20.#22        // scala/ref/SoftReference."<init>":(Ljava/lang/Object;)V
  #24 = Utf8               this
  #25 = Utf8               Ljava/lang/Object;
  #26 = Utf8               unapply
  #27 = Utf8               (Lscala/ref/SoftReference;)Lscala/Option;
  #28 = Utf8               <T:Ljava/lang/Object;>(Lscala/ref/SoftReference<TT;>;)Lscala/Option<TT;>;
  #29 = Utf8               sr
  #30 = Utf8               scala/Option$
  #31 = Class              #30            // scala/Option$
  #32 = Utf8               Lscala/Option$;
  #33 = NameAndType        #6:#32         // MODULE$:Lscala/Option$;
  #34 = Fieldref           #31.#33        // scala/Option$.MODULE$:Lscala/Option$;
  #35 = Utf8               underlying
  #36 = Utf8               ()Ljava/lang/ref/SoftReference;
  #37 = NameAndType        #35:#36        // underlying:()Ljava/lang/ref/SoftReference;
  #38 = Methodref          #20.#37        // scala/ref/SoftReference.underlying:()Ljava/lang/ref/SoftReference;
  #39 = Utf8               java/lang/ref/SoftReference
  #40 = Class              #39            // java/lang/ref/SoftReference
  #41 = Utf8               get
  #42 = Utf8               ()Ljava/lang/Object;
  #43 = NameAndType        #41:#42        // get:()Ljava/lang/Object;
  #44 = Methodref          #40.#43        // java/lang/ref/SoftReference.get:()Ljava/lang/Object;
  #45 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #46 = NameAndType        #15:#45        // apply:(Ljava/lang/Object;)Lscala/Option;
  #47 = Methodref          #31.#46        // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #48 = Utf8               Lscala/ref/SoftReference;
  #49 = Methodref          #4.#11         // java/lang/Object."<init>":()V
  #50 = Utf8               Code
  #51 = Utf8               LineNumberTable
  #52 = Utf8               LocalVariableTable
  #53 = Utf8               Signature
  #54 = Utf8               MethodParameters
  #55 = Utf8               SourceFile
  #56 = Utf8               ScalaInlineInfo
  #57 = Utf8               Scala
{
  public static final scala.ref.SoftReference$ MODULE$;
    descriptor: Lscala/ref/SoftReference$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/ref/SoftReference$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lscala/ref/SoftReference$;
        10: return
      LineNumberTable:
        line 25: 0

  public <T extends java.lang.Object> scala.ref.SoftReference<T> apply(T);
    descriptor: (Ljava/lang/Object;)Lscala/ref/SoftReference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #20                 // class scala/ref/SoftReference
         3: dup
         4: aload_1
         5: invokespecial #23                 // Method scala/ref/SoftReference."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/ref/SoftReference$;
            0       9     1 value   Ljava/lang/Object;
    Signature: #17                          // <T:Ljava/lang/Object;>(TT;)Lscala/ref/SoftReference<TT;>;
    MethodParameters:
      Name                           Flags
      value                          final

  public <T extends java.lang.Object> scala.Option<T> unapply(scala.ref.SoftReference<T>);
    descriptor: (Lscala/ref/SoftReference;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #34                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_1
         4: invokevirtual #38                 // Method scala/ref/SoftReference.underlying:()Ljava/lang/ref/SoftReference;
         7: invokevirtual #44                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
        10: invokevirtual #47                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/ref/SoftReference$;
            0      14     1    sr   Lscala/ref/SoftReference;
    Signature: #28                          // <T:Ljava/lang/Object;>(Lscala/ref/SoftReference<TT;>;)Lscala/Option<TT;>;
    MethodParameters:
      Name                           Flags
      sr                             final

  private scala.ref.SoftReference$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #49                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/SoftReference$;
}
SourceFile: "SoftReference.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 0A 00 09 01 00 0F 00 10 01 00 1A
   00 1B 01
  Scala: length = 0x0 (unknown attribute)

