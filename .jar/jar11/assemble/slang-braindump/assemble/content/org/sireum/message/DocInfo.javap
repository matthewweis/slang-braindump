Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/message/DocInfo.class
  Last modified May 29, 2022; size 13481 bytes
  SHA-256 checksum 25fa5acece48bc4cb9e3a24666cb79a372e9e445b6b8993cfbac1771dc8e96f4
  Compiled from "Message.scala"
public final class org.sireum.message.DocInfo implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/message/DocInfo
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 30, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/message/DocInfo
    #2 = Class              #1            // org/sireum/message/DocInfo
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/DatatypeSig
    #6 = Class              #5            // org/sireum/DatatypeSig
    #7 = Utf8               Message.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u0005-d\u0001\u0002\u000e\u001c\u0005\tB\u0001\"\f\u0001\u0003\u0002\u0003\u0006IA\f\u0005\ti\u0001\u0011\t\u0011)A\u0005k!)\u0011\n\u0001C\u0001\u0015\"1q\n\u0001Q\u0001\nACaa\u0015\u0001!\u0002\u0013\t\u0004\"\u0002+\u0001\t\u0003)\u0006\"\u0002,\u0001\t\u0003)\u0006BB,\u0001A\u0003%Q\u0007C\u0003Y\u0001\u0011\u0005\u0011\fC\u0003[\u0001\u0011\u0005\u0011\fC\u0003\\\u0001\u0011\u0005C\fC\u0003e\u0001\u0011\u0005S\r\u0003\u0005g\u0001!\u0015\r\u0011\"\u0011h\u0011\u0015Y\u0007\u0001\"\u0011m\u0011\u0015\u0011\b\u0001\"\u0001t\u0011\u001d1\b!%A\u0005\u0002]D\u0011\"!\u0002\u0001#\u0003%\t!a\u0002\t\u0015\u0005-\u0001\u0001#b\u0001\n\u0003\ni\u0001C\u0004\u0002&\u0001!\t!a\n\b\u000f\u0005\r3\u0004#\u0001\u0002F\u00191!d\u0007E\u0001\u0003\u000fBa!S\u000b\u0005\u0002\u0005%\u0003bBA&+\u0011\u0005\u0011Q\n\u0005\u0007eV!\t!a\u0016\t\u000f\u0005uS\u0003\"\u0001\u0002`\t9Ai\\2J]\u001a|\'B\u0001\u000f\u001e\u0003\u001diWm]:bO\u0016T!AH\u0010\u0002\rML\'/Z;n\u0015\u0005\u0001\u0013aA8sO\u000e\u00011c\u0001\u0001$SA\u0011AeJ\u0007\u0002K)\ta%A\u0003tG\u0006d\u0017-\u0003\u0002)K\t1\u0011I\\=SK\u001a\u0004\"AK\u0016\u000e\u0003uI!\u0001L\u000f\u0003\u0017\u0011\u000bG/\u0019;za\u0016\u001c\u0016nZ\u0001\t?~+(/[(qiB\u0019!fL\u0019\n\u0005Aj\"AB(qi&|g\u000e\u0005\u0002+e%\u00111\'\b\u0002\u0007\'R\u0014\u0018N\\4\u0002\u001b}{F.\u001b8f\u001f\u001a47/\u001a;t!\r1\u0004I\u0012\b\u0003oyr!\u0001O\u001f\u000f\u0005ebT\"\u0001\u001e\u000b\u0005m\n\u0013A\u0002\u001fs_>$h(C\u0001!\u0013\tqr$\u0003\u0002@;\u00059\u0001/Y2lC\u001e,\u0017BA!C\u0005\rI5KW\u0005\u0003\u0007\u0012\u0013A\u0002U1dW\u0006<W\r\u0016:bSRT!!R\u000f\u0002\u0013\u0011Jg\u000e^3s]\u0006d\u0007C\u0001\u0016H\u0013\tAUDA\u0002VgI\na\u0001P5oSRtDcA&N\u001dB\u0011A\nA\u0007\u00027!)Qf\u0001a\u0001]!)Ag\u0001a\u0001k\u0005AqLY;sS>\u0003H\u000f\u0005\u0002%#&\u0011!+\n\u0002\b\u0005>|G.Z1o\u0003\u001dyVO]5PaR\fa!\u001e:j\u001fB$X#\u0001\u0018\u0002\u0013\u001d,G/\u0016:j\u001fB$\u0018\u0001D0mS:,wJ\u001a4tKR\u001c\u0018a\u00037j]\u0016|eMZ:fiN,\u0012!N\u0001\u000fO\u0016$H*\u001b8f\u001f\u001a47/\u001a;t\u0003!!xn\u0015;sS:<G#A/\u0011\u0005y\u001bW\"A0\u000b\u0005\u0001\f\u0017\u0001\u00027b]\u001eT\u0011AY\u0001\u0005U\u00064\u0018-\u0003\u00024?\u000611\u000f\u001e:j]\u001e,\u0012!M\u0001\tQ\u0006\u001c\bnQ8eKV\t\u0001\u000e\u0005\u0002%S&\u0011!.\n\u0002\u0004\u0013:$\u0018AB3rk\u0006d7\u000f\u0006\u0002Q[\")aN\u0004a\u0001_\u0006\tq\u000e\u0005\u0002%a&\u0011\u0011/\n\u0002\u0004\u0003:L\u0018!B1qa2LHcA&uk\"9Ak\u0004I\u0001\u0002\u0004q\u0003b\u0002-\u0010!\u0003\u0005\r!N\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\t\u0001P\u000b\u0002/s.\n!\u0010E\u0002|\u0003\u0003i\u0011\u0001 \u0006\u0003{z\f\u0011\"\u001e8dQ\u0016\u001c7.\u001a3\u000b\u0005},\u0013AC1o]>$\u0018\r^5p]&\u0019\u00111\u0001?\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00133+\t\tIA\u000b\u00026s\u0006AAeY8oi\u0016tG/\u0006\u0002\u0002\u0010A1\u0011\u0011CA\r\u0003?qA!a\u0005\u0002\u00189\u0019\u0011(!\u0006\n\u0003\u0019J!aP\u0013\n\t\u0005m\u0011Q\u0004\u0002\u0004\'\u0016\f(BA &!\u0015!\u0013\u0011E/p\u0013\r\t\u0019#\n\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u00151Lg.Z\"pYVlg\u000e\u0006\u0003\u0002*\u0005=\u0002c\u0001\u0016\u0002,%\u0019\u0011QF\u000f\u0003\u0007U3D\u0007C\u0004\u00022M\u0001\r!!\u000b\u0002\u0019=4gm]3u\u0019\u0016tw\r\u001e5)\u0007M\t)\u0004E\u0002+\u0003oI1!!\u000f\u001e\u0005\u0011\u0001XO]3)\u0007\u0001\ti\u0004E\u0002+\u0003\u007fI1!!\u0011\u001e\u0005!!\u0017\r^1usB,\u0017a\u0002#pG&sgm\u001c\t\u0003\u0019V\u0019\"!F\u0012\u0015\u0005\u0005\u0015\u0013AB2sK\u0006$X\rF\u0003L\u0003\u001f\n\t\u0006C\u0003U/\u0001\u0007a\u0006\u0003\u0004\u0002T]\u0001\r!M\u0001\u0006S:\u0004X\u000f\u001e\u0015\u0004/\u0005UB#B&\u0002Z\u0005m\u0003\"\u0002+\u0019\u0001\u0004q\u0003\"\u0002-\u0019\u0001\u0004)\u0014aB;oCB\u0004H.\u001f\u000b\u0005\u0003C\nI\u0007E\u0003%\u0003G\n9\'C\u0002\u0002f\u0015\u0012AaU8nKB)A%!\t/k!)a.\u0007a\u0001\u0017\u0002
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               org/sireum/U64$U64$Slang
   #17 = Class              #16           // org/sireum/U64$U64$Slang
   #18 = Utf8               org/sireum/U64
   #19 = Class              #18           // org/sireum/U64
   #20 = Utf8               U64$Slang
   #21 = Utf8               org/sireum/U64$U64$Slang$u64$
   #22 = Class              #21           // org/sireum/U64$U64$Slang$u64$
   #23 = Utf8               u64$
   #24 = Utf8               org/sireum/Z$$String$
   #25 = Class              #24           // org/sireum/Z$$String$
   #26 = Utf8               org/sireum/Z
   #27 = Class              #26           // org/sireum/Z
   #28 = Utf8               $String$
   #29 = Utf8               org/sireum/Z$BV$
   #30 = Class              #29           // org/sireum/Z$BV$
   #31 = Utf8               BV$
   #32 = Utf8               org/sireum/Z$BV$Int
   #33 = Class              #32           // org/sireum/Z$BV$Int
   #34 = Utf8               Int
   #35 = Utf8               org/sireum/Z$BV$Long
   #36 = Class              #35           // org/sireum/Z$BV$Long
   #37 = Utf8               Long
   #38 = Utf8               hashCode
   #39 = Utf8               I
   #40 = Utf8               $content
   #41 = Utf8               Lscala/collection/immutable/Seq;
   #42 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #43 = Utf8               _buriOpt
   #44 = Utf8               Z
   #45 = Utf8               _uriOpt
   #46 = Utf8               Ljava/lang/String;
   #47 = Utf8               _lineOffsets
   #48 = Utf8               Lorg/sireum/IS;
   #49 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;
   #50 = Utf8               bitmap$0
   #51 = Utf8               B
   #52 = Utf8               unapply
   #53 = Utf8               (Lorg/sireum/message/DocInfo;)Lscala/Some;
   #54 = Utf8               (Lorg/sireum/message/DocInfo;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;>;>;
   #55 = Utf8               o
   #56 = Utf8               org/sireum/message/DocInfo$
   #57 = Class              #56           // org/sireum/message/DocInfo$
   #58 = Utf8               MODULE$
   #59 = Utf8               Lorg/sireum/message/DocInfo$;
   #60 = NameAndType        #58:#59       // MODULE$:Lorg/sireum/message/DocInfo$;
   #61 = Fieldref           #57.#60       // org/sireum/message/DocInfo$.MODULE$:Lorg/sireum/message/DocInfo$;
   #62 = NameAndType        #52:#53       // unapply:(Lorg/sireum/message/DocInfo;)Lscala/Some;
   #63 = Methodref          #57.#62       // org/sireum/message/DocInfo$.unapply:(Lorg/sireum/message/DocInfo;)Lscala/Some;
   #64 = Utf8               Lorg/sireum/message/DocInfo;
   #65 = Utf8               create
   #66 = Utf8               (Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
   #67 = Utf8               (Lorg/sireum/Option<Lorg/sireum/String;>;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
   #68 = Utf8               uriOpt
   #69 = Utf8               input
   #70 = NameAndType        #65:#66       // create:(Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
   #71 = Methodref          #57.#70       // org/sireum/message/DocInfo$.create:(Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
   #72 = Utf8               Lorg/sireum/Option;
   #73 = Utf8               hash
   #74 = Utf8               ()Lorg/sireum/Z;
   #75 = Utf8               hash$
   #76 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #77 = NameAndType        #75:#76       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #78 = InterfaceMethodref #6.#77        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #79 = Utf8               this
   #80 = Utf8               $cannotMixImmutableAndMutable
   #81 = Utf8               ()Lscala/runtime/Nothing$;
   #82 = Utf8               org/sireum/Immutable
   #83 = Class              #82           // org/sireum/Immutable
   #84 = Utf8               $cannotMixImmutableAndMutable$
   #85 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #86 = NameAndType        #84:#85       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #87 = InterfaceMethodref #83.#86       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #88 = Utf8               $hasEquals
   #89 = Utf8               ()Z
   #90 = Utf8               $hasEquals$
   #91 = Utf8               (Lorg/sireum/Immutable;)Z
   #92 = NameAndType        #90:#91       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #93 = InterfaceMethodref #83.#92       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #94 = Utf8               $hasString
   #95 = Utf8               $hasString$
   #96 = NameAndType        #95:#91       // $hasString$:(Lorg/sireum/Immutable;)Z
   #97 = InterfaceMethodref #83.#96       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #98 = Utf8               $clone
   #99 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
  #100 = Utf8               org/sireum/$internal/ImmutableMarker
  #101 = Class              #100          // org/sireum/$internal/ImmutableMarker
  #102 = Utf8               $clone$
  #103 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #104 = NameAndType        #102:#103     // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #105 = InterfaceMethodref #101.#104     // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #106 = Utf8               ()Lorg/sireum/Option;
  #107 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/String;>;
  #108 = NameAndType        #43:#44       // _buriOpt:Z
  #109 = Fieldref           #2.#108       // org/sireum/message/DocInfo._buriOpt:Z
  #110 = Utf8               org/sireum/None$
  #111 = Class              #110          // org/sireum/None$
  #112 = Utf8               Lorg/sireum/None$;
  #113 = NameAndType        #58:#112      // MODULE$:Lorg/sireum/None$;
  #114 = Fieldref           #111.#113     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #115 = Utf8               apply
  #116 = Utf8               ()Lorg/sireum/None;
  #117 = NameAndType        #115:#116     // apply:()Lorg/sireum/None;
  #118 = Methodref          #111.#117     // org/sireum/None$.apply:()Lorg/sireum/None;
  #119 = Utf8               org/sireum/Some$
  #120 = Class              #119          // org/sireum/Some$
  #121 = Utf8               Lorg/sireum/Some$;
  #122 = NameAndType        #58:#121      // MODULE$:Lorg/sireum/Some$;
  #123 = Fieldref           #120.#122     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #124 = Utf8               org/sireum/String
  #125 = Class              #124          // org/sireum/String
  #126 = NameAndType        #45:#46       // _uriOpt:Ljava/lang/String;
  #127 = Fieldref           #2.#126       // org/sireum/message/DocInfo._uriOpt:Ljava/lang/String;
  #128 = Utf8               <init>
  #129 = Utf8               (Ljava/lang/String;)V
  #130 = NameAndType        #128:#129     // "<init>":(Ljava/lang/String;)V
  #131 = Methodref          #125.#130     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #132 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #133 = NameAndType        #115:#132     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #134 = Methodref          #120.#133     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #135 = Utf8               getUriOpt
  #136 = NameAndType        #68:#106      // uriOpt:()Lorg/sireum/Option;
  #137 = Methodref          #2.#136       // org/sireum/message/DocInfo.uriOpt:()Lorg/sireum/Option;
  #138 = Utf8               lineOffsets
  #139 = Utf8               ()Lorg/sireum/IS;
  #140 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;
  #141 = NameAndType        #47:#48       // _lineOffsets:Lorg/sireum/IS;
  #142 = Fieldref           #2.#141       // org/sireum/message/DocInfo._lineOffsets:Lorg/sireum/IS;
  #143 = Utf8               getLineOffsets
  #144 = Utf8               toString
  #145 = Utf8               ()Ljava/lang/String;
  #146 = NameAndType        #94:#89       // $hasString:()Z
  #147 = Methodref          #2.#146       // org/sireum/message/DocInfo.$hasString:()Z
  #148 = Utf8               string$
  #149 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #150 = NameAndType        #148:#149     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #151 = InterfaceMethodref #6.#150       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #152 = Utf8               java/lang/StringBuilder
  #153 = Class              #152          // java/lang/StringBuilder
  #154 = Utf8               ()V
  #155 = NameAndType        #128:#154     // "<init>":()V
  #156 = Methodref          #153.#155     // java/lang/StringBuilder."<init>":()V
  #157 = Utf8               DocInfo
  #158 = String             #157          // DocInfo
  #159 = Utf8               append
  #160 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #161 = NameAndType        #159:#160     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #162 = Methodref          #153.#161     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #163 = Utf8               (C)Ljava/lang/StringBuilder;
  #164 = NameAndType        #159:#163     // append:(C)Ljava/lang/StringBuilder;
  #165 = Methodref          #153.#164     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #166 = Utf8               org/sireum/String$
  #167 = Class              #166          // org/sireum/String$
  #168 = Utf8               Lorg/sireum/String$;
  #169 = NameAndType        #58:#168      // MODULE$:Lorg/sireum/String$;
  #170 = Fieldref           #167.#169     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #171 = Utf8               escape
  #172 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #173 = NameAndType        #171:#172     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #174 = Methodref          #167.#173     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #175 = Utf8               ,
  #176 = String             #175          // ,
  #177 = NameAndType        #138:#139     // lineOffsets:()Lorg/sireum/IS;
  #178 = Methodref          #2.#177       // org/sireum/message/DocInfo.lineOffsets:()Lorg/sireum/IS;
  #179 = NameAndType        #144:#145     // toString:()Ljava/lang/String;
  #180 = Methodref          #153.#179     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #181 = Utf8               sb
  #182 = Utf8               Ljava/lang/StringBuilder;
  #183 = Utf8               java/lang/String
  #184 = Class              #183          // java/lang/String
  #185 = Utf8               string
  #186 = Methodref          #2.#179       // org/sireum/message/DocInfo.toString:()Ljava/lang/String;
  #187 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #188 = NameAndType        #115:#187     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #189 = Methodref          #167.#188     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #190 = Utf8               hashCode$lzycompute
  #191 = Utf8               ()I
  #192 = NameAndType        #50:#51       // bitmap$0:B
  #193 = Fieldref           #2.#192       // org/sireum/message/DocInfo.bitmap$0:B
  #194 = NameAndType        #88:#89       // $hasEquals:()Z
  #195 = Methodref          #2.#194       // org/sireum/message/DocInfo.$hasEquals:()Z
  #196 = NameAndType        #38:#191      // hashCode:()I
  #197 = Methodref          #4.#196       // java/lang/Object.hashCode:()I
  #198 = Utf8               scala/package$
  #199 = Class              #198          // scala/package$
  #200 = Utf8               Lscala/package$;
  #201 = NameAndType        #58:#200      // MODULE$:Lscala/package$;
  #202 = Fieldref           #199.#201     // scala/package$.MODULE$:Lscala/package$;
  #203 = Utf8               Seq
  #204 = Utf8               ()Lscala/collection/immutable/Seq$;
  #205 = NameAndType        #203:#204     // Seq:()Lscala/collection/immutable/Seq$;
  #206 = Methodref          #199.#205     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #207 = Utf8               scala/runtime/ScalaRunTime$
  #208 = Class              #207          // scala/runtime/ScalaRunTime$
  #209 = Utf8               Lscala/runtime/ScalaRunTime$;
  #210 = NameAndType        #58:#209      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #211 = Fieldref           #208.#210     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #212 = Utf8               getClass
  #213 = Utf8               ()Ljava/lang/Class;
  #214 = NameAndType        #212:#213     // getClass:()Ljava/lang/Class;
  #215 = Methodref          #2.#214       // org/sireum/message/DocInfo.getClass:()Ljava/lang/Class;
  #216 = Utf8               java/lang/Class
  #217 = Class              #216          // java/lang/Class
  #218 = Utf8               getName
  #219 = NameAndType        #218:#145     // getName:()Ljava/lang/String;
  #220 = Methodref          #217.#219     // java/lang/Class.getName:()Ljava/lang/String;
  #221 = Utf8               wrapRefArray
  #222 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #223 = NameAndType        #221:#222     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #224 = Methodref          #208.#223     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #225 = Utf8               scala/collection/immutable/Seq$
  #226 = Class              #225          // scala/collection/immutable/Seq$
  #227 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #228 = NameAndType        #115:#227     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #229 = Methodref          #226.#228     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #230 = Utf8               scala/collection/Seq
  #231 = Class              #230          // scala/collection/Seq
  #232 = InterfaceMethodref #231.#196     // scala/collection/Seq.hashCode:()I
  #233 = NameAndType        #38:#39       // hashCode:I
  #234 = Fieldref           #2.#233       // org/sireum/message/DocInfo.hashCode:I
  #235 = Utf8               java/lang/Throwable
  #236 = Class              #235          // java/lang/Throwable
  #237 = NameAndType        #190:#191     // hashCode$lzycompute:()I
  #238 = Methodref          #2.#237       // org/sireum/message/DocInfo.hashCode$lzycompute:()I
  #239 = Utf8               equals
  #240 = Utf8               (Ljava/lang/Object;)Z
  #241 = NameAndType        #239:#240     // equals:(Ljava/lang/Object;)Z
  #242 = Methodref          #4.#241       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #243 = Methodref          #2.#196       // org/sireum/message/DocInfo.hashCode:()I
  #244 = Utf8               Ljava/lang/Object;
  #245 = Utf8               org/sireum/Option
  #246 = Class              #245          // org/sireum/Option
  #247 = Utf8               org/sireum/IS
  #248 = Class              #247          // org/sireum/IS
  #249 = Utf8               (Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/message/DocInfo;
  #250 = Utf8               (Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;)Lorg/sireum/message/DocInfo;
  #251 = Utf8               (Lorg/sireum/Option;Lorg/sireum/IS;)V
  #252 = NameAndType        #128:#251     // "<init>":(Lorg/sireum/Option;Lorg/sireum/IS;)V
  #253 = Methodref          #2.#252       // org/sireum/message/DocInfo."<init>":(Lorg/sireum/Option;Lorg/sireum/IS;)V
  #254 = Utf8               apply$default$1
  #255 = Utf8               apply$default$2
  #256 = Utf8               $content$lzycompute
  #257 = Utf8               ()Lscala/collection/immutable/Seq;
  #258 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #259 = Utf8               scala/Tuple2
  #260 = Class              #259          // scala/Tuple2
  #261 = Utf8               type
  #262 = String             #261          // type
  #263 = Utf8               List
  #264 = Utf8               ()Lscala/collection/immutable/List$;
  #265 = NameAndType        #263:#264     // List:()Lscala/collection/immutable/List$;
  #266 = Methodref          #199.#265     // scala/package$.List:()Lscala/collection/immutable/List$;
  #267 = Utf8               org
  #268 = String             #267          // org
  #269 = Utf8               sireum
  #270 = String             #269          // sireum
  #271 = Utf8               message
  #272 = String             #271          // message
  #273 = Utf8               [Ljava/lang/Object;
  #274 = Class              #273          // "[Ljava/lang/Object;"
  #275 = Utf8               scala/collection/immutable/List$
  #276 = Class              #275          // scala/collection/immutable/List$
  #277 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #278 = NameAndType        #115:#277     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #279 = Methodref          #276.#278     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #280 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #281 = NameAndType        #128:#280     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #282 = Methodref          #260.#281     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #283 = String             #68           // uriOpt
  #284 = String             #138          // lineOffsets
  #285 = Utf8               scala/collection/immutable/Seq
  #286 = Class              #285          // scala/collection/immutable/Seq
  #287 = NameAndType        #40:#41       // $content:Lscala/collection/immutable/Seq;
  #288 = Fieldref           #2.#287       // org/sireum/message/DocInfo.$content:Lscala/collection/immutable/Seq;
  #289 = NameAndType        #256:#257     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #290 = Methodref          #2.#289       // org/sireum/message/DocInfo.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #291 = Utf8               lineColumn
  #292 = Utf8               (J)J
  #293 = Utf8               offsetLength
  #294 = Utf8               org/sireum/conversions/U64$
  #295 = Class              #294          // org/sireum/conversions/U64$
  #296 = Utf8               Lorg/sireum/conversions/U64$;
  #297 = NameAndType        #58:#296      // MODULE$:Lorg/sireum/conversions/U64$;
  #298 = Fieldref           #295.#297     // org/sireum/conversions/U64$.MODULE$:Lorg/sireum/conversions/U64$;
  #299 = Utf8               (J)V
  #300 = NameAndType        #128:#299     // "<init>":(J)V
  #301 = Methodref          #19.#300      // org/sireum/U64."<init>":(J)V
  #302 = Utf8               org/sireum/U64$
  #303 = Class              #302          // org/sireum/U64$
  #304 = Utf8               Lorg/sireum/U64$;
  #305 = NameAndType        #58:#304      // MODULE$:Lorg/sireum/U64$;
  #306 = Fieldref           #303.#305     // org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
  #307 = Utf8               scala/StringContext
  #308 = Class              #307          // scala/StringContext
  #309 = Utf8               32
  #310 = String             #309          // 32
  #311 = Utf8               (Lscala/collection/immutable/Seq;)V
  #312 = NameAndType        #128:#311     // "<init>":(Lscala/collection/immutable/Seq;)V
  #313 = Methodref          #308.#312     // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
  #314 = Utf8               (Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #315 = NameAndType        #20:#314      // U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #316 = Methodref          #303.#315     // org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #317 = Utf8               u64
  #318 = Utf8               ()Lorg/sireum/U64$U64$Slang$u64$;
  #319 = NameAndType        #317:#318     // u64:()Lorg/sireum/U64$U64$Slang$u64$;
  #320 = Methodref          #17.#319      // org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
  #321 = Utf8               scala/collection/immutable/Nil$
  #322 = Class              #321          // scala/collection/immutable/Nil$
  #323 = Utf8               Lscala/collection/immutable/Nil$;
  #324 = NameAndType        #58:#323      // MODULE$:Lscala/collection/immutable/Nil$;
  #325 = Fieldref           #322.#324     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #326 = Utf8               (Lscala/collection/immutable/Seq;)J
  #327 = NameAndType        #115:#326     // apply:(Lscala/collection/immutable/Seq;)J
  #328 = Methodref          #22.#327      // org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
  #329 = Utf8               $greater$greater$greater
  #330 = Utf8               (Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #331 = NameAndType        #329:#330     // $greater$greater$greater:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #332 = Methodref          #19.#331      // org/sireum/U64.$greater$greater$greater:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #333 = Utf8               value
  #334 = Utf8               ()J
  #335 = NameAndType        #333:#334     // value:()J
  #336 = Methodref          #19.#335      // org/sireum/U64.value:()J
  #337 = Utf8               toU32
  #338 = Utf8               (J)I
  #339 = NameAndType        #337:#338     // toU32:(J)I
  #340 = Methodref          #295.#339     // org/sireum/conversions/U64$.toU32:(J)I
  #341 = Utf8               size
  #342 = NameAndType        #341:#74      // size:()Lorg/sireum/Z;
  #343 = Methodref          #248.#342     // org/sireum/IS.size:()Lorg/sireum/Z;
  #344 = Utf8               org/sireum/Z$
  #345 = Class              #344          // org/sireum/Z$
  #346 = Utf8               Lorg/sireum/Z$;
  #347 = NameAndType        #58:#346      // MODULE$:Lorg/sireum/Z$;
  #348 = Fieldref           #345.#347     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #349 = Utf8               (I)Lorg/sireum/Z;
  #350 = NameAndType        #115:#349     // apply:(I)Lorg/sireum/Z;
  #351 = Methodref          #345.#350     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #352 = Utf8               $div
  #353 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #354 = NameAndType        #352:#353     // $div:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #355 = InterfaceMethodref #27.#354      // org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #356 = Utf8               scala/runtime/ObjectRef
  #357 = Class              #356          // scala/runtime/ObjectRef
  #358 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #359 = NameAndType        #65:#358      // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #360 = Methodref          #357.#359     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #361 = Utf8               $minus
  #362 = NameAndType        #361:#353     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #363 = InterfaceMethodref #27.#362      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #364 = Utf8               Lorg/sireum/Z$$String$;
  #365 = NameAndType        #58:#364      // MODULE$:Lorg/sireum/Z$$String$;
  #366 = Fieldref           #25.#365      // org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
  #367 = Utf8               0
  #368 = String             #367          // 0
  #369 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #370 = NameAndType        #115:#369     // apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #371 = Methodref          #25.#370      // org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #372 = Utf8               org/sireum/B$
  #373 = Class              #372          // org/sireum/B$
  #374 = Utf8               Lorg/sireum/B$;
  #375 = NameAndType        #58:#374      // MODULE$:Lorg/sireum/B$;
  #376 = Fieldref           #373.#375     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #377 = Utf8               elem
  #378 = NameAndType        #377:#244     // elem:Ljava/lang/Object;
  #379 = Fieldref           #357.#378     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #380 = Utf8               $less
  #381 = Utf8               (Lorg/sireum/Z;)Z
  #382 = NameAndType        #380:#381     // $less:(Lorg/sireum/Z;)Z
  #383 = InterfaceMethodref #27.#382      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #384 = Utf8               ()Ljava/lang/Object;
  #385 = MethodType         #384          //  ()Ljava/lang/Object;
  #386 = Utf8               $anonfun$lineColumn$1$adapted
  #387 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
  #388 = NameAndType        #386:#387     // $anonfun$lineColumn$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
  #389 = Methodref          #2.#388       // org/sireum/message/DocInfo.$anonfun$lineColumn$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
  #390 = MethodHandle       6:#389        // REF_invokeStatic org/sireum/message/DocInfo.$anonfun$lineColumn$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
  #391 = Integer            1
  #392 = Utf8               java/lang/invoke/LambdaMetafactory
  #393 = Class              #392          // java/lang/invoke/LambdaMetafactory
  #394 = Utf8               altMetafactory
  #395 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #396 = NameAndType        #394:#395     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #397 = Methodref          #393.#396     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #398 = MethodHandle       6:#397        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #399 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function0;
  #400 = NameAndType        #115:#399     // apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function0;
  #401 = InvokeDynamic      #0:#400       // #0:apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function0;
  #402 = Utf8               $amp$amp$extension
  #403 = Utf8               (ZLscala/Function0;)Z
  #404 = NameAndType        #402:#403     // $amp$amp$extension:(ZLscala/Function0;)Z
  #405 = Methodref          #373.#404     // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #406 = Utf8               $4B
  #407 = Utf8               (Z)Z
  #408 = NameAndType        #406:#407     // $4B:(Z)Z
  #409 = Methodref          #373.#408     // org/sireum/B$.$4B:(Z)Z
  #410 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #411 = NameAndType        #115:#410     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #412 = Methodref          #248.#411     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #413 = Utf8               org/sireum/U32
  #414 = Class              #413          // org/sireum/U32
  #415 = NameAndType        #333:#191     // value:()I
  #416 = Methodref          #414.#415     // org/sireum/U32.value:()I
  #417 = Utf8               (I)V
  #418 = NameAndType        #128:#417     // "<init>":(I)V
  #419 = Methodref          #414.#418     // org/sireum/U32."<init>":(I)V
  #420 = Utf8               (Lorg/sireum/Z$BV$Int;)Z
  #421 = NameAndType        #380:#420     // $less:(Lorg/sireum/Z$BV$Int;)Z
  #422 = Methodref          #414.#421     // org/sireum/U32.$less:(Lorg/sireum/Z$BV$Int;)Z
  #423 = Utf8               $less$eq
  #424 = NameAndType        #423:#420     // $less$eq:(Lorg/sireum/Z$BV$Int;)Z
  #425 = InterfaceMethodref #33.#424      // org/sireum/Z$BV$Int.$less$eq:(Lorg/sireum/Z$BV$Int;)Z
  #426 = Utf8               computeLC$1
  #427 = Utf8               (Lorg/sireum/Z;I)J
  #428 = NameAndType        #426:#427     // computeLC$1:(Lorg/sireum/Z;I)J
  #429 = Methodref          #2.#428       // org/sireum/message/DocInfo.computeLC$1:(Lorg/sireum/Z;I)J
  #430 = Utf8               $plus
  #431 = NameAndType        #430:#353     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #432 = InterfaceMethodref #27.#431      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #433 = NameAndType        #423:#381     // $less$eq:(Lorg/sireum/Z;)Z
  #434 = InterfaceMethodref #27.#433      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #435 = Utf8               lineOffsetsI
  #436 = Utf8               offsetLine
  #437 = Utf8               Lorg/sireum/Z;
  #438 = Utf8               i
  #439 = Utf8               Lscala/runtime/ObjectRef;
  #440 = Utf8               max
  #441 = Utf8               min
  #442 = Utf8               J
  #443 = NameAndType        #98:#99       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #444 = Methodref          #2.#443       // org/sireum/message/DocInfo.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #445 = Utf8               $anonfun$_uriOpt$2
  #446 = NameAndType        #333:#145     // value:()Ljava/lang/String;
  #447 = Methodref          #125.#446     // org/sireum/String.value:()Ljava/lang/String;
  #448 = Utf8               offsetLine$1
  #449 = Utf8               org/sireum/conversions/Z$
  #450 = Class              #449          // org/sireum/conversions/Z$
  #451 = Utf8               Lorg/sireum/conversions/Z$;
  #452 = NameAndType        #58:#451      // MODULE$:Lorg/sireum/conversions/Z$;
  #453 = Fieldref           #450.#452     // org/sireum/conversions/Z$.MODULE$:Lorg/sireum/conversions/Z$;
  #454 = Utf8               toU64
  #455 = Utf8               (Lorg/sireum/Z;)J
  #456 = NameAndType        #454:#455     // toU64:(Lorg/sireum/Z;)J
  #457 = Methodref          #450.#456     // org/sireum/conversions/Z$.toU64:(Lorg/sireum/Z;)J
  #458 = Utf8               $less$less
  #459 = NameAndType        #458:#330     // $less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #460 = Methodref          #19.#459      // org/sireum/U64.$less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #461 = Utf8               org/sireum/conversions/U32$
  #462 = Class              #461          // org/sireum/conversions/U32$
  #463 = Utf8               Lorg/sireum/conversions/U32$;
  #464 = NameAndType        #58:#463      // MODULE$:Lorg/sireum/conversions/U32$;
  #465 = Fieldref           #462.#464     // org/sireum/conversions/U32$.MODULE$:Lorg/sireum/conversions/U32$;
  #466 = Utf8               (Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #467 = NameAndType        #361:#466     // $minus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #468 = Methodref          #414.#467     // org/sireum/U32.$minus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
  #469 = Utf8               (I)J
  #470 = NameAndType        #454:#469     // toU64:(I)J
  #471 = Methodref          #462.#470     // org/sireum/conversions/U32$.toU64:(I)J
  #472 = Utf8               1
  #473 = String             #472          // 1
  #474 = NameAndType        #430:#330     // $plus:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #475 = Methodref          #19.#474      // org/sireum/U64.$plus:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #476 = Utf8               $bar
  #477 = NameAndType        #476:#330     // $bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #478 = Methodref          #19.#477      // org/sireum/U64.$bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #479 = Utf8               line
  #480 = Utf8               column
  #481 = Utf8               $anonfun$lineColumn$1
  #482 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
  #483 = Utf8               i$1
  #484 = Utf8               max$1
  #485 = Utf8               (Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;)V
  #486 = Utf8               __uriOpt
  #487 = Utf8               __lineOffsets
  #488 = Methodref          #4.#155       // java/lang/Object."<init>":()V
  #489 = Utf8               $init$
  #490 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #491 = NameAndType        #489:#490     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #492 = InterfaceMethodref #101.#491     // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #493 = Utf8               (Lorg/sireum/Immutable;)V
  #494 = NameAndType        #489:#493     // $init$:(Lorg/sireum/Immutable;)V
  #495 = InterfaceMethodref #83.#494      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #496 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #497 = NameAndType        #489:#496     // $init$:(Lorg/sireum/DatatypeSig;)V
  #498 = InterfaceMethodref #6.#497       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #499 = Utf8               isEmpty
  #500 = NameAndType        #499:#89      // isEmpty:()Z
  #501 = InterfaceMethodref #246.#500     // org/sireum/Option.isEmpty:()Z
  #502 = Utf8               $anonfun$_uriOpt$2$adapted
  #503 = NameAndType        #502:#384     // $anonfun$_uriOpt$2$adapted:()Ljava/lang/Object;
  #504 = Methodref          #2.#503       // org/sireum/message/DocInfo.$anonfun$_uriOpt$2$adapted:()Ljava/lang/Object;
  #505 = MethodHandle       6:#504        // REF_invokeStatic org/sireum/message/DocInfo.$anonfun$_uriOpt$2$adapted:()Ljava/lang/Object;
  #506 = Utf8               ()Lscala/Function0;
  #507 = NameAndType        #115:#506     // apply:()Lscala/Function0;
  #508 = InvokeDynamic      #1:#507       // #1:apply:()Lscala/Function0;
  #509 = Utf8               getOrElse
  #510 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #511 = NameAndType        #509:#510     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #512 = InterfaceMethodref #246.#511     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #513 = Utf8               org/sireum/B
  #514 = Class              #513          // org/sireum/B
  #515 = NameAndType        #481:#482     // $anonfun$lineColumn$1:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
  #516 = Methodref          #2.#515       // org/sireum/message/DocInfo.$anonfun$lineColumn$1:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
  #517 = Utf8               (Z)V
  #518 = NameAndType        #128:#517     // "<init>":(Z)V
  #519 = Methodref          #514.#518     // org/sireum/B."<init>":(Z)V
  #520 = NameAndType        #445:#145     // $anonfun$_uriOpt$2:()Ljava/lang/String;
  #521 = Methodref          #2.#520       // org/sireum/message/DocInfo.$anonfun$_uriOpt$2:()Ljava/lang/String;
  #522 = Utf8               $deserializeLambda$
  #523 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #524 = Utf8               scala/runtime/LambdaDeserialize
  #525 = Class              #524          // scala/runtime/LambdaDeserialize
  #526 = Utf8               bootstrap
  #527 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #528 = NameAndType        #526:#527     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #529 = Methodref          #525.#528     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #530 = MethodHandle       6:#529        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #531 = Utf8               lambdaDeserialize
  #532 = NameAndType        #531:#523     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #533 = InvokeDynamic      #2:#532       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #534 = Utf8               Signature
  #535 = Utf8               Code
  #536 = Utf8               LocalVariableTable
  #537 = Utf8               MethodParameters
  #538 = Utf8               LineNumberTable
  #539 = Utf8               StackMapTable
  #540 = Utf8               InnerClasses
  #541 = Utf8               SourceFile
  #542 = Utf8               RuntimeVisibleAnnotations
  #543 = Utf8               BootstrapMethods
  #544 = Utf8               ScalaInlineInfo
  #545 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #42                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final boolean _buriOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _uriOpt;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.IS<org.sireum.Z, org.sireum.U32> _lineOffsets;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #49                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static scala.Some<scala.Tuple2<org.sireum.Option<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.U32>>> unapply(org.sireum.message.DocInfo);
    descriptor: (Lorg/sireum/message/DocInfo;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #61                 // Field org/sireum/message/DocInfo$.MODULE$:Lorg/sireum/message/DocInfo$;
         3: aload_0
         4: invokevirtual #63                 // Method org/sireum/message/DocInfo$.unapply:(Lorg/sireum/message/DocInfo;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/message/DocInfo;
    Signature: #54                          // (Lorg/sireum/message/DocInfo;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static org.sireum.message.DocInfo create(org.sireum.Option<org.sireum.String>, java.lang.String);
    descriptor: (Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #61                 // Field org/sireum/message/DocInfo$.MODULE$:Lorg/sireum/message/DocInfo$;
         3: aload_0
         4: aload_1
         5: invokevirtual #71                 // Method org/sireum/message/DocInfo$.create:(Lorg/sireum/Option;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 uriOpt   Lorg/sireum/Option;
            0       9     1 input   Ljava/lang/String;
    Signature: #67                          // (Lorg/sireum/Option<Lorg/sireum/String;>;Ljava/lang/String;)Lorg/sireum/message/DocInfo;
    MethodParameters:
      Name                           Flags
      uriOpt                         final
      input                          final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #78                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #93                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #97                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #105                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;

  public org.sireum.Option<org.sireum.String> uriOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #109                // Field _buriOpt:Z
         4: ifeq          16
         7: getstatic     #114                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #118                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #123                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #125                // class org/sireum/String
        22: dup
        23: aload_0
        24: getfield      #127                // Field _uriOpt:Ljava/lang/String;
        27: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        30: invokevirtual #134                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/message/DocInfo;
    Signature: #107                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.Option<org.sireum.String> getUriOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #137                // Method uriOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;
    Signature: #107                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.U32> lineOffsets();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #142                // Field _lineOffsets:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;
    Signature: #140                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.U32> getLineOffsets();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #142                // Field _lineOffsets:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;
    Signature: #140                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #147                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #151                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          84
        14: new           #153                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #156                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #158                // String DocInfo
        25: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #165                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #170                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #137                // Method uriOpt:()Lorg/sireum/Option;
        44: invokevirtual #174                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #176                // String ,
        54: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #170                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: aload_0
        63: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
        66: invokevirtual #174                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        69: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: pop
        73: aload_1
        74: bipush        41
        76: invokevirtual #165                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: invokevirtual #180                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        84: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 69
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      62     1    sb   Ljava/lang/StringBuilder;
            0      85     0  this   Lorg/sireum/message/DocInfo;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #147                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #151                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #170                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #186                // Method toString:()Ljava/lang/String;
        21: invokevirtual #189                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/message/DocInfo;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #193                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     95
        15: aload_0
        16: aload_0
        17: invokevirtual #195                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #197                // Method java/lang/Object.hashCode:()I
        27: goto          81
        30: getstatic     #202                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #206                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_3
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #215                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #220                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #137                // Method uriOpt:()Lorg/sireum/Option;
        59: aastore
        60: dup
        61: iconst_2
        62: aload_0
        63: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
        66: aastore
        67: invokevirtual #224                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        70: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        73: checkcast     #231                // class scala/collection/Seq
        76: invokeinterface #232,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        81: putfield      #234                // Field hashCode:I
        84: aload_0
        85: aload_0
        86: getfield      #193                // Field bitmap$0:B
        89: iconst_1
        90: ior
        91: i2b
        92: putfield      #193                // Field bitmap$0:B
        95: aload_1
        96: monitorexit
        97: goto          103
       100: aload_1
       101: monitorexit
       102: athrow
       103: aload_0
       104: getfield      #234                // Field hashCode:I
       107: ireturn
      Exception table:
         from    to  target type
             4    95   100   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/message/DocInfo, class org/sireum/message/DocInfo ]
          stack = [ class org/sireum/message/DocInfo ]
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/sireum/message/DocInfo, class org/sireum/message/DocInfo ]
          stack = [ class org/sireum/message/DocInfo, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lorg/sireum/message/DocInfo;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #193                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #238                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #234                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/message/DocInfo;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: invokevirtual #195                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #242                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          137
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          137
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/message/DocInfo
        30: ifeq          128
        33: aload_3
        34: checkcast     #2                  // class org/sireum/message/DocInfo
        37: astore        4
        39: aload_0
        40: invokevirtual #243                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #243                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          124
        55: aload_0
        56: invokevirtual #137                // Method uriOpt:()Lorg/sireum/Option;
        59: aload         4
        61: invokevirtual #137                // Method uriOpt:()Lorg/sireum/Option;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          123
        79: aload         5
        81: invokevirtual #242                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          123
        87: aload_0
        88: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
        91: aload         4
        93: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          123
       111: aload         6
       113: invokevirtual #242                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          123
       119: iconst_1
       120: goto          124
       123: iconst_0
       124: istore_2
       125: goto          136
       128: goto          131
       131: iconst_0
       132: istore_2
       133: goto          136
       136: iload_2
       137: ireturn
      StackMapTable: number_of_entries = 13
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/message/DocInfo ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/message/DocInfo, class java/lang/Object, top, class java/lang/Object, class org/sireum/message/DocInfo, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/message/DocInfo, class java/lang/Object, top, class java/lang/Object, class org/sireum/message/DocInfo, class org/sireum/Option, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/message/DocInfo, class java/lang/Object, top, class java/lang/Object, class org/sireum/message/DocInfo ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/message/DocInfo, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/message/DocInfo, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     138     0  this   Lorg/sireum/message/DocInfo;
            0     138     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.message.DocInfo apply(org.sireum.Option<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.U32>);
    descriptor: (Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/message/DocInfo;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/sireum/message/DocInfo
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #253                // Method "<init>":(Lorg/sireum/Option;Lorg/sireum/IS;)V
         9: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/message/DocInfo;
            0      10     1 uriOpt   Lorg/sireum/Option;
            0      10     2 lineOffsets   Lorg/sireum/IS;
    Signature: #250                         // (Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;)Lorg/sireum/message/DocInfo;
    MethodParameters:
      Name                           Flags
      uriOpt                         final
      lineOffsets                    final

  public org.sireum.Option<org.sireum.String> apply$default$1();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #137                // Method uriOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;
    Signature: #107                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.U32> apply$default$2();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;
    Signature: #140                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #193                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     147
        15: aload_0
        16: getstatic     #202                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #206                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_3
        26: anewarray     #260                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #260                // class scala/Tuple2
        34: dup
        35: ldc_w         #262                // String type
        38: getstatic     #202                // Field scala/package$.MODULE$:Lscala/package$;
        41: invokevirtual #266                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        44: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        47: iconst_4
        48: anewarray     #184                // class java/lang/String
        51: dup
        52: iconst_0
        53: ldc_w         #268                // String org
        56: aastore
        57: dup
        58: iconst_1
        59: ldc_w         #270                // String sireum
        62: aastore
        63: dup
        64: iconst_2
        65: ldc_w         #272                // String message
        68: aastore
        69: dup
        70: iconst_3
        71: ldc           #158                // String DocInfo
        73: aastore
        74: checkcast     #274                // class "[Ljava/lang/Object;"
        77: invokevirtual #224                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        80: invokevirtual #279                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        83: invokespecial #282                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        86: aastore
        87: dup
        88: iconst_1
        89: new           #260                // class scala/Tuple2
        92: dup
        93: ldc_w         #283                // String uriOpt
        96: aload_0
        97: invokevirtual #137                // Method uriOpt:()Lorg/sireum/Option;
       100: invokespecial #282                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       103: aastore
       104: dup
       105: iconst_2
       106: new           #260                // class scala/Tuple2
       109: dup
       110: ldc_w         #284                // String lineOffsets
       113: aload_0
       114: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
       117: invokespecial #282                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       120: aastore
       121: checkcast     #274                // class "[Ljava/lang/Object;"
       124: invokevirtual #224                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       127: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       130: checkcast     #286                // class scala/collection/immutable/Seq
       133: putfield      #288                // Field $content:Lscala/collection/immutable/Seq;
       136: aload_0
       137: aload_0
       138: getfield      #193                // Field bitmap$0:B
       141: iconst_2
       142: ior
       143: i2b
       144: putfield      #193                // Field bitmap$0:B
       147: aload_1
       148: monitorexit
       149: goto          155
       152: aload_1
       153: monitorexit
       154: athrow
       155: aload_0
       156: getfield      #288                // Field $content:Lscala/collection/immutable/Seq;
       159: areturn
      Exception table:
         from    to  target type
             4   147   152   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 147
          locals = [ class org/sireum/message/DocInfo ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     160     0  this   Lorg/sireum/message/DocInfo;
    Signature: #258                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #193                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #290                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #288                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/message/DocInfo;
    Signature: #258                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public long lineColumn(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=9, args_size=2
         0: getstatic     #298                // Field org/sireum/conversions/U64$.MODULE$:Lorg/sireum/conversions/U64$;
         3: new           #19                 // class org/sireum/U64
         6: dup
         7: lload_1
         8: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
        11: new           #19                 // class org/sireum/U64
        14: dup
        15: getstatic     #306                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        18: new           #308                // class scala/StringContext
        21: dup
        22: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_1
        26: anewarray     #184                // class java/lang/String
        29: dup
        30: iconst_0
        31: ldc_w         #310                // String 32
        34: aastore
        35: checkcast     #274                // class "[Ljava/lang/Object;"
        38: invokevirtual #224                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        41: invokespecial #313                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        44: invokevirtual #316                // Method org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
        47: invokevirtual #320                // Method org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
        50: getstatic     #325                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        53: invokevirtual #328                // Method org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
        56: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
        59: invokevirtual #332                // Method org/sireum/U64.$greater$greater$greater:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
        62: checkcast     #19                 // class org/sireum/U64
        65: invokevirtual #336                // Method org/sireum/U64.value:()J
        68: invokevirtual #340                // Method org/sireum/conversions/U64$.toU32:(J)I
        71: istore_3
        72: aload_0
        73: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
        76: invokevirtual #343                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        79: astore        4
        81: aload         4
        83: getstatic     #348                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        86: iconst_2
        87: invokevirtual #351                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        90: invokeinterface #355,  2          // InterfaceMethod org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
        95: invokestatic  #360                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        98: astore        5
       100: aload         4
       102: getstatic     #348                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       105: iconst_1
       106: invokevirtual #351                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       109: invokeinterface #363,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       114: invokestatic  #360                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       117: astore        6
       119: getstatic     #366                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
       122: ldc_w         #368                // String 0
       125: invokevirtual #371                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
       128: astore        7
       130: getstatic     #376                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       133: getstatic     #376                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       136: aload         7
       138: aload         5
       140: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       143: checkcast     #27                 // class org/sireum/Z
       146: invokeinterface #383,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       151: aload         5
       153: aload         6
       155: invokedynamic #401,  0            // InvokeDynamic #0:apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function0;
       160: invokevirtual #405                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       163: invokevirtual #409                // Method org/sireum/B$.$4B:(Z)Z
       166: ifeq          444
       169: aload_0
       170: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
       173: aload         5
       175: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       178: checkcast     #27                 // class org/sireum/Z
       181: invokevirtual #412                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       184: checkcast     #414                // class org/sireum/U32
       187: invokevirtual #416                // Method org/sireum/U32.value:()I
       190: istore        8
       192: getstatic     #376                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       195: new           #414                // class org/sireum/U32
       198: dup
       199: iload_3
       200: invokespecial #419                // Method org/sireum/U32."<init>":(I)V
       203: new           #414                // class org/sireum/U32
       206: dup
       207: iload         8
       209: invokespecial #419                // Method org/sireum/U32."<init>":(I)V
       212: invokevirtual #422                // Method org/sireum/U32.$less:(Lorg/sireum/Z$BV$Int;)Z
       215: invokevirtual #409                // Method org/sireum/B$.$4B:(Z)Z
       218: ifeq          360
       221: getstatic     #376                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       224: aload_0
       225: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
       228: aload         5
       230: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       233: checkcast     #27                 // class org/sireum/Z
       236: getstatic     #348                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       239: iconst_1
       240: invokevirtual #351                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       243: invokeinterface #363,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       248: invokevirtual #412                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       251: checkcast     #33                 // class org/sireum/Z$BV$Int
       254: new           #414                // class org/sireum/U32
       257: dup
       258: iload_3
       259: invokespecial #419                // Method org/sireum/U32."<init>":(I)V
       262: invokeinterface #425,  2          // InterfaceMethod org/sireum/Z$BV$Int.$less$eq:(Lorg/sireum/Z$BV$Int;)Z
       267: invokevirtual #409                // Method org/sireum/B$.$4B:(Z)Z
       270: ifeq          299
       273: aload_0
       274: aload         5
       276: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       279: checkcast     #27                 // class org/sireum/Z
       282: getstatic     #348                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       285: iconst_1
       286: invokevirtual #351                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       289: invokeinterface #363,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       294: iload_3
       295: invokespecial #429                // Method computeLC$1:(Lorg/sireum/Z;I)J
       298: lreturn
       299: aload         6
       301: aload         5
       303: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       306: checkcast     #27                 // class org/sireum/Z
       309: putfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       312: aload         5
       314: aload         5
       316: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       319: checkcast     #27                 // class org/sireum/Z
       322: aload         5
       324: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       327: checkcast     #27                 // class org/sireum/Z
       330: aload         7
       332: invokeinterface #363,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       337: getstatic     #348                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       340: iconst_2
       341: invokevirtual #351                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       344: invokeinterface #355,  2          // InterfaceMethod org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
       349: invokeinterface #363,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       354: putfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       357: goto          441
       360: iload_3
       361: iload         8
       363: if_icmpne     380
       366: aload_0
       367: aload         5
       369: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       372: checkcast     #27                 // class org/sireum/Z
       375: iload_3
       376: invokespecial #429                // Method computeLC$1:(Lorg/sireum/Z;I)J
       379: lreturn
       380: aload         5
       382: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       385: checkcast     #27                 // class org/sireum/Z
       388: astore        7
       390: aload         5
       392: aload         5
       394: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       397: checkcast     #27                 // class org/sireum/Z
       400: aload         6
       402: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       405: checkcast     #27                 // class org/sireum/Z
       408: aload         5
       410: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       413: checkcast     #27                 // class org/sireum/Z
       416: invokeinterface #363,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       421: getstatic     #348                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       424: iconst_2
       425: invokevirtual #351                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       428: invokeinterface #355,  2          // InterfaceMethod org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
       433: invokeinterface #432,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       438: putfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       441: goto          130
       444: getstatic     #376                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       447: aload         5
       449: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       452: checkcast     #27                 // class org/sireum/Z
       455: aload         7
       457: invokeinterface #434,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
       462: invokevirtual #409                // Method org/sireum/B$.$4B:(Z)Z
       465: ifeq          478
       468: aload_0
       469: aload         7
       471: iload_3
       472: invokespecial #429                // Method computeLC$1:(Lorg/sireum/Z;I)J
       475: goto          491
       478: aload_0
       479: aload         6
       481: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       484: checkcast     #27                 // class org/sireum/Z
       487: iload_3
       488: invokespecial #429                // Method computeLC$1:(Lorg/sireum/Z;I)J
       491: lreturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 130
          locals = [ class org/sireum/message/DocInfo, long, int, class org/sireum/Z, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class org/sireum/Z ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 168
          locals = [ int ]
        frame_type = 60 /* same */
        frame_type = 19 /* same */
        frame_type = 60 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 33 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ long ]
      LineNumberTable:
        line 218: 0
        line 224: 72
        line 225: 81
        line 226: 100
        line 227: 119
        line 228: 130
        line 229: 169
        line 230: 192
        line 231: 221
        line 232: 273
        line 234: 299
        line 235: 312
        line 236: 360
        line 237: 366
        line 239: 380
        line 240: 390
        line 228: 441
        line 243: 444
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          192     249     8 lineOffsetsI   I
           72     420     3 offsetLine   I
           81     411     4  size   Lorg/sireum/Z;
          100     392     5     i   Lscala/runtime/ObjectRef;
          119     373     6   max   Lscala/runtime/ObjectRef;
          130     362     7   min   Lorg/sireum/Z;
            0     492     0  this   Lorg/sireum/message/DocInfo;
            0     492     1 offsetLength   J
    MethodParameters:
      Name                           Flags
      offsetLength                   final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #444                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/message/DocInfo;

  public static final java.lang.String $anonfun$_uriOpt$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: ifnonnull     8
         4: aconst_null
         5: goto          12
         8: aconst_null
         9: invokevirtual #447                // Method org/sireum/String.value:()Ljava/lang/String;
        12: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 215: 8

  private final long computeLC$1(org.sireum.Z, int);
    descriptor: (Lorg/sireum/Z;I)J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=11, locals=7, args_size=3
         0: new           #19                 // class org/sireum/U64
         3: dup
         4: getstatic     #453                // Field org/sireum/conversions/Z$.MODULE$:Lorg/sireum/conversions/Z$;
         7: aload_1
         8: getstatic     #348                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        11: iconst_1
        12: invokevirtual #351                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        15: invokeinterface #432,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        20: invokevirtual #457                // Method org/sireum/conversions/Z$.toU64:(Lorg/sireum/Z;)J
        23: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
        26: new           #19                 // class org/sireum/U64
        29: dup
        30: getstatic     #306                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        33: new           #308                // class scala/StringContext
        36: dup
        37: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        40: iconst_1
        41: anewarray     #184                // class java/lang/String
        44: dup
        45: iconst_0
        46: ldc_w         #310                // String 32
        49: aastore
        50: checkcast     #274                // class "[Ljava/lang/Object;"
        53: invokevirtual #224                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        56: invokespecial #313                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        59: invokevirtual #316                // Method org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
        62: invokevirtual #320                // Method org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
        65: getstatic     #325                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        68: invokevirtual #328                // Method org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
        71: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
        74: invokevirtual #460                // Method org/sireum/U64.$less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
        77: checkcast     #19                 // class org/sireum/U64
        80: invokevirtual #336                // Method org/sireum/U64.value:()J
        83: lstore_3
        84: new           #19                 // class org/sireum/U64
        87: dup
        88: getstatic     #465                // Field org/sireum/conversions/U32$.MODULE$:Lorg/sireum/conversions/U32$;
        91: new           #414                // class org/sireum/U32
        94: dup
        95: iload_2
        96: invokespecial #419                // Method org/sireum/U32."<init>":(I)V
        99: aload_0
       100: invokevirtual #178                // Method lineOffsets:()Lorg/sireum/IS;
       103: aload_1
       104: invokevirtual #412                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       107: checkcast     #33                 // class org/sireum/Z$BV$Int
       110: invokevirtual #468                // Method org/sireum/U32.$minus:(Lorg/sireum/Z$BV$Int;)Lorg/sireum/Z$BV$Int;
       113: checkcast     #414                // class org/sireum/U32
       116: invokevirtual #416                // Method org/sireum/U32.value:()I
       119: invokevirtual #471                // Method org/sireum/conversions/U32$.toU64:(I)J
       122: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
       125: new           #19                 // class org/sireum/U64
       128: dup
       129: getstatic     #306                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
       132: new           #308                // class scala/StringContext
       135: dup
       136: getstatic     #211                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       139: iconst_1
       140: anewarray     #184                // class java/lang/String
       143: dup
       144: iconst_0
       145: ldc_w         #473                // String 1
       148: aastore
       149: checkcast     #274                // class "[Ljava/lang/Object;"
       152: invokevirtual #224                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       155: invokespecial #313                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       158: invokevirtual #316                // Method org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
       161: invokevirtual #320                // Method org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
       164: getstatic     #325                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       167: invokevirtual #328                // Method org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
       170: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
       173: invokevirtual #475                // Method org/sireum/U64.$plus:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
       176: checkcast     #19                 // class org/sireum/U64
       179: invokevirtual #336                // Method org/sireum/U64.value:()J
       182: lstore        5
       184: new           #19                 // class org/sireum/U64
       187: dup
       188: lload_3
       189: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
       192: new           #19                 // class org/sireum/U64
       195: dup
       196: lload         5
       198: invokespecial #301                // Method org/sireum/U64."<init>":(J)V
       201: invokevirtual #478                // Method org/sireum/U64.$bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
       204: checkcast     #19                 // class org/sireum/U64
       207: invokevirtual #336                // Method org/sireum/U64.value:()J
       210: lreturn
      LineNumberTable:
        line 220: 0
        line 221: 84
        line 222: 184
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           84     127     3  line   J
          184      27     5 column   J
            0     211     0  this   Lorg/sireum/message/DocInfo;
            0     211     1     i   Lorg/sireum/Z;
            0     211     2 offsetLine$1   I
    MethodParameters:
      Name                           Flags
      i                              final
      offsetLine$1                   final

  public static final boolean $anonfun$lineColumn$1(scala.runtime.ObjectRef, scala.runtime.ObjectRef);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #27                 // class org/sireum/Z
         7: aload_1
         8: getfield      #379                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        11: checkcast     #27                 // class org/sireum/Z
        14: invokeinterface #434,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        19: ireturn
      LineNumberTable:
        line 228: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0   i$1   Lscala/runtime/ObjectRef;
            0      20     1 max$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      i$1                            final
      max$1                          final

  public org.sireum.message.DocInfo(org.sireum.Option<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.U32>);
    descriptor: (Lorg/sireum/Option;Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #488                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #492                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #495                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #498                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: invokeinterface #501,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        23: putfield      #109                // Field _buriOpt:Z
        26: aload_0
        27: aload_1
        28: invokedynamic #508,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        33: invokeinterface #512,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        38: checkcast     #125                // class org/sireum/String
        41: invokevirtual #447                // Method org/sireum/String.value:()Ljava/lang/String;
        44: putfield      #127                // Field _uriOpt:Ljava/lang/String;
        47: aload_0
        48: aload_2
        49: putfield      #142                // Field _lineOffsets:Lorg/sireum/IS;
        52: return
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Lorg/sireum/message/DocInfo;
            0      53     1 __uriOpt   Lorg/sireum/Option;
            0      53     2 __lineOffsets   Lorg/sireum/IS;
    Signature: #485                         // (Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/U32;>;)V
    MethodParameters:
      Name                           Flags
      __uriOpt                       final
      __lineOffsets                  final

  public static final java.lang.Object $anonfun$lineColumn$1$adapted(scala.runtime.ObjectRef, scala.runtime.ObjectRef);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #514                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: invokestatic  #516                // Method $anonfun$lineColumn$1:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
         9: invokespecial #519                // Method org/sireum/B."<init>":(Z)V
        12: areturn
      LineNumberTable:
        line 228: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0   i$1   Lscala/runtime/ObjectRef;
            0      13     1 max$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      i$1                            final
      max$1                          final

  public static final java.lang.Object $anonfun$_uriOpt$2$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #125                // class org/sireum/String
         3: dup
         4: invokestatic  #521                // Method $anonfun$_uriOpt$2:()Ljava/lang/String;
         7: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 215: 0

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #533,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // U64$Slang=class org/sireum/U64$U64$Slang of class org/sireum/U64
  public #23= #22 of #17;                 // u64$=class org/sireum/U64$U64$Slang$u64$ of class org/sireum/U64$U64$Slang
  public static #28= #25 of #27;          // $String$=class org/sireum/Z$$String$ of class org/sireum/Z
  public static #31= #30 of #27;          // BV$=class org/sireum/Z$BV$ of class org/sireum/Z
  public static #34= #33 of #30;          // Int=class org/sireum/Z$BV$Int of class org/sireum/Z$BV$
  public static #37= #36 of #30;          // Long=class org/sireum/Z$BV$Long of class org/sireum/Z$BV$
SourceFile: "Message.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005-d\u0001\u0002\u000e\u001c\u0005\tB\u0001\"\f\u0001\u0003\u0002\u0003\u0006IA\f\u0005\ti\u0001\u0011\t\u0011)A\u0005k!)\u0011\n\u0001C\u0001\u0015\"1q\n\u0001Q\u0001\nACaa\u0015\u0001!\u0002\u0013\t\u0004\"\u0002+\u0001\t\u0003)\u0006\"\u0002,\u0001\t\u0003)\u0006BB,\u0001A\u0003%Q\u0007C\u0003Y\u0001\u0011\u0005\u0011\fC\u0003[\u0001\u0011\u0005\u0011\fC\u0003\\\u0001\u0011\u0005C\fC\u0003e\u0001\u0011\u0005S\r\u0003\u0005g\u0001!\u0015\r\u0011\"\u0011h\u0011\u0015Y\u0007\u0001\"\u0011m\u0011\u0015\u0011\b\u0001\"\u0001t\u0011\u001d1\b!%A\u0005\u0002]D\u0011\"!\u0002\u0001#\u0003%\t!a\u0002\t\u0015\u0005-\u0001\u0001#b\u0001\n\u0003\ni\u0001C\u0004\u0002&\u0001!\t!a\n\b\u000f\u0005\r3\u0004#\u0001\u0002F\u00191!d\u0007E\u0001\u0003\u000fBa!S\u000b\u0005\u0002\u0005%\u0003bBA&+\u0011\u0005\u0011Q\n\u0005\u0007eV!\t!a\u0016\t\u000f\u0005uS\u0003\"\u0001\u0002`\t9Ai\\2J]\u001a|\'B\u0001\u000f\u001e\u0003\u001diWm]:bO\u0016T!AH\u0010\u0002\rML\'/Z;n\u0015\u0005\u0001\u0013aA8sO\u000e\u00011c\u0001\u0001$SA\u0011AeJ\u0007\u0002K)\ta%A\u0003tG\u0006d\u0017-\u0003\u0002)K\t1\u0011I\\=SK\u001a\u0004\"AK\u0016\u000e\u0003uI!\u0001L\u000f\u0003\u0017\u0011\u000bG/\u0019;za\u0016\u001c\u0016nZ\u0001\t?~+(/[(qiB\u0019!fL\u0019\n\u0005Aj\"AB(qi&|g\u000e\u0005\u0002+e%\u00111\'\b\u0002\u0007\'R\u0014\u0018N\\4\u0002\u001b}{F.\u001b8f\u001f\u001a47/\u001a;t!\r1\u0004I\u0012\b\u0003oyr!\u0001O\u001f\u000f\u0005ebT\"\u0001\u001e\u000b\u0005m\n\u0013A\u0002\u001fs_>$h(C\u0001!\u0013\tqr$\u0003\u0002@;\u00059\u0001/Y2lC\u001e,\u0017BA!C\u0005\rI5KW\u0005\u0003\u0007\u0012\u0013A\u0002U1dW\u0006<W\r\u0016:bSRT!!R\u000f\u0002\u0013\u0011Jg\u000e^3s]\u0006d\u0007C\u0001\u0016H\u0013\tAUDA\u0002VgI\na\u0001P5oSRtDcA&N\u001dB\u0011A\nA\u0007\u00027!)Qf\u0001a\u0001]!)Ag\u0001a\u0001k\u0005AqLY;sS>\u0003H\u000f\u0005\u0002%#&\u0011!+\n\u0002\b\u0005>|G.Z1o\u0003\u001dyVO]5PaR\fa!\u001e:j\u001fB$X#\u0001\u0018\u0002\u0013\u001d,G/\u0016:j\u001fB$\u0018\u0001D0mS:,wJ\u001a4tKR\u001c\u0018a\u00037j]\u0016|eMZ:fiN,\u0012!N\u0001\u000fO\u0016$H*\u001b8f\u001f\u001a47/\u001a;t\u0003!!xn\u0015;sS:<G#A/\u0011\u0005y\u001bW\"A0\u000b\u0005\u0001\f\u0017\u0001\u00027b]\u001eT\u0011AY\u0001\u0005U\u00064\u0018-\u0003\u00024?\u000611\u000f\u001e:j]\u001e,\u0012!M\u0001\tQ\u0006\u001c\bnQ8eKV\t\u0001\u000e\u0005\u0002%S&\u0011!.\n\u0002\u0004\u0013:$\u0018AB3rk\u0006d7\u000f\u0006\u0002Q[\")aN\u0004a\u0001_\u0006\tq\u000e\u0005\u0002%a&\u0011\u0011/\n\u0002\u0004\u0003:L\u0018!B1qa2LHcA&uk\"9Ak\u0004I\u0001\u0002\u0004q\u0003b\u0002-\u0010!\u0003\u0005\r!N\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\t\u0001P\u000b\u0002/s.\n!\u0010E\u0002|\u0003\u0003i\u0011\u0001 \u0006\u0003{z\f\u0011\"\u001e8dQ\u0016\u001c7.\u001a3\u000b\u0005},\u0013AC1o]>$\u0018\r^5p]&\u0019\u00111\u0001?\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00133+\t\tIA\u000b\u00026s\u0006AAeY8oi\u0016tG/\u0006\u0002\u0002\u0010A1\u0011\u0011CA\r\u0003?qA!a\u0005\u0002\u00189\u0019\u0011(!\u0006\n\u0003\u0019J!aP\u0013\n\t\u0005m\u0011Q\u0004\u0002\u0004\'\u0016\f(BA &!\u0015!\u0013\u0011E/p\u0013\r\t\u0019#\n\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u00151Lg.Z\"pYVlg\u000e\u0006\u0003\u0002*\u0005=\u0002c\u0001\u0016\u0002,%\u0019\u0011QF\u000f\u0003\u0007U3D\u0007C\u0004\u00022M\u0001\r!!\u000b\u0002\u0019=4gm]3u\u0019\u0016tw\r\u001e5)\u0007M\t)\u0004E\u0002+\u0003oI1!!\u000f\u001e\u0005\u0011\u0001XO]3)\u0007\u0001\ti\u0004E\u0002+\u0003\u007fI1!!\u0011\u001e\u0005!!\u0017\r^1usB,\u0017a\u0002#pG&sgm\u001c\t\u0003\u0019V\u0019\"!F\u0012\u0015\u0005\u0005\u0015\u0013AB2sK\u0006$X\rF\u0003L\u0003\u001f\n\t\u0006C\u0003U/\u0001\u0007a\u0006\u0003\u0004\u0002T]\u0001\r!M\u0001\u0006S:\u0004X\u000f\u001e\u0015\u0004/\u0005UB#B&\u0002Z\u0005m\u0003\"\u0002+\u0019\u0001\u0004q\u0003\"\u0002-\u0019\u0001\u0004)\u0014aB;oCB\u0004H.\u001f\u000b\u0005\u0003C\nI\u0007E\u0003%\u0003G\n9\'C\u0002\u0002f\u0015\u0012AaU8nKB)A%!\t/k!)a.\u0007a\u0001\u0017\u0002"
    )
BootstrapMethods:
  0: #398 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #385 ()Ljava/lang/Object;
      #390 REF_invokeStatic org/sireum/message/DocInfo.$anonfun$lineColumn$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
      #385 ()Ljava/lang/Object;
      #391 1
  1: #398 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #385 ()Ljava/lang/Object;
      #505 REF_invokeStatic org/sireum/message/DocInfo.$anonfun$_uriOpt$2$adapted:()Ljava/lang/Object;
      #385 ()Ljava/lang/Object;
      #391 1
  2: #530 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #505 REF_invokeStatic org/sireum/message/DocInfo.$anonfun$_uriOpt$2$adapted:()Ljava/lang/Object;
      #390 REF_invokeStatic org/sireum/message/DocInfo.$anonfun$lineColumn$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 01 00 1B 01 BD 00 91 01 01 F6 01 80 01 01 E1
   01 E2 01 01 82 01 83 01 00 50 00 51 01 00 62 01
   80 01 00 62 00 63 01 00 28 01 01 01 01 00 01 01
   01 00 58 00 59 01 00 5E 00 59 01 00 80 00 FB 01
   00 73 00 F9 01 00 FE 00 6A 01 00 FF 00 8B 01 01
   AA 01 AB 01 00 EF 00 F0 01 00 8F 00 8B 01 00 87
   00 6A 01 00 49 00 4A 01 00 26 00 BF 01 00 BE 00
   BF 01 01 23 01 24 01 00 8A 00 8B 01 00 B9 00 91
   01 00 90 00 91 01 00 44 00 6A 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
