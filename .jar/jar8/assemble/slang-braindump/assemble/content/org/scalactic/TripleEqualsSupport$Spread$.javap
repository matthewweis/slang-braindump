Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/TripleEqualsSupport$Spread$.class
  Last modified May 29, 2022; size 2037 bytes
  SHA-256 checksum 59824f4b857ec711f1c1ee2b7bd24a88a71a959fc5cef63a0236ca5ee6efa268
  Compiled from "TripleEqualsSupport.scala"
public class org.scalactic.TripleEqualsSupport$Spread$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalactic/TripleEqualsSupport$Spread$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               org/scalactic/TripleEqualsSupport$Spread$
   #2 = Class              #1             // org/scalactic/TripleEqualsSupport$Spread$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               TripleEqualsSupport.scala
   #8 = Utf8               org/scalactic/TripleEqualsSupport$Spread
   #9 = Class              #8             // org/scalactic/TripleEqualsSupport$Spread
  #10 = Utf8               org/scalactic/TripleEqualsSupport
  #11 = Class              #10            // org/scalactic/TripleEqualsSupport
  #12 = Utf8               Spread
  #13 = Utf8               Spread$
  #14 = Utf8               MODULE$
  #15 = Utf8               Lorg/scalactic/TripleEqualsSupport$Spread$;
  #16 = Utf8               <clinit>
  #17 = Utf8               ()V
  #18 = Utf8               <init>
  #19 = NameAndType        #18:#17        // "<init>":()V
  #20 = Methodref          #2.#19         // org/scalactic/TripleEqualsSupport$Spread$."<init>":()V
  #21 = NameAndType        #14:#15        // MODULE$:Lorg/scalactic/TripleEqualsSupport$Spread$;
  #22 = Fieldref           #2.#21         // org/scalactic/TripleEqualsSupport$Spread$.MODULE$:Lorg/scalactic/TripleEqualsSupport$Spread$;
  #23 = Utf8               toString
  #24 = Utf8               ()Ljava/lang/String;
  #25 = String             #12            // Spread
  #26 = Utf8               this
  #27 = Utf8               apply
  #28 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Numeric;)Lorg/scalactic/TripleEqualsSupport$Spread;
  #29 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Lscala/math/Numeric<TT;>;)Lorg/scalactic/TripleEqualsSupport$Spread<TT;>;
  #30 = Utf8               pivot
  #31 = Utf8               tolerance
  #32 = Utf8               evidence$1
  #33 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Numeric;)V
  #34 = NameAndType        #18:#33        // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Numeric;)V
  #35 = Methodref          #9.#34         // org/scalactic/TripleEqualsSupport$Spread."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Numeric;)V
  #36 = Utf8               Ljava/lang/Object;
  #37 = Utf8               Lscala/math/Numeric;
  #38 = Utf8               unapply
  #39 = Utf8               (Lorg/scalactic/TripleEqualsSupport$Spread;)Lscala/Option;
  #40 = Utf8               <T:Ljava/lang/Object;>(Lorg/scalactic/TripleEqualsSupport$Spread<TT;>;)Lscala/Option<Lscala/Tuple2<TT;TT;>;>;
  #41 = Utf8               x$0
  #42 = Utf8               scala/None$
  #43 = Class              #42            // scala/None$
  #44 = Utf8               Lscala/None$;
  #45 = NameAndType        #14:#44        // MODULE$:Lscala/None$;
  #46 = Fieldref           #43.#45        // scala/None$.MODULE$:Lscala/None$;
  #47 = Utf8               scala/Some
  #48 = Class              #47            // scala/Some
  #49 = Utf8               scala/Tuple2
  #50 = Class              #49            // scala/Tuple2
  #51 = Utf8               ()Ljava/lang/Object;
  #52 = NameAndType        #30:#51        // pivot:()Ljava/lang/Object;
  #53 = Methodref          #9.#52         // org/scalactic/TripleEqualsSupport$Spread.pivot:()Ljava/lang/Object;
  #54 = NameAndType        #31:#51        // tolerance:()Ljava/lang/Object;
  #55 = Methodref          #9.#54         // org/scalactic/TripleEqualsSupport$Spread.tolerance:()Ljava/lang/Object;
  #56 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #57 = NameAndType        #18:#56        // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #58 = Methodref          #50.#57        // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #59 = Utf8               (Ljava/lang/Object;)V
  #60 = NameAndType        #18:#59        // "<init>":(Ljava/lang/Object;)V
  #61 = Methodref          #48.#60        // scala/Some."<init>":(Ljava/lang/Object;)V
  #62 = Utf8               Lorg/scalactic/TripleEqualsSupport$Spread;
  #63 = Utf8               scala/Option
  #64 = Class              #63            // scala/Option
  #65 = Utf8               writeReplace
  #66 = Utf8               scala/runtime/ModuleSerializationProxy
  #67 = Class              #66            // scala/runtime/ModuleSerializationProxy
  #68 = Utf8               (Ljava/lang/Class;)V
  #69 = NameAndType        #18:#68        // "<init>":(Ljava/lang/Class;)V
  #70 = Methodref          #67.#69        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #71 = Methodref          #4.#19         // java/lang/Object."<init>":()V
  #72 = Utf8               Code
  #73 = Utf8               LineNumberTable
  #74 = Utf8               LocalVariableTable
  #75 = Utf8               Signature
  #76 = Utf8               MethodParameters
  #77 = Utf8               StackMapTable
  #78 = Utf8               InnerClasses
  #79 = Utf8               SourceFile
  #80 = Utf8               ScalaInlineInfo
  #81 = Utf8               Scala
{
  public static final org.scalactic.TripleEqualsSupport$Spread$ MODULE$;
    descriptor: Lorg/scalactic/TripleEqualsSupport$Spread$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/scalactic/TripleEqualsSupport$Spread$
         3: dup
         4: invokespecial #20                 // Method "<init>":()V
         7: putstatic     #22                 // Field MODULE$:Lorg/scalactic/TripleEqualsSupport$Spread$;
        10: return
      LineNumberTable:
        line 697: 0

  public final java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #25                 // String Spread
         2: areturn
      LineNumberTable:
        line 697: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalactic/TripleEqualsSupport$Spread$;

  public <T extends java.lang.Object> org.scalactic.TripleEqualsSupport$Spread<T> apply(T, T, scala.math.Numeric<T>);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Numeric;)Lorg/scalactic/TripleEqualsSupport$Spread;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #9                  // class org/scalactic/TripleEqualsSupport$Spread
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #35                 // Method org/scalactic/TripleEqualsSupport$Spread."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Numeric;)V
        10: areturn
      LineNumberTable:
        line 697: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/scalactic/TripleEqualsSupport$Spread$;
            0      11     1 pivot   Ljava/lang/Object;
            0      11     2 tolerance   Ljava/lang/Object;
            0      11     3 evidence$1   Lscala/math/Numeric;
    Signature: #29                          // <T:Ljava/lang/Object;>(TT;TT;Lscala/math/Numeric<TT;>;)Lorg/scalactic/TripleEqualsSupport$Spread<TT;>;
    MethodParameters:
      Name                           Flags
      pivot                          final
      tolerance                      final
      evidence$1                     final

  public <T extends java.lang.Object> scala.Option<scala.Tuple2<T, T>> unapply(org.scalactic.TripleEqualsSupport$Spread<T>);
    descriptor: (Lorg/scalactic/TripleEqualsSupport$Spread;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #46                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          32
        10: new           #48                 // class scala/Some
        13: dup
        14: new           #50                 // class scala/Tuple2
        17: dup
        18: aload_1
        19: invokevirtual #53                 // Method org/scalactic/TripleEqualsSupport$Spread.pivot:()Ljava/lang/Object;
        22: aload_1
        23: invokevirtual #55                 // Method org/scalactic/TripleEqualsSupport$Spread.tolerance:()Ljava/lang/Object;
        26: invokespecial #58                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        29: invokespecial #61                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        32: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 697: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/scalactic/TripleEqualsSupport$Spread$;
            0      33     1   x$0   Lorg/scalactic/TripleEqualsSupport$Spread;
    Signature: #40                          // <T:Ljava/lang/Object;>(Lorg/scalactic/TripleEqualsSupport$Spread<TT;>;)Lscala/Option<Lscala/Tuple2<TT;TT;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #67                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class org/scalactic/TripleEqualsSupport$Spread$
         6: invokespecial #70                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 697: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalactic/TripleEqualsSupport$Spread$;

  public org.scalactic.TripleEqualsSupport$Spread$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #71                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 697: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/TripleEqualsSupport$Spread$;
}
InnerClasses:
  public static final #12= #9 of #11;     // Spread=class org/scalactic/TripleEqualsSupport$Spread of class org/scalactic/TripleEqualsSupport
  public static #13= #2 of #11;           // Spread$=class org/scalactic/TripleEqualsSupport$Spread$ of class org/scalactic/TripleEqualsSupport
SourceFile: "TripleEqualsSupport.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 12 00 11 01 00 1B 00 1C 01 00 17
   00 18 01 00 26 00 27 01 00 41 00 33 01
  Scala: length = 0x0 (unknown attribute)

