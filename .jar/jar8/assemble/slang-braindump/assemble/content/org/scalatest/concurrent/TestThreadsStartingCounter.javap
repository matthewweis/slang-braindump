Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/concurrent/TestThreadsStartingCounter.class
  Last modified May 29, 2022; size 2013 bytes
  SHA-256 checksum 9e9f84a94d1546186bb46c8f6e23569b7064789463f8ccbcd45f2bdb018f5a2f
  Compiled from "TestThreadsStartingCounter.scala"
public class org.scalatest.concurrent.TestThreadsStartingCounter
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/concurrent/TestThreadsStartingCounter
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 7, attributes: 4
Constant pool:
   #1 = Utf8               org/scalatest/concurrent/TestThreadsStartingCounter
   #2 = Class              #1             // org/scalatest/concurrent/TestThreadsStartingCounter
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               TestThreadsStartingCounter.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005i2QAC\u0006\u0001\u0017EAQ\u0001\u0007\u0001\u0005\u0002iAq!\b\u0001A\u0002\u0013%a\u0004C\u0004#\u0001\u0001\u0007I\u0011B\u0012\t\r%\u0002\u0001\u0015)\u0003 \u0011\u001dQ\u0003A1A\u0005\n-Ba!\u000e\u0001!\u0002\u0013a\u0003\"\u0002\u001c\u0001\t\u00039\u0004\"\u0002\u001d\u0001\t\u00039\u0004\"B\u001d\u0001\t\u00039$A\u0007+fgR$\u0006N]3bIN\u001cF/\u0019:uS:<7i\\;oi\u0016\u0014(B\u0001\u0007\u000e\u0003)\u0019wN\\2veJ,g\u000e\u001e\u0006\u0003\u001d=\t\u0011b]2bY\u0006$Xm\u001d;\u000b\u0003A\t1a\u001c:h\'\t\u0001!\u0003\u0005\u0002\u0014-5\tACC\u0001\u0016\u0003\u0015\u00198-\u00197b\u0013\t9BC\u0001\u0004B]f\u0014VMZ\u0001\u0007y%t\u0017\u000e\u001e \u0004\u0001Q\t1\u0004\u0005\u0002\u001d\u00015\t1\"A\u0003d_VtG/F\u0001 !\t\u0019\u0002%\u0003\u0002\")\t\u0019\u0011J\u001c;\u0002\u0013\r|WO\u001c;`I\u0015\fHC\u0001\u0013(!\t\u0019R%\u0003\u0002\')\t!QK\\5u\u0011\u001dA3!!AA\u0002}\t1\u0001\u001f\u00132\u0003\u0019\u0019w.\u001e8uA\u0005)A.\u0019;dQV\tA\u0006\u0005\u0002.g5\taF\u0003\u0002\r_)\u0011\u0001\'M\u0001\u0005kRLGNC\u00013\u0003\u0011Q\u0017M^1\n\u0005Qr#AD\"pk:$Hi\\<o\u0019\u0006$8\r[\u0001\u0007Y\u0006$8\r\u001b\u0011\u0002\u0013%t7M]3nK:$H#\u0001\u0013\u0002\u0013\u0011,7M]3nK:$\u0018AI<bSR,f\u000e^5m\u00032dG+Z:u)\"\u0014X-\u00193t\u0011\u00064Xm\u0015;beR,G\r
   #9 = Utf8               count
  #10 = Utf8               I
  #11 = Utf8               latch
  #12 = Utf8               Ljava/util/concurrent/CountDownLatch;
  #13 = Utf8               ()I
  #14 = NameAndType        #9:#10         // count:I
  #15 = Fieldref           #2.#14         // org/scalatest/concurrent/TestThreadsStartingCounter.count:I
  #16 = Utf8               this
  #17 = Utf8               Lorg/scalatest/concurrent/TestThreadsStartingCounter;
  #18 = Utf8               count_$eq
  #19 = Utf8               (I)V
  #20 = Utf8               x$1
  #21 = Utf8               ()Ljava/util/concurrent/CountDownLatch;
  #22 = NameAndType        #11:#12        // latch:Ljava/util/concurrent/CountDownLatch;
  #23 = Fieldref           #2.#22         // org/scalatest/concurrent/TestThreadsStartingCounter.latch:Ljava/util/concurrent/CountDownLatch;
  #24 = Utf8               increment
  #25 = Utf8               ()V
  #26 = NameAndType        #9:#13         // count:()I
  #27 = Methodref          #2.#26         // org/scalatest/concurrent/TestThreadsStartingCounter.count:()I
  #28 = NameAndType        #18:#19        // count_$eq:(I)V
  #29 = Methodref          #2.#28         // org/scalatest/concurrent/TestThreadsStartingCounter.count_$eq:(I)V
  #30 = NameAndType        #11:#21        // latch:()Ljava/util/concurrent/CountDownLatch;
  #31 = Methodref          #2.#30         // org/scalatest/concurrent/TestThreadsStartingCounter.latch:()Ljava/util/concurrent/CountDownLatch;
  #32 = Utf8               java/util/concurrent/CountDownLatch
  #33 = Class              #32            // java/util/concurrent/CountDownLatch
  #34 = Utf8               countDown
  #35 = NameAndType        #34:#25        // countDown:()V
  #36 = Methodref          #33.#35        // java/util/concurrent/CountDownLatch.countDown:()V
  #37 = Utf8               java/lang/Throwable
  #38 = Class              #37            // java/lang/Throwable
  #39 = Utf8               decrement
  #40 = Utf8               notifyAll
  #41 = NameAndType        #40:#25        // notifyAll:()V
  #42 = Methodref          #2.#41         // org/scalatest/concurrent/TestThreadsStartingCounter.notifyAll:()V
  #43 = Utf8               waitUntilAllTestThreadsHaveStarted
  #44 = Utf8               await
  #45 = NameAndType        #44:#25        // await:()V
  #46 = Methodref          #33.#45        // java/util/concurrent/CountDownLatch.await:()V
  #47 = Utf8               wait
  #48 = NameAndType        #47:#25        // wait:()V
  #49 = Methodref          #2.#48         // org/scalatest/concurrent/TestThreadsStartingCounter.wait:()V
  #50 = Utf8               <init>
  #51 = NameAndType        #50:#25        // "<init>":()V
  #52 = Methodref          #4.#51         // java/lang/Object."<init>":()V
  #53 = NameAndType        #50:#19        // "<init>":(I)V
  #54 = Methodref          #33.#53        // java/util/concurrent/CountDownLatch."<init>":(I)V
  #55 = Utf8               Code
  #56 = Utf8               LineNumberTable
  #57 = Utf8               LocalVariableTable
  #58 = Utf8               MethodParameters
  #59 = Utf8               StackMapTable
  #60 = Utf8               SourceFile
  #61 = Utf8               RuntimeVisibleAnnotations
  #62 = Utf8               ScalaInlineInfo
  #63 = Utf8               ScalaSig
{
  private int count;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private final java.util.concurrent.CountDownLatch latch;
    descriptor: Ljava/util/concurrent/CountDownLatch;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private int count();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #15                 // Field count:I
         4: ireturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/TestThreadsStartingCounter;

  private void count_$eq(int);
    descriptor: (I)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #15                 // Field count:I
         5: return
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/concurrent/TestThreadsStartingCounter;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  private java.util.concurrent.CountDownLatch latch();
    descriptor: ()Ljava/util/concurrent/CountDownLatch;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #23                 // Field latch:Ljava/util/concurrent/CountDownLatch;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/concurrent/TestThreadsStartingCounter;

  public void increment();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: aload_0
         6: invokespecial #27                 // Method count:()I
         9: iconst_1
        10: iadd
        11: invokespecial #29                 // Method count_$eq:(I)V
        14: aload_1
        15: monitorexit
        16: goto          22
        19: aload_1
        20: monitorexit
        21: athrow
        22: aload_0
        23: invokespecial #31                 // Method latch:()Ljava/util/concurrent/CountDownLatch;
        26: invokevirtual #36                 // Method java/util/concurrent/CountDownLatch.countDown:()V
        29: return
      Exception table:
         from    to  target type
             4    14    19   any
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/scalatest/concurrent/TestThreadsStartingCounter, class org/scalatest/concurrent/TestThreadsStartingCounter ]
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 41: 0
        line 42: 4
        line 44: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/scalatest/concurrent/TestThreadsStartingCounter;

  public synchronized void decrement();
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokespecial #27                 // Method count:()I
         5: iconst_1
         6: isub
         7: invokespecial #29                 // Method count_$eq:(I)V
        10: aload_0
        11: invokevirtual #42                 // Method notifyAll:()V
        14: return
      LineNumberTable:
        line 48: 0
        line 49: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/scalatest/concurrent/TestThreadsStartingCounter;

  public void waitUntilAllTestThreadsHaveStarted();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokespecial #31                 // Method latch:()Ljava/util/concurrent/CountDownLatch;
         4: invokevirtual #46                 // Method java/util/concurrent/CountDownLatch.await:()V
         7: aload_0
         8: dup
         9: astore_1
        10: monitorenter
        11: aload_0
        12: invokespecial #27                 // Method count:()I
        15: iconst_0
        16: if_icmpeq     26
        19: aload_0
        20: invokevirtual #49                 // Method wait:()V
        23: goto          11
        26: aload_1
        27: monitorexit
        28: goto          34
        31: aload_1
        32: monitorexit
        33: athrow
        34: return
      Exception table:
         from    to  target type
            11    26    31   any
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ class org/scalatest/concurrent/TestThreadsStartingCounter ]
        frame_type = 14 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 53: 0
        line 54: 7
        line 55: 11
        line 56: 19
        line 55: 26
        line 54: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/scalatest/concurrent/TestThreadsStartingCounter;

  public org.scalatest.concurrent.TestThreadsStartingCounter();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokespecial #52                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: iconst_0
         6: putfield      #15                 // Field count:I
         9: aload_0
        10: new           #33                 // class java/util/concurrent/CountDownLatch
        13: dup
        14: iconst_1
        15: invokespecial #54                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
        18: putfield      #23                 // Field latch:Ljava/util/concurrent/CountDownLatch;
        21: return
      LineNumberTable:
        line 60: 0
        line 38: 4
        line 39: 9
        line 37: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalatest/concurrent/TestThreadsStartingCounter;
}
SourceFile: "TestThreadsStartingCounter.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005i2QAC\u0006\u0001\u0017EAQ\u0001\u0007\u0001\u0005\u0002iAq!\b\u0001A\u0002\u0013%a\u0004C\u0004#\u0001\u0001\u0007I\u0011B\u0012\t\r%\u0002\u0001\u0015)\u0003 \u0011\u001dQ\u0003A1A\u0005\n-Ba!\u000e\u0001!\u0002\u0013a\u0003\"\u0002\u001c\u0001\t\u00039\u0004\"\u0002\u001d\u0001\t\u00039\u0004\"B\u001d\u0001\t\u00039$A\u0007+fgR$\u0006N]3bIN\u001cF/\u0019:uS:<7i\\;oi\u0016\u0014(B\u0001\u0007\u000e\u0003)\u0019wN\\2veJ,g\u000e\u001e\u0006\u0003\u001d=\t\u0011b]2bY\u0006$Xm\u001d;\u000b\u0003A\t1a\u001c:h\'\t\u0001!\u0003\u0005\u0002\u0014-5\tACC\u0001\u0016\u0003\u0015\u00198-\u00197b\u0013\t9BC\u0001\u0004B]f\u0014VMZ\u0001\u0007y%t\u0017\u000e\u001e \u0004\u0001Q\t1\u0004\u0005\u0002\u001d\u00015\t1\"A\u0003d_VtG/F\u0001 !\t\u0019\u0002%\u0003\u0002\")\t\u0019\u0011J\u001c;\u0002\u0013\r|WO\u001c;`I\u0015\fHC\u0001\u0013(!\t\u0019R%\u0003\u0002\')\t!QK\\5u\u0011\u001dA3!!AA\u0002}\t1\u0001\u001f\u00132\u0003\u0019\u0019w.\u001e8uA\u0005)A.\u0019;dQV\tA\u0006\u0005\u0002.g5\taF\u0003\u0002\r_)\u0011\u0001\'M\u0001\u0005kRLGNC\u00013\u0003\u0011Q\u0017M^1\n\u0005Qr#AD\"pk:$Hi\\<o\u0019\u0006$8\r[\u0001\u0007Y\u0006$8\r\u001b\u0011\u0002\u0013%t7M]3nK:$H#\u0001\u0013\u0002\u0013\u0011,7M]3nK:$\u0018AI<bSR,f\u000e^5m\u00032dG+Z:u)\"\u0014X-\u00193t\u0011\u00064Xm\u0015;beR,G\r"
    )
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 00 00 07 00 32 00 19 00 00 09 00 0D 01 00 12
   00 13 01 00 27 00 19 00 00 18 00 19 00 00 0B 00
   15 01 00 2B 00 19 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
