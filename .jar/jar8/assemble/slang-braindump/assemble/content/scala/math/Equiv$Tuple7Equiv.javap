Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Equiv$Tuple7Equiv.class
  Last modified May 29, 2022; size 4346 bytes
  SHA-256 checksum 876a6c089dacf9fe32b6ad0aeec482559a9a668462dcb018d19609a1247213ea
  Compiled from "Equiv.scala"
public final class scala.math.Equiv$Tuple7Equiv<T1 extends java.lang.Object, T2 extends java.lang.Object, T3 extends java.lang.Object, T4 extends java.lang.Object, T5 extends java.lang.Object, T6 extends java.lang.Object, T7 extends java.lang.Object> extends java.lang.Object implements scala.math.Equiv<scala.Tuple7<T1, T2, T3, T4, T5, T6, T7>>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/Equiv$Tuple7Equiv
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 12, attributes: 5
Constant pool:
    #1 = Utf8               scala/math/Equiv$Tuple7Equiv
    #2 = Class              #1            // scala/math/Equiv$Tuple7Equiv
    #3 = Utf8               <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple7<TT1;TT2;TT3;TT4;TT5;TT6;TT7;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Equiv
    #7 = Class              #6            // scala/math/Equiv
    #8 = Utf8               Equiv.scala
    #9 = Utf8               Tuple7Equiv
   #10 = Utf8               eqv1
   #11 = Utf8               Lscala/math/Equiv;
   #12 = Utf8               Lscala/math/Equiv<TT1;>;
   #13 = Utf8               eqv2
   #14 = Utf8               Lscala/math/Equiv<TT2;>;
   #15 = Utf8               eqv3
   #16 = Utf8               Lscala/math/Equiv<TT3;>;
   #17 = Utf8               eqv4
   #18 = Utf8               Lscala/math/Equiv<TT4;>;
   #19 = Utf8               eqv5
   #20 = Utf8               Lscala/math/Equiv<TT5;>;
   #21 = Utf8               eqv6
   #22 = Utf8               Lscala/math/Equiv<TT6;>;
   #23 = Utf8               eqv7
   #24 = Utf8               Lscala/math/Equiv<TT7;>;
   #25 = Utf8               ()Lscala/math/Equiv;
   #26 = Utf8               ()Lscala/math/Equiv<TT1;>;
   #27 = NameAndType        #10:#11       // eqv1:Lscala/math/Equiv;
   #28 = Fieldref           #2.#27        // scala/math/Equiv$Tuple7Equiv.eqv1:Lscala/math/Equiv;
   #29 = Utf8               this
   #30 = Utf8               Lscala/math/Equiv$Tuple7Equiv;
   #31 = Utf8               ()Lscala/math/Equiv<TT2;>;
   #32 = NameAndType        #13:#11       // eqv2:Lscala/math/Equiv;
   #33 = Fieldref           #2.#32        // scala/math/Equiv$Tuple7Equiv.eqv2:Lscala/math/Equiv;
   #34 = Utf8               ()Lscala/math/Equiv<TT3;>;
   #35 = NameAndType        #15:#11       // eqv3:Lscala/math/Equiv;
   #36 = Fieldref           #2.#35        // scala/math/Equiv$Tuple7Equiv.eqv3:Lscala/math/Equiv;
   #37 = Utf8               ()Lscala/math/Equiv<TT4;>;
   #38 = NameAndType        #17:#11       // eqv4:Lscala/math/Equiv;
   #39 = Fieldref           #2.#38        // scala/math/Equiv$Tuple7Equiv.eqv4:Lscala/math/Equiv;
   #40 = Utf8               ()Lscala/math/Equiv<TT5;>;
   #41 = NameAndType        #19:#11       // eqv5:Lscala/math/Equiv;
   #42 = Fieldref           #2.#41        // scala/math/Equiv$Tuple7Equiv.eqv5:Lscala/math/Equiv;
   #43 = Utf8               ()Lscala/math/Equiv<TT6;>;
   #44 = NameAndType        #21:#11       // eqv6:Lscala/math/Equiv;
   #45 = Fieldref           #2.#44        // scala/math/Equiv$Tuple7Equiv.eqv6:Lscala/math/Equiv;
   #46 = Utf8               ()Lscala/math/Equiv<TT7;>;
   #47 = NameAndType        #23:#11       // eqv7:Lscala/math/Equiv;
   #48 = Fieldref           #2.#47        // scala/math/Equiv$Tuple7Equiv.eqv7:Lscala/math/Equiv;
   #49 = Utf8               equiv
   #50 = Utf8               (Lscala/Tuple7;Lscala/Tuple7;)Z
   #51 = Utf8               (Lscala/Tuple7<TT1;TT2;TT3;TT4;TT5;TT6;TT7;>;Lscala/Tuple7<TT1;TT2;TT3;TT4;TT5;TT6;TT7;>;)Z
   #52 = Utf8               x
   #53 = Utf8               y
   #54 = NameAndType        #10:#25       // eqv1:()Lscala/math/Equiv;
   #55 = Methodref          #2.#54        // scala/math/Equiv$Tuple7Equiv.eqv1:()Lscala/math/Equiv;
   #56 = Utf8               scala/Tuple7
   #57 = Class              #56           // scala/Tuple7
   #58 = Utf8               _1
   #59 = Utf8               ()Ljava/lang/Object;
   #60 = NameAndType        #58:#59       // _1:()Ljava/lang/Object;
   #61 = Methodref          #57.#60       // scala/Tuple7._1:()Ljava/lang/Object;
   #62 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #63 = NameAndType        #49:#62       // equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #64 = InterfaceMethodref #7.#63        // scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #65 = NameAndType        #13:#25       // eqv2:()Lscala/math/Equiv;
   #66 = Methodref          #2.#65        // scala/math/Equiv$Tuple7Equiv.eqv2:()Lscala/math/Equiv;
   #67 = Utf8               _2
   #68 = NameAndType        #67:#59       // _2:()Ljava/lang/Object;
   #69 = Methodref          #57.#68       // scala/Tuple7._2:()Ljava/lang/Object;
   #70 = NameAndType        #15:#25       // eqv3:()Lscala/math/Equiv;
   #71 = Methodref          #2.#70        // scala/math/Equiv$Tuple7Equiv.eqv3:()Lscala/math/Equiv;
   #72 = Utf8               _3
   #73 = NameAndType        #72:#59       // _3:()Ljava/lang/Object;
   #74 = Methodref          #57.#73       // scala/Tuple7._3:()Ljava/lang/Object;
   #75 = NameAndType        #17:#25       // eqv4:()Lscala/math/Equiv;
   #76 = Methodref          #2.#75        // scala/math/Equiv$Tuple7Equiv.eqv4:()Lscala/math/Equiv;
   #77 = Utf8               _4
   #78 = NameAndType        #77:#59       // _4:()Ljava/lang/Object;
   #79 = Methodref          #57.#78       // scala/Tuple7._4:()Ljava/lang/Object;
   #80 = NameAndType        #19:#25       // eqv5:()Lscala/math/Equiv;
   #81 = Methodref          #2.#80        // scala/math/Equiv$Tuple7Equiv.eqv5:()Lscala/math/Equiv;
   #82 = Utf8               _5
   #83 = NameAndType        #82:#59       // _5:()Ljava/lang/Object;
   #84 = Methodref          #57.#83       // scala/Tuple7._5:()Ljava/lang/Object;
   #85 = NameAndType        #21:#25       // eqv6:()Lscala/math/Equiv;
   #86 = Methodref          #2.#85        // scala/math/Equiv$Tuple7Equiv.eqv6:()Lscala/math/Equiv;
   #87 = Utf8               _6
   #88 = NameAndType        #87:#59       // _6:()Ljava/lang/Object;
   #89 = Methodref          #57.#88       // scala/Tuple7._6:()Ljava/lang/Object;
   #90 = NameAndType        #23:#25       // eqv7:()Lscala/math/Equiv;
   #91 = Methodref          #2.#90        // scala/math/Equiv$Tuple7Equiv.eqv7:()Lscala/math/Equiv;
   #92 = Utf8               _7
   #93 = NameAndType        #92:#59       // _7:()Ljava/lang/Object;
   #94 = Methodref          #57.#93       // scala/Tuple7._7:()Ljava/lang/Object;
   #95 = Utf8               Lscala/Tuple7;
   #96 = Utf8               equals
   #97 = Utf8               (Ljava/lang/Object;)Z
   #98 = Utf8               obj
   #99 = NameAndType        #96:#97       // equals:(Ljava/lang/Object;)Z
  #100 = Methodref          #5.#99        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #101 = Utf8               Ljava/lang/Object;
  #102 = Utf8               hashCode
  #103 = Utf8               ()I
  #104 = Utf8               <init>
  #105 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #106 = NameAndType        #104:#105     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #107 = Methodref          #57.#106      // scala/Tuple7."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #108 = Utf8               scala/util/hashing/MurmurHash3$
  #109 = Class              #108          // scala/util/hashing/MurmurHash3$
  #110 = Utf8               MODULE$
  #111 = Utf8               Lscala/util/hashing/MurmurHash3$;
  #112 = NameAndType        #110:#111     // MODULE$:Lscala/util/hashing/MurmurHash3$;
  #113 = Fieldref           #109.#112     // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
  #114 = Utf8               productHash
  #115 = Utf8               (Lscala/Product;)I
  #116 = NameAndType        #114:#115     // productHash:(Lscala/Product;)I
  #117 = Methodref          #109.#116     // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
  #118 = Utf8               hashCode_this
  #119 = NameAndType        #49:#50       // equiv:(Lscala/Tuple7;Lscala/Tuple7;)Z
  #120 = Methodref          #2.#119       // scala/math/Equiv$Tuple7Equiv.equiv:(Lscala/Tuple7;Lscala/Tuple7;)Z
  #121 = Utf8               (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
  #122 = Utf8               (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;Lscala/math/Equiv<TT6;>;Lscala/math/Equiv<TT7;>;)V
  #123 = Utf8               ()V
  #124 = NameAndType        #104:#123     // "<init>":()V
  #125 = Methodref          #5.#124       // java/lang/Object."<init>":()V
  #126 = Utf8               Signature
  #127 = Utf8               Code
  #128 = Utf8               LineNumberTable
  #129 = Utf8               LocalVariableTable
  #130 = Utf8               StackMapTable
  #131 = Utf8               MethodParameters
  #132 = Utf8               InnerClasses
  #133 = Utf8               SourceFile
  #134 = Utf8               ScalaInlineInfo
  #135 = Utf8               Scala
{
  private final scala.math.Equiv<T1> eqv1;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/math/Equiv<TT1;>;

  private final scala.math.Equiv<T2> eqv2;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/math/Equiv<TT2;>;

  private final scala.math.Equiv<T3> eqv3;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/math/Equiv<TT3;>;

  private final scala.math.Equiv<T4> eqv4;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/math/Equiv<TT4;>;

  private final scala.math.Equiv<T5> eqv5;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/math/Equiv<TT5;>;

  private final scala.math.Equiv<T6> eqv6;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #22                          // Lscala/math/Equiv<TT6;>;

  private final scala.math.Equiv<T7> eqv7;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #24                          // Lscala/math/Equiv<TT7;>;

  private scala.math.Equiv<T1> eqv1();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #28                 // Field eqv1:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 396: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple7Equiv;
    Signature: #26                          // ()Lscala/math/Equiv<TT1;>;

  private scala.math.Equiv<T2> eqv2();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #33                 // Field eqv2:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 397: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple7Equiv;
    Signature: #31                          // ()Lscala/math/Equiv<TT2;>;

  private scala.math.Equiv<T3> eqv3();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #36                 // Field eqv3:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 398: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple7Equiv;
    Signature: #34                          // ()Lscala/math/Equiv<TT3;>;

  private scala.math.Equiv<T4> eqv4();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #39                 // Field eqv4:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 399: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple7Equiv;
    Signature: #37                          // ()Lscala/math/Equiv<TT4;>;

  private scala.math.Equiv<T5> eqv5();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #42                 // Field eqv5:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 400: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple7Equiv;
    Signature: #40                          // ()Lscala/math/Equiv<TT5;>;

  private scala.math.Equiv<T6> eqv6();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #45                 // Field eqv6:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple7Equiv;
    Signature: #43                          // ()Lscala/math/Equiv<TT6;>;

  private scala.math.Equiv<T7> eqv7();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field eqv7:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 402: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple7Equiv;
    Signature: #46                          // ()Lscala/math/Equiv<TT7;>;

  public boolean equiv(scala.Tuple7<T1, T2, T3, T4, T5, T6, T7>, scala.Tuple7<T1, T2, T3, T4, T5, T6, T7>);
    descriptor: (Lscala/Tuple7;Lscala/Tuple7;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #55                 // Method eqv1:()Lscala/math/Equiv;
         4: aload_1
         5: invokevirtual #61                 // Method scala/Tuple7._1:()Ljava/lang/Object;
         8: aload_2
         9: invokevirtual #61                 // Method scala/Tuple7._1:()Ljava/lang/Object;
        12: invokeinterface #64,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        17: ifeq          142
        20: aload_0
        21: invokespecial #66                 // Method eqv2:()Lscala/math/Equiv;
        24: aload_1
        25: invokevirtual #69                 // Method scala/Tuple7._2:()Ljava/lang/Object;
        28: aload_2
        29: invokevirtual #69                 // Method scala/Tuple7._2:()Ljava/lang/Object;
        32: invokeinterface #64,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        37: ifeq          142
        40: aload_0
        41: invokespecial #71                 // Method eqv3:()Lscala/math/Equiv;
        44: aload_1
        45: invokevirtual #74                 // Method scala/Tuple7._3:()Ljava/lang/Object;
        48: aload_2
        49: invokevirtual #74                 // Method scala/Tuple7._3:()Ljava/lang/Object;
        52: invokeinterface #64,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        57: ifeq          142
        60: aload_0
        61: invokespecial #76                 // Method eqv4:()Lscala/math/Equiv;
        64: aload_1
        65: invokevirtual #79                 // Method scala/Tuple7._4:()Ljava/lang/Object;
        68: aload_2
        69: invokevirtual #79                 // Method scala/Tuple7._4:()Ljava/lang/Object;
        72: invokeinterface #64,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        77: ifeq          142
        80: aload_0
        81: invokespecial #81                 // Method eqv5:()Lscala/math/Equiv;
        84: aload_1
        85: invokevirtual #84                 // Method scala/Tuple7._5:()Ljava/lang/Object;
        88: aload_2
        89: invokevirtual #84                 // Method scala/Tuple7._5:()Ljava/lang/Object;
        92: invokeinterface #64,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        97: ifeq          142
       100: aload_0
       101: invokespecial #86                 // Method eqv6:()Lscala/math/Equiv;
       104: aload_1
       105: invokevirtual #89                 // Method scala/Tuple7._6:()Ljava/lang/Object;
       108: aload_2
       109: invokevirtual #89                 // Method scala/Tuple7._6:()Ljava/lang/Object;
       112: invokeinterface #64,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       117: ifeq          142
       120: aload_0
       121: invokespecial #91                 // Method eqv7:()Lscala/math/Equiv;
       124: aload_1
       125: invokevirtual #94                 // Method scala/Tuple7._7:()Ljava/lang/Object;
       128: aload_2
       129: invokevirtual #94                 // Method scala/Tuple7._7:()Ljava/lang/Object;
       132: invokeinterface #64,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       137: ifeq          142
       140: iconst_1
       141: ireturn
       142: iconst_0
       143: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 142
      LineNumberTable:
        line 405: 0
        line 406: 20
        line 407: 40
        line 408: 60
        line 409: 80
        line 410: 100
        line 411: 120
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     144     0  this   Lscala/math/Equiv$Tuple7Equiv;
            0     144     1     x   Lscala/Tuple7;
            0     144     2     y   Lscala/Tuple7;
    Signature: #51                          // (Lscala/Tuple7<TT1;TT2;TT3;TT4;TT5;TT6;TT7;>;Lscala/Tuple7<TT1;TT2;TT3;TT4;TT5;TT6;TT7;>;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=11, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/lang/Object
         4: ifeq          17
         7: aload_0
         8: aload_1
         9: if_acmpne     17
        12: iconst_1
        13: istore_2
        14: goto          257
        17: aload_1
        18: instanceof    #2                  // class scala/math/Equiv$Tuple7Equiv
        21: ifeq          255
        24: aload_1
        25: checkcast     #2                  // class scala/math/Equiv$Tuple7Equiv
        28: astore_3
        29: aload_0
        30: invokespecial #55                 // Method eqv1:()Lscala/math/Equiv;
        33: aload_3
        34: invokespecial #55                 // Method eqv1:()Lscala/math/Equiv;
        37: astore        4
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         4
        46: ifnull        60
        49: goto          250
        52: aload         4
        54: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          250
        60: aload_0
        61: invokespecial #66                 // Method eqv2:()Lscala/math/Equiv;
        64: aload_3
        65: invokespecial #66                 // Method eqv2:()Lscala/math/Equiv;
        68: astore        5
        70: dup
        71: ifnonnull     83
        74: pop
        75: aload         5
        77: ifnull        91
        80: goto          250
        83: aload         5
        85: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        88: ifeq          250
        91: aload_0
        92: invokespecial #71                 // Method eqv3:()Lscala/math/Equiv;
        95: aload_3
        96: invokespecial #71                 // Method eqv3:()Lscala/math/Equiv;
        99: astore        6
       101: dup
       102: ifnonnull     114
       105: pop
       106: aload         6
       108: ifnull        122
       111: goto          250
       114: aload         6
       116: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       119: ifeq          250
       122: aload_0
       123: invokespecial #76                 // Method eqv4:()Lscala/math/Equiv;
       126: aload_3
       127: invokespecial #76                 // Method eqv4:()Lscala/math/Equiv;
       130: astore        7
       132: dup
       133: ifnonnull     145
       136: pop
       137: aload         7
       139: ifnull        153
       142: goto          250
       145: aload         7
       147: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       150: ifeq          250
       153: aload_0
       154: invokespecial #81                 // Method eqv5:()Lscala/math/Equiv;
       157: aload_3
       158: invokespecial #81                 // Method eqv5:()Lscala/math/Equiv;
       161: astore        8
       163: dup
       164: ifnonnull     176
       167: pop
       168: aload         8
       170: ifnull        184
       173: goto          250
       176: aload         8
       178: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       181: ifeq          250
       184: aload_0
       185: invokespecial #86                 // Method eqv6:()Lscala/math/Equiv;
       188: aload_3
       189: invokespecial #86                 // Method eqv6:()Lscala/math/Equiv;
       192: astore        9
       194: dup
       195: ifnonnull     207
       198: pop
       199: aload         9
       201: ifnull        215
       204: goto          250
       207: aload         9
       209: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       212: ifeq          250
       215: aload_0
       216: invokespecial #91                 // Method eqv7:()Lscala/math/Equiv;
       219: aload_3
       220: invokespecial #91                 // Method eqv7:()Lscala/math/Equiv;
       223: astore        10
       225: dup
       226: ifnonnull     238
       229: pop
       230: aload         10
       232: ifnull        246
       235: goto          250
       238: aload         10
       240: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       243: ifeq          250
       246: iconst_1
       247: goto          251
       250: iconst_0
       251: istore_2
       252: goto          257
       255: iconst_0
       256: istore_2
       257: iload_2
       258: ireturn
      StackMapTable: number_of_entries = 19
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/math/Equiv$Tuple7Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple7Equiv, class scala/math/Equiv ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 414: 0
        line 415: 17
        line 416: 29
        line 417: 60
        line 418: 91
        line 419: 122
        line 420: 153
        line 421: 184
        line 422: 215
        line 423: 255
        line 413: 257
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     259     0  this   Lscala/math/Equiv$Tuple7Equiv;
            0     259     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=2, args_size=1
         0: new           #57                 // class scala/Tuple7
         3: dup
         4: aload_0
         5: invokespecial #55                 // Method eqv1:()Lscala/math/Equiv;
         8: aload_0
         9: invokespecial #66                 // Method eqv2:()Lscala/math/Equiv;
        12: aload_0
        13: invokespecial #71                 // Method eqv3:()Lscala/math/Equiv;
        16: aload_0
        17: invokespecial #76                 // Method eqv4:()Lscala/math/Equiv;
        20: aload_0
        21: invokespecial #81                 // Method eqv5:()Lscala/math/Equiv;
        24: aload_0
        25: invokespecial #86                 // Method eqv6:()Lscala/math/Equiv;
        28: aload_0
        29: invokespecial #91                 // Method eqv7:()Lscala/math/Equiv;
        32: invokespecial #107                // Method scala/Tuple7."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        35: astore_1
        36: getstatic     #113                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        39: aload_1
        40: invokevirtual #117                // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
        43: ireturn
      LineNumberTable:
        line 425: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lscala/math/Equiv$Tuple7Equiv;
           36       7     1 hashCode_this   Lscala/Tuple7;

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #57                 // class scala/Tuple7
         5: aload_2
         6: checkcast     #57                 // class scala/Tuple7
         9: invokevirtual #120                // Method equiv:(Lscala/Tuple7;Lscala/Tuple7;)Z
        12: ireturn
      LineNumberTable:
        line 396: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Equiv$Tuple7Equiv;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Equiv$Tuple7Equiv(scala.math.Equiv<T1>, scala.math.Equiv<T2>, scala.math.Equiv<T3>, scala.math.Equiv<T4>, scala.math.Equiv<T5>, scala.math.Equiv<T6>, scala.math.Equiv<T7>);
    descriptor: (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=8
         0: aload_0
         1: aload_1
         2: putfield      #28                 // Field eqv1:Lscala/math/Equiv;
         5: aload_0
         6: aload_2
         7: putfield      #33                 // Field eqv2:Lscala/math/Equiv;
        10: aload_0
        11: aload_3
        12: putfield      #36                 // Field eqv3:Lscala/math/Equiv;
        15: aload_0
        16: aload         4
        18: putfield      #39                 // Field eqv4:Lscala/math/Equiv;
        21: aload_0
        22: aload         5
        24: putfield      #42                 // Field eqv5:Lscala/math/Equiv;
        27: aload_0
        28: aload         6
        30: putfield      #45                 // Field eqv6:Lscala/math/Equiv;
        33: aload_0
        34: aload         7
        36: putfield      #48                 // Field eqv7:Lscala/math/Equiv;
        39: aload_0
        40: invokespecial #125                // Method java/lang/Object."<init>":()V
        43: return
      LineNumberTable:
        line 396: 0
        line 397: 5
        line 398: 10
        line 399: 15
        line 400: 21
        line 401: 27
        line 402: 33
        line 403: 39
        line 396: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lscala/math/Equiv$Tuple7Equiv;
            0      44     1  eqv1   Lscala/math/Equiv;
            0      44     2  eqv2   Lscala/math/Equiv;
            0      44     3  eqv3   Lscala/math/Equiv;
            0      44     4  eqv4   Lscala/math/Equiv;
            0      44     5  eqv5   Lscala/math/Equiv;
            0      44     6  eqv6   Lscala/math/Equiv;
            0      44     7  eqv7   Lscala/math/Equiv;
    Signature: #122                         // (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;Lscala/math/Equiv<TT6;>;Lscala/math/Equiv<TT7;>;)V
    MethodParameters:
      Name                           Flags
      eqv1                           final
      eqv2                           final
      eqv3                           final
      eqv4                           final
      eqv5                           final
      eqv6                           final
      eqv7                           final
}
InnerClasses:
  private static final #9= #2 of #7;      // Tuple7Equiv=class scala/math/Equiv$Tuple7Equiv of class scala/math/Equiv
Signature: #3                           // <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;T7:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple7<TT1;TT2;TT3;TT4;TT5;TT6;TT7;>;>;
SourceFile: "Equiv.scala"
  ScalaInlineInfo: length = 0x40 (unknown attribute)
   01 01 00 0C 00 68 00 79 01 00 60 00 61 01 00 31
   00 3E 01 00 31 00 32 01 00 0A 00 19 01 00 0D 00
   19 01 00 0F 00 19 01 00 11 00 19 01 00 13 00 19
   01 00 15 00 19 01 00 17 00 19 01 00 66 00 67 01

  Scala: length = 0x0 (unknown attribute)

