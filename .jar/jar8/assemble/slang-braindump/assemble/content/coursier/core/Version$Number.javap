Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Version$Number.class
  Last modified May 29, 2022; size 3874 bytes
  SHA-256 checksum 5b7bcc8199b3d1031fa0136739a203e8876cff9c25b64347b2c952e869fc9c9c
  Compiled from "Version.scala"
public final class coursier.core.Version$Number extends coursier.core.Version$Numeric implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/Version$Number
  super_class: #4                         // coursier/core/Version$Numeric
  interfaces: 2, fields: 2, methods: 19, attributes: 4
Constant pool:
    #1 = Utf8               coursier/core/Version$Number
    #2 = Class              #1            // coursier/core/Version$Number
    #3 = Utf8               coursier/core/Version$Numeric
    #4 = Class              #3            // coursier/core/Version$Numeric
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Version.scala
   #10 = Utf8               coursier/core/Version
   #11 = Class              #10           // coursier/core/Version
   #12 = Utf8               Number
   #13 = Utf8               coursier/core/Version$Number$
   #14 = Class              #13           // coursier/core/Version$Number$
   #15 = Utf8
   #16 = Utf8               Numeric
   #17 = Utf8               value
   #18 = Utf8               I
   #19 = Utf8               order
   #20 = Utf8               productIterator
   #21 = Utf8               ()Lscala/collection/Iterator;
   #22 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #23 = Utf8               productIterator$
   #24 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #25 = NameAndType        #23:#24       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #26 = InterfaceMethodref #6.#25        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #27 = Utf8               this
   #28 = Utf8               Lcoursier/core/Version$Number;
   #29 = Utf8               productElementNames
   #30 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #31 = Utf8               productElementNames$
   #32 = NameAndType        #31:#24       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #33 = InterfaceMethodref #6.#32        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #34 = Utf8               ()I
   #35 = NameAndType        #17:#18       // value:I
   #36 = Fieldref           #2.#35        // coursier/core/Version$Number.value:I
   #37 = NameAndType        #19:#18       // order:I
   #38 = Fieldref           #2.#37        // coursier/core/Version$Number.order:I
   #39 = Utf8               next
   #40 = Utf8               ()Lcoursier/core/Version$Number;
   #41 = Utf8               MODULE$
   #42 = Utf8               Lcoursier/core/Version$Number$;
   #43 = NameAndType        #41:#42       // MODULE$:Lcoursier/core/Version$Number$;
   #44 = Fieldref           #14.#43       // coursier/core/Version$Number$.MODULE$:Lcoursier/core/Version$Number$;
   #45 = NameAndType        #17:#34       // value:()I
   #46 = Methodref          #2.#45        // coursier/core/Version$Number.value:()I
   #47 = Utf8               apply
   #48 = Utf8               (I)Lcoursier/core/Version$Number;
   #49 = NameAndType        #47:#48       // apply:(I)Lcoursier/core/Version$Number;
   #50 = Methodref          #14.#49       // coursier/core/Version$Number$.apply:(I)Lcoursier/core/Version$Number;
   #51 = Utf8               repr
   #52 = Utf8               ()Ljava/lang/String;
   #53 = Utf8               scala/runtime/BoxesRunTime
   #54 = Class              #53           // scala/runtime/BoxesRunTime
   #55 = Utf8               boxToInteger
   #56 = Utf8               (I)Ljava/lang/Integer;
   #57 = NameAndType        #55:#56       // boxToInteger:(I)Ljava/lang/Integer;
   #58 = Methodref          #54.#57       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #59 = Utf8               java/lang/Object
   #60 = Class              #59           // java/lang/Object
   #61 = Utf8               toString
   #62 = NameAndType        #61:#52       // toString:()Ljava/lang/String;
   #63 = Methodref          #60.#62       // java/lang/Object.toString:()Ljava/lang/String;
   #64 = Utf8               compareToEmpty
   #65 = Utf8               scala/runtime/RichInt
   #66 = Class              #65           // scala/runtime/RichInt
   #67 = Utf8               scala/Predef$
   #68 = Class              #67           // scala/Predef$
   #69 = Utf8               Lscala/Predef$;
   #70 = NameAndType        #41:#69       // MODULE$:Lscala/Predef$;
   #71 = Fieldref           #68.#70       // scala/Predef$.MODULE$:Lscala/Predef$;
   #72 = Utf8               intWrapper
   #73 = Utf8               (I)I
   #74 = NameAndType        #72:#73       // intWrapper:(I)I
   #75 = Methodref          #68.#74       // scala/Predef$.intWrapper:(I)I
   #76 = Utf8               <init>
   #77 = Utf8               (I)V
   #78 = NameAndType        #76:#77       // "<init>":(I)V
   #79 = Methodref          #66.#78       // scala/runtime/RichInt."<init>":(I)V
   #80 = Utf8               compare
   #81 = Utf8               (Ljava/lang/Object;)I
   #82 = NameAndType        #80:#81       // compare:(Ljava/lang/Object;)I
   #83 = Methodref          #66.#82       // scala/runtime/RichInt.compare:(Ljava/lang/Object;)I
   #84 = Utf8               withValue
   #85 = Methodref          #2.#78        // coursier/core/Version$Number."<init>":(I)V
   #86 = Utf8               java/lang/StringBuilder
   #87 = Class              #86           // java/lang/StringBuilder
   #88 = Utf8               Number(
   #89 = String             #88           // Number(
   #90 = Utf8               (Ljava/lang/String;)V
   #91 = NameAndType        #76:#90       // "<init>":(Ljava/lang/String;)V
   #92 = Methodref          #87.#91       // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
   #93 = Utf8               java/lang/String
   #94 = Class              #93           // java/lang/String
   #95 = Utf8               valueOf
   #96 = Utf8               (I)Ljava/lang/String;
   #97 = NameAndType        #95:#96       // valueOf:(I)Ljava/lang/String;
   #98 = Methodref          #94.#97       // java/lang/String.valueOf:(I)Ljava/lang/String;
   #99 = Utf8               append
  #100 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #101 = NameAndType        #99:#100      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #102 = Methodref          #87.#101      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #103 = Utf8               )
  #104 = String             #103          // )
  #105 = Methodref          #87.#62       // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #106 = Utf8               b
  #107 = Utf8               Ljava/lang/StringBuilder;
  #108 = Utf8               canEqual
  #109 = Utf8               (Ljava/lang/Object;)Z
  #110 = Utf8               obj
  #111 = Utf8               Ljava/lang/Object;
  #112 = Utf8               equals
  #113 = NameAndType        #108:#109     // canEqual:(Ljava/lang/Object;)Z
  #114 = Methodref          #2.#113       // coursier/core/Version$Number.canEqual:(Ljava/lang/Object;)Z
  #115 = Utf8               other
  #116 = Utf8               hashCode
  #117 = String             #12           // Number
  #118 = Utf8               scala/runtime/Statics
  #119 = Class              #118          // scala/runtime/Statics
  #120 = Utf8               anyHash
  #121 = NameAndType        #120:#81      // anyHash:(Ljava/lang/Object;)I
  #122 = Methodref          #119.#121     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #123 = Utf8               code
  #124 = Utf8               tuple
  #125 = Utf8               ()Lscala/Tuple1;
  #126 = Utf8               ()Lscala/Tuple1<Ljava/lang/Object;>;
  #127 = Utf8               scala/Tuple1$mcI$sp
  #128 = Class              #127          // scala/Tuple1$mcI$sp
  #129 = Methodref          #128.#78      // scala/Tuple1$mcI$sp."<init>":(I)V
  #130 = Utf8               productPrefix
  #131 = Utf8               productArity
  #132 = Utf8               productElement
  #133 = Utf8               (I)Ljava/lang/Object;
  #134 = Utf8               n
  #135 = Utf8               java/lang/IndexOutOfBoundsException
  #136 = Class              #135          // java/lang/IndexOutOfBoundsException
  #137 = Methodref          #136.#91      // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #138 = Utf8               java/lang/Integer
  #139 = Class              #138          // java/lang/Integer
  #140 = Utf8               productElementName
  #141 = String             #17           // value
  #142 = Utf8               ()Lcoursier/core/Version$Numeric;
  #143 = NameAndType        #39:#40       // next:()Lcoursier/core/Version$Number;
  #144 = Methodref          #2.#143       // coursier/core/Version$Number.next:()Lcoursier/core/Version$Number;
  #145 = Utf8               ()V
  #146 = NameAndType        #76:#145      // "<init>":()V
  #147 = Methodref          #4.#146       // coursier/core/Version$Numeric."<init>":()V
  #148 = Utf8               $init$
  #149 = Utf8               (Lscala/Product;)V
  #150 = NameAndType        #148:#149     // $init$:(Lscala/Product;)V
  #151 = InterfaceMethodref #6.#150       // scala/Product.$init$:(Lscala/Product;)V
  #152 = Utf8               Code
  #153 = Utf8               LineNumberTable
  #154 = Utf8               LocalVariableTable
  #155 = Utf8               Signature
  #156 = Utf8               MethodParameters
  #157 = Utf8               StackMapTable
  #158 = Utf8               InnerClasses
  #159 = Utf8               SourceFile
  #160 = Utf8               ScalaInlineInfo
  #161 = Utf8               Scala
{
  private final int value;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int order;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #26                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version$Number;
    Signature: #22                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #33                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version$Number;
    Signature: #30                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public int value();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #36                 // Field value:I
         4: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version$Number;

  public int order();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #38                 // Field order:I
         4: ireturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version$Number;

  public coursier.core.Version$Number next();
    descriptor: ()Lcoursier/core/Version$Number;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #44                 // Field coursier/core/Version$Number$.MODULE$:Lcoursier/core/Version$Number$;
         3: aload_0
         4: invokevirtual #46                 // Method value:()I
         7: iconst_1
         8: iadd
         9: invokevirtual #50                 // Method coursier/core/Version$Number$.apply:(I)Lcoursier/core/Version$Number;
        12: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/core/Version$Number;

  public java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #46                 // Method value:()I
         4: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: invokevirtual #63                 // Method java/lang/Object.toString:()Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcoursier/core/Version$Number;

  public int compareToEmpty();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #66                 // class scala/runtime/RichInt
         3: dup
         4: getstatic     #71                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         7: aload_0
         8: invokevirtual #46                 // Method value:()I
        11: invokevirtual #75                 // Method scala/Predef$.intWrapper:(I)I
        14: invokespecial #79                 // Method scala/runtime/RichInt."<init>":(I)V
        17: iconst_0
        18: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        21: invokevirtual #83                 // Method scala/runtime/RichInt.compare:(Ljava/lang/Object;)I
        24: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/core/Version$Number;

  public coursier.core.Version$Number withValue(int);
    descriptor: (I)Lcoursier/core/Version$Number;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/core/Version$Number
         3: dup
         4: iload_1
         5: invokespecial #85                 // Method "<init>":(I)V
         8: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/Version$Number;
            0       9     1 value   I
    MethodParameters:
      Name                           Flags
      value                          final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #87                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #89                 // String Number(
         6: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #46                 // Method value:()I
        15: invokestatic  #98                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
        18: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc           #104                // String )
        25: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     1     b   Ljava/lang/StringBuilder;
            0      34     0  this   Lcoursier/core/Version$Number;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/core/Version$Number
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/Version$Number;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     41
         5: aload_0
         6: aload_1
         7: invokevirtual #114                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          45
        13: aload_1
        14: checkcast     #2                  // class coursier/core/Version$Number
        17: astore_2
        18: iconst_1
        19: ifeq          37
        22: aload_0
        23: invokevirtual #46                 // Method value:()I
        26: aload_2
        27: invokevirtual #46                 // Method value:()I
        30: if_icmpne     37
        33: iconst_1
        34: goto          38
        37: iconst_0
        38: ifeq          45
        41: iconst_1
        42: goto          46
        45: iconst_0
        46: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class coursier/core/Version$Number ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      20     2 other   Lcoursier/core/Version$Number;
            0      47     0  this   Lcoursier/core/Version$Number;
            0      47     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc           #117                // String Number
         4: invokestatic  #122                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         7: iadd
         8: istore_1
         9: bipush        37
        11: iload_1
        12: imul
        13: aload_0
        14: invokevirtual #46                 // Method value:()I
        17: iadd
        18: istore_1
        19: bipush        37
        21: iload_1
        22: imul
        23: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      14     1  code   I
            0      24     0  this   Lcoursier/core/Version$Number;

  private scala.Tuple1<java.lang.Object> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #128                // class scala/Tuple1$mcI$sp
         3: dup
         4: aload_0
         5: invokevirtual #46                 // Method value:()I
         8: invokespecial #129                // Method scala/Tuple1$mcI$sp."<init>":(I)V
        11: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/core/Version$Number;
    Signature: #126                         // ()Lscala/Tuple1<Ljava/lang/Object;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #117                // String Number
         2: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/core/Version$Number;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/Version$Number;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 30
            }
        20: aload_0
        21: invokevirtual #46                 // Method value:()I
        24: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        27: goto          45
        30: new           #136                // class java/lang/IndexOutOfBoundsException
        33: dup
        34: iload_2
        35: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        38: invokevirtual #63                 // Method java/lang/Object.toString:()Ljava/lang/String;
        41: invokespecial #137                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        44: athrow
        45: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Integer ]
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lcoursier/core/Version$Number;
            0      46     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 25
            }
        20: ldc           #141                // String value
        22: goto          40
        25: new           #136                // class java/lang/IndexOutOfBoundsException
        28: dup
        29: iload_2
        30: invokestatic  #58                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        33: invokevirtual #63                 // Method java/lang/Object.toString:()Ljava/lang/String;
        36: invokespecial #137                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        39: athrow
        40: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lcoursier/core/Version$Number;
            0      41     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public coursier.core.Version$Numeric next();
    descriptor: ()Lcoursier/core/Version$Numeric;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #144                // Method next:()Lcoursier/core/Version$Number;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version$Number;

  public coursier.core.Version$Number(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #36                 // Field value:I
         5: aload_0
         6: invokespecial #147                // Method coursier/core/Version$Numeric."<init>":()V
         9: aload_0
        10: invokestatic  #151                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: aload_0
        14: iconst_0
        15: putfield      #38                 // Field order:I
        18: return
      LineNumberTable:
        line 49: 0
        line 50: 13
        line 49: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/core/Version$Number;
            0      19     1 value   I
    MethodParameters:
      Name                           Flags
      value                          final
}
InnerClasses:
  public static final #12= #2 of #11;     // Number=class coursier/core/Version$Number of class coursier/core/Version
  public static #15= #14 of #11;          // =class coursier/core/Version$Number$ of class coursier/core/Version
  public static abstract #16= #4 of #11;  // Numeric=class coursier/core/Version$Numeric of class coursier/core/Version
SourceFile: "Version.scala"
  ScalaInlineInfo: length = 0x63 (unknown attribute)
   01 01 00 13 00 4C 00 4D 01 00 6C 00 6D 01 00 40
   00 22 01 00 70 00 6D 01 00 74 00 22 01 00 27 00
   28 01 00 27 00 8E 01 00 13 00 22 01 00 83 00 22
   01 00 84 00 85 01 00 8C 00 60 01 00 1D 00 15 01
   00 14 00 15 01 00 82 00 34 01 00 33 00 34 01 00
   3D 00 34 01 00 7C 00 7D 01 00 11 00 22 01 00 54
   00 30 01
  Scala: length = 0x0 (unknown attribute)

