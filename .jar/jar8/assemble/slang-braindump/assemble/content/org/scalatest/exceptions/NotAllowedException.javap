Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/exceptions/NotAllowedException.class
  Last modified May 29, 2022; size 7312 bytes
  SHA-256 checksum 32cf50af34258d27fab9446de4fb85d8c07ee38fb2f2e8e101a5072f92aa498a
  Compiled from "NotAllowedException.scala"
public class org.scalatest.exceptions.NotAllowedException extends org.scalatest.exceptions.StackDepthException
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/exceptions/NotAllowedException
  super_class: #4                         // org/scalatest/exceptions/StackDepthException
  interfaces: 0, fields: 1, methods: 13, attributes: 6
Constant pool:
    #1 = Utf8               org/scalatest/exceptions/NotAllowedException
    #2 = Class              #1            // org/scalatest/exceptions/NotAllowedException
    #3 = Utf8               org/scalatest/exceptions/StackDepthException
    #4 = Class              #3            // org/scalatest/exceptions/StackDepthException
    #5 = Utf8               NotAllowedException.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005A4A!\u0004\b\u0001+!A!\u0004\u0001B\u0001B\u0003%1\u0004C\u0005)\u0001\t\u0005\t\u0015!\u0003*m!Aq\u0007\u0001B\u0001B\u0003%\u0001\bC\u0003J\u0001\u0011\u0005!\nC\u0003J\u0001\u0011\u0005q\nC\u0003J\u0001\u0011\u0005A\u000bC\u0003J\u0001\u0011\u0005q\u000bC\u0003J\u0001\u0011\u00051\fC\u0003`\u0001\u0011\u0005\u0001\rC\u0003b\u0001\u0011\u0005#\rC\u0003l\u0001\u0011\u0005C\u000eC\u0003o\u0001\u0011\u0005sNA\nO_R\fE\u000e\\8xK\u0012,\u0005pY3qi&|gN\u0003\u0002\u0010!\u0005QQ\r_2faRLwN\\:\u000b\u0005E\u0011\u0012!C:dC2\fG/Z:u\u0015\u0005\u0019\u0012aA8sO\u000e\u00011C\u0001\u0001\u0017!\t9\u0002$D\u0001\u000f\u0013\tIbBA\nTi\u0006\u001c7\u000eR3qi\",\u0005pY3qi&|g.A\u0004nKN\u001c\u0018mZ3\u0011\u0005q)cBA\u000f$!\tq\u0012%D\u0001 \u0015\t\u0001C#\u0001\u0004=e>|GO\u0010\u0006\u0002E\u0005)1oY1mC&\u0011A%I\u0001\u0007!J,G-\u001a4\n\u0005\u0019:#AB*ue&twM\u0003\u0002%C\u0005)1-Y;tKB\u0019!fK\u0017\u000e\u0003\u0005J!\u0001L\u0011\u0003\r=\u0003H/[8o!\tq3G\u0004\u00020c9\u0011a\u0004M\u0005\u0002E%\u0011!\'I\u0001\ba\u0006\u001c7.Y4f\u0013\t!TGA\u0005UQJ|w/\u00192mK*\u0011!\'I\u0005\u0003Qa\t!\u0003]8t\u001fJ\u001cF/Y2l\t\u0016\u0004H\u000f\u001b$v]B!a&O\u001eD\u0013\tQTG\u0001\u0004FSRDWM\u001d\t\u0003y\u0005k\u0011!\u0010\u0006\u0003}}\naa]8ve\u000e,\'B\u0001!\u0013\u0003%\u00198-\u00197bGRL7-\u0003\u0002C{\tA\u0001k\\:ji&|g\u000e\u0005\u0003+\tZ1\u0015BA#\"\u0005%1UO\\2uS>t\u0017\u0007\u0005\u0002+\u000f&\u0011\u0001*\t\u0002\u0004\u0013:$\u0018A\u0002\u001fj]&$h\b\u0006\u0003L\u00196s\u0005CA\f\u0001\u0011\u0015QB\u00011\u0001\u001c\u0011\u0015AC\u00011\u0001*\u0011\u00159D\u00011\u00019)\u0011Y\u0005+\u0015*\t\u000bi)\u0001\u0019A\u000e\t\u000b!*\u0001\u0019A\u0015\t\u000bM+\u0001\u0019A\u001e\u0002\u0007A|7\u000fF\u0002L+ZCQA\u0007\u0004A\u0002mAQa\u0015\u0004A\u0002m\"2a\u0013-Z\u0011\u0015Qr\u00011\u0001\u001c\u0011\u0015Qv\u00011\u0001G\u0003Q1\u0017-\u001b7fI\u000e{G-Z*uC\u000e\\G)\u001a9uQR\u00191\nX/\t\u000biA\u0001\u0019A\u000e\t\u000byC\u0001\u0019A\"\u0002/\u0019\f\u0017\u000e\\3e\u0007>$Wm\u0015;bG.$U\r\u001d;i\rVt\u0017aE:fm\u0016\u0014X\rZ!u\'R\f7m\u001b#faRDW#A&\u0002\u0011\r\fg.R9vC2$\"a\u00194\u0011\u0005)\"\u0017BA3\"\u0005\u001d\u0011un\u001c7fC:DQa\u001a\u0006A\u0002!\fQa\u001c;iKJ\u0004\"AK5\n\u0005)\f#aA!os\u00061Q-];bYN$\"aY7\t\u000b\u001d\\\u0001\u0019\u00015\u0002\u0011!\f7\u000f[\"pI\u0016$\u0012A\u0012
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               org/scalactic/Requirements$RequirementsHelper
   #15 = Class              #14           // org/scalactic/Requirements$RequirementsHelper
   #16 = Utf8               org/scalactic/Requirements
   #17 = Class              #16           // org/scalactic/Requirements
   #18 = Utf8               RequirementsHelper
   #19 = Utf8               org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$1
   #20 = Class              #19           // org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$1
   #21 = Utf8               org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$2
   #22 = Class              #21           // org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$2
   #23 = Utf8               message
   #24 = Utf8               Ljava/lang/String;
   #25 = Utf8               severedAtStackDepth
   #26 = Utf8               ()Lorg/scalatest/exceptions/NotAllowedException;
   #27 = Utf8               scala/collection/ArrayOps$
   #28 = Class              #27           // scala/collection/ArrayOps$
   #29 = Utf8               MODULE$
   #30 = Utf8               Lscala/collection/ArrayOps$;
   #31 = NameAndType        #29:#30       // MODULE$:Lscala/collection/ArrayOps$;
   #32 = Fieldref           #28.#31       // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
   #33 = Utf8               scala/Predef$
   #34 = Class              #33           // scala/Predef$
   #35 = Utf8               Lscala/Predef$;
   #36 = NameAndType        #29:#35       // MODULE$:Lscala/Predef$;
   #37 = Fieldref           #34.#36       // scala/Predef$.MODULE$:Lscala/Predef$;
   #38 = Utf8               getStackTrace
   #39 = Utf8               ()[Ljava/lang/StackTraceElement;
   #40 = NameAndType        #38:#39       // getStackTrace:()[Ljava/lang/StackTraceElement;
   #41 = Methodref          #2.#40        // org/scalatest/exceptions/NotAllowedException.getStackTrace:()[Ljava/lang/StackTraceElement;
   #42 = Utf8               [Ljava/lang/Object;
   #43 = Class              #42           // "[Ljava/lang/Object;"
   #44 = Utf8               refArrayOps
   #45 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
   #46 = NameAndType        #44:#45       // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #47 = Methodref          #34.#46       // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #48 = Utf8               failedCodeStackDepth
   #49 = Utf8               ()I
   #50 = NameAndType        #48:#49       // failedCodeStackDepth:()I
   #51 = Methodref          #2.#50        // org/scalatest/exceptions/NotAllowedException.failedCodeStackDepth:()I
   #52 = Utf8               drop$extension
   #53 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
   #54 = NameAndType        #52:#53       // drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
   #55 = Methodref          #28.#54       // scala/collection/ArrayOps$.drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
   #56 = Utf8               [Ljava/lang/StackTraceElement;
   #57 = Class              #56           // "[Ljava/lang/StackTraceElement;"
   #58 = NameAndType        #23:#24       // message:Ljava/lang/String;
   #59 = Fieldref           #2.#58        // org/scalatest/exceptions/NotAllowedException.message:Ljava/lang/String;
   #60 = Utf8               scala/None$
   #61 = Class              #60           // scala/None$
   #62 = Utf8               Lscala/None$;
   #63 = NameAndType        #29:#62       // MODULE$:Lscala/None$;
   #64 = Fieldref           #61.#63       // scala/None$.MODULE$:Lscala/None$;
   #65 = Utf8               org/scalatest/exceptions/StackDepthExceptionHelper$
   #66 = Class              #65           // org/scalatest/exceptions/StackDepthExceptionHelper$
   #67 = Utf8               Lorg/scalatest/exceptions/StackDepthExceptionHelper$;
   #68 = NameAndType        #29:#67       // MODULE$:Lorg/scalatest/exceptions/StackDepthExceptionHelper$;
   #69 = Fieldref           #66.#68       // org/scalatest/exceptions/StackDepthExceptionHelper$.MODULE$:Lorg/scalatest/exceptions/StackDepthExceptionHelper$;
   #70 = Utf8               position
   #71 = Utf8               ()Lscala/Option;
   #72 = NameAndType        #70:#71       // position:()Lscala/Option;
   #73 = Methodref          #2.#72        // org/scalatest/exceptions/NotAllowedException.position:()Lscala/Option;
   #74 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #75 = MethodType         #74           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #76 = Utf8               $anonfun$severedAtStackDepth$1$adapted
   #77 = Utf8               (Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
   #78 = NameAndType        #76:#77       // $anonfun$severedAtStackDepth$1$adapted:(Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
   #79 = Methodref          #2.#78        // org/scalatest/exceptions/NotAllowedException.$anonfun$severedAtStackDepth$1$adapted:(Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
   #80 = MethodHandle       6:#79         // REF_invokeStatic org/scalatest/exceptions/NotAllowedException.$anonfun$severedAtStackDepth$1$adapted:(Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
   #81 = MethodType         #77           //  (Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
   #82 = Integer            5
   #83 = Integer            1
   #84 = Utf8               java/lang/invoke/LambdaMetafactory
   #85 = Class              #84           // java/lang/invoke/LambdaMetafactory
   #86 = Utf8               altMetafactory
   #87 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #88 = NameAndType        #86:#87       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #89 = Methodref          #85.#88       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #90 = MethodHandle       6:#89         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #91 = Utf8               apply
   #92 = Utf8               ()Lscala/Function1;
   #93 = NameAndType        #91:#92       // apply:()Lscala/Function1;
   #94 = InvokeDynamic      #0:#93        // #0:apply:()Lscala/Function1;
   #95 = Utf8               posOrElseStackDepthFun
   #96 = Utf8               (Lscala/Option;Lscala/Function1;)Lscala/util/Either;
   #97 = NameAndType        #95:#96       // posOrElseStackDepthFun:(Lscala/Option;Lscala/Function1;)Lscala/util/Either;
   #98 = Methodref          #66.#97       // org/scalatest/exceptions/StackDepthExceptionHelper$.posOrElseStackDepthFun:(Lscala/Option;Lscala/Function1;)Lscala/util/Either;
   #99 = Utf8               <init>
  #100 = Utf8               (Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
  #101 = NameAndType        #99:#100      // "<init>":(Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
  #102 = Methodref          #2.#101       // org/scalatest/exceptions/NotAllowedException."<init>":(Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
  #103 = Utf8               setStackTrace
  #104 = Utf8               ([Ljava/lang/StackTraceElement;)V
  #105 = NameAndType        #103:#104     // setStackTrace:([Ljava/lang/StackTraceElement;)V
  #106 = Methodref          #2.#105       // org/scalatest/exceptions/NotAllowedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
  #107 = Utf8               truncated
  #108 = Utf8               e
  #109 = Utf8               Lorg/scalatest/exceptions/NotAllowedException;
  #110 = Utf8               this
  #111 = Utf8               canEqual
  #112 = Utf8               (Ljava/lang/Object;)Z
  #113 = Utf8               other
  #114 = Utf8               Ljava/lang/Object;
  #115 = Utf8               equals
  #116 = NameAndType        #115:#112     // equals:(Ljava/lang/Object;)Z
  #117 = Methodref          #4.#116       // org/scalatest/exceptions/StackDepthException.equals:(Ljava/lang/Object;)Z
  #118 = Utf8               java/lang/Object
  #119 = Class              #118          // java/lang/Object
  #120 = Utf8               hashCode
  #121 = NameAndType        #120:#49      // hashCode:()I
  #122 = Methodref          #4.#121       // org/scalatest/exceptions/StackDepthException.hashCode:()I
  #123 = Utf8               ()Ljava/lang/Throwable;
  #124 = NameAndType        #25:#26       // severedAtStackDepth:()Lorg/scalatest/exceptions/NotAllowedException;
  #125 = Methodref          #2.#124       // org/scalatest/exceptions/NotAllowedException.severedAtStackDepth:()Lorg/scalatest/exceptions/NotAllowedException;
  #126 = Utf8               $anonfun$severedAtStackDepth$1
  #127 = Utf8               (Lorg/scalatest/exceptions/StackDepthException;)I
  #128 = Utf8               x$3
  #129 = Utf8               Lorg/scalatest/exceptions/StackDepthException;
  #130 = Utf8               (Ljava/lang/String;Lscala/Option<Ljava/lang/Throwable;>;Lscala/util/Either<Lorg/scalactic/source/Position;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;>;)V
  #131 = Utf8               cause
  #132 = Utf8               posOrStackDepthFun
  #133 = Utf8               (Ljava/lang/String;)V
  #134 = NameAndType        #99:#133      // "<init>":(Ljava/lang/String;)V
  #135 = Methodref          #20.#134      // org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$1."<init>":(Ljava/lang/String;)V
  #136 = Utf8               (Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
  #137 = NameAndType        #99:#136      // "<init>":(Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
  #138 = Methodref          #4.#137       // org/scalatest/exceptions/StackDepthException."<init>":(Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
  #139 = Utf8               org/scalactic/Requirements$
  #140 = Class              #139          // org/scalactic/Requirements$
  #141 = Utf8               Lorg/scalactic/Requirements$;
  #142 = NameAndType        #29:#141      // MODULE$:Lorg/scalactic/Requirements$;
  #143 = Fieldref           #140.#142     // org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
  #144 = Utf8               requirementsHelper
  #145 = Utf8               ()Lorg/scalactic/Requirements$RequirementsHelper;
  #146 = NameAndType        #144:#145     // requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
  #147 = Methodref          #140.#146     // org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
  #148 = Utf8               java/lang/String
  #149 = Class              #148          // java/lang/String
  #150 = Utf8               NotAllowedException.this.message
  #151 = String             #150          // NotAllowedException.this.message
  #152 = Utf8               NotAllowedException.this.cause
  #153 = String             #152          // NotAllowedException.this.cause
  #154 = Utf8               NotAllowedException.this.posOrStackDepthFun
  #155 = String             #154          // NotAllowedException.this.posOrStackDepthFun
  #156 = Utf8               [Ljava/lang/String;
  #157 = Class              #156          // "[Ljava/lang/String;"
  #158 = NameAndType        #131:#71      // cause:()Lscala/Option;
  #159 = Methodref          #4.#158       // org/scalatest/exceptions/StackDepthException.cause:()Lscala/Option;
  #160 = Utf8               org/scalactic/Prettifier$
  #161 = Class              #160          // org/scalactic/Prettifier$
  #162 = Utf8               Lorg/scalactic/Prettifier$;
  #163 = NameAndType        #29:#162      // MODULE$:Lorg/scalactic/Prettifier$;
  #164 = Fieldref           #161.#163     // org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
  #165 = Utf8               default
  #166 = Utf8               ()Lorg/scalactic/Prettifier;
  #167 = NameAndType        #165:#166     // default:()Lorg/scalactic/Prettifier;
  #168 = Methodref          #161.#167     // org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
  #169 = Utf8               org/scalactic/source/Position
  #170 = Class              #169          // org/scalactic/source/Position
  #171 = String             #5            // NotAllowedException.scala
  #172 = Utf8               Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
  #173 = String             #172          // Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
  #174 = Utf8               (Ljava/lang/String;Ljava/lang/String;I)V
  #175 = NameAndType        #99:#174      // "<init>":(Ljava/lang/String;Ljava/lang/String;I)V
  #176 = Methodref          #170.#175     // org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
  #177 = Utf8               macroRequireNonNull
  #178 = Utf8               ([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #179 = NameAndType        #177:#178     // macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #180 = Methodref          #15.#179      // org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #181 = Utf8               Lscala/Option;
  #182 = Utf8               Lscala/util/Either;
  #183 = Utf8               (Ljava/lang/String;Lscala/Option;Lorg/scalactic/source/Position;)V
  #184 = Utf8               (Ljava/lang/String;Lscala/Option<Ljava/lang/Throwable;>;Lorg/scalactic/source/Position;)V
  #185 = Utf8               pos
  #186 = Utf8               scala/package$
  #187 = Class              #186          // scala/package$
  #188 = Utf8               Lscala/package$;
  #189 = NameAndType        #29:#188      // MODULE$:Lscala/package$;
  #190 = Fieldref           #187.#189     // scala/package$.MODULE$:Lscala/package$;
  #191 = Utf8               Left
  #192 = Utf8               ()Lscala/util/Left$;
  #193 = NameAndType        #191:#192     // Left:()Lscala/util/Left$;
  #194 = Methodref          #187.#193     // scala/package$.Left:()Lscala/util/Left$;
  #195 = Utf8               scala/util/Left$
  #196 = Class              #195          // scala/util/Left$
  #197 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #198 = NameAndType        #91:#197      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #199 = Methodref          #196.#198     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #200 = Utf8               Lorg/scalactic/source/Position;
  #201 = Utf8               (Ljava/lang/String;Lorg/scalactic/source/Position;)V
  #202 = Utf8               (Ljava/lang/String;I)V
  #203 = Utf8               Right
  #204 = Utf8               ()Lscala/util/Right$;
  #205 = NameAndType        #203:#204     // Right:()Lscala/util/Right$;
  #206 = Methodref          #187.#205     // scala/package$.Right:()Lscala/util/Right$;
  #207 = Utf8               (I)V
  #208 = NameAndType        #99:#207      // "<init>":(I)V
  #209 = Methodref          #22.#208      // org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$2."<init>":(I)V
  #210 = Utf8               scala/util/Right$
  #211 = Class              #210          // scala/util/Right$
  #212 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #213 = NameAndType        #91:#212      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #214 = Methodref          #211.#213     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #215 = Utf8               I
  #216 = Utf8               (Ljava/lang/String;Lscala/Function1;)V
  #217 = Utf8               (Ljava/lang/String;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;)V
  #218 = Utf8               failedCodeStackDepthFun
  #219 = Utf8               Lscala/Function1;
  #220 = NameAndType        #126:#127     // $anonfun$severedAtStackDepth$1:(Lorg/scalatest/exceptions/StackDepthException;)I
  #221 = Methodref          #2.#220       // org/scalatest/exceptions/NotAllowedException.$anonfun$severedAtStackDepth$1:(Lorg/scalatest/exceptions/StackDepthException;)I
  #222 = Utf8               scala/runtime/BoxesRunTime
  #223 = Class              #222          // scala/runtime/BoxesRunTime
  #224 = Utf8               boxToInteger
  #225 = Utf8               (I)Ljava/lang/Integer;
  #226 = NameAndType        #224:#225     // boxToInteger:(I)Ljava/lang/Integer;
  #227 = Methodref          #223.#226     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #228 = Utf8               $deserializeLambda$
  #229 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #230 = Utf8               scala/runtime/LambdaDeserialize
  #231 = Class              #230          // scala/runtime/LambdaDeserialize
  #232 = Utf8               bootstrap
  #233 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #234 = NameAndType        #232:#233     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #235 = Methodref          #231.#234     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #236 = MethodHandle       6:#235        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #237 = Utf8               lambdaDeserialize
  #238 = NameAndType        #237:#229     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #239 = InvokeDynamic      #1:#238       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #240 = Utf8               Code
  #241 = Utf8               LineNumberTable
  #242 = Utf8               LocalVariableTable
  #243 = Utf8               MethodParameters
  #244 = Utf8               StackMapTable
  #245 = Utf8               Signature
  #246 = Utf8               InnerClasses
  #247 = Utf8               SourceFile
  #248 = Utf8               RuntimeVisibleAnnotations
  #249 = Utf8               BootstrapMethods
  #250 = Utf8               ScalaInlineInfo
  #251 = Utf8               ScalaSig
{
  private final java.lang.String message;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.scalatest.exceptions.NotAllowedException severedAtStackDepth();
    descriptor: ()Lorg/scalatest/exceptions/NotAllowedException;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=1
         0: getstatic     #32                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         3: getstatic     #37                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #41                 // Method getStackTrace:()[Ljava/lang/StackTraceElement;
        10: checkcast     #43                 // class "[Ljava/lang/Object;"
        13: invokevirtual #47                 // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        16: aload_0
        17: invokevirtual #51                 // Method failedCodeStackDepth:()I
        20: invokevirtual #55                 // Method scala/collection/ArrayOps$.drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        23: checkcast     #57                 // class "[Ljava/lang/StackTraceElement;"
        26: astore_1
        27: new           #2                  // class org/scalatest/exceptions/NotAllowedException
        30: dup
        31: aload_0
        32: getfield      #59                 // Field message:Ljava/lang/String;
        35: getstatic     #64                 // Field scala/None$.MODULE$:Lscala/None$;
        38: getstatic     #69                 // Field org/scalatest/exceptions/StackDepthExceptionHelper$.MODULE$:Lorg/scalatest/exceptions/StackDepthExceptionHelper$;
        41: aload_0
        42: invokevirtual #73                 // Method position:()Lscala/Option;
        45: invokedynamic #94,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        50: invokevirtual #98                 // Method org/scalatest/exceptions/StackDepthExceptionHelper$.posOrElseStackDepthFun:(Lscala/Option;Lscala/Function1;)Lscala/util/Either;
        53: invokespecial #102                // Method "<init>":(Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
        56: astore_2
        57: aload_2
        58: aload_1
        59: invokevirtual #106                // Method setStackTrace:([Ljava/lang/StackTraceElement;)V
        62: aload_2
        63: areturn
      LineNumberTable:
        line 102: 0
        line 103: 27
        line 104: 57
        line 105: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      36     1 truncated   [Ljava/lang/StackTraceElement;
           57       6     2     e   Lorg/scalatest/exceptions/NotAllowedException;
            0      64     0  this   Lorg/scalatest/exceptions/NotAllowedException;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/exceptions/NotAllowedException
         4: ireturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/exceptions/NotAllowedException;
            0       5     1 other   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      other                          final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #2                  // class org/scalatest/exceptions/NotAllowedException
         6: ifeq          25
         9: aload_3
        10: checkcast     #2                  // class org/scalatest/exceptions/NotAllowedException
        13: astore        4
        15: aload_0
        16: aload         4
        18: invokespecial #117                // Method org/scalatest/exceptions/StackDepthException.equals:(Ljava/lang/Object;)Z
        21: istore_2
        22: goto          33
        25: goto          28
        28: iconst_0
        29: istore_2
        30: goto          33
        33: iload_2
        34: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/exceptions/NotAllowedException, class java/lang/Object, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 120: 0
        line 121: 2
        line 122: 28
        line 120: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/scalatest/exceptions/NotAllowedException;
            0      35     1 other   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      other                          final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #122                // Method org/scalatest/exceptions/StackDepthException.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/exceptions/NotAllowedException;

  public java.lang.Throwable severedAtStackDepth();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #125                // Method severedAtStackDepth:()Lorg/scalatest/exceptions/NotAllowedException;
         4: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/exceptions/NotAllowedException;

  public static final int $anonfun$severedAtStackDepth$1(org.scalatest.exceptions.StackDepthException);
    descriptor: (Lorg/scalatest/exceptions/StackDepthException;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   x$3   Lorg/scalatest/exceptions/StackDepthException;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public org.scalatest.exceptions.NotAllowedException(java.lang.String, scala.Option<java.lang.Throwable>, scala.util.Either<org.scalactic.source.Position, scala.Function1<org.scalatest.exceptions.StackDepthException, java.lang.Object>>);
    descriptor: (Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #59                 // Field message:Ljava/lang/String;
         5: aload_0
         6: new           #20                 // class org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$1
         9: dup
        10: aload_1
        11: invokespecial #135                // Method org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$1."<init>":(Ljava/lang/String;)V
        14: aload_2
        15: aload_3
        16: invokespecial #138                // Method org/scalatest/exceptions/StackDepthException."<init>":(Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
        19: getstatic     #143                // Field org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
        22: invokevirtual #147                // Method org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
        25: iconst_3
        26: anewarray     #149                // class java/lang/String
        29: dup
        30: iconst_0
        31: ldc           #151                // String NotAllowedException.this.message
        33: aastore
        34: dup
        35: iconst_1
        36: ldc           #153                // String NotAllowedException.this.cause
        38: aastore
        39: dup
        40: iconst_2
        41: ldc           #155                // String NotAllowedException.this.posOrStackDepthFun
        43: aastore
        44: checkcast     #43                 // class "[Ljava/lang/Object;"
        47: checkcast     #157                // class "[Ljava/lang/String;"
        50: iconst_3
        51: anewarray     #119                // class java/lang/Object
        54: dup
        55: iconst_0
        56: aload_1
        57: aastore
        58: dup
        59: iconst_1
        60: aload_0
        61: invokespecial #159                // Method org/scalatest/exceptions/StackDepthException.cause:()Lscala/Option;
        64: aastore
        65: dup
        66: iconst_2
        67: aload_3
        68: aastore
        69: checkcast     #43                 // class "[Ljava/lang/Object;"
        72: getstatic     #164                // Field org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
        75: invokevirtual #168                // Method org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
        78: new           #170                // class org/scalactic/source/Position
        81: dup
        82: ldc           #171                // String NotAllowedException.scala
        84: ldc           #173                // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        86: bipush        44
        88: invokespecial #176                // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        91: invokevirtual #180                // Method org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
        94: return
      LineNumberTable:
        line 39: 0
        line 42: 5
        line 44: 19
        line 38: 94
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      95     0  this   Lorg/scalatest/exceptions/NotAllowedException;
            0      95     1 message   Ljava/lang/String;
            0      95     2 cause   Lscala/Option;
            0      95     3 posOrStackDepthFun   Lscala/util/Either;
    Signature: #130                         // (Ljava/lang/String;Lscala/Option<Ljava/lang/Throwable;>;Lscala/util/Either<Lorg/scalactic/source/Position;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;>;)V
    MethodParameters:
      Name                           Flags
      message                        final
      cause                          final
      posOrStackDepthFun             final

  public org.scalatest.exceptions.NotAllowedException(java.lang.String, scala.Option<java.lang.Throwable>, org.scalactic.source.Position);
    descriptor: (Ljava/lang/String;Lscala/Option;Lorg/scalactic/source/Position;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: getstatic     #190                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #194                // Method scala/package$.Left:()Lscala/util/Left$;
         9: aload_3
        10: invokevirtual #199                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        13: invokespecial #102                // Method "<init>":(Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
        16: return
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/scalatest/exceptions/NotAllowedException;
            0      17     1 message   Ljava/lang/String;
            0      17     2 cause   Lscala/Option;
            0      17     3   pos   Lorg/scalactic/source/Position;
    Signature: #184                         // (Ljava/lang/String;Lscala/Option<Ljava/lang/Throwable;>;Lorg/scalactic/source/Position;)V
    MethodParameters:
      Name                           Flags
      message                        final
      cause                          final
      pos                            final

  public org.scalatest.exceptions.NotAllowedException(java.lang.String, org.scalactic.source.Position);
    descriptor: (Ljava/lang/String;Lorg/scalactic/source/Position;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #64                 // Field scala/None$.MODULE$:Lscala/None$;
         5: getstatic     #190                // Field scala/package$.MODULE$:Lscala/package$;
         8: invokevirtual #194                // Method scala/package$.Left:()Lscala/util/Left$;
        11: aload_2
        12: invokevirtual #199                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        15: invokespecial #102                // Method "<init>":(Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
        18: return
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/scalatest/exceptions/NotAllowedException;
            0      19     1 message   Ljava/lang/String;
            0      19     2   pos   Lorg/scalactic/source/Position;
    MethodParameters:
      Name                           Flags
      message                        final
      pos                            final

  public org.scalatest.exceptions.NotAllowedException(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #64                 // Field scala/None$.MODULE$:Lscala/None$;
         5: getstatic     #190                // Field scala/package$.MODULE$:Lscala/package$;
         8: invokevirtual #206                // Method scala/package$.Right:()Lscala/util/Right$;
        11: new           #22                 // class org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$2
        14: dup
        15: iload_2
        16: invokespecial #209                // Method org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$2."<init>":(I)V
        19: invokevirtual #214                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        22: invokespecial #102                // Method "<init>":(Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
        25: return
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/scalatest/exceptions/NotAllowedException;
            0      26     1 message   Ljava/lang/String;
            0      26     2 failedCodeStackDepth   I
    MethodParameters:
      Name                           Flags
      message                        final
      failedCodeStackDepth           final

  public org.scalatest.exceptions.NotAllowedException(java.lang.String, scala.Function1<org.scalatest.exceptions.StackDepthException, java.lang.Object>);
    descriptor: (Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #64                 // Field scala/None$.MODULE$:Lscala/None$;
         5: getstatic     #190                // Field scala/package$.MODULE$:Lscala/package$;
         8: invokevirtual #206                // Method scala/package$.Right:()Lscala/util/Right$;
        11: aload_2
        12: invokevirtual #214                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        15: invokespecial #102                // Method "<init>":(Ljava/lang/String;Lscala/Option;Lscala/util/Either;)V
        18: return
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/scalatest/exceptions/NotAllowedException;
            0      19     1 message   Ljava/lang/String;
            0      19     2 failedCodeStackDepthFun   Lscala/Function1;
    Signature: #217                         // (Ljava/lang/String;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      message                        final
      failedCodeStackDepthFun        final

  public static final java.lang.Object $anonfun$severedAtStackDepth$1$adapted(org.scalatest.exceptions.StackDepthException);
    descriptor: (Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #221                // Method $anonfun$severedAtStackDepth$1:(Lorg/scalatest/exceptions/StackDepthException;)I
         4: invokestatic  #227                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$3   Lorg/scalatest/exceptions/StackDepthException;
    MethodParameters:
      Name                           Flags
      x$3                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #239,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #15 of #17;          // RequirementsHelper=class org/scalactic/Requirements$RequirementsHelper of class org/scalactic/Requirements
  public final #20;                       // class org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$1
  public final #22;                       // class org/scalatest/exceptions/NotAllowedException$$anonfun$$lessinit$greater$2
SourceFile: "NotAllowedException.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005A4A!\u0004\b\u0001+!A!\u0004\u0001B\u0001B\u0003%1\u0004C\u0005)\u0001\t\u0005\t\u0015!\u0003*m!Aq\u0007\u0001B\u0001B\u0003%\u0001\bC\u0003J\u0001\u0011\u0005!\nC\u0003J\u0001\u0011\u0005q\nC\u0003J\u0001\u0011\u0005A\u000bC\u0003J\u0001\u0011\u0005q\u000bC\u0003J\u0001\u0011\u00051\fC\u0003`\u0001\u0011\u0005\u0001\rC\u0003b\u0001\u0011\u0005#\rC\u0003l\u0001\u0011\u0005C\u000eC\u0003o\u0001\u0011\u0005sNA\nO_R\fE\u000e\\8xK\u0012,\u0005pY3qi&|gN\u0003\u0002\u0010!\u0005QQ\r_2faRLwN\\:\u000b\u0005E\u0011\u0012!C:dC2\fG/Z:u\u0015\u0005\u0019\u0012aA8sO\u000e\u00011C\u0001\u0001\u0017!\t9\u0002$D\u0001\u000f\u0013\tIbBA\nTi\u0006\u001c7\u000eR3qi\",\u0005pY3qi&|g.A\u0004nKN\u001c\u0018mZ3\u0011\u0005q)cBA\u000f$!\tq\u0012%D\u0001 \u0015\t\u0001C#\u0001\u0004=e>|GO\u0010\u0006\u0002E\u0005)1oY1mC&\u0011A%I\u0001\u0007!J,G-\u001a4\n\u0005\u0019:#AB*ue&twM\u0003\u0002%C\u0005)1-Y;tKB\u0019!fK\u0017\u000e\u0003\u0005J!\u0001L\u0011\u0003\r=\u0003H/[8o!\tq3G\u0004\u00020c9\u0011a\u0004M\u0005\u0002E%\u0011!\'I\u0001\ba\u0006\u001c7.Y4f\u0013\t!TGA\u0005UQJ|w/\u00192mK*\u0011!\'I\u0005\u0003Qa\t!\u0003]8t\u001fJ\u001cF/Y2l\t\u0016\u0004H\u000f\u001b$v]B!a&O\u001eD\u0013\tQTG\u0001\u0004FSRDWM\u001d\t\u0003y\u0005k\u0011!\u0010\u0006\u0003}}\naa]8ve\u000e,\'B\u0001!\u0013\u0003%\u00198-\u00197bGRL7-\u0003\u0002C{\tA\u0001k\\:ji&|g\u000e\u0005\u0003+\tZ1\u0015BA#\"\u0005%1UO\\2uS>t\u0017\u0007\u0005\u0002+\u000f&\u0011\u0001*\t\u0002\u0004\u0013:$\u0018A\u0002\u001fj]&$h\b\u0006\u0003L\u00196s\u0005CA\f\u0001\u0011\u0015QB\u00011\u0001\u001c\u0011\u0015AC\u00011\u0001*\u0011\u00159D\u00011\u00019)\u0011Y\u0005+\u0015*\t\u000bi)\u0001\u0019A\u000e\t\u000b!*\u0001\u0019A\u0015\t\u000bM+\u0001\u0019A\u001e\u0002\u0007A|7\u000fF\u0002L+ZCQA\u0007\u0004A\u0002mAQa\u0015\u0004A\u0002m\"2a\u0013-Z\u0011\u0015Qr\u00011\u0001\u001c\u0011\u0015Qv\u00011\u0001G\u0003Q1\u0017-\u001b7fI\u000e{G-Z*uC\u000e\\G)\u001a9uQR\u00191\nX/\t\u000biA\u0001\u0019A\u000e\t\u000byC\u0001\u0019A\"\u0002/\u0019\f\u0017\u000e\\3e\u0007>$Wm\u0015;bG.$U\r\u001d;i\rVt\u0017aE:fm\u0016\u0014X\rZ!u\'R\f7m\u001b#faRDW#A&\u0002\u0011\r\fg.R9vC2$\"a\u00194\u0011\u0005)\"\u0017BA3\"\u0005\u001d\u0011un\u001c7fC:DQa\u001a\u0006A\u0002!\fQa\u001c;iKJ\u0004\"AK5\n\u0005)\f#aA!os\u00061Q-];bYN$\"aY7\t\u000b\u001d\\\u0001\u0019\u00015\u0002\u0011!\f7\u000f[\"pI\u0016$\u0012A\u0012"
    )
BootstrapMethods:
  0: #90 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #75 (Ljava/lang/Object;)Ljava/lang/Object;
      #80 REF_invokeStatic org/scalatest/exceptions/NotAllowedException.$anonfun$severedAtStackDepth$1$adapted:(Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
      #81 (Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
      #82 5
      #83 1
      #81 (Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
  1: #236 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 REF_invokeStatic org/scalatest/exceptions/NotAllowedException.$anonfun$severedAtStackDepth$1$adapted:(Lorg/scalatest/exceptions/StackDepthException;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x40 (unknown attribute)
   01 00 00 0C 00 7E 00 7F 01 00 4C 00 4D 01 00 63
   00 CA 00 00 63 00 C9 00 00 63 00 D8 00 00 63 00
   B7 00 00 63 00 64 00 00 6F 00 70 00 00 73 00 70
   00 00 78 00 31 00 00 19 00 7B 00 00 19 00 1A 00

  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
