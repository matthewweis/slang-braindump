Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/PathChunk$SymbolPathChunk.class
  Last modified May 29, 2022; size 1527 bytes
  SHA-256 checksum 506830249c96b30c158bd8323b27335201b56fd008b9a65089e39a1a975ae120
  Compiled from "Path.scala"
public class os.PathChunk$SymbolPathChunk implements os.PathChunk
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/PathChunk$SymbolPathChunk
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               os/PathChunk$SymbolPathChunk
   #2 = Class              #1             // os/PathChunk$SymbolPathChunk
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               os/PathChunk
   #6 = Class              #5             // os/PathChunk
   #7 = Utf8               Path.scala
   #8 = Utf8               SymbolPathChunk
   #9 = Utf8               s
  #10 = Utf8               Lscala/Symbol;
  #11 = Utf8               segments
  #12 = Utf8               ()Lscala/collection/immutable/Seq;
  #13 = Utf8               ()Lscala/collection/immutable/Seq<Ljava/lang/String;>;
  #14 = Utf8               scala/package$
  #15 = Class              #14            // scala/package$
  #16 = Utf8               MODULE$
  #17 = Utf8               Lscala/package$;
  #18 = NameAndType        #16:#17        // MODULE$:Lscala/package$;
  #19 = Fieldref           #15.#18        // scala/package$.MODULE$:Lscala/package$;
  #20 = Utf8               Seq
  #21 = Utf8               ()Lscala/collection/immutable/Seq$;
  #22 = NameAndType        #20:#21        // Seq:()Lscala/collection/immutable/Seq$;
  #23 = Methodref          #15.#22        // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #24 = Utf8               scala/runtime/ScalaRunTime$
  #25 = Class              #24            // scala/runtime/ScalaRunTime$
  #26 = Utf8               Lscala/runtime/ScalaRunTime$;
  #27 = NameAndType        #16:#26        // MODULE$:Lscala/runtime/ScalaRunTime$;
  #28 = Fieldref           #25.#27        // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #29 = Utf8               java/lang/String
  #30 = Class              #29            // java/lang/String
  #31 = NameAndType        #9:#10         // s:Lscala/Symbol;
  #32 = Fieldref           #2.#31         // os/PathChunk$SymbolPathChunk.s:Lscala/Symbol;
  #33 = Utf8               scala/Symbol
  #34 = Class              #33            // scala/Symbol
  #35 = Utf8               name
  #36 = Utf8               ()Ljava/lang/String;
  #37 = NameAndType        #35:#36        // name:()Ljava/lang/String;
  #38 = Methodref          #34.#37        // scala/Symbol.name:()Ljava/lang/String;
  #39 = Utf8               [Ljava/lang/Object;
  #40 = Class              #39            // "[Ljava/lang/Object;"
  #41 = Utf8               wrapRefArray
  #42 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #43 = NameAndType        #41:#42        // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #44 = Methodref          #25.#43        // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #45 = Utf8               scala/collection/immutable/Seq$
  #46 = Class              #45            // scala/collection/immutable/Seq$
  #47 = Utf8               apply
  #48 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #49 = NameAndType        #47:#48        // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #50 = Methodref          #46.#49        // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #51 = Utf8               scala/collection/immutable/Seq
  #52 = Class              #51            // scala/collection/immutable/Seq
  #53 = Utf8               this
  #54 = Utf8               Los/PathChunk$SymbolPathChunk;
  #55 = Utf8               ups
  #56 = Utf8               ()I
  #57 = Utf8               toString
  #58 = Utf8               <init>
  #59 = Utf8               (Lscala/Symbol;)V
  #60 = Utf8               ()V
  #61 = NameAndType        #58:#60        // "<init>":()V
  #62 = Methodref          #4.#61         // java/lang/Object."<init>":()V
  #63 = Utf8               os/BasePath$
  #64 = Class              #63            // os/BasePath$
  #65 = Utf8               Los/BasePath$;
  #66 = NameAndType        #16:#65        // MODULE$:Los/BasePath$;
  #67 = Fieldref           #64.#66        // os/BasePath$.MODULE$:Los/BasePath$;
  #68 = Utf8               checkSegment
  #69 = Utf8               (Ljava/lang/String;)V
  #70 = NameAndType        #68:#69        // checkSegment:(Ljava/lang/String;)V
  #71 = Methodref          #64.#70        // os/BasePath$.checkSegment:(Ljava/lang/String;)V
  #72 = Utf8               Code
  #73 = Utf8               LineNumberTable
  #74 = Utf8               LocalVariableTable
  #75 = Utf8               Signature
  #76 = Utf8               MethodParameters
  #77 = Utf8               InnerClasses
  #78 = Utf8               SourceFile
  #79 = Utf8               ScalaInlineInfo
  #80 = Utf8               Scala
{
  private final scala.Symbol s;
    descriptor: Lscala/Symbol;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.collection.immutable.Seq<java.lang.String> segments();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: getstatic     #19                 // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #23                 // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #28                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_1
        10: anewarray     #30                 // class java/lang/String
        13: dup
        14: iconst_0
        15: aload_0
        16: getfield      #32                 // Field s:Lscala/Symbol;
        19: invokevirtual #38                 // Method scala/Symbol.name:()Ljava/lang/String;
        22: aastore
        23: checkcast     #40                 // class "[Ljava/lang/Object;"
        26: invokevirtual #44                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        29: invokevirtual #50                 // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        32: checkcast     #52                 // class scala/collection/immutable/Seq
        35: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Los/PathChunk$SymbolPathChunk;
    Signature: #13                          // ()Lscala/collection/immutable/Seq<Ljava/lang/String;>;

  public int ups();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/PathChunk$SymbolPathChunk;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #32                 // Field s:Lscala/Symbol;
         4: invokevirtual #38                 // Method scala/Symbol.name:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/PathChunk$SymbolPathChunk;

  public os.PathChunk$SymbolPathChunk(scala.Symbol);
    descriptor: (Lscala/Symbol;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #32                 // Field s:Lscala/Symbol;
         5: aload_0
         6: invokespecial #62                 // Method java/lang/Object."<init>":()V
         9: getstatic     #67                 // Field os/BasePath$.MODULE$:Los/BasePath$;
        12: aload_1
        13: invokevirtual #38                 // Method scala/Symbol.name:()Ljava/lang/String;
        16: invokevirtual #71                 // Method os/BasePath$.checkSegment:(Ljava/lang/String;)V
        19: return
      LineNumberTable:
        line 26: 0
        line 27: 9
        line 26: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Los/PathChunk$SymbolPathChunk;
            0      20     1     s   Lscala/Symbol;
    MethodParameters:
      Name                           Flags
      s                              final
}
InnerClasses:
  public static #8= #2 of #6;             // SymbolPathChunk=class os/PathChunk$SymbolPathChunk of class os/PathChunk
SourceFile: "Path.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 3A 00 3B 00 00 0B 00 0C 00 00 39
   00 24 00 00 37 00 38 00
  Scala: length = 0x0 (unknown attribute)

