Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Indexable$Isz.class
  Last modified May 29, 2022; size 5952 bytes
  SHA-256 checksum dba7de4f5efa84371421d6f0c654bff84891506fc637a4955484a6bd9666a9ef
  Compiled from "Indexable.scala"
public final class org.sireum.Indexable$Isz<T extends java.lang.Object> extends java.lang.Object implements org.sireum.Indexable<T>, org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Indexable$Isz
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 4, methods: 20, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Indexable$Isz
    #2 = Class              #1            // org/sireum/Indexable$Isz
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Indexable<TT;>;Lorg/sireum/DatatypeSig;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/Indexable
    #7 = Class              #6            // org/sireum/Indexable
    #8 = Utf8               org/sireum/DatatypeSig
    #9 = Class              #8            // org/sireum/DatatypeSig
   #10 = Utf8               Indexable.scala
   #11 = Utf8               Isz
   #12 = Utf8               hashCode
   #13 = Utf8               I
   #14 = Utf8               $content
   #15 = Utf8               Lscala/collection/immutable/Seq;
   #16 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #17 = Utf8               _is
   #18 = Utf8               Lorg/sireum/IS;
   #19 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
   #20 = Utf8               bitmap$0
   #21 = Utf8               B
   #22 = Utf8               hash
   #23 = Utf8               ()Lorg/sireum/Z;
   #24 = Utf8               hash$
   #25 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #26 = NameAndType        #24:#25       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #27 = InterfaceMethodref #9.#26        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #28 = Utf8               this
   #29 = Utf8               Lorg/sireum/Indexable$Isz;
   #30 = Utf8               $cannotMixImmutableAndMutable
   #31 = Utf8               ()Lscala/runtime/Nothing$;
   #32 = Utf8               org/sireum/Immutable
   #33 = Class              #32           // org/sireum/Immutable
   #34 = Utf8               $cannotMixImmutableAndMutable$
   #35 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #36 = NameAndType        #34:#35       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #37 = InterfaceMethodref #33.#36       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #38 = Utf8               $hasEquals
   #39 = Utf8               ()Z
   #40 = Utf8               $hasEquals$
   #41 = Utf8               (Lorg/sireum/Immutable;)Z
   #42 = NameAndType        #40:#41       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #43 = InterfaceMethodref #33.#42       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #44 = Utf8               $hasString
   #45 = Utf8               $hasString$
   #46 = NameAndType        #45:#41       // $hasString$:(Lorg/sireum/Immutable;)Z
   #47 = InterfaceMethodref #33.#46       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #48 = Utf8               $clone
   #49 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #50 = Utf8               org/sireum/$internal/ImmutableMarker
   #51 = Class              #50           // org/sireum/$internal/ImmutableMarker
   #52 = Utf8               $clone$
   #53 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #54 = NameAndType        #52:#53       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #55 = InterfaceMethodref #51.#54       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #56 = Utf8               is
   #57 = Utf8               ()Lorg/sireum/IS;
   #58 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
   #59 = NameAndType        #17:#18       // _is:Lorg/sireum/IS;
   #60 = Fieldref           #2.#59        // org/sireum/Indexable$Isz._is:Lorg/sireum/IS;
   #61 = Utf8               getIs
   #62 = Utf8               toString
   #63 = Utf8               ()Ljava/lang/String;
   #64 = NameAndType        #44:#39       // $hasString:()Z
   #65 = Methodref          #2.#64        // org/sireum/Indexable$Isz.$hasString:()Z
   #66 = Utf8               string$
   #67 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #68 = NameAndType        #66:#67       // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #69 = InterfaceMethodref #9.#68        // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #70 = Utf8               java/lang/StringBuilder
   #71 = Class              #70           // java/lang/StringBuilder
   #72 = Utf8               <init>
   #73 = Utf8               ()V
   #74 = NameAndType        #72:#73       // "<init>":()V
   #75 = Methodref          #71.#74       // java/lang/StringBuilder."<init>":()V
   #76 = String             #11           // Isz
   #77 = Utf8               append
   #78 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #79 = NameAndType        #77:#78       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #80 = Methodref          #71.#79       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #81 = Utf8               (C)Ljava/lang/StringBuilder;
   #82 = NameAndType        #77:#81       // append:(C)Ljava/lang/StringBuilder;
   #83 = Methodref          #71.#82       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #84 = Utf8               org/sireum/String$
   #85 = Class              #84           // org/sireum/String$
   #86 = Utf8               MODULE$
   #87 = Utf8               Lorg/sireum/String$;
   #88 = NameAndType        #86:#87       // MODULE$:Lorg/sireum/String$;
   #89 = Fieldref           #85.#88       // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #90 = NameAndType        #56:#57       // is:()Lorg/sireum/IS;
   #91 = Methodref          #2.#90        // org/sireum/Indexable$Isz.is:()Lorg/sireum/IS;
   #92 = Utf8               escape
   #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #94 = NameAndType        #92:#93       // escape:(Ljava/lang/Object;)Ljava/lang/String;
   #95 = Methodref          #85.#94       // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
   #96 = NameAndType        #62:#63       // toString:()Ljava/lang/String;
   #97 = Methodref          #71.#96       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #98 = Utf8               sb
   #99 = Utf8               Ljava/lang/StringBuilder;
  #100 = Utf8               java/lang/String
  #101 = Class              #100          // java/lang/String
  #102 = Utf8               string
  #103 = Methodref          #2.#96        // org/sireum/Indexable$Isz.toString:()Ljava/lang/String;
  #104 = Utf8               apply
  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #106 = NameAndType        #104:#105     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #107 = Methodref          #85.#106      // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #108 = Utf8               hashCode$lzycompute
  #109 = Utf8               ()I
  #110 = NameAndType        #20:#21       // bitmap$0:B
  #111 = Fieldref           #2.#110       // org/sireum/Indexable$Isz.bitmap$0:B
  #112 = NameAndType        #38:#39       // $hasEquals:()Z
  #113 = Methodref          #2.#112       // org/sireum/Indexable$Isz.$hasEquals:()Z
  #114 = NameAndType        #12:#109      // hashCode:()I
  #115 = Methodref          #5.#114       // java/lang/Object.hashCode:()I
  #116 = Utf8               scala/package$
  #117 = Class              #116          // scala/package$
  #118 = Utf8               Lscala/package$;
  #119 = NameAndType        #86:#118      // MODULE$:Lscala/package$;
  #120 = Fieldref           #117.#119     // scala/package$.MODULE$:Lscala/package$;
  #121 = Utf8               Seq
  #122 = Utf8               ()Lscala/collection/immutable/Seq$;
  #123 = NameAndType        #121:#122     // Seq:()Lscala/collection/immutable/Seq$;
  #124 = Methodref          #117.#123     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #125 = Utf8               scala/runtime/ScalaRunTime$
  #126 = Class              #125          // scala/runtime/ScalaRunTime$
  #127 = Utf8               Lscala/runtime/ScalaRunTime$;
  #128 = NameAndType        #86:#127      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #129 = Fieldref           #126.#128     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #130 = Utf8               getClass
  #131 = Utf8               ()Ljava/lang/Class;
  #132 = NameAndType        #130:#131     // getClass:()Ljava/lang/Class;
  #133 = Methodref          #2.#132       // org/sireum/Indexable$Isz.getClass:()Ljava/lang/Class;
  #134 = Utf8               java/lang/Class
  #135 = Class              #134          // java/lang/Class
  #136 = Utf8               getName
  #137 = NameAndType        #136:#63      // getName:()Ljava/lang/String;
  #138 = Methodref          #135.#137     // java/lang/Class.getName:()Ljava/lang/String;
  #139 = Utf8               wrapRefArray
  #140 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #141 = NameAndType        #139:#140     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #142 = Methodref          #126.#141     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #143 = Utf8               scala/collection/immutable/Seq$
  #144 = Class              #143          // scala/collection/immutable/Seq$
  #145 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #146 = NameAndType        #104:#145     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #147 = Methodref          #144.#146     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #148 = Utf8               scala/collection/Seq
  #149 = Class              #148          // scala/collection/Seq
  #150 = InterfaceMethodref #149.#114     // scala/collection/Seq.hashCode:()I
  #151 = NameAndType        #12:#13       // hashCode:I
  #152 = Fieldref           #2.#151       // org/sireum/Indexable$Isz.hashCode:I
  #153 = Utf8               java/lang/Throwable
  #154 = Class              #153          // java/lang/Throwable
  #155 = NameAndType        #108:#109     // hashCode$lzycompute:()I
  #156 = Methodref          #2.#155       // org/sireum/Indexable$Isz.hashCode$lzycompute:()I
  #157 = Utf8               equals
  #158 = Utf8               (Ljava/lang/Object;)Z
  #159 = Utf8               o
  #160 = NameAndType        #157:#158     // equals:(Ljava/lang/Object;)Z
  #161 = Methodref          #5.#160       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #162 = Methodref          #2.#114       // org/sireum/Indexable$Isz.hashCode:()I
  #163 = Utf8               Ljava/lang/Object;
  #164 = Utf8               org/sireum/IS
  #165 = Class              #164          // org/sireum/IS
  #166 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Indexable$Isz;
  #167 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;TT;>;)Lorg/sireum/Indexable$Isz<TT;>;
  #168 = Utf8               (Lorg/sireum/IS;)V
  #169 = NameAndType        #72:#168      // "<init>":(Lorg/sireum/IS;)V
  #170 = Methodref          #2.#169       // org/sireum/Indexable$Isz."<init>":(Lorg/sireum/IS;)V
  #171 = Utf8               apply$default$1
  #172 = Utf8               $content$lzycompute
  #173 = Utf8               ()Lscala/collection/immutable/Seq;
  #174 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #175 = Utf8               scala/Tuple2
  #176 = Class              #175          // scala/Tuple2
  #177 = Utf8               type
  #178 = String             #177          // type
  #179 = Utf8               List
  #180 = Utf8               ()Lscala/collection/immutable/List$;
  #181 = NameAndType        #179:#180     // List:()Lscala/collection/immutable/List$;
  #182 = Methodref          #117.#181     // scala/package$.List:()Lscala/collection/immutable/List$;
  #183 = Utf8               org
  #184 = String             #183          // org
  #185 = Utf8               sireum
  #186 = String             #185          // sireum
  #187 = Utf8               [Ljava/lang/Object;
  #188 = Class              #187          // "[Ljava/lang/Object;"
  #189 = Utf8               scala/collection/immutable/List$
  #190 = Class              #189          // scala/collection/immutable/List$
  #191 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #192 = NameAndType        #104:#191     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #193 = Methodref          #190.#192     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #194 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #195 = NameAndType        #72:#194      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #196 = Methodref          #176.#195     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #197 = String             #56           // is
  #198 = Utf8               scala/collection/immutable/Seq
  #199 = Class              #198          // scala/collection/immutable/Seq
  #200 = NameAndType        #14:#15       // $content:Lscala/collection/immutable/Seq;
  #201 = Fieldref           #2.#200       // org/sireum/Indexable$Isz.$content:Lscala/collection/immutable/Seq;
  #202 = NameAndType        #172:#173     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #203 = Methodref          #2.#202       // org/sireum/Indexable$Isz.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #204 = Utf8               at
  #205 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #206 = Utf8               (Lorg/sireum/Z;)TT;
  #207 = Utf8               i
  #208 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #209 = NameAndType        #104:#208     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #210 = Methodref          #165.#209     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #211 = Utf8               Lorg/sireum/Z;
  #212 = Utf8               has
  #213 = Utf8               (Lorg/sireum/Z;)Z
  #214 = Utf8               size
  #215 = NameAndType        #214:#23      // size:()Lorg/sireum/Z;
  #216 = Methodref          #165.#215     // org/sireum/IS.size:()Lorg/sireum/Z;
  #217 = Utf8               org/sireum/Z
  #218 = Class              #217          // org/sireum/Z
  #219 = Utf8               $less
  #220 = NameAndType        #219:#213     // $less:(Lorg/sireum/Z;)Z
  #221 = InterfaceMethodref #218.#220     // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #222 = Utf8               ()Ljava/lang/Object;
  #223 = NameAndType        #48:#49       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #224 = Methodref          #2.#223       // org/sireum/Indexable$Isz.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #225 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;TT;>;)V
  #226 = Utf8               __is
  #227 = Methodref          #5.#74        // java/lang/Object."<init>":()V
  #228 = Utf8               $init$
  #229 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #230 = NameAndType        #228:#229     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #231 = InterfaceMethodref #51.#230      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #232 = Utf8               (Lorg/sireum/Immutable;)V
  #233 = NameAndType        #228:#232     // $init$:(Lorg/sireum/Immutable;)V
  #234 = InterfaceMethodref #33.#233      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #235 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #236 = NameAndType        #228:#235     // $init$:(Lorg/sireum/DatatypeSig;)V
  #237 = InterfaceMethodref #9.#236       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #238 = Utf8               Signature
  #239 = Utf8               Code
  #240 = Utf8               LineNumberTable
  #241 = Utf8               LocalVariableTable
  #242 = Utf8               StackMapTable
  #243 = Utf8               MethodParameters
  #244 = Utf8               InnerClasses
  #245 = Utf8               SourceFile
  #246 = Utf8               ScalaInlineInfo
  #247 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #16                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.IS<org.sireum.Z, T> _is;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #19                          // Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #27                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #37                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #47                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #55                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;

  public org.sireum.IS<org.sireum.Z, T> is();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #60                 // Field _is:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;
    Signature: #58                          // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public org.sireum.IS<org.sireum.Z, T> getIs();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #60                 // Field _is:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;
    Signature: #58                          // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #65                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #69                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          62
        14: new           #71                 // class java/lang/StringBuilder
        17: dup
        18: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #76                 // String Isz
        25: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #83                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #89                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
        44: invokevirtual #95                 // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: bipush        41
        54: invokevirtual #83                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        62: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 111 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      40     1    sb   Ljava/lang/StringBuilder;
            0      63     0  this   Lorg/sireum/Indexable$Isz;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #65                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #69                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #89                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #103                // Method toString:()Ljava/lang/String;
        21: invokevirtual #107                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/Indexable$Isz;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     88
        15: aload_0
        16: aload_0
        17: invokevirtual #113                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #115                // Method java/lang/Object.hashCode:()I
        27: goto          74
        30: getstatic     #120                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #124                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #129                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_2
        40: anewarray     #5                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #133                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #138                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
        59: aastore
        60: invokevirtual #142                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        63: invokevirtual #147                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        66: checkcast     #149                // class scala/collection/Seq
        69: invokeinterface #150,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        74: putfield      #152                // Field hashCode:I
        77: aload_0
        78: aload_0
        79: getfield      #111                // Field bitmap$0:B
        82: iconst_1
        83: ior
        84: i2b
        85: putfield      #111                // Field bitmap$0:B
        88: aload_1
        89: monitorexit
        90: goto          96
        93: aload_1
        94: monitorexit
        95: athrow
        96: aload_0
        97: getfield      #152                // Field hashCode:I
       100: ireturn
      Exception table:
         from    to  target type
             4    88    93   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/Indexable$Isz, class org/sireum/Indexable$Isz ]
          stack = [ class org/sireum/Indexable$Isz ]
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class org/sireum/Indexable$Isz, class org/sireum/Indexable$Isz ]
          stack = [ class org/sireum/Indexable$Isz, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     101     0  this   Lorg/sireum/Indexable$Isz;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #156                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #152                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Indexable$Isz;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #113                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #161                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/Indexable$Isz
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/Indexable$Isz
        37: astore        4
        39: aload_0
        40: invokevirtual #162                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #162                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
        59: aload         4
        61: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #161                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/Indexable$Isz ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Indexable$Isz, class java/lang/Object, top, class java/lang/Object, class org/sireum/Indexable$Isz, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Indexable$Isz, class java/lang/Object, top, class java/lang/Object, class org/sireum/Indexable$Isz ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/Indexable$Isz, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Indexable$Isz, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/Indexable$Isz;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Indexable$Isz<T> apply(org.sireum.IS<org.sireum.Z, T>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Indexable$Isz;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/Indexable$Isz
         3: dup
         4: aload_1
         5: invokespecial #170                // Method "<init>":(Lorg/sireum/IS;)V
         8: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/Indexable$Isz;
            0       9     1    is   Lorg/sireum/IS;
    Signature: #167                         // (Lorg/sireum/IS<Lorg/sireum/Z;TT;>;)Lorg/sireum/Indexable$Isz<TT;>;
    MethodParameters:
      Name                           Flags
      is                             final

  public org.sireum.IS<org.sireum.Z, T> apply$default$1();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;
    Signature: #58                          // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     120
        15: aload_0
        16: getstatic     #120                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #124                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #129                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_2
        26: anewarray     #176                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #176                // class scala/Tuple2
        34: dup
        35: ldc           #178                // String type
        37: getstatic     #120                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #182                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #129                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #101                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #184                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #186                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #76                 // String Isz
        64: aastore
        65: checkcast     #188                // class "[Ljava/lang/Object;"
        68: invokevirtual #142                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #193                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #196                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #176                // class scala/Tuple2
        83: dup
        84: ldc           #197                // String is
        86: aload_0
        87: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
        90: invokespecial #196                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: checkcast     #188                // class "[Ljava/lang/Object;"
        97: invokevirtual #142                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       100: invokevirtual #147                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       103: checkcast     #199                // class scala/collection/immutable/Seq
       106: putfield      #201                // Field $content:Lscala/collection/immutable/Seq;
       109: aload_0
       110: aload_0
       111: getfield      #111                // Field bitmap$0:B
       114: iconst_2
       115: ior
       116: i2b
       117: putfield      #111                // Field bitmap$0:B
       120: aload_1
       121: monitorexit
       122: goto          128
       125: aload_1
       126: monitorexit
       127: athrow
       128: aload_0
       129: getfield      #201                // Field $content:Lscala/collection/immutable/Seq;
       132: areturn
      Exception table:
         from    to  target type
             4   120   125   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 120
          locals = [ class org/sireum/Indexable$Isz ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     133     0  this   Lorg/sireum/Indexable$Isz;
    Signature: #174                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #203                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #201                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Indexable$Isz;
    Signature: #174                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public T at(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
         4: aload_1
         5: invokevirtual #210                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/Indexable$Isz;
            0       9     1     i   Lorg/sireum/Z;
    Signature: #206                         // (Lorg/sireum/Z;)TT;
    MethodParameters:
      Name                           Flags
      i                              final

  public boolean has(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #91                 // Method is:()Lorg/sireum/IS;
         5: invokevirtual #216                // Method org/sireum/IS.size:()Lorg/sireum/Z;
         8: invokeinterface #221,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        13: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/Indexable$Isz;
            0      14     1     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      i                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #224                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Indexable$Isz;

  public org.sireum.Indexable$Isz(org.sireum.IS<org.sireum.Z, T>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #227                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #231                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #234                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #237                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #60                 // Field _is:Lorg/sireum/IS;
        21: return
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/Indexable$Isz;
            0      22     1  __is   Lorg/sireum/IS;
    Signature: #225                         // (Lorg/sireum/IS<Lorg/sireum/Z;TT;>;)V
    MethodParameters:
      Name                           Flags
      __is                           final
}
InnerClasses:
  public static final #11= #2 of #7;      // Isz=class org/sireum/Indexable$Isz of class org/sireum/Indexable
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Indexable<TT;>;Lorg/sireum/DatatypeSig;
SourceFile: "Indexable.scala"
  ScalaInlineInfo: length = 0x68 (unknown attribute)
   01 01 00 14 00 1E 00 1F 01 00 30 00 DE 01 00 30
   00 31 01 00 0E 00 AD 01 00 AC 00 AD 01 00 26 00
   27 01 00 2C 00 27 01 00 48 00 A8 01 00 68 00 A6
   01 00 AB 00 39 01 00 CC 00 CD 01 00 9D 00 9E 01
   00 3D 00 39 01 00 D4 00 D5 01 00 16 00 17 01 00
   0C 00 6D 01 00 6C 00 6D 01 00 38 00 39 01 00 66
   00 3F 01 00 3E 00 3F 01
  Scala: length = 0x0 (unknown attribute)

