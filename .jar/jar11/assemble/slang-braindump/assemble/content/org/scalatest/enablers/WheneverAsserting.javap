Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/enablers/WheneverAsserting.class
  Last modified May 29, 2022; size 1774 bytes
  SHA-256 checksum c50e50d9903d3c8e109d34c397e2f162d1e3e77e2348c402eebb149d87b9b55d
  Compiled from "WheneverAsserting.scala"
public interface org.scalatest.enablers.WheneverAsserting<T extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalatest/enablers/WheneverAsserting
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 5
Constant pool:
   #1 = Utf8               org/scalatest/enablers/WheneverAsserting
   #2 = Class              #1             // org/scalatest/enablers/WheneverAsserting
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               WheneverAsserting.scala
   #7 = Utf8               Lscala/reflect/ScalaSignature;
   #8 = Utf8               bytes
   #9 = Utf8               \u0006\u0005A3qa\u0002\u0005\u0011\u0002G\u0005q\u0002B\u0003\u0018\u0001\t\u0005\u0001\u0004C\u0003 \u0001\u0019\u0005\u0001eB\u00033\u0011!\u00051GB\u0003\b\u0011!\u0005Q\u0007C\u0003:\t\u0011\u0005!\bC\u0003<\t\u0011\rAHA\tXQ\u0016tWM^3s\u0003N\u001cXM\u001d;j]\u001eT!!\u0003\u0006\u0002\u0011\u0015t\u0017M\u00197feNT!a\u0003\u0007\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\u0007\u0002\u0007=\u0014xm\u0001\u0001\u0016\u0005AY3C\u0001\u0001\u0012!\t\u0011R#D\u0001\u0014\u0015\u0005!\u0012!B:dC2\f\u0017B\u0001\f\u0014\u0005\u0019\te.\u001f*fM\n1!+Z:vYR\f\"!\u0007\u000f\u0011\u0005IQ\u0012BA\u000e\u0014\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"AE\u000f\n\u0005y\u0019\"aA!os\u0006Aq\u000f[3oKZ,\'\u000f\u0006\u0002\"[Q\u0011!\u0005\n\t\u0003G\u0005i\u0011\u0001\u0001\u0005\u0007K\t!\t\u0019\u0001\u0014\u0002\u0007\u0019,h\u000eE\u0002\u0013O%J!\u0001K\n\u0003\u0011q\u0012\u0017P\\1nKz\u0002\"AK\u0016\r\u0001\u0011)A\u0006\u0001b\u00011\t\tA\u000bC\u0003/\u0005\u0001\u0007q&A\u0005d_:$\u0017\u000e^5p]B\u0011!\u0003M\u0005\u0003cM\u0011qAQ8pY\u0016\fg.A\tXQ\u0016tWM^3s\u0003N\u001cXM\u001d;j]\u001e\u0004\"\u0001\u000e\u0003\u000e\u0003!\u0019\"\u0001\u0002\u001c\u0011\u0005Q:\u0014B\u0001\u001d\t\u0005q)\u0005\u0010]3di\u0006$\u0018n\u001c8XQ\u0016tWM^3s\u0003N\u001cXM\u001d;j]\u001e\fa\u0001P5oSRtD#A\u001a\u00025\u0005\u001c8/\u001a:uS:<g*\u0019;ve\u0016|e-Q:tKJ$\u0018n\u001c8\u0016\u0003u\u0012\"A\u0010!\u0007\t}\"\u0001!\u0010\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0004i\u0001\t\u0005C\u0001\"M\u001d\t\u0019%J\u0004\u0002E\u0013:\u0011Q\tS\u0007\u0002\r*\u0011qID\u0001\u0007yI|w\u000e\u001e \n\u00035I!a\u0003\u0007\n\u0005-S\u0011a\u00029bG.\fw-Z\u0005\u0003\u001b:\u0013\u0011\"Q:tKJ$\u0018n\u001c8\u000b\u0005-SQ\u0001B\f?A\u0005\u0003
  #10 = Utf8               assertingNatureOfAssertion
  #11 = Utf8               ()Lorg/scalatest/enablers/WheneverAsserting;
  #12 = Utf8               ()Lorg/scalatest/enablers/WheneverAsserting<Lorg/scalatest/compatible/Assertion;>;
  #13 = Utf8               org/scalatest/enablers/WheneverAsserting$
  #14 = Class              #13            // org/scalatest/enablers/WheneverAsserting$
  #15 = Utf8               MODULE$
  #16 = Utf8               Lorg/scalatest/enablers/WheneverAsserting$;
  #17 = NameAndType        #15:#16        // MODULE$:Lorg/scalatest/enablers/WheneverAsserting$;
  #18 = Fieldref           #14.#17        // org/scalatest/enablers/WheneverAsserting$.MODULE$:Lorg/scalatest/enablers/WheneverAsserting$;
  #19 = NameAndType        #10:#11        // assertingNatureOfAssertion:()Lorg/scalatest/enablers/WheneverAsserting;
  #20 = Methodref          #14.#19        // org/scalatest/enablers/WheneverAsserting$.assertingNatureOfAssertion:()Lorg/scalatest/enablers/WheneverAsserting;
  #21 = Utf8               assertingNatureOfFutureAssertion
  #22 = Utf8               ()Lorg/scalatest/enablers/WheneverAsserting<Lscala/concurrent/Future<Lorg/scalatest/compatible/Assertion;>;>;
  #23 = NameAndType        #21:#11        // assertingNatureOfFutureAssertion:()Lorg/scalatest/enablers/WheneverAsserting;
  #24 = Methodref          #14.#23        // org/scalatest/enablers/WheneverAsserting$.assertingNatureOfFutureAssertion:()Lorg/scalatest/enablers/WheneverAsserting;
  #25 = Utf8               assertingNatureOfT
  #26 = Utf8               <T:Ljava/lang/Object;>()Lorg/scalatest/enablers/WheneverAsserting<TT;>;
  #27 = NameAndType        #25:#11        // assertingNatureOfT:()Lorg/scalatest/enablers/WheneverAsserting;
  #28 = Methodref          #14.#27        // org/scalatest/enablers/WheneverAsserting$.assertingNatureOfT:()Lorg/scalatest/enablers/WheneverAsserting;
  #29 = Utf8               whenever
  #30 = Utf8               (ZLscala/Function0;)Ljava/lang/Object;
  #31 = Utf8               (ZLscala/Function0<TT;>;)Ljava/lang/Object;
  #32 = Utf8               condition
  #33 = Utf8               fun
  #34 = Utf8               Code
  #35 = Utf8               Signature
  #36 = Utf8               MethodParameters
  #37 = Utf8               SourceFile
  #38 = Utf8               RuntimeVisibleAnnotations
  #39 = Utf8               ScalaInlineInfo
  #40 = Utf8               ScalaSig
{
  public static org.scalatest.enablers.WheneverAsserting<org.scalatest.compatible.Assertion> assertingNatureOfAssertion();
    descriptor: ()Lorg/scalatest/enablers/WheneverAsserting;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #18                 // Field org/scalatest/enablers/WheneverAsserting$.MODULE$:Lorg/scalatest/enablers/WheneverAsserting$;
         3: invokevirtual #20                 // Method org/scalatest/enablers/WheneverAsserting$.assertingNatureOfAssertion:()Lorg/scalatest/enablers/WheneverAsserting;
         6: areturn
    Signature: #12                          // ()Lorg/scalatest/enablers/WheneverAsserting<Lorg/scalatest/compatible/Assertion;>;

  public static org.scalatest.enablers.WheneverAsserting<scala.concurrent.Future<org.scalatest.compatible.Assertion>> assertingNatureOfFutureAssertion();
    descriptor: ()Lorg/scalatest/enablers/WheneverAsserting;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #18                 // Field org/scalatest/enablers/WheneverAsserting$.MODULE$:Lorg/scalatest/enablers/WheneverAsserting$;
         3: invokevirtual #24                 // Method org/scalatest/enablers/WheneverAsserting$.assertingNatureOfFutureAssertion:()Lorg/scalatest/enablers/WheneverAsserting;
         6: areturn
    Signature: #22                          // ()Lorg/scalatest/enablers/WheneverAsserting<Lscala/concurrent/Future<Lorg/scalatest/compatible/Assertion;>;>;

  public static <T extends java.lang.Object> org.scalatest.enablers.WheneverAsserting<T> assertingNatureOfT();
    descriptor: ()Lorg/scalatest/enablers/WheneverAsserting;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #18                 // Field org/scalatest/enablers/WheneverAsserting$.MODULE$:Lorg/scalatest/enablers/WheneverAsserting$;
         3: invokevirtual #28                 // Method org/scalatest/enablers/WheneverAsserting$.assertingNatureOfT:()Lorg/scalatest/enablers/WheneverAsserting;
         6: areturn
    Signature: #26                          // <T:Ljava/lang/Object;>()Lorg/scalatest/enablers/WheneverAsserting<TT;>;

  public abstract java.lang.Object whenever(boolean, scala.Function0<T>);
    descriptor: (ZLscala/Function0;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #31                          // (ZLscala/Function0<TT;>;)Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      condition                      final
      fun                            final
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "WheneverAsserting.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005A3qa\u0002\u0005\u0011\u0002G\u0005q\u0002B\u0003\u0018\u0001\t\u0005\u0001\u0004C\u0003 \u0001\u0019\u0005\u0001eB\u00033\u0011!\u00051GB\u0003\b\u0011!\u0005Q\u0007C\u0003:\t\u0011\u0005!\bC\u0003<\t\u0011\rAHA\tXQ\u0016tWM^3s\u0003N\u001cXM\u001d;j]\u001eT!!\u0003\u0006\u0002\u0011\u0015t\u0017M\u00197feNT!a\u0003\u0007\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\u0007\u0002\u0007=\u0014xm\u0001\u0001\u0016\u0005AY3C\u0001\u0001\u0012!\t\u0011R#D\u0001\u0014\u0015\u0005!\u0012!B:dC2\f\u0017B\u0001\f\u0014\u0005\u0019\te.\u001f*fM\n1!+Z:vYR\f\"!\u0007\u000f\u0011\u0005IQ\u0012BA\u000e\u0014\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"AE\u000f\n\u0005y\u0019\"aA!os\u0006Aq\u000f[3oKZ,\'\u000f\u0006\u0002\"[Q\u0011!\u0005\n\t\u0003G\u0005i\u0011\u0001\u0001\u0005\u0007K\t!\t\u0019\u0001\u0014\u0002\u0007\u0019,h\u000eE\u0002\u0013O%J!\u0001K\n\u0003\u0011q\u0012\u0017P\\1nKz\u0002\"AK\u0016\r\u0001\u0011)A\u0006\u0001b\u00011\t\tA\u000bC\u0003/\u0005\u0001\u0007q&A\u0005d_:$\u0017\u000e^5p]B\u0011!\u0003M\u0005\u0003cM\u0011qAQ8pY\u0016\fg.A\tXQ\u0016tWM^3s\u0003N\u001cXM\u001d;j]\u001e\u0004\"\u0001\u000e\u0003\u000e\u0003!\u0019\"\u0001\u0002\u001c\u0011\u0005Q:\u0014B\u0001\u001d\t\u0005q)\u0005\u0010]3di\u0006$\u0018n\u001c8XQ\u0016tWM^3s\u0003N\u001cXM\u001d;j]\u001e\fa\u0001P5oSRtD#A\u001a\u00025\u0005\u001c8/\u001a:uS:<g*\u0019;ve\u0016|e-Q:tKJ$\u0018n\u001c8\u0016\u0003u\u0012\"A\u0010!\u0007\t}\"\u0001!\u0010\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0004i\u0001\t\u0005C\u0001\"M\u001d\t\u0019%J\u0004\u0002E\u0013:\u0011Q\tS\u0007\u0002\r*\u0011qID\u0001\u0007yI|w\u000e\u001e \n\u00035I!a\u0003\u0007\n\u0005-S\u0011a\u00029bG.\fw-Z\u0005\u0003\u001b:\u0013\u0011\"Q:tKJ$\u0018n\u001c8\u000b\u0005-SQ\u0001B\f?A\u0005\u0003"
    )
  ScalaInlineInfo: length = 0x9 (unknown attribute)
   01 00 00 01 00 1D 00 1E 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
