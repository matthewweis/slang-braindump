Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/CachedMacros$$anonfun$1.class
  Last modified May 29, 2022; size 2708 bytes
  SHA-256 checksum 93ef947b061712327f4c2368d7b705cb08757872e700018397c8caba3ace683f
  Compiled from "cached.scala"
public final class shapeless.CachedMacros$$anonfun$1 extends scala.runtime.AbstractPartialFunction<scala.Tuple2<scala.reflect.api.Types$TypeApi, scala.reflect.api.Trees$TreeApi>, scala.reflect.api.Trees$TreeApi> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // shapeless/CachedMacros$$anonfun$1
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 2, methods: 5, attributes: 6
Constant pool:
   #1 = Utf8               shapeless/CachedMacros$$anonfun$1
   #2 = Class              #1             // shapeless/CachedMacros$$anonfun$1
   #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Trees$TreeApi;>;Lscala/reflect/api/Trees$TreeApi;>;Ljava/io/Serializable;
   #4 = Utf8               scala/runtime/AbstractPartialFunction
   #5 = Class              #4             // scala/runtime/AbstractPartialFunction
   #6 = Utf8               java/io/Serializable
   #7 = Class              #6             // java/io/Serializable
   #8 = Utf8               cached.scala
   #9 = Utf8               shapeless/CachedMacros
  #10 = Class              #9             // shapeless/CachedMacros
  #11 = Utf8               materializeCached
  #12 = Utf8               (Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Trees$TreeApi;
  #13 = NameAndType        #11:#12        // materializeCached:(Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Trees$TreeApi;
  #14 = Utf8               scala/reflect/api/Trees$TreeApi
  #15 = Class              #14            // scala/reflect/api/Trees$TreeApi
  #16 = Utf8               scala/reflect/api/Trees
  #17 = Class              #16            // scala/reflect/api/Trees
  #18 = Utf8               TreeApi
  #19 = Utf8               scala/reflect/api/Types$TypeApi
  #20 = Class              #19            // scala/reflect/api/Types$TypeApi
  #21 = Utf8               scala/reflect/api/Types
  #22 = Class              #21            // scala/reflect/api/Types
  #23 = Utf8               TypeApi
  #24 = Utf8               serialVersionUID
  #25 = Utf8               J
  #26 = Long               0l
  #28 = Utf8               tpe$1
  #29 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #30 = Utf8               applyOrElse
  #31 = Utf8               (Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
  #32 = Utf8               <A1:Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Trees$TreeApi;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
  #33 = Utf8               x1
  #34 = Utf8               default
  #35 = Utf8               scala/Tuple2
  #36 = Class              #35            // scala/Tuple2
  #37 = Utf8               _1
  #38 = Utf8               ()Ljava/lang/Object;
  #39 = NameAndType        #37:#38        // _1:()Ljava/lang/Object;
  #40 = Methodref          #36.#39        // scala/Tuple2._1:()Ljava/lang/Object;
  #41 = Utf8               _2
  #42 = NameAndType        #41:#38        // _2:()Ljava/lang/Object;
  #43 = Methodref          #36.#42        // scala/Tuple2._2:()Ljava/lang/Object;
  #44 = NameAndType        #28:#29        // tpe$1:Lscala/reflect/api/Types$TypeApi;
  #45 = Fieldref           #2.#44         // shapeless/CachedMacros$$anonfun$1.tpe$1:Lscala/reflect/api/Types$TypeApi;
  #46 = Utf8               $eq$colon$eq
  #47 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Z
  #48 = NameAndType        #46:#47        // $eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
  #49 = Methodref          #20.#48        // scala/reflect/api/Types$TypeApi.$eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
  #50 = Utf8               scala/Function1
  #51 = Class              #50            // scala/Function1
  #52 = Utf8               apply
  #53 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #54 = NameAndType        #52:#53        // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #55 = InterfaceMethodref #51.#54        // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #56 = Utf8               eTpe
  #57 = Utf8               eTree
  #58 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #59 = Utf8               this
  #60 = Utf8               Lshapeless/CachedMacros$$anonfun$1;
  #61 = Utf8               Lscala/Tuple2;
  #62 = Utf8               Lscala/Function1;
  #63 = Utf8               java/lang/Object
  #64 = Class              #63            // java/lang/Object
  #65 = Utf8               isDefinedAt
  #66 = Utf8               (Lscala/Tuple2;)Z
  #67 = Utf8               (Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Trees$TreeApi;>;)Z
  #68 = Utf8               (Ljava/lang/Object;)Z
  #69 = Utf8               x
  #70 = NameAndType        #65:#66        // isDefinedAt:(Lscala/Tuple2;)Z
  #71 = Methodref          #2.#70         // shapeless/CachedMacros$$anonfun$1.isDefinedAt:(Lscala/Tuple2;)Z
  #72 = Utf8               Ljava/lang/Object;
  #73 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #74 = NameAndType        #30:#31        // applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
  #75 = Methodref          #2.#74         // shapeless/CachedMacros$$anonfun$1.applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
  #76 = Utf8               <init>
  #77 = Utf8               (Lshapeless/CachedMacros;Lscala/reflect/api/Types$TypeApi;)V
  #78 = Utf8               $outer
  #79 = Utf8               ()V
  #80 = NameAndType        #76:#79        // "<init>":()V
  #81 = Methodref          #5.#80         // scala/runtime/AbstractPartialFunction."<init>":()V
  #82 = Utf8               Lshapeless/CachedMacros;
  #83 = Utf8               ConstantValue
  #84 = Utf8               Code
  #85 = Utf8               StackMapTable
  #86 = Utf8               LineNumberTable
  #87 = Utf8               LocalVariableTable
  #88 = Utf8               Signature
  #89 = Utf8               MethodParameters
  #90 = Utf8               InnerClasses
  #91 = Utf8               EnclosingMethod
  #92 = Utf8               SourceFile
  #93 = Utf8               ScalaInlineInfo
  #94 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final scala.reflect.api.Types$TypeApi tpe$1;
    descriptor: Lscala/reflect/api/Types$TypeApi;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final <A1 extends scala.Tuple2<scala.reflect.api.Types$TypeApi, scala.reflect.api.Trees$TreeApi>, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnull        49
         8: aload         4
        10: invokevirtual #40                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #20                 // class scala/reflect/api/Types$TypeApi
        16: astore        5
        18: aload         4
        20: invokevirtual #43                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #15                 // class scala/reflect/api/Trees$TreeApi
        26: astore        6
        28: aload         5
        30: aload_0
        31: getfield      #45                 // Field tpe$1:Lscala/reflect/api/Types$TypeApi;
        34: invokevirtual #49                 // Method scala/reflect/api/Types$TypeApi.$eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
        37: ifeq          46
        40: aload         6
        42: astore_3
        43: goto          63
        46: goto          52
        49: goto          52
        52: aload_2
        53: aload_1
        54: invokeinterface #55,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        59: astore_3
        60: goto          63
        63: aload_3
        64: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class shapeless/CachedMacros$$anonfun$1, class scala/Tuple2, class scala/Function1, top, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Trees$TreeApi ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class shapeless/CachedMacros$$anonfun$1, class scala/Tuple2, class scala/Function1, class java/lang/Object, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 109: 0
        line 110: 3
        line 109: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      33     5  eTpe   Lscala/reflect/api/Types$TypeApi;
           26      23     6 eTree   Lscala/reflect/api/Trees$TreeApi;
            0      65     0  this   Lshapeless/CachedMacros$$anonfun$1;
            0      65     1    x1   Lscala/Tuple2;
            0      65     2 default   Lscala/Function1;
    Signature: #32                          // <A1:Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Trees$TreeApi;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x1                             final
      default                        final

  public final boolean isDefinedAt(scala.Tuple2<scala.reflect.api.Types$TypeApi, scala.reflect.api.Trees$TreeApi>);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        35
         6: aload_3
         7: invokevirtual #40                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #20                 // class scala/reflect/api/Types$TypeApi
        13: astore        4
        15: aload         4
        17: aload_0
        18: getfield      #45                 // Field tpe$1:Lscala/reflect/api/Types$TypeApi;
        21: invokevirtual #49                 // Method scala/reflect/api/Types$TypeApi.$eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
        24: ifeq          32
        27: iconst_1
        28: istore_2
        29: goto          43
        32: goto          38
        35: goto          38
        38: iconst_0
        39: istore_2
        40: goto          43
        43: iload_2
        44: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 32
          locals = [ top, class scala/Tuple2, class scala/reflect/api/Types$TypeApi ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class shapeless/CachedMacros$$anonfun$1, class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 109: 0
        line 110: 2
        line 109: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      22     4  eTpe   Lscala/reflect/api/Types$TypeApi;
            0      45     0  this   Lshapeless/CachedMacros$$anonfun$1;
            0      45     1    x1   Lscala/Tuple2;
    Signature: #67                          // (Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Trees$TreeApi;>;)Z
    MethodParameters:
      Name                           Flags
      x1                             final

  public final boolean isDefinedAt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #36                 // class scala/Tuple2
         5: invokevirtual #71                 // Method isDefinedAt:(Lscala/Tuple2;)Z
         8: ireturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lshapeless/CachedMacros$$anonfun$1;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #36                 // class scala/Tuple2
         5: aload_2
         6: invokevirtual #75                 // Method applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/CachedMacros$$anonfun$1;
            0      10     1     x   Ljava/lang/Object;
            0      10     2 default   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public shapeless.CachedMacros$$anonfun$1(shapeless.CachedMacros, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/CachedMacros;Lscala/reflect/api/Types$TypeApi;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #45                 // Field tpe$1:Lscala/reflect/api/Types$TypeApi;
         5: aload_0
         6: invokespecial #81                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
         9: return
      LineNumberTable:
        line 84: 0
        line 109: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/CachedMacros$$anonfun$1;
            0      10     1 $outer   Lshapeless/CachedMacros;
            0      10     2 tpe$1   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      tpe$1                          final
}
InnerClasses:
  public #18= #15 of #17;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public abstract #23= #20 of #22;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public final #2;                        // class shapeless/CachedMacros$$anonfun$1
EnclosingMethod: #10.#13                // shapeless.CachedMacros.materializeCached
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Trees$TreeApi;>;Lscala/reflect/api/Trees$TreeApi;>;Ljava/io/Serializable;
SourceFile: "cached.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 4C 00 4D 01 00 1E 00 49 01 00 1E
   00 1F 01 00 41 00 44 01 00 41 00 42 01
  Scala: length = 0x0 (unknown attribute)

