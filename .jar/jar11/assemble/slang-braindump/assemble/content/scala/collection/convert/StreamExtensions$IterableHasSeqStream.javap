Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$IterableHasSeqStream.class
  Last modified May 29, 2022; size 2146 bytes
  SHA-256 checksum a8b31e14aa3795e4d25c117561ac1dbd857ee5655439018f093236fbebcf5ea2
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$IterableHasSeqStream<A extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$IterableHasSeqStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 3, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$IterableHasSeqStream
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$IterableHasSeqStream
   #3 = Utf8               <A:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamExtensions.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions
   #8 = Class              #7             // scala/collection/convert/StreamExtensions
   #9 = Utf8               IterableHasSeqStream
  #10 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
  #11 = Class              #10            // scala/collection/convert/StreamExtensions$StreamShape
  #12 = Utf8               StreamShape
  #13 = Utf8               cc
  #14 = Utf8               Lscala/collection/IterableOnce;
  #15 = Utf8               Lscala/collection/IterableOnce<TA;>;
  #16 = Utf8               $outer
  #17 = Utf8               Lscala/collection/convert/StreamExtensions;
  #18 = Utf8               asJavaSeqStream
  #19 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #20 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;)TS;
  #21 = Utf8               s
  #22 = Utf8               st
  #23 = NameAndType        #13:#14        // cc:Lscala/collection/IterableOnce;
  #24 = Fieldref           #2.#23         // scala/collection/convert/StreamExtensions$IterableHasSeqStream.cc:Lscala/collection/IterableOnce;
  #25 = Utf8               scala/collection/IterableOnce
  #26 = Class              #25            // scala/collection/IterableOnce
  #27 = Utf8               stepper
  #28 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #29 = NameAndType        #27:#28        // stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #30 = InterfaceMethodref #26.#29        // scala/collection/IterableOnce.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #31 = Utf8               mkStream
  #32 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #33 = NameAndType        #31:#32        // mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #34 = InterfaceMethodref #11.#33        // scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #35 = Utf8               this
  #36 = Utf8               Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
  #37 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape;
  #38 = Utf8               Lscala/collection/StepperShape;
  #39 = Utf8               fromStepper_st
  #40 = Utf8               Lscala/collection/Stepper;
  #41 = Utf8               fromStepper_par
  #42 = Utf8               Z
  #43 = Utf8               scala/collection/Stepper
  #44 = Class              #43            // scala/collection/Stepper
  #45 = Utf8               scala$collection$convert$StreamExtensions$IterableHasSeqStream$$$outer
  #46 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #47 = NameAndType        #16:#17        // $outer:Lscala/collection/convert/StreamExtensions;
  #48 = Fieldref           #2.#47         // scala/collection/convert/StreamExtensions$IterableHasSeqStream.$outer:Lscala/collection/convert/StreamExtensions;
  #49 = Utf8               <init>
  #50 = Utf8               (Lscala/collection/convert/StreamExtensions;Lscala/collection/IterableOnce;)V
  #51 = Utf8               (Lscala/collection/IterableOnce<TA;>;)V
  #52 = Utf8               ()V
  #53 = NameAndType        #49:#52        // "<init>":()V
  #54 = Methodref          #5.#53         // java/lang/Object."<init>":()V
  #55 = Utf8               Signature
  #56 = Utf8               Code
  #57 = Utf8               StackMapTable
  #58 = Utf8               LineNumberTable
  #59 = Utf8               LocalVariableTable
  #60 = Utf8               MethodParameters
  #61 = Utf8               InnerClasses
  #62 = Utf8               SourceFile
  #63 = Utf8               ScalaInlineInfo
  #64 = Utf8               Scala
{
  private final scala.collection.IterableOnce<A> cc;
    descriptor: Lscala/collection/IterableOnce;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #15                          // Lscala/collection/IterableOnce<TA;>;

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaSeqStream(scala.collection.convert.StreamExtensions$StreamShape<A, S, St>, scala.collection.StepperShape<A, St>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #24                 // Field cc:Lscala/collection/IterableOnce;
         5: aload_2
         6: invokeinterface #30,  2           // InterfaceMethod scala/collection/IterableOnce.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_0
        12: istore        4
        14: astore_3
        15: ifnonnull     20
        18: aconst_null
        19: athrow
        20: aload_1
        21: aload_3
        22: iload         4
        24: invokeinterface #34,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        29: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ class scala/collection/Stepper, int ]
      LineNumberTable:
        line 38: 0
        line 368: 20
        line 38: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
            0      30     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      30     2    st   Lscala/collection/StepperShape;
           20       9     3 fromStepper_st   Lscala/collection/Stepper;
           20       9     4 fromStepper_par   Z
    Signature: #20                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$IterableHasSeqStream$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;

  public scala.collection.convert.StreamExtensions$IterableHasSeqStream(scala.collection.IterableOnce<A>);
    descriptor: (Lscala/collection/convert/StreamExtensions;Lscala/collection/IterableOnce;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #24                 // Field cc:Lscala/collection/IterableOnce;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #48                 // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #54                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$IterableHasSeqStream;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2    cc   Lscala/collection/IterableOnce;
    Signature: #51                          // (Lscala/collection/IterableOnce<TA;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      cc                             final
}
InnerClasses:
  public #9= #2 of #8;                    // IterableHasSeqStream=class scala/collection/convert/StreamExtensions$IterableHasSeqStream of class scala/collection/convert/StreamExtensions
  public static #12= #11 of #8;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
Signature: #3                           // <A:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 31 00 32 00 00 12 00 13 00 00 2D
   00 2E 00
  Scala: length = 0x0 (unknown attribute)

