Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/move$over$.class
  Last modified May 29, 2022; size 1147 bytes
  SHA-256 checksum 2c8afacb9d4e3d91c857bddc538829569b5e0a905d1c5ebdf9f6023f515aa602
  Compiled from "FileOps.scala"
public class os.move$over$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/move$over$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               os/move$over$
   #2 = Class              #1             // os/move$over$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               FileOps.scala
   #6 = Utf8               os/move
   #7 = Class              #6             // os/move
   #8 = Utf8               over$
   #9 = Utf8               os/remove$all$
  #10 = Class              #9             // os/remove$all$
  #11 = Utf8               os/remove
  #12 = Class              #11            // os/remove
  #13 = Utf8               all$
  #14 = Utf8               MODULE$
  #15 = Utf8               Los/move$over$;
  #16 = Utf8               <clinit>
  #17 = Utf8               ()V
  #18 = Utf8               <init>
  #19 = NameAndType        #18:#17        // "<init>":()V
  #20 = Methodref          #2.#19         // os/move$over$."<init>":()V
  #21 = NameAndType        #14:#15        // MODULE$:Los/move$over$;
  #22 = Fieldref           #2.#21         // os/move$over$.MODULE$:Los/move$over$;
  #23 = Utf8               apply
  #24 = Utf8               (Los/Path;Los/Path;ZZZ)V
  #25 = Utf8               from
  #26 = Utf8               to
  #27 = Utf8               replaceExisting
  #28 = Utf8               atomicMove
  #29 = Utf8               createFolders
  #30 = Utf8               Los/remove$all$;
  #31 = NameAndType        #14:#30        // MODULE$:Los/remove$all$;
  #32 = Fieldref           #10.#31        // os/remove$all$.MODULE$:Los/remove$all$;
  #33 = Utf8               (Los/Path;)V
  #34 = NameAndType        #23:#33        // apply:(Los/Path;)V
  #35 = Methodref          #10.#34        // os/remove$all$.apply:(Los/Path;)V
  #36 = Utf8               os/move$
  #37 = Class              #36            // os/move$
  #38 = Utf8               Los/move$;
  #39 = NameAndType        #14:#38        // MODULE$:Los/move$;
  #40 = Fieldref           #37.#39        // os/move$.MODULE$:Los/move$;
  #41 = NameAndType        #23:#24        // apply:(Los/Path;Los/Path;ZZZ)V
  #42 = Methodref          #37.#41        // os/move$.apply:(Los/Path;Los/Path;ZZZ)V
  #43 = Utf8               this
  #44 = Utf8               Los/Path;
  #45 = Utf8               Z
  #46 = Utf8               apply$default$3
  #47 = Utf8               ()Z
  #48 = Utf8               apply$default$4
  #49 = Utf8               apply$default$5
  #50 = Methodref          #4.#19         // java/lang/Object."<init>":()V
  #51 = Utf8               Code
  #52 = Utf8               LineNumberTable
  #53 = Utf8               LocalVariableTable
  #54 = Utf8               MethodParameters
  #55 = Utf8               InnerClasses
  #56 = Utf8               SourceFile
  #57 = Utf8               ScalaInlineInfo
  #58 = Utf8               Scala
{
  public static final os.move$over$ MODULE$;
    descriptor: Los/move$over$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/move$over$
         3: dup
         4: invokespecial #20                 // Method "<init>":()V
         7: putstatic     #22                 // Field MODULE$:Los/move$over$;
        10: return
      LineNumberTable:
        line 117: 0

  public void apply(os.Path, os.Path, boolean, boolean, boolean);
    descriptor: (Los/Path;Los/Path;ZZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=6
         0: getstatic     #32                 // Field os/remove$all$.MODULE$:Los/remove$all$;
         3: aload_2
         4: invokevirtual #35                 // Method os/remove$all$.apply:(Los/Path;)V
         7: getstatic     #40                 // Field os/move$.MODULE$:Los/move$;
        10: aload_1
        11: aload_2
        12: iload_3
        13: iload         4
        15: iload         5
        17: invokevirtual #42                 // Method os/move$.apply:(Los/Path;Los/Path;ZZZ)V
        20: return
      LineNumberTable:
        line 123: 0
        line 124: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Los/move$over$;
            0      21     1  from   Los/Path;
            0      21     2    to   Los/Path;
            0      21     3 replaceExisting   Z
            0      21     4 atomicMove   Z
            0      21     5 createFolders   Z
    MethodParameters:
      Name                           Flags
      from                           final
      to                             final
      replaceExisting                final
      atomicMove                     final
      createFolders                  final

  public boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/move$over$;

  public boolean apply$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/move$over$;

  public boolean apply$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/move$over$;

  public os.move$over$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #50                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 127: 0
        line 117: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/move$over$;
}
InnerClasses:
  public static #8= #2 of #7;             // over$=class os/move$over$ of class os/move
  public static #13= #10 of #12;          // all$=class os/remove$all$ of class os/remove
SourceFile: "FileOps.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 12 00 11 01 00 17 00 18 01 00 2E
   00 2F 01 00 30 00 2F 01 00 31 00 2F 01
  Scala: length = 0x0 (unknown attribute)

