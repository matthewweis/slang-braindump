Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/ser/std/ClassSerializer.class
  Last modified May 29, 2022; size 2328 bytes
  SHA-256 checksum 8b7328e0c051bfae602b9b2fc39ee76c07d03d8cd064c01cd26dd9877e14bdee
  Compiled from "ClassSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.ClassSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.lang.Class<?>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #9                          // com/fasterxml/jackson/databind/ser/std/ClassSerializer
  super_class: #10                        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  interfaces: 0, fields: 0, methods: 5, attributes: 2
Constant pool:
   #1 = Class              #46            // java/lang/Class
   #2 = Methodref          #10.#47        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;Z)V
   #3 = Methodref          #1.#48         // java/lang/Class.getName:()Ljava/lang/String;
   #4 = Methodref          #49.#50        // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
   #5 = String             #51            // string
   #6 = Methodref          #9.#52         // com/fasterxml/jackson/databind/ser/std/ClassSerializer.createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
   #7 = Methodref          #9.#53         // com/fasterxml/jackson/databind/ser/std/ClassSerializer.visitStringFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
   #8 = Methodref          #9.#54         // com/fasterxml/jackson/databind/ser/std/ClassSerializer.serialize:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
   #9 = Class              #55            // com/fasterxml/jackson/databind/ser/std/ClassSerializer
  #10 = Class              #56            // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #11 = Utf8               <init>
  #12 = Utf8               ()V
  #13 = Utf8               Code
  #14 = Utf8               LineNumberTable
  #15 = Utf8               LocalVariableTable
  #16 = Utf8               this
  #17 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/ClassSerializer;
  #18 = Utf8               serialize
  #19 = Utf8               (Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #20 = Utf8               value
  #21 = Utf8               Ljava/lang/Class;
  #22 = Utf8               g
  #23 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
  #24 = Utf8               provider
  #25 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
  #26 = Utf8               LocalVariableTypeTable
  #27 = Utf8               Ljava/lang/Class<*>;
  #28 = Utf8               Exceptions
  #29 = Class              #57            // java/io/IOException
  #30 = Utf8               Signature
  #31 = Utf8               (Ljava/lang/Class<*>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #32 = Utf8               getSchema
  #33 = Utf8               (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;
  #34 = Utf8               typeHint
  #35 = Utf8               Ljava/lang/reflect/Type;
  #36 = Utf8               acceptJsonFormatVisitor
  #37 = Utf8               (Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
  #38 = Utf8               visitor
  #39 = Utf8               Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;
  #40 = Utf8               Lcom/fasterxml/jackson/databind/JavaType;
  #41 = Class              #58            // com/fasterxml/jackson/databind/JsonMappingException
  #42 = Utf8               (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #43 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/lang/Class<*>;>;
  #44 = Utf8               SourceFile
  #45 = Utf8               ClassSerializer.java
  #46 = Utf8               java/lang/Class
  #47 = NameAndType        #11:#59        // "<init>":(Ljava/lang/Class;Z)V
  #48 = NameAndType        #60:#61        // getName:()Ljava/lang/String;
  #49 = Class              #62            // com/fasterxml/jackson/core/JsonGenerator
  #50 = NameAndType        #63:#64        // writeString:(Ljava/lang/String;)V
  #51 = Utf8               string
  #52 = NameAndType        #65:#66        // createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #53 = NameAndType        #67:#37        // visitStringFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
  #54 = NameAndType        #18:#19        // serialize:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #55 = Utf8               com/fasterxml/jackson/databind/ser/std/ClassSerializer
  #56 = Utf8               com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #57 = Utf8               java/io/IOException
  #58 = Utf8               com/fasterxml/jackson/databind/JsonMappingException
  #59 = Utf8               (Ljava/lang/Class;Z)V
  #60 = Utf8               getName
  #61 = Utf8               ()Ljava/lang/String;
  #62 = Utf8               com/fasterxml/jackson/core/JsonGenerator
  #63 = Utf8               writeString
  #64 = Utf8               (Ljava/lang/String;)V
  #65 = Utf8               createSchemaNode
  #66 = Utf8               (Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #67 = Utf8               visitStringFormat
{
  public com.fasterxml.jackson.databind.ser.std.ClassSerializer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class java/lang/Class
         3: iconst_0
         4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;Z)V
         7: return
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/ser/std/ClassSerializer;

  public void serialize(java.lang.Class<?>, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_2
         1: aload_1
         2: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
         5: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 27: 0
        line 28: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/ser/std/ClassSerializer;
            0       9     1 value   Ljava/lang/Class;
            0       9     2     g   Lcom/fasterxml/jackson/core/JsonGenerator;
            0       9     3 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     1 value   Ljava/lang/Class<*>;
    Exceptions:
      throws java.io.IOException
    Signature: #31                          // (Ljava/lang/Class<*>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    descriptor: (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: ldc           #5                  // String string
         3: iconst_1
         4: invokevirtual #6                  // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
         7: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/ser/std/ClassSerializer;
            0       8     1 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
            0       8     2 typeHint   Ljava/lang/reflect/Type;

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    descriptor: (Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #7                  // Method visitStringFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
         6: return
      LineNumberTable:
        line 40: 0
        line 41: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/ser/std/ClassSerializer;
            0       7     1 visitor   Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;
            0       7     2 typeHint   Lcom/fasterxml/jackson/databind/JavaType;
    Exceptions:
      throws com.fasterxml.jackson.databind.JsonMappingException

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: checkcast     #1                  // class java/lang/Class
         5: aload_2
         6: aload_3
         7: invokevirtual #8                  // Method serialize:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
        10: return
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/ser/std/ClassSerializer;
    Exceptions:
      throws java.io.IOException
}
Signature: #43                          // Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/lang/Class<*>;>;
SourceFile: "ClassSerializer.java"
