Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/EncodeJson$$anon$1.class
  Last modified May 29, 2022; size 2222 bytes
  SHA-256 checksum 14a47faa318089d44e3b0fbb86babb9e249743fb84f6f3050d2d84297c38598b
  Compiled from "EncodeJson.scala"
public final class argonaut.EncodeJson$$anon$1 extends java.lang.Object implements argonaut.EncodeJson<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/EncodeJson$$anon$1
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 6, attributes: 6
Constant pool:
   #1 = Utf8               argonaut/EncodeJson$$anon$1
   #2 = Class              #1             // argonaut/EncodeJson$$anon$1
   #3 = Utf8               Ljava/lang/Object;Largonaut/EncodeJson<TA;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               argonaut/EncodeJson
   #7 = Class              #6             // argonaut/EncodeJson
   #8 = Utf8               EncodeJson.scala
   #9 = Utf8               mapJson
  #10 = Utf8               (Lscala/Function1;)Largonaut/EncodeJson;
  #11 = NameAndType        #9:#10         // mapJson:(Lscala/Function1;)Largonaut/EncodeJson;
  #12 = Utf8               f$2
  #13 = Utf8               Lscala/Function1;
  #14 = Utf8               original$1
  #15 = Utf8               Largonaut/EncodeJson;
  #16 = Utf8               apply
  #17 = Utf8               (Ljava/lang/Object;)Largonaut/Json;
  #18 = Utf8               (TA;)Largonaut/Json;
  #19 = Utf8               a
  #20 = Utf8               apply$
  #21 = Utf8               (Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #22 = NameAndType        #20:#21        // apply$:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #23 = InterfaceMethodref #7.#22         // argonaut/EncodeJson.apply$:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #24 = Utf8               this
  #25 = Utf8               Largonaut/EncodeJson$$anon$1;
  #26 = Utf8               Ljava/lang/Object;
  #27 = Utf8               contramap
  #28 = Utf8               <B:Ljava/lang/Object;>(Lscala/Function1<TB;TA;>;)Largonaut/EncodeJson<TB;>;
  #29 = Utf8               f
  #30 = Utf8               contramap$
  #31 = Utf8               (Largonaut/EncodeJson;Lscala/Function1;)Largonaut/EncodeJson;
  #32 = NameAndType        #30:#31        // contramap$:(Largonaut/EncodeJson;Lscala/Function1;)Largonaut/EncodeJson;
  #33 = InterfaceMethodref #7.#32         // argonaut/EncodeJson.contramap$:(Largonaut/EncodeJson;Lscala/Function1;)Largonaut/EncodeJson;
  #34 = Utf8               (Lscala/Function1<Largonaut/Json;Largonaut/Json;>;)Largonaut/EncodeJson<TA;>;
  #35 = Utf8               mapJson$
  #36 = NameAndType        #35:#31        // mapJson$:(Largonaut/EncodeJson;Lscala/Function1;)Largonaut/EncodeJson;
  #37 = InterfaceMethodref #7.#36         // argonaut/EncodeJson.mapJson$:(Largonaut/EncodeJson;Lscala/Function1;)Largonaut/EncodeJson;
  #38 = Utf8               $less$amp$greater
  #39 = Utf8               (Lscala/Function0;)Largonaut/EncodeJson;
  #40 = Utf8               <B:Ljava/lang/Object;>(Lscala/Function0<Largonaut/EncodeJson<TB;>;>;)Largonaut/EncodeJson<Lscala/util/Either<TA;TB;>;>;
  #41 = Utf8               x
  #42 = Utf8               $less$amp$greater$
  #43 = Utf8               (Largonaut/EncodeJson;Lscala/Function0;)Largonaut/EncodeJson;
  #44 = NameAndType        #42:#43        // $less$amp$greater$:(Largonaut/EncodeJson;Lscala/Function0;)Largonaut/EncodeJson;
  #45 = InterfaceMethodref #7.#44         // argonaut/EncodeJson.$less$amp$greater$:(Largonaut/EncodeJson;Lscala/Function0;)Largonaut/EncodeJson;
  #46 = Utf8               Lscala/Function0;
  #47 = Utf8               encode
  #48 = NameAndType        #12:#13        // f$2:Lscala/Function1;
  #49 = Fieldref           #2.#48         // argonaut/EncodeJson$$anon$1.f$2:Lscala/Function1;
  #50 = NameAndType        #14:#15        // original$1:Largonaut/EncodeJson;
  #51 = Fieldref           #2.#50         // argonaut/EncodeJson$$anon$1.original$1:Largonaut/EncodeJson;
  #52 = NameAndType        #16:#17        // apply:(Ljava/lang/Object;)Largonaut/Json;
  #53 = InterfaceMethodref #7.#52         // argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
  #54 = Utf8               scala/Function1
  #55 = Class              #54            // scala/Function1
  #56 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #57 = NameAndType        #16:#56        // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #58 = InterfaceMethodref #55.#57        // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #59 = Utf8               argonaut/Json
  #60 = Class              #59            // argonaut/Json
  #61 = Utf8               <init>
  #62 = Utf8               (Largonaut/EncodeJson;Lscala/Function1;Largonaut/EncodeJson;)V
  #63 = Utf8               $outer
  #64 = Utf8               ()V
  #65 = NameAndType        #61:#64        // "<init>":()V
  #66 = Methodref          #5.#65         // java/lang/Object."<init>":()V
  #67 = Utf8               $init$
  #68 = Utf8               (Largonaut/EncodeJson;)V
  #69 = NameAndType        #67:#68        // $init$:(Largonaut/EncodeJson;)V
  #70 = InterfaceMethodref #7.#69         // argonaut/EncodeJson.$init$:(Largonaut/EncodeJson;)V
  #71 = Utf8               Code
  #72 = Utf8               LineNumberTable
  #73 = Utf8               LocalVariableTable
  #74 = Utf8               Signature
  #75 = Utf8               MethodParameters
  #76 = Utf8               InnerClasses
  #77 = Utf8               EnclosingMethod
  #78 = Utf8               SourceFile
  #79 = Utf8               ScalaInlineInfo
  #80 = Utf8               Scala
{
  private final scala.Function1 f$2;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final argonaut.EncodeJson original$1;
    descriptor: Largonaut/EncodeJson;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public argonaut.Json apply(A);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #23                 // InterfaceMethod argonaut/EncodeJson.apply$:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
         5: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/EncodeJson$$anon$1;
            0       6     1     a   Ljava/lang/Object;
    Signature: #18                          // (TA;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      a                              final

  public <B extends java.lang.Object> argonaut.EncodeJson<B> contramap(scala.Function1<B, A>);
    descriptor: (Lscala/Function1;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #33                 // InterfaceMethod argonaut/EncodeJson.contramap$:(Largonaut/EncodeJson;Lscala/Function1;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/EncodeJson$$anon$1;
            0       6     1     f   Lscala/Function1;
    Signature: #28                          // <B:Ljava/lang/Object;>(Lscala/Function1<TB;TA;>;)Largonaut/EncodeJson<TB;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public argonaut.EncodeJson<A> mapJson(scala.Function1<argonaut.Json, argonaut.Json>);
    descriptor: (Lscala/Function1;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #37                 // InterfaceMethod argonaut/EncodeJson.mapJson$:(Largonaut/EncodeJson;Lscala/Function1;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/EncodeJson$$anon$1;
            0       6     1     f   Lscala/Function1;
    Signature: #34                          // (Lscala/Function1<Largonaut/Json;Largonaut/Json;>;)Largonaut/EncodeJson<TA;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public <B extends java.lang.Object> argonaut.EncodeJson<scala.util.Either<A, B>> $less$amp$greater(scala.Function0<argonaut.EncodeJson<B>>);
    descriptor: (Lscala/Function0;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #45                 // InterfaceMethod argonaut/EncodeJson.$less$amp$greater$:(Largonaut/EncodeJson;Lscala/Function0;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/EncodeJson$$anon$1;
            0       6     1     x   Lscala/Function0;
    Signature: #40                          // <B:Ljava/lang/Object;>(Lscala/Function0<Largonaut/EncodeJson<TB;>;>;)Largonaut/EncodeJson<Lscala/util/Either<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      x                              final

  public argonaut.Json encode(A);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #49                 // Field f$2:Lscala/Function1;
         4: aload_0
         5: getfield      #51                 // Field original$1:Largonaut/EncodeJson;
         8: aload_1
         9: invokeinterface #53,  2           // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
        14: invokeinterface #58,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        19: checkcast     #60                 // class argonaut/Json
        22: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Largonaut/EncodeJson$$anon$1;
            0      23     1     a   Ljava/lang/Object;
    Signature: #18                          // (TA;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      a                              final

  public argonaut.EncodeJson$$anon$1(argonaut.EncodeJson, scala.Function1, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJson;Lscala/Function1;Largonaut/EncodeJson;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #49                 // Field f$2:Lscala/Function1;
         5: aload_0
         6: aload_3
         7: putfield      #51                 // Field original$1:Largonaut/EncodeJson;
        10: aload_0
        11: invokespecial #66                 // Method java/lang/Object."<init>":()V
        14: aload_0
        15: invokestatic  #70                 // InterfaceMethod argonaut/EncodeJson.$init$:(Largonaut/EncodeJson;)V
        18: return
      LineNumberTable:
        line 33: 0
        line 34: 5
        line 35: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Largonaut/EncodeJson$$anon$1;
            0      19     1 $outer   Largonaut/EncodeJson;
            0      19     2   f$2   Lscala/Function1;
            0      19     3 original$1   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      f$2                            final
      original$1                     final
}
InnerClasses:
  public final #2;                        // class argonaut/EncodeJson$$anon$1
EnclosingMethod: #7.#11                 // argonaut.EncodeJson.mapJson
Signature: #3                           // Ljava/lang/Object;Largonaut/EncodeJson<TA;>;
SourceFile: "EncodeJson.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 26 00 27 01 00 3D 00 3E 01 00 10
   00 11 01 00 1B 00 0A 01 00 2F 00 11 01 00 09 00
   0A 01
  Scala: length = 0x0 (unknown attribute)

