Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/conversions/F32_Ext$.class
  Last modified May 29, 2022; size 1379 bytes
  SHA-256 checksum 5d917b08ec5360959447522c326b9ae90527282ad23bb08cd15ce84bf2f66df5
  Compiled from "extension.scala"
public final class org.sireum.conversions.F32_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/F32_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               org/sireum/conversions/F32_Ext$
   #2 = Class              #1             // org/sireum/conversions/F32_Ext$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               extension.scala
   #6 = Utf8               org/sireum/F32$$String$
   #7 = Class              #6             // org/sireum/F32$$String$
   #8 = Utf8               org/sireum/F32
   #9 = Class              #8             // org/sireum/F32
  #10 = Utf8               $String$
  #11 = Utf8               MODULE$
  #12 = Utf8               Lorg/sireum/conversions/F32_Ext$;
  #13 = Utf8               <clinit>
  #14 = Utf8               ()V
  #15 = Utf8               <init>
  #16 = NameAndType        #15:#14        // "<init>":()V
  #17 = Methodref          #2.#16         // org/sireum/conversions/F32_Ext$."<init>":()V
  #18 = NameAndType        #11:#12        // MODULE$:Lorg/sireum/conversions/F32_Ext$;
  #19 = Fieldref           #2.#18         // org/sireum/conversions/F32_Ext$.MODULE$:Lorg/sireum/conversions/F32_Ext$;
  #20 = Utf8               toB
  #21 = Utf8               (F)Z
  #22 = Utf8               n
  #23 = Utf8               org/sireum/B$
  #24 = Class              #23            // org/sireum/B$
  #25 = Utf8               Lorg/sireum/B$;
  #26 = NameAndType        #11:#25        // MODULE$:Lorg/sireum/B$;
  #27 = Fieldref           #24.#26        // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #28 = Utf8               Lorg/sireum/F32$$String$;
  #29 = NameAndType        #11:#28        // MODULE$:Lorg/sireum/F32$$String$;
  #30 = Fieldref           #7.#29         // org/sireum/F32$$String$.MODULE$:Lorg/sireum/F32$$String$;
  #31 = Utf8               0.0
  #32 = String             #31            // 0.0
  #33 = Utf8               apply
  #34 = Utf8               (Ljava/lang/String;)F
  #35 = NameAndType        #33:#34        // apply:(Ljava/lang/String;)F
  #36 = Methodref          #7.#35         // org/sireum/F32$$String$.apply:(Ljava/lang/String;)F
  #37 = Utf8               (Z)Z
  #38 = NameAndType        #33:#37        // apply:(Z)Z
  #39 = Methodref          #24.#38        // org/sireum/B$.apply:(Z)Z
  #40 = Utf8               this
  #41 = Utf8               F
  #42 = Utf8               toRawU32
  #43 = Utf8               (F)I
  #44 = Utf8               org/sireum/U32$
  #45 = Class              #44            // org/sireum/U32$
  #46 = Utf8               Lorg/sireum/U32$;
  #47 = NameAndType        #11:#46        // MODULE$:Lorg/sireum/U32$;
  #48 = Fieldref           #45.#47        // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
  #49 = Utf8               java/lang/Float
  #50 = Class              #49            // java/lang/Float
  #51 = Utf8               floatToIntBits
  #52 = NameAndType        #51:#43        // floatToIntBits:(F)I
  #53 = Methodref          #50.#52        // java/lang/Float.floatToIntBits:(F)I
  #54 = Utf8               (I)I
  #55 = NameAndType        #33:#54        // apply:(I)I
  #56 = Methodref          #45.#55        // org/sireum/U32$.apply:(I)I
  #57 = Utf8               toF32
  #58 = Utf8               (F)F
  #59 = Utf8               toR
  #60 = Utf8               (F)Lscala/math/BigDecimal;
  #61 = Utf8               org/sireum/R$
  #62 = Class              #61            // org/sireum/R$
  #63 = Utf8               Lorg/sireum/R$;
  #64 = NameAndType        #11:#63        // MODULE$:Lorg/sireum/R$;
  #65 = Fieldref           #62.#64        // org/sireum/R$.MODULE$:Lorg/sireum/R$;
  #66 = NameAndType        #33:#60        // apply:(F)Lscala/math/BigDecimal;
  #67 = Methodref          #62.#66        // org/sireum/R$.apply:(F)Lscala/math/BigDecimal;
  #68 = Methodref          #4.#16         // java/lang/Object."<init>":()V
  #69 = Utf8               Code
  #70 = Utf8               LineNumberTable
  #71 = Utf8               StackMapTable
  #72 = Utf8               LocalVariableTable
  #73 = Utf8               MethodParameters
  #74 = Utf8               InnerClasses
  #75 = Utf8               SourceFile
  #76 = Utf8               ScalaInlineInfo
  #77 = Utf8               Scala
{
  public static final org.sireum.conversions.F32_Ext$ MODULE$;
    descriptor: Lorg/sireum/conversions/F32_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/F32_Ext$
         3: dup
         4: invokespecial #17                 // Method "<init>":()V
         7: putstatic     #19                 // Field MODULE$:Lorg/sireum/conversions/F32_Ext$;
        10: return
      LineNumberTable:
        line 2083: 0

  public boolean toB(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #27                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: fload_1
         4: getstatic     #30                 // Field org/sireum/F32$$String$.MODULE$:Lorg/sireum/F32$$String$;
         7: ldc           #32                 // String 0.0
         9: invokevirtual #36                 // Method org/sireum/F32$$String$.apply:(Ljava/lang/String;)F
        12: fcmpl
        13: ifeq          20
        16: iconst_1
        17: goto          21
        20: iconst_0
        21: invokevirtual #39                 // Method org/sireum/B$.apply:(Z)Z
        24: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/conversions/F32_Ext$, float ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 2085: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/conversions/F32_Ext$;
            0      25     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  public int toRawU32(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #48                 // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
         3: fload_1
         4: invokestatic  #53                 // Method java/lang/Float.floatToIntBits:(F)I
         7: invokevirtual #56                 // Method org/sireum/U32$.apply:(I)I
        10: ireturn
      LineNumberTable:
        line 2087: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/conversions/F32_Ext$;
            0      11     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  public float toF32(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: fload_1
         1: freturn
      LineNumberTable:
        line 2089: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/conversions/F32_Ext$;
            0       2     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal toR(float);
    descriptor: (F)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #65                 // Field org/sireum/R$.MODULE$:Lorg/sireum/R$;
         3: fload_1
         4: invokevirtual #67                 // Method org/sireum/R$.apply:(F)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 2091: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/F32_Ext$;
            0       8     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  private org.sireum.conversions.F32_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #68                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 2083: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/F32_Ext$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/F32$$String$ of class org/sireum/F32
SourceFile: "extension.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 0F 00 0E 01 00 14 00 15 01 00 39
   00 3A 01 00 3B 00 3C 01 00 2A 00 2B 01
  Scala: length = 0x0 (unknown attribute)

