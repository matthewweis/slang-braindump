Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/EvidenceIterableFactory.class
  Last modified May 29, 2022; size 9793 bytes
  SHA-256 checksum ded054814acef5e925f87d4926541c3de3f2c69235c9237364140239e974cd2c
  Compiled from "Factory.scala"
public interface scala.collection.EvidenceIterableFactory<CC extends java.lang.Object, Ev extends java.lang.Object> extends java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/EvidenceIterableFactory
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 18, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/EvidenceIterableFactory
    #2 = Class              #1            // scala/collection/EvidenceIterableFactory
    #3 = Utf8               <CC:Ljava/lang/Object;Ev:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               Factory.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\rEca\u0002\u0013&!\u0003\r\tA\u000b\u0005\u0006o\u0001!\t\u0001\u000f\u0005\u0006y\u00011\t!\u0010\u0005\u0006?\u00021\t\u0001\u0019\u0005\u0006S\u0002!\tA\u001b\u0005\u0006q\u0002!\t!\u001f\u0005\b\u00037\u0001A\u0011AA\u000f\u0011\u001d\ti\u0004\u0001C\u0001\u0003\u007fAq!a\u0018\u0001\t\u0003\t\t\u0007C\u0004\u0002\u0010\u00021\t!!%\t\u000f\u00055\u0006\u0001b\u0001\u00020\u001e9\u0011QY\u0013\t\u0002\u0005\u001dgA\u0002\u0013&\u0011\u0003\tI\rC\u0004\u0002Z2!\t!a7\t\u000f\u0005uG\u0002b\u0001\u0002`\u001aA!Q\u0002\u0007!\u0002\u0013\u0011y\u0001\u0003\u0006\u0003\u0006=\u0011\t\u0011)A\u0005\u0005GA!B!\r\u0010\u0005\u0007\u0005\u000b1\u0002B\u001a\u0011\u001d\tIn\u0004C\u0001\u0005kAqA!\u0011\u0010\t\u0003\u0011\u0019\u0005C\u0004\u0002\u0010>!\tA!\u0013\t\u000f\teC\u0002b\u0001\u0003\\\u00191!1\u0012\u0007\u0005\u0005\u001bC!B!\u0002\u0017\u0005\u0003\u0005\u000b\u0011\u0002BQ\u0011)\u0011yK\u0006B\u0002B\u0003-!\u0011\u0017\u0005\b\u000334B\u0011\u0001BZ\u0011\u001d\u0011\tE\u0006C\u0001\u0005{Cq!a$\u0017\t\u0003\u00119M\u0002\u0004\u0003N2\u0001!q\u001a\u0005\u000b\u0005Sd\"\u0011!Q\u0001\n\tM\u0007bBAm9\u0011\u0005!1\u001e\u0005\u0007Sr!\tE!=\t\r}cB\u0011AB\u0004\u0011\u0019aD\u0004\"\u0001\u0004\u0018!9\u0011q\u0012\u000f\u0005\u0002\r5\u0002\"CB!\u0019\u0005\u0005I\u0011BB\"\u0005])e/\u001b3f]\u000e,\u0017\n^3sC\ndWMR1di>\u0014\u0018P\u0003\u0002\'O\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003!\nQa]2bY\u0006\u001c\u0001!F\u0002,\u0005R\u001b2\u0001\u0001\u00171!\tic&D\u0001(\u0013\tysE\u0001\u0004B]f\u0014VM\u001a\t\u0003cQr!!\f\u001a\n\u0005M:\u0013a\u00029bG.\fw-Z\u0005\u0003kY\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!aM\u0014\u0002\r\u0011Jg.\u001b;%)\u0005I\u0004CA\u0017;\u0013\tYtE\u0001\u0003V]&$\u0018\u0001\u00024s_6,\"AP(\u0015\u0005}JFC\u0001!R!\r\t%I\u0014\u0007\u0001\t\u0019\u0019\u0005\u0001\"b\u0001\t\n\u00111iQ\u000b\u0003\u000b2\u000b\"AR%\u0011\u00055:\u0015B\u0001%(\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"!\f&\n\u0005-;#aA!os\u0012)QJ\u0011b\u0001\u000b\n)q\f\n\u00132mA\u0011\u0011i\u0014\u0003\u0006!\n\u0011\r!\u0012\u0002\u0002\u000b\"9!KAA\u0001\u0002\b\u0019\u0016AC3wS\u0012,gnY3%kA\u0019\u0011\t\u0016(\u0005\u000bU\u0003!\u0019\u0001,\u0003\u0005\u00153XCA#X\t\u0015AFK1\u0001F\u0005\u0015yF\u0005J\u00198\u0011\u0015Q&\u00011\u0001\\\u0003\tIG\u000fE\u0002];:k\u0011!J\u0005\u0003=\u0016\u0012A\"\u0013;fe\u0006\u0014G.Z(oG\u0016\fQ!Z7qif,\"!\u00193\u0015\u0005\t4\u0007cA!CGB\u0011\u0011\t\u001a\u0003\u0006K\u000e\u0011\r!\u0012\u0002\u0002\u0003\"9qmAA\u0001\u0002\bA\u0017AC3wS\u0012,gnY3%mA\u0019\u0011\tV2\u0002\u000b\u0005\u0004\b\u000f\\=\u0016\u0005-|GC\u00017t)\ti\u0007\u000fE\u0002B\u0005:\u0004\"!Q8\u0005\u000b\u0015$!\u0019A#\t\u000fE$\u0011\u0011!a\u0002e\u0006QQM^5eK:\u001cW\rJ\u001c\u0011\u0007\u0005#f\u000eC\u0003u\t\u0001\u0007Q/\u0001\u0002ygB\u0019QF\u001e8\n\u0005]<#A\u0003\u001fsKB,\u0017\r^3e}\u0005!a-\u001b7m+\tQx\u0010F\u0002|\u0003#!2\u0001`A\u0004)\ri\u0018\u0011\u0001\t\u0004\u0003\ns\bCA!\u0000\t\u0015)WA1\u0001F\u0011%\t\u0019!BA\u0001\u0002\b\t)!\u0001\u0006fm&$WM\\2fIa\u00022!\u0011+\u007f\u0011!\tI!\u0002CA\u0002\u0005-\u0011\u0001B3mK6\u0004B!LA\u0007}&\u0019\u0011qB\u0014\u0003\u0011q\u0012\u0017P\\1nKzBq!a\u0005\u0006\u0001\u0004\t)\"A\u0001o!\ri\u0013qC\u0005\u0004\u000339#aA%oi\u0006AA/\u00192vY\u0006$X-\u0006\u0003\u0002 \u0005%B\u0003BA\u0011\u0003w!B!a\t\u00022Q!\u0011QEA\u0016!\u0011\t%)a\n\u0011\u0007\u0005\u000bI\u0003B\u0003f\r\t\u0007Q\tC\u0005\u0002.\u0019\t\t\u0011q\u0001\u00020\u0005QQM^5eK:\u001cW\rJ\u001d\u0011\t\u0005#\u0016q\u0005\u0005\b\u0003g1\u0001\u0019AA\u001b\u0003\u00051\u0007cB\u0017\u00028\u0005U\u0011qE\u0005\u0004\u0003s9#!\u0003$v]\u000e$\u0018n\u001c82\u0011\u001d\t\u0019B\u0002a\u0001\u0003+\tq!\u001b;fe\u0006$X-\u0006\u0003\u0002B\u0005-CCBA\"\u0003/\nY\u0006\u0006\u0003\u0002F\u0005MC\u0003BA$\u0003\u001b\u0002B!\u0011\"\u0002JA\u0019\u0011)a\u0013\u0005\u000b\u0015<!\u0019A#\t\u0013\u0005=s!!AA\u0004\u0005E\u0013aC3wS\u0012,gnY3%cA\u0002B!\u0011+\u0002J!9\u00111G\u0004A\u0002\u0005U\u0003cB\u0017\u00028\u0005%\u0013\u0011\n\u0005\b\u00033:\u0001\u0019AA%\u0003\u0015\u0019H/\u0019:u\u0011\u001d\tif\u0002a\u0001\u0003+\t1\u0001\\3o\u0003\u0019)hNZ8mIV1\u00111MA7\u0003w\"B!!\u001a\u0002\fR!\u0011qMA;)\u0011\tI\'a\u001c\u0011\t\u0005\u0013\u00151\u000e\t\u0004\u0003\u00065D!B3\t\u0005\u0004)\u0005\"CA9\u0011\u0005\u0005\t9AA:\u0003-)g/\u001b3f]\u000e,G%M\u0019\u0011\t\u0005#\u00161\u000e\u0005\b\u0003gA\u0001\u0019AA<!\u001di\u0013qGA=\u0003\u007f\u00022!QA>\t\u0019\ti\b\u0003b\u0001\u000b\n\t1\u000bE\u0003.\u0003\u0003\u000b))C\u0002\u0002\u0004\u001e\u0012aa\u00149uS>t\u0007cB\u0017\u0002\b\u0006-\u0014\u0011P\u0005\u0004\u0003\u0013;#A\u0002+va2,\'\u0007C\u0004\u0002\u000e\"\u0001\r!!\u001f\u0002\t%t\u0017\u000e^\u0001\u000b]\u0016<()^5mI\u0016\u0014X\u0003BAJ\u0003G#B!!&\u0002(BA\u0011qSAO\u0003C\u000b)+\u0004\u0002\u0002\u001a*\u0019\u00111T\u0013\u0002\u000f5,H/\u00192mK&!\u0011qTAM\u0005\u001d\u0011U/\u001b7eKJ\u00042!QAR\t\u0015)\u0017B1\u0001F!\u0011\t%)!)\t\u0013\u0005%\u0016\"!AA\u0004\u0005-\u0016aC3wS\u0012,gnY3%cI\u0002B!\u0011+\u0002\"\u00069RM^5eK:\u001cW-\u0013;fe\u0006\u0014G.\u001a$bGR|\'/_\u000b\u0005\u0003c\u000bY\f\u0006\u0003\u00024\u0006}\u0006c\u0002/\u00026\u0006e\u0016QX\u0005\u0004\u0003o+#a\u0002$bGR|\'/\u001f\t\u0004\u0003\u0006mF!B3\u000b\u0005\u0004)\u0005\u0003B!C\u0003sC\u0011\"!1\u000b\u0003\u0003\u0005\u001d!a1\u0002\u0017\u00154\u0018\u000eZ3oG\u0016$\u0013g\r\t\u0005\u0003R\u000bI,A\fFm&$WM\\2f\u0013R,\'/\u00192mK\u001a\u000b7\r^8ssB\u0011A\fD\n\u0005\u00191\nY\r\u0005\u0003\u0002N\u0006]WBAAh\u0015\u0011\t\t.a5\u0002\u0005%|\'BAAk\u0003\u0011Q\u0017M^1\n\u0007U\ny-\u0001\u0004=S:LGO\u0010\u000b\u0003\u0003\u000f\f\u0011\u0002^8GC\u000e$xN]=\u0016\u0011\u0005\u0005\u00181`Au\u0003[$B!a9\u0003\u0004Q!\u0011Q]A{!\u001da\u0016QWAt\u0003W\u00042!QAu\t\u0015)gB1\u0001F!\u0015\t\u0015Q^At\t\u0019\u0019eB1\u0001\u0002pV\u0019Q)!=\u0005\u000f\u0005M\u0018Q\u001eb\u0001\u000b\n)q\f\n\u00132s!I\u0011q\u001f\b\u0002\u0002\u0003\u000f\u0011\u0011`\u0001\fKZLG-\u001a8dK\u0012\nD\u0007E\u0003B\u0003w\f9\u000f\u0002\u0004V\u001d\t\u0007\u0011Q`\u000b\u0004\u000b\u0006}Ha\u0002B\u0001\u0003w\u0014\r!\u0012\u0002\u0006?\u0012\"\u0013\u0007\u000f\u0005\b\u0005\u000bq\u0001\u0019\u0001B\u0004\u0003\u001d1\u0017m\u0019;pef\u0004b\u0001\u0018\u0001\u0003\n\t-\u0001cA!\u0002nB\u0019\u0011)a?\u0003\u0013Q{g)Y2u_JLX\u0003\u0003B\t\u0005S\u00119Ba\u0007\u0014\u000b=a#1\u0003\u0019\u0011\u000fq\u000b)L!\u0006\u0003\u001aA\u0019\u0011Ia\u0006\u0005\u000b\u0015|!\u0019A#\u0011\u000b\u0005\u0013YB!\u0006\u0005\r\r{!\u0019\u0001B\u000f+\r)%q\u0004\u0003\b\u0005C\u0011YB1\u0001F\u0005\u0015yF\u0005\n\u001a2!\u0019a\u0006A!\n\u0003(A\u0019\u0011Ia\u0007\u0011\u0007\u0005\u0013I\u0003\u0002\u0004V\u001f\t\u0007!1F\u000b\u0004\u000b\n5Ba\u0002B\u0018\u0005S\u0011\r!\u0012\u0002\u0006?\u0012\"#\u0007M\u0001\fKZLG-\u001a8dK\u0012\nT\u0007E\u0003B\u0005S\u0011)\u0002\u0006\u0003\u00038\t}B\u0003\u0002B\u001d\u0005{\u0001\u0012Ba\u000f\u0010\u0005O\u0011)B!\n\u000e\u00031AqA!\r\u0013\u0001\b\u0011\u0019\u0004C\u0004\u0003\u0006I\u0001\rAa\t\u0002\u0019\u0019\u0014x.\\*qK\u000eLg-[2\u0015\t\te!Q\t\u0005\u00075N\u0001\rAa\u0012\u0011\tqk&QC\u000b\u0003\u0005\u0017\u0002\u0002\"a&\u0002\u001e\nU!\u0011\u0004\u0015\b\u001f\t=#Q\u000bB,!\ri#\u0011K\u0005\u0004\u0005\':#\u0001E*fe&\fGNV3sg&|g.V%E\u0003\u00151\u0018\r\\;f=\u0005\u0019\u0011a\u0003;p\u0005VLG\u000e\u001a$s_6,\u0002B!\u0018\u0003|\t%$Q\u000e\u000b\u0005\u0005?\u0012\u0019\t\u0006\u0003\u0003b\tU\u0004\u0003\u0003/\u0003d%\u00139Ga\u001b\n\u0007\t\u0015TEA\u0005Ck&dGM\u0012:p[B\u0019\u0011I!\u001b\u0005\u000b\u0015,\"\u0019A#\u0011\u000b\u0005\u0013iGa\u001a\u0005\r\r+\"\u0019\u0001B8+\r)%\u0011\u000f\u0003\b\u0005g\u0012iG1\u0001F\u0005\u0015yF\u0005\n\u001a4\u0011%\u00119(FA\u0001\u0002\b\u0011I(A\u0006fm&$WM\\2fIE2\u0004#B!\u0003|\t\u001dDAB+\u0016\u0005\u0004\u0011i(F\u0002F\u0005\u007f\"qA!!\u0003|\t\u0007QIA\u0003`I\u0011\u0012$\u0007C\u0004\u0003\u0006U\u0001\rA!\"\u0011\rq\u0003!q\u0011BE!\r\t%Q\u000e\t\u0004\u0003\nm$AI#wS\u0012,gnY3Ji\u0016\u0014\u0018M\u00197f\r\u0006\u001cGo\u001c:z)>\u0014U/\u001b7e\rJ|W.\u0006\u0005\u0003\u0010\n\u001d&Q\u0013BM\'\u00111BF!%\u0011\u0011q\u0013\u0019\'\u0013BJ\u0005/\u00032!\u0011BK\t\u0015)gC1\u0001F!\u0015\t%\u0011\u0014BJ\t\u0019\u0019eC1\u0001\u0003\u001cV\u0019QI!(\u0005\u000f\t}%\u0011\u0014b\u0001\u000b\n)q\f\n\u00133kA1A\f\u0001BR\u0005K\u00032!\u0011BM!\r\t%q\u0015\u0003\u0007+Z\u0011\rA!+\u0016\u0007\u0015\u0013Y\u000bB\u0004\u0003.\n\u001d&\u0019A#\u0003\u000b}#CE\r\u001b\u0002\u0017\u00154\u0018\u000eZ3oG\u0016$\u0013g\u000e\t\u0006\u0003\n\u001d&1\u0013\u000b\u0005\u0005k\u0013Y\f\u0006\u0003\u00038\ne\u0006#\u0003B\u001e-\t\u0015&1\u0013BR\u0011\u001d\u0011y+\u0007a\u0002\u0005cCqA!\u0002\u001a\u0001\u0004\u0011\t\u000b\u0006\u0003\u0003@\n\u0015G\u0003\u0002BL\u0005\u0003DaA\u0017\u000eA\u0002\t\r\u0007\u0003\u0002/^\u0005\'CQ\u0001\u0010\u000eA\u0002%#BA!3\u0003LBA\u0011qSAO\u0005\'\u00139\nC\u0003=7\u0001\u0007\u0011J\u0001\u0005EK2,w-\u0019;f+\u0019\u0011\tNa6\u0003bN!A\u0004\fBj!\u0019a\u0006A!6\u0003`B\u0019\u0011Ia6\u0005\r\rc\"\u0019\u0001Bm+\r)%1\u001c\u0003\b\u0005;\u00149N1\u0001F\u0005\u0015yF\u0005\n\u001a7!\r\t%\u0011\u001d\u0003\u0007+r\u0011\rAa9\u0016\u0007\u0015\u0013)\u000fB\u0004\u0003h\n\u0005(\u0019A#\u0003\u000b}#CEM\u001c\u0002\u0011\u0011,G.Z4bi\u0016$BA!<\u0003pB9!1\b\u000f\u0003V\n}\u0007b\u0002Bu=\u0001\u0007!1[\u000b\u0005\u0005g\u0014Y\u0010\u0006\u0003\u0003v\u000e\rA\u0003\u0002B|\u0005{\u0004R!\u0011Bl\u0005s\u00042!\u0011B~\t\u0015)wD1\u0001F\u0011%\u0011ypHA\u0001\u0002\b\u0019\t!A\u0006fm&$WM\\2fIEB\u0004#B!\u0003b\ne\bB\u0002; \u0001\u0004\u0019)\u0001\u0005\u0003.m\neX\u0003BB\u0005\u0007\u001f!Baa\u0003\u0004\u0012A)\u0011Ia6\u0004\u000eA\u0019\u0011ia\u0004\u0005\u000b\u0015\u0004#\u0019A#\t\u0013\rM\u0001%!AA\u0004\rU\u0011aC3wS\u0012,gnY3%ce\u0002R!\u0011Bq\u0007\u001b)Ba!\u0007\u0004\"Q!11DB\u0015)\u0011\u0019iba\t\u0011\u000b\u0005\u00139na\b\u0011\u0007\u0005\u001b\t\u0003B\u0003QC\t\u0007Q\tC\u0005\u0004&\u0005\n\t\u0011q\u0001\u0004(\u0005YQM^5eK:\u001cW\r\n\u001a1!\u0015\t%\u0011]B\u0010\u0011\u0019Q\u0016\u00051\u0001\u0004,A!A,XB\u0010+\u0011\u0019yc!\u000e\u0015\t\rE2\u0011\b\t\t\u0003/\u000bija\r\u00048A\u0019\u0011i!\u000e\u0005\u000b\u0015\u0014#\u0019A#\u0011\u000b\u0005\u00139na\r\t\u0013\rm\"%!AA\u0004\ru\u0012aC3wS\u0012,gnY3%eE\u0002R!\u0011Bq\u0007gAs\u0001\bB(\u0005+\u00129&\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0004FA!1qIB\'\u001b\t\u0019IE\u0003\u0003\u0004L\u0005M\u0017\u0001\u00027b]\u001eLAaa\u0014\u0004J\t1qJ\u00196fGR\u0004
   #12 = Utf8               scala/collection/EvidenceIterableFactory$Delegate
   #13 = Class              #12           // scala/collection/EvidenceIterableFactory$Delegate
   #14 = Utf8               Delegate
   #15 = Utf8               scala/collection/EvidenceIterableFactory$EvidenceIterableFactoryToBuildFrom
   #16 = Class              #15           // scala/collection/EvidenceIterableFactory$EvidenceIterableFactoryToBuildFrom
   #17 = Utf8               EvidenceIterableFactoryToBuildFrom
   #18 = Utf8               scala/collection/EvidenceIterableFactory$ToFactory
   #19 = Class              #18           // scala/collection/EvidenceIterableFactory$ToFactory
   #20 = Utf8               ToFactory
   #21 = Utf8               scala/collection/View$Fill
   #22 = Class              #21           // scala/collection/View$Fill
   #23 = Utf8               scala/collection/View
   #24 = Class              #23           // scala/collection/View
   #25 = Utf8               Fill
   #26 = Utf8               scala/collection/View$Iterate
   #27 = Class              #26           // scala/collection/View$Iterate
   #28 = Utf8               Iterate
   #29 = Utf8               scala/collection/View$Tabulate
   #30 = Class              #29           // scala/collection/View$Tabulate
   #31 = Utf8               Tabulate
   #32 = Utf8               scala/collection/View$Unfold
   #33 = Class              #32           // scala/collection/View$Unfold
   #34 = Utf8               Unfold
   #35 = Utf8               toBuildFrom
   #36 = Utf8               (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)Lscala/collection/BuildFrom;
   #37 = Utf8               <Ev:Ljava/lang/Object;A:Ljava/lang/Object;CC:Ljava/lang/Object;>(Lscala/collection/EvidenceIterableFactory<TCC;TEv;>;TEv;)Lscala/collection/BuildFrom<Ljava/lang/Object;TA;TCC;>;
   #38 = Utf8               factory
   #39 = Utf8               evidence$16
   #40 = Utf8               scala/collection/EvidenceIterableFactory$
   #41 = Class              #40           // scala/collection/EvidenceIterableFactory$
   #42 = Utf8               MODULE$
   #43 = Utf8               Lscala/collection/EvidenceIterableFactory$;
   #44 = NameAndType        #42:#43       // MODULE$:Lscala/collection/EvidenceIterableFactory$;
   #45 = Fieldref           #41.#44       // scala/collection/EvidenceIterableFactory$.MODULE$:Lscala/collection/EvidenceIterableFactory$;
   #46 = Utf8               <init>
   #47 = Utf8               (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)V
   #48 = NameAndType        #46:#47       // "<init>":(Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)V
   #49 = Methodref          #16.#48       // scala/collection/EvidenceIterableFactory$EvidenceIterableFactoryToBuildFrom."<init>":(Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)V
   #50 = Utf8               Lscala/collection/EvidenceIterableFactory;
   #51 = Utf8               Ljava/lang/Object;
   #52 = Utf8               toFactory
   #53 = Utf8               (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)Lscala/collection/Factory;
   #54 = Utf8               <Ev:Ljava/lang/Object;A:Ljava/lang/Object;CC:Ljava/lang/Object;>(Lscala/collection/EvidenceIterableFactory<TCC;TEv;>;TEv;)Lscala/collection/Factory<TA;TCC;>;
   #55 = Utf8               evidence$14
   #56 = Methodref          #19.#48       // scala/collection/EvidenceIterableFactory$ToFactory."<init>":(Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)V
   #57 = Utf8               from
   #58 = Utf8               (Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
   #59 = Utf8               <E:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TE;>;TEv;)TCC;
   #60 = Utf8               it
   #61 = Utf8               evidence$5
   #62 = Utf8               empty
   #63 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #64 = Utf8               <A:Ljava/lang/Object;>(TEv;)TCC;
   #65 = Utf8               evidence$6
   #66 = Utf8               apply$
   #67 = Utf8               (Lscala/collection/EvidenceIterableFactory;Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
   #68 = Utf8               $this
   #69 = Utf8               xs
   #70 = Utf8               evidence$7
   #71 = Utf8               apply
   #72 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
   #73 = NameAndType        #71:#72       // apply:(Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
   #74 = InterfaceMethodref #2.#73        // scala/collection/EvidenceIterableFactory.apply:(Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
   #75 = Utf8               Lscala/collection/immutable/Seq;
   #76 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<TA;>;TEv;)TCC;
   #77 = NameAndType        #57:#58       // from:(Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
   #78 = InterfaceMethodref #2.#77        // scala/collection/EvidenceIterableFactory.from:(Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
   #79 = Utf8               this
   #80 = Utf8               fill$
   #81 = Utf8               (Lscala/collection/EvidenceIterableFactory;ILscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
   #82 = Utf8               n
   #83 = Utf8               elem
   #84 = Utf8               evidence$8
   #85 = Utf8               fill
   #86 = Utf8               (ILscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
   #87 = NameAndType        #85:#86       // fill:(ILscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
   #88 = InterfaceMethodref #2.#87        // scala/collection/EvidenceIterableFactory.fill:(ILscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
   #89 = Utf8               I
   #90 = Utf8               Lscala/Function0;
   #91 = Utf8               <A:Ljava/lang/Object;>(ILscala/Function0<TA;>;TEv;)TCC;
   #92 = Utf8               (ILscala/Function0;)V
   #93 = NameAndType        #46:#92       // "<init>":(ILscala/Function0;)V
   #94 = Methodref          #22.#93       // scala/collection/View$Fill."<init>":(ILscala/Function0;)V
   #95 = Utf8               tabulate$
   #96 = Utf8               (Lscala/collection/EvidenceIterableFactory;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
   #97 = Utf8               f
   #98 = Utf8               evidence$9
   #99 = Utf8               tabulate
  #100 = Utf8               (ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #101 = NameAndType        #99:#100      // tabulate:(ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #102 = InterfaceMethodref #2.#101       // scala/collection/EvidenceIterableFactory.tabulate:(ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #103 = Utf8               Lscala/Function1;
  #104 = Utf8               <A:Ljava/lang/Object;>(ILscala/Function1<Ljava/lang/Object;TA;>;TEv;)TCC;
  #105 = Utf8               (ILscala/Function1;)V
  #106 = NameAndType        #46:#105      // "<init>":(ILscala/Function1;)V
  #107 = Methodref          #30.#106      // scala/collection/View$Tabulate."<init>":(ILscala/Function1;)V
  #108 = Utf8               iterate$
  #109 = Utf8               (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #110 = Utf8               start
  #111 = Utf8               len
  #112 = Utf8               evidence$10
  #113 = Utf8               iterate
  #114 = Utf8               (Ljava/lang/Object;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #115 = NameAndType        #113:#114     // iterate:(Ljava/lang/Object;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #116 = InterfaceMethodref #2.#115       // scala/collection/EvidenceIterableFactory.iterate:(Ljava/lang/Object;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #117 = Utf8               <A:Ljava/lang/Object;>(TA;ILscala/Function1<TA;TA;>;TEv;)TCC;
  #118 = Utf8               (Ljava/lang/Object;ILscala/Function1;)V
  #119 = NameAndType        #46:#118      // "<init>":(Ljava/lang/Object;ILscala/Function1;)V
  #120 = Methodref          #27.#119      // scala/collection/View$Iterate."<init>":(Ljava/lang/Object;ILscala/Function1;)V
  #121 = Utf8               unfold$
  #122 = Utf8               (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #123 = Utf8               init
  #124 = Utf8               evidence$11
  #125 = Utf8               unfold
  #126 = Utf8               (Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #127 = NameAndType        #125:#126     // unfold:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #128 = InterfaceMethodref #2.#127       // scala/collection/EvidenceIterableFactory.unfold:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
  #129 = Utf8               <A:Ljava/lang/Object;S:Ljava/lang/Object;>(TS;Lscala/Function1<TS;Lscala/Option<Lscala/Tuple2<TA;TS;>;>;>;TEv;)TCC;
  #130 = Utf8               (Ljava/lang/Object;Lscala/Function1;)V
  #131 = NameAndType        #46:#130      // "<init>":(Ljava/lang/Object;Lscala/Function1;)V
  #132 = Methodref          #33.#131      // scala/collection/View$Unfold."<init>":(Ljava/lang/Object;Lscala/Function1;)V
  #133 = Utf8               newBuilder
  #134 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  #135 = Utf8               <A:Ljava/lang/Object;>(TEv;)Lscala/collection/mutable/Builder<TA;TCC;>;
  #136 = Utf8               evidence$12
  #137 = Utf8               evidenceIterableFactory$
  #138 = Utf8               evidence$13
  #139 = Utf8               evidenceIterableFactory
  #140 = Utf8               (Ljava/lang/Object;)Lscala/collection/Factory;
  #141 = NameAndType        #139:#140     // evidenceIterableFactory:(Ljava/lang/Object;)Lscala/collection/Factory;
  #142 = InterfaceMethodref #2.#141       // scala/collection/EvidenceIterableFactory.evidenceIterableFactory:(Ljava/lang/Object;)Lscala/collection/Factory;
  #143 = Utf8               <A:Ljava/lang/Object;>(TEv;)Lscala/collection/Factory<TA;TCC;>;
  #144 = Utf8               $init$
  #145 = Utf8               (Lscala/collection/EvidenceIterableFactory;)V
  #146 = Utf8               Code
  #147 = Utf8               LineNumberTable
  #148 = Utf8               LocalVariableTable
  #149 = Utf8               Signature
  #150 = Utf8               MethodParameters
  #151 = Utf8               InnerClasses
  #152 = Utf8               SourceFile
  #153 = Utf8               RuntimeVisibleAnnotations
  #154 = Utf8               ScalaInlineInfo
  #155 = Utf8               ScalaSig
{
  public static <Ev extends java.lang.Object, A extends java.lang.Object, CC extends java.lang.Object> scala.collection.BuildFrom<java.lang.Object, A, CC> toBuildFrom(scala.collection.EvidenceIterableFactory<CC, Ev>, Ev);
    descriptor: (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)Lscala/collection/BuildFrom;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #45                 // Field scala/collection/EvidenceIterableFactory$.MODULE$:Lscala/collection/EvidenceIterableFactory$;
         3: pop
         4: new           #16                 // class scala/collection/EvidenceIterableFactory$EvidenceIterableFactoryToBuildFrom
         7: dup
         8: aload_0
         9: aload_1
        10: invokespecial #49                 // Method scala/collection/EvidenceIterableFactory$EvidenceIterableFactoryToBuildFrom."<init>":(Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)V
        13: areturn
      LineNumberTable:
        line 524: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 factory   Lscala/collection/EvidenceIterableFactory;
            0      14     1 evidence$16   Ljava/lang/Object;
    Signature: #37                          // <Ev:Ljava/lang/Object;A:Ljava/lang/Object;CC:Ljava/lang/Object;>(Lscala/collection/EvidenceIterableFactory<TCC;TEv;>;TEv;)Lscala/collection/BuildFrom<Ljava/lang/Object;TA;TCC;>;
    MethodParameters:
      Name                           Flags
      factory                        final
      evidence$16                    final

  public static <Ev extends java.lang.Object, A extends java.lang.Object, CC extends java.lang.Object> scala.collection.Factory<A, CC> toFactory(scala.collection.EvidenceIterableFactory<CC, Ev>, Ev);
    descriptor: (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)Lscala/collection/Factory;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #45                 // Field scala/collection/EvidenceIterableFactory$.MODULE$:Lscala/collection/EvidenceIterableFactory$;
         3: pop
         4: new           #19                 // class scala/collection/EvidenceIterableFactory$ToFactory
         7: dup
         8: aload_0
         9: aload_1
        10: invokespecial #56                 // Method scala/collection/EvidenceIterableFactory$ToFactory."<init>":(Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)V
        13: areturn
      LineNumberTable:
        line 516: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 factory   Lscala/collection/EvidenceIterableFactory;
            0      14     1 evidence$14   Ljava/lang/Object;
    Signature: #54                          // <Ev:Ljava/lang/Object;A:Ljava/lang/Object;CC:Ljava/lang/Object;>(Lscala/collection/EvidenceIterableFactory<TCC;TEv;>;TEv;)Lscala/collection/Factory<TA;TCC;>;
    MethodParameters:
      Name                           Flags
      factory                        final
      evidence$14                    final

  public abstract <E extends java.lang.Object> CC from(scala.collection.IterableOnce<E>, Ev);
    descriptor: (Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #59                          // <E:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TE;>;TEv;)TCC;
    MethodParameters:
      Name                           Flags
      it                             final
      evidence$5                     final

  public abstract <A extends java.lang.Object> CC empty(Ev);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #64                          // <A:Ljava/lang/Object;>(TEv;)TCC;
    MethodParameters:
      Name                           Flags
      evidence$6                     final

  public static java.lang.Object apply$(scala.collection.EvidenceIterableFactory, scala.collection.immutable.Seq, java.lang.Object);
    descriptor: (Lscala/collection/EvidenceIterableFactory;Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #74                 // InterfaceMethod apply:(Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 463: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/collection/EvidenceIterableFactory;
            0       7     1    xs   Lscala/collection/immutable/Seq;
            0       7     2 evidence$7   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      xs                             final
      evidence$7                     final

  public default <A extends java.lang.Object> CC apply(scala.collection.immutable.Seq<A>, Ev);
    descriptor: (Lscala/collection/immutable/Seq;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #78,  3           // InterfaceMethod from:(Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 463: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/EvidenceIterableFactory;
            0       9     1    xs   Lscala/collection/immutable/Seq;
            0       9     2 evidence$7   Ljava/lang/Object;
    Signature: #76                          // <A:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<TA;>;TEv;)TCC;
    MethodParameters:
      Name                           Flags
      xs                             final
      evidence$7                     final

  public static java.lang.Object fill$(scala.collection.EvidenceIterableFactory, int, scala.Function0, java.lang.Object);
    descriptor: (Lscala/collection/EvidenceIterableFactory;ILscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: iload_1
         2: aload_2
         3: aload_3
         4: invokespecial #88                 // InterfaceMethod fill:(ILscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 470: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/collection/EvidenceIterableFactory;
            0       8     1     n   I
            0       8     2  elem   Lscala/Function0;
            0       8     3 evidence$8   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final
      elem                           final
      evidence$8                     final

  public default <A extends java.lang.Object> CC fill(int, scala.Function0<A>, Ev);
    descriptor: (ILscala/Function0;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: new           #22                 // class scala/collection/View$Fill
         4: dup
         5: iload_1
         6: aload_2
         7: invokespecial #94                 // Method scala/collection/View$Fill."<init>":(ILscala/Function0;)V
        10: aload_3
        11: invokeinterface #78,  3           // InterfaceMethod from:(Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
        16: areturn
      LineNumberTable:
        line 470: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/EvidenceIterableFactory;
            0      17     1     n   I
            0      17     2  elem   Lscala/Function0;
            0      17     3 evidence$8   Ljava/lang/Object;
    Signature: #91                          // <A:Ljava/lang/Object;>(ILscala/Function0<TA;>;TEv;)TCC;
    MethodParameters:
      Name                           Flags
      n                              final
      elem                           final
      evidence$8                     final

  public static java.lang.Object tabulate$(scala.collection.EvidenceIterableFactory, int, scala.Function1, java.lang.Object);
    descriptor: (Lscala/collection/EvidenceIterableFactory;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: iload_1
         2: aload_2
         3: aload_3
         4: invokespecial #102                // InterfaceMethod tabulate:(ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 477: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/collection/EvidenceIterableFactory;
            0       8     1     n   I
            0       8     2     f   Lscala/Function1;
            0       8     3 evidence$9   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final
      f                              final
      evidence$9                     final

  public default <A extends java.lang.Object> CC tabulate(int, scala.Function1<java.lang.Object, A>, Ev);
    descriptor: (ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: new           #30                 // class scala/collection/View$Tabulate
         4: dup
         5: iload_1
         6: aload_2
         7: invokespecial #107                // Method scala/collection/View$Tabulate."<init>":(ILscala/Function1;)V
        10: aload_3
        11: invokeinterface #78,  3           // InterfaceMethod from:(Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
        16: areturn
      LineNumberTable:
        line 477: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/EvidenceIterableFactory;
            0      17     1     n   I
            0      17     2     f   Lscala/Function1;
            0      17     3 evidence$9   Ljava/lang/Object;
    Signature: #104                         // <A:Ljava/lang/Object;>(ILscala/Function1<Ljava/lang/Object;TA;>;TEv;)TCC;
    MethodParameters:
      Name                           Flags
      n                              final
      f                              final
      evidence$9                     final

  public static java.lang.Object iterate$(scala.collection.EvidenceIterableFactory, java.lang.Object, int, scala.Function1, java.lang.Object);
    descriptor: (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: iload_2
         3: aload_3
         4: aload         4
         6: invokespecial #116                // InterfaceMethod iterate:(Ljava/lang/Object;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 486: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lscala/collection/EvidenceIterableFactory;
            0      10     1 start   Ljava/lang/Object;
            0      10     2   len   I
            0      10     3     f   Lscala/Function1;
            0      10     4 evidence$10   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      start                          final
      len                            final
      f                              final
      evidence$10                    final

  public default <A extends java.lang.Object> CC iterate(A, int, scala.Function1<A, A>, Ev);
    descriptor: (Ljava/lang/Object;ILscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: aload_0
         1: new           #27                 // class scala/collection/View$Iterate
         4: dup
         5: aload_1
         6: iload_2
         7: aload_3
         8: invokespecial #120                // Method scala/collection/View$Iterate."<init>":(Ljava/lang/Object;ILscala/Function1;)V
        11: aload         4
        13: invokeinterface #78,  3           // InterfaceMethod from:(Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
        18: areturn
      LineNumberTable:
        line 486: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/collection/EvidenceIterableFactory;
            0      19     1 start   Ljava/lang/Object;
            0      19     2   len   I
            0      19     3     f   Lscala/Function1;
            0      19     4 evidence$10   Ljava/lang/Object;
    Signature: #117                         // <A:Ljava/lang/Object;>(TA;ILscala/Function1<TA;TA;>;TEv;)TCC;
    MethodParameters:
      Name                           Flags
      start                          final
      len                            final
      f                              final
      evidence$10                    final

  public static java.lang.Object unfold$(scala.collection.EvidenceIterableFactory, java.lang.Object, scala.Function1, java.lang.Object);
    descriptor: (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokespecial #128                // InterfaceMethod unfold:(Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 498: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/collection/EvidenceIterableFactory;
            0       8     1  init   Ljava/lang/Object;
            0       8     2     f   Lscala/Function1;
            0       8     3 evidence$11   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      init                           final
      f                              final
      evidence$11                    final

  public default <A extends java.lang.Object, S extends java.lang.Object> CC unfold(S, scala.Function1<S, scala.Option<scala.Tuple2<A, S>>>, Ev);
    descriptor: (Ljava/lang/Object;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: new           #33                 // class scala/collection/View$Unfold
         4: dup
         5: aload_1
         6: aload_2
         7: invokespecial #132                // Method scala/collection/View$Unfold."<init>":(Ljava/lang/Object;Lscala/Function1;)V
        10: aload_3
        11: invokeinterface #78,  3           // InterfaceMethod from:(Lscala/collection/IterableOnce;Ljava/lang/Object;)Ljava/lang/Object;
        16: areturn
      LineNumberTable:
        line 498: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/EvidenceIterableFactory;
            0      17     1  init   Ljava/lang/Object;
            0      17     2     f   Lscala/Function1;
            0      17     3 evidence$11   Ljava/lang/Object;
    Signature: #129                         // <A:Ljava/lang/Object;S:Ljava/lang/Object;>(TS;Lscala/Function1<TS;Lscala/Option<Lscala/Tuple2<TA;TS;>;>;>;TEv;)TCC;
    MethodParameters:
      Name                           Flags
      init                           final
      f                              final
      evidence$11                    final

  public abstract <A extends java.lang.Object> scala.collection.mutable.Builder<A, CC> newBuilder(Ev);
    descriptor: (Ljava/lang/Object;)Lscala/collection/mutable/Builder;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #135                         // <A:Ljava/lang/Object;>(TEv;)Lscala/collection/mutable/Builder<TA;TCC;>;
    MethodParameters:
      Name                           Flags
      evidence$12                    final

  public static scala.collection.Factory evidenceIterableFactory$(scala.collection.EvidenceIterableFactory, java.lang.Object);
    descriptor: (Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)Lscala/collection/Factory;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #142                // InterfaceMethod evidenceIterableFactory:(Ljava/lang/Object;)Lscala/collection/Factory;
         5: areturn
      LineNumberTable:
        line 502: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/EvidenceIterableFactory;
            0       6     1 evidence$13   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      evidence$13                    final

  public default <A extends java.lang.Object> scala.collection.Factory<A, CC> evidenceIterableFactory(Ev);
    descriptor: (Ljava/lang/Object;)Lscala/collection/Factory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #45                 // Field scala/collection/EvidenceIterableFactory$.MODULE$:Lscala/collection/EvidenceIterableFactory$;
         3: pop
         4: new           #19                 // class scala/collection/EvidenceIterableFactory$ToFactory
         7: dup
         8: aload_0
         9: aload_1
        10: invokespecial #56                 // Method scala/collection/EvidenceIterableFactory$ToFactory."<init>":(Lscala/collection/EvidenceIterableFactory;Ljava/lang/Object;)V
        13: areturn
      LineNumberTable:
        line 502: 0
        line 516: 4
        line 502: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/collection/EvidenceIterableFactory;
            0      14     1 evidence$13   Ljava/lang/Object;
    Signature: #143                         // <A:Ljava/lang/Object;>(TEv;)Lscala/collection/Factory<TA;TCC;>;
    MethodParameters:
      Name                           Flags
      evidence$13                    final

  public static void $init$(scala.collection.EvidenceIterableFactory);
    descriptor: (Lscala/collection/EvidenceIterableFactory;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 457: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/collection/EvidenceIterableFactory;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public static #14= #13 of #2;           // Delegate=class scala/collection/EvidenceIterableFactory$Delegate of class scala/collection/EvidenceIterableFactory
  private static #17= #16 of #2;          // EvidenceIterableFactoryToBuildFrom=class scala/collection/EvidenceIterableFactory$EvidenceIterableFactoryToBuildFrom of class scala/collection/EvidenceIterableFactory
  private static #20= #19 of #2;          // ToFactory=class scala/collection/EvidenceIterableFactory$ToFactory of class scala/collection/EvidenceIterableFactory
  public static #25= #22 of #24;          // Fill=class scala/collection/View$Fill of class scala/collection/View
  public static #28= #27 of #24;          // Iterate=class scala/collection/View$Iterate of class scala/collection/View
  public static #31= #30 of #24;          // Tabulate=class scala/collection/View$Tabulate of class scala/collection/View
  public static #34= #33 of #24;          // Unfold=class scala/collection/View$Unfold of class scala/collection/View
Signature: #3                           // <CC:Ljava/lang/Object;Ev:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;
SourceFile: "Factory.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\rEca\u0002\u0013&!\u0003\r\tA\u000b\u0005\u0006o\u0001!\t\u0001\u000f\u0005\u0006y\u00011\t!\u0010\u0005\u0006?\u00021\t\u0001\u0019\u0005\u0006S\u0002!\tA\u001b\u0005\u0006q\u0002!\t!\u001f\u0005\b\u00037\u0001A\u0011AA\u000f\u0011\u001d\ti\u0004\u0001C\u0001\u0003\u007fAq!a\u0018\u0001\t\u0003\t\t\u0007C\u0004\u0002\u0010\u00021\t!!%\t\u000f\u00055\u0006\u0001b\u0001\u00020\u001e9\u0011QY\u0013\t\u0002\u0005\u001dgA\u0002\u0013&\u0011\u0003\tI\rC\u0004\u0002Z2!\t!a7\t\u000f\u0005uG\u0002b\u0001\u0002`\u001aA!Q\u0002\u0007!\u0002\u0013\u0011y\u0001\u0003\u0006\u0003\u0006=\u0011\t\u0011)A\u0005\u0005GA!B!\r\u0010\u0005\u0007\u0005\u000b1\u0002B\u001a\u0011\u001d\tIn\u0004C\u0001\u0005kAqA!\u0011\u0010\t\u0003\u0011\u0019\u0005C\u0004\u0002\u0010>!\tA!\u0013\t\u000f\teC\u0002b\u0001\u0003\\\u00191!1\u0012\u0007\u0005\u0005\u001bC!B!\u0002\u0017\u0005\u0003\u0005\u000b\u0011\u0002BQ\u0011)\u0011yK\u0006B\u0002B\u0003-!\u0011\u0017\u0005\b\u000334B\u0011\u0001BZ\u0011\u001d\u0011\tE\u0006C\u0001\u0005{Cq!a$\u0017\t\u0003\u00119M\u0002\u0004\u0003N2\u0001!q\u001a\u0005\u000b\u0005Sd\"\u0011!Q\u0001\n\tM\u0007bBAm9\u0011\u0005!1\u001e\u0005\u0007Sr!\tE!=\t\r}cB\u0011AB\u0004\u0011\u0019aD\u0004\"\u0001\u0004\u0018!9\u0011q\u0012\u000f\u0005\u0002\r5\u0002\"CB!\u0019\u0005\u0005I\u0011BB\"\u0005])e/\u001b3f]\u000e,\u0017\n^3sC\ndWMR1di>\u0014\u0018P\u0003\u0002\'O\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003!\nQa]2bY\u0006\u001c\u0001!F\u0002,\u0005R\u001b2\u0001\u0001\u00171!\tic&D\u0001(\u0013\tysE\u0001\u0004B]f\u0014VM\u001a\t\u0003cQr!!\f\u001a\n\u0005M:\u0013a\u00029bG.\fw-Z\u0005\u0003kY\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!aM\u0014\u0002\r\u0011Jg.\u001b;%)\u0005I\u0004CA\u0017;\u0013\tYtE\u0001\u0003V]&$\u0018\u0001\u00024s_6,\"AP(\u0015\u0005}JFC\u0001!R!\r\t%I\u0014\u0007\u0001\t\u0019\u0019\u0005\u0001\"b\u0001\t\n\u00111iQ\u000b\u0003\u000b2\u000b\"AR%\u0011\u00055:\u0015B\u0001%(\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"!\f&\n\u0005-;#aA!os\u0012)QJ\u0011b\u0001\u000b\n)q\f\n\u00132mA\u0011\u0011i\u0014\u0003\u0006!\n\u0011\r!\u0012\u0002\u0002\u000b\"9!KAA\u0001\u0002\b\u0019\u0016AC3wS\u0012,gnY3%kA\u0019\u0011\t\u0016(\u0005\u000bU\u0003!\u0019\u0001,\u0003\u0005\u00153XCA#X\t\u0015AFK1\u0001F\u0005\u0015yF\u0005J\u00198\u0011\u0015Q&\u00011\u0001\\\u0003\tIG\u000fE\u0002];:k\u0011!J\u0005\u0003=\u0016\u0012A\"\u0013;fe\u0006\u0014G.Z(oG\u0016\fQ!Z7qif,\"!\u00193\u0015\u0005\t4\u0007cA!CGB\u0011\u0011\t\u001a\u0003\u0006K\u000e\u0011\r!\u0012\u0002\u0002\u0003\"9qmAA\u0001\u0002\bA\u0017AC3wS\u0012,gnY3%mA\u0019\u0011\tV2\u0002\u000b\u0005\u0004\b\u000f\\=\u0016\u0005-|GC\u00017t)\ti\u0007\u000fE\u0002B\u0005:\u0004\"!Q8\u0005\u000b\u0015$!\u0019A#\t\u000fE$\u0011\u0011!a\u0002e\u0006QQM^5eK:\u001cW\rJ\u001c\u0011\u0007\u0005#f\u000eC\u0003u\t\u0001\u0007Q/\u0001\u0002ygB\u0019QF\u001e8\n\u0005]<#A\u0003\u001fsKB,\u0017\r^3e}\u0005!a-\u001b7m+\tQx\u0010F\u0002|\u0003#!2\u0001`A\u0004)\ri\u0018\u0011\u0001\t\u0004\u0003\ns\bCA!\u0000\t\u0015)WA1\u0001F\u0011%\t\u0019!BA\u0001\u0002\b\t)!\u0001\u0006fm&$WM\\2fIa\u00022!\u0011+\u007f\u0011!\tI!\u0002CA\u0002\u0005-\u0011\u0001B3mK6\u0004B!LA\u0007}&\u0019\u0011qB\u0014\u0003\u0011q\u0012\u0017P\\1nKzBq!a\u0005\u0006\u0001\u0004\t)\"A\u0001o!\ri\u0013qC\u0005\u0004\u000339#aA%oi\u0006AA/\u00192vY\u0006$X-\u0006\u0003\u0002 \u0005%B\u0003BA\u0011\u0003w!B!a\t\u00022Q!\u0011QEA\u0016!\u0011\t%)a\n\u0011\u0007\u0005\u000bI\u0003B\u0003f\r\t\u0007Q\tC\u0005\u0002.\u0019\t\t\u0011q\u0001\u00020\u0005QQM^5eK:\u001cW\rJ\u001d\u0011\t\u0005#\u0016q\u0005\u0005\b\u0003g1\u0001\u0019AA\u001b\u0003\u00051\u0007cB\u0017\u00028\u0005U\u0011qE\u0005\u0004\u0003s9#!\u0003$v]\u000e$\u0018n\u001c82\u0011\u001d\t\u0019B\u0002a\u0001\u0003+\tq!\u001b;fe\u0006$X-\u0006\u0003\u0002B\u0005-CCBA\"\u0003/\nY\u0006\u0006\u0003\u0002F\u0005MC\u0003BA$\u0003\u001b\u0002B!\u0011\"\u0002JA\u0019\u0011)a\u0013\u0005\u000b\u0015<!\u0019A#\t\u0013\u0005=s!!AA\u0004\u0005E\u0013aC3wS\u0012,gnY3%cA\u0002B!\u0011+\u0002J!9\u00111G\u0004A\u0002\u0005U\u0003cB\u0017\u00028\u0005%\u0013\u0011\n\u0005\b\u00033:\u0001\u0019AA%\u0003\u0015\u0019H/\u0019:u\u0011\u001d\tif\u0002a\u0001\u0003+\t1\u0001\\3o\u0003\u0019)hNZ8mIV1\u00111MA7\u0003w\"B!!\u001a\u0002\fR!\u0011qMA;)\u0011\tI\'a\u001c\u0011\t\u0005\u0013\u00151\u000e\t\u0004\u0003\u00065D!B3\t\u0005\u0004)\u0005\"CA9\u0011\u0005\u0005\t9AA:\u0003-)g/\u001b3f]\u000e,G%M\u0019\u0011\t\u0005#\u00161\u000e\u0005\b\u0003gA\u0001\u0019AA<!\u001di\u0013qGA=\u0003\u007f\u00022!QA>\t\u0019\ti\b\u0003b\u0001\u000b\n\t1\u000bE\u0003.\u0003\u0003\u000b))C\u0002\u0002\u0004\u001e\u0012aa\u00149uS>t\u0007cB\u0017\u0002\b\u0006-\u0014\u0011P\u0005\u0004\u0003\u0013;#A\u0002+va2,\'\u0007C\u0004\u0002\u000e\"\u0001\r!!\u001f\u0002\t%t\u0017\u000e^\u0001\u000b]\u0016<()^5mI\u0016\u0014X\u0003BAJ\u0003G#B!!&\u0002(BA\u0011qSAO\u0003C\u000b)+\u0004\u0002\u0002\u001a*\u0019\u00111T\u0013\u0002\u000f5,H/\u00192mK&!\u0011qTAM\u0005\u001d\u0011U/\u001b7eKJ\u00042!QAR\t\u0015)\u0017B1\u0001F!\u0011\t%)!)\t\u0013\u0005%\u0016\"!AA\u0004\u0005-\u0016aC3wS\u0012,gnY3%cI\u0002B!\u0011+\u0002\"\u00069RM^5eK:\u001cW-\u0013;fe\u0006\u0014G.\u001a$bGR|\'/_\u000b\u0005\u0003c\u000bY\f\u0006\u0003\u00024\u0006}\u0006c\u0002/\u00026\u0006e\u0016QX\u0005\u0004\u0003o+#a\u0002$bGR|\'/\u001f\t\u0004\u0003\u0006mF!B3\u000b\u0005\u0004)\u0005\u0003B!C\u0003sC\u0011\"!1\u000b\u0003\u0003\u0005\u001d!a1\u0002\u0017\u00154\u0018\u000eZ3oG\u0016$\u0013g\r\t\u0005\u0003R\u000bI,A\fFm&$WM\\2f\u0013R,\'/\u00192mK\u001a\u000b7\r^8ssB\u0011A\fD\n\u0005\u00191\nY\r\u0005\u0003\u0002N\u0006]WBAAh\u0015\u0011\t\t.a5\u0002\u0005%|\'BAAk\u0003\u0011Q\u0017M^1\n\u0007U\ny-\u0001\u0004=S:LGO\u0010\u000b\u0003\u0003\u000f\f\u0011\u0002^8GC\u000e$xN]=\u0016\u0011\u0005\u0005\u00181`Au\u0003[$B!a9\u0003\u0004Q!\u0011Q]A{!\u001da\u0016QWAt\u0003W\u00042!QAu\t\u0015)gB1\u0001F!\u0015\t\u0015Q^At\t\u0019\u0019eB1\u0001\u0002pV\u0019Q)!=\u0005\u000f\u0005M\u0018Q\u001eb\u0001\u000b\n)q\f\n\u00132s!I\u0011q\u001f\b\u0002\u0002\u0003\u000f\u0011\u0011`\u0001\fKZLG-\u001a8dK\u0012\nD\u0007E\u0003B\u0003w\f9\u000f\u0002\u0004V\u001d\t\u0007\u0011Q`\u000b\u0004\u000b\u0006}Ha\u0002B\u0001\u0003w\u0014\r!\u0012\u0002\u0006?\u0012\"\u0013\u0007\u000f\u0005\b\u0005\u000bq\u0001\u0019\u0001B\u0004\u0003\u001d1\u0017m\u0019;pef\u0004b\u0001\u0018\u0001\u0003\n\t-\u0001cA!\u0002nB\u0019\u0011)a?\u0003\u0013Q{g)Y2u_JLX\u0003\u0003B\t\u0005S\u00119Ba\u0007\u0014\u000b=a#1\u0003\u0019\u0011\u000fq\u000b)L!\u0006\u0003\u001aA\u0019\u0011Ia\u0006\u0005\u000b\u0015|!\u0019A#\u0011\u000b\u0005\u0013YB!\u0006\u0005\r\r{!\u0019\u0001B\u000f+\r)%q\u0004\u0003\b\u0005C\u0011YB1\u0001F\u0005\u0015yF\u0005\n\u001a2!\u0019a\u0006A!\n\u0003(A\u0019\u0011Ia\u0007\u0011\u0007\u0005\u0013I\u0003\u0002\u0004V\u001f\t\u0007!1F\u000b\u0004\u000b\n5Ba\u0002B\u0018\u0005S\u0011\r!\u0012\u0002\u0006?\u0012\"#\u0007M\u0001\fKZLG-\u001a8dK\u0012\nT\u0007E\u0003B\u0005S\u0011)\u0002\u0006\u0003\u00038\t}B\u0003\u0002B\u001d\u0005{\u0001\u0012Ba\u000f\u0010\u0005O\u0011)B!\n\u000e\u00031AqA!\r\u0013\u0001\b\u0011\u0019\u0004C\u0004\u0003\u0006I\u0001\rAa\t\u0002\u0019\u0019\u0014x.\\*qK\u000eLg-[2\u0015\t\te!Q\t\u0005\u00075N\u0001\rAa\u0012\u0011\tqk&QC\u000b\u0003\u0005\u0017\u0002\u0002\"a&\u0002\u001e\nU!\u0011\u0004\u0015\b\u001f\t=#Q\u000bB,!\ri#\u0011K\u0005\u0004\u0005\':#\u0001E*fe&\fGNV3sg&|g.V%E\u0003\u00151\u0018\r\\;f=\u0005\u0019\u0011a\u0003;p\u0005VLG\u000e\u001a$s_6,\u0002B!\u0018\u0003|\t%$Q\u000e\u000b\u0005\u0005?\u0012\u0019\t\u0006\u0003\u0003b\tU\u0004\u0003\u0003/\u0003d%\u00139Ga\u001b\n\u0007\t\u0015TEA\u0005Ck&dGM\u0012:p[B\u0019\u0011I!\u001b\u0005\u000b\u0015,\"\u0019A#\u0011\u000b\u0005\u0013iGa\u001a\u0005\r\r+\"\u0019\u0001B8+\r)%\u0011\u000f\u0003\b\u0005g\u0012iG1\u0001F\u0005\u0015yF\u0005\n\u001a4\u0011%\u00119(FA\u0001\u0002\b\u0011I(A\u0006fm&$WM\\2fIE2\u0004#B!\u0003|\t\u001dDAB+\u0016\u0005\u0004\u0011i(F\u0002F\u0005\u007f\"qA!!\u0003|\t\u0007QIA\u0003`I\u0011\u0012$\u0007C\u0004\u0003\u0006U\u0001\rA!\"\u0011\rq\u0003!q\u0011BE!\r\t%Q\u000e\t\u0004\u0003\nm$AI#wS\u0012,gnY3Ji\u0016\u0014\u0018M\u00197f\r\u0006\u001cGo\u001c:z)>\u0014U/\u001b7e\rJ|W.\u0006\u0005\u0003\u0010\n\u001d&Q\u0013BM\'\u00111BF!%\u0011\u0011q\u0013\u0019\'\u0013BJ\u0005/\u00032!\u0011BK\t\u0015)gC1\u0001F!\u0015\t%\u0011\u0014BJ\t\u0019\u0019eC1\u0001\u0003\u001cV\u0019QI!(\u0005\u000f\t}%\u0011\u0014b\u0001\u000b\n)q\f\n\u00133kA1A\f\u0001BR\u0005K\u00032!\u0011BM!\r\t%q\u0015\u0003\u0007+Z\u0011\rA!+\u0016\u0007\u0015\u0013Y\u000bB\u0004\u0003.\n\u001d&\u0019A#\u0003\u000b}#CE\r\u001b\u0002\u0017\u00154\u0018\u000eZ3oG\u0016$\u0013g\u000e\t\u0006\u0003\n\u001d&1\u0013\u000b\u0005\u0005k\u0013Y\f\u0006\u0003\u00038\ne\u0006#\u0003B\u001e-\t\u0015&1\u0013BR\u0011\u001d\u0011y+\u0007a\u0002\u0005cCqA!\u0002\u001a\u0001\u0004\u0011\t\u000b\u0006\u0003\u0003@\n\u0015G\u0003\u0002BL\u0005\u0003DaA\u0017\u000eA\u0002\t\r\u0007\u0003\u0002/^\u0005\'CQ\u0001\u0010\u000eA\u0002%#BA!3\u0003LBA\u0011qSAO\u0005\'\u00139\nC\u0003=7\u0001\u0007\u0011J\u0001\u0005EK2,w-\u0019;f+\u0019\u0011\tNa6\u0003bN!A\u0004\fBj!\u0019a\u0006A!6\u0003`B\u0019\u0011Ia6\u0005\r\rc\"\u0019\u0001Bm+\r)%1\u001c\u0003\b\u0005;\u00149N1\u0001F\u0005\u0015yF\u0005\n\u001a7!\r\t%\u0011\u001d\u0003\u0007+r\u0011\rAa9\u0016\u0007\u0015\u0013)\u000fB\u0004\u0003h\n\u0005(\u0019A#\u0003\u000b}#CEM\u001c\u0002\u0011\u0011,G.Z4bi\u0016$BA!<\u0003pB9!1\b\u000f\u0003V\n}\u0007b\u0002Bu=\u0001\u0007!1[\u000b\u0005\u0005g\u0014Y\u0010\u0006\u0003\u0003v\u000e\rA\u0003\u0002B|\u0005{\u0004R!\u0011Bl\u0005s\u00042!\u0011B~\t\u0015)wD1\u0001F\u0011%\u0011ypHA\u0001\u0002\b\u0019\t!A\u0006fm&$WM\\2fIEB\u0004#B!\u0003b\ne\bB\u0002; \u0001\u0004\u0019)\u0001\u0005\u0003.m\neX\u0003BB\u0005\u0007\u001f!Baa\u0003\u0004\u0012A)\u0011Ia6\u0004\u000eA\u0019\u0011ia\u0004\u0005\u000b\u0015\u0004#\u0019A#\t\u0013\rM\u0001%!AA\u0004\rU\u0011aC3wS\u0012,gnY3%ce\u0002R!\u0011Bq\u0007\u001b)Ba!\u0007\u0004\"Q!11DB\u0015)\u0011\u0019iba\t\u0011\u000b\u0005\u00139na\b\u0011\u0007\u0005\u001b\t\u0003B\u0003QC\t\u0007Q\tC\u0005\u0004&\u0005\n\t\u0011q\u0001\u0004(\u0005YQM^5eK:\u001cW\r\n\u001a1!\u0015\t%\u0011]B\u0010\u0011\u0019Q\u0016\u00051\u0001\u0004,A!A,XB\u0010+\u0011\u0019yc!\u000e\u0015\t\rE2\u0011\b\t\t\u0003/\u000bija\r\u00048A\u0019\u0011i!\u000e\u0005\u000b\u0015\u0014#\u0019A#\u0011\u000b\u0005\u00139na\r\t\u0013\rm\"%!AA\u0004\ru\u0012aC3wS\u0012,gnY3%eE\u0002R!\u0011Bq\u0007gAs\u0001\bB(\u0005+\u00129&\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0004FA!1qIB\'\u001b\t\u0019IE\u0003\u0003\u0004L\u0005M\u0017\u0001\u00027b]\u001eLAaa\u0014\u0004J\t1qJ\u00196fGR\u0004"
    )
  ScalaInlineInfo: length = 0x54 (unknown attribute)
   01 00 00 10 00 90 00 91 01 00 47 00 48 00 00 42
   00 43 01 00 3E 00 3F 00 00 8B 00 8C 00 00 89 00
   35 01 00 55 00 56 00 00 50 00 51 01 00 39 00 3A
   00 00 71 00 72 00 00 6C 00 6D 01 00 85 00 86 00
   00 63 00 64 00 00 5F 00 60 01 00 7D 00 7E 00 00
   79 00 7A 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
