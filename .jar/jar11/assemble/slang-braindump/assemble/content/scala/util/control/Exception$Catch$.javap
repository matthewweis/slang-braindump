Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/util/control/Exception$Catch$.class
  Last modified May 29, 2022; size 2412 bytes
  SHA-256 checksum 0a38e65bb0a85df4706b1d4c01771a91ea20f5c72f10be3b1c191e9c387c9eaa
  Compiled from "Exception.scala"
public class scala.util.control.Exception$Catch$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/util/control/Exception$Catch$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 7, attributes: 5
Constant pool:
    #1 = Utf8               scala/util/control/Exception$Catch$
    #2 = Class              #1            // scala/util/control/Exception$Catch$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Exception.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/util/control/Exception
   #12 = Class              #11           // scala/util/control/Exception
   #13 = Utf8               Catch$
   #14 = Utf8               scala/util/control/Exception$Finally
   #15 = Class              #14           // scala/util/control/Exception$Finally
   #16 = Utf8               Finally
   #17 = Utf8               MODULE$
   #18 = Utf8               Lscala/util/control/Exception$Catch$;
   #19 = Utf8               <clinit>
   #20 = Utf8               ()V
   #21 = Utf8               <init>
   #22 = NameAndType        #21:#20       // "<init>":()V
   #23 = Methodref          #2.#22        // scala/util/control/Exception$Catch$."<init>":()V
   #24 = NameAndType        #17:#18       // MODULE$:Lscala/util/control/Exception$Catch$;
   #25 = Fieldref           #2.#24        // scala/util/control/Exception$Catch$.MODULE$:Lscala/util/control/Exception$Catch$;
   #26 = Utf8               $lessinit$greater$default$2
   #27 = Utf8               ()Lscala/Option;
   #28 = Utf8               <T:Ljava/lang/Object;>()Lscala/Option<Lscala/util/control/Exception$Finally;>;
   #29 = Utf8               scala/None$
   #30 = Class              #29           // scala/None$
   #31 = Utf8               Lscala/None$;
   #32 = NameAndType        #17:#31       // MODULE$:Lscala/None$;
   #33 = Fieldref           #30.#32       // scala/None$.MODULE$:Lscala/None$;
   #34 = Utf8               this
   #35 = Utf8               $lessinit$greater$default$3
   #36 = Utf8               ()Lscala/Function1;
   #37 = Utf8               <T:Ljava/lang/Object;>()Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;
   #38 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #39 = MethodType         #38           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #40 = Utf8               $anonfun$$lessinit$greater$default$3$1$adapted
   #41 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;
   #42 = NameAndType        #40:#41       // $anonfun$$lessinit$greater$default$3$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
   #43 = Methodref          #2.#42        // scala/util/control/Exception$Catch$.$anonfun$$lessinit$greater$default$3$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
   #44 = MethodHandle       6:#43         // REF_invokeStatic scala/util/control/Exception$Catch$.$anonfun$$lessinit$greater$default$3$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
   #45 = MethodType         #41           //  (Ljava/lang/Throwable;)Ljava/lang/Object;
   #46 = Integer            5
   #47 = Integer            1
   #48 = Utf8               java/lang/invoke/LambdaMetafactory
   #49 = Class              #48           // java/lang/invoke/LambdaMetafactory
   #50 = Utf8               altMetafactory
   #51 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #52 = NameAndType        #50:#51       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #53 = Methodref          #49.#52       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #54 = MethodHandle       6:#53         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #55 = Utf8               apply
   #56 = NameAndType        #55:#36       // apply:()Lscala/Function1;
   #57 = InvokeDynamic      #0:#56        // #0:apply:()Lscala/Function1;
   #58 = Utf8               $anonfun$$lessinit$greater$default$3$1
   #59 = Utf8               (Ljava/lang/Throwable;)Z
   #60 = Utf8               x
   #61 = Utf8               scala/util/control/Exception$
   #62 = Class              #61           // scala/util/control/Exception$
   #63 = Utf8               Lscala/util/control/Exception$;
   #64 = NameAndType        #17:#63       // MODULE$:Lscala/util/control/Exception$;
   #65 = Fieldref           #62.#64       // scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   #66 = Utf8               shouldRethrow
   #67 = NameAndType        #66:#59       // shouldRethrow:(Ljava/lang/Throwable;)Z
   #68 = Methodref          #62.#67       // scala/util/control/Exception$.shouldRethrow:(Ljava/lang/Throwable;)Z
   #69 = Utf8               Ljava/lang/Throwable;
   #70 = Methodref          #4.#22        // java/lang/Object."<init>":()V
   #71 = NameAndType        #58:#59       // $anonfun$$lessinit$greater$default$3$1:(Ljava/lang/Throwable;)Z
   #72 = Methodref          #2.#71        // scala/util/control/Exception$Catch$.$anonfun$$lessinit$greater$default$3$1:(Ljava/lang/Throwable;)Z
   #73 = Utf8               scala/runtime/BoxesRunTime
   #74 = Class              #73           // scala/runtime/BoxesRunTime
   #75 = Utf8               boxToBoolean
   #76 = Utf8               (Z)Ljava/lang/Boolean;
   #77 = NameAndType        #75:#76       // boxToBoolean:(Z)Ljava/lang/Boolean;
   #78 = Methodref          #74.#77       // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #79 = Utf8               $deserializeLambda$
   #80 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #81 = Utf8               scala/runtime/LambdaDeserialize
   #82 = Class              #81           // scala/runtime/LambdaDeserialize
   #83 = Utf8               bootstrap
   #84 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #85 = NameAndType        #83:#84       // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #86 = Methodref          #82.#85       // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #87 = MethodHandle       6:#86         // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #88 = Utf8               lambdaDeserialize
   #89 = NameAndType        #88:#80       // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #90 = InvokeDynamic      #1:#89        // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #91 = Utf8               Code
   #92 = Utf8               LineNumberTable
   #93 = Utf8               LocalVariableTable
   #94 = Utf8               Signature
   #95 = Utf8               MethodParameters
   #96 = Utf8               InnerClasses
   #97 = Utf8               SourceFile
   #98 = Utf8               BootstrapMethods
   #99 = Utf8               ScalaInlineInfo
  #100 = Utf8               Scala
{
  public static final scala.util.control.Exception$Catch$ MODULE$;
    descriptor: Lscala/util/control/Exception$Catch$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/util/control/Exception$Catch$
         3: dup
         4: invokespecial #23                 // Method "<init>":()V
         7: putstatic     #25                 // Field MODULE$:Lscala/util/control/Exception$Catch$;
        10: return
      LineNumberTable:
        line 213: 0

  public <T extends java.lang.Object> scala.Option<scala.util.control.Exception$Finally> $lessinit$greater$default$2();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #33                 // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/util/control/Exception$Catch$;
    Signature: #28                          // <T:Ljava/lang/Object;>()Lscala/Option<Lscala/util/control/Exception$Finally;>;

  public <T extends java.lang.Object> scala.Function1<java.lang.Throwable, java.lang.Object> $lessinit$greater$default$3();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: invokedynamic #57,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/util/control/Exception$Catch$;
    Signature: #37                          // <T:Ljava/lang/Object;>()Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;

  public static final boolean $anonfun$$lessinit$greater$default$3$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #65                 // Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
         3: aload_0
         4: invokevirtual #68                 // Method scala/util/control/Exception$.shouldRethrow:(Ljava/lang/Throwable;)Z
         7: ireturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.util.control.Exception$Catch$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #70                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch$;

  public static final java.lang.Object $anonfun$$lessinit$greater$default$3$1$adapted(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // Method $anonfun$$lessinit$greater$default$3$1:(Ljava/lang/Throwable;)Z
         4: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #90,  0             // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #13= #2 of #12;           // Catch$=class scala/util/control/Exception$Catch$ of class scala/util/control/Exception
  public static #16= #15 of #12;          // Finally=class scala/util/control/Exception$Finally of class scala/util/control/Exception
SourceFile: "Exception.scala"
BootstrapMethods:
  0: #54 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #39 (Ljava/lang/Object;)Ljava/lang/Object;
      #44 REF_invokeStatic scala/util/control/Exception$Catch$.$anonfun$$lessinit$greater$default$3$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
      #45 (Ljava/lang/Throwable;)Ljava/lang/Object;
      #46 5
      #47 1
      #45 (Ljava/lang/Throwable;)Ljava/lang/Object;
  1: #87 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #44 REF_invokeStatic scala/util/control/Exception$Catch$.$anonfun$$lessinit$greater$default$3$1$adapted:(Ljava/lang/Throwable;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 3A 00 3B 01 00 28 00 29 01 00 1A
   00 1B 01 00 23 00 24 01 00 15 00 14 01
  Scala: length = 0x0 (unknown attribute)

