Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/bitcodec/JSON$.class
  Last modified May 29, 2022; size 4158 bytes
  SHA-256 checksum a864c2eeb1229d33ff66dd396b4a8934b3512c089808ae8764f8a63612cabf97
  Compiled from "JSON.scala"
public final class org.sireum.bitcodec.JSON$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/bitcodec/JSON$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/bitcodec/JSON$
    #2 = Class              #1            // org/sireum/bitcodec/JSON$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JSON.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/Either$Left
   #12 = Class              #11           // org/sireum/Either$Left
   #13 = Utf8               org/sireum/Either
   #14 = Class              #13           // org/sireum/Either
   #15 = Utf8               Left
   #16 = Utf8               org/sireum/Either$Left$
   #17 = Class              #16           // org/sireum/Either$Left$
   #18 = Utf8               Left$
   #19 = Utf8               org/sireum/Either$Right
   #20 = Class              #19           // org/sireum/Either$Right
   #21 = Utf8               Right
   #22 = Utf8               org/sireum/Either$Right$
   #23 = Class              #22           // org/sireum/Either$Right$
   #24 = Utf8               Right$
   #25 = Utf8               org/sireum/Json$ErrorMsg
   #26 = Class              #25           // org/sireum/Json$ErrorMsg
   #27 = Utf8               org/sireum/Json
   #28 = Class              #27           // org/sireum/Json
   #29 = Utf8               ErrorMsg
   #30 = Utf8               org/sireum/bitcodec/JSON$Parser
   #31 = Class              #30           // org/sireum/bitcodec/JSON$Parser
   #32 = Utf8               org/sireum/bitcodec/JSON
   #33 = Class              #32           // org/sireum/bitcodec/JSON
   #34 = Utf8               Parser
   #35 = Utf8               org/sireum/bitcodec/JSON$Printer$
   #36 = Class              #35           // org/sireum/bitcodec/JSON$Printer$
   #37 = Utf8               Printer$
   #38 = Utf8               MODULE$
   #39 = Utf8               Lorg/sireum/bitcodec/JSON$;
   #40 = Utf8               <clinit>
   #41 = Utf8               ()V
   #42 = Utf8               <init>
   #43 = NameAndType        #42:#41       // "<init>":()V
   #44 = Methodref          #2.#43        // org/sireum/bitcodec/JSON$."<init>":()V
   #45 = NameAndType        #38:#39       // MODULE$:Lorg/sireum/bitcodec/JSON$;
   #46 = Fieldref           #2.#45        // org/sireum/bitcodec/JSON$.MODULE$:Lorg/sireum/bitcodec/JSON$;
   #47 = Utf8               to
   #48 = Utf8               (Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
   #49 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;Lscala/Function1<Lorg/sireum/bitcodec/JSON$Parser;TT;>;)Lorg/sireum/Either<TT;Lorg/sireum/Json$ErrorMsg;>;
   #50 = Utf8               s
   #51 = Utf8               f
   #52 = Utf8               (Ljava/lang/String;)V
   #53 = NameAndType        #42:#52       // "<init>":(Ljava/lang/String;)V
   #54 = Methodref          #31.#53       // org/sireum/bitcodec/JSON$Parser."<init>":(Ljava/lang/String;)V
   #55 = Utf8               scala/Function1
   #56 = Class              #55           // scala/Function1
   #57 = Utf8               apply
   #58 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #59 = NameAndType        #57:#58       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #60 = InterfaceMethodref #56.#59       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #61 = Utf8               eof
   #62 = Utf8               ()Z
   #63 = NameAndType        #61:#62       // eof:()Z
   #64 = Methodref          #31.#63       // org/sireum/bitcodec/JSON$Parser.eof:()Z
   #65 = Utf8               errorOpt
   #66 = Utf8               ()Lorg/sireum/Option;
   #67 = NameAndType        #65:#66       // errorOpt:()Lorg/sireum/Option;
   #68 = Methodref          #31.#67       // org/sireum/bitcodec/JSON$Parser.errorOpt:()Lorg/sireum/Option;
   #69 = Utf8               org/sireum/Some
   #70 = Class              #69           // org/sireum/Some
   #71 = Utf8               org/sireum/Some$
   #72 = Class              #71           // org/sireum/Some$
   #73 = Utf8               Lorg/sireum/Some$;
   #74 = NameAndType        #38:#73       // MODULE$:Lorg/sireum/Some$;
   #75 = Fieldref           #72.#74       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #76 = Utf8               unapply
   #77 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
   #78 = NameAndType        #76:#77       // unapply:(Lorg/sireum/Some;)Lscala/Some;
   #79 = Methodref          #72.#78       // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
   #80 = Utf8               scala/Some
   #81 = Class              #80           // scala/Some
   #82 = Utf8               isEmpty
   #83 = NameAndType        #82:#62       // isEmpty:()Z
   #84 = Methodref          #81.#83       // scala/Some.isEmpty:()Z
   #85 = Utf8               get
   #86 = Utf8               ()Ljava/lang/Object;
   #87 = NameAndType        #85:#86       // get:()Ljava/lang/Object;
   #88 = Methodref          #81.#87       // scala/Some.get:()Ljava/lang/Object;
   #89 = Utf8               Lorg/sireum/Either$Right$;
   #90 = NameAndType        #38:#89       // MODULE$:Lorg/sireum/Either$Right$;
   #91 = Fieldref           #23.#90       // org/sireum/Either$Right$.MODULE$:Lorg/sireum/Either$Right$;
   #92 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Either$Right;
   #93 = NameAndType        #57:#92       // apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
   #94 = Methodref          #23.#93       // org/sireum/Either$Right$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
   #95 = Utf8               Lorg/sireum/Either$Left$;
   #96 = NameAndType        #38:#95       // MODULE$:Lorg/sireum/Either$Left$;
   #97 = Fieldref           #17.#96       // org/sireum/Either$Left$.MODULE$:Lorg/sireum/Either$Left$;
   #98 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Either$Left;
   #99 = NameAndType        #57:#98       // apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #100 = Methodref          #17.#99       // org/sireum/Either$Left$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #101 = Utf8               e
  #102 = Utf8               Lorg/sireum/Json$ErrorMsg;
  #103 = Utf8               parser
  #104 = Utf8               Lorg/sireum/bitcodec/JSON$Parser;
  #105 = Utf8               r
  #106 = Utf8               Ljava/lang/Object;
  #107 = Utf8               this
  #108 = Utf8               Ljava/lang/String;
  #109 = Utf8               Lscala/Function1;
  #110 = Utf8               java/lang/String
  #111 = Class              #110          // java/lang/String
  #112 = Utf8               org/sireum/Option
  #113 = Class              #112          // org/sireum/Option
  #114 = Utf8               fromSpec
  #115 = Utf8               (Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
  #116 = Utf8               o
  #117 = Utf8               isCompact
  #118 = Utf8               Lorg/sireum/bitcodec/JSON$Printer$;
  #119 = NameAndType        #38:#118      // MODULE$:Lorg/sireum/bitcodec/JSON$Printer$;
  #120 = Fieldref           #36.#119      // org/sireum/bitcodec/JSON$Printer$.MODULE$:Lorg/sireum/bitcodec/JSON$Printer$;
  #121 = Utf8               printSpec
  #122 = Utf8               (Lorg/sireum/bitcodec/Spec;)Lorg/sireum/ST;
  #123 = NameAndType        #121:#122     // printSpec:(Lorg/sireum/bitcodec/Spec;)Lorg/sireum/ST;
  #124 = Methodref          #36.#123      // org/sireum/bitcodec/JSON$Printer$.printSpec:(Lorg/sireum/bitcodec/Spec;)Lorg/sireum/ST;
  #125 = Utf8               org/sireum/B$
  #126 = Class              #125          // org/sireum/B$
  #127 = Utf8               Lorg/sireum/B$;
  #128 = NameAndType        #38:#127      // MODULE$:Lorg/sireum/B$;
  #129 = Fieldref           #126.#128     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #130 = Utf8               $4B
  #131 = Utf8               (Z)Z
  #132 = NameAndType        #130:#131     // $4B:(Z)Z
  #133 = Methodref          #126.#132     // org/sireum/B$.$4B:(Z)Z
  #134 = Utf8               org/sireum/ST
  #135 = Class              #134          // org/sireum/ST
  #136 = Utf8               renderCompact
  #137 = Utf8               ()Ljava/lang/String;
  #138 = NameAndType        #136:#137     // renderCompact:()Ljava/lang/String;
  #139 = Methodref          #135.#138     // org/sireum/ST.renderCompact:()Ljava/lang/String;
  #140 = Utf8               render
  #141 = NameAndType        #140:#137     // render:()Ljava/lang/String;
  #142 = Methodref          #135.#141     // org/sireum/ST.render:()Ljava/lang/String;
  #143 = Utf8               st
  #144 = Utf8               Lorg/sireum/ST;
  #145 = Utf8               Lorg/sireum/bitcodec/Spec;
  #146 = Utf8               Z
  #147 = Utf8               toSpec
  #148 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either;
  #149 = Utf8               (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/bitcodec/Spec;Lorg/sireum/Json$ErrorMsg;>;
  #150 = MethodType         #58           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #151 = Utf8               $anonfun$toSpec$1
  #152 = Utf8               (Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  #153 = NameAndType        #151:#152     // $anonfun$toSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  #154 = Methodref          #2.#153       // org/sireum/bitcodec/JSON$.$anonfun$toSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  #155 = MethodHandle       6:#154        // REF_invokeStatic org/sireum/bitcodec/JSON$.$anonfun$toSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  #156 = MethodType         #152          //  (Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  #157 = Integer            5
  #158 = Integer            1
  #159 = Utf8               java/lang/invoke/LambdaMetafactory
  #160 = Class              #159          // java/lang/invoke/LambdaMetafactory
  #161 = Utf8               altMetafactory
  #162 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #163 = NameAndType        #161:#162     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #164 = Methodref          #160.#163     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #165 = MethodHandle       6:#164        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #166 = Utf8               ()Lscala/Function1;
  #167 = NameAndType        #57:#166      // apply:()Lscala/Function1;
  #168 = InvokeDynamic      #0:#167       // #0:apply:()Lscala/Function1;
  #169 = NameAndType        #47:#48       // to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
  #170 = Methodref          #2.#169       // org/sireum/bitcodec/JSON$.to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
  #171 = Utf8               Lorg/sireum/Either;
  #172 = Utf8               fSpec$1
  #173 = Utf8               parseSpec
  #174 = Utf8               ()Lorg/sireum/bitcodec/Spec;
  #175 = NameAndType        #173:#174     // parseSpec:()Lorg/sireum/bitcodec/Spec;
  #176 = Methodref          #31.#175      // org/sireum/bitcodec/JSON$Parser.parseSpec:()Lorg/sireum/bitcodec/Spec;
  #177 = NameAndType        #172:#152     // fSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  #178 = Methodref          #2.#177       // org/sireum/bitcodec/JSON$.fSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  #179 = Methodref          #4.#43        // java/lang/Object."<init>":()V
  #180 = Utf8               $deserializeLambda$
  #181 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #182 = Utf8               scala/runtime/LambdaDeserialize
  #183 = Class              #182          // scala/runtime/LambdaDeserialize
  #184 = Utf8               bootstrap
  #185 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #186 = NameAndType        #184:#185     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #187 = Methodref          #183.#186     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #188 = MethodHandle       6:#187        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #189 = Utf8               lambdaDeserialize
  #190 = NameAndType        #189:#181     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #191 = InvokeDynamic      #1:#190       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #192 = Utf8               Code
  #193 = Utf8               LineNumberTable
  #194 = Utf8               StackMapTable
  #195 = Utf8               LocalVariableTable
  #196 = Utf8               Signature
  #197 = Utf8               MethodParameters
  #198 = Utf8               InnerClasses
  #199 = Utf8               SourceFile
  #200 = Utf8               BootstrapMethods
  #201 = Utf8               ScalaInlineInfo
  #202 = Utf8               Scala
{
  public static final org.sireum.bitcodec.JSON$ MODULE$;
    descriptor: Lorg/sireum/bitcodec/JSON$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/bitcodec/JSON$
         3: dup
         4: invokespecial #44                 // Method "<init>":()V
         7: putstatic     #46                 // Field MODULE$:Lorg/sireum/bitcodec/JSON$;
        10: return
      LineNumberTable:
        line 33: 0

  public <T extends java.lang.Object> org.sireum.Either<T, org.sireum.Json$ErrorMsg> to(java.lang.String, scala.Function1<org.sireum.bitcodec.JSON$Parser, T>);
    descriptor: (Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=3
         0: new           #31                 // class org/sireum/bitcodec/JSON$Parser
         3: dup
         4: aload_1
         5: invokespecial #54                 // Method org/sireum/bitcodec/JSON$Parser."<init>":(Ljava/lang/String;)V
         8: astore        4
        10: aload_2
        11: aload         4
        13: invokeinterface #60,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        18: astore        5
        20: aload         4
        22: invokevirtual #64                 // Method org/sireum/bitcodec/JSON$Parser.eof:()Z
        25: pop
        26: aload         4
        28: invokevirtual #68                 // Method org/sireum/bitcodec/JSON$Parser.errorOpt:()Lorg/sireum/Option;
        31: astore        6
        33: aload         6
        35: instanceof    #70                 // class org/sireum/Some
        38: ifeq          88
        41: aload         6
        43: checkcast     #70                 // class org/sireum/Some
        46: astore        7
        48: getstatic     #75                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        51: aload         7
        53: invokevirtual #79                 // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        56: astore        8
        58: aload         8
        60: invokevirtual #84                 // Method scala/Some.isEmpty:()Z
        63: ifne          85
        66: aload         8
        68: invokevirtual #88                 // Method scala/Some.get:()Ljava/lang/Object;
        71: checkcast     #26                 // class org/sireum/Json$ErrorMsg
        74: astore        9
        76: getstatic     #91                 // Field org/sireum/Either$Right$.MODULE$:Lorg/sireum/Either$Right$;
        79: aload         9
        81: invokevirtual #94                 // Method org/sireum/Either$Right$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
        84: areturn
        85: goto          91
        88: goto          91
        91: getstatic     #97                 // Field org/sireum/Either$Left$.MODULE$:Lorg/sireum/Either$Left$;
        94: aload         5
        96: invokevirtual #100                // Method org/sireum/Either$Left$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
        99: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 85
          locals = [ class org/sireum/bitcodec/JSON$, class java/lang/String, class scala/Function1, top, class org/sireum/bitcodec/JSON$Parser, class java/lang/Object, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 1122: 0
        line 1123: 10
        line 1124: 20
        line 1125: 26
        line 1126: 33
        line 1125: 66
        line 1126: 76
        line 1127: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           76       9     9     e   Lorg/sireum/Json$ErrorMsg;
           10      90     4 parser   Lorg/sireum/bitcodec/JSON$Parser;
           20      80     5     r   Ljava/lang/Object;
            0     100     0  this   Lorg/sireum/bitcodec/JSON$;
            0     100     1     s   Ljava/lang/String;
            0     100     2     f   Lscala/Function1;
    Signature: #49                          // <T:Ljava/lang/Object;>(Ljava/lang/String;Lscala/Function1<Lorg/sireum/bitcodec/JSON$Parser;TT;>;)Lorg/sireum/Either<TT;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final
      f                              final

  public java.lang.String fromSpec(org.sireum.bitcodec.Spec, boolean);
    descriptor: (Lorg/sireum/bitcodec/Spec;Z)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: getstatic     #120                // Field org/sireum/bitcodec/JSON$Printer$.MODULE$:Lorg/sireum/bitcodec/JSON$Printer$;
         3: aload_1
         4: invokevirtual #124                // Method org/sireum/bitcodec/JSON$Printer$.printSpec:(Lorg/sireum/bitcodec/Spec;)Lorg/sireum/ST;
         7: astore_3
         8: getstatic     #129                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_2
        12: invokevirtual #133                // Method org/sireum/B$.$4B:(Z)Z
        15: ifeq          23
        18: aload_3
        19: invokevirtual #139                // Method org/sireum/ST.renderCompact:()Ljava/lang/String;
        22: areturn
        23: aload_3
        24: invokevirtual #142                // Method org/sireum/ST.render:()Ljava/lang/String;
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class org/sireum/ST ]
      LineNumberTable:
        line 1132: 0
        line 1133: 8
        line 1134: 18
        line 1136: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      20     3    st   Lorg/sireum/ST;
            0      28     0  this   Lorg/sireum/bitcodec/JSON$;
            0      28     1     o   Lorg/sireum/bitcodec/Spec;
            0      28     2 isCompact   Z
    MethodParameters:
      Name                           Flags
      o                              final
      isCompact                      final

  public org.sireum.Either<org.sireum.bitcodec.Spec, org.sireum.Json$ErrorMsg> toSpec(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #168,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
         7: invokevirtual #170                // Method to:(Ljava/lang/String;Lscala/Function1;)Lorg/sireum/Either;
        10: astore_2
        11: aload_2
        12: areturn
      LineNumberTable:
        line 1145: 0
        line 1146: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     2     r   Lorg/sireum/Either;
            0      13     0  this   Lorg/sireum/bitcodec/JSON$;
            0      13     1     s   Ljava/lang/String;
    Signature: #149                         // (Ljava/lang/String;)Lorg/sireum/Either<Lorg/sireum/bitcodec/Spec;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      s                              final

  private static final org.sireum.bitcodec.Spec fSpec$1(org.sireum.bitcodec.JSON$Parser);
    descriptor: (Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #176                // Method org/sireum/bitcodec/JSON$Parser.parseSpec:()Lorg/sireum/bitcodec/Spec;
         4: astore_1
         5: aload_1
         6: areturn
      LineNumberTable:
        line 1142: 0
        line 1143: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       2     1     r   Lorg/sireum/bitcodec/Spec;
            0       7     0 parser   Lorg/sireum/bitcodec/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  public static final org.sireum.bitcodec.Spec $anonfun$toSpec$1(org.sireum.bitcodec.JSON$Parser);
    descriptor: (Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #178                // Method fSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
         4: areturn
      LineNumberTable:
        line 1145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 parser   Lorg/sireum/bitcodec/JSON$Parser;
    MethodParameters:
      Name                           Flags
      parser                         final

  private org.sireum.bitcodec.JSON$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #179                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/bitcodec/JSON$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #191,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #15= #12 of #14;    // Left=class org/sireum/Either$Left of class org/sireum/Either
  public static #18= #17 of #14;          // Left$=class org/sireum/Either$Left$ of class org/sireum/Either
  public static final #21= #20 of #14;    // Right=class org/sireum/Either$Right of class org/sireum/Either
  public static #24= #23 of #14;          // Right$=class org/sireum/Either$Right$ of class org/sireum/Either
  public static final #29= #26 of #28;    // ErrorMsg=class org/sireum/Json$ErrorMsg of class org/sireum/Json
  public static #34= #31 of #33;          // Parser=class org/sireum/bitcodec/JSON$Parser of class org/sireum/bitcodec/JSON
  public static #37= #36 of #33;          // Printer$=class org/sireum/bitcodec/JSON$Printer$ of class org/sireum/bitcodec/JSON
SourceFile: "JSON.scala"
BootstrapMethods:
  0: #165 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #150 (Ljava/lang/Object;)Ljava/lang/Object;
      #155 REF_invokeStatic org/sireum/bitcodec/JSON$.$anonfun$toSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
      #156 (Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
      #157 5
      #158 1
      #156 (Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  1: #188 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 REF_invokeStatic org/sireum/bitcodec/JSON$.$anonfun$toSpec$1:(Lorg/sireum/bitcodec/JSON$Parser;)Lorg/sireum/bitcodec/Spec;
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 97 00 98 01 00 2A 00 29 01 00 AC
   00 98 01 00 72 00 73 01 00 2F 00 30 01 00 93 00
   94 01
  Scala: length = 0x0 (unknown attribute)

