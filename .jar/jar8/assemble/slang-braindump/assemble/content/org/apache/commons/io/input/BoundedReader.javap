Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/BoundedReader.class
  Last modified May 29, 2022; size 1498 bytes
  SHA-256 checksum 344cda182223666caab2b8de5dbc8d67fa3a7308477bf5db19dfc597e7530ce1
  Compiled from "BoundedReader.java"
public class org.apache.commons.io.input.BoundedReader extends java.io.Reader
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #3                          // org/apache/commons/io/input/BoundedReader
  super_class: #13                        // java/io/Reader
  interfaces: 0, fields: 6, methods: 6, attributes: 1
Constant pool:
   #1 = Methodref          #13.#52        // java/io/Reader."<init>":()V
   #2 = Fieldref           #3.#53         // org/apache/commons/io/input/BoundedReader.charsRead:I
   #3 = Class              #54            // org/apache/commons/io/input/BoundedReader
   #4 = Fieldref           #3.#55         // org/apache/commons/io/input/BoundedReader.markedAt:I
   #5 = Fieldref           #3.#56         // org/apache/commons/io/input/BoundedReader.target:Ljava/io/Reader;
   #6 = Fieldref           #3.#57         // org/apache/commons/io/input/BoundedReader.maxCharsFromTargetReader:I
   #7 = Methodref          #13.#58        // java/io/Reader.close:()V
   #8 = Methodref          #13.#59        // java/io/Reader.reset:()V
   #9 = Fieldref           #3.#60         // org/apache/commons/io/input/BoundedReader.readAheadLimit:I
  #10 = Methodref          #13.#61        // java/io/Reader.mark:(I)V
  #11 = Methodref          #13.#62        // java/io/Reader.read:()I
  #12 = Methodref          #3.#62         // org/apache/commons/io/input/BoundedReader.read:()I
  #13 = Class              #63            // java/io/Reader
  #14 = Utf8               INVALID
  #15 = Utf8               I
  #16 = Utf8               ConstantValue
  #17 = Integer            -1
  #18 = Utf8               target
  #19 = Utf8               Ljava/io/Reader;
  #20 = Utf8               charsRead
  #21 = Utf8               markedAt
  #22 = Utf8               readAheadLimit
  #23 = Utf8               maxCharsFromTargetReader
  #24 = Utf8               <init>
  #25 = Utf8               (Ljava/io/Reader;I)V
  #26 = Utf8               Code
  #27 = Utf8               LineNumberTable
  #28 = Utf8               LocalVariableTable
  #29 = Utf8               this
  #30 = Utf8               Lorg/apache/commons/io/input/BoundedReader;
  #31 = Utf8               Exceptions
  #32 = Class              #64            // java/io/IOException
  #33 = Utf8               close
  #34 = Utf8               ()V
  #35 = Utf8               reset
  #36 = Utf8               mark
  #37 = Utf8               (I)V
  #38 = Utf8               read
  #39 = Utf8               ()I
  #40 = Utf8               StackMapTable
  #41 = Utf8               ([CII)I
  #42 = Utf8               c
  #43 = Utf8               i
  #44 = Utf8               cbuf
  #45 = Utf8               [C
  #46 = Utf8               off
  #47 = Utf8               len
  #48 = Class              #54            // org/apache/commons/io/input/BoundedReader
  #49 = Class              #45            // "[C"
  #50 = Utf8               SourceFile
  #51 = Utf8               BoundedReader.java
  #52 = NameAndType        #24:#34        // "<init>":()V
  #53 = NameAndType        #20:#15        // charsRead:I
  #54 = Utf8               org/apache/commons/io/input/BoundedReader
  #55 = NameAndType        #21:#15        // markedAt:I
  #56 = NameAndType        #18:#19        // target:Ljava/io/Reader;
  #57 = NameAndType        #23:#15        // maxCharsFromTargetReader:I
  #58 = NameAndType        #33:#34        // close:()V
  #59 = NameAndType        #35:#34        // reset:()V
  #60 = NameAndType        #22:#15        // readAheadLimit:I
  #61 = NameAndType        #36:#37        // mark:(I)V
  #62 = NameAndType        #38:#39        // read:()I
  #63 = Utf8               java/io/Reader
  #64 = Utf8               java/io/IOException
{
  private static final int INVALID;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int -1

  private final java.io.Reader target;
    descriptor: Ljava/io/Reader;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private int charsRead;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int markedAt;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int readAheadLimit;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private final int maxCharsFromTargetReader;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.input.BoundedReader(java.io.Reader, int) throws java.io.IOException;
    descriptor: (Ljava/io/Reader;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/io/Reader."<init>":()V
         4: aload_0
         5: iconst_0
         6: putfield      #2                  // Field charsRead:I
         9: aload_0
        10: iconst_m1
        11: putfield      #4                  // Field markedAt:I
        14: aload_0
        15: aload_1
        16: putfield      #5                  // Field target:Ljava/io/Reader;
        19: aload_0
        20: iload_2
        21: putfield      #6                  // Field maxCharsFromTargetReader:I
        24: return
      LineNumberTable:
        line 56: 0
        line 41: 4
        line 43: 9
        line 57: 14
        line 58: 19
        line 59: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/apache/commons/io/input/BoundedReader;
            0      25     1 target   Ljava/io/Reader;
            0      25     2 maxCharsFromTargetReader   I
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field target:Ljava/io/Reader;
         4: invokevirtual #7                  // Method java/io/Reader.close:()V
         7: return
      LineNumberTable:
        line 68: 0
        line 69: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/input/BoundedReader;
    Exceptions:
      throws java.io.IOException

  public void reset() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: getfield      #4                  // Field markedAt:I
         5: putfield      #2                  // Field charsRead:I
         8: aload_0
         9: getfield      #5                  // Field target:Ljava/io/Reader;
        12: invokevirtual #8                  // Method java/io/Reader.reset:()V
        15: return
      LineNumberTable:
        line 79: 0
        line 80: 8
        line 81: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/input/BoundedReader;
    Exceptions:
      throws java.io.IOException

  public void mark(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: aload_0
         3: getfield      #2                  // Field charsRead:I
         6: isub
         7: putfield      #9                  // Field readAheadLimit:I
        10: aload_0
        11: aload_0
        12: getfield      #2                  // Field charsRead:I
        15: putfield      #4                  // Field markedAt:I
        18: aload_0
        19: getfield      #5                  // Field target:Ljava/io/Reader;
        22: iload_1
        23: invokevirtual #10                 // Method java/io/Reader.mark:(I)V
        26: return
      LineNumberTable:
        line 95: 0
        line 97: 10
        line 99: 18
        line 100: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/apache/commons/io/input/BoundedReader;
            0      27     1 readAheadLimit   I
    Exceptions:
      throws java.io.IOException

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field charsRead:I
         4: aload_0
         5: getfield      #6                  // Field maxCharsFromTargetReader:I
         8: if_icmplt     13
        11: iconst_m1
        12: ireturn
        13: aload_0
        14: getfield      #4                  // Field markedAt:I
        17: iflt          38
        20: aload_0
        21: getfield      #2                  // Field charsRead:I
        24: aload_0
        25: getfield      #4                  // Field markedAt:I
        28: isub
        29: aload_0
        30: getfield      #9                  // Field readAheadLimit:I
        33: if_icmplt     38
        36: iconst_m1
        37: ireturn
        38: aload_0
        39: dup
        40: getfield      #2                  // Field charsRead:I
        43: iconst_1
        44: iadd
        45: putfield      #2                  // Field charsRead:I
        48: aload_0
        49: getfield      #5                  // Field target:Ljava/io/Reader;
        52: invokevirtual #11                 // Method java/io/Reader.read:()I
        55: ireturn
      LineNumberTable:
        line 112: 0
        line 113: 11
        line 116: 13
        line 117: 36
        line 119: 38
        line 120: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lorg/apache/commons/io/input/BoundedReader;
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 24 /* same */
    Exceptions:
      throws java.io.IOException

  public int read(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=4
         0: iconst_0
         1: istore        5
         3: iload         5
         5: iload_3
         6: if_icmpge     48
         9: aload_0
        10: invokevirtual #12                 // Method read:()I
        13: istore        4
        15: iload         4
        17: iconst_m1
        18: if_icmpne     33
        21: iload         5
        23: ifne          30
        26: iconst_m1
        27: goto          32
        30: iload         5
        32: ireturn
        33: aload_1
        34: iload_2
        35: iload         5
        37: iadd
        38: iload         4
        40: i2c
        41: castore
        42: iinc          5, 1
        45: goto          3
        48: iload_3
        49: ireturn
      LineNumberTable:
        line 136: 0
        line 137: 9
        line 138: 15
        line 139: 21
        line 141: 33
        line 136: 42
        line 143: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      33     4     c   I
            3      45     5     i   I
            0      50     0  this   Lorg/apache/commons/io/input/BoundedReader;
            0      50     1  cbuf   [C
            0      50     2   off   I
            0      50     3   len   I
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ top, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class org/apache/commons/io/input/BoundedReader, class "[C", int, int, int, int ]
          stack = []
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 0 /* same */
        frame_type = 249 /* chop */
          offset_delta = 14
    Exceptions:
      throws java.io.IOException
}
SourceFile: "BoundedReader.java"
