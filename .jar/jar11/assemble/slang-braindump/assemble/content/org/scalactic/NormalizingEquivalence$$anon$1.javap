Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/NormalizingEquivalence$$anon$1.class
  Last modified May 29, 2022; size 1917 bytes
  SHA-256 checksum 95ffc23a275f3e98b293a1c1780658cac649698fa90a0bae5f8e218673f2072c
  Compiled from "NormalizingEquivalence.scala"
public final class org.scalactic.NormalizingEquivalence$$anon$1 extends java.lang.Object implements org.scalactic.Normalization<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalactic/NormalizingEquivalence$$anon$1
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 4, attributes: 6
Constant pool:
   #1 = Utf8               org/scalactic/NormalizingEquivalence$$anon$1
   #2 = Class              #1             // org/scalactic/NormalizingEquivalence$$anon$1
   #3 = Utf8               Ljava/lang/Object;Lorg/scalactic/Normalization<TA;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               org/scalactic/Normalization
   #7 = Class              #6             // org/scalactic/Normalization
   #8 = Utf8               NormalizingEquivalence.scala
   #9 = Utf8               org/scalactic/NormalizingEquivalence
  #10 = Class              #9             // org/scalactic/NormalizingEquivalence
  #11 = Utf8               toNormalization
  #12 = Utf8               ()Lorg/scalactic/Normalization;
  #13 = NameAndType        #11:#12        // toNormalization:()Lorg/scalactic/Normalization;
  #14 = Utf8               $outer
  #15 = Utf8               Lorg/scalactic/NormalizingEquivalence;
  #16 = Utf8               and
  #17 = Utf8               (Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
  #18 = Utf8               (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/Normalization<TA;>;
  #19 = Utf8               other
  #20 = Utf8               and$
  #21 = Utf8               (Lorg/scalactic/Normalization;Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
  #22 = NameAndType        #20:#21        // and$:(Lorg/scalactic/Normalization;Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
  #23 = InterfaceMethodref #7.#22         // org/scalactic/Normalization.and$:(Lorg/scalactic/Normalization;Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
  #24 = Utf8               this
  #25 = Utf8               Lorg/scalactic/NormalizingEquivalence$$anon$1;
  #26 = Utf8               Lorg/scalactic/Normalization;
  #27 = Utf8               toEquivalence
  #28 = Utf8               (Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
  #29 = Utf8               (Lorg/scalactic/Equivalence<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
  #30 = Utf8               equivalence
  #31 = Utf8               toEquivalence$
  #32 = Utf8               (Lorg/scalactic/Normalization;Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
  #33 = NameAndType        #31:#32        // toEquivalence$:(Lorg/scalactic/Normalization;Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
  #34 = InterfaceMethodref #7.#33         // org/scalactic/Normalization.toEquivalence$:(Lorg/scalactic/Normalization;Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
  #35 = Utf8               Lorg/scalactic/Equivalence;
  #36 = Utf8               normalized
  #37 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #38 = Utf8               (TA;)TA;
  #39 = Utf8               a
  #40 = NameAndType        #14:#15        // $outer:Lorg/scalactic/NormalizingEquivalence;
  #41 = Fieldref           #2.#40         // org/scalactic/NormalizingEquivalence$$anon$1.$outer:Lorg/scalactic/NormalizingEquivalence;
  #42 = NameAndType        #36:#37        // normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #43 = InterfaceMethodref #10.#42        // org/scalactic/NormalizingEquivalence.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #44 = Utf8               Ljava/lang/Object;
  #45 = Utf8               <init>
  #46 = Utf8               (Lorg/scalactic/NormalizingEquivalence;)V
  #47 = Utf8               ()V
  #48 = NameAndType        #45:#47        // "<init>":()V
  #49 = Methodref          #5.#48         // java/lang/Object."<init>":()V
  #50 = Utf8               $init$
  #51 = Utf8               (Lorg/scalactic/Normalization;)V
  #52 = NameAndType        #50:#51        // $init$:(Lorg/scalactic/Normalization;)V
  #53 = InterfaceMethodref #7.#52         // org/scalactic/Normalization.$init$:(Lorg/scalactic/Normalization;)V
  #54 = Utf8               Code
  #55 = Utf8               LineNumberTable
  #56 = Utf8               LocalVariableTable
  #57 = Utf8               Signature
  #58 = Utf8               MethodParameters
  #59 = Utf8               StackMapTable
  #60 = Utf8               InnerClasses
  #61 = Utf8               EnclosingMethod
  #62 = Utf8               SourceFile
  #63 = Utf8               ScalaInlineInfo
  #64 = Utf8               Scala
{
  private final org.scalactic.NormalizingEquivalence $outer;
    descriptor: Lorg/scalactic/NormalizingEquivalence;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public final org.scalactic.Normalization<A> and(org.scalactic.Normalization<A>);
    descriptor: (Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #23                 // InterfaceMethod org/scalactic/Normalization.and$:(Lorg/scalactic/Normalization;Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
         5: areturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/NormalizingEquivalence$$anon$1;
            0       6     1 other   Lorg/scalactic/Normalization;
    Signature: #18                          // (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/Normalization<TA;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public final org.scalactic.NormalizingEquivalence<A> toEquivalence(org.scalactic.Equivalence<A>);
    descriptor: (Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #34                 // InterfaceMethod org/scalactic/Normalization.toEquivalence$:(Lorg/scalactic/Normalization;Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
         5: areturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/NormalizingEquivalence$$anon$1;
            0       6     1 equivalence   Lorg/scalactic/Equivalence;
    Signature: #29                          // (Lorg/scalactic/Equivalence<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
    MethodParameters:
      Name                           Flags
      equivalence                    final

  public A normalized(A);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #41                 // Field $outer:Lorg/scalactic/NormalizingEquivalence;
         4: aload_1
         5: invokeinterface #43,  2           // InterfaceMethod org/scalactic/NormalizingEquivalence.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/scalactic/NormalizingEquivalence$$anon$1;
            0      11     1     a   Ljava/lang/Object;
    Signature: #38                          // (TA;)TA;
    MethodParameters:
      Name                           Flags
      a                              final

  public org.scalactic.NormalizingEquivalence$$anon$1(org.scalactic.NormalizingEquivalence);
    descriptor: (Lorg/scalactic/NormalizingEquivalence;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #41                 // Field $outer:Lorg/scalactic/NormalizingEquivalence;
        11: aload_0
        12: invokespecial #49                 // Method java/lang/Object."<init>":()V
        15: aload_0
        16: invokestatic  #53                 // InterfaceMethod org/scalactic/Normalization.$init$:(Lorg/scalactic/Normalization;)V
        19: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/scalactic/NormalizingEquivalence$$anon$1;
            0      20     1 $outer   Lorg/scalactic/NormalizingEquivalence;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public final #2;                        // class org/scalactic/NormalizingEquivalence$$anon$1
EnclosingMethod: #10.#13                // org.scalactic.NormalizingEquivalence.toNormalization
Signature: #3                           // Ljava/lang/Object;Lorg/scalactic/Normalization<TA;>;
SourceFile: "NormalizingEquivalence.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 2D 00 2E 01 00 10 00 11 01 00 24
   00 25 01 00 1B 00 1C 01
  Scala: length = 0x0 (unknown attribute)

