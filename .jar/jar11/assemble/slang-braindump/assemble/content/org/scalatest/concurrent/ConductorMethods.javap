Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/concurrent/ConductorMethods.class
  Last modified May 29, 2022; size 8550 bytes
  SHA-256 checksum 84a7aa1627fdbcefce455a6e4bb3ddbdb0ed1e08fe4c54851e650e57188d6466
  Compiled from "ConductorMethods.scala"
public interface org.scalatest.concurrent.ConductorMethods extends org.scalatest.TestSuiteMixin,org.scalatest.concurrent.Conductors
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalatest/concurrent/ConductorMethods
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 0, methods: 22, attributes: 6
Constant pool:
    #1 = Utf8               org/scalatest/concurrent/ConductorMethods
    #2 = Class              #1            // org/scalatest/concurrent/ConductorMethods
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/scalatest/TestSuiteMixin
    #6 = Class              #5            // org/scalatest/TestSuiteMixin
    #7 = Utf8               org/scalatest/concurrent/Conductors
    #8 = Class              #7            // org/scalatest/concurrent/Conductors
    #9 = Utf8               ConductorMethods.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005mb!\u0003\u0007\u000e!\u0003\r\t\u0001FA\u0019\u0011\u0015\u0019\u0003\u0001\"\u0001%\u0011\u001dA\u0003A1A\u0005\n%BQ!\u000f\u0001\u0005\u0012iBQ!\u0013\u0001\u0005\u0012)CQa\u0017\u0001\u0005\u0012qCQ!\u001a\u0001\u0005\u0012\u0019DQA\u001d\u0001\u0005\u0012MDQ!\u0019\u0001\u0005\u0012]DQ\u0001\u001f\u0001\u0005\u0012eD\u0001\"!\u0005\u0001!\u0013\u0005\u00111\u0003\u0005\u000f\u0003S\u0001\u0001\u0013aA\u0001\u0002\u0013%\u00111FA\u0018\u0005A\u0019uN\u001c3vGR|\'/T3uQ>$7O\u0003\u0002\u000f\u001f\u0005Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005A\t\u0012!C:dC2\fG/Z:u\u0015\u0005\u0011\u0012aA8sO\u000e\u00011\u0003\u0002\u0001\u00167}\u0001\"AF\r\u000e\u0003]Q\u0011\u0001G\u0001\u0006g\u000e\fG.Y\u0005\u00035]\u0011a!\u00118z%\u00164\u0007C\u0001\u000f\u001e\u001b\u0005y\u0011B\u0001\u0010\u0010\u00059!Vm\u001d;Tk&$X-T5yS:\u0004\"\u0001I\u0011\u000e\u00035I!AI\u0007\u0003\u0015\r{g\u000eZ;di>\u00148/\u0001\u0004%S:LG\u000f\n\u000b\u0002KA\u0011aCJ\u0005\u0003O]\u0011A!\u00168ji\u0006I1m\u001c8ek\u000e$xN]\u000b\u0002UA\u00191fM\u001b\u000e\u00031R!!\f\u0018\u0002\r\u0005$x.\\5d\u0015\tqqF\u0003\u00021c\u0005!Q\u000f^5m\u0015\u0005\u0011\u0014\u0001\u00026bm\u0006L!\u0001\u000e\u0017\u0003\u001f\u0005#x.\\5d%\u00164WM]3oG\u0016\u0004\"AN\u001c\u000e\u0003\u0001I!\u0001O\u0011\u0003\u0013\r{g\u000eZ;di>\u0014\u0018A\u0002;ie\u0016\fG\r\u0006\u0002<\u0003B\u0011AhP\u0007\u0002{)\u0011a(M\u0001\u0005Y\u0006tw-\u0003\u0002A{\t1A\u000b\u001b:fC\u0012DaAQ\u0002\u0005\u0002\u0004\u0019\u0015!\u00014\u0011\u0007Y!e)\u0003\u0002F/\tAAHY=oC6,g\b\u0005\u0002\u0017\u000f&\u0011\u0001j\u0006\u0002\u0004\u0003:L\u0018a\u0003;ie\u0016\fGMT1nK\u0012$\"a\u0013(\u0015\u0005mb\u0005B\u0002\"\u0005\t\u0003\u0007Q\nE\u0002\u0017\t\u0016BQa\u0014\u0003A\u0002A\u000bAA\\1nKB\u0011\u0011\u000b\u0017\b\u0003%Z\u0003\"aU\f\u000e\u0003QS!!V\n\u0002\rq\u0012xn\u001c;?\u0013\t9v#\u0001\u0004Qe\u0016$WMZ\u0005\u00033j\u0013aa\u0015;sS:<\'BA,\u0018\u0003-9\u0018-\u001b;G_J\u0014U-\u0019;\u0015\u0005u\u0003gB\u0001\u000f_\u0013\tyv\"A\u0005Tk\u000e\u001cW-\u001a3fI\")\u0011-\u0002a\u0001E\u0006!!-Z1u!\t12-\u0003\u0002e/\t\u0019\u0011J\u001c;\u0002\']LG\u000f[\"p]\u0012,8\r^8s\rJ|\'0\u001a8\u0016\u0005\u001dTGC\u00015q!\tI\'\u000e\u0004\u0001\u0005\u000b-4!\u0019\u00017\u0003\u0003Q\u000b\"!\u001c$\u0011\u0005Yq\u0017BA8\u0018\u0005\u001dqu\u000e\u001e5j]\u001eDaA\u0011\u0004\u0005\u0002\u0004\t\bc\u0001\fEQ\u0006\t\u0012n]\"p]\u0012,8\r^8s\rJ|\'0\u001a8\u0016\u0003Q\u0004\"AF;\n\u0005Y<\"a\u0002\"p_2,\u0017M\\\u000b\u0002E\u0006aq\u000f[3o\r&t\u0017n\u001d5fIR\u0019!0a\u0003\u0011\u0007m\f)AD\u0002}\u0003\u0003q!!`@\u000f\u0005Ms\u0018\"\u0001\n\n\u0005A\t\u0012bAA\u0002\u001f\u00059\u0001/Y2lC\u001e,\u0017\u0002BA\u0004\u0003\u0013\u0011\u0011\"Q:tKJ$\u0018n\u001c8\u000b\u0007\u0005\rq\u0002\u0003\u0005\u0002\u000e%!\t\u0019AA\b\u0003\r1WO\u001c\t\u0004-\u0011S\u0018aC<ji\"4\u0015\u000e\u001f;ve\u0016$B!!\u0006\u0002\u001cA\u0019A$a\u0006\n\u0007\u0005eqBA\u0004PkR\u001cw.\\3\t\u000f\u0005u!\u00021\u0001\u0002 \u0005!A/Z:u!\r1\u0014\u0011E\u0005\u0005\u0003G\t)CA\u0005O_\u0006\u0013x\rV3ti&\u0019\u0011qE\b\u0003\u0013Q+7\u000f^*vSR,\u0017!E:va\u0016\u0014He^5uQ\u001aK\u0007\u0010^;sKR!\u0011QCA\u0017\u0011\u001d\tib\u0003a\u0001\u0003?I1!!\u0005\u001e%\u0019\t\u0019$a\u000e\u0002:\u00191\u0011Q\u0007\u0001\u0001\u0003c\u0011A\u0002\u0010:fM&tW-\\3oiz\u0002\"\u0001\t\u0001\u0011\u0007q\t)\u0003
   #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #14 = Class              #13           // java/lang/invoke/MethodHandles$Lookup
   #15 = Utf8               java/lang/invoke/MethodHandles
   #16 = Class              #15           // java/lang/invoke/MethodHandles
   #17 = Utf8               Lookup
   #18 = Utf8               org/scalatest/TestSuite$NoArgTest
   #19 = Class              #18           // org/scalatest/TestSuite$NoArgTest
   #20 = Utf8               org/scalatest/TestSuite
   #21 = Class              #20           // org/scalatest/TestSuite
   #22 = Utf8               NoArgTest
   #23 = Utf8               org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig
   #24 = Class              #23           // org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig
   #25 = Utf8               org/scalatest/concurrent/AbstractPatienceConfiguration
   #26 = Class              #25           // org/scalatest/concurrent/AbstractPatienceConfiguration
   #27 = Utf8               PatienceConfig
   #28 = Utf8               org/scalatest/concurrent/Conductors$Conductor
   #29 = Class              #28           // org/scalatest/concurrent/Conductors$Conductor
   #30 = Utf8               Conductor
   #31 = Utf8               org$scalatest$concurrent$ConductorMethods$_setter_$org$scalatest$concurrent$ConductorMethods$$conductor_$eq
   #32 = Utf8               (Ljava/util/concurrent/atomic/AtomicReference;)V
   #33 = Utf8               (Ljava/util/concurrent/atomic/AtomicReference<Lorg/scalatest/concurrent/Conductors$Conductor;>;)V
   #34 = Utf8               x$1
   #35 = Utf8               org$scalatest$concurrent$ConductorMethods$$super$withFixture
   #36 = Utf8               (Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
   #37 = Utf8               test
   #38 = Utf8               org$scalatest$concurrent$ConductorMethods$$conductor
   #39 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference;
   #40 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference<Lorg/scalatest/concurrent/Conductors$Conductor;>;
   #41 = Utf8               thread$
   #42 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;Lscala/Function0;)Ljava/lang/Thread;
   #43 = Utf8               $this
   #44 = Utf8               f
   #45 = Utf8               thread
   #46 = Utf8               (Lscala/Function0;)Ljava/lang/Thread;
   #47 = NameAndType        #45:#46       // thread:(Lscala/Function0;)Ljava/lang/Thread;
   #48 = InterfaceMethodref #2.#47        // org/scalatest/concurrent/ConductorMethods.thread:(Lscala/Function0;)Ljava/lang/Thread;
   #49 = Utf8               Lorg/scalatest/concurrent/ConductorMethods;
   #50 = Utf8               Lscala/Function0;
   #51 = Utf8               (Lscala/Function0<Ljava/lang/Object;>;)Ljava/lang/Thread;
   #52 = NameAndType        #38:#39       // org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
   #53 = InterfaceMethodref #2.#52        // org/scalatest/concurrent/ConductorMethods.org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
   #54 = Utf8               java/util/concurrent/atomic/AtomicReference
   #55 = Class              #54           // java/util/concurrent/atomic/AtomicReference
   #56 = Utf8               get
   #57 = Utf8               ()Ljava/lang/Object;
   #58 = NameAndType        #56:#57       // get:()Ljava/lang/Object;
   #59 = Methodref          #55.#58       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
   #60 = Methodref          #29.#47       // org/scalatest/concurrent/Conductors$Conductor.thread:(Lscala/Function0;)Ljava/lang/Thread;
   #61 = Utf8               this
   #62 = Utf8               threadNamed$
   #63 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;Ljava/lang/String;Lscala/Function0;)Ljava/lang/Thread;
   #64 = Utf8               name
   #65 = Utf8               threadNamed
   #66 = Utf8               (Ljava/lang/String;Lscala/Function0;)Ljava/lang/Thread;
   #67 = NameAndType        #65:#66       // threadNamed:(Ljava/lang/String;Lscala/Function0;)Ljava/lang/Thread;
   #68 = InterfaceMethodref #2.#67        // org/scalatest/concurrent/ConductorMethods.threadNamed:(Ljava/lang/String;Lscala/Function0;)Ljava/lang/Thread;
   #69 = Utf8               Ljava/lang/String;
   #70 = Utf8               (Ljava/lang/String;Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Ljava/lang/Thread;
   #71 = Utf8               org/scalactic/source/Position
   #72 = Class              #71           // org/scalactic/source/Position
   #73 = String             #9            // ConductorMethods.scala
   #74 = Utf8               Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
   #75 = String             #74           // Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
   #76 = Utf8               <init>
   #77 = Utf8               (Ljava/lang/String;Ljava/lang/String;I)V
   #78 = NameAndType        #76:#77       // "<init>":(Ljava/lang/String;Ljava/lang/String;I)V
   #79 = Methodref          #72.#78       // org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
   #80 = Utf8               (Ljava/lang/String;Lscala/Function0;Lorg/scalactic/source/Position;)Ljava/lang/Thread;
   #81 = NameAndType        #65:#80       // threadNamed:(Ljava/lang/String;Lscala/Function0;Lorg/scalactic/source/Position;)Ljava/lang/Thread;
   #82 = Methodref          #29.#81       // org/scalatest/concurrent/Conductors$Conductor.threadNamed:(Ljava/lang/String;Lscala/Function0;Lorg/scalactic/source/Position;)Ljava/lang/Thread;
   #83 = Utf8               waitForBeat$
   #84 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;I)Lorg/scalatest/Succeeded$;
   #85 = Utf8               beat
   #86 = Utf8               waitForBeat
   #87 = Utf8               (I)Lorg/scalatest/Succeeded$;
   #88 = NameAndType        #86:#87       // waitForBeat:(I)Lorg/scalatest/Succeeded$;
   #89 = InterfaceMethodref #2.#88        // org/scalatest/concurrent/ConductorMethods.waitForBeat:(I)Lorg/scalatest/Succeeded$;
   #90 = Utf8               I
   #91 = Utf8               (ILorg/scalactic/source/Position;)Lorg/scalatest/Succeeded$;
   #92 = NameAndType        #86:#91       // waitForBeat:(ILorg/scalactic/source/Position;)Lorg/scalatest/Succeeded$;
   #93 = Methodref          #29.#92       // org/scalatest/concurrent/Conductors$Conductor.waitForBeat:(ILorg/scalactic/source/Position;)Lorg/scalatest/Succeeded$;
   #94 = Utf8               withConductorFrozen$
   #95 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;Lscala/Function0;)Ljava/lang/Object;
   #96 = Utf8               withConductorFrozen
   #97 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #98 = NameAndType        #96:#97       // withConductorFrozen:(Lscala/Function0;)Ljava/lang/Object;
   #99 = InterfaceMethodref #2.#98        // org/scalatest/concurrent/ConductorMethods.withConductorFrozen:(Lscala/Function0;)Ljava/lang/Object;
  #100 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)TT;
  #101 = Methodref          #29.#98       // org/scalatest/concurrent/Conductors$Conductor.withConductorFrozen:(Lscala/Function0;)Ljava/lang/Object;
  #102 = Utf8               isConductorFrozen$
  #103 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;)Z
  #104 = Utf8               isConductorFrozen
  #105 = Utf8               ()Z
  #106 = NameAndType        #104:#105     // isConductorFrozen:()Z
  #107 = InterfaceMethodref #2.#106       // org/scalatest/concurrent/ConductorMethods.isConductorFrozen:()Z
  #108 = Methodref          #29.#106      // org/scalatest/concurrent/Conductors$Conductor.isConductorFrozen:()Z
  #109 = Utf8               beat$
  #110 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;)I
  #111 = Utf8               ()I
  #112 = NameAndType        #85:#111      // beat:()I
  #113 = InterfaceMethodref #2.#112       // org/scalatest/concurrent/ConductorMethods.beat:()I
  #114 = Methodref          #29.#112      // org/scalatest/concurrent/Conductors$Conductor.beat:()I
  #115 = Utf8               whenFinished$
  #116 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;Lscala/Function0;)Lorg/scalatest/compatible/Assertion;
  #117 = Utf8               fun
  #118 = Utf8               whenFinished
  #119 = Utf8               (Lscala/Function0;)Lorg/scalatest/compatible/Assertion;
  #120 = NameAndType        #118:#119     // whenFinished:(Lscala/Function0;)Lorg/scalatest/compatible/Assertion;
  #121 = InterfaceMethodref #2.#120       // org/scalatest/concurrent/ConductorMethods.whenFinished:(Lscala/Function0;)Lorg/scalatest/compatible/Assertion;
  #122 = Utf8               (Lscala/Function0<Lorg/scalatest/compatible/Assertion;>;)Lorg/scalatest/compatible/Assertion;
  #123 = Utf8               (Lscala/Function0;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #124 = NameAndType        #118:#123     // whenFinished:(Lscala/Function0;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #125 = Methodref          #29.#124      // org/scalatest/concurrent/Conductors$Conductor.whenFinished:(Lscala/Function0;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #126 = Utf8               withFixture$
  #127 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
  #128 = Utf8               withFixture
  #129 = NameAndType        #128:#36      // withFixture:(Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
  #130 = InterfaceMethodref #2.#129       // org/scalatest/concurrent/ConductorMethods.withFixture:(Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
  #131 = Utf8               Lorg/scalatest/TestSuite$NoArgTest;
  #132 = Utf8               (Lorg/scalatest/concurrent/Conductors;)V
  #133 = NameAndType        #76:#132      // "<init>":(Lorg/scalatest/concurrent/Conductors;)V
  #134 = Methodref          #29.#133      // org/scalatest/concurrent/Conductors$Conductor."<init>":(Lorg/scalatest/concurrent/Conductors;)V
  #135 = Utf8               compareAndSet
  #136 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #137 = NameAndType        #135:#136     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #138 = Methodref          #55.#137      // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #139 = NameAndType        #35:#36       // org$scalatest$concurrent$ConductorMethods$$super$withFixture:(Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
  #140 = InterfaceMethodref #2.#139       // org/scalatest/concurrent/ConductorMethods.org$scalatest$concurrent$ConductorMethods$$super$withFixture:(Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
  #141 = Utf8               org/scalatest/Succeeded$
  #142 = Class              #141          // org/scalatest/Succeeded$
  #143 = Utf8               MODULE$
  #144 = Utf8               Lorg/scalatest/Succeeded$;
  #145 = NameAndType        #143:#144     // MODULE$:Lorg/scalatest/Succeeded$;
  #146 = Fieldref           #142.#145     // org/scalatest/Succeeded$.MODULE$:Lorg/scalatest/Succeeded$;
  #147 = Utf8               equals
  #148 = Utf8               (Ljava/lang/Object;)Z
  #149 = NameAndType        #147:#148     // equals:(Ljava/lang/Object;)Z
  #150 = Methodref          #4.#149       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #151 = Utf8               conductingHasBegun
  #152 = NameAndType        #151:#105     // conductingHasBegun:()Z
  #153 = Methodref          #29.#152      // org/scalatest/concurrent/Conductors$Conductor.conductingHasBegun:()Z
  #154 = Utf8               org/scalatest/OutcomeOf$
  #155 = Class              #154          // org/scalatest/OutcomeOf$
  #156 = Utf8               Lorg/scalatest/OutcomeOf$;
  #157 = NameAndType        #143:#156     // MODULE$:Lorg/scalatest/OutcomeOf$;
  #158 = Fieldref           #155.#157     // org/scalatest/OutcomeOf$.MODULE$:Lorg/scalatest/OutcomeOf$;
  #159 = MethodType         #57           //  ()Ljava/lang/Object;
  #160 = Utf8               $anonfun$withFixture$1
  #161 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;)Lorg/scalatest/compatible/Assertion;
  #162 = NameAndType        #160:#161     // $anonfun$withFixture$1:(Lorg/scalatest/concurrent/ConductorMethods;)Lorg/scalatest/compatible/Assertion;
  #163 = InterfaceMethodref #2.#162       // org/scalatest/concurrent/ConductorMethods.$anonfun$withFixture$1:(Lorg/scalatest/concurrent/ConductorMethods;)Lorg/scalatest/compatible/Assertion;
  #164 = MethodHandle       6:#163        // REF_invokeStatic org/scalatest/concurrent/ConductorMethods.$anonfun$withFixture$1:(Lorg/scalatest/concurrent/ConductorMethods;)Lorg/scalatest/compatible/Assertion;
  #165 = Utf8               ()Lorg/scalatest/compatible/Assertion;
  #166 = MethodType         #165          //  ()Lorg/scalatest/compatible/Assertion;
  #167 = Integer            5
  #168 = Integer            1
  #169 = Utf8               java/lang/invoke/LambdaMetafactory
  #170 = Class              #169          // java/lang/invoke/LambdaMetafactory
  #171 = Utf8               altMetafactory
  #172 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #173 = NameAndType        #171:#172     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #174 = Methodref          #170.#173     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #175 = MethodHandle       6:#174        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #176 = Utf8               apply
  #177 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;)Lscala/Function0;
  #178 = NameAndType        #176:#177     // apply:(Lorg/scalatest/concurrent/ConductorMethods;)Lscala/Function0;
  #179 = InvokeDynamic      #0:#178       // #0:apply:(Lorg/scalatest/concurrent/ConductorMethods;)Lscala/Function0;
  #180 = Utf8               outcomeOf
  #181 = Utf8               (Lscala/Function0;)Lorg/scalatest/Outcome;
  #182 = NameAndType        #180:#181     // outcomeOf:(Lscala/Function0;)Lorg/scalatest/Outcome;
  #183 = Methodref          #155.#182     // org/scalatest/OutcomeOf$.outcomeOf:(Lscala/Function0;)Lorg/scalatest/Outcome;
  #184 = Utf8               org/scalatest/Outcome
  #185 = Class              #184          // org/scalatest/Outcome
  #186 = Utf8               patienceConfig
  #187 = Utf8               ()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #188 = NameAndType        #186:#187     // patienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #189 = InterfaceMethodref #2.#188       // org/scalatest/concurrent/ConductorMethods.patienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #190 = Utf8               conduct
  #191 = Utf8               (Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #192 = NameAndType        #190:#191     // conduct:(Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #193 = Methodref          #29.#192      // org/scalatest/concurrent/Conductors$Conductor.conduct:(Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
  #194 = Utf8               $init$
  #195 = Utf8               (Lorg/scalatest/concurrent/ConductorMethods;)V
  #196 = Utf8               ()V
  #197 = NameAndType        #76:#196      // "<init>":()V
  #198 = Methodref          #55.#197      // java/util/concurrent/atomic/AtomicReference."<init>":()V
  #199 = NameAndType        #31:#32       // org$scalatest$concurrent$ConductorMethods$_setter_$org$scalatest$concurrent$ConductorMethods$$conductor_$eq:(Ljava/util/concurrent/atomic/AtomicReference;)V
  #200 = InterfaceMethodref #2.#199       // org/scalatest/concurrent/ConductorMethods.org$scalatest$concurrent$ConductorMethods$_setter_$org$scalatest$concurrent$ConductorMethods$$conductor_$eq:(Ljava/util/concurrent/atomic/AtomicReference;)V
  #201 = Utf8               $deserializeLambda$
  #202 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #203 = Utf8               scala/runtime/LambdaDeserialize
  #204 = Class              #203          // scala/runtime/LambdaDeserialize
  #205 = Utf8               bootstrap
  #206 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #207 = NameAndType        #205:#206     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #208 = Methodref          #204.#207     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #209 = MethodHandle       6:#208        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #210 = Utf8               lambdaDeserialize
  #211 = NameAndType        #210:#202     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #212 = InvokeDynamic      #1:#211       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #213 = Utf8               Signature
  #214 = Utf8               MethodParameters
  #215 = Utf8               Code
  #216 = Utf8               LineNumberTable
  #217 = Utf8               LocalVariableTable
  #218 = Utf8               StackMapTable
  #219 = Utf8               InnerClasses
  #220 = Utf8               SourceFile
  #221 = Utf8               RuntimeVisibleAnnotations
  #222 = Utf8               BootstrapMethods
  #223 = Utf8               ScalaInlineInfo
  #224 = Utf8               ScalaSig
{
  public abstract void org$scalatest$concurrent$ConductorMethods$_setter_$org$scalatest$concurrent$ConductorMethods$$conductor_$eq(java.util.concurrent.atomic.AtomicReference<org.scalatest.concurrent.Conductors$Conductor>);
    descriptor: (Ljava/util/concurrent/atomic/AtomicReference;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #33                          // (Ljava/util/concurrent/atomic/AtomicReference<Lorg/scalatest/concurrent/Conductors$Conductor;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract org.scalatest.Outcome org$scalatest$concurrent$ConductorMethods$$super$withFixture(org.scalatest.TestSuite$NoArgTest);
    descriptor: (Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
    flags: (0x1401) ACC_PUBLIC, ACC_ABSTRACT, ACC_SYNTHETIC
    MethodParameters:
      Name                           Flags
      test                           final

  public abstract java.util.concurrent.atomic.AtomicReference<org.scalatest.concurrent.Conductors$Conductor> org$scalatest$concurrent$ConductorMethods$$conductor();
    descriptor: ()Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #40                          // ()Ljava/util/concurrent/atomic/AtomicReference<Lorg/scalatest/concurrent/Conductors$Conductor;>;

  public static java.lang.Thread thread$(org.scalatest.concurrent.ConductorMethods, scala.Function0);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;Lscala/Function0;)Ljava/lang/Thread;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #48                 // InterfaceMethod thread:(Lscala/Function0;)Ljava/lang/Thread;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
            0       6     1     f   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default java.lang.Thread thread(scala.Function0<java.lang.Object>);
    descriptor: (Lscala/Function0;)Ljava/lang/Thread;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: aload_1
        13: invokevirtual #60                 // Method org/scalatest/concurrent/Conductors$Conductor.thread:(Lscala/Function0;)Ljava/lang/Thread;
        16: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/scalatest/concurrent/ConductorMethods;
            0      17     1     f   Lscala/Function0;
    Signature: #51                          // (Lscala/Function0<Ljava/lang/Object;>;)Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      f                              final

  public static java.lang.Thread threadNamed$(org.scalatest.concurrent.ConductorMethods, java.lang.String, scala.Function0);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;Ljava/lang/String;Lscala/Function0;)Ljava/lang/Thread;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #68                 // InterfaceMethod threadNamed:(Ljava/lang/String;Lscala/Function0;)Ljava/lang/Thread;
         6: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
            0       7     1  name   Ljava/lang/String;
            0       7     2     f   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      name                           final
      f                              final

  public default java.lang.Thread threadNamed(java.lang.String, scala.Function0<scala.runtime.BoxedUnit>);
    descriptor: (Ljava/lang/String;Lscala/Function0;)Ljava/lang/Thread;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=3, args_size=3
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: aload_1
        13: aload_2
        14: new           #72                 // class org/scalactic/source/Position
        17: dup
        18: ldc           #73                 // String ConductorMethods.scala
        20: ldc           #75                 // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        22: bipush        112
        24: invokespecial #79                 // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        27: invokevirtual #82                 // Method org/scalatest/concurrent/Conductors$Conductor.threadNamed:(Ljava/lang/String;Lscala/Function0;Lorg/scalactic/source/Position;)Ljava/lang/Thread;
        30: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/scalatest/concurrent/ConductorMethods;
            0      31     1  name   Ljava/lang/String;
            0      31     2     f   Lscala/Function0;
    Signature: #70                          // (Ljava/lang/String;Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      name                           final
      f                              final

  public static org.scalatest.Succeeded$ waitForBeat$(org.scalatest.concurrent.ConductorMethods, int);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;I)Lorg/scalatest/Succeeded$;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #89                 // InterfaceMethod waitForBeat:(I)Lorg/scalatest/Succeeded$;
         5: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
            0       6     1  beat   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      beat                           final

  public default org.scalatest.Succeeded$ waitForBeat(int);
    descriptor: (I)Lorg/scalatest/Succeeded$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: iload_1
        13: new           #72                 // class org/scalactic/source/Position
        16: dup
        17: ldc           #73                 // String ConductorMethods.scala
        19: ldc           #75                 // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        21: sipush        145
        24: invokespecial #79                 // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        27: invokevirtual #93                 // Method org/scalatest/concurrent/Conductors$Conductor.waitForBeat:(ILorg/scalactic/source/Position;)Lorg/scalatest/Succeeded$;
        30: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/scalatest/concurrent/ConductorMethods;
            0      31     1  beat   I
    MethodParameters:
      Name                           Flags
      beat                           final

  public static java.lang.Object withConductorFrozen$(org.scalatest.concurrent.ConductorMethods, scala.Function0);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;Lscala/Function0;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #99                 // InterfaceMethod withConductorFrozen:(Lscala/Function0;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
            0       6     1     f   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default <T extends java.lang.Object> T withConductorFrozen(scala.Function0<T>);
    descriptor: (Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: aload_1
        13: invokevirtual #101                // Method org/scalatest/concurrent/Conductors$Conductor.withConductorFrozen:(Lscala/Function0;)Ljava/lang/Object;
        16: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/scalatest/concurrent/ConductorMethods;
            0      17     1     f   Lscala/Function0;
    Signature: #100                         // <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)TT;
    MethodParameters:
      Name                           Flags
      f                              final

  public static boolean isConductorFrozen$(org.scalatest.concurrent.ConductorMethods);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #107                // InterfaceMethod isConductorFrozen:()Z
         4: ireturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean isConductorFrozen();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: invokevirtual #108                // Method org/scalatest/concurrent/Conductors$Conductor.isConductorFrozen:()Z
        15: ireturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/scalatest/concurrent/ConductorMethods;

  public static int beat$(org.scalatest.concurrent.ConductorMethods);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #113                // InterfaceMethod beat:()I
         4: ireturn
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int beat();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: invokevirtual #114                // Method org/scalatest/concurrent/Conductors$Conductor.beat:()I
        15: ireturn
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/scalatest/concurrent/ConductorMethods;

  public static org.scalatest.compatible.Assertion whenFinished$(org.scalatest.concurrent.ConductorMethods, scala.Function0);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;Lscala/Function0;)Lorg/scalatest/compatible/Assertion;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #121                // InterfaceMethod whenFinished:(Lscala/Function0;)Lorg/scalatest/compatible/Assertion;
         5: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
            0       6     1   fun   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      fun                            final

  public default org.scalatest.compatible.Assertion whenFinished(scala.Function0<org.scalatest.compatible.Assertion>);
    descriptor: (Lscala/Function0;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: aload_1
        13: new           #72                 // class org/scalactic/source/Position
        16: dup
        17: ldc           #73                 // String ConductorMethods.scala
        19: ldc           #75                 // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        21: sipush        168
        24: invokespecial #79                 // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        27: invokevirtual #125                // Method org/scalatest/concurrent/Conductors$Conductor.whenFinished:(Lscala/Function0;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        30: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/scalatest/concurrent/ConductorMethods;
            0      31     1   fun   Lscala/Function0;
    Signature: #122                         // (Lscala/Function0<Lorg/scalatest/compatible/Assertion;>;)Lorg/scalatest/compatible/Assertion;
    MethodParameters:
      Name                           Flags
      fun                            final

  public static org.scalatest.Outcome withFixture$(org.scalatest.concurrent.ConductorMethods, org.scalatest.TestSuite$NoArgTest);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #130                // InterfaceMethod withFixture:(Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
         5: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
            0       6     1  test   Lorg/scalatest/TestSuite$NoArgTest;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      test                           final

  public default org.scalatest.Outcome withFixture(org.scalatest.TestSuite$NoArgTest);
    descriptor: (Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: aload_0
         7: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
        12: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
        15: new           #29                 // class org/scalatest/concurrent/Conductors$Conductor
        18: dup
        19: aload_0
        20: invokespecial #134                // Method org/scalatest/concurrent/Conductors$Conductor."<init>":(Lorg/scalatest/concurrent/Conductors;)V
        23: invokevirtual #138                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
        26: pop
        27: aload_0
        28: aload_1
        29: invokeinterface #140,  2          // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$super$withFixture:(Lorg/scalatest/TestSuite$NoArgTest;)Lorg/scalatest/Outcome;
        34: astore_3
        35: getstatic     #146                // Field org/scalatest/Succeeded$.MODULE$:Lorg/scalatest/Succeeded$;
        38: aload_3
        39: invokevirtual #150                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        42: ifeq          79
        45: aload_0
        46: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
        51: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
        54: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        57: invokevirtual #153                // Method org/scalatest/concurrent/Conductors$Conductor.conductingHasBegun:()Z
        60: ifne          79
        63: getstatic     #158                // Field org/scalatest/OutcomeOf$.MODULE$:Lorg/scalatest/OutcomeOf$;
        66: aload_0
        67: invokedynamic #179,  0            // InvokeDynamic #0:apply:(Lorg/scalatest/concurrent/ConductorMethods;)Lscala/Function0;
        72: invokevirtual #183                // Method org/scalatest/OutcomeOf$.outcomeOf:(Lscala/Function0;)Lorg/scalatest/Outcome;
        75: astore_2
        76: goto          87
        79: goto          82
        82: aload_3
        83: astore_2
        84: goto          87
        87: aload_2
        88: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 79
          locals = [ top, class org/scalatest/Outcome ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/concurrent/ConductorMethods, class org/scalatest/TestSuite$NoArgTest, class org/scalatest/Outcome, class org/scalatest/Outcome ]
          stack = []
      LineNumberTable:
        line 183: 0
        line 184: 27
        line 185: 35
        line 186: 63
        line 185: 79
        line 187: 82
        line 184: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      89     0  this   Lorg/scalatest/concurrent/ConductorMethods;
            0      89     1  test   Lorg/scalatest/TestSuite$NoArgTest;
    MethodParameters:
      Name                           Flags
      test                           final

  public static org.scalatest.compatible.Assertion $anonfun$withFixture$1(org.scalatest.concurrent.ConductorMethods);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;)Lorg/scalatest/compatible/Assertion;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #53,  1           // InterfaceMethod org$scalatest$concurrent$ConductorMethods$$conductor:()Ljava/util/concurrent/atomic/AtomicReference;
         6: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         9: checkcast     #29                 // class org/scalatest/concurrent/Conductors$Conductor
        12: aload_0
        13: invokeinterface #189,  1          // InterfaceMethod patienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
        18: new           #72                 // class org/scalactic/source/Position
        21: dup
        22: ldc           #73                 // String ConductorMethods.scala
        24: ldc           #75                 // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        26: sipush        186
        29: invokespecial #79                 // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        32: invokevirtual #193                // Method org/scalatest/concurrent/Conductors$Conductor.conduct:(Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        35: areturn
      LineNumberTable:
        line 186: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static void $init$(org.scalatest.concurrent.ConductorMethods);
    descriptor: (Lorg/scalatest/concurrent/ConductorMethods;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: new           #55                 // class java/util/concurrent/atomic/AtomicReference
         4: dup
         5: invokespecial #198                // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
         8: invokeinterface #200,  2          // InterfaceMethod org$scalatest$concurrent$ConductorMethods$_setter_$org$scalatest$concurrent$ConductorMethods$$conductor_$eq:(Ljava/util/concurrent/atomic/AtomicReference;)V
        13: return
      LineNumberTable:
        line 93: 0
        line 91: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Lorg/scalatest/concurrent/ConductorMethods;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #212,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #22= #19 of #21;                 // NoArgTest=class org/scalatest/TestSuite$NoArgTest of class org/scalatest/TestSuite
  public final #27= #24 of #26;           // PatienceConfig=class org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig of class org/scalatest/concurrent/AbstractPatienceConfiguration
  public final #30= #29 of #8;            // Conductor=class org/scalatest/concurrent/Conductors$Conductor of class org/scalatest/concurrent/Conductors
SourceFile: "ConductorMethods.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005mb!\u0003\u0007\u000e!\u0003\r\t\u0001FA\u0019\u0011\u0015\u0019\u0003\u0001\"\u0001%\u0011\u001dA\u0003A1A\u0005\n%BQ!\u000f\u0001\u0005\u0012iBQ!\u0013\u0001\u0005\u0012)CQa\u0017\u0001\u0005\u0012qCQ!\u001a\u0001\u0005\u0012\u0019DQA\u001d\u0001\u0005\u0012MDQ!\u0019\u0001\u0005\u0012]DQ\u0001\u001f\u0001\u0005\u0012eD\u0001\"!\u0005\u0001!\u0013\u0005\u00111\u0003\u0005\u000f\u0003S\u0001\u0001\u0013aA\u0001\u0002\u0013%\u00111FA\u0018\u0005A\u0019uN\u001c3vGR|\'/T3uQ>$7O\u0003\u0002\u000f\u001f\u0005Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005A\t\u0012!C:dC2\fG/Z:u\u0015\u0005\u0011\u0012aA8sO\u000e\u00011\u0003\u0002\u0001\u00167}\u0001\"AF\r\u000e\u0003]Q\u0011\u0001G\u0001\u0006g\u000e\fG.Y\u0005\u00035]\u0011a!\u00118z%\u00164\u0007C\u0001\u000f\u001e\u001b\u0005y\u0011B\u0001\u0010\u0010\u00059!Vm\u001d;Tk&$X-T5yS:\u0004\"\u0001I\u0011\u000e\u00035I!AI\u0007\u0003\u0015\r{g\u000eZ;di>\u00148/\u0001\u0004%S:LG\u000f\n\u000b\u0002KA\u0011aCJ\u0005\u0003O]\u0011A!\u00168ji\u0006I1m\u001c8ek\u000e$xN]\u000b\u0002UA\u00191fM\u001b\u000e\u00031R!!\f\u0018\u0002\r\u0005$x.\\5d\u0015\tqqF\u0003\u00021c\u0005!Q\u000f^5m\u0015\u0005\u0011\u0014\u0001\u00026bm\u0006L!\u0001\u000e\u0017\u0003\u001f\u0005#x.\\5d%\u00164WM]3oG\u0016\u0004\"AN\u001c\u000e\u0003\u0001I!\u0001O\u0011\u0003\u0013\r{g\u000eZ;di>\u0014\u0018A\u0002;ie\u0016\fG\r\u0006\u0002<\u0003B\u0011AhP\u0007\u0002{)\u0011a(M\u0001\u0005Y\u0006tw-\u0003\u0002A{\t1A\u000b\u001b:fC\u0012DaAQ\u0002\u0005\u0002\u0004\u0019\u0015!\u00014\u0011\u0007Y!e)\u0003\u0002F/\tAAHY=oC6,g\b\u0005\u0002\u0017\u000f&\u0011\u0001j\u0006\u0002\u0004\u0003:L\u0018a\u0003;ie\u0016\fGMT1nK\u0012$\"a\u0013(\u0015\u0005mb\u0005B\u0002\"\u0005\t\u0003\u0007Q\nE\u0002\u0017\t\u0016BQa\u0014\u0003A\u0002A\u000bAA\\1nKB\u0011\u0011\u000b\u0017\b\u0003%Z\u0003\"aU\f\u000e\u0003QS!!V\n\u0002\rq\u0012xn\u001c;?\u0013\t9v#\u0001\u0004Qe\u0016$WMZ\u0005\u00033j\u0013aa\u0015;sS:<\'BA,\u0018\u0003-9\u0018-\u001b;G_J\u0014U-\u0019;\u0015\u0005u\u0003gB\u0001\u000f_\u0013\tyv\"A\u0005Tk\u000e\u001cW-\u001a3fI\")\u0011-\u0002a\u0001E\u0006!!-Z1u!\t12-\u0003\u0002e/\t\u0019\u0011J\u001c;\u0002\']LG\u000f[\"p]\u0012,8\r^8s\rJ|\'0\u001a8\u0016\u0005\u001dTGC\u00015q!\tI\'\u000e\u0004\u0001\u0005\u000b-4!\u0019\u00017\u0003\u0003Q\u000b\"!\u001c$\u0011\u0005Yq\u0017BA8\u0018\u0005\u001dqu\u000e\u001e5j]\u001eDaA\u0011\u0004\u0005\u0002\u0004\t\bc\u0001\fEQ\u0006\t\u0012n]\"p]\u0012,8\r^8s\rJ|\'0\u001a8\u0016\u0003Q\u0004\"AF;\n\u0005Y<\"a\u0002\"p_2,\u0017M\\\u000b\u0002E\u0006aq\u000f[3o\r&t\u0017n\u001d5fIR\u0019!0a\u0003\u0011\u0007m\f)AD\u0002}\u0003\u0003q!!`@\u000f\u0005Ms\u0018\"\u0001\n\n\u0005A\t\u0012bAA\u0002\u001f\u00059\u0001/Y2lC\u001e,\u0017\u0002BA\u0004\u0003\u0013\u0011\u0011\"Q:tKJ$\u0018n\u001c8\u000b\u0007\u0005\rq\u0002\u0003\u0005\u0002\u000e%!\t\u0019AA\b\u0003\r1WO\u001c\t\u0004-\u0011S\u0018aC<ji\"4\u0015\u000e\u001f;ve\u0016$B!!\u0006\u0002\u001cA\u0019A$a\u0006\n\u0007\u0005eqBA\u0004PkR\u001cw.\\3\t\u000f\u0005u!\u00021\u0001\u0002 \u0005!A/Z:u!\r1\u0014\u0011E\u0005\u0005\u0003G\t)CA\u0005O_\u0006\u0013x\rV3ti&\u0019\u0011qE\b\u0003\u0013Q+7\u000f^*vSR,\u0017!E:va\u0016\u0014He^5uQ\u001aK\u0007\u0010^;sKR!\u0011QCA\u0017\u0011\u001d\tib\u0003a\u0001\u0003?I1!!\u0005\u001e%\u0019\t\u0019$a\u000e\u0002:\u00191\u0011Q\u0007\u0001\u0001\u0003c\u0011A\u0002\u0010:fM&tW-\\3oiz\u0002\"\u0001\t\u0001\u0011\u0007q\t)\u0003"
    )
BootstrapMethods:
  0: #175 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #159 ()Ljava/lang/Object;
      #164 REF_invokeStatic org/scalatest/concurrent/ConductorMethods.$anonfun$withFixture$1:(Lorg/scalatest/concurrent/ConductorMethods;)Lorg/scalatest/compatible/Assertion;
      #166 ()Lorg/scalatest/compatible/Assertion;
      #167 5
      #168 1
      #166 ()Lorg/scalatest/compatible/Assertion;
  1: #209 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 REF_invokeStatic org/scalatest/concurrent/ConductorMethods.$anonfun$withFixture$1:(Lorg/scalatest/concurrent/ConductorMethods;)Lorg/scalatest/compatible/Assertion;
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 00 00 15 00 A0 00 A1 01 00 C2 00 C3 01 00 55
   00 6F 00 00 6D 00 6E 01 00 68 00 69 00 00 66 00
   67 01 00 26 00 27 00 00 23 00 24 01 00 1F 00 20
   00 00 2D 00 2E 00 00 29 00 2A 01 00 41 00 42 00
   00 3E 00 3F 01 00 56 00 57 00 00 53 00 54 01 00
   76 00 77 00 00 73 00 74 01 00 60 00 61 00 00 5E
   00 5F 01 00 80 00 24 00 00 7E 00 7F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
