Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream.class
  Last modified May 29, 2022; size 2599 bytes
  SHA-256 checksum cbc56d36ce11b1ec4d624cf5a4a130d9a6b8b738f9ac706efba49bc2f290b4ef
  Compiled from "StreamConverters.scala"
public class scala.compat.java8.StreamExtensions$ByteArrayHasSeqParStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 4, attributes: 4
Constant pool:
    #1 = Utf8               scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream
    #2 = Class              #1            // scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               StreamConverters.scala
    #6 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
    #7 = Class              #6            // scala/collection/convert/StreamExtensions$StreamShape
    #8 = Utf8               scala/collection/convert/StreamExtensions
    #9 = Class              #8            // scala/collection/convert/StreamExtensions
   #10 = Utf8               StreamShape
   #11 = Utf8               scala/collection/convert/StreamExtensions$StreamShape$
   #12 = Class              #11           // scala/collection/convert/StreamExtensions$StreamShape$
   #13 = Utf8               StreamShape$
   #14 = Utf8               scala/compat/java8/StreamExtensions
   #15 = Class              #14           // scala/compat/java8/StreamExtensions
   #16 = Utf8               ByteArrayHasSeqParStream
   #17 = Utf8               scala/compat/java8/StreamExtensions$StepperHasParStream
   #18 = Class              #17           // scala/compat/java8/StreamExtensions$StepperHasParStream
   #19 = Utf8               StepperHasParStream
   #20 = Utf8               scala/compat/java8/StreamExtensions$StepperHasSeqStream
   #21 = Class              #20           // scala/compat/java8/StreamExtensions$StepperHasSeqStream
   #22 = Utf8               StepperHasSeqStream
   #23 = Utf8               a
   #24 = Utf8               [B
   #25 = Utf8               $outer
   #26 = Utf8               Lscala/compat/java8/StreamExtensions;
   #27 = Utf8               seqStream
   #28 = Utf8               ()Ljava/util/stream/IntStream;
   #29 = Utf8               scala$compat$java8$StreamExtensions$ByteArrayHasSeqParStream$$$outer
   #30 = Utf8               ()Lscala/compat/java8/StreamExtensions;
   #31 = NameAndType        #29:#30       // scala$compat$java8$StreamExtensions$ByteArrayHasSeqParStream$$$outer:()Lscala/compat/java8/StreamExtensions;
   #32 = Methodref          #2.#31        // scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream.scala$compat$java8$StreamExtensions$ByteArrayHasSeqParStream$$$outer:()Lscala/compat/java8/StreamExtensions;
   #33 = Utf8               scala/collection/ArrayOps$
   #34 = Class              #33           // scala/collection/ArrayOps$
   #35 = Utf8               MODULE$
   #36 = Utf8               Lscala/collection/ArrayOps$;
   #37 = NameAndType        #35:#36       // MODULE$:Lscala/collection/ArrayOps$;
   #38 = Fieldref           #34.#37       // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
   #39 = Utf8               scala/Predef$
   #40 = Class              #39           // scala/Predef$
   #41 = Utf8               Lscala/Predef$;
   #42 = NameAndType        #35:#41       // MODULE$:Lscala/Predef$;
   #43 = Fieldref           #40.#42       // scala/Predef$.MODULE$:Lscala/Predef$;
   #44 = NameAndType        #23:#24       // a:[B
   #45 = Fieldref           #2.#44        // scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream.a:[B
   #46 = Utf8               byteArrayOps
   #47 = Utf8               ([B)Ljava/lang/Object;
   #48 = NameAndType        #46:#47       // byteArrayOps:([B)Ljava/lang/Object;
   #49 = Methodref          #40.#48       // scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
   #50 = Utf8               scala/collection/StepperShape$
   #51 = Class              #50           // scala/collection/StepperShape$
   #52 = Utf8               Lscala/collection/StepperShape$;
   #53 = NameAndType        #35:#52       // MODULE$:Lscala/collection/StepperShape$;
   #54 = Fieldref           #51.#53       // scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
   #55 = Utf8               byteStepperShape
   #56 = Utf8               ()Lscala/collection/StepperShape;
   #57 = NameAndType        #55:#56       // byteStepperShape:()Lscala/collection/StepperShape;
   #58 = Methodref          #51.#57       // scala/collection/StepperShape$.byteStepperShape:()Lscala/collection/StepperShape;
   #59 = Utf8               stepper$extension
   #60 = Utf8               (Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
   #61 = NameAndType        #59:#60       // stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
   #62 = Methodref          #34.#61       // scala/collection/ArrayOps$.stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
   #63 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
   #64 = NameAndType        #22:#63       // StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
   #65 = InterfaceMethodref #15.#64       // scala/compat/java8/StreamExtensions.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
   #66 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape$;
   #67 = NameAndType        #35:#66       // MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
   #68 = Fieldref           #12.#67       // scala/collection/convert/StreamExtensions$StreamShape$.MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
   #69 = Utf8               intStreamShape
   #70 = Utf8               ()Lscala/collection/convert/StreamExtensions$StreamShape;
   #71 = NameAndType        #69:#70       // intStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
   #72 = Methodref          #12.#71       // scala/collection/convert/StreamExtensions$StreamShape$.intStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
   #73 = Utf8               intStepperShape
   #74 = NameAndType        #73:#56       // intStepperShape:()Lscala/collection/StepperShape;
   #75 = Methodref          #51.#74       // scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
   #76 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
   #77 = NameAndType        #27:#76       // seqStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
   #78 = Methodref          #21.#77       // scala/compat/java8/StreamExtensions$StepperHasSeqStream.seqStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
   #79 = Utf8               java/util/stream/IntStream
   #80 = Class              #79           // java/util/stream/IntStream
   #81 = Utf8               this
   #82 = Utf8               Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
   #83 = Utf8               parStream
   #84 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
   #85 = NameAndType        #19:#84       // StepperHasParStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
   #86 = InterfaceMethodref #15.#85       // scala/compat/java8/StreamExtensions.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
   #87 = NameAndType        #83:#76       // parStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
   #88 = Methodref          #18.#87       // scala/compat/java8/StreamExtensions$StepperHasParStream.parStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
   #89 = NameAndType        #25:#26       // $outer:Lscala/compat/java8/StreamExtensions;
   #90 = Fieldref           #2.#89        // scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream.$outer:Lscala/compat/java8/StreamExtensions;
   #91 = Utf8               <init>
   #92 = Utf8               (Lscala/compat/java8/StreamExtensions;[B)V
   #93 = Utf8               ()V
   #94 = NameAndType        #91:#93       // "<init>":()V
   #95 = Methodref          #4.#94        // java/lang/Object."<init>":()V
   #96 = Utf8               Code
   #97 = Utf8               LineNumberTable
   #98 = Utf8               LocalVariableTable
   #99 = Utf8               StackMapTable
  #100 = Utf8               MethodParameters
  #101 = Utf8               InnerClasses
  #102 = Utf8               SourceFile
  #103 = Utf8               ScalaInlineInfo
  #104 = Utf8               Scala
{
  private final byte[] a;
    descriptor: [B
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final scala.compat.java8.StreamExtensions $outer;
    descriptor: Lscala/compat/java8/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.util.stream.IntStream seqStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #32                 // Method scala$compat$java8$StreamExtensions$ByteArrayHasSeqParStream$$$outer:()Lscala/compat/java8/StreamExtensions;
         4: getstatic     #38                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         7: getstatic     #43                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        10: aload_0
        11: getfield      #45                 // Field a:[B
        14: invokevirtual #49                 // Method scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
        17: getstatic     #54                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        20: invokevirtual #58                 // Method scala/collection/StepperShape$.byteStepperShape:()Lscala/collection/StepperShape;
        23: invokevirtual #62                 // Method scala/collection/ArrayOps$.stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        26: invokeinterface #65,  2           // InterfaceMethod scala/compat/java8/StreamExtensions.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
        31: getstatic     #68                 // Field scala/collection/convert/StreamExtensions$StreamShape$.MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
        34: invokevirtual #72                 // Method scala/collection/convert/StreamExtensions$StreamShape$.intStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
        37: getstatic     #54                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        40: invokevirtual #75                 // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        43: invokevirtual #78                 // Method scala/compat/java8/StreamExtensions$StepperHasSeqStream.seqStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
        46: checkcast     #80                 // class java/util/stream/IntStream
        49: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;

  public java.util.stream.IntStream parStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #32                 // Method scala$compat$java8$StreamExtensions$ByteArrayHasSeqParStream$$$outer:()Lscala/compat/java8/StreamExtensions;
         4: getstatic     #38                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         7: getstatic     #43                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        10: aload_0
        11: getfield      #45                 // Field a:[B
        14: invokevirtual #49                 // Method scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
        17: getstatic     #54                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        20: invokevirtual #58                 // Method scala/collection/StepperShape$.byteStepperShape:()Lscala/collection/StepperShape;
        23: invokevirtual #62                 // Method scala/collection/ArrayOps$.stepper$extension:(Ljava/lang/Object;Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        26: invokeinterface #86,  2           // InterfaceMethod scala/compat/java8/StreamExtensions.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
        31: getstatic     #68                 // Field scala/collection/convert/StreamExtensions$StreamShape$.MODULE$:Lscala/collection/convert/StreamExtensions$StreamShape$;
        34: invokevirtual #72                 // Method scala/collection/convert/StreamExtensions$StreamShape$.intStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
        37: getstatic     #54                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
        40: invokevirtual #75                 // Method scala/collection/StepperShape$.intStepperShape:()Lscala/collection/StepperShape;
        43: invokevirtual #88                 // Method scala/compat/java8/StreamExtensions$StepperHasParStream.parStream:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
        46: checkcast     #80                 // class java/util/stream/IntStream
        49: areturn
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;

  public scala.compat.java8.StreamExtensions scala$compat$java8$StreamExtensions$ByteArrayHasSeqParStream$$$outer();
    descriptor: ()Lscala/compat/java8/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #90                 // Field $outer:Lscala/compat/java8/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;

  public scala.compat.java8.StreamExtensions$ByteArrayHasSeqParStream(scala.compat.java8.StreamExtensions, byte[]);
    descriptor: (Lscala/compat/java8/StreamExtensions;[B)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #45                 // Field a:[B
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #90                 // Field $outer:Lscala/compat/java8/StreamExtensions;
        16: aload_0
        17: invokespecial #95                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 180: 0
        line 187: 16
        line 180: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
            0      21     1 $outer   Lscala/compat/java8/StreamExtensions;
            0      21     2     a   [B
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      a                              final
}
InnerClasses:
  public static #10= #7 of #9;            // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
  public static #13= #12 of #9;           // StreamShape$=class scala/collection/convert/StreamExtensions$StreamShape$ of class scala/collection/convert/StreamExtensions
  public #16= #2 of #15;                  // ByteArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #19= #18 of #15;                 // StepperHasParStream=class scala/compat/java8/StreamExtensions$StepperHasParStream of class scala/compat/java8/StreamExtensions
  public #22= #21 of #15;                 // StepperHasSeqStream=class scala/compat/java8/StreamExtensions$StepperHasSeqStream of class scala/compat/java8/StreamExtensions
SourceFile: "StreamConverters.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 5B 00 5C 00 00 53 00 1C 00 00 1D
   00 1E 00 00 1B 00 1C 00
  Scala: length = 0x0 (unknown attribute)

