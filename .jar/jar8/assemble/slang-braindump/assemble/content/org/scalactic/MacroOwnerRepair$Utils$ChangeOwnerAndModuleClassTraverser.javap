Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.class
  Last modified May 29, 2022; size 2392 bytes
  SHA-256 checksum e77cd7039f92d1dc00ba4eeec76395ed15a424b3306984e6ea3330fece4b1742
  Compiled from "MacroOwnerRepair.scala"
public class org.scalactic.MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser extends scala.reflect.internal.Trees$ChangeOwnerTraverser
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser
  super_class: #4                         // scala/reflect/internal/Trees$ChangeOwnerTraverser
  interfaces: 0, fields: 1, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser
   #2 = Class              #1             // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser
   #3 = Utf8               scala/reflect/internal/Trees$ChangeOwnerTraverser
   #4 = Class              #3             // scala/reflect/internal/Trees$ChangeOwnerTraverser
   #5 = Utf8               MacroOwnerRepair.scala
   #6 = Utf8               org/scalactic/MacroOwnerRepair$Utils
   #7 = Class              #6             // org/scalactic/MacroOwnerRepair$Utils
   #8 = Utf8               org/scalactic/MacroOwnerRepair
   #9 = Class              #8             // org/scalactic/MacroOwnerRepair
  #10 = Utf8               Utils
  #11 = Utf8               ChangeOwnerAndModuleClassTraverser
  #12 = Utf8               scala/reflect/api/Trees$TreeApi
  #13 = Class              #12            // scala/reflect/api/Trees$TreeApi
  #14 = Utf8               scala/reflect/api/Trees
  #15 = Class              #14            // scala/reflect/api/Trees
  #16 = Utf8               TreeApi
  #17 = Utf8               scala/reflect/internal/Symbols$Symbol
  #18 = Class              #17            // scala/reflect/internal/Symbols$Symbol
  #19 = Utf8               scala/reflect/internal/Symbols
  #20 = Class              #19            // scala/reflect/internal/Symbols
  #21 = Utf8               Symbol
  #22 = Utf8               scala/reflect/internal/Trees
  #23 = Class              #22            // scala/reflect/internal/Trees
  #24 = Utf8               ChangeOwnerTraverser
  #25 = Utf8               scala/reflect/internal/Trees$DefTree
  #26 = Class              #25            // scala/reflect/internal/Trees$DefTree
  #27 = Utf8               DefTree
  #28 = Utf8               scala/reflect/internal/Trees$Tree
  #29 = Class              #28            // scala/reflect/internal/Trees$Tree
  #30 = Utf8               Tree
  #31 = Utf8               $outer
  #32 = Utf8               Lorg/scalactic/MacroOwnerRepair$Utils;
  #33 = Utf8               traverse
  #34 = Utf8               (Lscala/reflect/internal/Trees$Tree;)V
  #35 = Utf8               tree
  #36 = Utf8               symbol
  #37 = Utf8               ()Lscala/reflect/internal/Symbols$Symbol;
  #38 = NameAndType        #36:#37        // symbol:()Lscala/reflect/internal/Symbols$Symbol;
  #39 = Methodref          #29.#38        // scala/reflect/internal/Trees$Tree.symbol:()Lscala/reflect/internal/Symbols$Symbol;
  #40 = Utf8               moduleClass
  #41 = NameAndType        #40:#37        // moduleClass:()Lscala/reflect/internal/Symbols$Symbol;
  #42 = Methodref          #18.#41        // scala/reflect/internal/Symbols$Symbol.moduleClass:()Lscala/reflect/internal/Symbols$Symbol;
  #43 = Utf8               change
  #44 = Utf8               (Lscala/reflect/internal/Symbols$Symbol;)V
  #45 = NameAndType        #43:#44        // change:(Lscala/reflect/internal/Symbols$Symbol;)V
  #46 = Methodref          #2.#45         // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.change:(Lscala/reflect/internal/Symbols$Symbol;)V
  #47 = Utf8               scala/runtime/BoxedUnit
  #48 = Class              #47            // scala/runtime/BoxedUnit
  #49 = Utf8               UNIT
  #50 = Utf8               Lscala/runtime/BoxedUnit;
  #51 = NameAndType        #49:#50        // UNIT:Lscala/runtime/BoxedUnit;
  #52 = Fieldref           #48.#51        // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #53 = NameAndType        #33:#34        // traverse:(Lscala/reflect/internal/Trees$Tree;)V
  #54 = Methodref          #4.#53         // scala/reflect/internal/Trees$ChangeOwnerTraverser.traverse:(Lscala/reflect/internal/Trees$Tree;)V
  #55 = Utf8               this
  #56 = Utf8               Lorg/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser;
  #57 = Utf8               Lscala/reflect/internal/Trees$Tree;
  #58 = Utf8               org$scalactic$MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser$$$outer
  #59 = Utf8               ()Lorg/scalactic/MacroOwnerRepair$Utils;
  #60 = NameAndType        #31:#32        // $outer:Lorg/scalactic/MacroOwnerRepair$Utils;
  #61 = Fieldref           #2.#60         // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.$outer:Lorg/scalactic/MacroOwnerRepair$Utils;
  #62 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)V
  #63 = Methodref          #2.#53         // org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse:(Lscala/reflect/internal/Trees$Tree;)V
  #64 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #65 = Utf8               <init>
  #66 = Utf8               (Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
  #67 = Utf8               oldowner
  #68 = Utf8               newowner
  #69 = Utf8               u
  #70 = Utf8               ()Lscala/reflect/internal/SymbolTable;
  #71 = NameAndType        #69:#70        // u:()Lscala/reflect/internal/SymbolTable;
  #72 = Methodref          #7.#71         // org/scalactic/MacroOwnerRepair$Utils.u:()Lscala/reflect/internal/SymbolTable;
  #73 = Utf8               (Lscala/reflect/internal/SymbolTable;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
  #74 = NameAndType        #65:#73        // "<init>":(Lscala/reflect/internal/SymbolTable;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
  #75 = Methodref          #4.#74         // scala/reflect/internal/Trees$ChangeOwnerTraverser."<init>":(Lscala/reflect/internal/SymbolTable;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
  #76 = Utf8               Lscala/reflect/internal/Symbols$Symbol;
  #77 = Utf8               Code
  #78 = Utf8               StackMapTable
  #79 = Utf8               LineNumberTable
  #80 = Utf8               LocalVariableTable
  #81 = Utf8               MethodParameters
  #82 = Utf8               InnerClasses
  #83 = Utf8               SourceFile
  #84 = Utf8               ScalaInlineInfo
  #85 = Utf8               Scala
{
  public final org.scalactic.MacroOwnerRepair$Utils $outer;
    descriptor: Lorg/scalactic/MacroOwnerRepair$Utils;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public void traverse(scala.reflect.internal.Trees$Tree);
    descriptor: (Lscala/reflect/internal/Trees$Tree;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #26                 // class scala/reflect/internal/Trees$DefTree
         6: ifeq          27
         9: aload_0
        10: aload_1
        11: invokevirtual #39                 // Method scala/reflect/internal/Trees$Tree.symbol:()Lscala/reflect/internal/Symbols$Symbol;
        14: invokevirtual #42                 // Method scala/reflect/internal/Symbols$Symbol.moduleClass:()Lscala/reflect/internal/Symbols$Symbol;
        17: invokevirtual #46                 // Method change:(Lscala/reflect/internal/Symbols$Symbol;)V
        20: getstatic     #52                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        23: astore_2
        24: goto          37
        27: goto          30
        30: getstatic     #52                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        33: astore_2
        34: goto          37
        37: aload_0
        38: aload_1
        39: invokespecial #54                 // Method scala/reflect/internal/Trees$ChangeOwnerTraverser.traverse:(Lscala/reflect/internal/Trees$Tree;)V
        42: return
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [ top, class scala/reflect/internal/Trees$Tree ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser, class scala/reflect/internal/Trees$Tree, class scala/runtime/BoxedUnit, class scala/reflect/internal/Trees$Tree ]
          stack = []
      LineNumberTable:
        line 57: 0
        line 58: 2
        line 59: 30
        line 61: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser;
            0      43     1  tree   Lscala/reflect/internal/Trees$Tree;
    MethodParameters:
      Name                           Flags
      tree                           final

  public org.scalactic.MacroOwnerRepair$Utils org$scalactic$MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser$$$outer();
    descriptor: ()Lorg/scalactic/MacroOwnerRepair$Utils;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #61                 // Field $outer:Lorg/scalactic/MacroOwnerRepair$Utils;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser;

  public void traverse(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #29                 // class scala/reflect/internal/Trees$Tree
         5: invokevirtual #63                 // Method traverse:(Lscala/reflect/internal/Trees$Tree;)V
         8: return
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser;
            0       9     1  tree   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      tree                           final

  public org.scalactic.MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser(org.scalactic.MacroOwnerRepair$Utils, scala.reflect.internal.Symbols$Symbol, scala.reflect.internal.Symbols$Symbol);
    descriptor: (Lorg/scalactic/MacroOwnerRepair$Utils;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #61                 // Field $outer:Lorg/scalactic/MacroOwnerRepair$Utils;
        11: aload_0
        12: aload_1
        13: invokevirtual #72                 // Method org/scalactic/MacroOwnerRepair$Utils.u:()Lscala/reflect/internal/SymbolTable;
        16: aload_2
        17: aload_3
        18: invokespecial #75                 // Method scala/reflect/internal/Trees$ChangeOwnerTraverser."<init>":(Lscala/reflect/internal/SymbolTable;Lscala/reflect/internal/Symbols$Symbol;Lscala/reflect/internal/Symbols$Symbol;)V
        21: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 53: 0
        line 54: 11
        line 53: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser;
            0      22     1 $outer   Lorg/scalactic/MacroOwnerRepair$Utils;
            0      22     2 oldowner   Lscala/reflect/internal/Symbols$Symbol;
            0      22     3 newowner   Lscala/reflect/internal/Symbols$Symbol;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      oldowner                       final
      newowner                       final
}
InnerClasses:
  private #10= #7 of #9;                  // Utils=class org/scalactic/MacroOwnerRepair$Utils of class org/scalactic/MacroOwnerRepair
  public #11= #2 of #7;                   // ChangeOwnerAndModuleClassTraverser=class org/scalactic/MacroOwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser of class org/scalactic/MacroOwnerRepair$Utils
  public #16= #13 of #15;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public abstract #21= #18 of #20;        // Symbol=class scala/reflect/internal/Symbols$Symbol of class scala/reflect/internal/Symbols
  public #24= #4 of #23;                  // ChangeOwnerTraverser=class scala/reflect/internal/Trees$ChangeOwnerTraverser of class scala/reflect/internal/Trees
  public abstract #27= #26 of #23;        // DefTree=class scala/reflect/internal/Trees$DefTree of class scala/reflect/internal/Trees
  public abstract #30= #29 of #23;        // Tree=class scala/reflect/internal/Trees$Tree of class scala/reflect/internal/Trees
SourceFile: "MacroOwnerRepair.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 41 00 42 00 00 3A 00 3B 00 00 21
   00 3E 00 00 21 00 22 00
  Scala: length = 0x0 (unknown attribute)

