Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/project/Project.class
  Last modified May 29, 2022; size 22156 bytes
  SHA-256 checksum 7d03ae33624c5c5a52472de93daa3c756aa261decc11049c05c5b3310a066c24
  Compiled from "Project.scala"
public final class org.sireum.project.Project implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/project/Project
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 57, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/project/Project
    #2 = Class              #1            // org/sireum/project/Project
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/DatatypeSig
    #6 = Class              #5            // org/sireum/DatatypeSig
    #7 = Utf8               Project.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\tuq!B\u0015+\u0011\u0003\td!B\u001a+\u0011\u0003!\u0004\"B\u001e\u0002\t\u0003a\u0004\"B\u001f\u0002\t\u0003q\u0004bBA\u0010\u0003\u0011\u0005!1\u0001\u0005\b\u0005\u0017\tA\u0011\u0001B\u0007\r\u0011\u0019$F\u0001!\t\u0011\u00153!\u0011!Q\u0001\n\u0019C\u0001b\u0014\u0004\u0003\u0002\u0003\u0006I\u0001\u0015\u0005\t\'\u001a\u0011\t\u0011)A\u0005)\")1H\u0002C\u0001K\"1\u0011N\u0002Q\u0001\n\u0019CQA\u001b\u0004\u0005\u0002-DQ\u0001\u001c\u0004\u0005\u0002-Da!\u001c\u0004!\u0002\u0013\u0001\u0006\"\u00028\u0007\t\u0003y\u0007\"\u00029\u0007\t\u0003y\u0007BB9\u0007A\u0003%A\u000bC\u0003s\r\u0011\u00051\u000fC\u0003u\r\u0011\u00051\u000fC\u0003v\r\u0011\u0005c\u000fC\u0003\u007f\r\u0011\u0005s\u0010\u0003\u0006\u0002\u0002\u0019A)\u0019!C!\u0003\u0007Aq!a\u0003\u0007\t\u0003\ni\u0001C\u0004\u0002 \u0019!\t!!\t\t\u0013\u0005%b!%A\u0005\u0002\u0005-\u0002\"CA!\rE\u0005I\u0011AA\"\u0011%\t9EBI\u0001\n\u0003\tI\u0005\u0003\u0006\u0002N\u0019A)\u0019!C!\u0003\u001fBq!a\u001a\u0007\t\u0003\tI\u0007C\u0004\u0002x\u0019!\t!!\u001f\t\u000f\u0005\u0005e\u0001\"\u0001\u0002\u0004\"9\u00111\u0012\u0004\u0005B\u00055\u0005bBAL\r\u0011\u0005\u0011\u0011\u0014\u0005\b\u0003O3A\u0011AAU\u0011\u001d\tyK\u0002C\u0001\u0003cCq!a.\u0007\t\u0003\tI\f\u0003\u0004\u0002F\u001a!\tA\u0010\u0005\b\u0003\u00134A\u0011AAf\u0011\u001d\t\u0019N\u0002C\u0001\u0003+Dq!a8\u0007\t\u0003\t\t/A\u0004Qe>TWm\u0019;\u000b\u0005-b\u0013a\u00029s_*,7\r\u001e\u0006\u0003[9\naa]5sKVl\'\"A\u0018\u0002\u0007=\u0014xm\u0001\u0001\u0011\u0005I\nQ\"\u0001\u0016\u0003\u000fA\u0013xN[3diN\u0011\u0011!\u000e\t\u0003mej\u0011a\u000e\u0006\u0002q\u0005)1oY1mC&\u0011!h\u000e\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?)\u0005\t\u0014!B3naRLX#A \u0011\u0005I21c\u0001\u00046\u0003B\u0011!iQ\u0007\u0002Y%\u0011A\t\f\u0002\f\t\u0006$\u0018\r^=qKNKw-A\u0005`?6|G-\u001e7fgB!!iR%M\u0013\tAEF\u0001\u0005ICND7+T1q!\t\u0011%*\u0003\u0002LY\t11\u000b\u001e:j]\u001e\u0004\"AM\'\n\u00059S#AB\'pIVdW-A\u0004`?B|7/\u001a;\u0011\u0007\t\u000b\u0016*\u0003\u0002SY\t)\u0001k\\:fi\u0006yqlX7bm\u0016t\'+\u001a9p+Jd7\u000fE\u0002V?&s!AV/\u000f\u0005]cfB\u0001-\\\u001b\u0005I&B\u0001.1\u0003\u0019a$o\\8u}%\tq&\u0003\u0002.]%\u0011a\fL\u0001\ba\u0006\u001c7.Y4f\u0013\t\u0001\u0017MA\u0002J\'jK!AY2\u0003\u0019A\u000b7m[1hKR\u0013\u0018-\u001b;\u000b\u0005\u0011d\u0013!\u0003\u0013j]R,\'O\\1m)\u0011ydm\u001a5\t\u000b\u0015S\u0001\u0019\u0001$\t\u000b=S\u0001\u0019\u0001)\t\u000bMS\u0001\u0019\u0001+\u0002\u0011}kw\u000eZ;mKN\fq!\\8ek2,7/F\u0001G\u0003)9W\r^\'pIVdWm]\u0001\u0007?B|7/\u001a;\u0002\u000bA|7/\u001a;\u0016\u0003A\u000b\u0001bZ3u!>\u001cX\r^\u0001\u000f?6\fg/\u001a8SKB|WK\u001d7t\u00035i\u0017M^3o%\u0016\u0004x.\u0016:mgV\tA+\u0001\thKRl\u0015M^3o%\u0016\u0004x.\u0016:mg\u0006AAo\\*ue&tw\rF\u0001x!\tAX0D\u0001z\u0015\tQ80\u0001\u0003mC:<\'\"\u0001?\u0002\t)\fg/Y\u0005\u0003\u0017f\faa\u001d;sS:<W#A%\u0002\u0011!\f7\u000f[\"pI\u0016,\"!!\u0002\u0011\u0007Y\n9!C\u0002\u0002\n]\u00121!\u00138u\u0003\u0019)\u0017/^1mgR!\u0011qBA\u000b!\r1\u0014\u0011C\u0005\u0004\u0003\'9$a\u0002\"p_2,\u0017M\u001c\u0005\b\u0003/9\u0002\u0019AA\r\u0003\u0005y\u0007c\u0001\u001c\u0002\u001c%\u0019\u0011QD\u001c\u0003\u0007\u0005s\u00170A\u0003baBd\u0017\u0010F\u0004@\u0003G\t)#a\n\t\u000f)D\u0002\u0013!a\u0001\r\"9a\u000e\u0007I\u0001\u0002\u0004\u0001\u0006b\u0002:\u0019!\u0003\u0005\r\u0001V\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\u0011\u0011Q\u0006\u0016\u0004\r\u0006=2FAA\u0019!\u0011\t\u0019$!\u0010\u000e\u0005\u0005U\"\u0002BA\u001c\u0003s\t\u0011\"\u001e8dQ\u0016\u001c7.\u001a3\u000b\u0007\u0005mr\'\u0001\u0006b]:|G/\u0019;j_:LA!a\u0010\u00026\t\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001f\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uII*\"!!\u0012+\u0007A\u000by#A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00134+\t\tYEK\u0002U\u0003_\t\u0001\u0002J2p]R,g\u000e^\u000b\u0003\u0003#\u0002b!a\u0015\u0002\\\u0005\u0005d\u0002BA+\u00033r1\u0001WA,\u0013\u0005A\u0014B\u000108\u0013\u0011\ti&a\u0018\u0003\u0007M+\u0017O\u0003\u0002_oA1a\'a\u0019x\u00033I1!!\u001a8\u0005\u0019!V\u000f\u001d7fe\u0005)A\u0005\u001d7vgR\u0019q(a\u001b\t\r\u00055T\u00041\u0001M\u0003\u0019iw\u000eZ;mK\"\u001aQ$!\u001d\u0011\u0007\t\u000b\u0019(C\u0002\u0002v1\u0012!b\u001d;sS\u000e$\b/\u001e:f\u0003I\tG\rZ\'bm\u0016t\'+\u001a9pg&$xN]=\u0015\u0007}\nY\b\u0003\u0004\u0002~y\u0001\r!S\u0001\u0004kJd\u0007f\u0001\u0010\u0002r\u0005!\u0012\r\u001a3NCZ,gNU3q_NLGo\u001c:jKN$2aPAC\u0011\u0019\t9i\ba\u0001)\u0006!QO\u001d7tQ\ry\u0012\u0011O\u0001\u0005Q\u0006\u001c\b.\u0006\u0002\u0002\u0010B\u0019!)!%\n\u0007\u0005MEFA\u0001[Q\r\u0001\u0013\u0011O\u0001\bSN,\u0015/^1m)\u0011\tY*!)\u0011\u0007\t\u000bi*C\u0002\u0002 2\u0012\u0011A\u0011\u0005\u0007\u0003G\u000b\u0003\u0019A \u0002\u000b=$\b.\u001a:)\u0007\u0005\n\t(\u0001\u0005%Y\u0016\u001c8\u000fJ3r)\u0011\tY*a+\t\r\u0005\r&\u00051\u0001@Q\r\u0011\u0013\u0011O\u0001\fI\u001d\u0014X-\u0019;fe\u0012*\u0017\u000f\u0006\u0003\u0002\u001c\u0006M\u0006BBARG\u0001\u0007q\bK\u0002$\u0003c\n!\u0002\n9mkN$\u0003\u000f\\;t)\ry\u00141\u0018\u0005\u0007\u0003G#\u0003\u0019A )\u0007\u0011\ny\fE\u0002C\u0003\u0003L1!a1-\u0005\u0011\u0001XO]3\u0002\u0019M$(/\u001b9Qk\nLeNZ8)\u0007\u0015\ny,A\u0003tY&\u001cW\rF\u0002@\u0003\u001bDa!a4\'\u0001\u0004!\u0016\u0001B7jIND3AJA`\u0003!y\u0007/\u001a8EKB\u001cXCAAl!\u0015\u0011\u0015\u0011\\%U\u0013\r\tY\u000e\f\u0002\u0004\u001b\u0006\u0004\bfA\u0014\u0002@\u0006Q\u0011\u000e\u001c7UCJ<W\r^:\u0016\u0005\u0005\r\bC\u0002\"\u0002Z&\u000b)\u000f\u0005\u0004C\u00033L\u0015q\u001d\t\u0005+~\u000bI\u000f\u0005\u0003\u0002l\u0006Ehb\u0001\u001a\u0002n&\u0019\u0011q\u001e\u0016\u0002\rQ\u000b\'oZ3u\u0013\u0011\t\u00190!>\u0003\tQK\b/\u001a\u0006\u0004\u0003_T\u0003f\u0001\u0015\u0002@\"\u001aa!a?\u0011\u0007\t\u000bi0C\u0002\u0002\u00002\u0012\u0001\u0002Z1uCRL\b/\u001a\u0015\u0004\u0007\u0005EDcB \u0003\u0006\t\u001d!\u0011\u0002\u0005\u0006U\u0012\u0001\rA\u0012\u0005\u0006]\u0012\u0001\r\u0001\u0015\u0005\u0006e\u0012\u0001\r\u0001V\u0001\bk:\f\u0007\u000f\u001d7z)\u0011\u0011yAa\u0007\u0011\u000bY\u0012\tB!\u0006\n\u0007\tMqG\u0001\u0003T_6,\u0007C\u0002\u001c\u0003\u0018\u0019\u0003F+C\u0002\u0003\u001a]\u0012a\u0001V;qY\u0016\u001c\u0004BBA\f\u000b\u0001\u0007q\b
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               org/sireum/IS$WithFilter
   #17 = Class              #16           // org/sireum/IS$WithFilter
   #18 = Utf8               org/sireum/IS
   #19 = Class              #18           // org/sireum/IS
   #20 = Utf8               WithFilter
   #21 = Utf8               org/sireum/package$$Arrow$
   #22 = Class              #21           // org/sireum/package$$Arrow$
   #23 = Utf8               org/sireum/package
   #24 = Class              #23           // org/sireum/package
   #25 = Utf8               $Arrow$
   #26 = Utf8               org/sireum/project/Target$Type
   #27 = Class              #26           // org/sireum/project/Target$Type
   #28 = Utf8               org/sireum/project/Target
   #29 = Class              #28           // org/sireum/project/Target
   #30 = Utf8               Type
   #31 = Utf8               hashCode
   #32 = Utf8               I
   #33 = Utf8               $content
   #34 = Utf8               Lscala/collection/immutable/Seq;
   #35 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #36 = Utf8               _modules
   #37 = Utf8               Lorg/sireum/HashSMap;
   #38 = Utf8               Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;
   #39 = Utf8               _poset
   #40 = Utf8               Lorg/sireum/Poset;
   #41 = Utf8               Lorg/sireum/Poset<Lorg/sireum/String;>;
   #42 = Utf8               _mavenRepoUrls
   #43 = Utf8               Lorg/sireum/IS;
   #44 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
   #45 = Utf8               bitmap$0
   #46 = Utf8               B
   #47 = Utf8               unapply
   #48 = Utf8               (Lorg/sireum/project/Project;)Lscala/Some;
   #49 = Utf8               (Lorg/sireum/project/Project;)Lscala/Some<Lscala/Tuple3<Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;Lorg/sireum/Poset<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;>;>;
   #50 = Utf8               o
   #51 = Utf8               org/sireum/project/Project$
   #52 = Class              #51           // org/sireum/project/Project$
   #53 = Utf8               MODULE$
   #54 = Utf8               Lorg/sireum/project/Project$;
   #55 = NameAndType        #53:#54       // MODULE$:Lorg/sireum/project/Project$;
   #56 = Fieldref           #52.#55       // org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
   #57 = NameAndType        #47:#48       // unapply:(Lorg/sireum/project/Project;)Lscala/Some;
   #58 = Methodref          #52.#57       // org/sireum/project/Project$.unapply:(Lorg/sireum/project/Project;)Lscala/Some;
   #59 = Utf8               Lorg/sireum/project/Project;
   #60 = Utf8               empty
   #61 = Utf8               ()Lorg/sireum/project/Project;
   #62 = NameAndType        #60:#61       // empty:()Lorg/sireum/project/Project;
   #63 = Methodref          #52.#62       // org/sireum/project/Project$.empty:()Lorg/sireum/project/Project;
   #64 = Utf8               $cannotMixImmutableAndMutable
   #65 = Utf8               ()Lscala/runtime/Nothing$;
   #66 = Utf8               org/sireum/Immutable
   #67 = Class              #66           // org/sireum/Immutable
   #68 = Utf8               $cannotMixImmutableAndMutable$
   #69 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #70 = NameAndType        #68:#69       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #71 = InterfaceMethodref #67.#70       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #72 = Utf8               this
   #73 = Utf8               $hasEquals
   #74 = Utf8               ()Z
   #75 = Utf8               $hasEquals$
   #76 = Utf8               (Lorg/sireum/Immutable;)Z
   #77 = NameAndType        #75:#76       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #78 = InterfaceMethodref #67.#77       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #79 = Utf8               $hasString
   #80 = Utf8               $hasString$
   #81 = NameAndType        #80:#76       // $hasString$:(Lorg/sireum/Immutable;)Z
   #82 = InterfaceMethodref #67.#81       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #83 = Utf8               $clone
   #84 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #85 = Utf8               org/sireum/$internal/ImmutableMarker
   #86 = Class              #85           // org/sireum/$internal/ImmutableMarker
   #87 = Utf8               $clone$
   #88 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #89 = NameAndType        #87:#88       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #90 = InterfaceMethodref #86.#89       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #91 = Utf8               modules
   #92 = Utf8               ()Lorg/sireum/HashSMap;
   #93 = Utf8               ()Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;
   #94 = NameAndType        #36:#37       // _modules:Lorg/sireum/HashSMap;
   #95 = Fieldref           #2.#94        // org/sireum/project/Project._modules:Lorg/sireum/HashSMap;
   #96 = Utf8               getModules
   #97 = Utf8               poset
   #98 = Utf8               ()Lorg/sireum/Poset;
   #99 = Utf8               ()Lorg/sireum/Poset<Lorg/sireum/String;>;
  #100 = NameAndType        #39:#40       // _poset:Lorg/sireum/Poset;
  #101 = Fieldref           #2.#100       // org/sireum/project/Project._poset:Lorg/sireum/Poset;
  #102 = Utf8               getPoset
  #103 = Utf8               mavenRepoUrls
  #104 = Utf8               ()Lorg/sireum/IS;
  #105 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
  #106 = NameAndType        #42:#43       // _mavenRepoUrls:Lorg/sireum/IS;
  #107 = Fieldref           #2.#106       // org/sireum/project/Project._mavenRepoUrls:Lorg/sireum/IS;
  #108 = Utf8               getMavenRepoUrls
  #109 = Utf8               toString
  #110 = Utf8               ()Ljava/lang/String;
  #111 = NameAndType        #79:#74       // $hasString:()Z
  #112 = Methodref          #2.#111       // org/sireum/project/Project.$hasString:()Z
  #113 = Utf8               string$
  #114 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #115 = NameAndType        #113:#114     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #116 = InterfaceMethodref #6.#115       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #117 = Utf8               java/lang/StringBuilder
  #118 = Class              #117          // java/lang/StringBuilder
  #119 = Utf8               <init>
  #120 = Utf8               ()V
  #121 = NameAndType        #119:#120     // "<init>":()V
  #122 = Methodref          #118.#121     // java/lang/StringBuilder."<init>":()V
  #123 = Utf8               Project
  #124 = String             #123          // Project
  #125 = Utf8               append
  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #127 = NameAndType        #125:#126     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #128 = Methodref          #118.#127     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #129 = Utf8               (C)Ljava/lang/StringBuilder;
  #130 = NameAndType        #125:#129     // append:(C)Ljava/lang/StringBuilder;
  #131 = Methodref          #118.#130     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #132 = Utf8               org/sireum/String$
  #133 = Class              #132          // org/sireum/String$
  #134 = Utf8               Lorg/sireum/String$;
  #135 = NameAndType        #53:#134      // MODULE$:Lorg/sireum/String$;
  #136 = Fieldref           #133.#135     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #137 = NameAndType        #91:#92       // modules:()Lorg/sireum/HashSMap;
  #138 = Methodref          #2.#137       // org/sireum/project/Project.modules:()Lorg/sireum/HashSMap;
  #139 = Utf8               escape
  #140 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #141 = NameAndType        #139:#140     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #142 = Methodref          #133.#141     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #143 = Utf8               ,
  #144 = String             #143          // ,
  #145 = NameAndType        #97:#98       // poset:()Lorg/sireum/Poset;
  #146 = Methodref          #2.#145       // org/sireum/project/Project.poset:()Lorg/sireum/Poset;
  #147 = NameAndType        #103:#104     // mavenRepoUrls:()Lorg/sireum/IS;
  #148 = Methodref          #2.#147       // org/sireum/project/Project.mavenRepoUrls:()Lorg/sireum/IS;
  #149 = NameAndType        #109:#110     // toString:()Ljava/lang/String;
  #150 = Methodref          #118.#149     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #151 = Utf8               sb
  #152 = Utf8               Ljava/lang/StringBuilder;
  #153 = Utf8               java/lang/String
  #154 = Class              #153          // java/lang/String
  #155 = Utf8               string
  #156 = Methodref          #2.#149       // org/sireum/project/Project.toString:()Ljava/lang/String;
  #157 = Utf8               apply
  #158 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #159 = NameAndType        #157:#158     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #160 = Methodref          #133.#159     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #161 = Utf8               hashCode$lzycompute
  #162 = Utf8               ()I
  #163 = NameAndType        #45:#46       // bitmap$0:B
  #164 = Fieldref           #2.#163       // org/sireum/project/Project.bitmap$0:B
  #165 = Utf8               hash
  #166 = Utf8               ()Lorg/sireum/Z;
  #167 = NameAndType        #165:#166     // hash:()Lorg/sireum/Z;
  #168 = Methodref          #2.#167       // org/sireum/project/Project.hash:()Lorg/sireum/Z;
  #169 = NameAndType        #31:#162      // hashCode:()I
  #170 = Methodref          #4.#169       // java/lang/Object.hashCode:()I
  #171 = NameAndType        #31:#32       // hashCode:I
  #172 = Fieldref           #2.#171       // org/sireum/project/Project.hashCode:I
  #173 = Utf8               java/lang/Throwable
  #174 = Class              #173          // java/lang/Throwable
  #175 = NameAndType        #161:#162     // hashCode$lzycompute:()I
  #176 = Methodref          #2.#175       // org/sireum/project/Project.hashCode$lzycompute:()I
  #177 = Utf8               equals
  #178 = Utf8               (Ljava/lang/Object;)Z
  #179 = Utf8               org/sireum/B$
  #180 = Class              #179          // org/sireum/B$
  #181 = Utf8               Lorg/sireum/B$;
  #182 = NameAndType        #53:#181      // MODULE$:Lorg/sireum/B$;
  #183 = Fieldref           #180.#182     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #184 = Utf8               isEqual
  #185 = Utf8               (Lorg/sireum/project/Project;)Z
  #186 = NameAndType        #184:#185     // isEqual:(Lorg/sireum/project/Project;)Z
  #187 = Methodref          #2.#186       // org/sireum/project/Project.isEqual:(Lorg/sireum/project/Project;)Z
  #188 = Utf8               $4B
  #189 = Utf8               (Z)Z
  #190 = NameAndType        #188:#189     // $4B:(Z)Z
  #191 = Methodref          #180.#190     // org/sireum/B$.$4B:(Z)Z
  #192 = Utf8               Ljava/lang/Object;
  #193 = Utf8               (Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #194 = Utf8               (Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;Lorg/sireum/Poset<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/project/Project;
  #195 = Utf8               (Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)V
  #196 = NameAndType        #119:#195     // "<init>":(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)V
  #197 = Methodref          #2.#196       // org/sireum/project/Project."<init>":(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)V
  #198 = Utf8               apply$default$1
  #199 = Utf8               apply$default$2
  #200 = Utf8               apply$default$3
  #201 = Utf8               $content$lzycompute
  #202 = Utf8               ()Lscala/collection/immutable/Seq;
  #203 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #204 = Utf8               scala/package$
  #205 = Class              #204          // scala/package$
  #206 = Utf8               Lscala/package$;
  #207 = NameAndType        #53:#206      // MODULE$:Lscala/package$;
  #208 = Fieldref           #205.#207     // scala/package$.MODULE$:Lscala/package$;
  #209 = Utf8               Seq
  #210 = Utf8               ()Lscala/collection/immutable/Seq$;
  #211 = NameAndType        #209:#210     // Seq:()Lscala/collection/immutable/Seq$;
  #212 = Methodref          #205.#211     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #213 = Utf8               scala/runtime/ScalaRunTime$
  #214 = Class              #213          // scala/runtime/ScalaRunTime$
  #215 = Utf8               Lscala/runtime/ScalaRunTime$;
  #216 = NameAndType        #53:#215      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #217 = Fieldref           #214.#216     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #218 = Utf8               scala/Tuple2
  #219 = Class              #218          // scala/Tuple2
  #220 = Utf8               type
  #221 = String             #220          // type
  #222 = Utf8               List
  #223 = Utf8               ()Lscala/collection/immutable/List$;
  #224 = NameAndType        #222:#223     // List:()Lscala/collection/immutable/List$;
  #225 = Methodref          #205.#224     // scala/package$.List:()Lscala/collection/immutable/List$;
  #226 = Utf8               org
  #227 = String             #226          // org
  #228 = Utf8               sireum
  #229 = String             #228          // sireum
  #230 = Utf8               project
  #231 = String             #230          // project
  #232 = Utf8               [Ljava/lang/Object;
  #233 = Class              #232          // "[Ljava/lang/Object;"
  #234 = Utf8               wrapRefArray
  #235 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #236 = NameAndType        #234:#235     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #237 = Methodref          #214.#236     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #238 = Utf8               scala/collection/immutable/List$
  #239 = Class              #238          // scala/collection/immutable/List$
  #240 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #241 = NameAndType        #157:#240     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #242 = Methodref          #239.#241     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #243 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #244 = NameAndType        #119:#243     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #245 = Methodref          #219.#244     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #246 = String             #91           // modules
  #247 = String             #97           // poset
  #248 = String             #103          // mavenRepoUrls
  #249 = Utf8               scala/collection/immutable/Seq$
  #250 = Class              #249          // scala/collection/immutable/Seq$
  #251 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #252 = NameAndType        #157:#251     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #253 = Methodref          #250.#252     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #254 = Utf8               scala/collection/immutable/Seq
  #255 = Class              #254          // scala/collection/immutable/Seq
  #256 = NameAndType        #33:#34       // $content:Lscala/collection/immutable/Seq;
  #257 = Fieldref           #2.#256       // org/sireum/project/Project.$content:Lscala/collection/immutable/Seq;
  #258 = NameAndType        #201:#202     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #259 = Methodref          #2.#258       // org/sireum/project/Project.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #260 = Utf8               $plus
  #261 = Utf8               (Lorg/sireum/project/Module;)Lorg/sireum/project/Project;
  #262 = Utf8               module
  #263 = Utf8               Lorg/sireum/package$$Arrow$;
  #264 = NameAndType        #53:#263      // MODULE$:Lorg/sireum/package$$Arrow$;
  #265 = Fieldref           #22.#264      // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
  #266 = Utf8               org/sireum/package$
  #267 = Class              #266          // org/sireum/package$
  #268 = Utf8               Lorg/sireum/package$;
  #269 = NameAndType        #53:#268      // MODULE$:Lorg/sireum/package$;
  #270 = Fieldref           #267.#269     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #271 = Utf8               org/sireum/String
  #272 = Class              #271          // org/sireum/String
  #273 = Utf8               org/sireum/project/Module
  #274 = Class              #273          // org/sireum/project/Module
  #275 = Utf8               id
  #276 = NameAndType        #275:#110     // id:()Ljava/lang/String;
  #277 = Methodref          #274.#276     // org/sireum/project/Module.id:()Ljava/lang/String;
  #278 = Utf8               (Ljava/lang/String;)V
  #279 = NameAndType        #119:#278     // "<init>":(Ljava/lang/String;)V
  #280 = Methodref          #272.#279     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #281 = Utf8               $Arrow
  #282 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #283 = NameAndType        #281:#282     // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #284 = Methodref          #267.#283     // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #285 = Utf8               $tilde$greater$extension
  #286 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #287 = NameAndType        #285:#286     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #288 = Methodref          #22.#287      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #289 = Utf8               org/sireum/HashSMap
  #290 = Class              #289          // org/sireum/HashSMap
  #291 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #292 = NameAndType        #260:#291     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #293 = Methodref          #290.#292     // org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #294 = Utf8               deps
  #295 = NameAndType        #294:#104     // deps:()Lorg/sireum/IS;
  #296 = Methodref          #274.#295     // org/sireum/project/Module.deps:()Lorg/sireum/IS;
  #297 = Utf8               org/sireum/Poset
  #298 = Class              #297          // org/sireum/Poset
  #299 = Utf8               addParents
  #300 = Utf8               (Ljava/lang/Object;Lorg/sireum/IS;)Lorg/sireum/Poset;
  #301 = NameAndType        #299:#300     // addParents:(Ljava/lang/Object;Lorg/sireum/IS;)Lorg/sireum/Poset;
  #302 = Methodref          #298.#301     // org/sireum/Poset.addParents:(Ljava/lang/Object;Lorg/sireum/IS;)Lorg/sireum/Poset;
  #303 = NameAndType        #157:#193     // apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #304 = Methodref          #52.#303      // org/sireum/project/Project$.apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #305 = Utf8               Lorg/sireum/project/Module;
  #306 = Utf8               addMavenRepository
  #307 = Utf8               (Ljava/lang/String;)Lorg/sireum/project/Project;
  #308 = Utf8               url
  #309 = Utf8               $colon$plus
  #310 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #311 = NameAndType        #309:#310     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #312 = Methodref          #19.#311      // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #313 = Utf8               Ljava/lang/String;
  #314 = Utf8               addMavenRepositories
  #315 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #316 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/project/Project;
  #317 = Utf8               urls
  #318 = Utf8               $plus$plus
  #319 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
  #320 = NameAndType        #318:#319     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #321 = Methodref          #19.#320      // org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #322 = Utf8               org/sireum/Z$
  #323 = Class              #322          // org/sireum/Z$
  #324 = Utf8               Lorg/sireum/Z$;
  #325 = NameAndType        #53:#324      // MODULE$:Lorg/sireum/Z$;
  #326 = Fieldref           #323.#325     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #327 = Methodref          #290.#169     // org/sireum/HashSMap.hashCode:()I
  #328 = Utf8               (I)Lorg/sireum/Z;
  #329 = NameAndType        #157:#328     // apply:(I)Lorg/sireum/Z;
  #330 = Methodref          #323.#329     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #331 = Utf8               other
  #332 = NameAndType        #177:#178     // equals:(Ljava/lang/Object;)Z
  #333 = Methodref          #4.#332       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #334 = NameAndType        #157:#189     // apply:(Z)Z
  #335 = Methodref          #180.#334     // org/sireum/B$.apply:(Z)Z
  #336 = Utf8               $less$eq
  #337 = Utf8               keys
  #338 = NameAndType        #337:#104     // keys:()Lorg/sireum/IS;
  #339 = Methodref          #290.#338     // org/sireum/HashSMap.keys:()Lorg/sireum/IS;
  #340 = Utf8               $minus$minus
  #341 = NameAndType        #340:#319     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #342 = Methodref          #19.#341      // org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #343 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSMap;
  #344 = NameAndType        #340:#343     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
  #345 = Methodref          #290.#344     // org/sireum/HashSMap.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
  #346 = Utf8               $greater$eq
  #347 = Utf8               (Lorg/sireum/project/Project;)Lorg/sireum/project/Project;
  #348 = Utf8               scala/runtime/ObjectRef
  #349 = Class              #348          // scala/runtime/ObjectRef
  #350 = Utf8               create
  #351 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #352 = NameAndType        #350:#351     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #353 = Methodref          #349.#352     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #354 = Utf8               rootNodes
  #355 = NameAndType        #354:#104     // rootNodes:()Lorg/sireum/IS;
  #356 = Methodref          #298.#355     // org/sireum/Poset.rootNodes:()Lorg/sireum/IS;
  #357 = Utf8               nonEmpty
  #358 = NameAndType        #357:#74      // nonEmpty:()Z
  #359 = Methodref          #19.#358      // org/sireum/IS.nonEmpty:()Z
  #360 = Utf8               org/sireum/HashSSet$
  #361 = Class              #360          // org/sireum/HashSSet$
  #362 = Utf8               Lorg/sireum/HashSSet$;
  #363 = NameAndType        #53:#362      // MODULE$:Lorg/sireum/HashSSet$;
  #364 = Fieldref           #361.#363     // org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
  #365 = Utf8               ()Lorg/sireum/HashSSet;
  #366 = NameAndType        #60:#365      // empty:()Lorg/sireum/HashSSet;
  #367 = Methodref          #361.#366     // org/sireum/HashSSet$.empty:()Lorg/sireum/HashSSet;
  #368 = MethodType         #282          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #369 = Utf8               $anonfun$$plus$plus$1$adapted
  #370 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #371 = NameAndType        #369:#370     // $anonfun$$plus$plus$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #372 = Methodref          #2.#371       // org/sireum/project/Project.$anonfun$$plus$plus$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #373 = MethodHandle       6:#372        // REF_invokeStatic org/sireum/project/Project.$anonfun$$plus$plus$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #374 = Integer            1
  #375 = Utf8               java/lang/invoke/LambdaMetafactory
  #376 = Class              #375          // java/lang/invoke/LambdaMetafactory
  #377 = Utf8               altMetafactory
  #378 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #379 = NameAndType        #377:#378     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #380 = Methodref          #376.#379     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #381 = MethodHandle       6:#380        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #382 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #383 = NameAndType        #157:#382     // apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #384 = InvokeDynamic      #0:#383       // #0:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #385 = Utf8               foreach
  #386 = Utf8               (Lscala/Function1;)V
  #387 = NameAndType        #385:#386     // foreach:(Lscala/Function1;)V
  #388 = Methodref          #19.#387      // org/sireum/IS.foreach:(Lscala/Function1;)V
  #389 = Utf8               elem
  #390 = NameAndType        #389:#192     // elem:Ljava/lang/Object;
  #391 = Fieldref           #349.#390     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #392 = Utf8               org/sireum/HashSSet
  #393 = Class              #392          // org/sireum/HashSSet
  #394 = Utf8               elements
  #395 = NameAndType        #394:#104     // elements:()Lorg/sireum/IS;
  #396 = Methodref          #393.#395     // org/sireum/HashSSet.elements:()Lorg/sireum/IS;
  #397 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #398 = NameAndType        #318:#397     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #399 = Methodref          #361.#398     // org/sireum/HashSSet$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #400 = Methodref          #393.#398     // org/sireum/HashSSet.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
  #401 = NameAndType        #198:#92      // apply$default$1:()Lorg/sireum/HashSMap;
  #402 = Methodref          #2.#401       // org/sireum/project/Project.apply$default$1:()Lorg/sireum/HashSMap;
  #403 = NameAndType        #199:#98      // apply$default$2:()Lorg/sireum/Poset;
  #404 = Methodref          #2.#403       // org/sireum/project/Project.apply$default$2:()Lorg/sireum/Poset;
  #405 = Methodref          #2.#303       // org/sireum/project/Project.apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #406 = Utf8               newNames
  #407 = Utf8               Lscala/runtime/ObjectRef;
  #408 = Utf8               qual$1
  #409 = Utf8               x$1
  #410 = Utf8               x$2
  #411 = Utf8               x$3
  #412 = Utf8               r
  #413 = Utf8               names
  #414 = Utf8               stripPubInfo
  #415 = Utf8               values
  #416 = NameAndType        #415:#104     // values:()Lorg/sireum/IS;
  #417 = Methodref          #290.#416     // org/sireum/HashSMap.values:()Lorg/sireum/IS;
  #418 = Utf8               $anonfun$stripPubInfo$1$adapted
  #419 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #420 = NameAndType        #418:#419     // $anonfun$stripPubInfo$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #421 = Methodref          #2.#420       // org/sireum/project/Project.$anonfun$stripPubInfo$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #422 = MethodHandle       6:#421        // REF_invokeStatic org/sireum/project/Project.$anonfun$stripPubInfo$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #423 = Utf8               (Lorg/sireum/project/Module;)Ljava/lang/Object;
  #424 = MethodType         #423          //  (Lorg/sireum/project/Module;)Ljava/lang/Object;
  #425 = Integer            5
  #426 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #427 = NameAndType        #157:#426     // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #428 = InvokeDynamic      #1:#427       // #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #429 = Utf8               slice
  #430 = Utf8               mids
  #431 = Utf8               isEmpty
  #432 = NameAndType        #431:#74      // isEmpty:()Z
  #433 = Methodref          #19.#432      // org/sireum/IS.isEmpty:()Z
  #434 = Utf8               org/sireum/HashSet$
  #435 = Class              #434          // org/sireum/HashSet$
  #436 = Utf8               Lorg/sireum/HashSet$;
  #437 = NameAndType        #53:#436      // MODULE$:Lorg/sireum/HashSet$;
  #438 = Fieldref           #435.#437     // org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
  #439 = Utf8               ()Lorg/sireum/HashSet;
  #440 = NameAndType        #60:#439      // empty:()Lorg/sireum/HashSet;
  #441 = Methodref          #435.#440     // org/sireum/HashSet$.empty:()Lorg/sireum/HashSet;
  #442 = Utf8               $anonfun$slice$2$adapted
  #443 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #444 = NameAndType        #442:#443     // $anonfun$slice$2$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #445 = Methodref          #2.#444       // org/sireum/project/Project.$anonfun$slice$2$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #446 = MethodHandle       6:#445        // REF_invokeStatic org/sireum/project/Project.$anonfun$slice$2$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #447 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #448 = NameAndType        #157:#447     // apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #449 = InvokeDynamic      #2:#448       // #2:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #450 = Utf8               entries
  #451 = NameAndType        #450:#104     // entries:()Lorg/sireum/IS;
  #452 = Methodref          #290.#451     // org/sireum/HashSMap.entries:()Lorg/sireum/IS;
  #453 = Utf8               $anonfun$slice$3$adapted
  #454 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #455 = NameAndType        #453:#454     // $anonfun$slice$3$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #456 = Methodref          #2.#455       // org/sireum/project/Project.$anonfun$slice$3$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #457 = MethodHandle       6:#456        // REF_invokeStatic org/sireum/project/Project.$anonfun$slice$3$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #458 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #459 = MethodType         #458          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #460 = InvokeDynamic      #3:#427       // #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #461 = Utf8               withFilter
  #462 = Utf8               (Lscala/Function1;)Lorg/sireum/IS$WithFilter;
  #463 = NameAndType        #461:#462     // withFilter:(Lscala/Function1;)Lorg/sireum/IS$WithFilter;
  #464 = Methodref          #19.#463      // org/sireum/IS.withFilter:(Lscala/Function1;)Lorg/sireum/IS$WithFilter;
  #465 = Utf8               $anonfun$slice$4$adapted
  #466 = NameAndType        #465:#454     // $anonfun$slice$4$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #467 = Methodref          #2.#466       // org/sireum/project/Project.$anonfun$slice$4$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #468 = MethodHandle       6:#467        // REF_invokeStatic org/sireum/project/Project.$anonfun$slice$4$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #469 = InvokeDynamic      #4:#427       // #4:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #470 = Methodref          #17.#387      // org/sireum/IS$WithFilter.foreach:(Lscala/Function1;)V
  #471 = Utf8               tmids
  #472 = Utf8               openDeps
  #473 = Utf8               ()Lorg/sireum/Map;
  #474 = Utf8               ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;>;
  #475 = Utf8               org/sireum/Map$
  #476 = Class              #475          // org/sireum/Map$
  #477 = Utf8               Lorg/sireum/Map$;
  #478 = NameAndType        #53:#477      // MODULE$:Lorg/sireum/Map$;
  #479 = Fieldref           #476.#478     // org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
  #480 = NameAndType        #60:#473      // empty:()Lorg/sireum/Map;
  #481 = Methodref          #476.#480     // org/sireum/Map$.empty:()Lorg/sireum/Map;
  #482 = Utf8               $anonfun$openDeps$1$adapted
  #483 = Utf8               (Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #484 = NameAndType        #482:#483     // $anonfun$openDeps$1$adapted:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #485 = Methodref          #2.#484       // org/sireum/project/Project.$anonfun$openDeps$1$adapted:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #486 = MethodHandle       6:#485        // REF_invokeStatic org/sireum/project/Project.$anonfun$openDeps$1$adapted:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #487 = Utf8               (Lorg/sireum/IS;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #488 = NameAndType        #157:#487     // apply:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #489 = InvokeDynamic      #5:#488       // #5:apply:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #490 = Utf8               org/sireum/Map
  #491 = Class              #490          // org/sireum/Map
  #492 = Utf8               illTargets
  #493 = Utf8               ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;>;>;
  #494 = Utf8               $anonfun$illTargets$1$adapted
  #495 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #496 = NameAndType        #494:#495     // $anonfun$illTargets$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #497 = Methodref          #2.#496       // org/sireum/project/Project.$anonfun$illTargets$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #498 = MethodHandle       6:#497        // REF_invokeStatic org/sireum/project/Project.$anonfun$illTargets$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  #499 = InvokeDynamic      #6:#448       // #6:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #500 = Utf8               ()Ljava/lang/Object;
  #501 = NameAndType        #83:#84       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #502 = Methodref          #2.#501       // org/sireum/project/Project.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #503 = Utf8               $anonfun$$plus$plus$1
  #504 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #505 = Utf8               other$1
  #506 = Utf8               r$1
  #507 = Utf8               newNames$1
  #508 = Utf8               name
  #509 = Utf8               get
  #510 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #511 = NameAndType        #509:#510     // get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #512 = Methodref          #290.#511     // org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #513 = Utf8               org/sireum/Some
  #514 = Class              #513          // org/sireum/Some
  #515 = Utf8               org/sireum/Some$
  #516 = Class              #515          // org/sireum/Some$
  #517 = Utf8               Lorg/sireum/Some$;
  #518 = NameAndType        #53:#517      // MODULE$:Lorg/sireum/Some$;
  #519 = Fieldref           #516.#518     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #520 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #521 = NameAndType        #47:#520      // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #522 = Methodref          #516.#521     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #523 = Utf8               scala/Some
  #524 = Class              #523          // scala/Some
  #525 = Methodref          #524.#432     // scala/Some.isEmpty:()Z
  #526 = NameAndType        #509:#500     // get:()Ljava/lang/Object;
  #527 = Methodref          #524.#526     // scala/Some.get:()Ljava/lang/Object;
  #528 = NameAndType        #260:#261     // $plus:(Lorg/sireum/project/Module;)Lorg/sireum/project/Project;
  #529 = Methodref          #2.#528       // org/sireum/project/Project.$plus:(Lorg/sireum/project/Module;)Lorg/sireum/project/Project;
  #530 = Utf8               scala/runtime/BoxedUnit
  #531 = Class              #530          // scala/runtime/BoxedUnit
  #532 = Utf8               UNIT
  #533 = Utf8               Lscala/runtime/BoxedUnit;
  #534 = NameAndType        #532:#533     // UNIT:Lscala/runtime/BoxedUnit;
  #535 = Fieldref           #531.#534     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #536 = Utf8               childrenOf
  #537 = Utf8               (Ljava/lang/Object;)Lorg/sireum/HashSSet;
  #538 = NameAndType        #536:#537     // childrenOf:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
  #539 = Methodref          #298.#538     // org/sireum/Poset.childrenOf:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
  #540 = Utf8               union
  #541 = Utf8               (Lorg/sireum/HashSSet;)Lorg/sireum/HashSSet;
  #542 = NameAndType        #540:#541     // union:(Lorg/sireum/HashSSet;)Lorg/sireum/HashSSet;
  #543 = Methodref          #393.#542     // org/sireum/HashSSet.union:(Lorg/sireum/HashSSet;)Lorg/sireum/HashSSet;
  #544 = Utf8               m
  #545 = Utf8               org/sireum/Option
  #546 = Class              #545          // org/sireum/Option
  #547 = Utf8               $anonfun$stripPubInfo$1
  #548 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #549 = Utf8               r$2
  #550 = Utf8               org/sireum/None$
  #551 = Class              #550          // org/sireum/None$
  #552 = Utf8               Lorg/sireum/None$;
  #553 = NameAndType        #53:#552      // MODULE$:Lorg/sireum/None$;
  #554 = Fieldref           #551.#553     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #555 = Utf8               ()Lorg/sireum/None;
  #556 = NameAndType        #157:#555     // apply:()Lorg/sireum/None;
  #557 = Methodref          #551.#556     // org/sireum/None$.apply:()Lorg/sireum/None;
  #558 = NameAndType        #198:#110     // apply$default$1:()Ljava/lang/String;
  #559 = Methodref          #274.#558     // org/sireum/project/Module.apply$default$1:()Ljava/lang/String;
  #560 = NameAndType        #199:#110     // apply$default$2:()Ljava/lang/String;
  #561 = Methodref          #274.#560     // org/sireum/project/Module.apply$default$2:()Ljava/lang/String;
  #562 = Utf8               ()Lorg/sireum/Option;
  #563 = NameAndType        #200:#562     // apply$default$3:()Lorg/sireum/Option;
  #564 = Methodref          #274.#563     // org/sireum/project/Module.apply$default$3:()Lorg/sireum/Option;
  #565 = Utf8               apply$default$4
  #566 = NameAndType        #565:#104     // apply$default$4:()Lorg/sireum/IS;
  #567 = Methodref          #274.#566     // org/sireum/project/Module.apply$default$4:()Lorg/sireum/IS;
  #568 = Utf8               apply$default$5
  #569 = NameAndType        #568:#104     // apply$default$5:()Lorg/sireum/IS;
  #570 = Methodref          #274.#569     // org/sireum/project/Module.apply$default$5:()Lorg/sireum/IS;
  #571 = Utf8               apply$default$6
  #572 = NameAndType        #571:#104     // apply$default$6:()Lorg/sireum/IS;
  #573 = Methodref          #274.#572     // org/sireum/project/Module.apply$default$6:()Lorg/sireum/IS;
  #574 = Utf8               apply$default$7
  #575 = NameAndType        #574:#104     // apply$default$7:()Lorg/sireum/IS;
  #576 = Methodref          #274.#575     // org/sireum/project/Module.apply$default$7:()Lorg/sireum/IS;
  #577 = Utf8               apply$default$8
  #578 = NameAndType        #577:#104     // apply$default$8:()Lorg/sireum/IS;
  #579 = Methodref          #274.#578     // org/sireum/project/Module.apply$default$8:()Lorg/sireum/IS;
  #580 = Utf8               apply$default$9
  #581 = NameAndType        #580:#104     // apply$default$9:()Lorg/sireum/IS;
  #582 = Methodref          #274.#581     // org/sireum/project/Module.apply$default$9:()Lorg/sireum/IS;
  #583 = Utf8               apply$default$10
  #584 = NameAndType        #583:#104     // apply$default$10:()Lorg/sireum/IS;
  #585 = Methodref          #274.#584     // org/sireum/project/Module.apply$default$10:()Lorg/sireum/IS;
  #586 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
  #587 = NameAndType        #157:#586     // apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
  #588 = Methodref          #274.#587     // org/sireum/project/Module.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
  #589 = Utf8               Lorg/sireum/None;
  #590 = Utf8               x$4
  #591 = Utf8               Lorg/sireum/Option;
  #592 = Utf8               x$5
  #593 = Utf8               x$6
  #594 = Utf8               x$7
  #595 = Utf8               x$8
  #596 = Utf8               x$9
  #597 = Utf8               x$10
  #598 = Utf8               x$11
  #599 = Utf8               $anonfun$slice$1
  #600 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #601 = Utf8               $this
  #602 = Utf8               tmids$1
  #603 = Utf8               mDep
  #604 = Utf8               rec$1
  #605 = Utf8               (Ljava/lang/String;Lscala/runtime/ObjectRef;)V
  #606 = NameAndType        #604:#605     // rec$1:(Ljava/lang/String;Lscala/runtime/ObjectRef;)V
  #607 = Methodref          #2.#606       // org/sireum/project/Project.rec$1:(Ljava/lang/String;Lscala/runtime/ObjectRef;)V
  #608 = Utf8               mid
  #609 = Utf8               org/sireum/HashSet
  #610 = Class              #609          // org/sireum/HashSet
  #611 = Utf8               (Ljava/lang/Object;)Lorg/sireum/HashSet;
  #612 = NameAndType        #260:#611     // $plus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
  #613 = Methodref          #610.#612     // org/sireum/HashSet.$plus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
  #614 = Utf8               $anonfun$slice$1$adapted
  #615 = NameAndType        #614:#443     // $anonfun$slice$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #616 = Methodref          #2.#615       // org/sireum/project/Project.$anonfun$slice$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #617 = MethodHandle       6:#616        // REF_invokeStatic org/sireum/project/Project.$anonfun$slice$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #618 = InvokeDynamic      #7:#448       // #7:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #619 = Utf8               $anonfun$slice$2
  #620 = Utf8               $anonfun$slice$3
  #621 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
  #622 = Utf8               p
  #623 = Utf8               _1
  #624 = NameAndType        #623:#500     // _1:()Ljava/lang/Object;
  #625 = Methodref          #219.#624     // scala/Tuple2._1:()Ljava/lang/Object;
  #626 = Utf8               contains
  #627 = NameAndType        #626:#178     // contains:(Ljava/lang/Object;)Z
  #628 = Methodref          #610.#627     // org/sireum/HashSet.contains:(Ljava/lang/Object;)Z
  #629 = Utf8               Lscala/Tuple2;
  #630 = Utf8               $anonfun$slice$4
  #631 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #632 = Utf8               r$3
  #633 = Utf8               _2
  #634 = NameAndType        #633:#500     // _2:()Ljava/lang/Object;
  #635 = Methodref          #219.#634     // scala/Tuple2._2:()Ljava/lang/Object;
  #636 = Utf8               $anonfun$openDeps$1
  #637 = Utf8               (Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #638 = Utf8               mids$1
  #639 = Utf8               r$4
  #640 = Utf8               (Lscala/Tuple2;)Lorg/sireum/Map;
  #641 = NameAndType        #260:#640     // $plus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #642 = Methodref          #491.#641     // org/sireum/Map.$plus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #643 = Utf8               diff
  #644 = Utf8               $anonfun$illTargets$2
  #645 = Utf8               (Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #646 = Utf8               m$1
  #647 = Utf8               map$1
  #648 = Utf8               targets
  #649 = NameAndType        #648:#104     // targets:()Lorg/sireum/IS;
  #650 = Methodref          #274.#649     // org/sireum/project/Module.targets:()Lorg/sireum/IS;
  #651 = Utf8               m2
  #652 = Utf8               $anonfun$illTargets$1
  #653 = Utf8               (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #654 = Utf8               r$5
  #655 = Utf8               $anonfun$illTargets$2$adapted
  #656 = Utf8               (Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #657 = NameAndType        #655:#656     // $anonfun$illTargets$2$adapted:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #658 = Methodref          #2.#657       // org/sireum/project/Project.$anonfun$illTargets$2$adapted:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #659 = MethodHandle       6:#658        // REF_invokeStatic org/sireum/project/Project.$anonfun$illTargets$2$adapted:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #660 = Utf8               (Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #661 = NameAndType        #157:#660     // apply:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #662 = InvokeDynamic      #8:#661       // #8:apply:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #663 = Methodref          #491.#358     // org/sireum/Map.nonEmpty:()Z
  #664 = Utf8               map
  #665 = Utf8               (Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;Lorg/sireum/Poset<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
  #666 = Utf8               __modules
  #667 = Utf8               __poset
  #668 = Utf8               __mavenRepoUrls
  #669 = Methodref          #4.#121       // java/lang/Object."<init>":()V
  #670 = Utf8               $init$
  #671 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #672 = NameAndType        #670:#671     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #673 = InterfaceMethodref #86.#672      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #674 = Utf8               (Lorg/sireum/Immutable;)V
  #675 = NameAndType        #670:#674     // $init$:(Lorg/sireum/Immutable;)V
  #676 = InterfaceMethodref #67.#675      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #677 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #678 = NameAndType        #670:#677     // $init$:(Lorg/sireum/DatatypeSig;)V
  #679 = InterfaceMethodref #6.#678       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #680 = Utf8               value
  #681 = NameAndType        #680:#110     // value:()Ljava/lang/String;
  #682 = Methodref          #272.#681     // org/sireum/String.value:()Ljava/lang/String;
  #683 = NameAndType        #503:#504     // $anonfun$$plus$plus$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #684 = Methodref          #2.#683       // org/sireum/project/Project.$anonfun$$plus$plus$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #685 = NameAndType        #547:#548     // $anonfun$stripPubInfo$1:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #686 = Methodref          #2.#685       // org/sireum/project/Project.$anonfun$stripPubInfo$1:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #687 = NameAndType        #619:#600     // $anonfun$slice$2:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #688 = Methodref          #2.#687       // org/sireum/project/Project.$anonfun$slice$2:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #689 = Utf8               org/sireum/B
  #690 = Class              #689          // org/sireum/B
  #691 = NameAndType        #620:#621     // $anonfun$slice$3:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
  #692 = Methodref          #2.#691       // org/sireum/project/Project.$anonfun$slice$3:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
  #693 = Utf8               (Z)V
  #694 = NameAndType        #119:#693     // "<init>":(Z)V
  #695 = Methodref          #690.#694     // org/sireum/B."<init>":(Z)V
  #696 = NameAndType        #630:#631     // $anonfun$slice$4:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #697 = Methodref          #2.#696       // org/sireum/project/Project.$anonfun$slice$4:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #698 = NameAndType        #636:#637     // $anonfun$openDeps$1:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #699 = Methodref          #2.#698       // org/sireum/project/Project.$anonfun$openDeps$1:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #700 = NameAndType        #652:#653     // $anonfun$illTargets$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #701 = Methodref          #2.#700       // org/sireum/project/Project.$anonfun$illTargets$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
  #702 = NameAndType        #599:#600     // $anonfun$slice$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #703 = Methodref          #2.#702       // org/sireum/project/Project.$anonfun$slice$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #704 = NameAndType        #644:#645     // $anonfun$illTargets$2:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #705 = Methodref          #2.#704       // org/sireum/project/Project.$anonfun$illTargets$2:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
  #706 = Utf8               $deserializeLambda$
  #707 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #708 = Utf8               scala/runtime/LambdaDeserialize
  #709 = Class              #708          // scala/runtime/LambdaDeserialize
  #710 = Utf8               bootstrap
  #711 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #712 = NameAndType        #710:#711     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #713 = Methodref          #709.#712     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #714 = MethodHandle       6:#713        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #715 = Utf8               lambdaDeserialize
  #716 = NameAndType        #715:#707     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #717 = InvokeDynamic      #9:#716       // #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #718 = Utf8               Signature
  #719 = Utf8               Code
  #720 = Utf8               LocalVariableTable
  #721 = Utf8               MethodParameters
  #722 = Utf8               LineNumberTable
  #723 = Utf8               StackMapTable
  #724 = Utf8               InnerClasses
  #725 = Utf8               SourceFile
  #726 = Utf8               RuntimeVisibleAnnotations
  #727 = Utf8               BootstrapMethods
  #728 = Utf8               ScalaInlineInfo
  #729 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #35                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.HashSMap<org.sireum.String, org.sireum.project.Module> _modules;
    descriptor: Lorg/sireum/HashSMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #38                          // Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;

  private final org.sireum.Poset<org.sireum.String> _poset;
    descriptor: Lorg/sireum/Poset;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #41                          // Lorg/sireum/Poset<Lorg/sireum/String;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _mavenRepoUrls;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #44                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static scala.Some<scala.Tuple3<org.sireum.HashSMap<org.sireum.String, org.sireum.project.Module>, org.sireum.Poset<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>>> unapply(org.sireum.project.Project);
    descriptor: (Lorg/sireum/project/Project;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #56                 // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
         3: aload_0
         4: invokevirtual #58                 // Method org/sireum/project/Project$.unapply:(Lorg/sireum/project/Project;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/project/Project;
    Signature: #49                          // (Lorg/sireum/project/Project;)Lscala/Some<Lscala/Tuple3<Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;Lorg/sireum/Poset<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static org.sireum.project.Project empty();
    descriptor: ()Lorg/sireum/project/Project;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #56                 // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
         3: invokevirtual #63                 // Method org/sireum/project/Project$.empty:()Lorg/sireum/project/Project;
         6: areturn

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #78                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #82                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #90                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;

  public org.sireum.HashSMap<org.sireum.String, org.sireum.project.Module> modules();
    descriptor: ()Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field _modules:Lorg/sireum/HashSMap;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #93                          // ()Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;

  public org.sireum.HashSMap<org.sireum.String, org.sireum.project.Module> getModules();
    descriptor: ()Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field _modules:Lorg/sireum/HashSMap;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #93                          // ()Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;

  public org.sireum.Poset<org.sireum.String> poset();
    descriptor: ()Lorg/sireum/Poset;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #101                // Field _poset:Lorg/sireum/Poset;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #99                          // ()Lorg/sireum/Poset<Lorg/sireum/String;>;

  public org.sireum.Poset<org.sireum.String> getPoset();
    descriptor: ()Lorg/sireum/Poset;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #101                // Field _poset:Lorg/sireum/Poset;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #99                          // ()Lorg/sireum/Poset<Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> mavenRepoUrls();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #107                // Field _mavenRepoUrls:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #105                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getMavenRepoUrls();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #107                // Field _mavenRepoUrls:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #105                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #112                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #116                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          106
        14: new           #118                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #122                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #124                // String Project
        25: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #131                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #136                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        44: invokevirtual #142                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #144                // String ,
        54: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #136                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: aload_0
        63: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
        66: invokevirtual #142                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        69: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: pop
        73: aload_1
        74: ldc           #144                // String ,
        76: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: getstatic     #136                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        84: aload_0
        85: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
        88: invokevirtual #142                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        91: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        94: pop
        95: aload_1
        96: bipush        41
        98: invokevirtual #131                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       106: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 91
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      84     1    sb   Ljava/lang/StringBuilder;
            0     107     0  this   Lorg/sireum/project/Project;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #112                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #116                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #136                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #156                // Method toString:()Ljava/lang/String;
        21: invokevirtual #160                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/project/Project;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #164                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     37
        15: aload_0
        16: aload_0
        17: invokevirtual #168                // Method hash:()Lorg/sireum/Z;
        20: invokevirtual #170                // Method java/lang/Object.hashCode:()I
        23: putfield      #172                // Field hashCode:I
        26: aload_0
        27: aload_0
        28: getfield      #164                // Field bitmap$0:B
        31: iconst_1
        32: ior
        33: i2b
        34: putfield      #164                // Field bitmap$0:B
        37: aload_1
        38: monitorexit
        39: goto          45
        42: aload_1
        43: monitorexit
        44: athrow
        45: aload_0
        46: getfield      #172                // Field hashCode:I
        49: ireturn
      Exception table:
         from    to  target type
             4    37    42   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class org/sireum/project/Project ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/project/Project;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #164                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #176                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #172                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/project/Project;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     9
         5: iconst_1
         6: goto          46
         9: aload_1
        10: astore_3
        11: aload_3
        12: instanceof    #2                  // class org/sireum/project/Project
        15: ifeq          40
        18: aload_3
        19: checkcast     #2                  // class org/sireum/project/Project
        22: astore        4
        24: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        27: aload_0
        28: aload         4
        30: invokevirtual #187                // Method isEqual:(Lorg/sireum/project/Project;)Z
        33: invokevirtual #191                // Method org/sireum/B$.$4B:(Z)Z
        36: istore_2
        37: goto          45
        40: goto          43
        43: iconst_0
        44: ireturn
        45: iload_2
        46: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/project/Project, class java/lang/Object, int, class java/lang/Object, class org/sireum/project/Project ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/Project, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/project/Project;
            0      47     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.project.Project apply(org.sireum.HashSMap<org.sireum.String, org.sireum.project.Module>, org.sireum.Poset<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/sireum/project/Project
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #197                // Method "<init>":(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)V
        10: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/project/Project;
            0      11     1 modules   Lorg/sireum/HashSMap;
            0      11     2 poset   Lorg/sireum/Poset;
            0      11     3 mavenRepoUrls   Lorg/sireum/IS;
    Signature: #194                         // (Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;Lorg/sireum/Poset<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/project/Project;
    MethodParameters:
      Name                           Flags
      modules                        final
      poset                          final
      mavenRepoUrls                  final

  public org.sireum.HashSMap<org.sireum.String, org.sireum.project.Module> apply$default$1();
    descriptor: ()Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #93                          // ()Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;

  public org.sireum.Poset<org.sireum.String> apply$default$2();
    descriptor: ()Lorg/sireum/Poset;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #99                          // ()Lorg/sireum/Poset<Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$3();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;
    Signature: #105                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #164                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     157
        15: aload_0
        16: getstatic     #208                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #212                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #217                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_4
        26: anewarray     #219                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #219                // class scala/Tuple2
        34: dup
        35: ldc           #221                // String type
        37: getstatic     #208                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #225                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #217                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #154                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #227                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #229                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #231                // String project
        64: aastore
        65: dup
        66: iconst_3
        67: ldc           #124                // String Project
        69: aastore
        70: checkcast     #233                // class "[Ljava/lang/Object;"
        73: invokevirtual #237                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        76: invokevirtual #242                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        79: invokespecial #245                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_1
        85: new           #219                // class scala/Tuple2
        88: dup
        89: ldc           #246                // String modules
        91: aload_0
        92: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        95: invokespecial #245                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        98: aastore
        99: dup
       100: iconst_2
       101: new           #219                // class scala/Tuple2
       104: dup
       105: ldc           #247                // String poset
       107: aload_0
       108: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
       111: invokespecial #245                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       114: aastore
       115: dup
       116: iconst_3
       117: new           #219                // class scala/Tuple2
       120: dup
       121: ldc           #248                // String mavenRepoUrls
       123: aload_0
       124: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
       127: invokespecial #245                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       130: aastore
       131: checkcast     #233                // class "[Ljava/lang/Object;"
       134: invokevirtual #237                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       137: invokevirtual #253                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       140: checkcast     #255                // class scala/collection/immutable/Seq
       143: putfield      #257                // Field $content:Lscala/collection/immutable/Seq;
       146: aload_0
       147: aload_0
       148: getfield      #164                // Field bitmap$0:B
       151: iconst_2
       152: ior
       153: i2b
       154: putfield      #164                // Field bitmap$0:B
       157: aload_1
       158: monitorexit
       159: goto          165
       162: aload_1
       163: monitorexit
       164: athrow
       165: aload_0
       166: getfield      #257                // Field $content:Lscala/collection/immutable/Seq;
       169: areturn
      Exception table:
         from    to  target type
             4   157   162   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 157
          locals = [ class org/sireum/project/Project ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     170     0  this   Lorg/sireum/project/Project;
    Signature: #203                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #164                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #259                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #257                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/project/Project;
    Signature: #203                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.project.Project $plus(org.sireum.project.Module);
    descriptor: (Lorg/sireum/project/Module;)Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: getstatic     #56                 // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
         3: aload_0
         4: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         7: getstatic     #265                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        10: getstatic     #270                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        13: new           #272                // class org/sireum/String
        16: dup
        17: aload_1
        18: invokevirtual #277                // Method org/sireum/project/Module.id:()Ljava/lang/String;
        21: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        24: invokevirtual #284                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        27: aload_1
        28: invokevirtual #288                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        31: invokevirtual #293                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
        34: aload_0
        35: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
        38: new           #272                // class org/sireum/String
        41: dup
        42: aload_1
        43: invokevirtual #277                // Method org/sireum/project/Module.id:()Ljava/lang/String;
        46: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        49: aload_1
        50: invokevirtual #296                // Method org/sireum/project/Module.deps:()Lorg/sireum/IS;
        53: invokevirtual #302                // Method org/sireum/Poset.addParents:(Ljava/lang/Object;Lorg/sireum/IS;)Lorg/sireum/Poset;
        56: aload_0
        57: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
        60: invokevirtual #304                // Method org/sireum/project/Project$.apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
        63: areturn
      LineNumberTable:
        line 40: 0
        line 41: 3
        line 42: 34
        line 43: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lorg/sireum/project/Project;
            0      64     1 module   Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      module                         final

  public org.sireum.project.Project addMavenRepository(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: getstatic     #56                 // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
         3: aload_0
         4: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         7: aload_0
         8: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
        11: aload_0
        12: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
        15: new           #272                // class org/sireum/String
        18: dup
        19: aload_1
        20: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        23: invokevirtual #312                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        26: invokevirtual #304                // Method org/sireum/project/Project$.apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
        29: areturn
      LineNumberTable:
        line 46: 0
        line 47: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/sireum/project/Project;
            0      30     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  public org.sireum.project.Project addMavenRepositories(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: getstatic     #56                 // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
         3: aload_0
         4: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         7: aload_0
         8: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
        11: aload_0
        12: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
        15: aload_1
        16: invokevirtual #321                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        19: invokevirtual #304                // Method org/sireum/project/Project$.apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
        22: areturn
      LineNumberTable:
        line 50: 0
        line 51: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/project/Project;
            0      23     1  urls   Lorg/sireum/IS;
    Signature: #316                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/project/Project;
    MethodParameters:
      Name                           Flags
      urls                           final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #326                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: aload_0
         4: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         7: invokevirtual #327                // Method org/sireum/HashSMap.hashCode:()I
        10: invokevirtual #330                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        13: areturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/project/Project;

  public boolean isEqual(org.sireum.project.Project);
    descriptor: (Lorg/sireum/project/Project;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         7: aload_1
         8: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        11: astore_2
        12: dup
        13: ifnonnull     24
        16: pop
        17: aload_2
        18: ifnull        31
        21: goto          35
        24: aload_2
        25: invokevirtual #333                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        28: ifeq          35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: invokevirtual #335                // Method org/sireum/B$.apply:(Z)Z
        39: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class org/sireum/project/Project, class org/sireum/project/Project, class org/sireum/HashSMap ]
          stack = [ class org/sireum/B$, class org/sireum/HashSMap ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/Project, class org/sireum/project/Project, class org/sireum/HashSMap ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lorg/sireum/project/Project;
            0      40     1 other   Lorg/sireum/project/Project;
    MethodParameters:
      Name                           Flags
      other                          final

  public boolean $less$eq(org.sireum.project.Project);
    descriptor: (Lorg/sireum/project/Project;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         7: aload_1
         8: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        11: aload_1
        12: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        15: invokevirtual #339                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        18: aload_0
        19: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        22: invokevirtual #339                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        25: invokevirtual #342                // Method org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        28: invokevirtual #345                // Method org/sireum/HashSMap.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        31: astore_2
        32: dup
        33: ifnonnull     44
        36: pop
        37: aload_2
        38: ifnull        51
        41: goto          55
        44: aload_2
        45: invokevirtual #333                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        48: ifeq          55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: invokevirtual #335                // Method org/sireum/B$.apply:(Z)Z
        59: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class org/sireum/project/Project, class org/sireum/project/Project, class org/sireum/HashSMap ]
          stack = [ class org/sireum/B$, class org/sireum/HashSMap ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/Project, class org/sireum/project/Project, class org/sireum/HashSMap ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lorg/sireum/project/Project;
            0      60     1 other   Lorg/sireum/project/Project;
    MethodParameters:
      Name                           Flags
      other                          final

  public boolean $greater$eq(org.sireum.project.Project);
    descriptor: (Lorg/sireum/project/Project;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         7: aload_0
         8: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        11: invokevirtual #339                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        14: aload_1
        15: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        18: invokevirtual #339                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        21: invokevirtual #342                // Method org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        24: invokevirtual #345                // Method org/sireum/HashSMap.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        27: aload_1
        28: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        31: astore_2
        32: dup
        33: ifnonnull     44
        36: pop
        37: aload_2
        38: ifnull        51
        41: goto          55
        44: aload_2
        45: invokevirtual #333                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        48: ifeq          55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: invokevirtual #335                // Method org/sireum/B$.apply:(Z)Z
        59: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class org/sireum/project/Project, class org/sireum/project/Project, class org/sireum/HashSMap ]
          stack = [ class org/sireum/B$, class org/sireum/HashSMap ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/Project, class org/sireum/project/Project, class org/sireum/HashSMap ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lorg/sireum/project/Project;
            0      60     1 other   Lorg/sireum/project/Project;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.project.Project $plus$plus(org.sireum.project.Project);
    descriptor: (Lorg/sireum/project/Project;)Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=2
         0: aload_0
         1: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_2
         5: aload_1
         6: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
         9: invokevirtual #356                // Method org/sireum/Poset.rootNodes:()Lorg/sireum/IS;
        12: astore_3
        13: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        16: aload_3
        17: invokevirtual #359                // Method org/sireum/IS.nonEmpty:()Z
        20: invokevirtual #191                // Method org/sireum/B$.$4B:(Z)Z
        23: ifeq          65
        26: getstatic     #364                // Field org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
        29: invokevirtual #367                // Method org/sireum/HashSSet$.empty:()Lorg/sireum/HashSSet;
        32: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        35: astore        4
        37: aload_3
        38: aload_1
        39: aload_2
        40: aload         4
        42: invokedynamic #384,  0            // InvokeDynamic #0:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
        47: invokevirtual #388                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        50: aload         4
        52: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        55: checkcast     #393                // class org/sireum/HashSSet
        58: invokevirtual #396                // Method org/sireum/HashSSet.elements:()Lorg/sireum/IS;
        61: astore_3
        62: goto          13
        65: aload_2
        66: aload_2
        67: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        70: checkcast     #2                  // class org/sireum/project/Project
        73: astore        5
        75: getstatic     #364                // Field org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
        78: aload_2
        79: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        82: checkcast     #2                  // class org/sireum/project/Project
        85: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
        88: invokevirtual #399                // Method org/sireum/HashSSet$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
        91: aload_1
        92: invokevirtual #148                // Method mavenRepoUrls:()Lorg/sireum/IS;
        95: invokevirtual #400                // Method org/sireum/HashSSet.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
        98: invokevirtual #396                // Method org/sireum/HashSSet.elements:()Lorg/sireum/IS;
       101: astore        6
       103: aload         5
       105: invokevirtual #402                // Method apply$default$1:()Lorg/sireum/HashSMap;
       108: astore        7
       110: aload         5
       112: invokevirtual #404                // Method apply$default$2:()Lorg/sireum/Poset;
       115: astore        8
       117: aload         5
       119: aload         7
       121: aload         8
       123: aload         6
       125: invokevirtual #405                // Method apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
       128: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       131: aload_2
       132: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       135: checkcast     #2                  // class org/sireum/project/Project
       138: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 13
          locals = [ class scala/runtime/ObjectRef, class org/sireum/IS ]
        frame_type = 51 /* same */
      LineNumberTable:
        line 63: 0
        line 64: 5
        line 65: 13
        line 66: 26
        line 67: 37
        line 74: 50
        line 65: 62
        line 76: 65
        line 77: 131
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37      25     4 newNames   Lscala/runtime/ObjectRef;
           75      53     5 qual$1   Lorg/sireum/project/Project;
          103      25     6   x$1   Lorg/sireum/IS;
          110      18     7   x$2   Lorg/sireum/HashSMap;
          117      11     8   x$3   Lorg/sireum/Poset;
            5     134     2     r   Lscala/runtime/ObjectRef;
           13     126     3 names   Lorg/sireum/IS;
            0     139     0  this   Lorg/sireum/project/Project;
            0     139     1 other   Lorg/sireum/project/Project;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.project.Project stripPubInfo();
    descriptor: ()Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #56                 // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
         3: invokevirtual #63                 // Method org/sireum/project/Project$.empty:()Lorg/sireum/project/Project;
         6: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         9: astore_1
        10: aload_0
        11: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        14: invokevirtual #417                // Method org/sireum/HashSMap.values:()Lorg/sireum/IS;
        17: aload_1
        18: invokedynamic #428,  0            // InvokeDynamic #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        23: invokevirtual #388                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        26: aload_1
        27: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        30: checkcast     #2                  // class org/sireum/project/Project
        33: areturn
      LineNumberTable:
        line 81: 0
        line 82: 10
        line 85: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      24     1     r   Lscala/runtime/ObjectRef;
            0      34     0  this   Lorg/sireum/project/Project;

  public org.sireum.project.Project slice(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #433                // Method org/sireum/IS.isEmpty:()Z
         7: invokevirtual #191                // Method org/sireum/B$.$4B:(Z)Z
        10: ifeq          15
        13: aload_0
        14: areturn
        15: getstatic     #438                // Field org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
        18: invokevirtual #441                // Method org/sireum/HashSet$.empty:()Lorg/sireum/HashSet;
        21: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        24: astore_2
        25: aload_1
        26: aload_0
        27: aload_2
        28: invokedynamic #449,  0            // InvokeDynamic #2:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
        33: invokevirtual #388                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        36: getstatic     #56                 // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
        39: invokevirtual #63                 // Method org/sireum/project/Project$.empty:()Lorg/sireum/project/Project;
        42: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        45: astore_3
        46: aload_0
        47: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        50: invokevirtual #452                // Method org/sireum/HashSMap.entries:()Lorg/sireum/IS;
        53: aload_2
        54: invokedynamic #460,  0            // InvokeDynamic #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        59: invokevirtual #464                // Method org/sireum/IS.withFilter:(Lscala/Function1;)Lorg/sireum/IS$WithFilter;
        62: aload_3
        63: invokedynamic #469,  0            // InvokeDynamic #4:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        68: invokevirtual #470                // Method org/sireum/IS$WithFilter.foreach:(Lscala/Function1;)V
        71: aload_3
        72: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        75: checkcast     #2                  // class org/sireum/project/Project
        78: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 89: 0
        line 90: 13
        line 92: 15
        line 103: 25
        line 106: 36
        line 107: 46
        line 110: 71
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      54     2 tmids   Lscala/runtime/ObjectRef;
           46      33     3     r   Lscala/runtime/ObjectRef;
            0      79     0  this   Lorg/sireum/project/Project;
            0      79     1  mids   Lorg/sireum/IS;
    Signature: #316                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/project/Project;
    MethodParameters:
      Name                           Flags
      mids                           final

  public org.sireum.Map<org.sireum.String, org.sireum.IS<org.sireum.Z, org.sireum.String>> openDeps();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         4: invokevirtual #339                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
         7: astore_1
         8: getstatic     #479                // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
        11: invokevirtual #481                // Method org/sireum/Map$.empty:()Lorg/sireum/Map;
        14: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        17: astore_2
        18: aload_0
        19: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        22: invokevirtual #417                // Method org/sireum/HashSMap.values:()Lorg/sireum/IS;
        25: aload_1
        26: aload_2
        27: invokedynamic #489,  0            // InvokeDynamic #5:apply:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;)Lscala/Function1;
        32: invokevirtual #388                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        35: aload_2
        36: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        39: checkcast     #491                // class org/sireum/Map
        42: areturn
      LineNumberTable:
        line 114: 0
        line 115: 8
        line 116: 18
        line 122: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      35     1  mids   Lorg/sireum/IS;
           18      25     2     r   Lscala/runtime/ObjectRef;
            0      43     0  this   Lorg/sireum/project/Project;
    Signature: #474                         // ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;>;

  public org.sireum.Map<org.sireum.String, org.sireum.Map<org.sireum.String, org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type>>> illTargets();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #479                // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
         3: invokevirtual #481                // Method org/sireum/Map$.empty:()Lorg/sireum/Map;
         6: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         9: astore_1
        10: aload_0
        11: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        14: invokevirtual #417                // Method org/sireum/HashSMap.values:()Lorg/sireum/IS;
        17: aload_0
        18: aload_1
        19: invokedynamic #499,  0            // InvokeDynamic #6:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
        24: invokevirtual #388                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        27: aload_1
        28: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: checkcast     #491                // class org/sireum/Map
        34: areturn
      LineNumberTable:
        line 126: 0
        line 127: 10
        line 143: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      25     1     r   Lscala/runtime/ObjectRef;
            0      35     0  this   Lorg/sireum/project/Project;
    Signature: #493                         // ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;>;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #502                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Project;

  public static final void $anonfun$$plus$plus$1(org.sireum.project.Project, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.String);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=9, args_size=4
         0: aload_0
         1: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         4: new           #272                // class org/sireum/String
         7: dup
         8: aload_3
         9: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        12: invokevirtual #512                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        15: astore        5
        17: aload         5
        19: instanceof    #514                // class org/sireum/Some
        22: ifeq          87
        25: aload         5
        27: checkcast     #514                // class org/sireum/Some
        30: astore        6
        32: getstatic     #519                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        35: aload         6
        37: invokevirtual #522                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        40: astore        7
        42: aload         7
        44: invokevirtual #525                // Method scala/Some.isEmpty:()Z
        47: ifne          84
        50: aload         7
        52: invokevirtual #527                // Method scala/Some.get:()Ljava/lang/Object;
        55: checkcast     #274                // class org/sireum/project/Module
        58: astore        8
        60: aload_1
        61: aload_1
        62: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        65: checkcast     #2                  // class org/sireum/project/Project
        68: aload         8
        70: invokevirtual #529                // Method $plus:(Lorg/sireum/project/Module;)Lorg/sireum/project/Project;
        73: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        76: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        79: astore        4
        81: goto          98
        84: goto          90
        87: goto          90
        90: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        93: astore        4
        95: goto          98
        98: aload_2
        99: aload_2
       100: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       103: checkcast     #393                // class org/sireum/HashSSet
       106: aload_0
       107: invokevirtual #146                // Method poset:()Lorg/sireum/Poset;
       110: new           #272                // class org/sireum/String
       113: dup
       114: aload_3
       115: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       118: invokevirtual #539                // Method org/sireum/Poset.childrenOf:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
       121: invokevirtual #543                // Method org/sireum/HashSSet.union:(Lorg/sireum/HashSSet;)Lorg/sireum/HashSSet;
       124: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       127: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 84
          locals = [ class org/sireum/project/Project, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class java/lang/String, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/project/Project, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class java/lang/String, class scala/runtime/BoxedUnit, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 68: 0
        line 69: 17
        line 68: 50
        line 69: 60
        line 70: 90
        line 72: 98
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           60      24     8     m   Lorg/sireum/project/Module;
            0     128     0 other$1   Lorg/sireum/project/Project;
            0     128     1   r$1   Lscala/runtime/ObjectRef;
            0     128     2 newNames$1   Lscala/runtime/ObjectRef;
            0     128     3  name   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      other$1                        final
      r$1                            final
      newNames$1                     final
      name                           final

  public static final void $anonfun$stripPubInfo$1(scala.runtime.ObjectRef, org.sireum.project.Module);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=14, locals=13, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/project/Project
         8: getstatic     #554                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        11: invokevirtual #557                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        14: astore_2
        15: aload_1
        16: invokevirtual #559                // Method org/sireum/project/Module.apply$default$1:()Ljava/lang/String;
        19: astore_3
        20: aload_1
        21: invokevirtual #561                // Method org/sireum/project/Module.apply$default$2:()Ljava/lang/String;
        24: astore        4
        26: aload_1
        27: invokevirtual #564                // Method org/sireum/project/Module.apply$default$3:()Lorg/sireum/Option;
        30: astore        5
        32: aload_1
        33: invokevirtual #567                // Method org/sireum/project/Module.apply$default$4:()Lorg/sireum/IS;
        36: astore        6
        38: aload_1
        39: invokevirtual #570                // Method org/sireum/project/Module.apply$default$5:()Lorg/sireum/IS;
        42: astore        7
        44: aload_1
        45: invokevirtual #573                // Method org/sireum/project/Module.apply$default$6:()Lorg/sireum/IS;
        48: astore        8
        50: aload_1
        51: invokevirtual #576                // Method org/sireum/project/Module.apply$default$7:()Lorg/sireum/IS;
        54: astore        9
        56: aload_1
        57: invokevirtual #579                // Method org/sireum/project/Module.apply$default$8:()Lorg/sireum/IS;
        60: astore        10
        62: aload_1
        63: invokevirtual #582                // Method org/sireum/project/Module.apply$default$9:()Lorg/sireum/IS;
        66: astore        11
        68: aload_1
        69: invokevirtual #585                // Method org/sireum/project/Module.apply$default$10:()Lorg/sireum/IS;
        72: astore        12
        74: aload_1
        75: aload_3
        76: aload         4
        78: aload         5
        80: aload         6
        82: aload         7
        84: aload         8
        86: aload         9
        88: aload         10
        90: aload         11
        92: aload         12
        94: aload_2
        95: invokevirtual #588                // Method org/sireum/project/Module.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
        98: invokevirtual #529                // Method $plus:(Lorg/sireum/project/Module;)Lorg/sireum/project/Project;
       101: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       104: return
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      83     2   x$1   Lorg/sireum/None;
           20      78     3   x$2   Ljava/lang/String;
           26      72     4   x$3   Ljava/lang/String;
           32      66     5   x$4   Lorg/sireum/Option;
           38      60     6   x$5   Lorg/sireum/IS;
           44      54     7   x$6   Lorg/sireum/IS;
           50      48     8   x$7   Lorg/sireum/IS;
           56      42     9   x$8   Lorg/sireum/IS;
           62      36    10   x$9   Lorg/sireum/IS;
           68      30    11  x$10   Lorg/sireum/IS;
           74      24    12  x$11   Lorg/sireum/IS;
            0     105     0   r$2   Lscala/runtime/ObjectRef;
            0     105     1     m   Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      r$2                            final
      m                              final

  public static final void $anonfun$slice$1(org.sireum.project.Project, scala.runtime.ObjectRef, java.lang.String);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokespecial #607                // Method rec$1:(Ljava/lang/String;Lscala/runtime/ObjectRef;)V
         6: return
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lorg/sireum/project/Project;
            0       7     1 tmids$1   Lscala/runtime/ObjectRef;
            0       7     2  mDep   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tmids$1                        final
      mDep                           final

  private final void rec$1(java.lang.String, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/String;Lscala/runtime/ObjectRef;)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=8, args_size=3
         0: aload_2
         1: aload_2
         2: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #610                // class org/sireum/HashSet
         8: new           #272                // class org/sireum/String
        11: dup
        12: aload_1
        13: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        16: invokevirtual #613                // Method org/sireum/HashSet.$plus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
        19: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        22: aload_0
        23: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
        26: new           #272                // class org/sireum/String
        29: dup
        30: aload_1
        31: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        34: invokevirtual #512                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        37: astore        4
        39: aload         4
        41: instanceof    #514                // class org/sireum/Some
        44: ifeq          107
        47: aload         4
        49: checkcast     #514                // class org/sireum/Some
        52: astore        5
        54: getstatic     #519                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        57: aload         5
        59: invokevirtual #522                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        62: astore        6
        64: aload         6
        66: invokevirtual #525                // Method scala/Some.isEmpty:()Z
        69: ifne          104
        72: aload         6
        74: invokevirtual #527                // Method scala/Some.get:()Ljava/lang/Object;
        77: checkcast     #274                // class org/sireum/project/Module
        80: astore        7
        82: aload         7
        84: invokevirtual #296                // Method org/sireum/project/Module.deps:()Lorg/sireum/IS;
        87: aload_0
        88: aload_2
        89: invokedynamic #618,  0            // InvokeDynamic #7:apply:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;)Lscala/Function1;
        94: invokevirtual #388                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        97: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       100: astore_3
       101: goto          117
       104: goto          110
       107: goto          110
       110: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       113: astore_3
       114: goto          117
       117: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 104
          locals = [ class org/sireum/project/Project, class java/lang/String, class scala/runtime/ObjectRef, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/project/Project, class java/lang/String, class scala/runtime/ObjectRef, class scala/runtime/BoxedUnit, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 94: 0
        line 95: 22
        line 96: 39
        line 95: 72
        line 97: 82
        line 96: 104
        line 100: 110
        line 95: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           82      22     7     m   Lorg/sireum/project/Module;
            0     118     0  this   Lorg/sireum/project/Project;
            0     118     1   mid   Ljava/lang/String;
            0     118     2 tmids$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      mid                            final
      tmids$1                        final

  public static final void $anonfun$slice$2(org.sireum.project.Project, scala.runtime.ObjectRef, java.lang.String);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokespecial #607                // Method rec$1:(Ljava/lang/String;Lscala/runtime/ObjectRef;)V
         6: return
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lorg/sireum/project/Project;
            0       7     1 tmids$1   Lscala/runtime/ObjectRef;
            0       7     2   mid   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tmids$1                        final
      mid                            final

  public static final boolean $anonfun$slice$3(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #610                // class org/sireum/HashSet
         7: aload_1
         8: invokevirtual #625                // Method scala/Tuple2._1:()Ljava/lang/Object;
        11: invokevirtual #628                // Method org/sireum/HashSet.contains:(Ljava/lang/Object;)Z
        14: ireturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 tmids$1   Lscala/runtime/ObjectRef;
            0      15     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      tmids$1                        final
      p                              final

  public static final void $anonfun$slice$4(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/project/Project
         8: aload_1
         9: invokevirtual #635                // Method scala/Tuple2._2:()Ljava/lang/Object;
        12: checkcast     #274                // class org/sireum/project/Module
        15: invokevirtual #529                // Method $plus:(Lorg/sireum/project/Module;)Lorg/sireum/project/Project;
        18: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        21: return
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0   r$3   Lscala/runtime/ObjectRef;
            0      22     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$3                            final
      p                              final

  public static final void $anonfun$openDeps$1(org.sireum.IS, scala.runtime.ObjectRef, org.sireum.project.Module);
    descriptor: (Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=4, args_size=3
         0: aload_2
         1: invokevirtual #296                // Method org/sireum/project/Module.deps:()Lorg/sireum/IS;
         4: aload_0
         5: invokevirtual #342                // Method org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
         8: astore_3
         9: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        12: aload_3
        13: invokevirtual #359                // Method org/sireum/IS.nonEmpty:()Z
        16: invokevirtual #191                // Method org/sireum/B$.$4B:(Z)Z
        19: ifeq          63
        22: aload_1
        23: aload_1
        24: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        27: checkcast     #491                // class org/sireum/Map
        30: getstatic     #265                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        33: getstatic     #270                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        36: new           #272                // class org/sireum/String
        39: dup
        40: aload_2
        41: invokevirtual #277                // Method org/sireum/project/Module.id:()Ljava/lang/String;
        44: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        47: invokevirtual #284                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        50: aload_3
        51: invokevirtual #288                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        54: invokevirtual #642                // Method org/sireum/Map.$plus:(Lscala/Tuple2;)Lorg/sireum/Map;
        57: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        60: goto          63
        63: return
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 63
          locals = [ class org/sireum/IS ]
      LineNumberTable:
        line 117: 0
        line 118: 9
        line 119: 22
        line 118: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      54     3  diff   Lorg/sireum/IS;
            0      64     0 mids$1   Lorg/sireum/IS;
            0      64     1   r$4   Lscala/runtime/ObjectRef;
            0      64     2     m   Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      mids$1                         final
      r$4                            final
      m                              final

  public static final void $anonfun$illTargets$2(org.sireum.project.Project, org.sireum.project.Module, scala.runtime.ObjectRef, java.lang.String);
    descriptor: (Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=10, args_size=4
         0: aload_0
         1: invokevirtual #138                // Method modules:()Lorg/sireum/HashSMap;
         4: new           #272                // class org/sireum/String
         7: dup
         8: aload_3
         9: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        12: invokevirtual #512                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        15: astore        5
        17: aload         5
        19: instanceof    #514                // class org/sireum/Some
        22: ifeq          145
        25: aload         5
        27: checkcast     #514                // class org/sireum/Some
        30: astore        6
        32: getstatic     #519                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        35: aload         6
        37: invokevirtual #522                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        40: astore        7
        42: aload         7
        44: invokevirtual #525                // Method scala/Some.isEmpty:()Z
        47: ifne          142
        50: aload         7
        52: invokevirtual #527                // Method scala/Some.get:()Ljava/lang/Object;
        55: checkcast     #274                // class org/sireum/project/Module
        58: astore        8
        60: aload_1
        61: invokevirtual #650                // Method org/sireum/project/Module.targets:()Lorg/sireum/IS;
        64: aload         8
        66: invokevirtual #650                // Method org/sireum/project/Module.targets:()Lorg/sireum/IS;
        69: invokevirtual #342                // Method org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        72: astore        9
        74: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        77: aload         9
        79: invokevirtual #359                // Method org/sireum/IS.nonEmpty:()Z
        82: invokevirtual #191                // Method org/sireum/B$.$4B:(Z)Z
        85: ifeq          134
        88: aload_2
        89: aload_2
        90: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        93: checkcast     #491                // class org/sireum/Map
        96: getstatic     #265                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        99: getstatic     #270                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       102: new           #272                // class org/sireum/String
       105: dup
       106: aload         8
       108: invokevirtual #277                // Method org/sireum/project/Module.id:()Ljava/lang/String;
       111: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       114: invokevirtual #284                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       117: aload         9
       119: invokevirtual #288                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       122: invokevirtual #642                // Method org/sireum/Map.$plus:(Lscala/Tuple2;)Lorg/sireum/Map;
       125: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       128: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       131: goto          137
       134: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       137: astore        4
       139: goto          156
       142: goto          148
       145: goto          148
       148: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       151: astore        4
       153: goto          156
       156: return
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 134
          locals = [ class org/sireum/project/Project, class org/sireum/project/Module, class scala/runtime/ObjectRef, class java/lang/String, top, class org/sireum/Option, class org/sireum/Some, class scala/Some, class org/sireum/project/Module, class org/sireum/IS ]
          stack = []
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 249 /* chop */
          offset_delta = 4
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/project/Project, class org/sireum/project/Module, class scala/runtime/ObjectRef, class java/lang/String, class scala/runtime/BoxedUnit, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 130: 0
        line 131: 17
        line 130: 50
        line 132: 60
        line 133: 74
        line 134: 88
        line 133: 134
        line 131: 142
        line 136: 148
        line 130: 156
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           74      63     9  diff   Lorg/sireum/IS;
           60      82     8    m2   Lorg/sireum/project/Module;
            0     157     0 $this   Lorg/sireum/project/Project;
            0     157     1   m$1   Lorg/sireum/project/Module;
            0     157     2 map$1   Lscala/runtime/ObjectRef;
            0     157     3  mDep   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      m$1                            final
      map$1                          final
      mDep                           final

  public static final void $anonfun$illTargets$1(org.sireum.project.Project, scala.runtime.ObjectRef, org.sireum.project.Module);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=4, args_size=3
         0: getstatic     #479                // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
         3: invokevirtual #481                // Method org/sireum/Map$.empty:()Lorg/sireum/Map;
         6: invokestatic  #353                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         9: astore_3
        10: aload_2
        11: invokevirtual #296                // Method org/sireum/project/Module.deps:()Lorg/sireum/IS;
        14: aload_0
        15: aload_2
        16: aload_3
        17: invokedynamic #662,  0            // InvokeDynamic #8:apply:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;)Lscala/Function1;
        22: invokevirtual #388                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        25: getstatic     #183                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        28: aload_3
        29: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        32: checkcast     #491                // class org/sireum/Map
        35: invokevirtual #663                // Method org/sireum/Map.nonEmpty:()Z
        38: invokevirtual #191                // Method org/sireum/B$.$4B:(Z)Z
        41: ifeq          91
        44: aload_1
        45: aload_1
        46: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        49: checkcast     #491                // class org/sireum/Map
        52: getstatic     #265                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        55: getstatic     #270                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        58: new           #272                // class org/sireum/String
        61: dup
        62: aload_2
        63: invokevirtual #277                // Method org/sireum/project/Module.id:()Ljava/lang/String;
        66: invokespecial #280                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        69: invokevirtual #284                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        72: aload_3
        73: getfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        76: checkcast     #491                // class org/sireum/Map
        79: invokevirtual #288                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        82: invokevirtual #642                // Method org/sireum/Map.$plus:(Lscala/Tuple2;)Lorg/sireum/Map;
        85: putfield      #391                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        88: goto          91
        91: return
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 91
          locals = [ class scala/runtime/ObjectRef ]
      LineNumberTable:
        line 128: 0
        line 129: 10
        line 139: 25
        line 140: 44
        line 139: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      81     3   map   Lscala/runtime/ObjectRef;
            0      92     0 $this   Lorg/sireum/project/Project;
            0      92     1   r$5   Lscala/runtime/ObjectRef;
            0      92     2     m   Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      r$5                            final
      m                              final

  public org.sireum.project.Project(org.sireum.HashSMap<org.sireum.String, org.sireum.project.Module>, org.sireum.Poset<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #669                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #673                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #676                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #679                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #95                 // Field _modules:Lorg/sireum/HashSMap;
        21: aload_0
        22: aload_2
        23: putfield      #101                // Field _poset:Lorg/sireum/Poset;
        26: aload_0
        27: aload_3
        28: putfield      #107                // Field _mavenRepoUrls:Lorg/sireum/IS;
        31: return
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/sireum/project/Project;
            0      32     1 __modules   Lorg/sireum/HashSMap;
            0      32     2 __poset   Lorg/sireum/Poset;
            0      32     3 __mavenRepoUrls   Lorg/sireum/IS;
    Signature: #665                         // (Lorg/sireum/HashSMap<Lorg/sireum/String;Lorg/sireum/project/Module;>;Lorg/sireum/Poset<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)V
    MethodParameters:
      Name                           Flags
      __modules                      final
      __poset                        final
      __mavenRepoUrls                final

  public static final java.lang.Object $anonfun$$plus$plus$1$adapted(org.sireum.project.Project, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: checkcast     #272                // class org/sireum/String
         7: invokevirtual #682                // Method org/sireum/String.value:()Ljava/lang/String;
        10: invokestatic  #684                // Method $anonfun$$plus$plus$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
        13: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        16: areturn
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 other$1   Lorg/sireum/project/Project;
            0      17     1   r$1   Lscala/runtime/ObjectRef;
            0      17     2 newNames$1   Lscala/runtime/ObjectRef;
            0      17     3  name   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      other$1                        final
      r$1                            final
      newNames$1                     final
      name                           final

  public static final java.lang.Object $anonfun$stripPubInfo$1$adapted(scala.runtime.ObjectRef, org.sireum.project.Module);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #686                // Method $anonfun$stripPubInfo$1:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
         5: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$2   Lscala/runtime/ObjectRef;
            0       9     1     m   Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      r$2                            final
      m                              final

  public static final java.lang.Object $anonfun$slice$2$adapted(org.sireum.project.Project, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: checkcast     #272                // class org/sireum/String
         6: invokevirtual #682                // Method org/sireum/String.value:()Ljava/lang/String;
         9: invokestatic  #688                // Method $anonfun$slice$2:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
        12: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        15: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 $this   Lorg/sireum/project/Project;
            0      16     1 tmids$1   Lscala/runtime/ObjectRef;
            0      16     2   mid   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      tmids$1                        final
      mid                            final

  public static final java.lang.Object $anonfun$slice$3$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #690                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: invokestatic  #692                // Method $anonfun$slice$3:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
         9: invokespecial #695                // Method org/sireum/B."<init>":(Z)V
        12: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 tmids$1   Lscala/runtime/ObjectRef;
            0      13     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      tmids$1                        final
      p                              final

  public static final java.lang.Object $anonfun$slice$4$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #697                // Method $anonfun$slice$4:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         5: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$3   Lscala/runtime/ObjectRef;
            0       9     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$3                            final
      p                              final

  public static final java.lang.Object $anonfun$openDeps$1$adapted(org.sireum.IS, scala.runtime.ObjectRef, org.sireum.project.Module);
    descriptor: (Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #699                // Method $anonfun$openDeps$1:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
         6: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 mids$1   Lorg/sireum/IS;
            0      10     1   r$4   Lscala/runtime/ObjectRef;
            0      10     2     m   Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      mids$1                         final
      r$4                            final
      m                              final

  public static final java.lang.Object $anonfun$illTargets$1$adapted(org.sireum.project.Project, scala.runtime.ObjectRef, org.sireum.project.Module);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #701                // Method $anonfun$illTargets$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)V
         6: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/project/Project;
            0      10     1   r$5   Lscala/runtime/ObjectRef;
            0      10     2     m   Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      $this                          final
      r$5                            final
      m                              final

  public static final java.lang.Object $anonfun$slice$1$adapted(org.sireum.project.Project, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: checkcast     #272                // class org/sireum/String
         6: invokevirtual #682                // Method org/sireum/String.value:()Ljava/lang/String;
         9: invokestatic  #703                // Method $anonfun$slice$1:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
        12: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        15: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 $this   Lorg/sireum/project/Project;
            0      16     1 tmids$1   Lscala/runtime/ObjectRef;
            0      16     2  mDep   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      tmids$1                        final
      mDep                           final

  public static final java.lang.Object $anonfun$illTargets$2$adapted(org.sireum.project.Project, org.sireum.project.Module, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: checkcast     #272                // class org/sireum/String
         7: invokevirtual #682                // Method org/sireum/String.value:()Ljava/lang/String;
        10: invokestatic  #705                // Method $anonfun$illTargets$2:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/String;)V
        13: getstatic     #535                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        16: areturn
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 $this   Lorg/sireum/project/Project;
            0      17     1   m$1   Lorg/sireum/project/Module;
            0      17     2 map$1   Lscala/runtime/ObjectRef;
            0      17     3  mDep   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      m$1                            final
      map$1                          final
      mDep                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #717,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // WithFilter=class org/sireum/IS$WithFilter of class org/sireum/IS
  public static #25= #22 of #24;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
  public static #30= #27 of #29;          // Type=class org/sireum/project/Target$Type of class org/sireum/project/Target
SourceFile: "Project.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\tuq!B\u0015+\u0011\u0003\td!B\u001a+\u0011\u0003!\u0004\"B\u001e\u0002\t\u0003a\u0004\"B\u001f\u0002\t\u0003q\u0004bBA\u0010\u0003\u0011\u0005!1\u0001\u0005\b\u0005\u0017\tA\u0011\u0001B\u0007\r\u0011\u0019$F\u0001!\t\u0011\u00153!\u0011!Q\u0001\n\u0019C\u0001b\u0014\u0004\u0003\u0002\u0003\u0006I\u0001\u0015\u0005\t\'\u001a\u0011\t\u0011)A\u0005)\")1H\u0002C\u0001K\"1\u0011N\u0002Q\u0001\n\u0019CQA\u001b\u0004\u0005\u0002-DQ\u0001\u001c\u0004\u0005\u0002-Da!\u001c\u0004!\u0002\u0013\u0001\u0006\"\u00028\u0007\t\u0003y\u0007\"\u00029\u0007\t\u0003y\u0007BB9\u0007A\u0003%A\u000bC\u0003s\r\u0011\u00051\u000fC\u0003u\r\u0011\u00051\u000fC\u0003v\r\u0011\u0005c\u000fC\u0003\u007f\r\u0011\u0005s\u0010\u0003\u0006\u0002\u0002\u0019A)\u0019!C!\u0003\u0007Aq!a\u0003\u0007\t\u0003\ni\u0001C\u0004\u0002 \u0019!\t!!\t\t\u0013\u0005%b!%A\u0005\u0002\u0005-\u0002\"CA!\rE\u0005I\u0011AA\"\u0011%\t9EBI\u0001\n\u0003\tI\u0005\u0003\u0006\u0002N\u0019A)\u0019!C!\u0003\u001fBq!a\u001a\u0007\t\u0003\tI\u0007C\u0004\u0002x\u0019!\t!!\u001f\t\u000f\u0005\u0005e\u0001\"\u0001\u0002\u0004\"9\u00111\u0012\u0004\u0005B\u00055\u0005bBAL\r\u0011\u0005\u0011\u0011\u0014\u0005\b\u0003O3A\u0011AAU\u0011\u001d\tyK\u0002C\u0001\u0003cCq!a.\u0007\t\u0003\tI\f\u0003\u0004\u0002F\u001a!\tA\u0010\u0005\b\u0003\u00134A\u0011AAf\u0011\u001d\t\u0019N\u0002C\u0001\u0003+Dq!a8\u0007\t\u0003\t\t/A\u0004Qe>TWm\u0019;\u000b\u0005-b\u0013a\u00029s_*,7\r\u001e\u0006\u0003[9\naa]5sKVl\'\"A\u0018\u0002\u0007=\u0014xm\u0001\u0001\u0011\u0005I\nQ\"\u0001\u0016\u0003\u000fA\u0013xN[3diN\u0011\u0011!\u000e\t\u0003mej\u0011a\u000e\u0006\u0002q\u0005)1oY1mC&\u0011!h\u000e\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?)\u0005\t\u0014!B3naRLX#A \u0011\u0005I21c\u0001\u00046\u0003B\u0011!iQ\u0007\u0002Y%\u0011A\t\f\u0002\f\t\u0006$\u0018\r^=qKNKw-A\u0005`?6|G-\u001e7fgB!!iR%M\u0013\tAEF\u0001\u0005ICND7+T1q!\t\u0011%*\u0003\u0002LY\t11\u000b\u001e:j]\u001e\u0004\"AM\'\n\u00059S#AB\'pIVdW-A\u0004`?B|7/\u001a;\u0011\u0007\t\u000b\u0016*\u0003\u0002SY\t)\u0001k\\:fi\u0006yqlX7bm\u0016t\'+\u001a9p+Jd7\u000fE\u0002V?&s!AV/\u000f\u0005]cfB\u0001-\\\u001b\u0005I&B\u0001.1\u0003\u0019a$o\\8u}%\tq&\u0003\u0002.]%\u0011a\fL\u0001\ba\u0006\u001c7.Y4f\u0013\t\u0001\u0017MA\u0002J\'jK!AY2\u0003\u0019A\u000b7m[1hKR\u0013\u0018-\u001b;\u000b\u0005\u0011d\u0013!\u0003\u0013j]R,\'O\\1m)\u0011ydm\u001a5\t\u000b\u0015S\u0001\u0019\u0001$\t\u000b=S\u0001\u0019\u0001)\t\u000bMS\u0001\u0019\u0001+\u0002\u0011}kw\u000eZ;mKN\fq!\\8ek2,7/F\u0001G\u0003)9W\r^\'pIVdWm]\u0001\u0007?B|7/\u001a;\u0002\u000bA|7/\u001a;\u0016\u0003A\u000b\u0001bZ3u!>\u001cX\r^\u0001\u000f?6\fg/\u001a8SKB|WK\u001d7t\u00035i\u0017M^3o%\u0016\u0004x.\u0016:mgV\tA+\u0001\thKRl\u0015M^3o%\u0016\u0004x.\u0016:mg\u0006AAo\\*ue&tw\rF\u0001x!\tAX0D\u0001z\u0015\tQ80\u0001\u0003mC:<\'\"\u0001?\u0002\t)\fg/Y\u0005\u0003\u0017f\faa\u001d;sS:<W#A%\u0002\u0011!\f7\u000f[\"pI\u0016,\"!!\u0002\u0011\u0007Y\n9!C\u0002\u0002\n]\u00121!\u00138u\u0003\u0019)\u0017/^1mgR!\u0011qBA\u000b!\r1\u0014\u0011C\u0005\u0004\u0003\'9$a\u0002\"p_2,\u0017M\u001c\u0005\b\u0003/9\u0002\u0019AA\r\u0003\u0005y\u0007c\u0001\u001c\u0002\u001c%\u0019\u0011QD\u001c\u0003\u0007\u0005s\u00170A\u0003baBd\u0017\u0010F\u0004@\u0003G\t)#a\n\t\u000f)D\u0002\u0013!a\u0001\r\"9a\u000e\u0007I\u0001\u0002\u0004\u0001\u0006b\u0002:\u0019!\u0003\u0005\r\u0001V\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\u0011\u0011Q\u0006\u0016\u0004\r\u0006=2FAA\u0019!\u0011\t\u0019$!\u0010\u000e\u0005\u0005U\"\u0002BA\u001c\u0003s\t\u0011\"\u001e8dQ\u0016\u001c7.\u001a3\u000b\u0007\u0005mr\'\u0001\u0006b]:|G/\u0019;j_:LA!a\u0010\u00026\t\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001f\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uII*\"!!\u0012+\u0007A\u000by#A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00134+\t\tYEK\u0002U\u0003_\t\u0001\u0002J2p]R,g\u000e^\u000b\u0003\u0003#\u0002b!a\u0015\u0002\\\u0005\u0005d\u0002BA+\u00033r1\u0001WA,\u0013\u0005A\u0014B\u000108\u0013\u0011\ti&a\u0018\u0003\u0007M+\u0017O\u0003\u0002_oA1a\'a\u0019x\u00033I1!!\u001a8\u0005\u0019!V\u000f\u001d7fe\u0005)A\u0005\u001d7vgR\u0019q(a\u001b\t\r\u00055T\u00041\u0001M\u0003\u0019iw\u000eZ;mK\"\u001aQ$!\u001d\u0011\u0007\t\u000b\u0019(C\u0002\u0002v1\u0012!b\u001d;sS\u000e$\b/\u001e:f\u0003I\tG\rZ\'bm\u0016t\'+\u001a9pg&$xN]=\u0015\u0007}\nY\b\u0003\u0004\u0002~y\u0001\r!S\u0001\u0004kJd\u0007f\u0001\u0010\u0002r\u0005!\u0012\r\u001a3NCZ,gNU3q_NLGo\u001c:jKN$2aPAC\u0011\u0019\t9i\ba\u0001)\u0006!QO\u001d7tQ\ry\u0012\u0011O\u0001\u0005Q\u0006\u001c\b.\u0006\u0002\u0002\u0010B\u0019!)!%\n\u0007\u0005MEFA\u0001[Q\r\u0001\u0013\u0011O\u0001\bSN,\u0015/^1m)\u0011\tY*!)\u0011\u0007\t\u000bi*C\u0002\u0002 2\u0012\u0011A\u0011\u0005\u0007\u0003G\u000b\u0003\u0019A \u0002\u000b=$\b.\u001a:)\u0007\u0005\n\t(\u0001\u0005%Y\u0016\u001c8\u000fJ3r)\u0011\tY*a+\t\r\u0005\r&\u00051\u0001@Q\r\u0011\u0013\u0011O\u0001\fI\u001d\u0014X-\u0019;fe\u0012*\u0017\u000f\u0006\u0003\u0002\u001c\u0006M\u0006BBARG\u0001\u0007q\bK\u0002$\u0003c\n!\u0002\n9mkN$\u0003\u000f\\;t)\ry\u00141\u0018\u0005\u0007\u0003G#\u0003\u0019A )\u0007\u0011\ny\fE\u0002C\u0003\u0003L1!a1-\u0005\u0011\u0001XO]3\u0002\u0019M$(/\u001b9Qk\nLeNZ8)\u0007\u0015\ny,A\u0003tY&\u001cW\rF\u0002@\u0003\u001bDa!a4\'\u0001\u0004!\u0016\u0001B7jIND3AJA`\u0003!y\u0007/\u001a8EKB\u001cXCAAl!\u0015\u0011\u0015\u0011\\%U\u0013\r\tY\u000e\f\u0002\u0004\u001b\u0006\u0004\bfA\u0014\u0002@\u0006Q\u0011\u000e\u001c7UCJ<W\r^:\u0016\u0005\u0005\r\bC\u0002\"\u0002Z&\u000b)\u000f\u0005\u0004C\u00033L\u0015q\u001d\t\u0005+~\u000bI\u000f\u0005\u0003\u0002l\u0006Ehb\u0001\u001a\u0002n&\u0019\u0011q\u001e\u0016\u0002\rQ\u000b\'oZ3u\u0013\u0011\t\u00190!>\u0003\tQK\b/\u001a\u0006\u0004\u0003_T\u0003f\u0001\u0015\u0002@\"\u001aa!a?\u0011\u0007\t\u000bi0C\u0002\u0002\u00002\u0012\u0001\u0002Z1uCRL\b/\u001a\u0015\u0004\u0007\u0005EDcB \u0003\u0006\t\u001d!\u0011\u0002\u0005\u0006U\u0012\u0001\rA\u0012\u0005\u0006]\u0012\u0001\r\u0001\u0015\u0005\u0006e\u0012\u0001\r\u0001V\u0001\bk:\f\u0007\u000f\u001d7z)\u0011\u0011yAa\u0007\u0011\u000bY\u0012\tB!\u0006\n\u0007\tMqG\u0001\u0003T_6,\u0007C\u0002\u001c\u0003\u0018\u0019\u0003F+C\u0002\u0003\u001a]\u0012a\u0001V;qY\u0016\u001c\u0004BBA\f\u000b\u0001\u0007q\b"
    )
BootstrapMethods:
  0: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #373 REF_invokeStatic org/sireum/project/Project.$anonfun$$plus$plus$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #374 1
  1: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #422 REF_invokeStatic org/sireum/project/Project.$anonfun$stripPubInfo$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
      #424 (Lorg/sireum/project/Module;)Ljava/lang/Object;
      #425 5
      #374 1
      #424 (Lorg/sireum/project/Module;)Ljava/lang/Object;
  2: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #446 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$2$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #374 1
  3: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #457 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$3$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #459 (Lscala/Tuple2;)Ljava/lang/Object;
      #425 5
      #374 1
      #459 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #468 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$4$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #459 (Lscala/Tuple2;)Ljava/lang/Object;
      #425 5
      #374 1
      #459 (Lscala/Tuple2;)Ljava/lang/Object;
  5: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #486 REF_invokeStatic org/sireum/project/Project.$anonfun$openDeps$1$adapted:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
      #424 (Lorg/sireum/project/Module;)Ljava/lang/Object;
      #425 5
      #374 1
      #424 (Lorg/sireum/project/Module;)Ljava/lang/Object;
  6: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #498 REF_invokeStatic org/sireum/project/Project.$anonfun$illTargets$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
      #424 (Lorg/sireum/project/Module;)Ljava/lang/Object;
      #425 5
      #374 1
      #424 (Lorg/sireum/project/Module;)Ljava/lang/Object;
  7: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #617 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #374 1
  8: #381 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #659 REF_invokeStatic org/sireum/project/Project.$anonfun$illTargets$2$adapted:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #368 (Ljava/lang/Object;)Ljava/lang/Object;
      #374 1
  9: #714 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #373 REF_invokeStatic org/sireum/project/Project.$anonfun$$plus$plus$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #498 REF_invokeStatic org/sireum/project/Project.$anonfun$illTargets$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
      #659 REF_invokeStatic org/sireum/project/Project.$anonfun$illTargets$2$adapted:(Lorg/sireum/project/Project;Lorg/sireum/project/Module;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #486 REF_invokeStatic org/sireum/project/Project.$anonfun$openDeps$1$adapted:(Lorg/sireum/IS;Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
      #617 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$1$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #446 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$2$adapted:(Lorg/sireum/project/Project;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #457 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$3$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #468 REF_invokeStatic org/sireum/project/Project.$anonfun$slice$4$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #422 REF_invokeStatic org/sireum/project/Project.$anonfun$stripPubInfo$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/project/Module;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x112 (unknown attribute)
   01 01 00 36 01 F7 01 F8 01 01 71 01 72 01 02 8C
   02 8D 01 01 EE 01 EF 01 02 84 02 85 01 02 8F 02
   90 01 02 7C 02 7D 01 01 E2 01 E3 01 02 57 02 58
   01 02 66 01 BB 01 02 6B 02 58 01 01 BA 01 BB 01
   02 6C 02 6D 01 01 C5 01 C6 01 02 76 02 77 01 01
   D1 01 C6 01 02 23 02 24 01 01 A2 01 A3 01 00 40
   00 41 01 00 53 01 F4 01 00 53 00 54 01 00 21 00
   CA 01 00 C9 00 CA 01 01 5A 00 B9 01 00 49 00 4A
   01 00 4F 00 4A 01 01 50 00 B9 01 01 04 01 05 01
   01 3E 01 5B 01 00 77 00 C3 01 01 3A 01 3B 01 01
   32 01 33 01 00 9D 00 C1 01 00 C6 00 5C 01 00 C7
   00 62 01 00 C8 00 68 01 00 B1 00 B2 01 00 6C 00
   68 01 00 60 00 5C 01 00 66 00 62 01 00 A5 00 A6
   01 00 1F 00 A2 01 00 A1 00 A2 01 01 EC 01 D9 01
   00 B8 00 B9 01 00 67 00 68 01 00 5B 00 5C 01 01
   D8 01 D9 01 00 61 00 62 01 02 5C 02 5D 01 01 AD
   01 3B 01 00 9B 00 6E 01 01 9E 00 3D 01 00 6D 00
   6E 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
