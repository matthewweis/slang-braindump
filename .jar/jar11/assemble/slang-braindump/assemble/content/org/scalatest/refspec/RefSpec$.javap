Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/refspec/RefSpec$.class
  Last modified May 29, 2022; size 5341 bytes
  SHA-256 checksum d321ead732067cb6fc99cd6f2dd7665e81652af05b770bdb3ccbceca03da3e13
  Compiled from "RefSpec.scala"
public final class org.scalatest.refspec.RefSpec$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/refspec/RefSpec$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/refspec/RefSpec$
    #2 = Class              #1            // org/scalatest/refspec/RefSpec$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               RefSpec.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #14 = Class              #13           // scala/collection/mutable/ArraySeq$ofRef
   #15 = Utf8               scala/collection/mutable/ArraySeq
   #16 = Class              #15           // scala/collection/mutable/ArraySeq
   #17 = Utf8               ofRef
   #18 = Utf8               MODULE$
   #19 = Utf8               Lorg/scalatest/refspec/RefSpec$;
   #20 = Utf8               compactifiedMarker
   #21 = Utf8               Ljava/lang/String;
   #22 = Utf8               <clinit>
   #23 = Utf8               ()V
   #24 = Utf8               <init>
   #25 = NameAndType        #24:#23       // "<init>":()V
   #26 = Methodref          #2.#25        // org/scalatest/refspec/RefSpec$."<init>":()V
   #27 = NameAndType        #18:#19       // MODULE$:Lorg/scalatest/refspec/RefSpec$;
   #28 = Fieldref           #2.#27        // org/scalatest/refspec/RefSpec$.MODULE$:Lorg/scalatest/refspec/RefSpec$;
   #29 = Utf8               $$$$
   #30 = String             #29           // $$$$
   #31 = NameAndType        #20:#21       // compactifiedMarker:Ljava/lang/String;
   #32 = Fieldref           #2.#31        // org/scalatest/refspec/RefSpec$.compactifiedMarker:Ljava/lang/String;
   #33 = Utf8               isTestMethod
   #34 = Utf8               (Ljava/lang/reflect/Method;)Z
   #35 = Utf8               m
   #36 = Utf8               java/lang/reflect/Method
   #37 = Class              #36           // java/lang/reflect/Method
   #38 = Utf8               getModifiers
   #39 = Utf8               ()I
   #40 = NameAndType        #38:#39       // getModifiers:()I
   #41 = Methodref          #37.#40       // java/lang/reflect/Method.getModifiers:()I
   #42 = Utf8               java/lang/reflect/Modifier
   #43 = Class              #42           // java/lang/reflect/Modifier
   #44 = Utf8               isStatic
   #45 = Utf8               (I)Z
   #46 = NameAndType        #44:#45       // isStatic:(I)Z
   #47 = Methodref          #43.#46       // java/lang/reflect/Modifier.isStatic:(I)Z
   #48 = Utf8               scala/collection/ArrayOps$
   #49 = Class              #48           // scala/collection/ArrayOps$
   #50 = Utf8               Lscala/collection/ArrayOps$;
   #51 = NameAndType        #18:#50       // MODULE$:Lscala/collection/ArrayOps$;
   #52 = Fieldref           #49.#51       // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
   #53 = Utf8               scala/Predef$
   #54 = Class              #53           // scala/Predef$
   #55 = Utf8               Lscala/Predef$;
   #56 = NameAndType        #18:#55       // MODULE$:Lscala/Predef$;
   #57 = Fieldref           #54.#56       // scala/Predef$.MODULE$:Lscala/Predef$;
   #58 = Utf8               getParameterTypes
   #59 = Utf8               ()[Ljava/lang/Class;
   #60 = NameAndType        #58:#59       // getParameterTypes:()[Ljava/lang/Class;
   #61 = Methodref          #37.#60       // java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
   #62 = Utf8               [Ljava/lang/Object;
   #63 = Class              #62           // "[Ljava/lang/Object;"
   #64 = Utf8               refArrayOps
   #65 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
   #66 = NameAndType        #64:#65       // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #67 = Methodref          #54.#66       // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #68 = Utf8               isEmpty$extension
   #69 = Utf8               (Ljava/lang/Object;)Z
   #70 = NameAndType        #68:#69       // isEmpty$extension:(Ljava/lang/Object;)Z
   #71 = Methodref          #49.#70       // scala/collection/ArrayOps$.isEmpty$extension:(Ljava/lang/Object;)Z
   #72 = Utf8               getName
   #73 = Utf8               ()Ljava/lang/String;
   #74 = NameAndType        #72:#73       // getName:()Ljava/lang/String;
   #75 = Methodref          #37.#74       // java/lang/reflect/Method.getName:()Ljava/lang/String;
   #76 = Utf8               $u0020
   #77 = String             #76           // $u0020
   #78 = Utf8               java/lang/String
   #79 = Class              #78           // java/lang/String
   #80 = Utf8               indexOf
   #81 = Utf8               (Ljava/lang/String;)I
   #82 = NameAndType        #80:#81       // indexOf:(Ljava/lang/String;)I
   #83 = Methodref          #79.#82       // java/lang/String.indexOf:(Ljava/lang/String;)I
   #84 = Utf8               $$outer
   #85 = String             #84           // $$outer
   #86 = Utf8               endsWith
   #87 = Utf8               (Ljava/lang/String;)Z
   #88 = NameAndType        #86:#87       // endsWith:(Ljava/lang/String;)Z
   #89 = Methodref          #79.#88       // java/lang/String.endsWith:(Ljava/lang/String;)Z
   #90 = Utf8               .+\\$\\$.+\\$[1-9]+
   #91 = String             #90           // .+\\$\\$.+\\$[1-9]+
   #92 = Utf8               matches
   #93 = NameAndType        #92:#87       // matches:(Ljava/lang/String;)Z
   #94 = Methodref          #79.#93       // java/lang/String.matches:(Ljava/lang/String;)Z
   #95 = Utf8               isInstanceMethod
   #96 = Utf8               Z
   #97 = Utf8               hasNoParams
   #98 = Utf8               includesEncodedSpace
   #99 = Utf8               isOuterMethod
  #100 = Utf8               isNestedMethod
  #101 = Utf8               this
  #102 = Utf8               Ljava/lang/reflect/Method;
  #103 = Utf8               equalIfRequiredCompactify
  #104 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #105 = Utf8               value
  #106 = Utf8               compactified
  #107 = Utf8               .+\\$\\$\\$\\$.+\\$\\$\\$\\$.+
  #108 = String             #107          // .+\\$\\$\\$\\$.+\\$\\$\\$\\$.+
  #109 = Utf8               lastIndexOf
  #110 = NameAndType        #109:#81      // lastIndexOf:(Ljava/lang/String;)I
  #111 = Methodref          #79.#110      // java/lang/String.lastIndexOf:(Ljava/lang/String;)I
  #112 = Utf8               substring
  #113 = Utf8               (II)Ljava/lang/String;
  #114 = NameAndType        #112:#113     // substring:(II)Ljava/lang/String;
  #115 = Methodref          #79.#114      // java/lang/String.substring:(II)Ljava/lang/String;
  #116 = Utf8               (I)Ljava/lang/String;
  #117 = NameAndType        #112:#116     // substring:(I)Ljava/lang/String;
  #118 = Methodref          #79.#117      // java/lang/String.substring:(I)Ljava/lang/String;
  #119 = Utf8               .
  #120 = String             #119          // .
  #121 = Utf8               length
  #122 = NameAndType        #121:#39      // length:()I
  #123 = Methodref          #79.#122      // java/lang/String.length:()I
  #124 = Utf8               scala/io/Codec$
  #125 = Class              #124          // scala/io/Codec$
  #126 = Utf8               Lscala/io/Codec$;
  #127 = NameAndType        #18:#126      // MODULE$:Lscala/io/Codec$;
  #128 = Fieldref           #125.#127     // scala/io/Codec$.MODULE$:Lscala/io/Codec$;
  #129 = Utf8               toUTF8
  #130 = Utf8               (Ljava/lang/CharSequence;)[B
  #131 = NameAndType        #129:#130     // toUTF8:(Ljava/lang/CharSequence;)[B
  #132 = Methodref          #125.#131     // scala/io/Codec$.toUTF8:(Ljava/lang/CharSequence;)[B
  #133 = Utf8               MD5
  #134 = String             #133          // MD5
  #135 = Utf8               java/security/MessageDigest
  #136 = Class              #135          // java/security/MessageDigest
  #137 = Utf8               getInstance
  #138 = Utf8               (Ljava/lang/String;)Ljava/security/MessageDigest;
  #139 = NameAndType        #137:#138     // getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
  #140 = Methodref          #136.#139     // java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
  #141 = Utf8               update
  #142 = Utf8               ([B)V
  #143 = NameAndType        #141:#142     // update:([B)V
  #144 = Methodref          #136.#143     // java/security/MessageDigest.update:([B)V
  #145 = Utf8               digest
  #146 = Utf8               ()[B
  #147 = NameAndType        #145:#146     // digest:()[B
  #148 = Methodref          #136.#147     // java/security/MessageDigest.digest:()[B
  #149 = Utf8               byteArrayOps
  #150 = Utf8               ([B)Ljava/lang/Object;
  #151 = NameAndType        #149:#150     // byteArrayOps:([B)Ljava/lang/Object;
  #152 = Methodref          #54.#151      // scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
  #153 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #154 = MethodType         #153          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #155 = Utf8               $anonfun$equalIfRequiredCompactify$1$adapted
  #156 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #157 = NameAndType        #155:#156     // $anonfun$equalIfRequiredCompactify$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #158 = Methodref          #2.#157       // org/scalatest/refspec/RefSpec$.$anonfun$equalIfRequiredCompactify$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #159 = MethodHandle       6:#158        // REF_invokeStatic org/scalatest/refspec/RefSpec$.$anonfun$equalIfRequiredCompactify$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  #160 = MethodType         #156          //  (Ljava/lang/Object;)Ljava/lang/String;
  #161 = Integer            5
  #162 = Integer            1
  #163 = Utf8               java/lang/invoke/LambdaMetafactory
  #164 = Class              #163          // java/lang/invoke/LambdaMetafactory
  #165 = Utf8               altMetafactory
  #166 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = NameAndType        #165:#166     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #168 = Methodref          #164.#167     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = MethodHandle       6:#168        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #170 = Utf8               apply
  #171 = Utf8               ()Lscala/Function1;
  #172 = NameAndType        #170:#171     // apply:()Lscala/Function1;
  #173 = InvokeDynamic      #0:#172       // #0:apply:()Lscala/Function1;
  #174 = Utf8               scala/reflect/ClassTag$
  #175 = Class              #174          // scala/reflect/ClassTag$
  #176 = Utf8               Lscala/reflect/ClassTag$;
  #177 = NameAndType        #18:#176      // MODULE$:Lscala/reflect/ClassTag$;
  #178 = Fieldref           #175.#177     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #179 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #180 = NameAndType        #170:#179     // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #181 = Methodref          #175.#180     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #182 = Utf8               map$extension
  #183 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #184 = NameAndType        #182:#183     // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #185 = Methodref          #49.#184      // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #186 = Utf8               wrapRefArray
  #187 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #188 = NameAndType        #186:#187     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #189 = Methodref          #54.#188      // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #190 = Utf8               mkString
  #191 = NameAndType        #190:#73      // mkString:()Ljava/lang/String;
  #192 = Methodref          #14.#191      // scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
  #193 = Utf8               java/lang/StringBuilder
  #194 = Class              #193          // java/lang/StringBuilder
  #195 = Integer            0
  #196 = Utf8               (I)V
  #197 = NameAndType        #24:#196      // "<init>":(I)V
  #198 = Methodref          #194.#197     // java/lang/StringBuilder."<init>":(I)V
  #199 = Utf8               append
  #200 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #201 = NameAndType        #199:#200     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #202 = Methodref          #194.#201     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #203 = NameAndType        #20:#73       // compactifiedMarker:()Ljava/lang/String;
  #204 = Methodref          #2.#203       // org/scalatest/refspec/RefSpec$.compactifiedMarker:()Ljava/lang/String;
  #205 = Utf8               toString
  #206 = NameAndType        #205:#73      // toString:()Ljava/lang/String;
  #207 = Methodref          #194.#206     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #208 = Utf8               equals
  #209 = NameAndType        #208:#69      // equals:(Ljava/lang/Object;)Z
  #210 = Methodref          #4.#209       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #211 = Utf8               firstDolarIdx
  #212 = Utf8               I
  #213 = Utf8               lastDolarIdx
  #214 = Utf8               prefix
  #215 = Utf8               suffix
  #216 = Utf8               lastIndexOfDot
  #217 = Utf8               toHash
  #218 = Utf8               bytes
  #219 = Utf8               [B
  #220 = Utf8               md5
  #221 = Utf8               Ljava/security/MessageDigest;
  #222 = Utf8               md5chars
  #223 = Class              #219          // "[B"
  #224 = Utf8               writeReplace
  #225 = Utf8               ()Ljava/lang/Object;
  #226 = Utf8               scala/runtime/ModuleSerializationProxy
  #227 = Class              #226          // scala/runtime/ModuleSerializationProxy
  #228 = Utf8               (Ljava/lang/Class;)V
  #229 = NameAndType        #24:#228      // "<init>":(Ljava/lang/Class;)V
  #230 = Methodref          #227.#229     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #231 = Utf8               $anonfun$equalIfRequiredCompactify$1
  #232 = Utf8               (B)Ljava/lang/String;
  #233 = Utf8               b
  #234 = Utf8               scala/runtime/RichInt$
  #235 = Class              #234          // scala/runtime/RichInt$
  #236 = Utf8               Lscala/runtime/RichInt$;
  #237 = NameAndType        #18:#236      // MODULE$:Lscala/runtime/RichInt$;
  #238 = Fieldref           #235.#237     // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #239 = Utf8               intWrapper
  #240 = Utf8               (I)I
  #241 = NameAndType        #239:#240     // intWrapper:(I)I
  #242 = Methodref          #54.#241      // scala/Predef$.intWrapper:(I)I
  #243 = Utf8               toHexString$extension
  #244 = NameAndType        #243:#116     // toHexString$extension:(I)Ljava/lang/String;
  #245 = Methodref          #235.#244     // scala/runtime/RichInt$.toHexString$extension:(I)Ljava/lang/String;
  #246 = Utf8               B
  #247 = Methodref          #4.#25        // java/lang/Object."<init>":()V
  #248 = Utf8               scala/runtime/BoxesRunTime
  #249 = Class              #248          // scala/runtime/BoxesRunTime
  #250 = Utf8               unboxToByte
  #251 = Utf8               (Ljava/lang/Object;)B
  #252 = NameAndType        #250:#251     // unboxToByte:(Ljava/lang/Object;)B
  #253 = Methodref          #249.#252     // scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
  #254 = NameAndType        #231:#232     // $anonfun$equalIfRequiredCompactify$1:(B)Ljava/lang/String;
  #255 = Methodref          #2.#254       // org/scalatest/refspec/RefSpec$.$anonfun$equalIfRequiredCompactify$1:(B)Ljava/lang/String;
  #256 = Utf8               Ljava/lang/Object;
  #257 = Utf8               $deserializeLambda$
  #258 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #259 = Utf8               scala/runtime/LambdaDeserialize
  #260 = Class              #259          // scala/runtime/LambdaDeserialize
  #261 = Utf8               bootstrap
  #262 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #263 = NameAndType        #261:#262     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #264 = Methodref          #260.#263     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #265 = MethodHandle       6:#264        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #266 = Utf8               lambdaDeserialize
  #267 = NameAndType        #266:#258     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #268 = InvokeDynamic      #1:#267       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #269 = Utf8               Code
  #270 = Utf8               LineNumberTable
  #271 = Utf8               StackMapTable
  #272 = Utf8               LocalVariableTable
  #273 = Utf8               MethodParameters
  #274 = Utf8               InnerClasses
  #275 = Utf8               SourceFile
  #276 = Utf8               BootstrapMethods
  #277 = Utf8               ScalaInlineInfo
  #278 = Utf8               Scala
{
  public static final org.scalatest.refspec.RefSpec$ MODULE$;
    descriptor: Lorg/scalatest/refspec/RefSpec$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.lang.String compactifiedMarker;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/scalatest/refspec/RefSpec$
         3: dup
         4: invokespecial #26                 // Method "<init>":()V
         7: putstatic     #28                 // Field MODULE$:Lorg/scalatest/refspec/RefSpec$;
        10: ldc           #30                 // String $$$$
        12: putstatic     #32                 // Field compactifiedMarker:Ljava/lang/String;
        15: return
      LineNumberTable:
        line 1344: 0
        line 1371: 10
        line 1344: 15

  public boolean isTestMethod(java.lang.reflect.Method);
    descriptor: (Ljava/lang/reflect/Method;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=2
         0: aload_1
         1: invokevirtual #41                 // Method java/lang/reflect/Method.getModifiers:()I
         4: invokestatic  #47                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
         7: ifne          14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: istore_2
        16: getstatic     #52                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        19: getstatic     #57                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        22: aload_1
        23: invokevirtual #61                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
        26: checkcast     #63                 // class "[Ljava/lang/Object;"
        29: invokevirtual #67                 // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        32: invokevirtual #71                 // Method scala/collection/ArrayOps$.isEmpty$extension:(Ljava/lang/Object;)Z
        35: istore_3
        36: aload_1
        37: invokevirtual #75                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
        40: ldc           #77                 // String $u0020
        42: invokevirtual #83                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
        45: iconst_0
        46: if_icmplt     53
        49: iconst_1
        50: goto          54
        53: iconst_0
        54: istore        4
        56: aload_1
        57: invokevirtual #75                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
        60: ldc           #85                 // String $$outer
        62: invokevirtual #89                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        65: istore        5
        67: aload_1
        68: invokevirtual #75                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
        71: ldc           #91                 // String .+\\$\\$.+\\$[1-9]+
        73: invokevirtual #94                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
        76: istore        6
        78: iload_2
        79: ifeq          105
        82: iload_3
        83: ifeq          105
        86: iload         4
        88: ifeq          105
        91: iload         5
        93: ifne          105
        96: iload         6
        98: ifne          105
       101: iconst_1
       102: goto          106
       105: iconst_0
       106: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ int, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 254 /* append */
          offset_delta = 50
          locals = [ int, int, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 1348: 0
        line 1350: 16
        line 1353: 36
        line 1355: 56
        line 1357: 67
        line 1362: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      90     2 isInstanceMethod   Z
           36      70     3 hasNoParams   Z
           56      50     4 includesEncodedSpace   Z
           67      39     5 isOuterMethod   Z
           78      28     6 isNestedMethod   Z
            0     107     0  this   Lorg/scalatest/refspec/RefSpec$;
            0     107     1     m   Ljava/lang/reflect/Method;
    MethodParameters:
      Name                           Flags
      m                              final

  private java.lang.String compactifiedMarker();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #32                 // Field compactifiedMarker:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 1371: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/scalatest/refspec/RefSpec$;

  public boolean equalIfRequiredCompactify(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=14, args_size=3
         0: aload_2
         1: ldc           #108                // String .+\\$\\$\\$\\$.+\\$\\$\\$\\$.+
         3: invokevirtual #94                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
         6: ifeq          225
         9: aload_2
        10: ldc           #30                 // String $$$$
        12: invokevirtual #83                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
        15: istore_3
        16: aload_2
        17: ldc           #30                 // String $$$$
        19: invokevirtual #111                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
        22: istore        4
        24: aload_2
        25: iconst_0
        26: iload_3
        27: invokevirtual #115                // Method java/lang/String.substring:(II)Ljava/lang/String;
        30: astore        5
        32: aload_2
        33: iload         4
        35: iconst_4
        36: iadd
        37: invokevirtual #118                // Method java/lang/String.substring:(I)Ljava/lang/String;
        40: astore        6
        42: aload_1
        43: ldc           #120                // String .
        45: invokevirtual #111                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
        48: istore        7
        50: iload         7
        52: iconst_0
        53: if_icmplt     81
        56: aload_1
        57: iconst_0
        58: aload_1
        59: invokevirtual #123                // Method java/lang/String.length:()I
        62: iconst_1
        63: isub
        64: invokevirtual #115                // Method java/lang/String.substring:(II)Ljava/lang/String;
        67: aload_1
        68: ldc           #120                // String .
        70: invokevirtual #111                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
        73: iconst_1
        74: iadd
        75: invokevirtual #118                // Method java/lang/String.substring:(I)Ljava/lang/String;
        78: goto          82
        81: aload_1
        82: astore        8
        84: getstatic     #128                // Field scala/io/Codec$.MODULE$:Lscala/io/Codec$;
        87: aload         8
        89: invokevirtual #132                // Method scala/io/Codec$.toUTF8:(Ljava/lang/CharSequence;)[B
        92: astore        9
        94: ldc           #134                // String MD5
        96: invokestatic  #140                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
        99: astore        10
       101: aload         10
       103: aload         9
       105: invokevirtual #144                // Method java/security/MessageDigest.update:([B)V
       108: getstatic     #57                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       111: getstatic     #52                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       114: getstatic     #57                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       117: aload         10
       119: invokevirtual #148                // Method java/security/MessageDigest.digest:()[B
       122: invokevirtual #152                // Method scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
       125: invokedynamic #173,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       130: getstatic     #178                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       133: ldc           #79                 // class java/lang/String
       135: invokevirtual #181                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       138: invokevirtual #185                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       141: checkcast     #63                 // class "[Ljava/lang/Object;"
       144: invokevirtual #189                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
       147: invokevirtual #192                // Method scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
       150: astore        11
       152: new           #194                // class java/lang/StringBuilder
       155: dup
       156: ldc           #195                // int 0
       158: invokespecial #198                // Method java/lang/StringBuilder."<init>":(I)V
       161: aload         5
       163: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       166: aload_0
       167: invokespecial #204                // Method compactifiedMarker:()Ljava/lang/String;
       170: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       173: aload         11
       175: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       178: aload_0
       179: invokespecial #204                // Method compactifiedMarker:()Ljava/lang/String;
       182: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       185: aload         6
       187: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: invokevirtual #207                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       193: aload_2
       194: astore        12
       196: dup
       197: ifnonnull     209
       200: pop
       201: aload         12
       203: ifnull        217
       206: goto          221
       209: aload         12
       211: invokevirtual #210                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       214: ifeq          221
       217: iconst_1
       218: goto          222
       221: iconst_0
       222: goto          255
       225: aload_1
       226: aload_2
       227: astore        13
       229: dup
       230: ifnonnull     242
       233: pop
       234: aload         13
       236: ifnull        250
       239: goto          254
       242: aload         13
       244: invokevirtual #210                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       247: ifeq          254
       250: iconst_1
       251: goto          255
       254: iconst_0
       255: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 81
          locals = [ class org/scalatest/refspec/RefSpec$, class java/lang/String, class java/lang/String, int, int, class java/lang/String, class java/lang/String, int ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 126
          locals = [ class org/scalatest/refspec/RefSpec$, class java/lang/String, class java/lang/String, int, int, class java/lang/String, class java/lang/String, int, class java/lang/String, class "[B", class java/security/MessageDigest, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/refspec/RefSpec$, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class org/scalatest/refspec/RefSpec$, class java/lang/String, class java/lang/String, top, top, top, top, top, top, top, top, top, top, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/refspec/RefSpec$, class java/lang/String, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 1374: 0
        line 1375: 9
        line 1376: 16
        line 1377: 24
        line 1378: 32
        line 1379: 42
        line 1381: 50
        line 1382: 56
        line 1384: 81
        line 1386: 84
        line 1387: 94
        line 1388: 101
        line 1389: 108
        line 1390: 152
        line 1393: 225
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16     206     3 firstDolarIdx   I
           24     198     4 lastDolarIdx   I
           32     190     5 prefix   Ljava/lang/String;
           42     180     6 suffix   Ljava/lang/String;
           50     172     7 lastIndexOfDot   I
           84     138     8 toHash   Ljava/lang/String;
           94     128     9 bytes   [B
          101     121    10   md5   Ljava/security/MessageDigest;
          152      70    11 md5chars   Ljava/lang/String;
            0     256     0  this   Lorg/scalatest/refspec/RefSpec$;
            0     256     1 value   Ljava/lang/String;
            0     256     2 compactified   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      value                          final
      compactified                   final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #227                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class org/scalatest/refspec/RefSpec$
         6: invokespecial #230                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 1344: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalatest/refspec/RefSpec$;

  public static final java.lang.String $anonfun$equalIfRequiredCompactify$1(byte);
    descriptor: (B)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #238                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         3: getstatic     #57                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iload_0
         7: sipush        255
        10: iand
        11: invokevirtual #242                // Method scala/Predef$.intWrapper:(I)I
        14: invokevirtual #245                // Method scala/runtime/RichInt$.toHexString$extension:(I)Ljava/lang/String;
        17: areturn
      LineNumberTable:
        line 1389: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0     b   B
    MethodParameters:
      Name                           Flags
      b                              final

  private org.scalatest.refspec.RefSpec$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #247                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 1396: 0
        line 1344: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/refspec/RefSpec$;

  public static final java.lang.String $anonfun$equalIfRequiredCompactify$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #253                // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
         4: invokestatic  #255                // Method $anonfun$equalIfRequiredCompactify$1:(B)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 1389: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     b   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      b                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #268,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
SourceFile: "RefSpec.scala"
BootstrapMethods:
  0: #169 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #154 (Ljava/lang/Object;)Ljava/lang/Object;
      #159 REF_invokeStatic org/scalatest/refspec/RefSpec$.$anonfun$equalIfRequiredCompactify$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
      #160 (Ljava/lang/Object;)Ljava/lang/String;
      #161 5
      #162 1
      #160 (Ljava/lang/Object;)Ljava/lang/String;
  1: #265 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #159 REF_invokeStatic org/scalatest/refspec/RefSpec$.$anonfun$equalIfRequiredCompactify$1$adapted:(Ljava/lang/Object;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 E7 00 E8 01 00 9B 00 9C 01 00 18
   00 17 01 00 14 00 49 01 00 67 00 68 01 00 21 00
   22 01 00 E0 00 E1 01
  Scala: length = 0x0 (unknown attribute)

