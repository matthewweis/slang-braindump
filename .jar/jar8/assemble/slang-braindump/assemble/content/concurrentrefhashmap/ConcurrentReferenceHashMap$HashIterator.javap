Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.class
  Last modified May 29, 2022; size 2394 bytes
  SHA-256 checksum f78d0a3c4275286ab9727400e696bc57f71c609ef92dad6c695e5b421a2f2569
  Compiled from "ConcurrentReferenceHashMap.java"
abstract class concurrentrefhashmap.ConcurrentReferenceHashMap$HashIterator
  minor version: 0
  major version: 52
  flags: (0x0420) ACC_SUPER, ACC_ABSTRACT
  this_class: #21                         // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  super_class: #22                        // java/lang/Object
  interfaces: 0, fields: 7, methods: 6, attributes: 2
Constant pool:
   #1 = Fieldref           #21.#58        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
   #2 = Methodref          #22.#59        // java/lang/Object."<init>":()V
   #3 = Fieldref           #60.#61        // concurrentrefhashmap/ConcurrentReferenceHashMap.segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
   #4 = Fieldref           #21.#62        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.nextSegmentIndex:I
   #5 = Fieldref           #21.#63        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.nextTableIndex:I
   #6 = Methodref          #21.#64        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.advance:()V
   #7 = Methodref          #21.#65        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.hasNext:()Z
   #8 = Fieldref           #21.#66        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
   #9 = Fieldref           #27.#67        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.next:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #10 = Fieldref           #21.#68        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.currentTable:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #11 = Fieldref           #51.#69        // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
  #12 = Fieldref           #51.#70        // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.table:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #13 = Methodref          #27.#71        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.key:()Ljava/lang/Object;
  #14 = Class              #72            // java/util/NoSuchElementException
  #15 = Methodref          #14.#59        // java/util/NoSuchElementException."<init>":()V
  #16 = Fieldref           #21.#73        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.lastReturned:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #17 = Fieldref           #21.#74        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.currentKey:Ljava/lang/Object;
  #18 = Class              #75            // java/lang/IllegalStateException
  #19 = Methodref          #18.#59        // java/lang/IllegalStateException."<init>":()V
  #20 = Methodref          #60.#76        // concurrentrefhashmap/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
  #21 = Class              #77            // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  #22 = Class              #79            // java/lang/Object
  #23 = Utf8               nextSegmentIndex
  #24 = Utf8               I
  #25 = Utf8               nextTableIndex
  #26 = Utf8               currentTable
  #27 = Class              #80            // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry
  #28 = Utf8               HashEntry
  #29 = Utf8               InnerClasses
  #30 = Utf8               [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #31 = Utf8               Signature
  #32 = Utf8               [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry<TK;TV;>;
  #33 = Utf8               nextEntry
  #34 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #35 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry<TK;TV;>;
  #36 = Utf8               lastReturned
  #37 = Utf8               currentKey
  #38 = Utf8               Ljava/lang/Object;
  #39 = Utf8               TK;
  #40 = Utf8               this$0
  #41 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #42 = Utf8               <init>
  #43 = Utf8               (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #44 = Utf8               Code
  #45 = Utf8               LineNumberTable
  #46 = Utf8               hasMoreElements
  #47 = Utf8               ()Z
  #48 = Utf8               advance
  #49 = Utf8               ()V
  #50 = Utf8               StackMapTable
  #51 = Class              #81            // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment
  #52 = Utf8               hasNext
  #53 = Utf8               ()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #54 = Utf8               ()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry<TK;TV;>;
  #55 = Utf8               remove
  #56 = Utf8               SourceFile
  #57 = Utf8               ConcurrentReferenceHashMap.java
  #58 = NameAndType        #40:#41        // this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #59 = NameAndType        #42:#49        // "<init>":()V
  #60 = Class              #83            // concurrentrefhashmap/ConcurrentReferenceHashMap
  #61 = NameAndType        #84:#85        // segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #62 = NameAndType        #23:#24        // nextSegmentIndex:I
  #63 = NameAndType        #25:#24        // nextTableIndex:I
  #64 = NameAndType        #48:#49        // advance:()V
  #65 = NameAndType        #52:#47        // hasNext:()Z
  #66 = NameAndType        #33:#34        // nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #67 = NameAndType        #86:#34        // next:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #68 = NameAndType        #26:#30        // currentTable:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #69 = NameAndType        #87:#24        // count:I
  #70 = NameAndType        #88:#30        // table:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #71 = NameAndType        #89:#90        // key:()Ljava/lang/Object;
  #72 = Utf8               java/util/NoSuchElementException
  #73 = NameAndType        #36:#34        // lastReturned:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #74 = NameAndType        #37:#38        // currentKey:Ljava/lang/Object;
  #75 = Utf8               java/lang/IllegalStateException
  #76 = NameAndType        #55:#91        // remove:(Ljava/lang/Object;)Ljava/lang/Object;
  #77 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  #78 = Utf8               HashIterator
  #79 = Utf8               java/lang/Object
  #80 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry
  #81 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$Segment
  #82 = Utf8               Segment
  #83 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap
  #84 = Utf8               segments
  #85 = Utf8               [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #86 = Utf8               next
  #87 = Utf8               count
  #88 = Utf8               table
  #89 = Utf8               key
  #90 = Utf8               ()Ljava/lang/Object;
  #91 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
{
  int nextSegmentIndex;
    descriptor: I
    flags: (0x0000)

  int nextTableIndex;
    descriptor: I
    flags: (0x0000)

  concurrentrefhashmap.ConcurrentReferenceHashMap$HashEntry<K, V>[] currentTable;
    descriptor: [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
    flags: (0x0000)
    Signature: #32                          // [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry<TK;TV;>;

  concurrentrefhashmap.ConcurrentReferenceHashMap$HashEntry<K, V> nextEntry;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
    flags: (0x0000)
    Signature: #35                          // Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry<TK;TV;>;

  concurrentrefhashmap.ConcurrentReferenceHashMap$HashEntry<K, V> lastReturned;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
    flags: (0x0000)
    Signature: #35                          // Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry<TK;TV;>;

  K currentKey;
    descriptor: Ljava/lang/Object;
    flags: (0x0000)
    Signature: #39                          // TK;

  final concurrentrefhashmap.ConcurrentReferenceHashMap this$0;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
    flags: (0x1010) ACC_FINAL, ACC_SYNTHETIC

  concurrentrefhashmap.ConcurrentReferenceHashMap$HashIterator(concurrentrefhashmap.ConcurrentReferenceHashMap);
    descriptor: (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
    flags: (0x0000)
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         5: aload_0
         6: invokespecial #2                  // Method java/lang/Object."<init>":()V
         9: aload_0
        10: aload_1
        11: getfield      #3                  // Field concurrentrefhashmap/ConcurrentReferenceHashMap.segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        14: arraylength
        15: iconst_1
        16: isub
        17: putfield      #4                  // Field nextSegmentIndex:I
        20: aload_0
        21: iconst_m1
        22: putfield      #5                  // Field nextTableIndex:I
        25: aload_0
        26: invokevirtual #6                  // Method advance:()V
        29: return
      LineNumberTable:
        line 1559: 0
        line 1560: 9
        line 1561: 20
        line 1562: 25
        line 1563: 29

  public boolean hasMoreElements();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #7                  // Method hasNext:()Z
         4: ireturn
      LineNumberTable:
        line 1566: 0

  final void advance();
    descriptor: ()V
    flags: (0x0010) ACC_FINAL
    Code:
      stack=6, locals=3, args_size=1
         0: aload_0
         1: getfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
         4: ifnull        23
         7: aload_0
         8: aload_0
         9: getfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        12: getfield      #9                  // Field concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.next:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        15: dup_x1
        16: putfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        19: ifnull        23
        22: return
        23: aload_0
        24: getfield      #5                  // Field nextTableIndex:I
        27: iflt          55
        30: aload_0
        31: aload_0
        32: getfield      #10                 // Field currentTable:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        35: aload_0
        36: dup
        37: getfield      #5                  // Field nextTableIndex:I
        40: dup_x1
        41: iconst_1
        42: isub
        43: putfield      #5                  // Field nextTableIndex:I
        46: aaload
        47: dup_x1
        48: putfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        51: ifnull        23
        54: return
        55: aload_0
        56: getfield      #4                  // Field nextSegmentIndex:I
        59: iflt          140
        62: aload_0
        63: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
        66: getfield      #3                  // Field concurrentrefhashmap/ConcurrentReferenceHashMap.segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        69: aload_0
        70: dup
        71: getfield      #4                  // Field nextSegmentIndex:I
        74: dup_x1
        75: iconst_1
        76: isub
        77: putfield      #4                  // Field nextSegmentIndex:I
        80: aaload
        81: astore_1
        82: aload_1
        83: getfield      #11                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
        86: ifeq          137
        89: aload_0
        90: aload_1
        91: getfield      #12                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.table:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        94: putfield      #10                 // Field currentTable:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        97: aload_0
        98: getfield      #10                 // Field currentTable:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
       101: arraylength
       102: iconst_1
       103: isub
       104: istore_2
       105: iload_2
       106: iflt          137
       109: aload_0
       110: aload_0
       111: getfield      #10                 // Field currentTable:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
       114: iload_2
       115: aaload
       116: dup_x1
       117: putfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
       120: ifnull        131
       123: aload_0
       124: iload_2
       125: iconst_1
       126: isub
       127: putfield      #5                  // Field nextTableIndex:I
       130: return
       131: iinc          2, -1
       134: goto          105
       137: goto          55
       140: return
      LineNumberTable:
        line 1570: 0
        line 1571: 22
        line 1574: 23
        line 1575: 30
        line 1576: 54
        line 1580: 55
        line 1581: 62
        line 1582: 82
        line 1583: 89
        line 1584: 97
        line 1585: 109
        line 1586: 123
        line 1587: 130
        line 1584: 131
        line 1591: 137
        line 1592: 140
      StackMapTable: number_of_entries = 6
        frame_type = 23 /* same */
        frame_type = 31 /* same */
        frame_type = 253 /* append */
          offset_delta = 49
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap$Segment, int ]
        frame_type = 25 /* same */
        frame_type = 249 /* chop */
          offset_delta = 5
        frame_type = 2 /* same */

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
         4: ifnull        26
         7: aload_0
         8: getfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        11: invokevirtual #13                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.key:()Ljava/lang/Object;
        14: ifnull        19
        17: iconst_1
        18: ireturn
        19: aload_0
        20: invokevirtual #6                  // Method advance:()V
        23: goto          0
        26: iconst_0
        27: ireturn
      LineNumberTable:
        line 1595: 0
        line 1596: 7
        line 1597: 17
        line 1599: 19
        line 1602: 26
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 18 /* same */
        frame_type = 6 /* same */

  concurrentrefhashmap.ConcurrentReferenceHashMap$HashEntry<K, V> nextEntry();
    descriptor: ()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
    flags: (0x0000)
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
         4: ifnonnull     15
         7: new           #14                 // class java/util/NoSuchElementException
        10: dup
        11: invokespecial #15                 // Method java/util/NoSuchElementException."<init>":()V
        14: athrow
        15: aload_0
        16: aload_0
        17: getfield      #8                  // Field nextEntry:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        20: putfield      #16                 // Field lastReturned:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        23: aload_0
        24: aload_0
        25: getfield      #16                 // Field lastReturned:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        28: invokevirtual #13                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.key:()Ljava/lang/Object;
        31: putfield      #17                 // Field currentKey:Ljava/lang/Object;
        34: aload_0
        35: invokevirtual #6                  // Method advance:()V
        38: aload_0
        39: getfield      #17                 // Field currentKey:Ljava/lang/Object;
        42: ifnull        0
        45: aload_0
        46: getfield      #16                 // Field lastReturned:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        49: areturn
      LineNumberTable:
        line 1607: 0
        line 1608: 7
        line 1611: 15
        line 1612: 23
        line 1613: 34
        line 1614: 38
        line 1616: 45
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 14 /* same */
    Signature: #54                          // ()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry<TK;TV;>;

  public void remove();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #16                 // Field lastReturned:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
         4: ifnonnull     15
         7: new           #18                 // class java/lang/IllegalStateException
        10: dup
        11: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":()V
        14: athrow
        15: aload_0
        16: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
        19: aload_0
        20: getfield      #17                 // Field currentKey:Ljava/lang/Object;
        23: invokevirtual #20                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        26: pop
        27: aload_0
        28: aconst_null
        29: putfield      #16                 // Field lastReturned:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        32: return
      LineNumberTable:
        line 1620: 0
        line 1621: 7
        line 1623: 15
        line 1624: 27
        line 1625: 32
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
}
SourceFile: "ConcurrentReferenceHashMap.java"
InnerClasses:
  static final #28= #27 of #60;           // HashEntry=class concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry of class concurrentrefhashmap/ConcurrentReferenceHashMap
  abstract #78= #21 of #60;               // HashIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #82= #51 of #60;           // Segment=class concurrentrefhashmap/ConcurrentReferenceHashMap$Segment of class concurrentrefhashmap/ConcurrentReferenceHashMap
