Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Orders$PartialOrdering.class
  Last modified May 29, 2022; size 2138 bytes
  SHA-256 checksum b0174f41998f563f46a80d6c1e84e162fa355ecf63a7ff4a2596860560c15928
  Compiled from "Orders.scala"
public interface coursier.core.Orders$PartialOrdering<T extends java.lang.Object> extends scala.math.PartialOrdering<T>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // coursier/core/Orders$PartialOrdering
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 5, attributes: 7
Constant pool:
   #1 = Utf8               coursier/core/Orders$PartialOrdering
   #2 = Class              #1             // coursier/core/Orders$PartialOrdering
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/PartialOrdering<TT;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/math/PartialOrdering
   #7 = Class              #6             // scala/math/PartialOrdering
   #8 = Utf8               Orders.scala
   #9 = Utf8               coursier/core/Orders
  #10 = Class              #9             // coursier/core/Orders
  #11 = Utf8               PartialOrdering
  #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #13 = Class              #12            // java/lang/invoke/MethodHandles$Lookup
  #14 = Utf8               java/lang/invoke/MethodHandles
  #15 = Class              #14            // java/lang/invoke/MethodHandles
  #16 = Utf8               Lookup
  #17 = Utf8               lteq$
  #18 = Utf8               (Lcoursier/core/Orders$PartialOrdering;Ljava/lang/Object;Ljava/lang/Object;)Z
  #19 = Utf8               $this
  #20 = Utf8               x
  #21 = Utf8               y
  #22 = Utf8               lteq
  #23 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #24 = NameAndType        #22:#23        // lteq:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #25 = InterfaceMethodref #2.#24         // coursier/core/Orders$PartialOrdering.lteq:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #26 = Utf8               Lcoursier/core/Orders$PartialOrdering;
  #27 = Utf8               Ljava/lang/Object;
  #28 = Utf8               (TT;TT;)Z
  #29 = Utf8               tryCompare
  #30 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #31 = NameAndType        #29:#30        // tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #32 = InterfaceMethodref #2.#31         // coursier/core/Orders$PartialOrdering.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #33 = Utf8               (I)Z
  #34 = MethodType         #33            //  (I)Z
  #35 = Utf8               $anonfun$lteq$1
  #36 = NameAndType        #35:#33        // $anonfun$lteq$1:(I)Z
  #37 = InterfaceMethodref #2.#36         // coursier/core/Orders$PartialOrdering.$anonfun$lteq$1:(I)Z
  #38 = MethodHandle       6:#37          // REF_invokeStatic coursier/core/Orders$PartialOrdering.$anonfun$lteq$1:(I)Z
  #39 = Integer            1
  #40 = Utf8               java/lang/invoke/LambdaMetafactory
  #41 = Class              #40            // java/lang/invoke/LambdaMetafactory
  #42 = Utf8               altMetafactory
  #43 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #44 = NameAndType        #42:#43        // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #45 = Methodref          #41.#44        // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #46 = MethodHandle       6:#45          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #47 = Utf8               apply$mcZI$sp
  #48 = Utf8               ()Lscala/runtime/java8/JFunction1$mcZI$sp;
  #49 = NameAndType        #47:#48        // apply$mcZI$sp:()Lscala/runtime/java8/JFunction1$mcZI$sp;
  #50 = InvokeDynamic      #0:#49         // #0:apply$mcZI$sp:()Lscala/runtime/java8/JFunction1$mcZI$sp;
  #51 = Utf8               scala/Option
  #52 = Class              #51            // scala/Option
  #53 = Utf8               exists
  #54 = Utf8               (Lscala/Function1;)Z
  #55 = NameAndType        #53:#54        // exists:(Lscala/Function1;)Z
  #56 = Methodref          #52.#55        // scala/Option.exists:(Lscala/Function1;)Z
  #57 = Utf8               this
  #58 = Utf8               x$1
  #59 = Utf8               I
  #60 = Utf8               $init$
  #61 = Utf8               (Lcoursier/core/Orders$PartialOrdering;)V
  #62 = Utf8               $deserializeLambda$
  #63 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #64 = Utf8               scala/runtime/LambdaDeserialize
  #65 = Class              #64            // scala/runtime/LambdaDeserialize
  #66 = Utf8               bootstrap
  #67 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #68 = NameAndType        #66:#67        // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #69 = Methodref          #65.#68        // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #70 = MethodHandle       6:#69          // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #71 = Utf8               lambdaDeserialize
  #72 = NameAndType        #71:#63        // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #73 = InvokeDynamic      #1:#72         // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #74 = Utf8               Code
  #75 = Utf8               LineNumberTable
  #76 = Utf8               LocalVariableTable
  #77 = Utf8               MethodParameters
  #78 = Utf8               Signature
  #79 = Utf8               StackMapTable
  #80 = Utf8               InnerClasses
  #81 = Utf8               SourceFile
  #82 = Utf8               Deprecated
  #83 = Utf8               BootstrapMethods
  #84 = Utf8               ScalaInlineInfo
  #85 = Utf8               Scala
{
  public static boolean lteq$(coursier.core.Orders$PartialOrdering, java.lang.Object, java.lang.Object);
    descriptor: (Lcoursier/core/Orders$PartialOrdering;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #25                 // InterfaceMethod lteq:(Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lcoursier/core/Orders$PartialOrdering;
            0       7     1     x   Ljava/lang/Object;
            0       7     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default boolean lteq(T, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #32,  3           // InterfaceMethod tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
         8: invokedynamic #50,  0             // InvokeDynamic #0:apply$mcZI$sp:()Lscala/runtime/java8/JFunction1$mcZI$sp;
        13: invokevirtual #56                 // Method scala/Option.exists:(Lscala/Function1;)Z
        16: ireturn
      LineNumberTable:
        line 8: 0
        line 9: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/Orders$PartialOrdering;
            0      17     1     x   Ljava/lang/Object;
            0      17     2     y   Ljava/lang/Object;
    Signature: #28                          // (TT;TT;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static boolean $anonfun$lteq$1(int);
    descriptor: (I)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: iconst_0
         2: if_icmpgt     9
         5: iconst_1
         6: goto          10
         9: iconst_0
        10: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static void $init$(coursier.core.Orders$PartialOrdering);
    descriptor: (Lcoursier/core/Orders$PartialOrdering;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 6: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lcoursier/core/Orders$PartialOrdering;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #73,  0             // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #11= #2 of #10;           // PartialOrdering=class coursier/core/Orders$PartialOrdering of class coursier/core/Orders
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/PartialOrdering<TT;>;
SourceFile: "Orders.scala"
Deprecated: true
BootstrapMethods:
  0: #46 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #34 (I)Z
      #38 REF_invokeStatic coursier/core/Orders$PartialOrdering.$anonfun$lteq$1:(I)Z
      #34 (I)Z
      #39 1
  1: #70 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 REF_invokeStatic coursier/core/Orders$PartialOrdering.$anonfun$lteq$1:(I)Z
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 23 00 21 01 00 3C 00 3D 01 00 16
   00 17 00 00 11 00 12 01
  Scala: length = 0x0 (unknown attribute)

