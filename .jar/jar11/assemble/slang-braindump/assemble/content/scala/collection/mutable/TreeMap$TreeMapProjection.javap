Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/mutable/TreeMap$TreeMapProjection.class
  Last modified May 29, 2022; size 8687 bytes
  SHA-256 checksum 9183bb7de30ad238f60ce7f4963788ca09b0e0b9efc3ce3e598b7c797849ed70
  Compiled from "TreeMap.scala"
public final class scala.collection.mutable.TreeMap$TreeMapProjection extends scala.collection.mutable.TreeMap<K, V>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/mutable/TreeMap$TreeMapProjection
  super_class: #5                         // scala/collection/mutable/TreeMap
  interfaces: 0, fields: 3, methods: 27, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/mutable/TreeMap$TreeMapProjection
    #2 = Class              #1            // scala/collection/mutable/TreeMap$TreeMapProjection
    #3 = Utf8               Lscala/collection/mutable/TreeMap<TK;TV;>;
    #4 = Utf8               scala/collection/mutable/TreeMap
    #5 = Class              #4            // scala/collection/mutable/TreeMap
    #6 = Utf8               TreeMap.scala
    #7 = Utf8               scala/collection/mutable/RedBlackTree$EntriesIterator
    #8 = Class              #7            // scala/collection/mutable/RedBlackTree$EntriesIterator
    #9 = Utf8               scala/collection/mutable/RedBlackTree
   #10 = Class              #9            // scala/collection/mutable/RedBlackTree
   #11 = Utf8               EntriesIterator
   #12 = Utf8               scala/collection/mutable/RedBlackTree$KeysIterator
   #13 = Class              #12           // scala/collection/mutable/RedBlackTree$KeysIterator
   #14 = Utf8               KeysIterator
   #15 = Utf8               scala/collection/mutable/RedBlackTree$Tree
   #16 = Class              #15           // scala/collection/mutable/RedBlackTree$Tree
   #17 = Utf8               Tree
   #18 = Utf8               scala/collection/mutable/RedBlackTree$ValuesIterator
   #19 = Class              #18           // scala/collection/mutable/RedBlackTree$ValuesIterator
   #20 = Utf8               ValuesIterator
   #21 = Utf8               TreeMapProjection
   #22 = Utf8               from
   #23 = Utf8               Lscala/Option;
   #24 = Utf8               Lscala/Option<TK;>;
   #25 = Utf8               until
   #26 = Utf8               $outer
   #27 = Utf8               Lscala/collection/mutable/TreeMap;
   #28 = Utf8               pickLowerBound
   #29 = Utf8               (Lscala/Option;)Lscala/Option;
   #30 = Utf8               (Lscala/Option<TK;>;)Lscala/Option<TK;>;
   #31 = Utf8               newFrom
   #32 = NameAndType        #22:#23       // from:Lscala/Option;
   #33 = Fieldref           #2.#32        // scala/collection/mutable/TreeMap$TreeMapProjection.from:Lscala/Option;
   #34 = Utf8               scala/Some
   #35 = Class              #34           // scala/Some
   #36 = Utf8               value
   #37 = Utf8               ()Ljava/lang/Object;
   #38 = NameAndType        #36:#37       // value:()Ljava/lang/Object;
   #39 = Methodref          #35.#38       // scala/Some.value:()Ljava/lang/Object;
   #40 = Utf8               ordering
   #41 = Utf8               ()Lscala/math/Ordering;
   #42 = NameAndType        #40:#41       // ordering:()Lscala/math/Ordering;
   #43 = Methodref          #2.#42        // scala/collection/mutable/TreeMap$TreeMapProjection.ordering:()Lscala/math/Ordering;
   #44 = Utf8               scala/math/Ordering
   #45 = Class              #44           // scala/math/Ordering
   #46 = Utf8               max
   #47 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #48 = NameAndType        #46:#47       // max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #49 = InterfaceMethodref #45.#48       // scala/math/Ordering.max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #50 = Utf8               <init>
   #51 = Utf8               (Ljava/lang/Object;)V
   #52 = NameAndType        #50:#51       // "<init>":(Ljava/lang/Object;)V
   #53 = Methodref          #35.#52       // scala/Some."<init>":(Ljava/lang/Object;)V
   #54 = Utf8               scala/None$
   #55 = Class              #54           // scala/None$
   #56 = Utf8               MODULE$
   #57 = Utf8               Lscala/None$;
   #58 = NameAndType        #56:#57       // MODULE$:Lscala/None$;
   #59 = Fieldref           #55.#58       // scala/None$.MODULE$:Lscala/None$;
   #60 = Utf8               java/lang/Object
   #61 = Class              #60           // java/lang/Object
   #62 = Utf8               equals
   #63 = Utf8               (Ljava/lang/Object;)Z
   #64 = NameAndType        #62:#63       // equals:(Ljava/lang/Object;)Z
   #65 = Methodref          #61.#64       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #66 = Utf8               newFr
   #67 = Utf8               Ljava/lang/Object;
   #68 = Utf8               fr
   #69 = Utf8               this
   #70 = Utf8               Lscala/collection/mutable/TreeMap$TreeMapProjection;
   #71 = Utf8               scala/Option
   #72 = Class              #71           // scala/Option
   #73 = Utf8               pickUpperBound
   #74 = Utf8               newUntil
   #75 = NameAndType        #25:#23       // until:Lscala/Option;
   #76 = Fieldref           #2.#75        // scala/collection/mutable/TreeMap$TreeMapProjection.until:Lscala/Option;
   #77 = Utf8               min
   #78 = NameAndType        #77:#47       // min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #79 = InterfaceMethodref #45.#78       // scala/math/Ordering.min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #80 = Utf8               newUnt
   #81 = Utf8               unt
   #82 = Utf8               isInsideViewBounds
   #83 = Utf8               (TK;)Z
   #84 = Utf8               key
   #85 = Utf8               isEmpty
   #86 = Utf8               ()Z
   #87 = NameAndType        #85:#86       // isEmpty:()Z
   #88 = Methodref          #72.#87       // scala/Option.isEmpty:()Z
   #89 = Utf8               get
   #90 = NameAndType        #89:#37       // get:()Ljava/lang/Object;
   #91 = Methodref          #72.#90       // scala/Option.get:()Ljava/lang/Object;
   #92 = Utf8               compare
   #93 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I
   #94 = NameAndType        #92:#93       // compare:(Ljava/lang/Object;Ljava/lang/Object;)I
   #95 = InterfaceMethodref #45.#94       // scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
   #96 = Utf8               afterFrom
   #97 = Utf8               Z
   #98 = Utf8               beforeUntil
   #99 = Utf8               rangeImpl
  #100 = Utf8               (Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeMap;
  #101 = Utf8               (Lscala/Option<TK;>;Lscala/Option<TK;>;)Lscala/collection/mutable/TreeMap<TK;TV;>;
  #102 = NameAndType        #26:#27       // $outer:Lscala/collection/mutable/TreeMap;
  #103 = Fieldref           #2.#102       // scala/collection/mutable/TreeMap$TreeMapProjection.$outer:Lscala/collection/mutable/TreeMap;
  #104 = NameAndType        #28:#29       // pickLowerBound:(Lscala/Option;)Lscala/Option;
  #105 = Methodref          #2.#104       // scala/collection/mutable/TreeMap$TreeMapProjection.pickLowerBound:(Lscala/Option;)Lscala/Option;
  #106 = NameAndType        #73:#29       // pickUpperBound:(Lscala/Option;)Lscala/Option;
  #107 = Methodref          #2.#106       // scala/collection/mutable/TreeMap$TreeMapProjection.pickUpperBound:(Lscala/Option;)Lscala/Option;
  #108 = Utf8               (Lscala/collection/mutable/TreeMap;Lscala/Option;Lscala/Option;)V
  #109 = NameAndType        #50:#108      // "<init>":(Lscala/collection/mutable/TreeMap;Lscala/Option;Lscala/Option;)V
  #110 = Methodref          #2.#109       // scala/collection/mutable/TreeMap$TreeMapProjection."<init>":(Lscala/collection/mutable/TreeMap;Lscala/Option;Lscala/Option;)V
  #111 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #112 = Utf8               (TK;)Lscala/Option<TV;>;
  #113 = NameAndType        #82:#63       // isInsideViewBounds:(Ljava/lang/Object;)Z
  #114 = Methodref          #2.#113       // scala/collection/mutable/TreeMap$TreeMapProjection.isInsideViewBounds:(Ljava/lang/Object;)Z
  #115 = Utf8               scala/collection/mutable/RedBlackTree$
  #116 = Class              #115          // scala/collection/mutable/RedBlackTree$
  #117 = Utf8               Lscala/collection/mutable/RedBlackTree$;
  #118 = NameAndType        #56:#117      // MODULE$:Lscala/collection/mutable/RedBlackTree$;
  #119 = Fieldref           #116.#118     // scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
  #120 = Utf8               scala$collection$mutable$TreeMap$$tree
  #121 = Utf8               Lscala/collection/mutable/RedBlackTree$Tree;
  #122 = NameAndType        #120:#121     // scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
  #123 = Fieldref           #5.#122       // scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
  #124 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #125 = NameAndType        #89:#124      // get:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #126 = Methodref          #116.#125     // scala/collection/mutable/RedBlackTree$.get:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #127 = Utf8               iterator
  #128 = Utf8               ()Lscala/collection/Iterator;
  #129 = Utf8               ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;
  #130 = Utf8               size
  #131 = Utf8               ()I
  #132 = NameAndType        #130:#131     // size:()I
  #133 = Methodref          #16.#132      // scala/collection/mutable/RedBlackTree$Tree.size:()I
  #134 = Utf8               scala/collection/Iterator$
  #135 = Class              #134          // scala/collection/Iterator$
  #136 = Utf8               Lscala/collection/Iterator$;
  #137 = NameAndType        #56:#136      // MODULE$:Lscala/collection/Iterator$;
  #138 = Fieldref           #135.#137     // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
  #139 = Utf8               scala$collection$Iterator$$_empty
  #140 = Utf8               Lscala/collection/Iterator;
  #141 = NameAndType        #139:#140     // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
  #142 = Fieldref           #135.#141     // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
  #143 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #144 = NameAndType        #50:#143      // "<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #145 = Methodref          #8.#144       // scala/collection/mutable/RedBlackTree$EntriesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #146 = Utf8               iterator_tree
  #147 = Utf8               iterator_start
  #148 = Utf8               iterator_end
  #149 = Utf8               iterator_evidence$3
  #150 = Utf8               Lscala/math/Ordering;
  #151 = Utf8               keysIterator
  #152 = Utf8               ()Lscala/collection/Iterator<TK;>;
  #153 = Methodref          #13.#144      // scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #154 = Utf8               keysIterator_tree
  #155 = Utf8               keysIterator_start
  #156 = Utf8               keysIterator_end
  #157 = Utf8               keysIterator_evidence$4
  #158 = Utf8               valuesIterator
  #159 = Utf8               ()Lscala/collection/Iterator<TV;>;
  #160 = Methodref          #19.#144      // scala/collection/mutable/RedBlackTree$ValuesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #161 = Utf8               valuesIterator_tree
  #162 = Utf8               valuesIterator_start
  #163 = Utf8               valuesIterator_end
  #164 = Utf8               valuesIterator_evidence$5
  #165 = Utf8               keysIteratorFrom
  #166 = Utf8               (Ljava/lang/Object;)Lscala/collection/Iterator;
  #167 = Utf8               (TK;)Lscala/collection/Iterator<TK;>;
  #168 = Utf8               start
  #169 = Utf8               iteratorFrom
  #170 = Utf8               (TK;)Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;
  #171 = Utf8               valuesIteratorFrom
  #172 = Utf8               (TK;)Lscala/collection/Iterator<TV;>;
  #173 = NameAndType        #127:#128     // iterator:()Lscala/collection/Iterator;
  #174 = Methodref          #2.#173       // scala/collection/mutable/TreeMap$TreeMapProjection.iterator:()Lscala/collection/Iterator;
  #175 = Utf8               scala/collection/Iterator
  #176 = Class              #175          // scala/collection/Iterator
  #177 = InterfaceMethodref #176.#132     // scala/collection/Iterator.size:()I
  #178 = Utf8               knownSize
  #179 = Utf8               hasNext
  #180 = NameAndType        #179:#86      // hasNext:()Z
  #181 = InterfaceMethodref #176.#180     // scala/collection/Iterator.hasNext:()Z
  #182 = Utf8               contains
  #183 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
  #184 = NameAndType        #182:#183     // contains:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
  #185 = Methodref          #116.#184     // scala/collection/mutable/RedBlackTree$.contains:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
  #186 = Utf8               head
  #187 = Utf8               ()Lscala/Tuple2;
  #188 = Utf8               ()Lscala/Tuple2<TK;TV;>;
  #189 = Utf8               headOption
  #190 = Utf8               ()Lscala/Option;
  #191 = NameAndType        #189:#190     // headOption:()Lscala/Option;
  #192 = Methodref          #2.#191       // scala/collection/mutable/TreeMap$TreeMapProjection.headOption:()Lscala/Option;
  #193 = Utf8               scala/Tuple2
  #194 = Class              #193          // scala/Tuple2
  #195 = Utf8               ()Lscala/Option<Lscala/Tuple2<TK;TV;>;>;
  #196 = Utf8               isDefined
  #197 = NameAndType        #196:#86      // isDefined:()Z
  #198 = Methodref          #72.#197      // scala/Option.isDefined:()Z
  #199 = Utf8               minAfter
  #200 = NameAndType        #199:#124     // minAfter:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #201 = Methodref          #116.#200     // scala/collection/mutable/RedBlackTree$.minAfter:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #202 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #203 = NameAndType        #77:#202      // min:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #204 = Methodref          #116.#203     // scala/collection/mutable/RedBlackTree$.min:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #205 = Utf8               _1
  #206 = NameAndType        #205:#37      // _1:()Ljava/lang/Object;
  #207 = Methodref          #194.#206     // scala/Tuple2._1:()Ljava/lang/Object;
  #208 = Utf8               e
  #209 = Utf8               Lscala/Tuple2;
  #210 = Utf8               entry
  #211 = Utf8               last
  #212 = Utf8               lastOption
  #213 = NameAndType        #212:#190     // lastOption:()Lscala/Option;
  #214 = Methodref          #2.#213       // scala/collection/mutable/TreeMap$TreeMapProjection.lastOption:()Lscala/Option;
  #215 = Utf8               maxBefore
  #216 = NameAndType        #215:#124     // maxBefore:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #217 = Methodref          #116.#216     // scala/collection/mutable/RedBlackTree$.maxBefore:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #218 = NameAndType        #46:#202      // max:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #219 = Methodref          #116.#218     // scala/collection/mutable/RedBlackTree$.max:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #220 = Utf8               foreach
  #221 = Utf8               (Lscala/Function1;)V
  #222 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
  #223 = Utf8               f
  #224 = NameAndType        #220:#221     // foreach:(Lscala/Function1;)V
  #225 = InterfaceMethodref #176.#224     // scala/collection/Iterator.foreach:(Lscala/Function1;)V
  #226 = Utf8               Lscala/Function1;
  #227 = Utf8               clone
  #228 = Utf8               ()Lscala/collection/mutable/TreeMap;
  #229 = Utf8               ()Lscala/collection/mutable/TreeMap<TK;TV;>;
  #230 = Utf8               scala/collection/mutable/MapOps
  #231 = Class              #230          // scala/collection/mutable/MapOps
  #232 = Utf8               clone$
  #233 = Utf8               (Lscala/collection/mutable/MapOps;)Lscala/collection/mutable/MapOps;
  #234 = NameAndType        #232:#233     // clone$:(Lscala/collection/mutable/MapOps;)Lscala/collection/mutable/MapOps;
  #235 = InterfaceMethodref #231.#234     // scala/collection/mutable/MapOps.clone$:(Lscala/collection/mutable/MapOps;)Lscala/collection/mutable/MapOps;
  #236 = NameAndType        #99:#100      // rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeMap;
  #237 = Methodref          #5.#236       // scala/collection/mutable/TreeMap.rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeMap;
  #238 = NameAndType        #227:#228     // clone:()Lscala/collection/mutable/TreeMap;
  #239 = Methodref          #2.#238       // scala/collection/mutable/TreeMap$TreeMapProjection.clone:()Lscala/collection/mutable/TreeMap;
  #240 = Utf8               ()Lscala/collection/mutable/MapOps;
  #241 = NameAndType        #211:#187     // last:()Lscala/Tuple2;
  #242 = Methodref          #2.#241       // scala/collection/mutable/TreeMap$TreeMapProjection.last:()Lscala/Tuple2;
  #243 = NameAndType        #186:#187     // head:()Lscala/Tuple2;
  #244 = Methodref          #2.#243       // scala/collection/mutable/TreeMap$TreeMapProjection.head:()Lscala/Tuple2;
  #245 = Utf8               (Lscala/Option;Lscala/Option;)Ljava/lang/Object;
  #246 = Methodref          #2.#236       // scala/collection/mutable/TreeMap$TreeMapProjection.rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeMap;
  #247 = Utf8               (Lscala/Option<TK;>;Lscala/Option<TK;>;)V
  #248 = Methodref          #5.#42        // scala/collection/mutable/TreeMap.ordering:()Lscala/math/Ordering;
  #249 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
  #250 = NameAndType        #50:#249      // "<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
  #251 = Methodref          #5.#250       // scala/collection/mutable/TreeMap."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
  #252 = Utf8               Signature
  #253 = Utf8               Code
  #254 = Utf8               StackMapTable
  #255 = Utf8               LineNumberTable
  #256 = Utf8               LocalVariableTable
  #257 = Utf8               MethodParameters
  #258 = Utf8               InnerClasses
  #259 = Utf8               SourceFile
  #260 = Utf8               ScalaInlineInfo
  #261 = Utf8               Scala
{
  private final scala.Option<K> from;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #24                          // Lscala/Option<TK;>;

  private final scala.Option<K> until;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #24                          // Lscala/Option<TK;>;

  private final scala.collection.mutable.TreeMap $outer;
    descriptor: Lscala/collection/mutable/TreeMap;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private scala.Option<K> pickLowerBound(scala.Option<K>);
    descriptor: (Lscala/Option;)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=2
         0: aload_0
         1: getfield      #33                 // Field from:Lscala/Option;
         4: astore        5
         6: aload         5
         8: instanceof    #35                 // class scala/Some
        11: ifeq          62
        14: aload         5
        16: checkcast     #35                 // class scala/Some
        19: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        22: astore_3
        23: aload_1
        24: instanceof    #35                 // class scala/Some
        27: ifeq          62
        30: aload_1
        31: checkcast     #35                 // class scala/Some
        34: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        37: astore        4
        39: new           #35                 // class scala/Some
        42: dup
        43: aload_0
        44: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        47: aload_3
        48: aload         4
        50: invokeinterface #49,  3           // InterfaceMethod scala/math/Ordering.max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        55: invokespecial #53                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        58: astore_2
        59: goto          83
        62: getstatic     #59                 // Field scala/None$.MODULE$:Lscala/None$;
        65: aload         5
        67: invokevirtual #65                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        70: ifeq          78
        73: aload_1
        74: astore_2
        75: goto          83
        78: aload_0
        79: getfield      #33                 // Field from:Lscala/Option;
        82: astore_2
        83: aload_2
        84: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, class scala/Option, top, top, top, class scala/Option ]
          stack = []
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 173: 0
        line 174: 6
        line 175: 62
        line 176: 78
        line 173: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      23     4 newFr   Ljava/lang/Object;
           23      39     3    fr   Ljava/lang/Object;
            0      85     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      85     1 newFrom   Lscala/Option;
    Signature: #30                          // (Lscala/Option<TK;>;)Lscala/Option<TK;>;
    MethodParameters:
      Name                           Flags
      newFrom                        final

  private scala.Option<K> pickUpperBound(scala.Option<K>);
    descriptor: (Lscala/Option;)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=2
         0: aload_0
         1: getfield      #76                 // Field until:Lscala/Option;
         4: astore        5
         6: aload         5
         8: instanceof    #35                 // class scala/Some
        11: ifeq          62
        14: aload         5
        16: checkcast     #35                 // class scala/Some
        19: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        22: astore_3
        23: aload_1
        24: instanceof    #35                 // class scala/Some
        27: ifeq          62
        30: aload_1
        31: checkcast     #35                 // class scala/Some
        34: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        37: astore        4
        39: new           #35                 // class scala/Some
        42: dup
        43: aload_0
        44: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        47: aload_3
        48: aload         4
        50: invokeinterface #79,  3           // InterfaceMethod scala/math/Ordering.min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        55: invokespecial #53                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        58: astore_2
        59: goto          83
        62: getstatic     #59                 // Field scala/None$.MODULE$:Lscala/None$;
        65: aload         5
        67: invokevirtual #65                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        70: ifeq          78
        73: aload_1
        74: astore_2
        75: goto          83
        78: aload_0
        79: getfield      #76                 // Field until:Lscala/Option;
        82: astore_2
        83: aload_2
        84: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, class scala/Option, top, top, top, class scala/Option ]
          stack = []
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 182: 0
        line 183: 6
        line 184: 62
        line 185: 78
        line 182: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      23     4 newUnt   Ljava/lang/Object;
           23      39     3   unt   Ljava/lang/Object;
            0      85     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      85     1 newUntil   Lscala/Option;
    Signature: #30                          // (Lscala/Option<TK;>;)Lscala/Option<TK;>;
    MethodParameters:
      Name                           Flags
      newUntil                       final

  private boolean isInsideViewBounds(K);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: getfield      #33                 // Field from:Lscala/Option;
         4: invokevirtual #88                 // Method scala/Option.isEmpty:()Z
         7: ifne          31
        10: aload_0
        11: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        14: aload_0
        15: getfield      #33                 // Field from:Lscala/Option;
        18: invokevirtual #91                 // Method scala/Option.get:()Ljava/lang/Object;
        21: aload_1
        22: invokeinterface #95,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        27: iconst_0
        28: if_icmpgt     35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: istore_2
        37: aload_0
        38: getfield      #76                 // Field until:Lscala/Option;
        41: invokevirtual #88                 // Method scala/Option.isEmpty:()Z
        44: ifne          68
        47: aload_0
        48: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        51: aload_1
        52: aload_0
        53: getfield      #76                 // Field until:Lscala/Option;
        56: invokevirtual #91                 // Method scala/Option.get:()Ljava/lang/Object;
        59: invokeinterface #95,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        64: iconst_0
        65: if_icmpge     72
        68: iconst_1
        69: goto          73
        72: iconst_0
        73: istore_3
        74: iload_2
        75: ifeq          84
        78: iload_3
        79: ifeq          84
        82: iconst_1
        83: ireturn
        84: iconst_0
        85: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 31 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 10
          locals = [ int ]
      LineNumberTable:
        line 192: 0
        line 193: 37
        line 194: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37      48     2 afterFrom   Z
           74      11     3 beforeUntil   Z
            0      86     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      86     1   key   Ljava/lang/Object;
    Signature: #83                          // (TK;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.collection.mutable.TreeMap<K, V> rangeImpl(scala.Option<K>, scala.Option<K>);
    descriptor: (Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: new           #2                  // class scala/collection/mutable/TreeMap$TreeMapProjection
         3: dup
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: aload_0
         9: aload_1
        10: invokespecial #105                // Method pickLowerBound:(Lscala/Option;)Lscala/Option;
        13: aload_0
        14: aload_2
        15: invokespecial #107                // Method pickUpperBound:(Lscala/Option;)Lscala/Option;
        18: invokespecial #110                // Method "<init>":(Lscala/collection/mutable/TreeMap;Lscala/Option;Lscala/Option;)V
        21: areturn
      LineNumberTable:
        line 198: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      22     1  from   Lscala/Option;
            0      22     2 until   Lscala/Option;
    Signature: #101                         // (Lscala/Option<TK;>;Lscala/Option<TK;>;)Lscala/collection/mutable/TreeMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      from                           final
      until                          final

  public scala.Option<V> get(K);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #114                // Method isInsideViewBounds:(Ljava/lang/Object;)Z
         5: ifeq          27
         8: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        11: aload_0
        12: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        15: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        18: aload_1
        19: aload_0
        20: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        23: invokevirtual #126                // Method scala/collection/mutable/RedBlackTree$.get:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
        26: areturn
        27: getstatic     #59                 // Field scala/None$.MODULE$:Lscala/None$;
        30: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 27 /* same */
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      31     1   key   Ljava/lang/Object;
    Signature: #112                         // (TK;)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.collection.Iterator<scala.Tuple2<K, V>> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=1
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     26
        18: getstatic     #138                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        21: pop
        22: getstatic     #142                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        25: areturn
        26: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        29: pop
        30: aload_0
        31: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        34: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        37: aload_0
        38: getfield      #33                 // Field from:Lscala/Option;
        41: aload_0
        42: getfield      #76                 // Field until:Lscala/Option;
        45: aload_0
        46: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        49: astore        4
        51: astore_3
        52: astore_2
        53: astore_1
        54: new           #8                  // class scala/collection/mutable/RedBlackTree$EntriesIterator
        57: dup
        58: aload_1
        59: aload_2
        60: aload_3
        61: aload         4
        63: invokespecial #145                // Method scala/collection/mutable/RedBlackTree$EntriesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        66: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 26 /* same */
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      67     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
           54      12     1 iterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           54      12     2 iterator_start   Lscala/Option;
           54      12     3 iterator_end   Lscala/Option;
           54      12     4 iterator_evidence$3   Lscala/math/Ordering;
    Signature: #129                         // ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;

  public scala.collection.Iterator<K> keysIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=1
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     26
        18: getstatic     #138                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        21: pop
        22: getstatic     #142                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        25: areturn
        26: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        29: pop
        30: aload_0
        31: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        34: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        37: aload_0
        38: getfield      #33                 // Field from:Lscala/Option;
        41: aload_0
        42: getfield      #76                 // Field until:Lscala/Option;
        45: aload_0
        46: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        49: astore        4
        51: astore_3
        52: astore_2
        53: astore_1
        54: new           #13                 // class scala/collection/mutable/RedBlackTree$KeysIterator
        57: dup
        58: aload_1
        59: aload_2
        60: aload_3
        61: aload         4
        63: invokespecial #153                // Method scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        66: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 26 /* same */
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      67     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
           54      12     1 keysIterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           54      12     2 keysIterator_start   Lscala/Option;
           54      12     3 keysIterator_end   Lscala/Option;
           54      12     4 keysIterator_evidence$4   Lscala/math/Ordering;
    Signature: #152                         // ()Lscala/collection/Iterator<TK;>;

  public scala.collection.Iterator<V> valuesIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=1
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     26
        18: getstatic     #138                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        21: pop
        22: getstatic     #142                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        25: areturn
        26: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        29: pop
        30: aload_0
        31: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        34: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        37: aload_0
        38: getfield      #33                 // Field from:Lscala/Option;
        41: aload_0
        42: getfield      #76                 // Field until:Lscala/Option;
        45: aload_0
        46: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        49: astore        4
        51: astore_3
        52: astore_2
        53: astore_1
        54: new           #19                 // class scala/collection/mutable/RedBlackTree$ValuesIterator
        57: dup
        58: aload_1
        59: aload_2
        60: aload_3
        61: aload         4
        63: invokespecial #160                // Method scala/collection/mutable/RedBlackTree$ValuesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        66: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 26 /* same */
      LineNumberTable:
        line 204: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      67     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
           54      12     1 valuesIterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           54      12     2 valuesIterator_start   Lscala/Option;
           54      12     3 valuesIterator_end   Lscala/Option;
           54      12     4 valuesIterator_evidence$5   Lscala/math/Ordering;
    Signature: #159                         // ()Lscala/collection/Iterator<TV;>;

  public scala.collection.Iterator<K> keysIteratorFrom(K);
    descriptor: (Ljava/lang/Object;)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=2
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     26
        18: getstatic     #138                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        21: pop
        22: getstatic     #142                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        25: areturn
        26: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        29: pop
        30: aload_0
        31: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        34: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        37: aload_0
        38: new           #35                 // class scala/Some
        41: dup
        42: aload_1
        43: invokespecial #53                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        46: invokespecial #105                // Method pickLowerBound:(Lscala/Option;)Lscala/Option;
        49: aload_0
        50: getfield      #76                 // Field until:Lscala/Option;
        53: aload_0
        54: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        57: astore        5
        59: astore        4
        61: astore_3
        62: astore_2
        63: new           #13                 // class scala/collection/mutable/RedBlackTree$KeysIterator
        66: dup
        67: aload_2
        68: aload_3
        69: aload         4
        71: aload         5
        73: invokespecial #153                // Method scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        76: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 26 /* same */
      LineNumberTable:
        line 205: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      77     1 start   Ljava/lang/Object;
           63      13     2 keysIterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           63      13     3 keysIterator_start   Lscala/Option;
           63      13     4 keysIterator_end   Lscala/Option;
           63      13     5 keysIterator_evidence$4   Lscala/math/Ordering;
    Signature: #167                         // (TK;)Lscala/collection/Iterator<TK;>;
    MethodParameters:
      Name                           Flags
      start                          final

  public scala.collection.Iterator<scala.Tuple2<K, V>> iteratorFrom(K);
    descriptor: (Ljava/lang/Object;)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=2
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     26
        18: getstatic     #138                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        21: pop
        22: getstatic     #142                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        25: areturn
        26: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        29: pop
        30: aload_0
        31: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        34: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        37: aload_0
        38: new           #35                 // class scala/Some
        41: dup
        42: aload_1
        43: invokespecial #53                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        46: invokespecial #105                // Method pickLowerBound:(Lscala/Option;)Lscala/Option;
        49: aload_0
        50: getfield      #76                 // Field until:Lscala/Option;
        53: aload_0
        54: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        57: astore        5
        59: astore        4
        61: astore_3
        62: astore_2
        63: new           #8                  // class scala/collection/mutable/RedBlackTree$EntriesIterator
        66: dup
        67: aload_2
        68: aload_3
        69: aload         4
        71: aload         5
        73: invokespecial #145                // Method scala/collection/mutable/RedBlackTree$EntriesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        76: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 26 /* same */
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      77     1 start   Ljava/lang/Object;
           63      13     2 iterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           63      13     3 iterator_start   Lscala/Option;
           63      13     4 iterator_end   Lscala/Option;
           63      13     5 iterator_evidence$3   Lscala/math/Ordering;
    Signature: #170                         // (TK;)Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;
    MethodParameters:
      Name                           Flags
      start                          final

  public scala.collection.Iterator<V> valuesIteratorFrom(K);
    descriptor: (Ljava/lang/Object;)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=2
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     26
        18: getstatic     #138                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        21: pop
        22: getstatic     #142                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        25: areturn
        26: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        29: pop
        30: aload_0
        31: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        34: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        37: aload_0
        38: new           #35                 // class scala/Some
        41: dup
        42: aload_1
        43: invokespecial #53                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        46: invokespecial #105                // Method pickLowerBound:(Lscala/Option;)Lscala/Option;
        49: aload_0
        50: getfield      #76                 // Field until:Lscala/Option;
        53: aload_0
        54: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        57: astore        5
        59: astore        4
        61: astore_3
        62: astore_2
        63: new           #19                 // class scala/collection/mutable/RedBlackTree$ValuesIterator
        66: dup
        67: aload_2
        68: aload_3
        69: aload         4
        71: aload         5
        73: invokespecial #160                // Method scala/collection/mutable/RedBlackTree$ValuesIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        76: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 26 /* same */
      LineNumberTable:
        line 207: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      77     1 start   Ljava/lang/Object;
           63      13     2 valuesIterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           63      13     3 valuesIterator_start   Lscala/Option;
           63      13     4 valuesIterator_end   Lscala/Option;
           63      13     5 valuesIterator_evidence$5   Lscala/math/Ordering;
    Signature: #172                         // (TK;)Lscala/collection/Iterator<TV;>;
    MethodParameters:
      Name                           Flags
      start                          final

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     20
        18: iconst_0
        19: ireturn
        20: aload_0
        21: invokevirtual #174                // Method iterator:()Lscala/collection/Iterator;
        24: dup
        25: ifnonnull     30
        28: aconst_null
        29: athrow
        30: invokeinterface #177,  1          // InterfaceMethod scala/collection/Iterator.size:()I
        35: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/collection/Iterator ]
      LineNumberTable:
        line 208: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     20
        18: iconst_0
        19: ireturn
        20: iconst_m1
        21: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
         8: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #133                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpeq     30
        18: aload_0
        19: invokevirtual #174                // Method iterator:()Lscala/collection/Iterator;
        22: invokeinterface #181,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        27: ifne          32
        30: iconst_1
        31: ireturn
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;

  public boolean contains(K);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #114                // Method isInsideViewBounds:(Ljava/lang/Object;)Z
         5: ifeq          31
         8: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        11: aload_0
        12: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        15: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        18: aload_1
        19: aload_0
        20: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        23: invokevirtual #185                // Method scala/collection/mutable/RedBlackTree$.contains:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
        26: ifeq          31
        29: iconst_1
        30: ireturn
        31: iconst_0
        32: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 31 /* same */
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      33     1   key   Ljava/lang/Object;
    Signature: #83                          // (TK;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.Tuple2<K, V> head();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #192                // Method headOption:()Lscala/Option;
         4: invokevirtual #91                 // Method scala/Option.get:()Ljava/lang/Object;
         7: checkcast     #194                // class scala/Tuple2
        10: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
    Signature: #188                         // ()Lscala/Tuple2<TK;TV;>;

  public scala.Option<scala.Tuple2<K, V>> headOption();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: getfield      #33                 // Field from:Lscala/Option;
         4: invokevirtual #198                // Method scala/Option.isDefined:()Z
         7: ifeq          37
        10: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        13: aload_0
        14: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        17: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        20: aload_0
        21: getfield      #33                 // Field from:Lscala/Option;
        24: invokevirtual #91                 // Method scala/Option.get:()Ljava/lang/Object;
        27: aload_0
        28: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        31: invokevirtual #201                // Method scala/collection/mutable/RedBlackTree$.minAfter:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
        34: goto          50
        37: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        40: aload_0
        41: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        44: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        47: invokevirtual #204                // Method scala/collection/mutable/RedBlackTree$.min:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
        50: astore_2
        51: aload_0
        52: getfield      #76                 // Field until:Lscala/Option;
        55: astore        5
        57: aload_2
        58: instanceof    #35                 // class scala/Some
        61: ifeq          119
        64: aload_2
        65: checkcast     #35                 // class scala/Some
        68: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        71: checkcast     #194                // class scala/Tuple2
        74: astore_3
        75: aload         5
        77: instanceof    #35                 // class scala/Some
        80: ifeq          119
        83: aload         5
        85: checkcast     #35                 // class scala/Some
        88: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        91: astore        4
        93: aload_0
        94: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        97: aload_3
        98: invokevirtual #207                // Method scala/Tuple2._1:()Ljava/lang/Object;
       101: aload         4
       103: invokeinterface #95,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
       108: iconst_0
       109: if_icmplt     119
       112: getstatic     #59                 // Field scala/None$.MODULE$:Lscala/None$;
       115: astore_1
       116: goto          121
       119: aload_2
       120: astore_1
       121: aload_1
       122: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 37 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, top, class scala/Option, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 215: 0
        line 216: 51
        line 217: 57
        line 218: 119
        line 216: 121
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           93      26     4   unt   Ljava/lang/Object;
           75      44     3     e   Lscala/Tuple2;
           51      71     2 entry   Lscala/Option;
            0     123     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
    Signature: #195                         // ()Lscala/Option<Lscala/Tuple2<TK;TV;>;>;

  public scala.Tuple2<K, V> last();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #214                // Method lastOption:()Lscala/Option;
         4: invokevirtual #91                 // Method scala/Option.get:()Ljava/lang/Object;
         7: checkcast     #194                // class scala/Tuple2
        10: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
    Signature: #188                         // ()Lscala/Tuple2<TK;TV;>;

  public scala.Option<scala.Tuple2<K, V>> lastOption();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: getfield      #76                 // Field until:Lscala/Option;
         4: invokevirtual #198                // Method scala/Option.isDefined:()Z
         7: ifeq          37
        10: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        13: aload_0
        14: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        17: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        20: aload_0
        21: getfield      #76                 // Field until:Lscala/Option;
        24: invokevirtual #91                 // Method scala/Option.get:()Ljava/lang/Object;
        27: aload_0
        28: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        31: invokevirtual #217                // Method scala/collection/mutable/RedBlackTree$.maxBefore:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
        34: goto          50
        37: getstatic     #119                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        40: aload_0
        41: getfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        44: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        47: invokevirtual #219                // Method scala/collection/mutable/RedBlackTree$.max:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
        50: astore_2
        51: aload_0
        52: getfield      #33                 // Field from:Lscala/Option;
        55: astore        5
        57: aload_2
        58: instanceof    #35                 // class scala/Some
        61: ifeq          119
        64: aload_2
        65: checkcast     #35                 // class scala/Some
        68: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        71: checkcast     #194                // class scala/Tuple2
        74: astore_3
        75: aload         5
        77: instanceof    #35                 // class scala/Some
        80: ifeq          119
        83: aload         5
        85: checkcast     #35                 // class scala/Some
        88: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        91: astore        4
        93: aload_0
        94: invokevirtual #43                 // Method ordering:()Lscala/math/Ordering;
        97: aload_3
        98: invokevirtual #207                // Method scala/Tuple2._1:()Ljava/lang/Object;
       101: aload         4
       103: invokeinterface #95,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
       108: iconst_0
       109: if_icmpge     119
       112: getstatic     #59                 // Field scala/None$.MODULE$:Lscala/None$;
       115: astore_1
       116: goto          121
       119: aload_2
       120: astore_1
       121: aload_1
       122: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 37 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, top, class scala/Option, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/mutable/TreeMap$TreeMapProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 224: 0
        line 225: 51
        line 226: 57
        line 227: 119
        line 225: 121
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           93      26     4    fr   Ljava/lang/Object;
           75      44     3     e   Lscala/Tuple2;
           51      71     2 entry   Lscala/Option;
            0     123     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
    Signature: #195                         // ()Lscala/Option<Lscala/Tuple2<TK;TV;>;>;

  public <U extends java.lang.Object> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #174                // Method iterator:()Lscala/collection/Iterator;
         4: aload_1
         5: invokeinterface #225,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
        10: return
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      11     1     f   Lscala/Function1;
    Signature: #222                         // <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.collection.mutable.TreeMap<K, V> clone();
    descriptor: ()Lscala/collection/mutable/TreeMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #235                // InterfaceMethod scala/collection/mutable/MapOps.clone$:(Lscala/collection/mutable/MapOps;)Lscala/collection/mutable/MapOps;
         4: checkcast     #5                  // class scala/collection/mutable/TreeMap
         7: aload_0
         8: getfield      #33                 // Field from:Lscala/Option;
        11: aload_0
        12: getfield      #76                 // Field until:Lscala/Option;
        15: invokevirtual #237                // Method scala/collection/mutable/TreeMap.rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeMap;
        18: areturn
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
    Signature: #229                         // ()Lscala/collection/mutable/TreeMap<TK;TV;>;

  public java.lang.Object clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #239                // Method clone:()Lscala/collection/mutable/TreeMap;
         4: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;

  public scala.collection.mutable.MapOps clone();
    descriptor: ()Lscala/collection/mutable/MapOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #239                // Method clone:()Lscala/collection/mutable/TreeMap;
         4: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;

  public java.lang.Object last();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #242                // Method last:()Lscala/Tuple2;
         4: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;

  public java.lang.Object head();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #244                // Method head:()Lscala/Tuple2;
         4: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;

  public java.lang.Object rangeImpl(scala.Option, scala.Option);
    descriptor: (Lscala/Option;Lscala/Option;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #246                // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeMap;
         6: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0       7     1  from   Lscala/Option;
            0       7     2 until   Lscala/Option;
    MethodParameters:
      Name                           Flags
      from                           final
      until                          final

  public scala.collection.mutable.TreeMap$TreeMapProjection(scala.Option<K>, scala.Option<K>);
    descriptor: (Lscala/collection/mutable/TreeMap;Lscala/Option;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #33                 // Field from:Lscala/Option;
         5: aload_0
         6: aload_3
         7: putfield      #76                 // Field until:Lscala/Option;
        10: aload_1
        11: ifnonnull     16
        14: aconst_null
        15: athrow
        16: aload_0
        17: aload_1
        18: putfield      #103                // Field $outer:Lscala/collection/mutable/TreeMap;
        21: aload_0
        22: aload_1
        23: getfield      #123                // Field scala/collection/mutable/TreeMap.scala$collection$mutable$TreeMap$$tree:Lscala/collection/mutable/RedBlackTree$Tree;
        26: aload_1
        27: invokevirtual #248                // Method scala/collection/mutable/TreeMap.ordering:()Lscala/math/Ordering;
        30: invokespecial #251                // Method scala/collection/mutable/TreeMap."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
        33: return
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/collection/mutable/TreeMap$TreeMapProjection;
            0      34     1 $outer   Lscala/collection/mutable/TreeMap;
            0      34     2  from   Lscala/Option;
            0      34     3 until   Lscala/Option;
    Signature: #247                         // (Lscala/Option<TK;>;Lscala/Option<TK;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      from                           final
      until                          final
}
InnerClasses:
  private static final #11= #8 of #10;    // EntriesIterator=class scala/collection/mutable/RedBlackTree$EntriesIterator of class scala/collection/mutable/RedBlackTree
  private static final #14= #13 of #10;   // KeysIterator=class scala/collection/mutable/RedBlackTree$KeysIterator of class scala/collection/mutable/RedBlackTree
  public static final #17= #16 of #10;    // Tree=class scala/collection/mutable/RedBlackTree$Tree of class scala/collection/mutable/RedBlackTree
  private static final #20= #19 of #10;   // ValuesIterator=class scala/collection/mutable/RedBlackTree$ValuesIterator of class scala/collection/mutable/RedBlackTree
  private final #21= #2 of #5;            // TreeMapProjection=class scala/collection/mutable/TreeMap$TreeMapProjection of class scala/collection/mutable/TreeMap
Signature: #3                           // Lscala/collection/mutable/TreeMap<TK;TV;>;
SourceFile: "TreeMap.scala"
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 01 00 1B 00 32 00 6C 01 00 E3 00 25 01 00 E3
   00 F0 01 00 E3 00 E4 01 00 B6 00 3F 01 00 DC 00
   DD 01 00 59 00 6F 01 00 BA 00 25 01 00 BA 00 BB
   01 00 BD 00 BE 01 00 55 00 56 01 00 52 00 3F 01
   00 7F 00 80 01 00 A9 00 A6 01 00 97 00 80 01 00
   A5 00 A6 01 00 B2 00 83 01 00 D3 00 25 01 00 D3
   00 BB 01 00 D4 00 BE 01 00 1C 00 1D 01 00 49 00
   1D 01 00 63 00 F5 01 00 63 00 64 01 00 82 00 83
   01 00 9E 00 80 01 00 AB 00 A6 01
  Scala: length = 0x0 (unknown attribute)

