Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/cache/internal/ThreadUtil$.class
  Last modified May 29, 2022; size 2983 bytes
  SHA-256 checksum d1032ad276ab4936b0c479adc09a359fe247da18dce26400785784104e1faf8b
  Compiled from "ThreadUtil.scala"
public final class coursier.cache.internal.ThreadUtil$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/internal/ThreadUtil$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 7, attributes: 4
Constant pool:
    #1 = Utf8               coursier/cache/internal/ThreadUtil$
    #2 = Class              #1            // coursier/cache/internal/ThreadUtil$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ThreadUtil.scala
    #6 = Utf8               coursier/cache/internal/ThreadUtil$$anon$1
    #7 = Class              #6            // coursier/cache/internal/ThreadUtil$$anon$1
    #8 = Utf8               MODULE$
    #9 = Utf8               Lcoursier/cache/internal/ThreadUtil$;
   #10 = Utf8               poolNumber
   #11 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;
   #12 = Utf8               <clinit>
   #13 = Utf8               ()V
   #14 = Utf8               <init>
   #15 = NameAndType        #14:#13       // "<init>":()V
   #16 = Methodref          #2.#15        // coursier/cache/internal/ThreadUtil$."<init>":()V
   #17 = NameAndType        #8:#9         // MODULE$:Lcoursier/cache/internal/ThreadUtil$;
   #18 = Fieldref           #2.#17        // coursier/cache/internal/ThreadUtil$.MODULE$:Lcoursier/cache/internal/ThreadUtil$;
   #19 = Utf8               java/util/concurrent/atomic/AtomicInteger
   #20 = Class              #19           // java/util/concurrent/atomic/AtomicInteger
   #21 = Utf8               (I)V
   #22 = NameAndType        #14:#21       // "<init>":(I)V
   #23 = Methodref          #20.#22       // java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
   #24 = NameAndType        #10:#11       // poolNumber:Ljava/util/concurrent/atomic/AtomicInteger;
   #25 = Fieldref           #2.#24        // coursier/cache/internal/ThreadUtil$.poolNumber:Ljava/util/concurrent/atomic/AtomicInteger;
   #26 = Utf8               ()Ljava/util/concurrent/atomic/AtomicInteger;
   #27 = Utf8               this
   #28 = Utf8               daemonThreadFactory
   #29 = Utf8               ()Ljava/util/concurrent/ThreadFactory;
   #30 = NameAndType        #10:#26       // poolNumber:()Ljava/util/concurrent/atomic/AtomicInteger;
   #31 = Methodref          #2.#30        // coursier/cache/internal/ThreadUtil$.poolNumber:()Ljava/util/concurrent/atomic/AtomicInteger;
   #32 = Utf8               getAndIncrement
   #33 = Utf8               ()I
   #34 = NameAndType        #32:#33       // getAndIncrement:()I
   #35 = Methodref          #20.#34       // java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
   #36 = Utf8               (Ljava/util/concurrent/atomic/AtomicInteger;I)V
   #37 = NameAndType        #14:#36       // "<init>":(Ljava/util/concurrent/atomic/AtomicInteger;I)V
   #38 = Methodref          #7.#37        // coursier/cache/internal/ThreadUtil$$anon$1."<init>":(Ljava/util/concurrent/atomic/AtomicInteger;I)V
   #39 = Utf8               poolNumber0
   #40 = Utf8               I
   #41 = Utf8               threadNumber
   #42 = Utf8               fixedThreadPool
   #43 = Utf8               (I)Ljava/util/concurrent/ExecutorService;
   #44 = Utf8               size
   #45 = NameAndType        #28:#29       // daemonThreadFactory:()Ljava/util/concurrent/ThreadFactory;
   #46 = Methodref          #2.#45        // coursier/cache/internal/ThreadUtil$.daemonThreadFactory:()Ljava/util/concurrent/ThreadFactory;
   #47 = Utf8               java/util/concurrent/ThreadPoolExecutor
   #48 = Class              #47           // java/util/concurrent/ThreadPoolExecutor
   #49 = Utf8               java/util/concurrent/TimeUnit
   #50 = Class              #49           // java/util/concurrent/TimeUnit
   #51 = Utf8               MINUTES
   #52 = Utf8               Ljava/util/concurrent/TimeUnit;
   #53 = NameAndType        #51:#52       // MINUTES:Ljava/util/concurrent/TimeUnit;
   #54 = Fieldref           #50.#53       // java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
   #55 = Utf8               java/util/concurrent/LinkedBlockingQueue
   #56 = Class              #55           // java/util/concurrent/LinkedBlockingQueue
   #57 = Methodref          #56.#15       // java/util/concurrent/LinkedBlockingQueue."<init>":()V
   #58 = Utf8               (IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
   #59 = NameAndType        #14:#58       // "<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
   #60 = Methodref          #48.#59       // java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
   #61 = Utf8               allowCoreThreadTimeOut
   #62 = Utf8               (Z)V
   #63 = NameAndType        #61:#62       // allowCoreThreadTimeOut:(Z)V
   #64 = Methodref          #48.#63       // java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
   #65 = Utf8               factory
   #66 = Utf8               Ljava/util/concurrent/ThreadFactory;
   #67 = Utf8               executor
   #68 = Utf8               Ljava/util/concurrent/ThreadPoolExecutor;
   #69 = Utf8               fixedScheduledThreadPool
   #70 = Utf8               (I)Ljava/util/concurrent/ScheduledExecutorService;
   #71 = Utf8               java/util/concurrent/ScheduledThreadPoolExecutor
   #72 = Class              #71           // java/util/concurrent/ScheduledThreadPoolExecutor
   #73 = Utf8               (ILjava/util/concurrent/ThreadFactory;)V
   #74 = NameAndType        #14:#73       // "<init>":(ILjava/util/concurrent/ThreadFactory;)V
   #75 = Methodref          #72.#74       // java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
   #76 = Utf8               setKeepAliveTime
   #77 = Utf8               (JLjava/util/concurrent/TimeUnit;)V
   #78 = NameAndType        #76:#77       // setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
   #79 = Methodref          #72.#78       // java/util/concurrent/ScheduledThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
   #80 = Methodref          #72.#63       // java/util/concurrent/ScheduledThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
   #81 = Utf8               Ljava/util/concurrent/ScheduledThreadPoolExecutor;
   #82 = Utf8               withFixedThreadPool
   #83 = Utf8               (ILscala/Function1;)Ljava/lang/Object;
   #84 = Utf8               <T:Ljava/lang/Object;>(ILscala/Function1<Ljava/util/concurrent/ExecutorService;TT;>;)TT;
   #85 = Utf8               f
   #86 = NameAndType        #42:#43       // fixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
   #87 = Methodref          #2.#86        // coursier/cache/internal/ThreadUtil$.fixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
   #88 = Utf8               scala/Function1
   #89 = Class              #88           // scala/Function1
   #90 = Utf8               apply
   #91 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #92 = NameAndType        #90:#91       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #93 = InterfaceMethodref #89.#92       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #94 = Utf8               java/util/concurrent/ExecutorService
   #95 = Class              #94           // java/util/concurrent/ExecutorService
   #96 = Utf8               java/lang/Throwable
   #97 = Class              #96           // java/lang/Throwable
   #98 = Utf8               shutdown
   #99 = NameAndType        #98:#13       // shutdown:()V
  #100 = InterfaceMethodref #95.#99       // java/util/concurrent/ExecutorService.shutdown:()V
  #101 = Utf8               pool
  #102 = Utf8               Ljava/util/concurrent/ExecutorService;
  #103 = Utf8               Lscala/Function1;
  #104 = Methodref          #4.#15        // java/lang/Object."<init>":()V
  #105 = Utf8               Code
  #106 = Utf8               LineNumberTable
  #107 = Utf8               LocalVariableTable
  #108 = Utf8               MethodParameters
  #109 = Utf8               StackMapTable
  #110 = Utf8               Signature
  #111 = Utf8               InnerClasses
  #112 = Utf8               SourceFile
  #113 = Utf8               ScalaInlineInfo
  #114 = Utf8               Scala
{
  public static final coursier.cache.internal.ThreadUtil$ MODULE$;
    descriptor: Lcoursier/cache/internal/ThreadUtil$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.util.concurrent.atomic.AtomicInteger poolNumber;
    descriptor: Ljava/util/concurrent/atomic/AtomicInteger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class coursier/cache/internal/ThreadUtil$
         3: dup
         4: invokespecial #16                 // Method "<init>":()V
         7: putstatic     #18                 // Field MODULE$:Lcoursier/cache/internal/ThreadUtil$;
        10: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
        13: dup
        14: iconst_1
        15: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
        18: putstatic     #25                 // Field poolNumber:Ljava/util/concurrent/atomic/AtomicInteger;
        21: return
      LineNumberTable:
        line 6: 0
        line 8: 10
        line 6: 21

  private java.util.concurrent.atomic.AtomicInteger poolNumber();
    descriptor: ()Ljava/util/concurrent/atomic/AtomicInteger;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #25                 // Field poolNumber:Ljava/util/concurrent/atomic/AtomicInteger;
         3: areturn
      LineNumberTable:
        line 8: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/cache/internal/ThreadUtil$;

  public java.util.concurrent.ThreadFactory daemonThreadFactory();
    descriptor: ()Ljava/util/concurrent/ThreadFactory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokespecial #31                 // Method poolNumber:()Ljava/util/concurrent/atomic/AtomicInteger;
         4: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
         7: istore_1
         8: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
        11: dup
        12: iconst_1
        13: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
        16: astore_2
        17: new           #7                  // class coursier/cache/internal/ThreadUtil$$anon$1
        20: dup
        21: aload_2
        22: iload_1
        23: invokespecial #38                 // Method coursier/cache/internal/ThreadUtil$$anon$1."<init>":(Ljava/util/concurrent/atomic/AtomicInteger;I)V
        26: areturn
      LineNumberTable:
        line 12: 0
        line 14: 8
        line 16: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      18     1 poolNumber0   I
           17       9     2 threadNumber   Ljava/util/concurrent/atomic/AtomicInteger;
            0      27     0  this   Lcoursier/cache/internal/ThreadUtil$;

  public java.util.concurrent.ExecutorService fixedThreadPool(int);
    descriptor: (I)Ljava/util/concurrent/ExecutorService;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #46                 // Method daemonThreadFactory:()Ljava/util/concurrent/ThreadFactory;
         4: astore_2
         5: new           #48                 // class java/util/concurrent/ThreadPoolExecutor
         8: dup
         9: iload_1
        10: iload_1
        11: lconst_1
        12: getstatic     #54                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
        15: new           #56                 // class java/util/concurrent/LinkedBlockingQueue
        18: dup
        19: invokespecial #57                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
        22: aload_2
        23: invokespecial #60                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
        26: astore_3
        27: aload_3
        28: iconst_1
        29: invokevirtual #64                 // Method java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
        32: aload_3
        33: areturn
      LineNumberTable:
        line 29: 0
        line 32: 5
        line 33: 9
        line 34: 11
        line 35: 15
        line 36: 22
        line 38: 27
        line 39: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      28     2 factory   Ljava/util/concurrent/ThreadFactory;
           27       6     3 executor   Ljava/util/concurrent/ThreadPoolExecutor;
            0      34     0  this   Lcoursier/cache/internal/ThreadUtil$;
            0      34     1  size   I
    MethodParameters:
      Name                           Flags
      size                           final

  public java.util.concurrent.ScheduledExecutorService fixedScheduledThreadPool(int);
    descriptor: (I)Ljava/util/concurrent/ScheduledExecutorService;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #46                 // Method daemonThreadFactory:()Ljava/util/concurrent/ThreadFactory;
         4: astore_2
         5: new           #72                 // class java/util/concurrent/ScheduledThreadPoolExecutor
         8: dup
         9: iload_1
        10: aload_2
        11: invokespecial #75                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
        14: astore_3
        15: aload_3
        16: lconst_1
        17: getstatic     #54                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
        20: invokevirtual #79                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
        23: aload_3
        24: iconst_1
        25: invokevirtual #80                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
        28: aload_3
        29: areturn
      LineNumberTable:
        line 44: 0
        line 46: 5
        line 47: 15
        line 48: 23
        line 49: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      24     2 factory   Ljava/util/concurrent/ThreadFactory;
           15      14     3 executor   Ljava/util/concurrent/ScheduledThreadPoolExecutor;
            0      30     0  this   Lcoursier/cache/internal/ThreadUtil$;
            0      30     1  size   I
    MethodParameters:
      Name                           Flags
      size                           final

  public <T extends java.lang.Object> T withFixedThreadPool(int, scala.Function1<java.util.concurrent.ExecutorService, T>);
    descriptor: (ILscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=3
         0: aconst_null
         1: astore_3
         2: aload_0
         3: iload_1
         4: invokevirtual #87                 // Method fixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
         7: astore_3
         8: aload_2
         9: aload_3
        10: invokeinterface #93,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        15: goto          36
        18: astore        4
        20: aload_3
        21: ifnull        33
        24: aload_3
        25: invokeinterface #100,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
        30: goto          33
        33: aload         4
        35: athrow
        36: aload_3
        37: ifnull        49
        40: aload_3
        41: invokeinterface #100,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
        46: goto          49
        49: areturn
      Exception table:
         from    to  target type
             2    18    18   any
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class coursier/cache/internal/ThreadUtil$, int, class scala/Function1, class java/util/concurrent/ExecutorService ]
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/internal/ThreadUtil$, int, class scala/Function1, class java/util/concurrent/ExecutorService ]
          stack = [ class java/lang/Object ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 54: 0
        line 56: 2
        line 57: 8
        line 59: 20
        line 60: 24
        line 59: 33
        line 60: 40
        line 59: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      47     3  pool   Ljava/util/concurrent/ExecutorService;
            0      50     0  this   Lcoursier/cache/internal/ThreadUtil$;
            0      50     1  size   I
            0      50     2     f   Lscala/Function1;
    Signature: #84                          // <T:Ljava/lang/Object;>(ILscala/Function1<Ljava/util/concurrent/ExecutorService;TT;>;)TT;
    MethodParameters:
      Name                           Flags
      size                           final
      f                              final

  private coursier.cache.internal.ThreadUtil$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #104                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 64: 0
        line 6: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/internal/ThreadUtil$;
}
InnerClasses:
  public final #7;                        // class coursier/cache/internal/ThreadUtil$$anon$1
SourceFile: "ThreadUtil.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 0E 00 0D 01 00 1C 00 1D 01 00 45
   00 46 01 00 2A 00 2B 01 00 0A 00 1A 01 00 52 00
   53 01
  Scala: length = 0x0 (unknown attribute)

