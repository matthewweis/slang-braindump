Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/Fetch.class
  Last modified May 29, 2022; size 38211 bytes
  SHA-256 checksum b24658ed7b842339ec2a82360b56bdec3e019624c5f36bd4ebc096d90c52310c
  Compiled from "Fetch.scala"
public final class coursier.Fetch<F extends java.lang.Object> extends java.lang.Object implements scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/Fetch
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 3, methods: 96, attributes: 7
Constant pool:
    #1 = Utf8               coursier/Fetch
    #2 = Class              #1            // coursier/Fetch
    #3 = Utf8               <F:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Product
    #7 = Class              #6            // scala/Product
    #8 = Utf8               java/io/Serializable
    #9 = Class              #8            // java/io/Serializable
   #10 = Utf8               Fetch.scala
   #11 = Utf8               Lscala/reflect/ScalaSignature;
   #12 = Utf8               bytes
   #13 = Utf8               \u0006\u0005\u0019UaaBA\u0016\u0003[\u0011\u00111\u0007\u0005\u000b\u0003C\u0002!Q1A\u0005\n\u0005\r\u0004BCAE\u0001\t\u0005\t\u0015!\u0003\u0002f!Q\u00111\u0012\u0001\u0003\u0006\u0004%I!!$\t\u0015\u0005U\u0005A!A!\u0002\u0013\ty\t\u0003\u0006\u0002\u0018\u0002\u0011)\u0019!C\u0001\u00033C!\"!-\u0001\u0005\u0003\u0005\u000b\u0011BAN\u0011\u001d\t\u0019\f\u0001C\u0001\u0003kCq!a0\u0001\t\u0003\t\t\rC\u0004\u0002V\u0002!\t!a6\t\u000f\u0005\u0005\b\u0001\"\u0001\u0002d\"9\u00111\u001f\u0001\u0005\u0002\u0005U\bbBA\u007f\u0001\u0011\u0005\u0011q \u0005\b\u0005\u0017\u0001A\u0011\u0001B\u0007\u0011\u001d\u0011y\u0002\u0001C\u0001\u0005CAqAa\u000e\u0001\t\u0003\u0011I\u0004C\u0004\u0003H\u0001!\tA!\u0013\t\u000f\t\u0005\u0004\u0001\"\u0001\u0003d!9!Q\u000e\u0001\u0005\u0002\t=\u0004b\u0002B>\u0001\u0011\u0005!Q\u0010\u0005\b\u00057\u0003A\u0011\u0001BO\u0011\u001d\u0011\u0019\u000b\u0001C\u0001\u0005KCqAa*\u0001\t\u0017\u0011I\u0004C\u0004\u0003*\u0002!IAa+\t\u000f\t\r\u0007\u0001\"\u0001\u0003&\"9!Q\u0019\u0001\u0005\u0002\t\u001d\u0007b\u0002Bf\u0001\u0011\u0005!Q\u001a\u0005\b\u0005/\u0004A\u0011\u0001Bm\u0011\u001d\u0011i\u000e\u0001C\u0001\u0005?DqA!:\u0001\t\u0003\u00119\u000fC\u0004\u0003j\u0002!\tAa;\t\u000f\t=\b\u0001\"\u0001\u0003r\"9!q\u001f\u0001\u0005\u0002\te\bb\u0002B\u007f\u0001\u0011\u0005!q \u0005\b\u0007\u000f\u0001A\u0011AB\u0005\u0011\u001d\u0019i\u0001\u0001C\u0001\u0007\u001fAqaa\u0005\u0001\t\u0003\u0019)\u0002C\u0004\u0004\u001a\u0001!\taa\u0007\t\u000f\r\r\u0002\u0001\"\u0001\u0004&!911\u0005\u0001\u0005\u0002\r-\u0002bBB\u0019\u0001\u0011\u000511\u0007\u0005\b\u0007o\u0001A\u0011AB\u001d\u0011\u001d\u0019Y\u0004\u0001C\u0001\u0007{Aqaa\u0011\u0001\t\u0003\u0019)\u0005C\u0004\u0004J\u0001!\ta!\u000f\t\u000f\r-\u0003\u0001\"\u0001\u0004N!91\u0011\u000b\u0001\u0005\u0002\rM\u0003bBB,\u0001\u0011\u00051\u0011\f\u0005\b\u0007?\u0002A\u0011AB1\u0011\u001d\u0019y\u0006\u0001C\u0001\u0007sAqa!\u001d\u0001\t\u0003\u0019\u0019\bC\u0004\u0004z\u0001!\taa\u001f\t\u000f\r\u0005\u0005\u0001\"\u0001\u0004:!911\u0011\u0001\u0005\u0002\r\u0015\u0005bBBE\u0001\u0011\u00051\u0011\b\u0005\b\u0007\u0017\u0003A\u0011ABG\u0011\u001d\u0019\u0019\n\u0001C\u0001\u0007+Cqa!\'\u0001\t\u0003\u0019Y\nC\u0004\u0004 \u0002!\ta!)\t\u000f\u0005\u001d\u0006\u0001\"\u0001\u0006l\"9Qq\u001e\u0001\u0005\u0002\u0015E\bbBC{\u0001\u0011\u0005Qq\u001f\u0005\b\u000bw\u0004A\u0011AC\u007f\u0011\u001d!\t\t\u0001C!\t\u0007Cq\u0001b#\u0001\t\u00032\t\u0001C\u0004\u0005\u0014\u0002!\tE\"\u0002\t\u000f\u0011e\u0005\u0001\"\u0011\u0005\u001c\"9A1\u0015\u0001\u0005\n\u0019%\u0001b\u0002CU\u0001\u0011\u0005C1\u0016\u0005\b\t[\u0003A\u0011\tCX\u0011\u001d!\t\f\u0001C!\r\u001bAq\u0001\"/\u0001\t\u00032\tb\u0002\u0005\u0004*\u00065\u0002\u0012ABV\r!\tY#!\f\t\u0002\r5\u0006bBAZ\u0013\u0012\u000511\u0017\u0005\b\u0007kKE\u0011AB\\\u0011\u001d\u0019),\u0013C\u0001\u0007\u00034aa!7J\u0007\rm\u0007BDBr\u001b\u0012\u0005\tQ!BC\u0002\u0013%1Q\u001d\u0005\f\u0007Ol%Q!A!\u0002\u0013\u0019I\fC\u0004\u000246#\ta!;\t\u000f\rMX\n\"\u0001\u0004v\"IA\u0011Z\'\u0012\u0002\u0013\u0005A1\u001a\u0005\b\tClE\u0011\u0001Cr\u0011%!Y/TI\u0001\n\u0003!Y\rC\u0004\u0005n6#\t\u0001b<\t\u0013\u0015\u001dQ*%A\u0005\u0002\u0011-\u0007bBC\u0005\u001b\u0012\u0005Q1\u0002\u0005\n\u000b\'i\u0015\u0013!C\u0001\t\u0017Dq!\"\u0006N\t\u0003)9\u0002C\u0005\u0006\u001e5\u000b\n\u0011\"\u0001\u0005L\"9QqD\'\u0005\u0002\u0015\u0005\u0002\"CC\u0014\u001bF\u0005I\u0011\u0001Cf\u0011%!I*TA\u0001\n\u0003\"Y\nC\u0005\u0005\u00146\u000b\t\u0011\"\u0011\u0006*!IQqF%\u0002\u0002\u0013\rQ\u0011\u0007\u0005\b\u0007kKE\u0011AC\u001b\r\u0019!9!\u0013\u0002\u0005\n!QA1B1\u0003\u0006\u0004%\t\u0001\"\u0004\t\u0015\u0011=\u0011M!A!\u0002\u0013\u0011I\u0002\u0003\u0006\u0005\u0012\u0005\u0014)\u0019!C\u0001\t\'A!\u0002\"\bb\u0005\u0003\u0005\u000b\u0011\u0002C\u000b\u0011)!y\"\u0019BC\u0002\u0013\u0005A\u0011\u0005\u0005\u000b\tW\t\'\u0011!Q\u0001\n\u0011\r\u0002bBAZC\u0012\u0005AQ\u0006\u0005\b\u0003g\u000bG\u0011\u0001C\u001b\u0011\u001d!9$\u0019C\u0001\tsAq\u0001b\u0010b\t\u0003!\t\u0005C\u0004\u0002\f\u0006$\t\u0001\"\u0011\t\u000f\u0011\u001d\u0013\r\"\u0001\u0005\"!9A\u0011J1\u0005\u0002\u0011-\u0003b\u0002C(C\u0012\u0005A\u0011\u000b\u0005\b\u0007\u0017\u000bG\u0011\u0001C3\u0011\u001d!y\'\u0019C\u0001\tcBq\u0001\"\u001eb\t\u0003!9\bC\u0004\u0005|\u0005$\t\u0001\" \t\u000f\u0011\u0005\u0015\r\"\u0011\u0005\u0004\"9A1R1\u0005B\u00115\u0005b\u0002CJC\u0012\u0005CQ\u0013\u0005\b\t3\u000bG\u0011\tCN\u0011\u001d!\u0019+\u0019C\u0005\tKCq\u0001\"+b\t\u0003\"Y\u000bC\u0004\u0005.\u0006$\t\u0005b,\t\u000f\u0011E\u0016\r\"\u0011\u00054\"9A\u0011X1\u0005B\u0011mvaBC\'\u0013\"\u0005Qq\n\u0004\b\t\u000fI\u0005\u0012AC)\u0011\u001d\t\u0019L C\u0001\u000b\'Bqa!.\u007f\t\u0003!)\u0004C\u0004\u00046z$\t!\"\u0016\t\u0013\u0015uc0!A\u0005\n\u0015}s!CC\u0018\u0013\u0006\u0005\t\u0012AC4\r%\u0019I.SA\u0001\u0012\u0003)I\u0007\u0003\u0005\u00024\u0006%A\u0011AC6\u0011!)i\'!\u0003\u0005\u0006\u0015=\u0004\u0002CC>\u0003\u0013!)!\" \t\u0015\u0015\u001d\u0015\u0011BI\u0001\n\u000b)I\t\u0003\u0006\u0006\u000e\u0006%\u0011\u0013!C\u0003\u000b\u001fC\u0001\"b%\u0002\n\u0011\u0015QQ\u0013\u0005\t\u000b?\u000bI\u0001\"\u0002\u0006\"\"QQ1VA\u0005#\u0003%)!\",\t\u0015\u0015E\u0016\u0011BI\u0001\n\u000b)\u0019\f\u0003\u0005\u00068\u0006%AQAC]\u0011!)\u0019-!\u0003\u0005\u0006\u0015\u0015\u0007BCCh\u0003\u0013\t\n\u0011\"\u0002\u0006R\"QQQ[A\u0005#\u0003%)!b6\t\u0015\u0015m\u0017\u0011BA\u0001\n\u000b)i\u000e\u0003\u0006\u0006b\u0006%\u0011\u0011!C\u0003\u000bGD\u0011\"\"\u0018J\u0003\u0003%I!b\u0018\u0003\u000b\u0019+Go\u00195\u000b\u0005\u0005=\u0012\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001U!\u0011QGA9\'\u001d\u0001\u0011qGA\"\u0003\u0013\u0002B!!\u000f\u0002@5\u0011\u00111\b\u0006\u0003\u0003{\tQa]2bY\u0006LA!!\u0011\u0002<\t1\u0011I\\=SK\u001a\u0004B!!\u000f\u0002F%!\u0011qIA\u001e\u0005\u001d\u0001&o\u001c3vGR\u0004B!a\u0013\u0002\\9!\u0011QJA,\u001d\u0011\ty%!\u0016\u000e\u0005\u0005E#\u0002BA*\u0003c\ta\u0001\u0010:p_Rt\u0014BAA\u001f\u0013\u0011\tI&a\u000f\u0002\u000fA\f7m[1hK&!\u0011QLA0\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\u0011\tI&a\u000f\u0002\u000fI,7o\u001c7wKV\u0011\u0011Q\r\t\u0007\u0003O\nI\'!\u001c\u000e\u0005\u00055\u0012\u0002BA6\u0003[\u0011qAU3t_24X\r\u0005\u0003\u0002p\u0005ED\u0002\u0001\u0003\b\u0003g\u0002!\u0019AA;\u0005\u00051U\u0003BA<\u0003\u000b\u000bB!!\u001f\u0002\u0000A!\u0011\u0011HA>\u0013\u0011\ti(a\u000f\u0003\u000f9{G\u000f[5oOB!\u0011\u0011HAA\u0013\u0011\t\u0019)a\u000f\u0003\u0007\u0005s\u0017\u0010\u0002\u0005\u0002\b\u0006E$\u0019AA<\u0005\u0005y\u0016\u0001\u0003:fg>dg/\u001a\u0011\u0002\u0013\u0005\u0014H/\u001b4bGR\u001cXCAAH!\u0019\t9\'!%\u0002n%!\u00111SA\u0017\u0005%\t%\u000f^5gC\u000e$8/\u0001\u0006beRLg-Y2ug\u0002\nQBZ3uG\"\u001c\u0015m\u00195f\u001fB$XCAAN!\u0019\tI$!(\u0002\"&!\u0011qTA\u001e\u0005\u0019y\u0005\u000f^5p]B!\u00111UAW\u001b\t\t)K\u0003\u0003\u0002(\u0006%\u0016AA5p\u0015\t\tY+\u0001\u0003kCZ\f\u0017\u0002BAX\u0003K\u0013AAR5mK\u0006qa-\u001a;dQ\u000e\u000b7\r[3PaR\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0005\u00028\u0006e\u00161XA_!\u0015\t9\u0007AA7\u0011\u001d\t\tg\u0002a\u0001\u0003KBq!a#\b\u0001\u0004\ty\tC\u0004\u0002\u0018\u001e\u0001\r!a\'\u0002\u0019\u0011,\u0007/\u001a8eK:\u001c\u0017.Z:\u0016\u0005\u0005\r\u0007CBA&\u0003\u000b\fI-\u0003\u0003\u0002H\u0006}#aA*fcB!\u00111ZAh\u001d\u0011\t9\'!4\n\t\u0005e\u0013QF\u0005\u0005\u0003#\f\u0019N\u0001\u0006EKB,g\u000eZ3oGfTA!!\u0017\u0002.\u0005a!/\u001a9pg&$xN]5fgV\u0011\u0011\u0011\u001c\t\u0007\u0003\u0017\n)-a7\u0011\t\u0005-\u0017Q\\\u0005\u0005\u0003?\f\u0019N\u0001\u0006SKB|7/\u001b;pef\fq!\\5se>\u00148/\u0006\u0002\u0002fB1\u00111JAc\u0003O\u0004B!!;\u0002p6\u0011\u00111\u001e\u0006\u0005\u0003[\fi#\u0001\u0004qCJ\fWn]\u0005\u0005\u0003c\fYO\u0001\u0004NSJ\u0014xN]\u0001\u0011e\u0016\u001cx\u000e\\;uS>t\u0007+\u0019:b[N,\"!a>\u0011\t\u0005%\u0018\u0011`\u0005\u0005\u0003w\fYO\u0001\tSKN|G.\u001e;j_:\u0004\u0016M]1ng\u0006)1-Y2iKV\u0011!\u0011\u0001\t\u0007\u0005\u0007\u00119!!\u001c\u000e\u0005\t\u0015!\u0002BA\u007f\u0003[IAA!\u0003\u0003\u0006\t)1)Y2iK\u0006QA\u000f\u001b:pk\u001eDw\n\u001d;\u0016\u0005\t=\u0001CBA\u001d\u0003;\u0013\t\u0002\u0005\u0005\u0002:\tM!q\u0003B\f\u0013\u0011\u0011)\"a\u000f\u0003\u0013\u0019+hn\u0019;j_:\f\u0004CBA8\u0003c\u0012I\u0002\u0005\u0003\u0002L\nm\u0011\u0002\u0002B\u000f\u0003\'\u0014!BU3t_2,H/[8o\u0003M!(/\u00198tM>\u0014XNR3uG\",\'o\u00149u+\t\u0011\u0019\u0003\u0005\u0004\u0002:\u0005u%Q\u0005\t\t\u0003s\u0011\u0019Ba\n\u0003(A1!\u0011\u0006B\u0018\u0003[rA!a3\u0003,%!!QFAj\u0003E\u0011Vm]8mkRLwN\u001c)s_\u000e,7o]\u0005\u0005\u0003W\u0011\tD\u0003\u0003\u0003.\tM\"\u0002\u0002B\u001b\u0003[\tAaY8sK\u0006!1/\u001f8d+\t\u0011Y\u0004\u0005\u0004\u0003>\t\r\u0013QN\u0007\u0003\u0005\u007fQAA!\u0011\u0002.\u0005!Q\u000f^5m\u0013\u0011\u0011)Ea\u0010\u0003\tMKhnY\u0001\fG2\f7o]5gS\u0016\u00148/\u0006\u0002\u0003LA1!Q\nB+\u00057rAAa\u0014\u0003RA!\u0011qJA\u001e\u0013\u0011\u0011\u0019&a\u000f\u0002\rA\u0013X\rZ3g\u0013\u0011\u00119F!\u0017\u0003\u0007M+GO\u0003\u0003\u0003T\u0005m\u0002\u0003BAf\u0005;JAAa\u0018\u0002T\nQ1\t\\1tg&4\u0017.\u001a:\u0002!5\f\u0017N\\!si&4\u0017m\u0019;t\u001fB$XC\u0001B3!\u0019\tI$!(\u0003hA!\u0011\u0011\bB5\u0013\u0011\u0011Y\'a\u000f\u0003\u000f\t{w\u000e\\3b]\u0006\u0001\u0012M\u001d;jM\u0006\u001cG\u000fV=qKN|\u0005\u000f^\u000b\u0003\u0005c\u0002b!!\u000f\u0002\u001e\nM\u0004C\u0002B\'\u0005+\u0012)\b\u0005\u0003\u0002L\n]\u0014\u0002\u0002B=\u0003\'\u0014A\u0001V=qK\u0006\tR\r\u001f;sC\u0006\u0013H/\u001b4bGR\u001c8+Z9\u0016\u0005\t}\u0004CBA&\u0003\u000b\u0014\t\t\u0005\u0005\u0002:\tM!1\u0011BM!\u0019\tY%!2\u0003\u0006BQ\u0011\u0011\bBD\u0003\u0013\u0014YIa%\n\t\t%\u00151\b\u0002\u0007)V\u0004H.Z\u001a\u0011\t\t5%qR\u0007\u0003\u0005gIAA!%\u00034\tY\u0001+\u001e2mS\u000e\fG/[8o!\u0011\u0011iD!&\n\t\t]%q\b\u0002\t\u0003J$\u0018NZ1diB1\u00111JAc\u0005\'\u000b!\u0003\u001e:b]N4wN]7BeRLg-Y2ugV\u0011!q\u0014\t\u0007\u0003\u0017\n)M!)\u0011\u0011\u0005e\"1\u0003BB\u0005\u0007\u000bab\u00197bgN\u0004\u0018\r\u001e5Pe\u0012,\'/\u0006\u0002\u0003h\u0005\t1+A\u0006dC\u000eDWmS3z\u001fB$XC\u0001BW!\u0019\tI$!(\u00030B!!\u0011\u0017B_\u001d\u0011\u0011\u0019L!/\u000e\u0005\tU&\u0002\u0002B\\\u0003[\t\u0001\"\u001b8uKJt\u0017\r\\\u0005\u0005\u0005w\u0013),\u0001\u0006GKR\u001c\u0007nQ1dQ\u0016LAAa0\u0003B\n\u00191*Z=\u000b\t\tm&QW\u0001\fG\u0006t\')Z\"bG\",G-\u0001\txSRDG)\u001a9f]\u0012,gnY5fgR!\u0011q\u0017Be\u0011\u001d\ty,\u0007a\u0001\u0003\u0007\fq\"\u00193e\t\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u000b\u0005\u0003o\u0013y\rC\u0004\u0002@j\u0001\rA!5\u0011\r\u0005e\"1[Ae\u0013\u0011\u0011).a\u000f\u0003\u0015q\u0012X\r]3bi\u0016$g(\u0001\txSRD\'+\u001a9pg&$xN]5fgR!\u0011q\u0017Bn\u0011\u001d\t)n\u0007a\u0001\u00033\fq\"\u00193e%\u0016\u0004xn]5u_JLWm\u001d\u000b\u0005\u0003o\u0013\t\u000fC\u0004\u0002Vr\u0001\rAa9\u0011\r\u0005e\"1[An\u0003%qw.T5se>\u00148/\u0006\u0002\u00028\u0006Yq/\u001b;i\u001b&\u0014(o\u001c:t)\u0011\t9L!<\t\u000f\u0005\u0005h\u00041\u0001\u0002f\u0006Q\u0011\r\u001a3NSJ\u0014xN]:\u0015\t\u0005]&1\u001f\u0005\b\u0003C|\u0002\u0019\u0001B{!\u0019\tIDa5\u0002h\u0006!r/\u001b;i%\u0016\u001cx\u000e\\;uS>t\u0007+\u0019:b[N$B!a.\u0003|\"9\u00111\u001f\u0011A\u0002\u0005]\u0018aE7baJ+7o\u001c7vi&|g\u000eU1sC6\u001cH\u0003BA\\\u0007\u0003Aqaa\u0001\"\u0001\u0004\u0019)!A\u0001g!!\tIDa\u0005\u0002x\u0006]\u0018!C<ji\"\u001c\u0015m\u00195f)\u0011\t9la\u0003\t\u000f\u0005u(\u00051\u0001\u0003\u0002\u0005\u0001r/\u001b;i%\u0016\u001cx\u000e\u001c<f\u0007\u0006\u001c\u0007.\u001a\u000b\u0005\u0003o\u001b\t\u0002C\u0004\u0002~\u000e\u0002\rA!\u0001\u0002%]LG\u000f[!si&4\u0017m\u0019;t\u0007\u0006\u001c\u0007.\u001a\u000b\u0005\u0003o\u001b9\u0002C\u0004\u0002~\u0012\u0002\rA!\u0001\u00021]LG\u000f[(uQ\u0016\u0014\u0018I\u001d;jM\u0006\u001cGo]\"bG\",7\u000f\u0006\u0003\u00028\u000eu\u0001bBB\u0010K\u0001\u00071\u0011E\u0001\u0007G\u0006\u001c\u0007.Z:\u0011\r\u0005-\u0013Q\u0019B\u0001\u000399\u0018\u000e\u001e5GKR\u001c\u0007nQ1dQ\u0016$B!a.\u0004(!91\u0011\u0006\u0014A\u0002\u0005\u0005\u0016\u0001\u00037pG\u0006$\u0018n\u001c8\u0015\t\u0005]6Q\u0006\u0005\b\u0007_9\u0003\u0019AAN\u0003-awnY1uS>tw\n\u001d;\u0002\'Q\u0014\u0018M\\:g_Jl\'+Z:pYV$\u0018n\u001c8\u0015\t\u0005]6Q\u0007\u0005\b\u0007\u0007A\u0003\u0019\u0001B\t\u0003Uqw\u000e\u0016:b]N4wN]7SKN|G.\u001e;j_:$\"!a.\u0002/]LG\u000f\u001b+sC:\u001chm\u001c:n%\u0016\u001cx\u000e\\;uS>tG\u0003BA\\\u0007\u007fAqa!\u0011+\u0001\u0004\u0011y!\u0001\u0003g\u001fB$\u0018\u0001\u0005;sC:\u001chm\u001c:n\r\u0016$8\r[3s)\u0011\t9la\u0012\t\u000f\r\r1\u00061\u0001\u0003&\u0005\u0011bn\u001c+sC:\u001chm\u001c:n\r\u0016$8\r[3s\u0003Q9\u0018\u000e\u001e5Ue\u0006t7OZ8s[\u001a+Go\u00195feR!\u0011qWB(\u0011\u001d\u0019\t%\fa\u0001\u0005G\tqb^5uQ\u000ec\u0017m]:jM&,\'o\u001d\u000b\u0005\u0003o\u001b)\u0006C\u0004\u0003H9\u0002\rAa\u0013\u0002\u001d\u0005$Gm\u00117bgNLg-[3sgR!\u0011qWB.\u0011\u001d\u00119e\fa\u0001\u0007;\u0002b!!\u000f\u0003T\nm\u0013!E<ji\"l\u0015-\u001b8BeRLg-Y2ugR!\u0011qWB2\u0011\u001d\u0019)\u0007\ra\u0001\u0007O\nQ\"\\1j]\u0006\u0013H/\u001b4bGR\u001c\b\u0003BB5\u0007_j!aa\u001b\u000b\t\r5\u0014\u0011V\u0001\u0005Y\u0006tw-\u0003\u0003\u0003l\r-\u0014!E<ji\"\f%\u000f^5gC\u000e$H+\u001f9fgR!\u0011qWB;\u0011\u001d\u00199H\ra\u0001\u0005g\nQ\"\u0019:uS\u001a\f7\r\u001e+za\u0016\u001c\u0018\u0001E1eI\u0006\u0013H/\u001b4bGR$\u0016\u0010]3t)\u0011\t9l! \t\u000f\r]4\u00071\u0001\u0004\u0000A1\u0011\u0011\bBj\u0005k\n\u0001#\u00197m\u0003J$\u0018NZ1diRK\b/Z:\u0002#\u0005$G-\u0012=ue\u0006\f%\u000f^5gC\u000e$8\u000f\u0006\u0003\u00028\u000e\u001d\u0005bBB\u0002k\u0001\u0007!\u0011Q\u0001\u0011]>,\u0005\u0010\u001e:b\u0003J$\u0018NZ1diN\f!c^5uQ\u0016CHO]1BeRLg-Y2ugR!\u0011qWBH\u0011\u001d\u0019\tj\u000ea\u0001\u0005\u007f\n\u0011\u0001\\\u0001\u0016C\u0012$GK]1og\u001a|\'/\\!si&4\u0017m\u0019;t)\u0011\t9la&\t\u000f\r\r\u0001\b1\u0001\u0003\"\u0006\u0011r/\u001b;i\u00072\f7o\u001d9bi\"|%\u000fZ3s)\u0011\t9l!(\t\u000f\t\r\u0016\b1\u0001\u0003h\u0005A\u0011n\u001c*fgVdG/\u0006\u0002\u0004$B1\u0011qNA9\u0007K\u00032aa*b\u001d\r\t9\u0007S\u0001\u0006\r\u0016$8\r\u001b\t\u0004\u0003OJ5#B%\u00028\r=\u0006\u0003BAR\u0007cKA!!\u0018\u0002&R\u001111V\u0001\u0006CB\u0004H.\u001f\u000b\u0003\u0007s\u0003R!a\u001a\u0001\u0007w\u0003BA!\u0010\u0004>&!1q\u0018B \u0005\u0011!\u0016m]6\u0016\t\r\r71\u001a\u000b\u0005\u0007\u000b\u001c)\u000e\u0006\u0003\u0004H\u000eE\u0007#BA4\u0001\r%\u0007\u0003BA8\u0007\u0017$q!a\u001dM\u0005\u0004\u0019i-\u0006\u0003\u0002x\r=G\u0001CAD\u0007\u0017\u0014\r!a\u001e\t\u000f\t\u001dF\nq\u0001\u0004TB1!Q\bB\"\u0007\u0013Dq!!@M\u0001\u0004\u00199\u000e\u0005\u0004\u0003\u0004\t\u001d1\u0011\u001a\u0002\r\r\u0016$8\r\u001b+bg.|\u0005o]\n\u0004\u001b\u000eu\u0007\u0003BA\u001d\u0007?LAa!9\u0002<\t1\u0011I\\=WC2\f!eY8veNLWM\u001d\u0013GKR\u001c\u0007\u000e\n$fi\u000eDG+Y:l\u001fB\u001cH\u0005\n4fi\u000eDWCAB]\u0003\r\u001aw.\u001e:tS\u0016\u0014HER3uG\"$c)\u001a;dQR\u000b7o[(qg\u0012\"c-\u001a;dQ\u0002\"Baa;\u0004pB\u00191Q^\'\u000e\u0003%Cqa!=Q\u0001\u0004\u0019I,A\u0003gKR\u001c\u0007.\u0001\u0007gkR,(/\u001a*fgVdG\u000f\u0006\u0002\u0004xR!1\u0011 C`!\u0019\u0019Y\u0010\"\u0001\u0005\u00065\u00111Q \u0006\u0005\u0007\u007f\fY$\u0001\u0006d_:\u001cWO\u001d:f]RLA\u0001b\u0001\u0004~\n1a)\u001e;ve\u0016\u00042a!<b\u0005\u0019\u0011Vm];miN9\u0011-a\u000e\u0002D\u0005%\u0013A\u0003:fg>dW\u000f^5p]V\u0011!\u0011D\u0001\fe\u0016\u001cx\u000e\\;uS>t\u0007%A\u000bgk2dG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:\u0016\u0005\u0011U\u0001CBA&\u0003\u000b$9\u0002\u0005\u0007\u0002:\u0011e\u0011\u0011\u001aBF\u0005\'\u000bY*\u0003\u0003\u0005\u001c\u0005m\"A\u0002+va2,G\'\u0001\fgk2dG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:!\u0003I1W\u000f\u001c7FqR\u0014\u0018-\u0011:uS\u001a\f7\r^:\u0016\u0005\u0011\r\u0002CBA&\u0003\u000b$)\u0003\u0005\u0005\u0002:\u0011\u001d\"1SAN\u0013\u0011!I#a\u000f\u0003\rQ+\b\u000f\\33\u0003M1W\u000f\u001c7FqR\u0014\u0018-\u0011:uS\u001a\f7\r^:!)!!)\u0001b\f\u00052\u0011M\u0002b\u0002C\u0006Q\u0002\u0007!\u0011\u0004\u0005\b\t#A\u0007\u0019\u0001C\u000b\u0011\u001d!y\u0002\u001ba\u0001\tG!\"\u0001\"\u0002\u0002#\u0011,G/Y5mK\u0012\f%\u000f^5gC\u000e$8/\u0006\u0002\u0005<A1\u00111JAc\t{\u0001B\"!\u000f\u0005\u001a\u0005%\'1\u0012BJ\u0003C\u000ba\"\u001a=ue\u0006\f%\u000f^5gC\u000e$8/\u0006\u0002\u0005DA1\u00111JAc\t\u000b\u0002\u0002\"!\u000f\u0005(\tM\u0015\u0011U\u0001\u000eMVdG.\u0011:uS\u001a\f7\r^:\u0002\u000b\u0019LG.Z:\u0016\u0005\u00115\u0003CBA&\u0003\u000b\f\t+A\u000bxSRDG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:\u0015\t\u0011\u0015A1\u000b\u0005\b\toy\u0007\u0019\u0001C\u001eQ\u001dyGq\u000bC/\tC\u0002B!!\u000f\u0005Z%!A1LA\u001e\u0005)!W\r\u001d:fG\u0006$X\rZ\u0011\u0003\t?\nQ%V:fA]LG\u000f\u001b$vY2$U\r^1jY\u0016$\u0017I\u001d;jM\u0006\u001cGo\u001d\u0011j]N$X-\u00193\"\u0005\u0011\r\u0014\u0001\u0004\u001a/a9\u0002TFU\"7[E*D\u0003\u0002C\u0003\tOBq\u0001b\u0010q\u0001\u0004!\u0019\u0005K\u0004q\t/\"Y\u0007\"\u0019\"\u0005\u00115\u0014AI+tK\u0002:\u0018\u000e\u001e5Gk2dW\t\u001f;sC\u0006\u0013H/\u001b4bGR\u001c\b%\u001b8ti\u0016\fG-\u0001\bxSRD\'+Z:pYV$\u0018n\u001c8\u0015\t\u0011\u0015A1\u000f\u0005\b\t\u0017\t\b\u0019\u0001B\r\u0003e9\u0018\u000e\u001e5Gk2dG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:\u0015\t\u0011\u0015A\u0011\u0010\u0005\b\t#\u0011\b\u0019\u0001C\u000b\u0003Y9\u0018\u000e\u001e5Gk2dW\t\u001f;sC\u0006\u0013H/\u001b4bGR\u001cH\u0003\u0002C\u0003\t\u007fBq\u0001b\bt\u0001\u0004!\u0019#\u0001\u0005u_N#(/\u001b8h)\t!)\t\u0005\u0003\u0004j\u0011\u001d\u0015\u0002\u0002CE\u0007W\u0012aa\u0015;sS:<\u0017\u0001C2b]\u0016\u000bX/\u00197\u0015\t\t\u001dDq\u0012\u0005\b\t#+\b\u0019AA@\u0003\ry\'M[\u0001\u0007KF,\u0018\r\\:\u0015\t\t\u001dDq\u0013\u0005\b\t#3\b\u0019AA@\u0003!A\u0017m\u001d5D_\u0012,GC\u0001CO!\u0011\tI\u0004b(\n\t\u0011\u0005\u00161\b\u0002\u0004\u0013:$\u0018!\u0002;va2,WC\u0001CT!)\tIDa\"\u0003\u001a\u0011UA1E\u0001\u000eaJ|G-^2u!J,g-\u001b=\u0016\u0005\u0011\u0015\u0015\u0001\u00049s_\u0012,8\r^!sSRLXC\u0001CO\u00039\u0001(o\u001c3vGR,E.Z7f]R$B!a \u00056\"9AqW>A\u0002\u0011u\u0015!\u00018\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\t\u000b#i\fC\u0004\u00058r\u0004\r\u0001\"(\t\u0013\u0011\u0005\u0017\u000b%AA\u0004\u0011\r\u0017AA3d!\u0011\u0019Y\u0010\"2\n\t\u0011\u001d7Q \u0002\u0011\u000bb,7-\u001e;j_:\u001cuN\u001c;fqR\faCZ;ukJ,\'+Z:vYR$C-\u001a4bk2$H%\r\u000b\u0003\t\u001bTC\u0001b1\u0005P.\u0012A\u0011\u001b\t\u0005\t\'$i.\u0004\u0002\u0005V*!Aq\u001bCm\u0003%)hn\u00195fG.,GM\u0003\u0003\u0005\\\u0006m\u0012AC1o]>$\u0018\r^5p]&!Aq\u001cCk\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u0007MV$XO]3\u0015\u0005\u0011\u0015H\u0003\u0002Ct\tS\u0004baa?\u0005\u0002\u00115\u0003\"\u0003Ca\'B\u0005\t9\u0001Cb\u0003A1W\u000f^;sK\u0012\"WMZ1vYR$\u0013\'\u0001\u0007fSRDWM\u001d*fgVdG\u000f\u0006\u0002\u0005rR!A1_C\u0003!!\tY\u0005\">\u0005z\u0012\u0015\u0011\u0002\u0002C|\u0003?\u0012a!R5uQ\u0016\u0014\b\u0003\u0002C~\u000b\u0003i!\u0001\"@\u000b\t\u0011}\u0018QF\u0001\u0006KJ\u0014xN]\u0005\u0005\u000b\u0007!iPA\u0007D_V\u00148/[3s\u000bJ\u0014xN\u001d\u0005\n\t\u0003,\u0006\u0013!a\u0002\t\u0007\fa#Z5uQ\u0016\u0014(+Z:vYR$C-\u001a4bk2$H%M\u0001\u0007K&$\b.\u001a:\u0015\u0005\u00155A\u0003BC\b\u000b#\u0001\u0002\"a\u0013\u0005v\u0012eHQ\n\u0005\n\t\u0003<\u0006\u0013!a\u0002\t\u0007\f\u0001#Z5uQ\u0016\u0014H\u0005Z3gCVdG\u000fJ\u0019\u0002\u0013I,hNU3tk2$HCAC\r)\u0011!)!b\u0007\t\u0013\u0011\u0005\u0017\f%AA\u0004\u0011\r\u0017a\u0005:v]J+7/\u001e7uI\u0011,g-Y;mi\u0012\n\u0014a\u0001:v]R\u0011Q1\u0005\u000b\u0005\t\u001b*)\u0003C\u0005\u0005Bn\u0003\n\u0011q\u0001\u0005D\u0006i!/\u001e8%I\u00164\u0017-\u001e7uIE\"BAa\u001a\u0006,!IQQ\u00060\u0002\u0002\u0003\u0007\u0011qP\u0001\u0004q\u0012\n\u0014\u0001\u0004$fi\u000eDG+Y:l\u001fB\u001cH\u0003BBv\u000bgAqa!=`\u0001\u0004\u0019I,\u0006\u0003\u00068\u0015uB\u0003CC\u001d\u000b\u0007*9%b\u0013\u0011\u000b\u0005\u001d\u0004!b\u000f\u0011\t\u0005=TQ\b\u0003\b\u0003g\u0002\'\u0019AC +\u0011\t9(\"\u0011\u0005\u0011\u0005\u001dUQ\bb\u0001\u0003oBq!!\u0019a\u0001\u0004))\u0005\u0005\u0004\u0002h\u0005%T1\b\u0005\b\u0003\u0017\u0003\u0007\u0019AC%!\u0019\t9\'!%\u0006<!9\u0011q\u00131A\u0002\u0005m\u0015A\u0002*fgVdG\u000fE\u0002\u0004nz\u001cRA`A\u001c\u0007_#\"!b\u0014\u0015\u0011\u0011\u0015QqKC-\u000b7B\u0001\u0002b\u0003\u0002\u0004\u0001\u0007!\u0011\u0004\u0005\t\t#\t\u0019\u00011\u0001\u0005\u0016!AAqDA\u0002\u0001\u0004!\u0019#\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0006bA!1\u0011NC2\u0013\u0011))ga\u001b\u0003\r=\u0013\'.Z2u!\u0011\u0019i/!\u0003\u0014\t\u0005%\u0011q\u0007\u000b\u0003\u000bO\naCZ;ukJ,\'+Z:vYR$S\r\u001f;f]NLwN\u001c\u000b\u0005\u000bc*9\b\u0006\u0002\u0006tQ!1\u0011`C;\u0011)!\t-!\u0004\u0011\u0002\u0003\u000fA1\u0019\u0005\t\u000bs\ni\u00011\u0001\u0004l\u0006)A\u0005\u001e5jg\u0006\u0001b-\u001e;ve\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0005\u000b\u007f*)\t\u0006\u0002\u0006\u0002R!Aq]CB\u0011)!\t-a\u0004\u0011\u0002\u0003\u000fA1\u0019\u0005\t\u000bs\ny\u00011\u0001\u0004l\u0006\u0001c-\u001e;ve\u0016\u0014Vm];mi\u0012\"WMZ1vYR$\u0013\u0007J3yi\u0016t7/[8o)\u0011!Y-b#\t\u0011\u0015e\u0014\u0011\u0003a\u0001\u0007W\f!DZ;ukJ,G\u0005Z3gCVdG\u000fJ\u0019%Kb$XM\\:j_:$B\u0001b3\u0006\u0012\"AQ\u0011PA\n\u0001\u0004\u0019Y/\u0001\ffSRDWM\u001d*fgVdG\u000fJ3yi\u0016t7/[8o)\u0011)9*\"(\u0015\u0005\u0015eE\u0003\u0002Cz\u000b7C!\u0002\"1\u0002\u0016A\u0005\t9\u0001Cb\u0011!)I(!\u0006A\u0002\r-\u0018\u0001E3ji\",\'\u000fJ3yi\u0016t7/[8o)\u0011)\u0019+\"+\u0015\u0005\u0015\u0015F\u0003BC\b\u000bOC!\u0002\"1\u0002\u0018A\u0005\t9\u0001Cb\u0011!)I(a\u0006A\u0002\r-\u0018\u0001I3ji\",\'OU3tk2$H\u0005Z3gCVdG\u000fJ\u0019%Kb$XM\\:j_:$B\u0001b3\u00060\"AQ\u0011PA\r\u0001\u0004\u0019Y/\u0001\u000efSRDWM\u001d\u0013eK\u001a\fW\u000f\u001c;%c\u0011*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0005L\u0016U\u0006\u0002CC=\u00037\u0001\raa;\u0002\'I,hNU3tk2$H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0015mV\u0011\u0019\u000b\u0003\u000b{#B\u0001\"\u0002\u0006@\"QA\u0011YA\u000f!\u0003\u0005\u001d\u0001b1\t\u0011\u0015e\u0014Q\u0004a\u0001\u0007W\fQB];oI\u0015DH/\u001a8tS>tG\u0003BCd\u000b\u001b$\"!\"3\u0015\t\u00115S1\u001a\u0005\u000b\t\u0003\fy\u0002%AA\u0004\u0011\r\u0007\u0002CC=\u0003?\u0001\raa;\u0002;I,hNU3tk2$H\u0005Z3gCVdG\u000fJ\u0019%Kb$XM\\:j_:$B\u0001b3\u0006T\"AQ\u0011PA\u0011\u0001\u0004\u0019Y/A\fsk:$C-\u001a4bk2$H%\r\u0013fqR,gn]5p]R!A1ZCm\u0011!)I(a\tA\u0002\r-\u0018A\u00055bg\"\u001cu\u000eZ3%Kb$XM\\:j_:$B\u0001b\'\u0006`\"AQ\u0011PA\u0013\u0001\u0004\u0019Y/\u0001\tfcV\fGn\u001d\u0013fqR,gn]5p]R!QQ]Cu)\u0011\u00119\'b:\t\u0015\u00155\u0012qEA\u0001\u0002\u0004\ty\b\u0003\u0005\u0006z\u0005\u001d\u0002\u0019ABv+\t)i\u000f\u0005\u0004\u0002p\u0005EDQJ\u0001\fo&$\bNU3t_24X\r\u0006\u0003\u00028\u0016M\bbBA1y\u0001\u0007\u0011QM\u0001\u000eo&$\b.\u0011:uS\u001a\f7\r^:\u0015\t\u0005]V\u0011 \u0005\b\u0003\u0017k\u0004\u0019AAH\u0003E9\u0018\u000e\u001e5GKR\u001c\u0007nQ1dQ\u0016|\u0005\u000f\u001e\u000b\u0005\u0003o+y\u0010C\u0004\u0002\u0018z\u0002\r!a\'\u0015\t\t\u001dd1\u0001\u0005\b\t#\u0003\u0005\u0019AA@)\u0011\u00119Gb\u0002\t\u000f\u0011E\u0015\t1\u0001\u0002\u0000U\u0011a1\u0002\t\u000b\u0003s\u00119)!\u001a\u0002\u0010\u0006mE\u0003BA@\r\u001fAq\u0001b.G\u0001\u0004!i\n\u0006\u0003\u0005\u0006\u001aM\u0001b\u0002C\\\u000f\u0002\u0007AQ\u0014
   #14 = Utf8               coursier/Artifacts$Result
   #15 = Class              #14           // coursier/Artifacts$Result
   #16 = Utf8               coursier/Artifacts
   #17 = Class              #16           // coursier/Artifacts
   #18 = Utf8               Result
   #19 = Utf8               coursier/Fetch$FetchTaskOps
   #20 = Class              #19           // coursier/Fetch$FetchTaskOps
   #21 = Utf8               FetchTaskOps
   #22 = Utf8               coursier/Fetch$FetchTaskOps$
   #23 = Class              #22           // coursier/Fetch$FetchTaskOps$
   #24 = Utf8
   #25 = Utf8               coursier/Fetch$Result
   #26 = Class              #25           // coursier/Fetch$Result
   #27 = Utf8               coursier/Fetch$Result$
   #28 = Class              #27           // coursier/Fetch$Result$
   #29 = Utf8               coursier/internal/FetchCache$Key
   #30 = Class              #29           // coursier/internal/FetchCache$Key
   #31 = Utf8               coursier/internal/FetchCache
   #32 = Class              #31           // coursier/internal/FetchCache
   #33 = Utf8               Key
   #34 = Utf8               coursier/util/Monad$AllOps
   #35 = Class              #34           // coursier/util/Monad$AllOps
   #36 = Utf8               coursier/util/Monad
   #37 = Class              #36           // coursier/util/Monad
   #38 = Utf8               AllOps
   #39 = Utf8               coursier/util/Monad$ops$
   #40 = Class              #39           // coursier/util/Monad$ops$
   #41 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #42 = Class              #41           // java/lang/invoke/MethodHandles$Lookup
   #43 = Utf8               java/lang/invoke/MethodHandles
   #44 = Class              #43           // java/lang/invoke/MethodHandles
   #45 = Utf8               Lookup
   #46 = Utf8               scala/math/Ordering$String$
   #47 = Class              #46           // scala/math/Ordering$String$
   #48 = Utf8               scala/math/Ordering
   #49 = Class              #48           // scala/math/Ordering
   #50 = Utf8               coursier$Fetch$$resolve
   #51 = Utf8               Lcoursier/Resolve;
   #52 = Utf8               Lcoursier/Resolve<TF;>;
   #53 = Utf8               artifacts
   #54 = Utf8               Lcoursier/Artifacts;
   #55 = Utf8               Lcoursier/Artifacts<TF;>;
   #56 = Utf8               fetchCacheOpt
   #57 = Utf8               Lscala/Option;
   #58 = Utf8               Lscala/Option<Ljava/io/File;>;
   #59 = Utf8               apply
   #60 = Utf8               (Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)Lcoursier/Fetch;
   #61 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;)Lcoursier/Fetch<TF;>;
   #62 = Utf8               resolve
   #63 = Utf8               coursier/Fetch$
   #64 = Class              #63           // coursier/Fetch$
   #65 = Utf8               MODULE$
   #66 = Utf8               Lcoursier/Fetch$;
   #67 = NameAndType        #65:#66       // MODULE$:Lcoursier/Fetch$;
   #68 = Fieldref           #64.#67       // coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
   #69 = NameAndType        #59:#60       // apply:(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)Lcoursier/Fetch;
   #70 = Methodref          #64.#69       // coursier/Fetch$.apply:(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)Lcoursier/Fetch;
   #71 = Utf8               (Lcoursier/Fetch;)Lcoursier/Fetch;
   #72 = Utf8               fetch
   #73 = NameAndType        #21:#71       // FetchTaskOps:(Lcoursier/Fetch;)Lcoursier/Fetch;
   #74 = Methodref          #64.#73       // coursier/Fetch$.FetchTaskOps:(Lcoursier/Fetch;)Lcoursier/Fetch;
   #75 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Fetch;
   #76 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Fetch<TF;>;
   #77 = Utf8               cache
   #78 = Utf8               S
   #79 = NameAndType        #59:#75       // apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Fetch;
   #80 = Methodref          #64.#79       // coursier/Fetch$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Fetch;
   #81 = Utf8               ()Lcoursier/Fetch;
   #82 = Utf8               ()Lcoursier/Fetch<Lcoursier/util/Task;>;
   #83 = NameAndType        #59:#81       // apply:()Lcoursier/Fetch;
   #84 = Methodref          #64.#83       // coursier/Fetch$.apply:()Lcoursier/Fetch;
   #85 = Utf8               productIterator
   #86 = Utf8               ()Lscala/collection/Iterator;
   #87 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #88 = Utf8               productIterator$
   #89 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #90 = NameAndType        #88:#89       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #91 = InterfaceMethodref #7.#90        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #92 = Utf8               this
   #93 = Utf8               Lcoursier/Fetch;
   #94 = Utf8               productElementNames
   #95 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #96 = Utf8               productElementNames$
   #97 = NameAndType        #96:#89       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #98 = InterfaceMethodref #7.#97        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #99 = Utf8               ()Lcoursier/Resolve;
  #100 = Utf8               ()Lcoursier/Resolve<TF;>;
  #101 = NameAndType        #50:#51       // coursier$Fetch$$resolve:Lcoursier/Resolve;
  #102 = Fieldref           #2.#101       // coursier/Fetch.coursier$Fetch$$resolve:Lcoursier/Resolve;
  #103 = Utf8               ()Lcoursier/Artifacts;
  #104 = Utf8               ()Lcoursier/Artifacts<TF;>;
  #105 = NameAndType        #53:#54       // artifacts:Lcoursier/Artifacts;
  #106 = Fieldref           #2.#105       // coursier/Fetch.artifacts:Lcoursier/Artifacts;
  #107 = Utf8               ()Lscala/Option;
  #108 = Utf8               ()Lscala/Option<Ljava/io/File;>;
  #109 = NameAndType        #56:#57       // fetchCacheOpt:Lscala/Option;
  #110 = Fieldref           #2.#109       // coursier/Fetch.fetchCacheOpt:Lscala/Option;
  #111 = Utf8               dependencies
  #112 = Utf8               ()Lscala/collection/immutable/Seq;
  #113 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
  #114 = NameAndType        #50:#99       // coursier$Fetch$$resolve:()Lcoursier/Resolve;
  #115 = Methodref          #2.#114       // coursier/Fetch.coursier$Fetch$$resolve:()Lcoursier/Resolve;
  #116 = Utf8               coursier/Resolve
  #117 = Class              #116          // coursier/Resolve
  #118 = NameAndType        #111:#112     // dependencies:()Lscala/collection/immutable/Seq;
  #119 = Methodref          #117.#118     // coursier/Resolve.dependencies:()Lscala/collection/immutable/Seq;
  #120 = Utf8               repositories
  #121 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;
  #122 = NameAndType        #120:#112     // repositories:()Lscala/collection/immutable/Seq;
  #123 = Methodref          #117.#122     // coursier/Resolve.repositories:()Lscala/collection/immutable/Seq;
  #124 = Utf8               mirrors
  #125 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;
  #126 = NameAndType        #124:#112     // mirrors:()Lscala/collection/immutable/Seq;
  #127 = Methodref          #117.#126     // coursier/Resolve.mirrors:()Lscala/collection/immutable/Seq;
  #128 = Utf8               resolutionParams
  #129 = Utf8               ()Lcoursier/params/ResolutionParams;
  #130 = NameAndType        #128:#129     // resolutionParams:()Lcoursier/params/ResolutionParams;
  #131 = Methodref          #117.#130     // coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
  #132 = Utf8               ()Lcoursier/cache/Cache;
  #133 = Utf8               ()Lcoursier/cache/Cache<TF;>;
  #134 = NameAndType        #77:#132      // cache:()Lcoursier/cache/Cache;
  #135 = Methodref          #117.#134     // coursier/Resolve.cache:()Lcoursier/cache/Cache;
  #136 = Utf8               throughOpt
  #137 = Utf8               ()Lscala/Option<Lscala/Function1<TF;TF;>;>;
  #138 = NameAndType        #136:#107     // throughOpt:()Lscala/Option;
  #139 = Methodref          #117.#138     // coursier/Resolve.throughOpt:()Lscala/Option;
  #140 = Utf8               transformFetcherOpt
  #141 = Utf8               ()Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;
  #142 = NameAndType        #140:#107     // transformFetcherOpt:()Lscala/Option;
  #143 = Methodref          #117.#142     // coursier/Resolve.transformFetcherOpt:()Lscala/Option;
  #144 = Utf8               sync
  #145 = Utf8               ()Lcoursier/util/Sync;
  #146 = Utf8               ()Lcoursier/util/Sync<TF;>;
  #147 = NameAndType        #144:#145     // sync:()Lcoursier/util/Sync;
  #148 = Methodref          #117.#147     // coursier/Resolve.sync:()Lcoursier/util/Sync;
  #149 = Utf8               classifiers
  #150 = Utf8               ()Lscala/collection/immutable/Set;
  #151 = Utf8               ()Lscala/collection/immutable/Set<Lcoursier/core/Classifier;>;
  #152 = NameAndType        #53:#103      // artifacts:()Lcoursier/Artifacts;
  #153 = Methodref          #2.#152       // coursier/Fetch.artifacts:()Lcoursier/Artifacts;
  #154 = NameAndType        #149:#150     // classifiers:()Lscala/collection/immutable/Set;
  #155 = Methodref          #17.#154      // coursier/Artifacts.classifiers:()Lscala/collection/immutable/Set;
  #156 = Utf8               mainArtifactsOpt
  #157 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
  #158 = NameAndType        #156:#107     // mainArtifactsOpt:()Lscala/Option;
  #159 = Methodref          #17.#158      // coursier/Artifacts.mainArtifactsOpt:()Lscala/Option;
  #160 = Utf8               artifactTypesOpt
  #161 = Utf8               ()Lscala/Option<Lscala/collection/immutable/Set<Lcoursier/core/Type;>;>;
  #162 = NameAndType        #160:#107     // artifactTypesOpt:()Lscala/Option;
  #163 = Methodref          #17.#162      // coursier/Artifacts.artifactTypesOpt:()Lscala/Option;
  #164 = Utf8               extraArtifactsSeq
  #165 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lcoursier/util/Artifact;>;>;>;
  #166 = NameAndType        #164:#112     // extraArtifactsSeq:()Lscala/collection/immutable/Seq;
  #167 = Methodref          #17.#166      // coursier/Artifacts.extraArtifactsSeq:()Lscala/collection/immutable/Seq;
  #168 = Utf8               transformArtifacts
  #169 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;>;>;
  #170 = NameAndType        #168:#112     // transformArtifacts:()Lscala/collection/immutable/Seq;
  #171 = Methodref          #17.#170      // coursier/Artifacts.transformArtifacts:()Lscala/collection/immutable/Seq;
  #172 = Utf8               classpathOrder
  #173 = Utf8               ()Z
  #174 = NameAndType        #172:#173     // classpathOrder:()Z
  #175 = Methodref          #17.#174      // coursier/Artifacts.classpathOrder:()Z
  #176 = Utf8               cacheKeyOpt
  #177 = Utf8               ()Lscala/Option<Lcoursier/internal/FetchCache$Key;>;
  #178 = Utf8               scala/Option
  #179 = Class              #178          // scala/Option
  #180 = Utf8               isEmpty
  #181 = NameAndType        #180:#173     // isEmpty:()Z
  #182 = Methodref          #179.#181     // scala/Option.isEmpty:()Z
  #183 = Utf8               scala/collection/immutable/Seq
  #184 = Class              #183          // scala/collection/immutable/Seq
  #185 = InterfaceMethodref #184.#181     // scala/collection/immutable/Seq.isEmpty:()Z
  #186 = Utf8               resolutions
  #187 = NameAndType        #186:#112     // resolutions:()Lscala/collection/immutable/Seq;
  #188 = Methodref          #17.#187      // coursier/Artifacts.resolutions:()Lscala/collection/immutable/Seq;
  #189 = Methodref          #17.#134      // coursier/Artifacts.cache:()Lcoursier/cache/Cache;
  #190 = Utf8               coursier/cache/FileCache
  #191 = Class              #190          // coursier/cache/FileCache
  #192 = Utf8               finalDependencies
  #193 = NameAndType        #192:#112     // finalDependencies:()Lscala/collection/immutable/Seq;
  #194 = Methodref          #117.#193     // coursier/Resolve.finalDependencies:()Lscala/collection/immutable/Seq;
  #195 = Utf8               scala/Predef$
  #196 = Class              #195          // scala/Predef$
  #197 = Utf8               Lscala/Predef$;
  #198 = NameAndType        #65:#197      // MODULE$:Lscala/Predef$;
  #199 = Fieldref           #196.#198     // scala/Predef$.MODULE$:Lscala/Predef$;
  #200 = Utf8               Set
  #201 = Utf8               ()Lscala/collection/immutable/Set$;
  #202 = NameAndType        #200:#201     // Set:()Lscala/collection/immutable/Set$;
  #203 = Methodref          #196.#202     // scala/Predef$.Set:()Lscala/collection/immutable/Set$;
  #204 = Utf8               scala/collection/immutable/Nil$
  #205 = Class              #204          // scala/collection/immutable/Nil$
  #206 = Utf8               Lscala/collection/immutable/Nil$;
  #207 = NameAndType        #65:#206      // MODULE$:Lscala/collection/immutable/Nil$;
  #208 = Fieldref           #205.#207     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #209 = Utf8               scala/collection/immutable/Set$
  #210 = Class              #209          // scala/collection/immutable/Set$
  #211 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #212 = NameAndType        #59:#211      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #213 = Methodref          #210.#212     // scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #214 = Utf8               scala/collection/immutable/Set
  #215 = Class              #214          // scala/collection/immutable/Set
  #216 = Utf8               coursier/params/ResolutionParams
  #217 = Class              #216          // coursier/params/ResolutionParams
  #218 = Utf8               withExclusions
  #219 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/params/ResolutionParams;
  #220 = NameAndType        #218:#219     // withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/params/ResolutionParams;
  #221 = Methodref          #217.#220     // coursier/params/ResolutionParams.withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/params/ResolutionParams;
  #222 = Utf8               Map
  #223 = Utf8               ()Lscala/collection/immutable/Map$;
  #224 = NameAndType        #222:#223     // Map:()Lscala/collection/immutable/Map$;
  #225 = Methodref          #196.#224     // scala/Predef$.Map:()Lscala/collection/immutable/Map$;
  #226 = Utf8               scala/collection/immutable/Map$
  #227 = Class              #226          // scala/collection/immutable/Map$
  #228 = Methodref          #227.#212     // scala/collection/immutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #229 = Utf8               scala/collection/immutable/Map
  #230 = Class              #229          // scala/collection/immutable/Map
  #231 = Utf8               withForceVersion
  #232 = Utf8               (Lscala/collection/immutable/Map;)Lcoursier/params/ResolutionParams;
  #233 = NameAndType        #231:#232     // withForceVersion:(Lscala/collection/immutable/Map;)Lcoursier/params/ResolutionParams;
  #234 = Methodref          #217.#233     // coursier/params/ResolutionParams.withForceVersion:(Lscala/collection/immutable/Map;)Lcoursier/params/ResolutionParams;
  #235 = Utf8               withProperties
  #236 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/params/ResolutionParams;
  #237 = NameAndType        #235:#236     // withProperties:(Lscala/collection/immutable/Seq;)Lcoursier/params/ResolutionParams;
  #238 = Methodref          #217.#237     // coursier/params/ResolutionParams.withProperties:(Lscala/collection/immutable/Seq;)Lcoursier/params/ResolutionParams;
  #239 = Utf8               withForcedProperties
  #240 = NameAndType        #239:#232     // withForcedProperties:(Lscala/collection/immutable/Map;)Lcoursier/params/ResolutionParams;
  #241 = Methodref          #217.#240     // coursier/params/ResolutionParams.withForcedProperties:(Lscala/collection/immutable/Map;)Lcoursier/params/ResolutionParams;
  #242 = Utf8               withProfiles
  #243 = NameAndType        #242:#219     // withProfiles:(Lscala/collection/immutable/Set;)Lcoursier/params/ResolutionParams;
  #244 = Methodref          #217.#243     // coursier/params/ResolutionParams.withProfiles:(Lscala/collection/immutable/Set;)Lcoursier/params/ResolutionParams;
  #245 = Utf8               forceVersion
  #246 = Utf8               ()Lscala/collection/immutable/Map;
  #247 = NameAndType        #245:#246     // forceVersion:()Lscala/collection/immutable/Map;
  #248 = Methodref          #217.#247     // coursier/params/ResolutionParams.forceVersion:()Lscala/collection/immutable/Map;
  #249 = Utf8               toVector
  #250 = Utf8               ()Lscala/collection/immutable/Vector;
  #251 = NameAndType        #249:#250     // toVector:()Lscala/collection/immutable/Vector;
  #252 = InterfaceMethodref #230.#251     // scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
  #253 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #254 = MethodType         #253          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #255 = Utf8               $anonfun$cacheKeyOpt$1
  #256 = Utf8               (Lscala/Tuple2;)Ljava/lang/String;
  #257 = NameAndType        #255:#256     // $anonfun$cacheKeyOpt$1:(Lscala/Tuple2;)Ljava/lang/String;
  #258 = Methodref          #2.#257       // coursier/Fetch.$anonfun$cacheKeyOpt$1:(Lscala/Tuple2;)Ljava/lang/String;
  #259 = MethodHandle       6:#258        // REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$1:(Lscala/Tuple2;)Ljava/lang/String;
  #260 = MethodType         #256          //  (Lscala/Tuple2;)Ljava/lang/String;
  #261 = Integer            5
  #262 = Integer            1
  #263 = Utf8               java/lang/invoke/LambdaMetafactory
  #264 = Class              #263          // java/lang/invoke/LambdaMetafactory
  #265 = Utf8               altMetafactory
  #266 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #267 = NameAndType        #265:#266     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #268 = Methodref          #264.#267     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #269 = MethodHandle       6:#268        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #270 = Utf8               ()Lscala/Function1;
  #271 = NameAndType        #59:#270      // apply:()Lscala/Function1;
  #272 = InvokeDynamic      #0:#271       // #0:apply:()Lscala/Function1;
  #273 = Utf8               Lscala/math/Ordering$String$;
  #274 = NameAndType        #65:#273      // MODULE$:Lscala/math/Ordering$String$;
  #275 = Fieldref           #47.#274      // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #276 = Utf8               scala/collection/immutable/Vector
  #277 = Class              #276          // scala/collection/immutable/Vector
  #278 = Utf8               sortBy
  #279 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #280 = NameAndType        #278:#279     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #281 = Methodref          #277.#280     // scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #282 = Utf8               properties
  #283 = NameAndType        #282:#112     // properties:()Lscala/collection/immutable/Seq;
  #284 = Methodref          #217.#283     // coursier/params/ResolutionParams.properties:()Lscala/collection/immutable/Seq;
  #285 = InterfaceMethodref #184.#251     // scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
  #286 = Utf8               $anonfun$cacheKeyOpt$2
  #287 = NameAndType        #286:#256     // $anonfun$cacheKeyOpt$2:(Lscala/Tuple2;)Ljava/lang/String;
  #288 = Methodref          #2.#287       // coursier/Fetch.$anonfun$cacheKeyOpt$2:(Lscala/Tuple2;)Ljava/lang/String;
  #289 = MethodHandle       6:#288        // REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$2:(Lscala/Tuple2;)Ljava/lang/String;
  #290 = InvokeDynamic      #1:#271       // #1:apply:()Lscala/Function1;
  #291 = Utf8               forcedProperties
  #292 = NameAndType        #291:#246     // forcedProperties:()Lscala/collection/immutable/Map;
  #293 = Methodref          #217.#292     // coursier/params/ResolutionParams.forcedProperties:()Lscala/collection/immutable/Map;
  #294 = Utf8               $anonfun$cacheKeyOpt$3
  #295 = NameAndType        #294:#256     // $anonfun$cacheKeyOpt$3:(Lscala/Tuple2;)Ljava/lang/String;
  #296 = Methodref          #2.#295       // coursier/Fetch.$anonfun$cacheKeyOpt$3:(Lscala/Tuple2;)Ljava/lang/String;
  #297 = MethodHandle       6:#296        // REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$3:(Lscala/Tuple2;)Ljava/lang/String;
  #298 = InvokeDynamic      #2:#271       // #2:apply:()Lscala/Function1;
  #299 = Utf8               profiles
  #300 = NameAndType        #299:#150     // profiles:()Lscala/collection/immutable/Set;
  #301 = Methodref          #217.#300     // coursier/params/ResolutionParams.profiles:()Lscala/collection/immutable/Set;
  #302 = InterfaceMethodref #215.#251     // scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
  #303 = Utf8               sorted
  #304 = Utf8               (Lscala/math/Ordering;)Ljava/lang/Object;
  #305 = NameAndType        #303:#304     // sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #306 = Methodref          #277.#305     // scala/collection/immutable/Vector.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #307 = Utf8               location
  #308 = Utf8               ()Ljava/io/File;
  #309 = NameAndType        #307:#308     // location:()Ljava/io/File;
  #310 = Methodref          #191.#309     // coursier/cache/FileCache.location:()Ljava/io/File;
  #311 = Utf8               java/io/File
  #312 = Class              #311          // java/io/File
  #313 = Utf8               getAbsolutePath
  #314 = Utf8               ()Ljava/lang/String;
  #315 = NameAndType        #313:#314     // getAbsolutePath:()Ljava/lang/String;
  #316 = Methodref          #312.#315     // java/io/File.getAbsolutePath:()Ljava/lang/String;
  #317 = Utf8               coursier/core/Classifier$
  #318 = Class              #317          // coursier/core/Classifier$
  #319 = Utf8               Lcoursier/core/Classifier$;
  #320 = NameAndType        #65:#319      // MODULE$:Lcoursier/core/Classifier$;
  #321 = Fieldref           #318.#320     // coursier/core/Classifier$.MODULE$:Lcoursier/core/Classifier$;
  #322 = Utf8               ordering
  #323 = Utf8               ()Lscala/math/Ordering;
  #324 = NameAndType        #322:#323     // ordering:()Lscala/math/Ordering;
  #325 = Methodref          #318.#324     // coursier/core/Classifier$.ordering:()Lscala/math/Ordering;
  #326 = Utf8               $anonfun$cacheKeyOpt$4
  #327 = Utf8               (Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
  #328 = NameAndType        #326:#327     // $anonfun$cacheKeyOpt$4:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
  #329 = Methodref          #2.#328       // coursier/Fetch.$anonfun$cacheKeyOpt$4:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
  #330 = MethodHandle       6:#329        // REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$4:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
  #331 = MethodType         #327          //  (Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
  #332 = InvokeDynamic      #3:#271       // #3:apply:()Lscala/Function1;
  #333 = Utf8               map
  #334 = Utf8               (Lscala/Function1;)Lscala/Option;
  #335 = NameAndType        #333:#334     // map:(Lscala/Function1;)Lscala/Option;
  #336 = Methodref          #179.#335     // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #337 = Utf8               <init>
  #338 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;)V
  #339 = NameAndType        #337:#338     // "<init>":(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;)V
  #340 = Methodref          #30.#339      // coursier/internal/FetchCache$Key."<init>":(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;)V
  #341 = Utf8               scala/Some
  #342 = Class              #341          // scala/Some
  #343 = Utf8               (Ljava/lang/Object;)V
  #344 = NameAndType        #337:#343     // "<init>":(Ljava/lang/Object;)V
  #345 = Methodref          #342.#344     // scala/Some."<init>":(Ljava/lang/Object;)V
  #346 = Utf8               coursier/cache/Cache
  #347 = Class              #346          // coursier/cache/Cache
  #348 = Utf8               scala/None$
  #349 = Class              #348          // scala/None$
  #350 = Utf8               Lscala/None$;
  #351 = NameAndType        #65:#350      // MODULE$:Lscala/None$;
  #352 = Fieldref           #349.#351     // scala/None$.MODULE$:Lscala/None$;
  #353 = Utf8               key
  #354 = Utf8               Lcoursier/internal/FetchCache$Key;
  #355 = Utf8               mayBeCached
  #356 = Utf8               Z
  #357 = Utf8               canBeCached
  #358 = NameAndType        #176:#107     // cacheKeyOpt:()Lscala/Option;
  #359 = Methodref          #2.#358       // coursier/Fetch.cacheKeyOpt:()Lscala/Option;
  #360 = Utf8               nonEmpty
  #361 = NameAndType        #360:#173     // nonEmpty:()Z
  #362 = Methodref          #179.#361     // scala/Option.nonEmpty:()Z
  #363 = Utf8               withDependencies
  #364 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
  #365 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lcoursier/Fetch<TF;>;
  #366 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
  #367 = NameAndType        #363:#366     // withDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
  #368 = Methodref          #117.#367     // coursier/Resolve.withDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
  #369 = Utf8               withResolve
  #370 = Utf8               (Lcoursier/Resolve;)Lcoursier/Fetch;
  #371 = NameAndType        #369:#370     // withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
  #372 = Methodref          #2.#371       // coursier/Fetch.withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
  #373 = Utf8               Lscala/collection/immutable/Seq;
  #374 = Utf8               addDependencies
  #375 = Utf8               $plus$plus
  #376 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #377 = NameAndType        #375:#376     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #378 = InterfaceMethodref #184.#377     // scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #379 = Utf8               withRepositories
  #380 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/Fetch<TF;>;
  #381 = NameAndType        #379:#366     // withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
  #382 = Methodref          #117.#381     // coursier/Resolve.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
  #383 = Utf8               addRepositories
  #384 = Utf8               noMirrors
  #385 = Utf8               ()Lcoursier/Fetch<TF;>;
  #386 = NameAndType        #384:#99      // noMirrors:()Lcoursier/Resolve;
  #387 = Methodref          #117.#386     // coursier/Resolve.noMirrors:()Lcoursier/Resolve;
  #388 = Utf8               withMirrors
  #389 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;)Lcoursier/Fetch<TF;>;
  #390 = NameAndType        #388:#366     // withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
  #391 = Methodref          #117.#390     // coursier/Resolve.withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
  #392 = Utf8               addMirrors
  #393 = Utf8               withResolutionParams
  #394 = Utf8               (Lcoursier/params/ResolutionParams;)Lcoursier/Fetch;
  #395 = Utf8               (Lcoursier/params/ResolutionParams;)Lcoursier/Fetch<TF;>;
  #396 = Utf8               (Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
  #397 = NameAndType        #393:#396     // withResolutionParams:(Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
  #398 = Methodref          #117.#397     // coursier/Resolve.withResolutionParams:(Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
  #399 = Utf8               Lcoursier/params/ResolutionParams;
  #400 = Utf8               mapResolutionParams
  #401 = Utf8               (Lscala/Function1;)Lcoursier/Fetch;
  #402 = Utf8               (Lscala/Function1<Lcoursier/params/ResolutionParams;Lcoursier/params/ResolutionParams;>;)Lcoursier/Fetch<TF;>;
  #403 = Utf8               f
  #404 = Methodref          #2.#130       // coursier/Fetch.resolutionParams:()Lcoursier/params/ResolutionParams;
  #405 = Utf8               scala/Function1
  #406 = Class              #405          // scala/Function1
  #407 = NameAndType        #59:#253      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #408 = InterfaceMethodref #406.#407     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #409 = Utf8               Lscala/Function1;
  #410 = Utf8               withCache
  #411 = Utf8               (Lcoursier/cache/Cache;)Lcoursier/Fetch;
  #412 = Utf8               (Lcoursier/cache/Cache<TF;>;)Lcoursier/Fetch<TF;>;
  #413 = Utf8               (Lcoursier/cache/Cache;)Lcoursier/Resolve;
  #414 = NameAndType        #410:#413     // withCache:(Lcoursier/cache/Cache;)Lcoursier/Resolve;
  #415 = Methodref          #117.#414     // coursier/Resolve.withCache:(Lcoursier/cache/Cache;)Lcoursier/Resolve;
  #416 = Utf8               (Lcoursier/cache/Cache;)Lcoursier/Artifacts;
  #417 = NameAndType        #410:#416     // withCache:(Lcoursier/cache/Cache;)Lcoursier/Artifacts;
  #418 = Methodref          #17.#417      // coursier/Artifacts.withCache:(Lcoursier/cache/Cache;)Lcoursier/Artifacts;
  #419 = Utf8               withArtifacts
  #420 = Utf8               (Lcoursier/Artifacts;)Lcoursier/Fetch;
  #421 = NameAndType        #419:#420     // withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
  #422 = Methodref          #2.#421       // coursier/Fetch.withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
  #423 = Utf8               Lcoursier/cache/Cache;
  #424 = Utf8               withResolveCache
  #425 = Utf8               withArtifactsCache
  #426 = Utf8               withOtherArtifactsCaches
  #427 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/cache/Cache<TF;>;>;)Lcoursier/Fetch<TF;>;
  #428 = Utf8               caches
  #429 = Utf8               withOtherCaches
  #430 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
  #431 = NameAndType        #429:#430     // withOtherCaches:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
  #432 = Methodref          #17.#431      // coursier/Artifacts.withOtherCaches:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
  #433 = Utf8               withFetchCache
  #434 = Utf8               (Ljava/io/File;)Lcoursier/Fetch;
  #435 = Utf8               (Ljava/io/File;)Lcoursier/Fetch<TF;>;
  #436 = Utf8               withFetchCacheOpt
  #437 = Utf8               (Lscala/Option;)Lcoursier/Fetch;
  #438 = NameAndType        #436:#437     // withFetchCacheOpt:(Lscala/Option;)Lcoursier/Fetch;
  #439 = Methodref          #2.#438       // coursier/Fetch.withFetchCacheOpt:(Lscala/Option;)Lcoursier/Fetch;
  #440 = Utf8               Ljava/io/File;
  #441 = Utf8               (Lscala/Option<Ljava/io/File;>;)Lcoursier/Fetch<TF;>;
  #442 = Utf8               locationOpt
  #443 = Utf8               transformResolution
  #444 = Utf8               (Lscala/Function1<TF;TF;>;)Lcoursier/Fetch<TF;>;
  #445 = Utf8               ()Ljava/lang/Object;
  #446 = MethodType         #445          //  ()Ljava/lang/Object;
  #447 = Utf8               $anonfun$transformResolution$1
  #448 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #449 = NameAndType        #447:#448     // $anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
  #450 = Methodref          #2.#449       // coursier/Fetch.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
  #451 = MethodHandle       6:#450        // REF_invokeStatic coursier/Fetch.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
  #452 = MethodType         #270          //  ()Lscala/Function1;
  #453 = Utf8               (Lscala/Function1;)Lscala/Function0;
  #454 = NameAndType        #59:#453      // apply:(Lscala/Function1;)Lscala/Function0;
  #455 = InvokeDynamic      #4:#454       // #4:apply:(Lscala/Function1;)Lscala/Function0;
  #456 = Utf8               $anonfun$transformResolution$2
  #457 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #458 = NameAndType        #456:#457     // $anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #459 = Methodref          #2.#458       // coursier/Fetch.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #460 = MethodHandle       6:#459        // REF_invokeStatic coursier/Fetch.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #461 = MethodType         #448          //  (Lscala/Function1;)Lscala/Function1;
  #462 = NameAndType        #59:#448      // apply:(Lscala/Function1;)Lscala/Function1;
  #463 = InvokeDynamic      #5:#462       // #5:apply:(Lscala/Function1;)Lscala/Function1;
  #464 = Utf8               fold
  #465 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #466 = NameAndType        #464:#465     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #467 = Methodref          #179.#466     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #468 = Utf8               withThroughOpt
  #469 = Utf8               (Lscala/Option;)Lcoursier/Resolve;
  #470 = NameAndType        #468:#469     // withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
  #471 = Methodref          #117.#470     // coursier/Resolve.withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
  #472 = Utf8               noTransformResolution
  #473 = Utf8               withTransformResolution
  #474 = Utf8               (Lscala/Option<Lscala/Function1<TF;TF;>;>;)Lcoursier/Fetch<TF;>;
  #475 = Utf8               fOpt
  #476 = Utf8               transformFetcher
  #477 = Utf8               (Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;)Lcoursier/Fetch<TF;>;
  #478 = Utf8               $anonfun$transformFetcher$1
  #479 = NameAndType        #478:#448     // $anonfun$transformFetcher$1:(Lscala/Function1;)Lscala/Function1;
  #480 = Methodref          #2.#479       // coursier/Fetch.$anonfun$transformFetcher$1:(Lscala/Function1;)Lscala/Function1;
  #481 = MethodHandle       6:#480        // REF_invokeStatic coursier/Fetch.$anonfun$transformFetcher$1:(Lscala/Function1;)Lscala/Function1;
  #482 = InvokeDynamic      #6:#454       // #6:apply:(Lscala/Function1;)Lscala/Function0;
  #483 = Utf8               $anonfun$transformFetcher$2
  #484 = NameAndType        #483:#457     // $anonfun$transformFetcher$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #485 = Methodref          #2.#484       // coursier/Fetch.$anonfun$transformFetcher$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #486 = MethodHandle       6:#485        // REF_invokeStatic coursier/Fetch.$anonfun$transformFetcher$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #487 = InvokeDynamic      #7:#462       // #7:apply:(Lscala/Function1;)Lscala/Function1;
  #488 = Utf8               withTransformFetcherOpt
  #489 = NameAndType        #488:#469     // withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
  #490 = Methodref          #117.#489     // coursier/Resolve.withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
  #491 = Utf8               noTransformFetcher
  #492 = Utf8               withTransformFetcher
  #493 = Utf8               (Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;)Lcoursier/Fetch<TF;>;
  #494 = Utf8               withClassifiers
  #495 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/Fetch;
  #496 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/core/Classifier;>;)Lcoursier/Fetch<TF;>;
  #497 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/Artifacts;
  #498 = NameAndType        #494:#497     // withClassifiers:(Lscala/collection/immutable/Set;)Lcoursier/Artifacts;
  #499 = Methodref          #17.#498      // coursier/Artifacts.withClassifiers:(Lscala/collection/immutable/Set;)Lcoursier/Artifacts;
  #500 = Utf8               Lscala/collection/immutable/Set;
  #501 = Utf8               addClassifiers
  #502 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Classifier;>;)Lcoursier/Fetch<TF;>;
  #503 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
  #504 = NameAndType        #375:#503     // $plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
  #505 = InterfaceMethodref #215.#504     // scala/collection/immutable/Set.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
  #506 = Utf8               withMainArtifacts
  #507 = Utf8               (Ljava/lang/Boolean;)Lcoursier/Fetch;
  #508 = Utf8               (Ljava/lang/Boolean;)Lcoursier/Fetch<TF;>;
  #509 = Utf8               mainArtifacts
  #510 = Utf8               scala/Option$
  #511 = Class              #510          // scala/Option$
  #512 = Utf8               Lscala/Option$;
  #513 = NameAndType        #65:#512      // MODULE$:Lscala/Option$;
  #514 = Fieldref           #511.#513     // scala/Option$.MODULE$:Lscala/Option$;
  #515 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #516 = NameAndType        #59:#515      // apply:(Ljava/lang/Object;)Lscala/Option;
  #517 = Methodref          #511.#516     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #518 = Utf8               $anonfun$withMainArtifacts$1$adapted
  #519 = Utf8               (Ljava/lang/Boolean;)Ljava/lang/Object;
  #520 = NameAndType        #518:#519     // $anonfun$withMainArtifacts$1$adapted:(Ljava/lang/Boolean;)Ljava/lang/Object;
  #521 = Methodref          #2.#520       // coursier/Fetch.$anonfun$withMainArtifacts$1$adapted:(Ljava/lang/Boolean;)Ljava/lang/Object;
  #522 = MethodHandle       6:#521        // REF_invokeStatic coursier/Fetch.$anonfun$withMainArtifacts$1$adapted:(Ljava/lang/Boolean;)Ljava/lang/Object;
  #523 = MethodType         #519          //  (Ljava/lang/Boolean;)Ljava/lang/Object;
  #524 = InvokeDynamic      #8:#271       // #8:apply:()Lscala/Function1;
  #525 = Utf8               withMainArtifactsOpt
  #526 = Utf8               (Lscala/Option;)Lcoursier/Artifacts;
  #527 = NameAndType        #525:#526     // withMainArtifactsOpt:(Lscala/Option;)Lcoursier/Artifacts;
  #528 = Methodref          #17.#527      // coursier/Artifacts.withMainArtifactsOpt:(Lscala/Option;)Lcoursier/Artifacts;
  #529 = Utf8               Ljava/lang/Boolean;
  #530 = Utf8               scala/runtime/BoxesRunTime
  #531 = Class              #530          // scala/runtime/BoxesRunTime
  #532 = Utf8               boxToBoolean
  #533 = Utf8               (Z)Ljava/lang/Boolean;
  #534 = NameAndType        #532:#533     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #535 = Methodref          #531.#534     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #536 = Utf8               withArtifactTypes
  #537 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/core/Type;>;)Lcoursier/Fetch<TF;>;
  #538 = Utf8               artifactTypes
  #539 = Utf8               withArtifactTypesOpt
  #540 = NameAndType        #539:#526     // withArtifactTypesOpt:(Lscala/Option;)Lcoursier/Artifacts;
  #541 = Methodref          #17.#540      // coursier/Artifacts.withArtifactTypesOpt:(Lscala/Option;)Lcoursier/Artifacts;
  #542 = Utf8               addArtifactTypes
  #543 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Type;>;)Lcoursier/Fetch<TF;>;
  #544 = Utf8               $anonfun$addArtifactTypes$1
  #545 = NameAndType        #544:#150     // $anonfun$addArtifactTypes$1:()Lscala/collection/immutable/Set;
  #546 = Methodref          #2.#545       // coursier/Fetch.$anonfun$addArtifactTypes$1:()Lscala/collection/immutable/Set;
  #547 = MethodHandle       6:#546        // REF_invokeStatic coursier/Fetch.$anonfun$addArtifactTypes$1:()Lscala/collection/immutable/Set;
  #548 = MethodType         #150          //  ()Lscala/collection/immutable/Set;
  #549 = Utf8               ()Lscala/Function0;
  #550 = NameAndType        #59:#549      // apply:()Lscala/Function0;
  #551 = InvokeDynamic      #9:#550       // #9:apply:()Lscala/Function0;
  #552 = Utf8               getOrElse
  #553 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #554 = NameAndType        #552:#553     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #555 = Methodref          #179.#554     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #556 = Utf8               scala/collection/SetOps
  #557 = Class              #556          // scala/collection/SetOps
  #558 = InterfaceMethodref #557.#504     // scala/collection/SetOps.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
  #559 = Utf8               allArtifactTypes
  #560 = Utf8               scala/runtime/ScalaRunTime$
  #561 = Class              #560          // scala/runtime/ScalaRunTime$
  #562 = Utf8               Lscala/runtime/ScalaRunTime$;
  #563 = NameAndType        #65:#562      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #564 = Fieldref           #561.#563     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #565 = Utf8               coursier/core/Type
  #566 = Class              #565          // coursier/core/Type
  #567 = Utf8               coursier/package$
  #568 = Class              #567          // coursier/package$
  #569 = Utf8               Lcoursier/package$;
  #570 = NameAndType        #65:#569      // MODULE$:Lcoursier/package$;
  #571 = Fieldref           #568.#570     // coursier/package$.MODULE$:Lcoursier/package$;
  #572 = Utf8               Type
  #573 = Utf8               ()Lcoursier/core/Type$;
  #574 = NameAndType        #572:#573     // Type:()Lcoursier/core/Type$;
  #575 = Methodref          #568.#574     // coursier/package$.Type:()Lcoursier/core/Type$;
  #576 = Utf8               coursier/core/Type$
  #577 = Class              #576          // coursier/core/Type$
  #578 = Utf8               all
  #579 = NameAndType        #578:#314     // all:()Ljava/lang/String;
  #580 = Methodref          #577.#579     // coursier/core/Type$.all:()Ljava/lang/String;
  #581 = Utf8               (Ljava/lang/String;)V
  #582 = NameAndType        #337:#581     // "<init>":(Ljava/lang/String;)V
  #583 = Methodref          #566.#582     // coursier/core/Type."<init>":(Ljava/lang/String;)V
  #584 = Utf8               genericWrapArray
  #585 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #586 = NameAndType        #584:#585     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #587 = Methodref          #561.#586     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #588 = Utf8               addExtraArtifacts
  #589 = Utf8               (Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lcoursier/util/Artifact;>;>;)Lcoursier/Fetch<TF;>;
  #590 = Utf8               $colon$plus
  #591 = NameAndType        #590:#253     // $colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
  #592 = InterfaceMethodref #184.#591     // scala/collection/immutable/Seq.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
  #593 = Utf8               withExtraArtifactsSeq
  #594 = NameAndType        #593:#430     // withExtraArtifactsSeq:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
  #595 = Methodref          #17.#594      // coursier/Artifacts.withExtraArtifactsSeq:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
  #596 = Utf8               noExtraArtifacts
  #597 = Utf8               withExtraArtifacts
  #598 = Utf8               (Lscala/collection/immutable/Seq<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lcoursier/util/Artifact;>;>;>;)Lcoursier/Fetch<TF;>;
  #599 = Utf8               l
  #600 = Utf8               addTransformArtifacts
  #601 = Utf8               (Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;>;)Lcoursier/Fetch<TF;>;
  #602 = Utf8               (Lscala/Function1;)Lcoursier/Artifacts;
  #603 = NameAndType        #600:#602     // addTransformArtifacts:(Lscala/Function1;)Lcoursier/Artifacts;
  #604 = Methodref          #17.#603      // coursier/Artifacts.addTransformArtifacts:(Lscala/Function1;)Lcoursier/Artifacts;
  #605 = Utf8               withClasspathOrder
  #606 = Utf8               (Z)Lcoursier/Fetch;
  #607 = Utf8               (Z)Lcoursier/Fetch<TF;>;
  #608 = Utf8               (Z)Lcoursier/Artifacts;
  #609 = NameAndType        #605:#608     // withClasspathOrder:(Z)Lcoursier/Artifacts;
  #610 = Methodref          #17.#609      // coursier/Artifacts.withClasspathOrder:(Z)Lcoursier/Artifacts;
  #611 = Utf8               ioResult
  #612 = Utf8               ()TF;
  #613 = Utf8               io
  #614 = NameAndType        #613:#445     // io:()Ljava/lang/Object;
  #615 = Methodref          #117.#614     // coursier/Resolve.io:()Ljava/lang/Object;
  #616 = Utf8               Lcoursier/util/Monad$ops$;
  #617 = NameAndType        #65:#616      // MODULE$:Lcoursier/util/Monad$ops$;
  #618 = Fieldref           #40.#617      // coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
  #619 = NameAndType        #78:#145      // S:()Lcoursier/util/Sync;
  #620 = Methodref          #2.#619       // coursier/Fetch.S:()Lcoursier/util/Sync;
  #621 = Utf8               toAllMonadOps
  #622 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #623 = NameAndType        #621:#622     // toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #624 = Methodref          #40.#623      // coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #625 = Utf8               $anonfun$ioResult$1
  #626 = Utf8               (Lcoursier/Fetch;Lcoursier/core/Resolution;)Ljava/lang/Object;
  #627 = NameAndType        #625:#626     // $anonfun$ioResult$1:(Lcoursier/Fetch;Lcoursier/core/Resolution;)Ljava/lang/Object;
  #628 = Methodref          #2.#627       // coursier/Fetch.$anonfun$ioResult$1:(Lcoursier/Fetch;Lcoursier/core/Resolution;)Ljava/lang/Object;
  #629 = MethodHandle       6:#628        // REF_invokeStatic coursier/Fetch.$anonfun$ioResult$1:(Lcoursier/Fetch;Lcoursier/core/Resolution;)Ljava/lang/Object;
  #630 = Utf8               (Lcoursier/core/Resolution;)Ljava/lang/Object;
  #631 = MethodType         #630          //  (Lcoursier/core/Resolution;)Ljava/lang/Object;
  #632 = Utf8               (Lcoursier/Fetch;)Lscala/Function1;
  #633 = NameAndType        #59:#632      // apply:(Lcoursier/Fetch;)Lscala/Function1;
  #634 = InvokeDynamic      #10:#633      // #10:apply:(Lcoursier/Fetch;)Lscala/Function1;
  #635 = Utf8               flatMap
  #636 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #637 = NameAndType        #635:#636     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #638 = InterfaceMethodref #35.#637      // coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #639 = Utf8               resolutionIO
  #640 = Utf8               Ljava/lang/Object;
  #641 = NameAndType        #56:#107      // fetchCacheOpt:()Lscala/Option;
  #642 = Methodref          #2.#641       // coursier/Fetch.fetchCacheOpt:()Lscala/Option;
  #643 = Utf8               $anonfun$io$1
  #644 = Utf8               (Lcoursier/Fetch;Ljava/io/File;)Lscala/Option;
  #645 = NameAndType        #643:#644     // $anonfun$io$1:(Lcoursier/Fetch;Ljava/io/File;)Lscala/Option;
  #646 = Methodref          #2.#645       // coursier/Fetch.$anonfun$io$1:(Lcoursier/Fetch;Ljava/io/File;)Lscala/Option;
  #647 = MethodHandle       6:#646        // REF_invokeStatic coursier/Fetch.$anonfun$io$1:(Lcoursier/Fetch;Ljava/io/File;)Lscala/Option;
  #648 = Utf8               (Ljava/io/File;)Lscala/Option;
  #649 = MethodType         #648          //  (Ljava/io/File;)Lscala/Option;
  #650 = InvokeDynamic      #11:#633      // #11:apply:(Lcoursier/Fetch;)Lscala/Function1;
  #651 = NameAndType        #635:#334     // flatMap:(Lscala/Function1;)Lscala/Option;
  #652 = Methodref          #179.#651     // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
  #653 = Utf8               value
  #654 = NameAndType        #653:#445     // value:()Ljava/lang/Object;
  #655 = Methodref          #342.#654     // scala/Some.value:()Ljava/lang/Object;
  #656 = Utf8               scala/Tuple2
  #657 = Class              #656          // scala/Tuple2
  #658 = Utf8               _1
  #659 = NameAndType        #658:#445     // _1:()Ljava/lang/Object;
  #660 = Methodref          #657.#659     // scala/Tuple2._1:()Ljava/lang/Object;
  #661 = Utf8               _2
  #662 = NameAndType        #661:#445     // _2:()Ljava/lang/Object;
  #663 = Methodref          #657.#662     // scala/Tuple2._2:()Ljava/lang/Object;
  #664 = Utf8               read
  #665 = Utf8               (Lcoursier/internal/FetchCache$Key;)Lscala/Option;
  #666 = NameAndType        #664:#665     // read:(Lcoursier/internal/FetchCache$Key;)Lscala/Option;
  #667 = Methodref          #32.#666      // coursier/internal/FetchCache.read:(Lcoursier/internal/FetchCache$Key;)Lscala/Option;
  #668 = Utf8               coursier/util/Sync
  #669 = Class              #668          // coursier/util/Sync
  #670 = Utf8               point
  #671 = NameAndType        #670:#253     // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #672 = InterfaceMethodref #669.#671     // coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #673 = Utf8               equals
  #674 = Utf8               (Ljava/lang/Object;)Z
  #675 = NameAndType        #673:#674     // equals:(Ljava/lang/Object;)Z
  #676 = Methodref          #5.#675       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #677 = NameAndType        #611:#445     // ioResult:()Ljava/lang/Object;
  #678 = Methodref          #2.#677       // coursier/Fetch.ioResult:()Ljava/lang/Object;
  #679 = Utf8               $anonfun$io$3
  #680 = Utf8               (Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lcoursier/Fetch$Result;)Ljava/lang/Object;
  #681 = NameAndType        #679:#680     // $anonfun$io$3:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lcoursier/Fetch$Result;)Ljava/lang/Object;
  #682 = Methodref          #2.#681       // coursier/Fetch.$anonfun$io$3:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lcoursier/Fetch$Result;)Ljava/lang/Object;
  #683 = MethodHandle       6:#682        // REF_invokeStatic coursier/Fetch.$anonfun$io$3:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lcoursier/Fetch$Result;)Ljava/lang/Object;
  #684 = Utf8               (Lcoursier/Fetch$Result;)Ljava/lang/Object;
  #685 = MethodType         #684          //  (Lcoursier/Fetch$Result;)Ljava/lang/Object;
  #686 = Utf8               (Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;)Lscala/Function1;
  #687 = NameAndType        #59:#686      // apply:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;)Lscala/Function1;
  #688 = InvokeDynamic      #12:#687      // #12:apply:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;)Lscala/Function1;
  #689 = Utf8               scala/MatchError
  #690 = Class              #689          // scala/MatchError
  #691 = Methodref          #690.#344     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #692 = Utf8               $anonfun$io$7
  #693 = Utf8               (Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
  #694 = NameAndType        #692:#693     // $anonfun$io$7:(Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
  #695 = Methodref          #2.#694       // coursier/Fetch.$anonfun$io$7:(Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
  #696 = MethodHandle       6:#695        // REF_invokeStatic coursier/Fetch.$anonfun$io$7:(Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
  #697 = MethodType         #693          //  (Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
  #698 = InvokeDynamic      #13:#271      // #13:apply:()Lscala/Function1;
  #699 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #700 = NameAndType        #333:#699     // map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #701 = InterfaceMethodref #669.#700     // coursier/util/Sync.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #702 = Utf8               files
  #703 = Utf8               Lcoursier/internal/FetchCache;
  #704 = Utf8               cacheKeyOpt0
  #705 = Utf8               (Lcoursier/Resolve<TF;>;)Lcoursier/Fetch<TF;>;
  #706 = Utf8               (Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
  #707 = NameAndType        #337:#706     // "<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
  #708 = Methodref          #2.#707       // coursier/Fetch."<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
  #709 = Utf8               (Lcoursier/Artifacts<TF;>;)Lcoursier/Fetch<TF;>;
  #710 = Utf8               toString
  #711 = Utf8               java/lang/StringBuilder
  #712 = Class              #711          // java/lang/StringBuilder
  #713 = Utf8               Fetch(
  #714 = String             #713          // Fetch(
  #715 = Methodref          #712.#582     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #716 = Utf8               java/lang/String
  #717 = Class              #716          // java/lang/String
  #718 = Utf8               valueOf
  #719 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #720 = NameAndType        #718:#719     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #721 = Methodref          #717.#720     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #722 = Utf8               append
  #723 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #724 = NameAndType        #722:#723     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #725 = Methodref          #712.#724     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #726 = Utf8               ,
  #727 = String             #726          // ,
  #728 = Utf8               )
  #729 = String             #728          // )
  #730 = NameAndType        #710:#314     // toString:()Ljava/lang/String;
  #731 = Methodref          #712.#730     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #732 = Utf8               b
  #733 = Utf8               Ljava/lang/StringBuilder;
  #734 = Utf8               canEqual
  #735 = Utf8               obj
  #736 = NameAndType        #734:#674     // canEqual:(Ljava/lang/Object;)Z
  #737 = Methodref          #2.#736       // coursier/Fetch.canEqual:(Ljava/lang/Object;)Z
  #738 = Utf8               other
  #739 = Utf8               hashCode
  #740 = Utf8               ()I
  #741 = Utf8               Fetch
  #742 = String             #741          // Fetch
  #743 = Utf8               scala/runtime/Statics
  #744 = Class              #743          // scala/runtime/Statics
  #745 = Utf8               anyHash
  #746 = Utf8               (Ljava/lang/Object;)I
  #747 = NameAndType        #745:#746     // anyHash:(Ljava/lang/Object;)I
  #748 = Methodref          #744.#747     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #749 = Utf8               code
  #750 = Utf8               I
  #751 = Utf8               tuple
  #752 = Utf8               ()Lscala/Tuple3;
  #753 = Utf8               ()Lscala/Tuple3<Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;>;
  #754 = Utf8               scala/Tuple3
  #755 = Class              #754          // scala/Tuple3
  #756 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #757 = NameAndType        #337:#756     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #758 = Methodref          #755.#757     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #759 = Utf8               productPrefix
  #760 = Utf8               productArity
  #761 = Utf8               productElement
  #762 = Utf8               (I)Ljava/lang/Object;
  #763 = Utf8               n
  #764 = Utf8               java/lang/IndexOutOfBoundsException
  #765 = Class              #764          // java/lang/IndexOutOfBoundsException
  #766 = Utf8               boxToInteger
  #767 = Utf8               (I)Ljava/lang/Integer;
  #768 = NameAndType        #766:#767     // boxToInteger:(I)Ljava/lang/Integer;
  #769 = Methodref          #531.#768     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #770 = Methodref          #5.#730       // java/lang/Object.toString:()Ljava/lang/String;
  #771 = Methodref          #765.#582     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #772 = Utf8               productElementName
  #773 = Utf8               (I)Ljava/lang/String;
  #774 = String             #62           // resolve
  #775 = String             #53           // artifacts
  #776 = String             #56           // fetchCacheOpt
  #777 = Utf8               x0$1
  #778 = Utf8               coursier/core/Module
  #779 = Class              #778          // coursier/core/Module
  #780 = Utf8               (I)V
  #781 = NameAndType        #337:#780     // "<init>":(I)V
  #782 = Methodref          #712.#781     // java/lang/StringBuilder."<init>":(I)V
  #783 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #784 = NameAndType        #722:#783     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #785 = Methodref          #712.#784     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #786 = Utf8               :
  #787 = String             #786          // :
  #788 = Utf8               m
  #789 = Utf8               Lcoursier/core/Module;
  #790 = Utf8               v
  #791 = Utf8               Ljava/lang/String;
  #792 = Utf8               Lscala/Tuple2;
  #793 = Utf8               x0$2
  #794 = Utf8               =
  #795 = String             #794          // =
  #796 = Utf8               k
  #797 = Utf8               x0$3
  #798 = Utf8               x$1
  #799 = Utf8               Lcoursier/core/Type$;
  #800 = NameAndType        #65:#799      // MODULE$:Lcoursier/core/Type$;
  #801 = Fieldref           #577.#800     // coursier/core/Type$.MODULE$:Lcoursier/core/Type$;
  #802 = Methodref          #577.#324     // coursier/core/Type$.ordering:()Lscala/math/Ordering;
  #803 = Utf8               f$1
  #804 = Utf8               x$2
  #805 = Utf8               andThen
  #806 = NameAndType        #805:#448     // andThen:(Lscala/Function1;)Lscala/Function1;
  #807 = InterfaceMethodref #406.#806     // scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
  #808 = Utf8               f$2
  #809 = Utf8               x$3
  #810 = Utf8               $anonfun$withMainArtifacts$1
  #811 = Utf8               (Ljava/lang/Boolean;)Z
  #812 = Utf8               x
  #813 = Utf8               Boolean2boolean
  #814 = NameAndType        #813:#811     // Boolean2boolean:(Ljava/lang/Boolean;)Z
  #815 = Methodref          #196.#814     // scala/Predef$.Boolean2boolean:(Ljava/lang/Boolean;)Z
  #816 = Utf8               $anonfun$ioResult$2
  #817 = Utf8               (Lcoursier/core/Resolution;Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
  #818 = Utf8               resolution$1
  #819 = Utf8               res
  #820 = Utf8               Lcoursier/Fetch$Result$;
  #821 = NameAndType        #65:#820      // MODULE$:Lcoursier/Fetch$Result$;
  #822 = Fieldref           #28.#821      // coursier/Fetch$Result$.MODULE$:Lcoursier/Fetch$Result$;
  #823 = Utf8               fullDetailedArtifacts
  #824 = NameAndType        #823:#112     // fullDetailedArtifacts:()Lscala/collection/immutable/Seq;
  #825 = Methodref          #15.#824      // coursier/Artifacts$Result.fullDetailedArtifacts:()Lscala/collection/immutable/Seq;
  #826 = Utf8               fullExtraArtifacts
  #827 = NameAndType        #826:#112     // fullExtraArtifacts:()Lscala/collection/immutable/Seq;
  #828 = Methodref          #15.#827      // coursier/Artifacts$Result.fullExtraArtifacts:()Lscala/collection/immutable/Seq;
  #829 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lcoursier/Fetch$Result;
  #830 = NameAndType        #59:#829      // apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lcoursier/Fetch$Result;
  #831 = Methodref          #28.#830      // coursier/Fetch$Result$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lcoursier/Fetch$Result;
  #832 = Utf8               Lcoursier/core/Resolution;
  #833 = Utf8               Lcoursier/Artifacts$Result;
  #834 = Utf8               $this
  #835 = Utf8               resolution
  #836 = Utf8               withResolution
  #837 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/Artifacts;
  #838 = NameAndType        #836:#837     // withResolution:(Lcoursier/core/Resolution;)Lcoursier/Artifacts;
  #839 = Methodref          #17.#838      // coursier/Artifacts.withResolution:(Lcoursier/core/Resolution;)Lcoursier/Artifacts;
  #840 = Methodref          #17.#677      // coursier/Artifacts.ioResult:()Ljava/lang/Object;
  #841 = NameAndType        #816:#817     // $anonfun$ioResult$2:(Lcoursier/core/Resolution;Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
  #842 = Methodref          #2.#841       // coursier/Fetch.$anonfun$ioResult$2:(Lcoursier/core/Resolution;Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
  #843 = MethodHandle       6:#842        // REF_invokeStatic coursier/Fetch.$anonfun$ioResult$2:(Lcoursier/core/Resolution;Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
  #844 = Utf8               (Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
  #845 = MethodType         #844          //  (Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
  #846 = Utf8               (Lcoursier/core/Resolution;)Lscala/Function1;
  #847 = NameAndType        #59:#846      // apply:(Lcoursier/core/Resolution;)Lscala/Function1;
  #848 = InvokeDynamic      #14:#847      // #14:apply:(Lcoursier/core/Resolution;)Lscala/Function1;
  #849 = Utf8               fetchIO_
  #850 = Utf8               $anonfun$io$2
  #851 = Utf8               (Ljava/io/File;Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
  #852 = Utf8               fetchCache$1
  #853 = Utf8               coursier/internal/FetchCache$
  #854 = Class              #853          // coursier/internal/FetchCache$
  #855 = Utf8               Lcoursier/internal/FetchCache$;
  #856 = NameAndType        #65:#855      // MODULE$:Lcoursier/internal/FetchCache$;
  #857 = Fieldref           #854.#856     // coursier/internal/FetchCache$.MODULE$:Lcoursier/internal/FetchCache$;
  #858 = Utf8               toPath
  #859 = Utf8               ()Ljava/nio/file/Path;
  #860 = NameAndType        #858:#859     // toPath:()Ljava/nio/file/Path;
  #861 = Methodref          #312.#860     // java/io/File.toPath:()Ljava/nio/file/Path;
  #862 = Utf8               (Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
  #863 = NameAndType        #59:#862      // apply:(Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
  #864 = Methodref          #854.#863     // coursier/internal/FetchCache$.apply:(Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
  #865 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #866 = NameAndType        #337:#865     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #867 = Methodref          #657.#866     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #868 = Utf8               fetchCache
  #869 = NameAndType        #850:#851     // $anonfun$io$2:(Ljava/io/File;Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
  #870 = Methodref          #2.#869       // coursier/Fetch.$anonfun$io$2:(Ljava/io/File;Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
  #871 = MethodHandle       6:#870        // REF_invokeStatic coursier/Fetch.$anonfun$io$2:(Ljava/io/File;Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
  #872 = Utf8               (Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
  #873 = MethodType         #872          //  (Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
  #874 = Utf8               (Ljava/io/File;)Lscala/Function1;
  #875 = NameAndType        #59:#874      // apply:(Ljava/io/File;)Lscala/Function1;
  #876 = InvokeDynamic      #15:#875      // #15:apply:(Ljava/io/File;)Lscala/Function1;
  #877 = Utf8               $anonfun$io$4
  #878 = Utf8               (Lscala/Tuple2;)Z
  #879 = Utf8               x$4
  #880 = Utf8               coursier/util/Artifact
  #881 = Class              #880          // coursier/util/Artifact
  #882 = Utf8               changing
  #883 = NameAndType        #882:#173     // changing:()Z
  #884 = Methodref          #881.#883     // coursier/util/Artifact.changing:()Z
  #885 = Utf8               $anonfun$io$5
  #886 = Utf8               (Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)V
  #887 = Utf8               cache$1
  #888 = Utf8               key$1
  #889 = Utf8               files$1
  #890 = Utf8               write
  #891 = Utf8               (Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Z
  #892 = NameAndType        #890:#891     // write:(Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Z
  #893 = Methodref          #32.#892      // coursier/internal/FetchCache.write:(Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Z
  #894 = Utf8               $anonfun$io$6
  #895 = Utf8               (Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
  #896 = Utf8               x$5
  #897 = Utf8               Lscala/runtime/BoxedUnit;
  #898 = NameAndType        #53:#112      // artifacts:()Lscala/collection/immutable/Seq;
  #899 = Methodref          #26.#898      // coursier/Fetch$Result.artifacts:()Lscala/collection/immutable/Seq;
  #900 = NameAndType        #702:#112     // files:()Lscala/collection/immutable/Seq;
  #901 = Methodref          #26.#900      // coursier/Fetch$Result.files:()Lscala/collection/immutable/Seq;
  #902 = Utf8               $anonfun$io$4$adapted
  #903 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #904 = NameAndType        #902:#903     // $anonfun$io$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #905 = Methodref          #2.#904       // coursier/Fetch.$anonfun$io$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #906 = MethodHandle       6:#905        // REF_invokeStatic coursier/Fetch.$anonfun$io$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #907 = MethodType         #903          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #908 = InvokeDynamic      #16:#271      // #16:apply:()Lscala/Function1;
  #909 = Utf8               forall
  #910 = Utf8               (Lscala/Function1;)Z
  #911 = NameAndType        #909:#910     // forall:(Lscala/Function1;)Z
  #912 = InterfaceMethodref #184.#911     // scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
  #913 = Utf8               ()V
  #914 = MethodType         #913          //  ()V
  #915 = NameAndType        #885:#886     // $anonfun$io$5:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)V
  #916 = Methodref          #2.#915       // coursier/Fetch.$anonfun$io$5:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)V
  #917 = MethodHandle       6:#916        // REF_invokeStatic coursier/Fetch.$anonfun$io$5:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)V
  #918 = Utf8               apply$mcV$sp
  #919 = Utf8               (Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #920 = NameAndType        #918:#919     // apply$mcV$sp:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #921 = InvokeDynamic      #17:#920      // #17:apply$mcV$sp:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #922 = Utf8               delay
  #923 = NameAndType        #922:#553     // delay:(Lscala/Function0;)Ljava/lang/Object;
  #924 = InterfaceMethodref #669.#923     // coursier/util/Sync.delay:(Lscala/Function0;)Ljava/lang/Object;
  #925 = Utf8               scala/runtime/BoxedUnit
  #926 = Class              #925          // scala/runtime/BoxedUnit
  #927 = Utf8               UNIT
  #928 = NameAndType        #927:#897     // UNIT:Lscala/runtime/BoxedUnit;
  #929 = Fieldref           #926.#928     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #930 = NameAndType        #894:#895     // $anonfun$io$6:(Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
  #931 = Methodref          #2.#930       // coursier/Fetch.$anonfun$io$6:(Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
  #932 = MethodHandle       6:#931        // REF_invokeStatic coursier/Fetch.$anonfun$io$6:(Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
  #933 = Utf8               (Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
  #934 = MethodType         #933          //  (Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
  #935 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/Function1;
  #936 = NameAndType        #59:#935      // apply:(Lscala/collection/immutable/Seq;)Lscala/Function1;
  #937 = InvokeDynamic      #18:#936      // #18:apply:(Lscala/collection/immutable/Seq;)Lscala/Function1;
  #938 = Utf8               maybeWrite
  #939 = Utf8               Lcoursier/Fetch$Result;
  #940 = Utf8               x$6
  #941 = Utf8               (Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;)V
  #942 = NameAndType        #337:#913     // "<init>":()V
  #943 = Methodref          #5.#942       // java/lang/Object."<init>":()V
  #944 = Utf8               $init$
  #945 = Utf8               (Lscala/Product;)V
  #946 = NameAndType        #944:#945     // $init$:(Lscala/Product;)V
  #947 = InterfaceMethodref #7.#946       // scala/Product.$init$:(Lscala/Product;)V
  #948 = NameAndType        #810:#811     // $anonfun$withMainArtifacts$1:(Ljava/lang/Boolean;)Z
  #949 = Methodref          #2.#948       // coursier/Fetch.$anonfun$withMainArtifacts$1:(Ljava/lang/Boolean;)Z
  #950 = NameAndType        #877:#878     // $anonfun$io$4:(Lscala/Tuple2;)Z
  #951 = Methodref          #2.#950       // coursier/Fetch.$anonfun$io$4:(Lscala/Tuple2;)Z
  #952 = Utf8               $deserializeLambda$
  #953 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #954 = Utf8               scala/runtime/LambdaDeserialize
  #955 = Class              #954          // scala/runtime/LambdaDeserialize
  #956 = Utf8               bootstrap
  #957 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #958 = NameAndType        #956:#957     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #959 = Methodref          #955.#958     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #960 = MethodHandle       6:#959        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #961 = Utf8               lambdaDeserialize
  #962 = NameAndType        #961:#953     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #963 = InvokeDynamic      #19:#962      // #19:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #964 = Utf8               Signature
  #965 = Utf8               Code
  #966 = Utf8               MethodParameters
  #967 = Utf8               LineNumberTable
  #968 = Utf8               LocalVariableTable
  #969 = Utf8               StackMapTable
  #970 = Utf8               InnerClasses
  #971 = Utf8               SourceFile
  #972 = Utf8               RuntimeVisibleAnnotations
  #973 = Utf8               BootstrapMethods
  #974 = Utf8               ScalaInlineInfo
  #975 = Utf8               ScalaSig
{
  private final coursier.Resolve<F> coursier$Fetch$$resolve;
    descriptor: Lcoursier/Resolve;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #52                          // Lcoursier/Resolve<TF;>;

  private final coursier.Artifacts<F> artifacts;
    descriptor: Lcoursier/Artifacts;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #55                          // Lcoursier/Artifacts<TF;>;

  private final scala.Option<java.io.File> fetchCacheOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #58                          // Lscala/Option<Ljava/io/File;>;

  public static <F extends java.lang.Object> coursier.Fetch<F> apply(coursier.Resolve<F>, coursier.Artifacts<F>, scala.Option<java.io.File>);
    descriptor: (Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)Lcoursier/Fetch;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #68                 // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #70                 // Method coursier/Fetch$.apply:(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)Lcoursier/Fetch;
         9: areturn
    Signature: #61                          // <F:Ljava/lang/Object;>(Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      resolve                        final
      artifacts                      final
      fetchCacheOpt                  final

  public static coursier.Fetch FetchTaskOps(coursier.Fetch);
    descriptor: (Lcoursier/Fetch;)Lcoursier/Fetch;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #68                 // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
         3: aload_0
         4: invokevirtual #74                 // Method coursier/Fetch$.FetchTaskOps:(Lcoursier/Fetch;)Lcoursier/Fetch;
         7: areturn
    MethodParameters:
      Name                           Flags
      fetch                          final

  public static <F extends java.lang.Object> coursier.Fetch<F> apply(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Fetch;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #68                 // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
         3: aload_0
         4: aload_1
         5: invokevirtual #80                 // Method coursier/Fetch$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Fetch;
         8: areturn
    Signature: #76                          // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      S                              final

  public static coursier.Fetch<coursier.util.Task> apply();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #68                 // Field coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
         3: invokevirtual #84                 // Method coursier/Fetch$.apply:()Lcoursier/Fetch;
         6: areturn
    Signature: #82                          // ()Lcoursier/Fetch<Lcoursier/util/Task;>;

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Fetch;
    Signature: #87                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #98                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Fetch;
    Signature: #95                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.Resolve<F> coursier$Fetch$$resolve();
    descriptor: ()Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #102                // Field coursier$Fetch$$resolve:Lcoursier/Resolve;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Fetch;
    Signature: #100                         // ()Lcoursier/Resolve<TF;>;

  private coursier.Artifacts<F> artifacts();
    descriptor: ()Lcoursier/Artifacts;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field artifacts:Lcoursier/Artifacts;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Fetch;
    Signature: #104                         // ()Lcoursier/Artifacts<TF;>;

  public scala.Option<java.io.File> fetchCacheOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #110                // Field fetchCacheOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Fetch;
    Signature: #108                         // ()Lscala/Option<Ljava/io/File;>;

  public scala.collection.immutable.Seq<coursier.core.Dependency> dependencies();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #119                // Method coursier/Resolve.dependencies:()Lscala/collection/immutable/Seq;
         7: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #113                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;

  public scala.collection.immutable.Seq<coursier.core.Repository> repositories();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #123                // Method coursier/Resolve.repositories:()Lscala/collection/immutable/Seq;
         7: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #121                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;

  public scala.collection.immutable.Seq<coursier.params.Mirror> mirrors();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #127                // Method coursier/Resolve.mirrors:()Lscala/collection/immutable/Seq;
         7: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #125                         // ()Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;

  public coursier.params.ResolutionParams resolutionParams();
    descriptor: ()Lcoursier/params/ResolutionParams;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #131                // Method coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
         7: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;

  public coursier.cache.Cache<F> cache();
    descriptor: ()Lcoursier/cache/Cache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #135                // Method coursier/Resolve.cache:()Lcoursier/cache/Cache;
         7: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #133                         // ()Lcoursier/cache/Cache<TF;>;

  public scala.Option<scala.Function1<F, F>> throughOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #139                // Method coursier/Resolve.throughOpt:()Lscala/Option;
         7: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #137                         // ()Lscala/Option<Lscala/Function1<TF;TF;>;>;

  public scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>> transformFetcherOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #143                // Method coursier/Resolve.transformFetcherOpt:()Lscala/Option;
         7: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #141                         // ()Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;

  public coursier.util.Sync<F> sync();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #148                // Method coursier/Resolve.sync:()Lcoursier/util/Sync;
         7: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #146                         // ()Lcoursier/util/Sync<TF;>;

  public scala.collection.immutable.Set<coursier.core.Classifier> classifiers();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         4: invokevirtual #155                // Method coursier/Artifacts.classifiers:()Lscala/collection/immutable/Set;
         7: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #151                         // ()Lscala/collection/immutable/Set<Lcoursier/core/Classifier;>;

  public scala.Option<java.lang.Object> mainArtifactsOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         4: invokevirtual #159                // Method coursier/Artifacts.mainArtifactsOpt:()Lscala/Option;
         7: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #157                         // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<scala.collection.immutable.Set<coursier.core.Type>> artifactTypesOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         4: invokevirtual #163                // Method coursier/Artifacts.artifactTypesOpt:()Lscala/Option;
         7: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #161                         // ()Lscala/Option<Lscala/collection/immutable/Set<Lcoursier/core/Type;>;>;

  public scala.collection.immutable.Seq<scala.Function1<scala.collection.immutable.Seq<scala.Tuple3<coursier.core.Dependency, coursier.core.Publication, coursier.util.Artifact>>, scala.collection.immutable.Seq<coursier.util.Artifact>>> extraArtifactsSeq();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         4: invokevirtual #167                // Method coursier/Artifacts.extraArtifactsSeq:()Lscala/collection/immutable/Seq;
         7: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #165                         // ()Lscala/collection/immutable/Seq<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lcoursier/util/Artifact;>;>;>;

  public scala.collection.immutable.Seq<scala.Function1<scala.collection.immutable.Seq<scala.Tuple3<coursier.core.Dependency, coursier.core.Publication, coursier.util.Artifact>>, scala.collection.immutable.Seq<scala.Tuple3<coursier.core.Dependency, coursier.core.Publication, coursier.util.Artifact>>>> transformArtifacts();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         4: invokevirtual #171                // Method coursier/Artifacts.transformArtifacts:()Lscala/collection/immutable/Seq;
         7: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #169                         // ()Lscala/collection/immutable/Seq<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;>;>;

  public boolean classpathOrder();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         4: invokevirtual #175                // Method coursier/Artifacts.classpathOrder:()Z
         7: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;

  private coursier.util.Sync<F> S();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #148                // Method coursier/Resolve.sync:()Lcoursier/util/Sync;
         7: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;
    Signature: #146                         // ()Lcoursier/util/Sync<TF;>;

  private scala.Option<coursier.internal.FetchCache$Key> cacheKeyOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=14, locals=6, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #139                // Method coursier/Resolve.throughOpt:()Lscala/Option;
         7: invokevirtual #182                // Method scala/Option.isEmpty:()Z
        10: ifeq          60
        13: aload_0
        14: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        17: invokevirtual #143                // Method coursier/Resolve.transformFetcherOpt:()Lscala/Option;
        20: invokevirtual #182                // Method scala/Option.isEmpty:()Z
        23: ifeq          60
        26: aload_0
        27: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        30: invokevirtual #167                // Method coursier/Artifacts.extraArtifactsSeq:()Lscala/collection/immutable/Seq;
        33: invokeinterface #185,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
        38: ifeq          60
        41: aload_0
        42: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        45: invokevirtual #188                // Method coursier/Artifacts.resolutions:()Lscala/collection/immutable/Seq;
        48: invokeinterface #185,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
        53: ifeq          60
        56: iconst_1
        57: goto          61
        60: iconst_0
        61: istore_2
        62: iload_2
        63: ifeq          387
        66: aload_0
        67: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        70: invokevirtual #189                // Method coursier/Artifacts.cache:()Lcoursier/cache/Cache;
        73: astore_3
        74: aload_3
        75: instanceof    #191                // class coursier/cache/FileCache
        78: ifeq          373
        81: aload_3
        82: checkcast     #191                // class coursier/cache/FileCache
        85: astore        4
        87: new           #30                 // class coursier/internal/FetchCache$Key
        90: dup
        91: aload_0
        92: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        95: invokevirtual #194                // Method coursier/Resolve.finalDependencies:()Lscala/collection/immutable/Seq;
        98: aload_0
        99: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
       102: invokevirtual #123                // Method coursier/Resolve.repositories:()Lscala/collection/immutable/Seq;
       105: aload_0
       106: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
       109: invokevirtual #131                // Method coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
       112: getstatic     #199                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       115: invokevirtual #203                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       118: getstatic     #208                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       121: invokevirtual #213                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       124: checkcast     #215                // class scala/collection/immutable/Set
       127: invokevirtual #221                // Method coursier/params/ResolutionParams.withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/params/ResolutionParams;
       130: getstatic     #199                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       133: invokevirtual #225                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       136: getstatic     #208                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       139: invokevirtual #228                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       142: checkcast     #230                // class scala/collection/immutable/Map
       145: invokevirtual #234                // Method coursier/params/ResolutionParams.withForceVersion:(Lscala/collection/immutable/Map;)Lcoursier/params/ResolutionParams;
       148: getstatic     #208                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       151: invokevirtual #238                // Method coursier/params/ResolutionParams.withProperties:(Lscala/collection/immutable/Seq;)Lcoursier/params/ResolutionParams;
       154: getstatic     #199                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       157: invokevirtual #225                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       160: getstatic     #208                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       163: invokevirtual #228                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       166: checkcast     #230                // class scala/collection/immutable/Map
       169: invokevirtual #241                // Method coursier/params/ResolutionParams.withForcedProperties:(Lscala/collection/immutable/Map;)Lcoursier/params/ResolutionParams;
       172: getstatic     #199                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       175: invokevirtual #203                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       178: getstatic     #208                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       181: invokevirtual #213                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       184: checkcast     #215                // class scala/collection/immutable/Set
       187: invokevirtual #244                // Method coursier/params/ResolutionParams.withProfiles:(Lscala/collection/immutable/Set;)Lcoursier/params/ResolutionParams;
       190: aload_0
       191: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
       194: invokevirtual #131                // Method coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
       197: invokevirtual #248                // Method coursier/params/ResolutionParams.forceVersion:()Lscala/collection/immutable/Map;
       200: invokeinterface #252,  1          // InterfaceMethod scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
       205: invokedynamic #272,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       210: getstatic     #275                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       213: invokevirtual #281                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       216: checkcast     #184                // class scala/collection/immutable/Seq
       219: aload_0
       220: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
       223: invokevirtual #131                // Method coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
       226: invokevirtual #284                // Method coursier/params/ResolutionParams.properties:()Lscala/collection/immutable/Seq;
       229: invokeinterface #285,  1          // InterfaceMethod scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
       234: invokedynamic #290,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       239: getstatic     #275                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       242: invokevirtual #281                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       245: checkcast     #184                // class scala/collection/immutable/Seq
       248: aload_0
       249: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
       252: invokevirtual #131                // Method coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
       255: invokevirtual #293                // Method coursier/params/ResolutionParams.forcedProperties:()Lscala/collection/immutable/Map;
       258: invokeinterface #252,  1          // InterfaceMethod scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
       263: invokedynamic #298,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       268: getstatic     #275                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       271: invokevirtual #281                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       274: checkcast     #184                // class scala/collection/immutable/Seq
       277: aload_0
       278: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
       281: invokevirtual #131                // Method coursier/Resolve.resolutionParams:()Lcoursier/params/ResolutionParams;
       284: invokevirtual #301                // Method coursier/params/ResolutionParams.profiles:()Lscala/collection/immutable/Set;
       287: invokeinterface #302,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
       292: getstatic     #275                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       295: invokevirtual #306                // Method scala/collection/immutable/Vector.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
       298: checkcast     #184                // class scala/collection/immutable/Seq
       301: aload         4
       303: invokevirtual #310                // Method coursier/cache/FileCache.location:()Ljava/io/File;
       306: invokevirtual #316                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       309: aload_0
       310: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
       313: invokevirtual #155                // Method coursier/Artifacts.classifiers:()Lscala/collection/immutable/Set;
       316: invokeinterface #302,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
       321: getstatic     #321                // Field coursier/core/Classifier$.MODULE$:Lcoursier/core/Classifier$;
       324: invokevirtual #325                // Method coursier/core/Classifier$.ordering:()Lscala/math/Ordering;
       327: invokevirtual #306                // Method scala/collection/immutable/Vector.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
       330: checkcast     #184                // class scala/collection/immutable/Seq
       333: aload_0
       334: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
       337: invokevirtual #159                // Method coursier/Artifacts.mainArtifactsOpt:()Lscala/Option;
       340: aload_0
       341: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
       344: invokevirtual #163                // Method coursier/Artifacts.artifactTypesOpt:()Lscala/Option;
       347: invokedynamic #332,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       352: invokevirtual #336                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       355: invokespecial #340                // Method coursier/internal/FetchCache$Key."<init>":(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;)V
       358: astore        5
       360: new           #342                // class scala/Some
       363: dup
       364: aload         5
       366: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       369: astore_1
       370: goto          383
       373: goto          376
       376: getstatic     #352                // Field scala/None$.MODULE$:Lscala/None$;
       379: astore_1
       380: goto          383
       383: aload_1
       384: goto          390
       387: getstatic     #352                // Field scala/None$.MODULE$:Lscala/None$;
       390: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 60 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 254 /* append */
          offset_delta = 311
          locals = [ top, int, class coursier/cache/Cache ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/Fetch, class scala/Option, int, class coursier/cache/Cache ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/Fetch, top, int ]
          stack = []
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 60: 0
        line 61: 13
        line 62: 26
        line 63: 41
        line 65: 62
        line 66: 66
        line 67: 74
        line 68: 87
        line 69: 91
        line 70: 98
        line 71: 105
        line 74: 112
        line 76: 130
        line 77: 148
        line 78: 154
        line 79: 172
        line 80: 190
        line 81: 219
        line 82: 248
        line 83: 277
        line 84: 301
        line 85: 309
        line 86: 333
        line 87: 340
        line 89: 360
        line 67: 373
        line 91: 376
        line 66: 383
        line 94: 387
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          360       9     5   key   Lcoursier/internal/FetchCache$Key;
           62     328     2 mayBeCached   Z
            0     391     0  this   Lcoursier/Fetch;
    Signature: #177                         // ()Lscala/Option<Lcoursier/internal/FetchCache$Key;>;

  public boolean canBeCached();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #359                // Method cacheKeyOpt:()Lscala/Option;
         4: invokevirtual #362                // Method scala/Option.nonEmpty:()Z
         7: ireturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/Fetch;

  public coursier.Fetch<F> withDependencies(scala.collection.immutable.Seq<coursier.core.Dependency>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #368                // Method coursier/Resolve.withDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 dependencies   Lscala/collection/immutable/Seq;
    Signature: #365                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      dependencies                   final

  public coursier.Fetch<F> addDependencies(scala.collection.immutable.Seq<coursier.core.Dependency>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_0
         6: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         9: invokevirtual #119                // Method coursier/Resolve.dependencies:()Lscala/collection/immutable/Seq;
        12: aload_1
        13: invokeinterface #378,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        18: checkcast     #184                // class scala/collection/immutable/Seq
        21: invokevirtual #368                // Method coursier/Resolve.withDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        24: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        27: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/Fetch;
            0      28     1 dependencies   Lscala/collection/immutable/Seq;
    Signature: #365                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      dependencies                   final

  public coursier.Fetch<F> withRepositories(scala.collection.immutable.Seq<coursier.core.Repository>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #382                // Method coursier/Resolve.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 repositories   Lscala/collection/immutable/Seq;
    Signature: #380                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      repositories                   final

  public coursier.Fetch<F> addRepositories(scala.collection.immutable.Seq<coursier.core.Repository>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_0
         6: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         9: invokevirtual #123                // Method coursier/Resolve.repositories:()Lscala/collection/immutable/Seq;
        12: aload_1
        13: invokeinterface #378,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        18: checkcast     #184                // class scala/collection/immutable/Seq
        21: invokevirtual #382                // Method coursier/Resolve.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        24: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        27: areturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/Fetch;
            0      28     1 repositories   Lscala/collection/immutable/Seq;
    Signature: #380                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      repositories                   final

  public coursier.Fetch<F> noMirrors();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: invokevirtual #387                // Method coursier/Resolve.noMirrors:()Lcoursier/Resolve;
         8: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        11: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/Fetch;
    Signature: #385                         // ()Lcoursier/Fetch<TF;>;

  public coursier.Fetch<F> withMirrors(scala.collection.immutable.Seq<coursier.params.Mirror>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #391                // Method coursier/Resolve.withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 mirrors   Lscala/collection/immutable/Seq;
    Signature: #389                         // (Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      mirrors                        final

  public coursier.Fetch<F> addMirrors(scala.collection.immutable.Seq<coursier.params.Mirror>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_0
         6: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         9: invokevirtual #127                // Method coursier/Resolve.mirrors:()Lscala/collection/immutable/Seq;
        12: aload_1
        13: invokeinterface #378,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        18: checkcast     #184                // class scala/collection/immutable/Seq
        21: invokevirtual #391                // Method coursier/Resolve.withMirrors:(Lscala/collection/immutable/Seq;)Lcoursier/Resolve;
        24: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        27: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/Fetch;
            0      28     1 mirrors   Lscala/collection/immutable/Seq;
    Signature: #389                         // (Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      mirrors                        final

  public coursier.Fetch<F> withResolutionParams(coursier.params.ResolutionParams);
    descriptor: (Lcoursier/params/ResolutionParams;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #398                // Method coursier/Resolve.withResolutionParams:(Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 resolutionParams   Lcoursier/params/ResolutionParams;
    Signature: #395                         // (Lcoursier/params/ResolutionParams;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      resolutionParams               final

  public coursier.Fetch<F> mapResolutionParams(scala.Function1<coursier.params.ResolutionParams, coursier.params.ResolutionParams>);
    descriptor: (Lscala/Function1;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: aload_0
         7: invokevirtual #404                // Method resolutionParams:()Lcoursier/params/ResolutionParams;
        10: invokeinterface #408,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        15: checkcast     #217                // class coursier/params/ResolutionParams
        18: invokevirtual #398                // Method coursier/Resolve.withResolutionParams:(Lcoursier/params/ResolutionParams;)Lcoursier/Resolve;
        21: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        24: areturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/Fetch;
            0      25     1     f   Lscala/Function1;
    Signature: #402                         // (Lscala/Function1<Lcoursier/params/ResolutionParams;Lcoursier/params/ResolutionParams;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Fetch<F> withCache(coursier.cache.Cache<F>);
    descriptor: (Lcoursier/cache/Cache;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #415                // Method coursier/Resolve.withCache:(Lcoursier/cache/Cache;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: aload_0
        13: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        16: aload_1
        17: invokevirtual #418                // Method coursier/Artifacts.withCache:(Lcoursier/cache/Cache;)Lcoursier/Artifacts;
        20: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        23: areturn
      LineNumberTable:
        line 125: 0
        line 126: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcoursier/Fetch;
            0      24     1 cache   Lcoursier/cache/Cache;
    Signature: #412                         // (Lcoursier/cache/Cache<TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final

  public coursier.Fetch<F> withResolveCache(coursier.cache.Cache<F>);
    descriptor: (Lcoursier/cache/Cache;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #415                // Method coursier/Resolve.withCache:(Lcoursier/cache/Cache;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 cache   Lcoursier/cache/Cache;
    Signature: #412                         // (Lcoursier/cache/Cache<TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final

  public coursier.Fetch<F> withArtifactsCache(coursier.cache.Cache<F>);
    descriptor: (Lcoursier/cache/Cache;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: aload_1
         6: invokevirtual #418                // Method coursier/Artifacts.withCache:(Lcoursier/cache/Cache;)Lcoursier/Artifacts;
         9: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 cache   Lcoursier/cache/Cache;
    Signature: #412                         // (Lcoursier/cache/Cache<TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final

  public coursier.Fetch<F> withOtherArtifactsCaches(scala.collection.immutable.Seq<coursier.cache.Cache<F>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: aload_1
         6: invokevirtual #432                // Method coursier/Artifacts.withOtherCaches:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
         9: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 caches   Lscala/collection/immutable/Seq;
    Signature: #427                         // (Lscala/collection/immutable/Seq<Lcoursier/cache/Cache<TF;>;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      caches                         final

  public coursier.Fetch<F> withFetchCache(java.io.File);
    descriptor: (Ljava/io/File;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #342                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: invokevirtual #439                // Method withFetchCacheOpt:(Lscala/Option;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 location   Ljava/io/File;
    Signature: #435                         // (Ljava/io/File;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final

  public coursier.Fetch<F> withFetchCache(scala.Option<java.io.File>);
    descriptor: (Lscala/Option;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #439                // Method withFetchCacheOpt:(Lscala/Option;)Lcoursier/Fetch;
         5: areturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/Fetch;
            0       6     1 locationOpt   Lscala/Option;
    Signature: #441                         // (Lscala/Option<Ljava/io/File;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      locationOpt                    final

  public coursier.Fetch<F> transformResolution(scala.Function1<F, F>);
    descriptor: (Lscala/Function1;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: new           #342                // class scala/Some
         8: dup
         9: aload_0
        10: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        13: invokevirtual #139                // Method coursier/Resolve.throughOpt:()Lscala/Option;
        16: aload_1
        17: invokedynamic #455,  0            // InvokeDynamic #4:apply:(Lscala/Function1;)Lscala/Function0;
        22: aload_1
        23: invokedynamic #463,  0            // InvokeDynamic #5:apply:(Lscala/Function1;)Lscala/Function1;
        28: invokevirtual #467                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        31: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        34: invokevirtual #471                // Method coursier/Resolve.withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
        37: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        40: areturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lcoursier/Fetch;
            0      41     1     f   Lscala/Function1;
    Signature: #444                         // (Lscala/Function1<TF;TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Fetch<F> noTransformResolution();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: getstatic     #352                // Field scala/None$.MODULE$:Lscala/None$;
         8: invokevirtual #471                // Method coursier/Resolve.withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
        11: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        14: areturn
      LineNumberTable:
        line 144: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/Fetch;
    Signature: #385                         // ()Lcoursier/Fetch<TF;>;

  public coursier.Fetch<F> withTransformResolution(scala.Option<scala.Function1<F, F>>);
    descriptor: (Lscala/Option;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #471                // Method coursier/Resolve.withThroughOpt:(Lscala/Option;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1  fOpt   Lscala/Option;
    Signature: #474                         // (Lscala/Option<Lscala/Function1<TF;TF;>;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      fOpt                           final

  public coursier.Fetch<F> transformFetcher(scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>);
    descriptor: (Lscala/Function1;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: new           #342                // class scala/Some
         8: dup
         9: aload_0
        10: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        13: invokevirtual #143                // Method coursier/Resolve.transformFetcherOpt:()Lscala/Option;
        16: aload_1
        17: invokedynamic #482,  0            // InvokeDynamic #6:apply:(Lscala/Function1;)Lscala/Function0;
        22: aload_1
        23: invokedynamic #487,  0            // InvokeDynamic #7:apply:(Lscala/Function1;)Lscala/Function1;
        28: invokevirtual #467                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        31: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        34: invokevirtual #490                // Method coursier/Resolve.withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
        37: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        40: areturn
      LineNumberTable:
        line 149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lcoursier/Fetch;
            0      41     1     f   Lscala/Function1;
    Signature: #477                         // (Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Fetch<F> noTransformFetcher();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: getstatic     #352                // Field scala/None$.MODULE$:Lscala/None$;
         8: invokevirtual #490                // Method coursier/Resolve.withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
        11: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        14: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/Fetch;
    Signature: #385                         // ()Lcoursier/Fetch<TF;>;

  public coursier.Fetch<F> withTransformFetcher(scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>);
    descriptor: (Lscala/Option;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         5: aload_1
         6: invokevirtual #490                // Method coursier/Resolve.withTransformFetcherOpt:(Lscala/Option;)Lcoursier/Resolve;
         9: invokevirtual #372                // Method withResolve:(Lcoursier/Resolve;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1  fOpt   Lscala/Option;
    Signature: #493                         // (Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      fOpt                           final

  public coursier.Fetch<F> withClassifiers(scala.collection.immutable.Set<coursier.core.Classifier>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: aload_1
         6: invokevirtual #499                // Method coursier/Artifacts.withClassifiers:(Lscala/collection/immutable/Set;)Lcoursier/Artifacts;
         9: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 classifiers   Lscala/collection/immutable/Set;
    Signature: #496                         // (Lscala/collection/immutable/Set<Lcoursier/core/Classifier;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      classifiers                    final

  public coursier.Fetch<F> addClassifiers(scala.collection.immutable.Seq<coursier.core.Classifier>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: aload_0
         6: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         9: invokevirtual #155                // Method coursier/Artifacts.classifiers:()Lscala/collection/immutable/Set;
        12: aload_1
        13: invokeinterface #505,  2          // InterfaceMethod scala/collection/immutable/Set.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
        18: checkcast     #215                // class scala/collection/immutable/Set
        21: invokevirtual #499                // Method coursier/Artifacts.withClassifiers:(Lscala/collection/immutable/Set;)Lcoursier/Artifacts;
        24: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        27: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/Fetch;
            0      28     1 classifiers   Lscala/collection/immutable/Seq;
    Signature: #502                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Classifier;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      classifiers                    final

  public coursier.Fetch<F> withMainArtifacts(java.lang.Boolean);
    descriptor: (Ljava/lang/Boolean;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: getstatic     #514                // Field scala/Option$.MODULE$:Lscala/Option$;
         8: aload_1
         9: invokevirtual #517                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        12: invokedynamic #524,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
        17: invokevirtual #336                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        20: invokevirtual #528                // Method coursier/Artifacts.withMainArtifactsOpt:(Lscala/Option;)Lcoursier/Artifacts;
        23: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        26: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lcoursier/Fetch;
            0      27     1 mainArtifacts   Ljava/lang/Boolean;
    Signature: #508                         // (Ljava/lang/Boolean;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      mainArtifacts                  final

  public coursier.Fetch<F> withMainArtifacts();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: new           #342                // class scala/Some
         8: dup
         9: iconst_1
        10: invokestatic  #535                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        13: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        16: invokevirtual #528                // Method coursier/Artifacts.withMainArtifactsOpt:(Lscala/Option;)Lcoursier/Artifacts;
        19: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        22: areturn
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/Fetch;
    Signature: #385                         // ()Lcoursier/Fetch<TF;>;

  public coursier.Fetch<F> withArtifactTypes(scala.collection.immutable.Set<coursier.core.Type>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: new           #342                // class scala/Some
         8: dup
         9: aload_1
        10: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        13: invokevirtual #541                // Method coursier/Artifacts.withArtifactTypesOpt:(Lscala/Option;)Lcoursier/Artifacts;
        16: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        19: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcoursier/Fetch;
            0      20     1 artifactTypes   Lscala/collection/immutable/Set;
    Signature: #537                         // (Lscala/collection/immutable/Set<Lcoursier/core/Type;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      artifactTypes                  final

  public coursier.Fetch<F> addArtifactTypes(scala.collection.immutable.Seq<coursier.core.Type>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: new           #342                // class scala/Some
         8: dup
         9: aload_0
        10: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        13: invokevirtual #163                // Method coursier/Artifacts.artifactTypesOpt:()Lscala/Option;
        16: invokedynamic #551,  0            // InvokeDynamic #9:apply:()Lscala/Function0;
        21: invokevirtual #555                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        24: checkcast     #557                // class scala/collection/SetOps
        27: aload_1
        28: invokeinterface #558,  2          // InterfaceMethod scala/collection/SetOps.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/SetOps;
        33: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        36: invokevirtual #541                // Method coursier/Artifacts.withArtifactTypesOpt:(Lscala/Option;)Lcoursier/Artifacts;
        39: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        42: areturn
      LineNumberTable:
        line 166: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/Fetch;
            0      43     1 artifactTypes   Lscala/collection/immutable/Seq;
    Signature: #543                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Type;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      artifactTypes                  final

  public coursier.Fetch<F> allArtifactTypes();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: new           #342                // class scala/Some
         8: dup
         9: getstatic     #199                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: invokevirtual #203                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
        15: getstatic     #564                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        18: iconst_1
        19: anewarray     #566                // class coursier/core/Type
        22: dup
        23: iconst_0
        24: new           #566                // class coursier/core/Type
        27: dup
        28: getstatic     #571                // Field coursier/package$.MODULE$:Lcoursier/package$;
        31: invokevirtual #575                // Method coursier/package$.Type:()Lcoursier/core/Type$;
        34: invokevirtual #580                // Method coursier/core/Type$.all:()Ljava/lang/String;
        37: invokespecial #583                // Method coursier/core/Type."<init>":(Ljava/lang/String;)V
        40: aastore
        41: invokevirtual #587                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        44: invokevirtual #213                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        47: invokespecial #345                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        50: invokevirtual #541                // Method coursier/Artifacts.withArtifactTypesOpt:(Lscala/Option;)Lcoursier/Artifacts;
        53: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        56: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lcoursier/Fetch;
    Signature: #385                         // ()Lcoursier/Fetch<TF;>;

  public coursier.Fetch<F> addExtraArtifacts(scala.Function1<scala.collection.immutable.Seq<scala.Tuple3<coursier.core.Dependency, coursier.core.Publication, coursier.util.Artifact>>, scala.collection.immutable.Seq<coursier.util.Artifact>>);
    descriptor: (Lscala/Function1;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: aload_0
         6: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         9: invokevirtual #167                // Method coursier/Artifacts.extraArtifactsSeq:()Lscala/collection/immutable/Seq;
        12: aload_1
        13: invokeinterface #592,  2          // InterfaceMethod scala/collection/immutable/Seq.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
        18: checkcast     #184                // class scala/collection/immutable/Seq
        21: invokevirtual #595                // Method coursier/Artifacts.withExtraArtifactsSeq:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
        24: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        27: areturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/Fetch;
            0      28     1     f   Lscala/Function1;
    Signature: #589                         // (Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lcoursier/util/Artifact;>;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Fetch<F> noExtraArtifacts();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: getstatic     #208                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         8: invokevirtual #595                // Method coursier/Artifacts.withExtraArtifactsSeq:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
        11: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        14: areturn
      LineNumberTable:
        line 173: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/Fetch;
    Signature: #385                         // ()Lcoursier/Fetch<TF;>;

  public coursier.Fetch<F> withExtraArtifacts(scala.collection.immutable.Seq<scala.Function1<scala.collection.immutable.Seq<scala.Tuple3<coursier.core.Dependency, coursier.core.Publication, coursier.util.Artifact>>, scala.collection.immutable.Seq<coursier.util.Artifact>>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: aload_1
         6: invokevirtual #595                // Method coursier/Artifacts.withExtraArtifactsSeq:(Lscala/collection/immutable/Seq;)Lcoursier/Artifacts;
         9: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 175: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1     l   Lscala/collection/immutable/Seq;
    Signature: #598                         // (Lscala/collection/immutable/Seq<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lcoursier/util/Artifact;>;>;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      l                              final

  public coursier.Fetch<F> addTransformArtifacts(scala.Function1<scala.collection.immutable.Seq<scala.Tuple3<coursier.core.Dependency, coursier.core.Publication, coursier.util.Artifact>>, scala.collection.immutable.Seq<scala.Tuple3<coursier.core.Dependency, coursier.core.Publication, coursier.util.Artifact>>>);
    descriptor: (Lscala/Function1;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: aload_1
         6: invokevirtual #604                // Method coursier/Artifacts.addTransformArtifacts:(Lscala/Function1;)Lcoursier/Artifacts;
         9: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1     f   Lscala/Function1;
    Signature: #601                         // (Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;Lscala/collection/immutable/Seq<Lscala/Tuple3<Lcoursier/core/Dependency;Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public coursier.Fetch<F> withClasspathOrder(boolean);
    descriptor: (Z)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         5: iload_1
         6: invokevirtual #610                // Method coursier/Artifacts.withClasspathOrder:(Z)Lcoursier/Artifacts;
         9: invokevirtual #422                // Method withArtifacts:(Lcoursier/Artifacts;)Lcoursier/Fetch;
        12: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/Fetch;
            0      13     1 classpathOrder   Z
    Signature: #607                         // (Z)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      classpathOrder                 final

  public F ioResult();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         4: invokevirtual #615                // Method coursier/Resolve.io:()Ljava/lang/Object;
         7: astore_1
         8: getstatic     #618                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        11: aload_1
        12: aload_0
        13: invokespecial #620                // Method S:()Lcoursier/util/Sync;
        16: invokevirtual #624                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        19: aload_0
        20: invokedynamic #634,  0            // InvokeDynamic #10:apply:(Lcoursier/Fetch;)Lscala/Function1;
        25: invokeinterface #638,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        30: areturn
      LineNumberTable:
        line 185: 0
        line 187: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      22     1 resolutionIO   Ljava/lang/Object;
            0      31     0  this   Lcoursier/Fetch;
    Signature: #612                         // ()TF;

  public F io();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=12, args_size=1
         0: aload_0
         1: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
         4: aload_0
         5: invokedynamic #650,  0            // InvokeDynamic #11:apply:(Lcoursier/Fetch;)Lscala/Function1;
        10: invokevirtual #652                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: astore_3
        14: aload_3
        15: astore        4
        17: aload         4
        19: instanceof    #342                // class scala/Some
        22: ifeq          184
        25: aload         4
        27: checkcast     #342                // class scala/Some
        30: astore        5
        32: aload         5
        34: invokevirtual #655                // Method scala/Some.value:()Ljava/lang/Object;
        37: checkcast     #657                // class scala/Tuple2
        40: astore        6
        42: aload         6
        44: ifnull        181
        47: aload         6
        49: invokevirtual #660                // Method scala/Tuple2._1:()Ljava/lang/Object;
        52: checkcast     #32                 // class coursier/internal/FetchCache
        55: astore        7
        57: aload         6
        59: invokevirtual #663                // Method scala/Tuple2._2:()Ljava/lang/Object;
        62: checkcast     #30                 // class coursier/internal/FetchCache$Key
        65: astore        8
        67: aload         7
        69: aload         8
        71: invokevirtual #667                // Method coursier/internal/FetchCache.read:(Lcoursier/internal/FetchCache$Key;)Lscala/Option;
        74: astore        9
        76: aload         9
        78: instanceof    #342                // class scala/Some
        81: ifeq          116
        84: aload         9
        86: checkcast     #342                // class scala/Some
        89: astore        10
        91: aload         10
        93: invokevirtual #655                // Method scala/Some.value:()Ljava/lang/Object;
        96: checkcast     #184                // class scala/collection/immutable/Seq
        99: astore        11
       101: aload_0
       102: invokespecial #620                // Method S:()Lcoursier/util/Sync;
       105: aload         11
       107: invokeinterface #672,  2          // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
       112: astore_2
       113: goto          176
       116: goto          119
       119: getstatic     #352                // Field scala/None$.MODULE$:Lscala/None$;
       122: aload         9
       124: invokevirtual #676                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       127: ifeq          163
       130: getstatic     #618                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
       133: aload_0
       134: invokevirtual #678                // Method ioResult:()Ljava/lang/Object;
       137: aload_0
       138: invokespecial #620                // Method S:()Lcoursier/util/Sync;
       141: invokevirtual #624                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       144: aload_0
       145: aload         7
       147: aload         8
       149: invokedynamic #688,  0            // InvokeDynamic #12:apply:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;)Lscala/Function1;
       154: invokeinterface #638,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       159: astore_2
       160: goto          176
       163: goto          166
       166: new           #690                // class scala/MatchError
       169: dup
       170: aload         9
       172: invokespecial #691                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       175: athrow
       176: aload_2
       177: astore_1
       178: goto          233
       181: goto          187
       184: goto          187
       187: getstatic     #352                // Field scala/None$.MODULE$:Lscala/None$;
       190: aload         4
       192: invokevirtual #676                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       195: ifeq          220
       198: aload_0
       199: invokespecial #620                // Method S:()Lcoursier/util/Sync;
       202: aload_0
       203: invokevirtual #678                // Method ioResult:()Ljava/lang/Object;
       206: invokedynamic #698,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
       211: invokeinterface #701,  3          // InterfaceMethod coursier/util/Sync.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       216: astore_1
       217: goto          233
       220: goto          223
       223: new           #690                // class scala/MatchError
       226: dup
       227: aload         4
       229: invokespecial #691                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       232: athrow
       233: aload_1
       234: areturn
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 116
          locals = [ class coursier/Fetch, top, top, class scala/Option, class scala/Option, class scala/Some, class scala/Tuple2, class coursier/internal/FetchCache, class coursier/internal/FetchCache$Key, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 43 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Fetch, top, class java/lang/Object, class scala/Option, class scala/Option, class scala/Some, class scala/Tuple2, class coursier/internal/FetchCache, class coursier/internal/FetchCache$Key, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/Fetch, top, top, class scala/Option, class scala/Option, class scala/Some, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 32 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Fetch, class java/lang/Object, top, class scala/Option, class scala/Option ]
          stack = []
      LineNumberTable:
        line 200: 0
        line 207: 14
        line 208: 17
        line 209: 67
        line 210: 76
        line 211: 101
        line 210: 116
        line 212: 119
        line 213: 130
        line 212: 163
        line 209: 166
        line 208: 181
        line 226: 187
        line 227: 198
        line 226: 220
        line 207: 223
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          101      15    11 files   Lscala/collection/immutable/Seq;
           57     124     7 cache   Lcoursier/internal/FetchCache;
           67     114     8   key   Lcoursier/internal/FetchCache$Key;
           14     220     3 cacheKeyOpt0   Lscala/Option;
            0     235     0  this   Lcoursier/Fetch;
    Signature: #612                         // ()TF;

  public coursier.Fetch<F> withResolve(coursier.Resolve<F>);
    descriptor: (Lcoursier/Resolve;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/Fetch
         3: dup
         4: aload_1
         5: aload_0
         6: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         9: aload_0
        10: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        13: invokespecial #708                // Method "<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
        16: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Fetch;
            0      17     1 resolve   Lcoursier/Resolve;
    Signature: #705                         // (Lcoursier/Resolve<TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      resolve                        final

  public coursier.Fetch<F> withArtifacts(coursier.Artifacts<F>);
    descriptor: (Lcoursier/Artifacts;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/Fetch
         3: dup
         4: aload_0
         5: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         8: aload_1
         9: aload_0
        10: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        13: invokespecial #708                // Method "<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
        16: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Fetch;
            0      17     1 artifacts   Lcoursier/Artifacts;
    Signature: #709                         // (Lcoursier/Artifacts<TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      artifacts                      final

  public coursier.Fetch<F> withFetchCacheOpt(scala.Option<java.io.File>);
    descriptor: (Lscala/Option;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/Fetch
         3: dup
         4: aload_0
         5: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         8: aload_0
         9: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        12: aload_1
        13: invokespecial #708                // Method "<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
        16: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Fetch;
            0      17     1 fetchCacheOpt   Lscala/Option;
    Signature: #441                         // (Lscala/Option<Ljava/io/File;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      fetchCacheOpt                  final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #712                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #714                // String Fetch(
         7: invokespecial #715                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        16: invokestatic  #721                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #727                // String ,
        27: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        36: invokestatic  #721                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        39: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #727                // String ,
        47: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        56: invokestatic  #721                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        59: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #729                // String )
        67: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: invokevirtual #731                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        75: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      64     1     b   Ljava/lang/StringBuilder;
            0      76     0  this   Lcoursier/Fetch;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/Fetch
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Fetch;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     120
         5: aload_0
         6: aload_1
         7: invokevirtual #737                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          124
        13: aload_1
        14: checkcast     #2                  // class coursier/Fetch
        17: astore_2
        18: iconst_1
        19: ifeq          116
        22: aload_0
        23: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        26: aload_2
        27: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          116
        43: aload_3
        44: invokevirtual #676                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          116
        50: aload_0
        51: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        54: aload_2
        55: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          116
        73: aload         4
        75: invokevirtual #676                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          116
        81: aload_0
        82: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        85: aload_2
        86: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        89: astore        5
        91: dup
        92: ifnonnull     104
        95: pop
        96: aload         5
        98: ifnull        112
       101: goto          116
       104: aload         5
       106: invokevirtual #676                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       109: ifeq          116
       112: iconst_1
       113: goto          117
       116: iconst_0
       117: ifeq          124
       120: iconst_1
       121: goto          125
       124: iconst_0
       125: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/Fetch, class java/lang/Object, class coursier/Fetch, class coursier/Resolve ]
          stack = [ class coursier/Resolve ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Fetch, class java/lang/Object, class coursier/Fetch, class coursier/Resolve, class coursier/Artifacts ]
          stack = [ class coursier/Artifacts ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/Fetch, class java/lang/Object, class coursier/Fetch, class coursier/Resolve, class coursier/Artifacts, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      99     2 other   Lcoursier/Fetch;
            0     126     0  this   Lcoursier/Fetch;
            0     126     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #742                // String Fetch
         5: invokestatic  #748                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        18: invokestatic  #748                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        31: invokestatic  #748                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        44: invokestatic  #748                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        47: iadd
        48: istore_1
        49: bipush        37
        51: iload_1
        52: imul
        53: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      43     1  code   I
            0      54     0  this   Lcoursier/Fetch;

  private scala.Tuple3<coursier.Resolve<F>, coursier.Artifacts<F>, scala.Option<java.io.File>> tuple();
    descriptor: ()Lscala/Tuple3;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=1, args_size=1
         0: new           #755                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
         8: aload_0
         9: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        12: aload_0
        13: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        16: invokespecial #758                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        19: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcoursier/Fetch;
    Signature: #753                         // ()Lscala/Tuple3<Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #742                // String Fetch
         3: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/Fetch;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_3
         1: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/Fetch;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 35
                       2: 42
                 default: 49
            }
        28: aload_0
        29: invokevirtual #115                // Method coursier$Fetch$$resolve:()Lcoursier/Resolve;
        32: goto          64
        35: aload_0
        36: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
        39: goto          64
        42: aload_0
        43: invokevirtual #642                // Method fetchCacheOpt:()Lscala/Option;
        46: goto          64
        49: new           #765                // class java/lang/IndexOutOfBoundsException
        52: dup
        53: iload_2
        54: invokestatic  #769                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        57: invokevirtual #770                // Method java/lang/Object.toString:()Ljava/lang/String;
        60: invokespecial #771                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        63: athrow
        64: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lcoursier/Fetch;
            0      65     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 34
                       2: 40
                 default: 46
            }
        28: ldc_w         #774                // String resolve
        31: goto          61
        34: ldc_w         #775                // String artifacts
        37: goto          61
        40: ldc_w         #776                // String fetchCacheOpt
        43: goto          61
        46: new           #765                // class java/lang/IndexOutOfBoundsException
        49: dup
        50: iload_2
        51: invokestatic  #769                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        54: invokevirtual #770                // Method java/lang/Object.toString:()Ljava/lang/String;
        57: invokespecial #771                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        60: athrow
        61: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lcoursier/Fetch;
            0      62     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final java.lang.String $anonfun$cacheKeyOpt$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        55
         6: aload_2
         7: invokevirtual #660                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #779                // class coursier/core/Module
        13: astore_3
        14: aload_2
        15: invokevirtual #663                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #717                // class java/lang/String
        21: astore        4
        23: new           #712                // class java/lang/StringBuilder
        26: dup
        27: ldc_w         #262                // int 1
        30: invokespecial #782                // Method java/lang/StringBuilder."<init>":(I)V
        33: aload_3
        34: invokevirtual #785                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        37: ldc_w         #787                // String :
        40: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: aload         4
        45: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: invokevirtual #731                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        51: astore_1
        52: goto          67
        55: goto          58
        58: new           #690                // class scala/MatchError
        61: dup
        62: aload_2
        63: invokespecial #691                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        66: athrow
        67: aload_1
        68: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 55
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class java/lang/String, class scala/Tuple2, class coursier/core/Module, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      41     3     m   Lcoursier/core/Module;
           23      32     4     v   Ljava/lang/String;
            0      69     0  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final java.lang.String $anonfun$cacheKeyOpt$2(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        55
         6: aload_2
         7: invokevirtual #660                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #717                // class java/lang/String
        13: astore_3
        14: aload_2
        15: invokevirtual #663                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #717                // class java/lang/String
        21: astore        4
        23: new           #712                // class java/lang/StringBuilder
        26: dup
        27: ldc_w         #262                // int 1
        30: invokespecial #782                // Method java/lang/StringBuilder."<init>":(I)V
        33: aload_3
        34: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: ldc_w         #795                // String =
        40: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: aload         4
        45: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: invokevirtual #731                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        51: astore_1
        52: goto          67
        55: goto          58
        58: new           #690                // class scala/MatchError
        61: dup
        62: aload_2
        63: invokespecial #691                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        66: athrow
        67: aload_1
        68: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 55
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class java/lang/String, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      41     3     k   Ljava/lang/String;
           23      32     4     v   Ljava/lang/String;
            0      69     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public static final java.lang.String $anonfun$cacheKeyOpt$3(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        55
         6: aload_2
         7: invokevirtual #660                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #717                // class java/lang/String
        13: astore_3
        14: aload_2
        15: invokevirtual #663                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #717                // class java/lang/String
        21: astore        4
        23: new           #712                // class java/lang/StringBuilder
        26: dup
        27: ldc_w         #262                // int 1
        30: invokespecial #782                // Method java/lang/StringBuilder."<init>":(I)V
        33: aload_3
        34: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: ldc_w         #795                // String =
        40: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: aload         4
        45: invokevirtual #725                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: invokevirtual #731                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        51: astore_1
        52: goto          67
        55: goto          58
        58: new           #690                // class scala/MatchError
        61: dup
        62: aload_2
        63: invokespecial #691                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        66: athrow
        67: aload_1
        68: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 55
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class java/lang/String, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      41     3     k   Ljava/lang/String;
           23      32     4     v   Ljava/lang/String;
            0      69     0  x0$3   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$3                           final

  public static final scala.collection.immutable.Vector $anonfun$cacheKeyOpt$4(scala.collection.immutable.Set);
    descriptor: (Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #302,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
         6: getstatic     #801                // Field coursier/core/Type$.MODULE$:Lcoursier/core/Type$;
         9: invokevirtual #802                // Method coursier/core/Type$.ordering:()Lscala/math/Ordering;
        12: invokevirtual #306                // Method scala/collection/immutable/Vector.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
        15: checkcast     #277                // class scala/collection/immutable/Vector
        18: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0   x$1   Lscala/collection/immutable/Set;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.Function1 $anonfun$transformResolution$1(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   f$1   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$1                            final

  public static final scala.Function1 $anonfun$transformResolution$2(scala.Function1, scala.Function1);
    descriptor: (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #807,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   f$1   Lscala/Function1;
            0       8     1   x$2   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x$2                            final

  public static final scala.Function1 $anonfun$transformFetcher$1(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   f$2   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$2                            final

  public static final scala.Function1 $anonfun$transformFetcher$2(scala.Function1, scala.Function1);
    descriptor: (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #807,  2          // InterfaceMethod scala/Function1.andThen:(Lscala/Function1;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   f$2   Lscala/Function1;
            0       8     1   x$3   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f$2                            final
      x$3                            final

  public static final boolean $anonfun$withMainArtifacts$1(java.lang.Boolean);
    descriptor: (Ljava/lang/Boolean;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #199                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #815                // Method scala/Predef$.Boolean2boolean:(Ljava/lang/Boolean;)Z
         7: ireturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/lang/Boolean;
    MethodParameters:
      Name                           Flags
      x                              final

  public static final scala.collection.immutable.Set $anonfun$addArtifactTypes$1();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #199                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: invokevirtual #203                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
         6: getstatic     #208                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #213                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        12: checkcast     #215                // class scala/collection/immutable/Set
        15: areturn
      LineNumberTable:
        line 166: 0

  public static final coursier.Fetch$Result $anonfun$ioResult$2(coursier.core.Resolution, coursier.Artifacts$Result);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #822                // Field coursier/Fetch$Result$.MODULE$:Lcoursier/Fetch$Result$;
         3: aload_0
         4: aload_1
         5: invokevirtual #825                // Method coursier/Artifacts$Result.fullDetailedArtifacts:()Lscala/collection/immutable/Seq;
         8: aload_1
         9: invokevirtual #828                // Method coursier/Artifacts$Result.fullExtraArtifacts:()Lscala/collection/immutable/Seq;
        12: invokevirtual #831                // Method coursier/Fetch$Result$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lcoursier/Fetch$Result;
        15: areturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 resolution$1   Lcoursier/core/Resolution;
            0      16     1   res   Lcoursier/Artifacts$Result;
    MethodParameters:
      Name                           Flags
      resolution$1                   final
      res                            final

  public static final java.lang.Object $anonfun$ioResult$1(coursier.Fetch, coursier.core.Resolution);
    descriptor: (Lcoursier/Fetch;Lcoursier/core/Resolution;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokespecial #153                // Method artifacts:()Lcoursier/Artifacts;
         4: aload_1
         5: invokevirtual #839                // Method coursier/Artifacts.withResolution:(Lcoursier/core/Resolution;)Lcoursier/Artifacts;
         8: invokevirtual #840                // Method coursier/Artifacts.ioResult:()Ljava/lang/Object;
        11: astore_2
        12: aload_0
        13: invokespecial #620                // Method S:()Lcoursier/util/Sync;
        16: aload_2
        17: aload_1
        18: invokedynamic #848,  0            // InvokeDynamic #14:apply:(Lcoursier/core/Resolution;)Lscala/Function1;
        23: invokeinterface #701,  3          // InterfaceMethod coursier/util/Sync.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        28: areturn
      LineNumberTable:
        line 188: 0
        line 189: 4
        line 191: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      16     2 fetchIO_   Ljava/lang/Object;
            0      29     0 $this   Lcoursier/Fetch;
            0      29     1 resolution   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      resolution                     final

  public static final scala.Tuple2 $anonfun$io$2(java.io.File, coursier.internal.FetchCache$Key);
    descriptor: (Ljava/io/File;Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #857                // Field coursier/internal/FetchCache$.MODULE$:Lcoursier/internal/FetchCache$;
         3: aload_0
         4: invokevirtual #861                // Method java/io/File.toPath:()Ljava/nio/file/Path;
         7: invokevirtual #864                // Method coursier/internal/FetchCache$.apply:(Ljava/nio/file/Path;)Lcoursier/internal/FetchCache;
        10: astore_2
        11: new           #657                // class scala/Tuple2
        14: dup
        15: aload_2
        16: aload_1
        17: invokespecial #867                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        20: areturn
      LineNumberTable:
        line 203: 0
        line 204: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       9     2 cache   Lcoursier/internal/FetchCache;
            0      21     0 fetchCache$1   Ljava/io/File;
            0      21     1   key   Lcoursier/internal/FetchCache$Key;
    MethodParameters:
      Name                           Flags
      fetchCache$1                   final
      key                            final

  public static final scala.Option $anonfun$io$1(coursier.Fetch, java.io.File);
    descriptor: (Lcoursier/Fetch;Ljava/io/File;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #359                // Method cacheKeyOpt:()Lscala/Option;
         4: aload_1
         5: invokedynamic #876,  0            // InvokeDynamic #15:apply:(Ljava/io/File;)Lscala/Function1;
        10: invokevirtual #336                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Lcoursier/Fetch;
            0      14     1 fetchCache   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      fetchCache                     final

  public static final boolean $anonfun$io$4(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #660                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #881                // class coursier/util/Artifact
         7: invokevirtual #884                // Method coursier/util/Artifact.changing:()Z
        10: ifne          17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 218: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0   x$4   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final void $anonfun$io$5(coursier.internal.FetchCache, coursier.internal.FetchCache$Key, scala.collection.immutable.Seq);
    descriptor: (Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #893                // Method coursier/internal/FetchCache.write:(Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Z
         6: pop
         7: return
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 cache$1   Lcoursier/internal/FetchCache;
            0       8     1 key$1   Lcoursier/internal/FetchCache$Key;
            0       8     2 files$1   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      cache$1                        final
      key$1                          final
      files$1                        final

  public static final scala.collection.immutable.Seq $anonfun$io$6(scala.collection.immutable.Seq, scala.runtime.BoxedUnit);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 files$1   Lscala/collection/immutable/Seq;
            0       2     1   x$5   Lscala/runtime/BoxedUnit;
    MethodParameters:
      Name                           Flags
      files$1                        final
      x$5                            final

  public static final java.lang.Object $anonfun$io$3(coursier.Fetch, coursier.internal.FetchCache, coursier.internal.FetchCache$Key, coursier.Fetch$Result);
    descriptor: (Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lcoursier/Fetch$Result;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=4
         0: aload_3
         1: invokevirtual #899                // Method coursier/Fetch$Result.artifacts:()Lscala/collection/immutable/Seq;
         4: astore        4
         6: aload_3
         7: invokevirtual #901                // Method coursier/Fetch$Result.files:()Lscala/collection/immutable/Seq;
        10: astore        5
        12: aload         4
        14: invokedynamic #908,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
        19: invokeinterface #912,  2          // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
        24: ifeq          48
        27: aload_0
        28: invokespecial #620                // Method S:()Lcoursier/util/Sync;
        31: aload_1
        32: aload_2
        33: aload         5
        35: invokedynamic #921,  0            // InvokeDynamic #17:apply$mcV$sp:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)Lscala/runtime/java8/JFunction0$mcV$sp;
        40: invokeinterface #924,  2          // InterfaceMethod coursier/util/Sync.delay:(Lscala/Function0;)Ljava/lang/Object;
        45: goto          60
        48: aload_0
        49: invokespecial #620                // Method S:()Lcoursier/util/Sync;
        52: getstatic     #929                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        55: invokeinterface #672,  2          // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
        60: astore        6
        62: aload_0
        63: invokespecial #620                // Method S:()Lcoursier/util/Sync;
        66: aload         6
        68: aload         5
        70: invokedynamic #937,  0            // InvokeDynamic #18:apply:(Lscala/collection/immutable/Seq;)Lscala/Function1;
        75: invokeinterface #701,  3          // InterfaceMethod coursier/util/Sync.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        80: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 48
          locals = [ class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 214: 0
        line 215: 6
        line 218: 12
        line 219: 27
        line 221: 48
        line 223: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      74     4 artifacts   Lscala/collection/immutable/Seq;
           12      68     5 files   Lscala/collection/immutable/Seq;
           62      18     6 maybeWrite   Ljava/lang/Object;
            0      81     0 $this   Lcoursier/Fetch;
            0      81     1 cache$1   Lcoursier/internal/FetchCache;
            0      81     2 key$1   Lcoursier/internal/FetchCache$Key;
            0      81     3   res   Lcoursier/Fetch$Result;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      cache$1                        final
      key$1                          final
      res                            final

  public static final scala.collection.immutable.Seq $anonfun$io$7(coursier.Fetch$Result);
    descriptor: (Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #901                // Method coursier/Fetch$Result.files:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Lcoursier/Fetch$Result;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public coursier.Fetch(coursier.Resolve<F>, coursier.Artifacts<F>, scala.Option<java.io.File>);
    descriptor: (Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #102                // Field coursier$Fetch$$resolve:Lcoursier/Resolve;
         5: aload_0
         6: aload_2
         7: putfield      #106                // Field artifacts:Lcoursier/Artifacts;
        10: aload_0
        11: aload_3
        12: putfield      #110                // Field fetchCacheOpt:Lscala/Option;
        15: aload_0
        16: invokespecial #943                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: invokestatic  #947                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        23: return
      LineNumberTable:
        line 18: 0
        line 233: 15
        line 18: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcoursier/Fetch;
            0      24     1 resolve   Lcoursier/Resolve;
            0      24     2 artifacts   Lcoursier/Artifacts;
            0      24     3 fetchCacheOpt   Lscala/Option;
    Signature: #941                         // (Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;)V
    MethodParameters:
      Name                           Flags
      resolve                        final
      artifacts                      final
      fetchCacheOpt                  final

  public static final java.lang.Object $anonfun$withMainArtifacts$1$adapted(java.lang.Boolean);
    descriptor: (Ljava/lang/Boolean;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #949                // Method $anonfun$withMainArtifacts$1:(Ljava/lang/Boolean;)Z
         4: invokestatic  #535                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/lang/Boolean;
    MethodParameters:
      Name                           Flags
      x                              final

  public static final java.lang.Object $anonfun$io$4$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #951                // Method $anonfun$io$4:(Lscala/Tuple2;)Z
         4: invokestatic  #535                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 218: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$4   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$4                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #963,  0            // InvokeDynamic #19:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #18= #15 of #17;    // Result=class coursier/Artifacts$Result of class coursier/Artifacts
  public static final #21= #20 of #2;     // FetchTaskOps=class coursier/Fetch$FetchTaskOps of class coursier/Fetch
  public static #24= #23 of #2;           // =class coursier/Fetch$FetchTaskOps$ of class coursier/Fetch
  public static final #18= #26 of #2;     // Result=class coursier/Fetch$Result of class coursier/Fetch
  public static #24= #28 of #2;           // =class coursier/Fetch$Result$ of class coursier/Fetch
  public static final #33= #30 of #32;    // Key=class coursier/internal/FetchCache$Key of class coursier/internal/FetchCache
  public static #38= #35 of #37;          // AllOps=class coursier/util/Monad$AllOps of class coursier/util/Monad
  public static #24= #40 of #37;          // =class coursier/util/Monad$ops$ of class coursier/util/Monad
  public static final #45= #42 of #44;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #24= #47 of #49;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
Signature: #3                           // <F:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
SourceFile: "Fetch.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0019UaaBA\u0016\u0003[\u0011\u00111\u0007\u0005\u000b\u0003C\u0002!Q1A\u0005\n\u0005\r\u0004BCAE\u0001\t\u0005\t\u0015!\u0003\u0002f!Q\u00111\u0012\u0001\u0003\u0006\u0004%I!!$\t\u0015\u0005U\u0005A!A!\u0002\u0013\ty\t\u0003\u0006\u0002\u0018\u0002\u0011)\u0019!C\u0001\u00033C!\"!-\u0001\u0005\u0003\u0005\u000b\u0011BAN\u0011\u001d\t\u0019\f\u0001C\u0001\u0003kCq!a0\u0001\t\u0003\t\t\rC\u0004\u0002V\u0002!\t!a6\t\u000f\u0005\u0005\b\u0001\"\u0001\u0002d\"9\u00111\u001f\u0001\u0005\u0002\u0005U\bbBA\u007f\u0001\u0011\u0005\u0011q \u0005\b\u0005\u0017\u0001A\u0011\u0001B\u0007\u0011\u001d\u0011y\u0002\u0001C\u0001\u0005CAqAa\u000e\u0001\t\u0003\u0011I\u0004C\u0004\u0003H\u0001!\tA!\u0013\t\u000f\t\u0005\u0004\u0001\"\u0001\u0003d!9!Q\u000e\u0001\u0005\u0002\t=\u0004b\u0002B>\u0001\u0011\u0005!Q\u0010\u0005\b\u00057\u0003A\u0011\u0001BO\u0011\u001d\u0011\u0019\u000b\u0001C\u0001\u0005KCqAa*\u0001\t\u0017\u0011I\u0004C\u0004\u0003*\u0002!IAa+\t\u000f\t\r\u0007\u0001\"\u0001\u0003&\"9!Q\u0019\u0001\u0005\u0002\t\u001d\u0007b\u0002Bf\u0001\u0011\u0005!Q\u001a\u0005\b\u0005/\u0004A\u0011\u0001Bm\u0011\u001d\u0011i\u000e\u0001C\u0001\u0005?DqA!:\u0001\t\u0003\u00119\u000fC\u0004\u0003j\u0002!\tAa;\t\u000f\t=\b\u0001\"\u0001\u0003r\"9!q\u001f\u0001\u0005\u0002\te\bb\u0002B\u007f\u0001\u0011\u0005!q \u0005\b\u0007\u000f\u0001A\u0011AB\u0005\u0011\u001d\u0019i\u0001\u0001C\u0001\u0007\u001fAqaa\u0005\u0001\t\u0003\u0019)\u0002C\u0004\u0004\u001a\u0001!\taa\u0007\t\u000f\r\r\u0002\u0001\"\u0001\u0004&!911\u0005\u0001\u0005\u0002\r-\u0002bBB\u0019\u0001\u0011\u000511\u0007\u0005\b\u0007o\u0001A\u0011AB\u001d\u0011\u001d\u0019Y\u0004\u0001C\u0001\u0007{Aqaa\u0011\u0001\t\u0003\u0019)\u0005C\u0004\u0004J\u0001!\ta!\u000f\t\u000f\r-\u0003\u0001\"\u0001\u0004N!91\u0011\u000b\u0001\u0005\u0002\rM\u0003bBB,\u0001\u0011\u00051\u0011\f\u0005\b\u0007?\u0002A\u0011AB1\u0011\u001d\u0019y\u0006\u0001C\u0001\u0007sAqa!\u001d\u0001\t\u0003\u0019\u0019\bC\u0004\u0004z\u0001!\taa\u001f\t\u000f\r\u0005\u0005\u0001\"\u0001\u0004:!911\u0011\u0001\u0005\u0002\r\u0015\u0005bBBE\u0001\u0011\u00051\u0011\b\u0005\b\u0007\u0017\u0003A\u0011ABG\u0011\u001d\u0019\u0019\n\u0001C\u0001\u0007+Cqa!\'\u0001\t\u0003\u0019Y\nC\u0004\u0004 \u0002!\ta!)\t\u000f\u0005\u001d\u0006\u0001\"\u0001\u0006l\"9Qq\u001e\u0001\u0005\u0002\u0015E\bbBC{\u0001\u0011\u0005Qq\u001f\u0005\b\u000bw\u0004A\u0011AC\u007f\u0011\u001d!\t\t\u0001C!\t\u0007Cq\u0001b#\u0001\t\u00032\t\u0001C\u0004\u0005\u0014\u0002!\tE\"\u0002\t\u000f\u0011e\u0005\u0001\"\u0011\u0005\u001c\"9A1\u0015\u0001\u0005\n\u0019%\u0001b\u0002CU\u0001\u0011\u0005C1\u0016\u0005\b\t[\u0003A\u0011\tCX\u0011\u001d!\t\f\u0001C!\r\u001bAq\u0001\"/\u0001\t\u00032\tb\u0002\u0005\u0004*\u00065\u0002\u0012ABV\r!\tY#!\f\t\u0002\r5\u0006bBAZ\u0013\u0012\u000511\u0017\u0005\b\u0007kKE\u0011AB\\\u0011\u001d\u0019),\u0013C\u0001\u0007\u00034aa!7J\u0007\rm\u0007BDBr\u001b\u0012\u0005\tQ!BC\u0002\u0013%1Q\u001d\u0005\f\u0007Ol%Q!A!\u0002\u0013\u0019I\fC\u0004\u000246#\ta!;\t\u000f\rMX\n\"\u0001\u0004v\"IA\u0011Z\'\u0012\u0002\u0013\u0005A1\u001a\u0005\b\tClE\u0011\u0001Cr\u0011%!Y/TI\u0001\n\u0003!Y\rC\u0004\u0005n6#\t\u0001b<\t\u0013\u0015\u001dQ*%A\u0005\u0002\u0011-\u0007bBC\u0005\u001b\u0012\u0005Q1\u0002\u0005\n\u000b\'i\u0015\u0013!C\u0001\t\u0017Dq!\"\u0006N\t\u0003)9\u0002C\u0005\u0006\u001e5\u000b\n\u0011\"\u0001\u0005L\"9QqD\'\u0005\u0002\u0015\u0005\u0002\"CC\u0014\u001bF\u0005I\u0011\u0001Cf\u0011%!I*TA\u0001\n\u0003\"Y\nC\u0005\u0005\u00146\u000b\t\u0011\"\u0011\u0006*!IQqF%\u0002\u0002\u0013\rQ\u0011\u0007\u0005\b\u0007kKE\u0011AC\u001b\r\u0019!9!\u0013\u0002\u0005\n!QA1B1\u0003\u0006\u0004%\t\u0001\"\u0004\t\u0015\u0011=\u0011M!A!\u0002\u0013\u0011I\u0002\u0003\u0006\u0005\u0012\u0005\u0014)\u0019!C\u0001\t\'A!\u0002\"\bb\u0005\u0003\u0005\u000b\u0011\u0002C\u000b\u0011)!y\"\u0019BC\u0002\u0013\u0005A\u0011\u0005\u0005\u000b\tW\t\'\u0011!Q\u0001\n\u0011\r\u0002bBAZC\u0012\u0005AQ\u0006\u0005\b\u0003g\u000bG\u0011\u0001C\u001b\u0011\u001d!9$\u0019C\u0001\tsAq\u0001b\u0010b\t\u0003!\t\u0005C\u0004\u0002\f\u0006$\t\u0001\"\u0011\t\u000f\u0011\u001d\u0013\r\"\u0001\u0005\"!9A\u0011J1\u0005\u0002\u0011-\u0003b\u0002C(C\u0012\u0005A\u0011\u000b\u0005\b\u0007\u0017\u000bG\u0011\u0001C3\u0011\u001d!y\'\u0019C\u0001\tcBq\u0001\"\u001eb\t\u0003!9\bC\u0004\u0005|\u0005$\t\u0001\" \t\u000f\u0011\u0005\u0015\r\"\u0011\u0005\u0004\"9A1R1\u0005B\u00115\u0005b\u0002CJC\u0012\u0005CQ\u0013\u0005\b\t3\u000bG\u0011\tCN\u0011\u001d!\u0019+\u0019C\u0005\tKCq\u0001\"+b\t\u0003\"Y\u000bC\u0004\u0005.\u0006$\t\u0005b,\t\u000f\u0011E\u0016\r\"\u0011\u00054\"9A\u0011X1\u0005B\u0011mvaBC\'\u0013\"\u0005Qq\n\u0004\b\t\u000fI\u0005\u0012AC)\u0011\u001d\t\u0019L C\u0001\u000b\'Bqa!.\u007f\t\u0003!)\u0004C\u0004\u00046z$\t!\"\u0016\t\u0013\u0015uc0!A\u0005\n\u0015}s!CC\u0018\u0013\u0006\u0005\t\u0012AC4\r%\u0019I.SA\u0001\u0012\u0003)I\u0007\u0003\u0005\u00024\u0006%A\u0011AC6\u0011!)i\'!\u0003\u0005\u0006\u0015=\u0004\u0002CC>\u0003\u0013!)!\" \t\u0015\u0015\u001d\u0015\u0011BI\u0001\n\u000b)I\t\u0003\u0006\u0006\u000e\u0006%\u0011\u0013!C\u0003\u000b\u001fC\u0001\"b%\u0002\n\u0011\u0015QQ\u0013\u0005\t\u000b?\u000bI\u0001\"\u0002\u0006\"\"QQ1VA\u0005#\u0003%)!\",\t\u0015\u0015E\u0016\u0011BI\u0001\n\u000b)\u0019\f\u0003\u0005\u00068\u0006%AQAC]\u0011!)\u0019-!\u0003\u0005\u0006\u0015\u0015\u0007BCCh\u0003\u0013\t\n\u0011\"\u0002\u0006R\"QQQ[A\u0005#\u0003%)!b6\t\u0015\u0015m\u0017\u0011BA\u0001\n\u000b)i\u000e\u0003\u0006\u0006b\u0006%\u0011\u0011!C\u0003\u000bGD\u0011\"\"\u0018J\u0003\u0003%I!b\u0018\u0003\u000b\u0019+Go\u00195\u000b\u0005\u0005=\u0012\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001U!\u0011QGA9\'\u001d\u0001\u0011qGA\"\u0003\u0013\u0002B!!\u000f\u0002@5\u0011\u00111\b\u0006\u0003\u0003{\tQa]2bY\u0006LA!!\u0011\u0002<\t1\u0011I\\=SK\u001a\u0004B!!\u000f\u0002F%!\u0011qIA\u001e\u0005\u001d\u0001&o\u001c3vGR\u0004B!a\u0013\u0002\\9!\u0011QJA,\u001d\u0011\ty%!\u0016\u000e\u0005\u0005E#\u0002BA*\u0003c\ta\u0001\u0010:p_Rt\u0014BAA\u001f\u0013\u0011\tI&a\u000f\u0002\u000fA\f7m[1hK&!\u0011QLA0\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\u0011\tI&a\u000f\u0002\u000fI,7o\u001c7wKV\u0011\u0011Q\r\t\u0007\u0003O\nI\'!\u001c\u000e\u0005\u00055\u0012\u0002BA6\u0003[\u0011qAU3t_24X\r\u0005\u0003\u0002p\u0005ED\u0002\u0001\u0003\b\u0003g\u0002!\u0019AA;\u0005\u00051U\u0003BA<\u0003\u000b\u000bB!!\u001f\u0002\u0000A!\u0011\u0011HA>\u0013\u0011\ti(a\u000f\u0003\u000f9{G\u000f[5oOB!\u0011\u0011HAA\u0013\u0011\t\u0019)a\u000f\u0003\u0007\u0005s\u0017\u0010\u0002\u0005\u0002\b\u0006E$\u0019AA<\u0005\u0005y\u0016\u0001\u0003:fg>dg/\u001a\u0011\u0002\u0013\u0005\u0014H/\u001b4bGR\u001cXCAAH!\u0019\t9\'!%\u0002n%!\u00111SA\u0017\u0005%\t%\u000f^5gC\u000e$8/\u0001\u0006beRLg-Y2ug\u0002\nQBZ3uG\"\u001c\u0015m\u00195f\u001fB$XCAAN!\u0019\tI$!(\u0002\"&!\u0011qTA\u001e\u0005\u0019y\u0005\u000f^5p]B!\u00111UAW\u001b\t\t)K\u0003\u0003\u0002(\u0006%\u0016AA5p\u0015\t\tY+\u0001\u0003kCZ\f\u0017\u0002BAX\u0003K\u0013AAR5mK\u0006qa-\u001a;dQ\u000e\u000b7\r[3PaR\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0005\u00028\u0006e\u00161XA_!\u0015\t9\u0007AA7\u0011\u001d\t\tg\u0002a\u0001\u0003KBq!a#\b\u0001\u0004\ty\tC\u0004\u0002\u0018\u001e\u0001\r!a\'\u0002\u0019\u0011,\u0007/\u001a8eK:\u001c\u0017.Z:\u0016\u0005\u0005\r\u0007CBA&\u0003\u000b\fI-\u0003\u0003\u0002H\u0006}#aA*fcB!\u00111ZAh\u001d\u0011\t9\'!4\n\t\u0005e\u0013QF\u0005\u0005\u0003#\f\u0019N\u0001\u0006EKB,g\u000eZ3oGfTA!!\u0017\u0002.\u0005a!/\u001a9pg&$xN]5fgV\u0011\u0011\u0011\u001c\t\u0007\u0003\u0017\n)-a7\u0011\t\u0005-\u0017Q\\\u0005\u0005\u0003?\f\u0019N\u0001\u0006SKB|7/\u001b;pef\fq!\\5se>\u00148/\u0006\u0002\u0002fB1\u00111JAc\u0003O\u0004B!!;\u0002p6\u0011\u00111\u001e\u0006\u0005\u0003[\fi#\u0001\u0004qCJ\fWn]\u0005\u0005\u0003c\fYO\u0001\u0004NSJ\u0014xN]\u0001\u0011e\u0016\u001cx\u000e\\;uS>t\u0007+\u0019:b[N,\"!a>\u0011\t\u0005%\u0018\u0011`\u0005\u0005\u0003w\fYO\u0001\tSKN|G.\u001e;j_:\u0004\u0016M]1ng\u0006)1-Y2iKV\u0011!\u0011\u0001\t\u0007\u0005\u0007\u00119!!\u001c\u000e\u0005\t\u0015!\u0002BA\u007f\u0003[IAA!\u0003\u0003\u0006\t)1)Y2iK\u0006QA\u000f\u001b:pk\u001eDw\n\u001d;\u0016\u0005\t=\u0001CBA\u001d\u0003;\u0013\t\u0002\u0005\u0005\u0002:\tM!q\u0003B\f\u0013\u0011\u0011)\"a\u000f\u0003\u0013\u0019+hn\u0019;j_:\f\u0004CBA8\u0003c\u0012I\u0002\u0005\u0003\u0002L\nm\u0011\u0002\u0002B\u000f\u0003\'\u0014!BU3t_2,H/[8o\u0003M!(/\u00198tM>\u0014XNR3uG\",\'o\u00149u+\t\u0011\u0019\u0003\u0005\u0004\u0002:\u0005u%Q\u0005\t\t\u0003s\u0011\u0019Ba\n\u0003(A1!\u0011\u0006B\u0018\u0003[rA!a3\u0003,%!!QFAj\u0003E\u0011Vm]8mkRLwN\u001c)s_\u000e,7o]\u0005\u0005\u0003W\u0011\tD\u0003\u0003\u0003.\tM\"\u0002\u0002B\u001b\u0003[\tAaY8sK\u0006!1/\u001f8d+\t\u0011Y\u0004\u0005\u0004\u0003>\t\r\u0013QN\u0007\u0003\u0005\u007fQAA!\u0011\u0002.\u0005!Q\u000f^5m\u0013\u0011\u0011)Ea\u0010\u0003\tMKhnY\u0001\fG2\f7o]5gS\u0016\u00148/\u0006\u0002\u0003LA1!Q\nB+\u00057rAAa\u0014\u0003RA!\u0011qJA\u001e\u0013\u0011\u0011\u0019&a\u000f\u0002\rA\u0013X\rZ3g\u0013\u0011\u00119F!\u0017\u0003\u0007M+GO\u0003\u0003\u0003T\u0005m\u0002\u0003BAf\u0005;JAAa\u0018\u0002T\nQ1\t\\1tg&4\u0017.\u001a:\u0002!5\f\u0017N\\!si&4\u0017m\u0019;t\u001fB$XC\u0001B3!\u0019\tI$!(\u0003hA!\u0011\u0011\bB5\u0013\u0011\u0011Y\'a\u000f\u0003\u000f\t{w\u000e\\3b]\u0006\u0001\u0012M\u001d;jM\u0006\u001cG\u000fV=qKN|\u0005\u000f^\u000b\u0003\u0005c\u0002b!!\u000f\u0002\u001e\nM\u0004C\u0002B\'\u0005+\u0012)\b\u0005\u0003\u0002L\n]\u0014\u0002\u0002B=\u0003\'\u0014A\u0001V=qK\u0006\tR\r\u001f;sC\u0006\u0013H/\u001b4bGR\u001c8+Z9\u0016\u0005\t}\u0004CBA&\u0003\u000b\u0014\t\t\u0005\u0005\u0002:\tM!1\u0011BM!\u0019\tY%!2\u0003\u0006BQ\u0011\u0011\bBD\u0003\u0013\u0014YIa%\n\t\t%\u00151\b\u0002\u0007)V\u0004H.Z\u001a\u0011\t\t5%qR\u0007\u0003\u0005gIAA!%\u00034\tY\u0001+\u001e2mS\u000e\fG/[8o!\u0011\u0011iD!&\n\t\t]%q\b\u0002\t\u0003J$\u0018NZ1diB1\u00111JAc\u0005\'\u000b!\u0003\u001e:b]N4wN]7BeRLg-Y2ugV\u0011!q\u0014\t\u0007\u0003\u0017\n)M!)\u0011\u0011\u0005e\"1\u0003BB\u0005\u0007\u000bab\u00197bgN\u0004\u0018\r\u001e5Pe\u0012,\'/\u0006\u0002\u0003h\u0005\t1+A\u0006dC\u000eDWmS3z\u001fB$XC\u0001BW!\u0019\tI$!(\u00030B!!\u0011\u0017B_\u001d\u0011\u0011\u0019L!/\u000e\u0005\tU&\u0002\u0002B\\\u0003[\t\u0001\"\u001b8uKJt\u0017\r\\\u0005\u0005\u0005w\u0013),\u0001\u0006GKR\u001c\u0007nQ1dQ\u0016LAAa0\u0003B\n\u00191*Z=\u000b\t\tm&QW\u0001\fG\u0006t\')Z\"bG\",G-\u0001\txSRDG)\u001a9f]\u0012,gnY5fgR!\u0011q\u0017Be\u0011\u001d\ty,\u0007a\u0001\u0003\u0007\fq\"\u00193e\t\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u000b\u0005\u0003o\u0013y\rC\u0004\u0002@j\u0001\rA!5\u0011\r\u0005e\"1[Ae\u0013\u0011\u0011).a\u000f\u0003\u0015q\u0012X\r]3bi\u0016$g(\u0001\txSRD\'+\u001a9pg&$xN]5fgR!\u0011q\u0017Bn\u0011\u001d\t)n\u0007a\u0001\u00033\fq\"\u00193e%\u0016\u0004xn]5u_JLWm\u001d\u000b\u0005\u0003o\u0013\t\u000fC\u0004\u0002Vr\u0001\rAa9\u0011\r\u0005e\"1[An\u0003%qw.T5se>\u00148/\u0006\u0002\u00028\u0006Yq/\u001b;i\u001b&\u0014(o\u001c:t)\u0011\t9L!<\t\u000f\u0005\u0005h\u00041\u0001\u0002f\u0006Q\u0011\r\u001a3NSJ\u0014xN]:\u0015\t\u0005]&1\u001f\u0005\b\u0003C|\u0002\u0019\u0001B{!\u0019\tIDa5\u0002h\u0006!r/\u001b;i%\u0016\u001cx\u000e\\;uS>t\u0007+\u0019:b[N$B!a.\u0003|\"9\u00111\u001f\u0011A\u0002\u0005]\u0018aE7baJ+7o\u001c7vi&|g\u000eU1sC6\u001cH\u0003BA\\\u0007\u0003Aqaa\u0001\"\u0001\u0004\u0019)!A\u0001g!!\tIDa\u0005\u0002x\u0006]\u0018!C<ji\"\u001c\u0015m\u00195f)\u0011\t9la\u0003\t\u000f\u0005u(\u00051\u0001\u0003\u0002\u0005\u0001r/\u001b;i%\u0016\u001cx\u000e\u001c<f\u0007\u0006\u001c\u0007.\u001a\u000b\u0005\u0003o\u001b\t\u0002C\u0004\u0002~\u000e\u0002\rA!\u0001\u0002%]LG\u000f[!si&4\u0017m\u0019;t\u0007\u0006\u001c\u0007.\u001a\u000b\u0005\u0003o\u001b9\u0002C\u0004\u0002~\u0012\u0002\rA!\u0001\u00021]LG\u000f[(uQ\u0016\u0014\u0018I\u001d;jM\u0006\u001cGo]\"bG\",7\u000f\u0006\u0003\u00028\u000eu\u0001bBB\u0010K\u0001\u00071\u0011E\u0001\u0007G\u0006\u001c\u0007.Z:\u0011\r\u0005-\u0013Q\u0019B\u0001\u000399\u0018\u000e\u001e5GKR\u001c\u0007nQ1dQ\u0016$B!a.\u0004(!91\u0011\u0006\u0014A\u0002\u0005\u0005\u0016\u0001\u00037pG\u0006$\u0018n\u001c8\u0015\t\u0005]6Q\u0006\u0005\b\u0007_9\u0003\u0019AAN\u0003-awnY1uS>tw\n\u001d;\u0002\'Q\u0014\u0018M\\:g_Jl\'+Z:pYV$\u0018n\u001c8\u0015\t\u0005]6Q\u0007\u0005\b\u0007\u0007A\u0003\u0019\u0001B\t\u0003Uqw\u000e\u0016:b]N4wN]7SKN|G.\u001e;j_:$\"!a.\u0002/]LG\u000f\u001b+sC:\u001chm\u001c:n%\u0016\u001cx\u000e\\;uS>tG\u0003BA\\\u0007\u007fAqa!\u0011+\u0001\u0004\u0011y!\u0001\u0003g\u001fB$\u0018\u0001\u0005;sC:\u001chm\u001c:n\r\u0016$8\r[3s)\u0011\t9la\u0012\t\u000f\r\r1\u00061\u0001\u0003&\u0005\u0011bn\u001c+sC:\u001chm\u001c:n\r\u0016$8\r[3s\u0003Q9\u0018\u000e\u001e5Ue\u0006t7OZ8s[\u001a+Go\u00195feR!\u0011qWB(\u0011\u001d\u0019\t%\fa\u0001\u0005G\tqb^5uQ\u000ec\u0017m]:jM&,\'o\u001d\u000b\u0005\u0003o\u001b)\u0006C\u0004\u0003H9\u0002\rAa\u0013\u0002\u001d\u0005$Gm\u00117bgNLg-[3sgR!\u0011qWB.\u0011\u001d\u00119e\fa\u0001\u0007;\u0002b!!\u000f\u0003T\nm\u0013!E<ji\"l\u0015-\u001b8BeRLg-Y2ugR!\u0011qWB2\u0011\u001d\u0019)\u0007\ra\u0001\u0007O\nQ\"\\1j]\u0006\u0013H/\u001b4bGR\u001c\b\u0003BB5\u0007_j!aa\u001b\u000b\t\r5\u0014\u0011V\u0001\u0005Y\u0006tw-\u0003\u0003\u0003l\r-\u0014!E<ji\"\f%\u000f^5gC\u000e$H+\u001f9fgR!\u0011qWB;\u0011\u001d\u00199H\ra\u0001\u0005g\nQ\"\u0019:uS\u001a\f7\r\u001e+za\u0016\u001c\u0018\u0001E1eI\u0006\u0013H/\u001b4bGR$\u0016\u0010]3t)\u0011\t9l! \t\u000f\r]4\u00071\u0001\u0004\u0000A1\u0011\u0011\bBj\u0005k\n\u0001#\u00197m\u0003J$\u0018NZ1diRK\b/Z:\u0002#\u0005$G-\u0012=ue\u0006\f%\u000f^5gC\u000e$8\u000f\u0006\u0003\u00028\u000e\u001d\u0005bBB\u0002k\u0001\u0007!\u0011Q\u0001\u0011]>,\u0005\u0010\u001e:b\u0003J$\u0018NZ1diN\f!c^5uQ\u0016CHO]1BeRLg-Y2ugR!\u0011qWBH\u0011\u001d\u0019\tj\u000ea\u0001\u0005\u007f\n\u0011\u0001\\\u0001\u0016C\u0012$GK]1og\u001a|\'/\\!si&4\u0017m\u0019;t)\u0011\t9la&\t\u000f\r\r\u0001\b1\u0001\u0003\"\u0006\u0011r/\u001b;i\u00072\f7o\u001d9bi\"|%\u000fZ3s)\u0011\t9l!(\t\u000f\t\r\u0016\b1\u0001\u0003h\u0005A\u0011n\u001c*fgVdG/\u0006\u0002\u0004$B1\u0011qNA9\u0007K\u00032aa*b\u001d\r\t9\u0007S\u0001\u0006\r\u0016$8\r\u001b\t\u0004\u0003OJ5#B%\u00028\r=\u0006\u0003BAR\u0007cKA!!\u0018\u0002&R\u001111V\u0001\u0006CB\u0004H.\u001f\u000b\u0003\u0007s\u0003R!a\u001a\u0001\u0007w\u0003BA!\u0010\u0004>&!1q\u0018B \u0005\u0011!\u0016m]6\u0016\t\r\r71\u001a\u000b\u0005\u0007\u000b\u001c)\u000e\u0006\u0003\u0004H\u000eE\u0007#BA4\u0001\r%\u0007\u0003BA8\u0007\u0017$q!a\u001dM\u0005\u0004\u0019i-\u0006\u0003\u0002x\r=G\u0001CAD\u0007\u0017\u0014\r!a\u001e\t\u000f\t\u001dF\nq\u0001\u0004TB1!Q\bB\"\u0007\u0013Dq!!@M\u0001\u0004\u00199\u000e\u0005\u0004\u0003\u0004\t\u001d1\u0011\u001a\u0002\r\r\u0016$8\r\u001b+bg.|\u0005o]\n\u0004\u001b\u000eu\u0007\u0003BA\u001d\u0007?LAa!9\u0002<\t1\u0011I\\=WC2\f!eY8veNLWM\u001d\u0013GKR\u001c\u0007\u000e\n$fi\u000eDG+Y:l\u001fB\u001cH\u0005\n4fi\u000eDWCAB]\u0003\r\u001aw.\u001e:tS\u0016\u0014HER3uG\"$c)\u001a;dQR\u000b7o[(qg\u0012\"c-\u001a;dQ\u0002\"Baa;\u0004pB\u00191Q^\'\u000e\u0003%Cqa!=Q\u0001\u0004\u0019I,A\u0003gKR\u001c\u0007.\u0001\u0007gkR,(/\u001a*fgVdG\u000f\u0006\u0002\u0004xR!1\u0011 C`!\u0019\u0019Y\u0010\"\u0001\u0005\u00065\u00111Q \u0006\u0005\u0007\u007f\fY$\u0001\u0006d_:\u001cWO\u001d:f]RLA\u0001b\u0001\u0004~\n1a)\u001e;ve\u0016\u00042a!<b\u0005\u0019\u0011Vm];miN9\u0011-a\u000e\u0002D\u0005%\u0013A\u0003:fg>dW\u000f^5p]V\u0011!\u0011D\u0001\fe\u0016\u001cx\u000e\\;uS>t\u0007%A\u000bgk2dG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:\u0016\u0005\u0011U\u0001CBA&\u0003\u000b$9\u0002\u0005\u0007\u0002:\u0011e\u0011\u0011\u001aBF\u0005\'\u000bY*\u0003\u0003\u0005\u001c\u0005m\"A\u0002+va2,G\'\u0001\fgk2dG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:!\u0003I1W\u000f\u001c7FqR\u0014\u0018-\u0011:uS\u001a\f7\r^:\u0016\u0005\u0011\r\u0002CBA&\u0003\u000b$)\u0003\u0005\u0005\u0002:\u0011\u001d\"1SAN\u0013\u0011!I#a\u000f\u0003\rQ+\b\u000f\\33\u0003M1W\u000f\u001c7FqR\u0014\u0018-\u0011:uS\u001a\f7\r^:!)!!)\u0001b\f\u00052\u0011M\u0002b\u0002C\u0006Q\u0002\u0007!\u0011\u0004\u0005\b\t#A\u0007\u0019\u0001C\u000b\u0011\u001d!y\u0002\u001ba\u0001\tG!\"\u0001\"\u0002\u0002#\u0011,G/Y5mK\u0012\f%\u000f^5gC\u000e$8/\u0006\u0002\u0005<A1\u00111JAc\t{\u0001B\"!\u000f\u0005\u001a\u0005%\'1\u0012BJ\u0003C\u000ba\"\u001a=ue\u0006\f%\u000f^5gC\u000e$8/\u0006\u0002\u0005DA1\u00111JAc\t\u000b\u0002\u0002\"!\u000f\u0005(\tM\u0015\u0011U\u0001\u000eMVdG.\u0011:uS\u001a\f7\r^:\u0002\u000b\u0019LG.Z:\u0016\u0005\u00115\u0003CBA&\u0003\u000b\f\t+A\u000bxSRDG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:\u0015\t\u0011\u0015A1\u000b\u0005\b\toy\u0007\u0019\u0001C\u001eQ\u001dyGq\u000bC/\tC\u0002B!!\u000f\u0005Z%!A1LA\u001e\u0005)!W\r\u001d:fG\u0006$X\rZ\u0011\u0003\t?\nQ%V:fA]LG\u000f\u001b$vY2$U\r^1jY\u0016$\u0017I\u001d;jM\u0006\u001cGo\u001d\u0011j]N$X-\u00193\"\u0005\u0011\r\u0014\u0001\u0004\u001a/a9\u0002TFU\"7[E*D\u0003\u0002C\u0003\tOBq\u0001b\u0010q\u0001\u0004!\u0019\u0005K\u0004q\t/\"Y\u0007\"\u0019\"\u0005\u00115\u0014AI+tK\u0002:\u0018\u000e\u001e5Gk2dW\t\u001f;sC\u0006\u0013H/\u001b4bGR\u001c\b%\u001b8ti\u0016\fG-\u0001\bxSRD\'+Z:pYV$\u0018n\u001c8\u0015\t\u0011\u0015A1\u000f\u0005\b\t\u0017\t\b\u0019\u0001B\r\u0003e9\u0018\u000e\u001e5Gk2dG)\u001a;bS2,G-\u0011:uS\u001a\f7\r^:\u0015\t\u0011\u0015A\u0011\u0010\u0005\b\t#\u0011\b\u0019\u0001C\u000b\u0003Y9\u0018\u000e\u001e5Gk2dW\t\u001f;sC\u0006\u0013H/\u001b4bGR\u001cH\u0003\u0002C\u0003\t\u007fBq\u0001b\bt\u0001\u0004!\u0019#\u0001\u0005u_N#(/\u001b8h)\t!)\t\u0005\u0003\u0004j\u0011\u001d\u0015\u0002\u0002CE\u0007W\u0012aa\u0015;sS:<\u0017\u0001C2b]\u0016\u000bX/\u00197\u0015\t\t\u001dDq\u0012\u0005\b\t#+\b\u0019AA@\u0003\ry\'M[\u0001\u0007KF,\u0018\r\\:\u0015\t\t\u001dDq\u0013\u0005\b\t#3\b\u0019AA@\u0003!A\u0017m\u001d5D_\u0012,GC\u0001CO!\u0011\tI\u0004b(\n\t\u0011\u0005\u00161\b\u0002\u0004\u0013:$\u0018!\u0002;va2,WC\u0001CT!)\tIDa\"\u0003\u001a\u0011UA1E\u0001\u000eaJ|G-^2u!J,g-\u001b=\u0016\u0005\u0011\u0015\u0015\u0001\u00049s_\u0012,8\r^!sSRLXC\u0001CO\u00039\u0001(o\u001c3vGR,E.Z7f]R$B!a \u00056\"9AqW>A\u0002\u0011u\u0015!\u00018\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\t\u000b#i\fC\u0004\u00058r\u0004\r\u0001\"(\t\u0013\u0011\u0005\u0017\u000b%AA\u0004\u0011\r\u0017AA3d!\u0011\u0019Y\u0010\"2\n\t\u0011\u001d7Q \u0002\u0011\u000bb,7-\u001e;j_:\u001cuN\u001c;fqR\faCZ;ukJ,\'+Z:vYR$C-\u001a4bk2$H%\r\u000b\u0003\t\u001bTC\u0001b1\u0005P.\u0012A\u0011\u001b\t\u0005\t\'$i.\u0004\u0002\u0005V*!Aq\u001bCm\u0003%)hn\u00195fG.,GM\u0003\u0003\u0005\\\u0006m\u0012AC1o]>$\u0018\r^5p]&!Aq\u001cCk\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u0007MV$XO]3\u0015\u0005\u0011\u0015H\u0003\u0002Ct\tS\u0004baa?\u0005\u0002\u00115\u0003\"\u0003Ca\'B\u0005\t9\u0001Cb\u0003A1W\u000f^;sK\u0012\"WMZ1vYR$\u0013\'\u0001\u0007fSRDWM\u001d*fgVdG\u000f\u0006\u0002\u0005rR!A1_C\u0003!!\tY\u0005\">\u0005z\u0012\u0015\u0011\u0002\u0002C|\u0003?\u0012a!R5uQ\u0016\u0014\b\u0003\u0002C~\u000b\u0003i!\u0001\"@\u000b\t\u0011}\u0018QF\u0001\u0006KJ\u0014xN]\u0005\u0005\u000b\u0007!iPA\u0007D_V\u00148/[3s\u000bJ\u0014xN\u001d\u0005\n\t\u0003,\u0006\u0013!a\u0002\t\u0007\fa#Z5uQ\u0016\u0014(+Z:vYR$C-\u001a4bk2$H%M\u0001\u0007K&$\b.\u001a:\u0015\u0005\u00155A\u0003BC\b\u000b#\u0001\u0002\"a\u0013\u0005v\u0012eHQ\n\u0005\n\t\u0003<\u0006\u0013!a\u0002\t\u0007\f\u0001#Z5uQ\u0016\u0014H\u0005Z3gCVdG\u000fJ\u0019\u0002\u0013I,hNU3tk2$HCAC\r)\u0011!)!b\u0007\t\u0013\u0011\u0005\u0017\f%AA\u0004\u0011\r\u0017a\u0005:v]J+7/\u001e7uI\u0011,g-Y;mi\u0012\n\u0014a\u0001:v]R\u0011Q1\u0005\u000b\u0005\t\u001b*)\u0003C\u0005\u0005Bn\u0003\n\u0011q\u0001\u0005D\u0006i!/\u001e8%I\u00164\u0017-\u001e7uIE\"BAa\u001a\u0006,!IQQ\u00060\u0002\u0002\u0003\u0007\u0011qP\u0001\u0004q\u0012\n\u0014\u0001\u0004$fi\u000eDG+Y:l\u001fB\u001cH\u0003BBv\u000bgAqa!=`\u0001\u0004\u0019I,\u0006\u0003\u00068\u0015uB\u0003CC\u001d\u000b\u0007*9%b\u0013\u0011\u000b\u0005\u001d\u0004!b\u000f\u0011\t\u0005=TQ\b\u0003\b\u0003g\u0002\'\u0019AC +\u0011\t9(\"\u0011\u0005\u0011\u0005\u001dUQ\bb\u0001\u0003oBq!!\u0019a\u0001\u0004))\u0005\u0005\u0004\u0002h\u0005%T1\b\u0005\b\u0003\u0017\u0003\u0007\u0019AC%!\u0019\t9\'!%\u0006<!9\u0011q\u00131A\u0002\u0005m\u0015A\u0002*fgVdG\u000fE\u0002\u0004nz\u001cRA`A\u001c\u0007_#\"!b\u0014\u0015\u0011\u0011\u0015QqKC-\u000b7B\u0001\u0002b\u0003\u0002\u0004\u0001\u0007!\u0011\u0004\u0005\t\t#\t\u0019\u00011\u0001\u0005\u0016!AAqDA\u0002\u0001\u0004!\u0019#\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0006bA!1\u0011NC2\u0013\u0011))ga\u001b\u0003\r=\u0013\'.Z2u!\u0011\u0019i/!\u0003\u0014\t\u0005%\u0011q\u0007\u000b\u0003\u000bO\naCZ;ukJ,\'+Z:vYR$S\r\u001f;f]NLwN\u001c\u000b\u0005\u000bc*9\b\u0006\u0002\u0006tQ!1\u0011`C;\u0011)!\t-!\u0004\u0011\u0002\u0003\u000fA1\u0019\u0005\t\u000bs\ni\u00011\u0001\u0004l\u0006)A\u0005\u001e5jg\u0006\u0001b-\u001e;ve\u0016$S\r\u001f;f]NLwN\u001c\u000b\u0005\u000b\u007f*)\t\u0006\u0002\u0006\u0002R!Aq]CB\u0011)!\t-a\u0004\u0011\u0002\u0003\u000fA1\u0019\u0005\t\u000bs\ny\u00011\u0001\u0004l\u0006\u0001c-\u001e;ve\u0016\u0014Vm];mi\u0012\"WMZ1vYR$\u0013\u0007J3yi\u0016t7/[8o)\u0011!Y-b#\t\u0011\u0015e\u0014\u0011\u0003a\u0001\u0007W\f!DZ;ukJ,G\u0005Z3gCVdG\u000fJ\u0019%Kb$XM\\:j_:$B\u0001b3\u0006\u0012\"AQ\u0011PA\n\u0001\u0004\u0019Y/\u0001\ffSRDWM\u001d*fgVdG\u000fJ3yi\u0016t7/[8o)\u0011)9*\"(\u0015\u0005\u0015eE\u0003\u0002Cz\u000b7C!\u0002\"1\u0002\u0016A\u0005\t9\u0001Cb\u0011!)I(!\u0006A\u0002\r-\u0018\u0001E3ji\",\'\u000fJ3yi\u0016t7/[8o)\u0011)\u0019+\"+\u0015\u0005\u0015\u0015F\u0003BC\b\u000bOC!\u0002\"1\u0002\u0018A\u0005\t9\u0001Cb\u0011!)I(a\u0006A\u0002\r-\u0018\u0001I3ji\",\'OU3tk2$H\u0005Z3gCVdG\u000fJ\u0019%Kb$XM\\:j_:$B\u0001b3\u00060\"AQ\u0011PA\r\u0001\u0004\u0019Y/\u0001\u000efSRDWM\u001d\u0013eK\u001a\fW\u000f\u001c;%c\u0011*\u0007\u0010^3og&|g\u000e\u0006\u0003\u0005L\u0016U\u0006\u0002CC=\u00037\u0001\raa;\u0002\'I,hNU3tk2$H%\u001a=uK:\u001c\u0018n\u001c8\u0015\t\u0015mV\u0011\u0019\u000b\u0003\u000b{#B\u0001\"\u0002\u0006@\"QA\u0011YA\u000f!\u0003\u0005\u001d\u0001b1\t\u0011\u0015e\u0014Q\u0004a\u0001\u0007W\fQB];oI\u0015DH/\u001a8tS>tG\u0003BCd\u000b\u001b$\"!\"3\u0015\t\u00115S1\u001a\u0005\u000b\t\u0003\fy\u0002%AA\u0004\u0011\r\u0007\u0002CC=\u0003?\u0001\raa;\u0002;I,hNU3tk2$H\u0005Z3gCVdG\u000fJ\u0019%Kb$XM\\:j_:$B\u0001b3\u0006T\"AQ\u0011PA\u0011\u0001\u0004\u0019Y/A\fsk:$C-\u001a4bk2$H%\r\u0013fqR,gn]5p]R!A1ZCm\u0011!)I(a\tA\u0002\r-\u0018A\u00055bg\"\u001cu\u000eZ3%Kb$XM\\:j_:$B\u0001b\'\u0006`\"AQ\u0011PA\u0013\u0001\u0004\u0019Y/\u0001\tfcV\fGn\u001d\u0013fqR,gn]5p]R!QQ]Cu)\u0011\u00119\'b:\t\u0015\u00155\u0012qEA\u0001\u0002\u0004\ty\b\u0003\u0005\u0006z\u0005\u001d\u0002\u0019ABv+\t)i\u000f\u0005\u0004\u0002p\u0005EDQJ\u0001\fo&$\bNU3t_24X\r\u0006\u0003\u00028\u0016M\bbBA1y\u0001\u0007\u0011QM\u0001\u000eo&$\b.\u0011:uS\u001a\f7\r^:\u0015\t\u0005]V\u0011 \u0005\b\u0003\u0017k\u0004\u0019AAH\u0003E9\u0018\u000e\u001e5GKR\u001c\u0007nQ1dQ\u0016|\u0005\u000f\u001e\u000b\u0005\u0003o+y\u0010C\u0004\u0002\u0018z\u0002\r!a\'\u0015\t\t\u001dd1\u0001\u0005\b\t#\u0003\u0005\u0019AA@)\u0011\u00119Gb\u0002\t\u000f\u0011E\u0015\t1\u0001\u0002\u0000U\u0011a1\u0002\t\u000b\u0003s\u00119)!\u001a\u0002\u0010\u0006mE\u0003BA@\r\u001fAq\u0001b.G\u0001\u0004!i\n\u0006\u0003\u0005\u0006\u001aM\u0001b\u0002C\\\u000f\u0002\u0007AQ\u0014"
    )
BootstrapMethods:
  0: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #259 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$1:(Lscala/Tuple2;)Ljava/lang/String;
      #260 (Lscala/Tuple2;)Ljava/lang/String;
      #261 5
      #262 1
      #260 (Lscala/Tuple2;)Ljava/lang/String;
  1: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #289 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$2:(Lscala/Tuple2;)Ljava/lang/String;
      #260 (Lscala/Tuple2;)Ljava/lang/String;
      #261 5
      #262 1
      #260 (Lscala/Tuple2;)Ljava/lang/String;
  2: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #297 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$3:(Lscala/Tuple2;)Ljava/lang/String;
      #260 (Lscala/Tuple2;)Ljava/lang/String;
      #261 5
      #262 1
      #260 (Lscala/Tuple2;)Ljava/lang/String;
  3: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #330 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$4:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
      #331 (Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
      #261 5
      #262 1
      #331 (Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
  4: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #446 ()Ljava/lang/Object;
      #451 REF_invokeStatic coursier/Fetch.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
      #452 ()Lscala/Function1;
      #261 5
      #262 1
      #452 ()Lscala/Function1;
  5: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #460 REF_invokeStatic coursier/Fetch.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #461 (Lscala/Function1;)Lscala/Function1;
      #261 5
      #262 1
      #461 (Lscala/Function1;)Lscala/Function1;
  6: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #446 ()Ljava/lang/Object;
      #481 REF_invokeStatic coursier/Fetch.$anonfun$transformFetcher$1:(Lscala/Function1;)Lscala/Function1;
      #452 ()Lscala/Function1;
      #261 5
      #262 1
      #452 ()Lscala/Function1;
  7: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #486 REF_invokeStatic coursier/Fetch.$anonfun$transformFetcher$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #461 (Lscala/Function1;)Lscala/Function1;
      #261 5
      #262 1
      #461 (Lscala/Function1;)Lscala/Function1;
  8: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #522 REF_invokeStatic coursier/Fetch.$anonfun$withMainArtifacts$1$adapted:(Ljava/lang/Boolean;)Ljava/lang/Object;
      #523 (Ljava/lang/Boolean;)Ljava/lang/Object;
      #261 5
      #262 1
      #523 (Ljava/lang/Boolean;)Ljava/lang/Object;
  9: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #446 ()Ljava/lang/Object;
      #547 REF_invokeStatic coursier/Fetch.$anonfun$addArtifactTypes$1:()Lscala/collection/immutable/Set;
      #548 ()Lscala/collection/immutable/Set;
      #261 5
      #262 1
      #548 ()Lscala/collection/immutable/Set;
  10: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #629 REF_invokeStatic coursier/Fetch.$anonfun$ioResult$1:(Lcoursier/Fetch;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #631 (Lcoursier/core/Resolution;)Ljava/lang/Object;
      #261 5
      #262 1
      #631 (Lcoursier/core/Resolution;)Ljava/lang/Object;
  11: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #647 REF_invokeStatic coursier/Fetch.$anonfun$io$1:(Lcoursier/Fetch;Ljava/io/File;)Lscala/Option;
      #649 (Ljava/io/File;)Lscala/Option;
      #261 5
      #262 1
      #649 (Ljava/io/File;)Lscala/Option;
  12: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #683 REF_invokeStatic coursier/Fetch.$anonfun$io$3:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lcoursier/Fetch$Result;)Ljava/lang/Object;
      #685 (Lcoursier/Fetch$Result;)Ljava/lang/Object;
      #261 5
      #262 1
      #685 (Lcoursier/Fetch$Result;)Ljava/lang/Object;
  13: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #696 REF_invokeStatic coursier/Fetch.$anonfun$io$7:(Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
      #697 (Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
      #261 5
      #262 1
      #697 (Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
  14: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #843 REF_invokeStatic coursier/Fetch.$anonfun$ioResult$2:(Lcoursier/core/Resolution;Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
      #845 (Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
      #261 5
      #262 1
      #845 (Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
  15: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #871 REF_invokeStatic coursier/Fetch.$anonfun$io$2:(Ljava/io/File;Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
      #873 (Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
      #261 5
      #262 1
      #873 (Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
  16: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #906 REF_invokeStatic coursier/Fetch.$anonfun$io$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #907 (Lscala/Tuple2;)Ljava/lang/Object;
      #261 5
      #262 1
      #907 (Lscala/Tuple2;)Ljava/lang/Object;
  17: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #914 ()V
      #917 REF_invokeStatic coursier/Fetch.$anonfun$io$5:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)V
      #914 ()V
      #262 1
  18: #269 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 (Ljava/lang/Object;)Ljava/lang/Object;
      #932 REF_invokeStatic coursier/Fetch.$anonfun$io$6:(Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
      #934 (Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
      #261 5
      #262 1
      #934 (Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
  19: #960 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #547 REF_invokeStatic coursier/Fetch.$anonfun$addArtifactTypes$1:()Lscala/collection/immutable/Set;
      #259 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$1:(Lscala/Tuple2;)Ljava/lang/String;
      #289 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$2:(Lscala/Tuple2;)Ljava/lang/String;
      #297 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$3:(Lscala/Tuple2;)Ljava/lang/String;
      #330 REF_invokeStatic coursier/Fetch.$anonfun$cacheKeyOpt$4:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/Vector;
      #647 REF_invokeStatic coursier/Fetch.$anonfun$io$1:(Lcoursier/Fetch;Ljava/io/File;)Lscala/Option;
      #871 REF_invokeStatic coursier/Fetch.$anonfun$io$2:(Ljava/io/File;Lcoursier/internal/FetchCache$Key;)Lscala/Tuple2;
      #683 REF_invokeStatic coursier/Fetch.$anonfun$io$3:(Lcoursier/Fetch;Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lcoursier/Fetch$Result;)Ljava/lang/Object;
      #906 REF_invokeStatic coursier/Fetch.$anonfun$io$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #917 REF_invokeStatic coursier/Fetch.$anonfun$io$5:(Lcoursier/internal/FetchCache;Lcoursier/internal/FetchCache$Key;Lscala/collection/immutable/Seq;)V
      #932 REF_invokeStatic coursier/Fetch.$anonfun$io$6:(Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/collection/immutable/Seq;
      #696 REF_invokeStatic coursier/Fetch.$anonfun$io$7:(Lcoursier/Fetch$Result;)Lscala/collection/immutable/Seq;
      #629 REF_invokeStatic coursier/Fetch.$anonfun$ioResult$1:(Lcoursier/Fetch;Lcoursier/core/Resolution;)Ljava/lang/Object;
      #843 REF_invokeStatic coursier/Fetch.$anonfun$ioResult$2:(Lcoursier/core/Resolution;Lcoursier/Artifacts$Result;)Lcoursier/Fetch$Result;
      #481 REF_invokeStatic coursier/Fetch.$anonfun$transformFetcher$1:(Lscala/Function1;)Lscala/Function1;
      #486 REF_invokeStatic coursier/Fetch.$anonfun$transformFetcher$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #451 REF_invokeStatic coursier/Fetch.$anonfun$transformResolution$1:(Lscala/Function1;)Lscala/Function1;
      #460 REF_invokeStatic coursier/Fetch.$anonfun$transformResolution$2:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #522 REF_invokeStatic coursier/Fetch.$anonfun$withMainArtifacts$1$adapted:(Ljava/lang/Boolean;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x1CB (unknown attribute)
   01 01 00 5B 02 23 00 99 01 01 02 01 03 01 01 21
   01 03 01 01 29 01 03 01 01 49 01 4A 01 02 86 02
   87 01 03 55 03 56 01 02 AA 02 AB 01 03 70 03 71
   01 03 89 03 8A 01 03 78 03 79 01 03 81 03 82 01
   02 B7 02 B8 01 02 74 02 75 01 03 33 03 34 01 01
   E1 01 C3 01 01 E6 01 CC 01 01 C2 01 C3 01 01 CB
   01 CC 01 03 2D 03 2E 01 02 09 02 0A 01 01 54 02
   C5 01 00 51 00 94 01 02 21 01 6F 01 01 F8 01 6F
   01 01 79 01 6F 01 02 4F 01 94 01 01 8B 01 6F 01
   01 82 01 6F 01 02 5B 01 94 01 02 32 00 54 01 00
   A3 00 6E 01 00 38 00 6A 01 00 50 00 87 01 00 B3
   00 6E 01 01 68 00 B0 01 02 E1 02 A5 01 00 98 00
   99 01 00 AF 00 B0 01 00 35 00 66 01 00 72 00 73
   01 02 A4 02 A5 01 00 A7 00 73 01 00 3B 00 6E 01
   02 E6 02 E7 01 02 68 01 C0 01 02 66 01 C0 01 00
   9F 00 6E 01 01 93 01 94 01 00 7F 00 73 01 02 57
   00 54 01 01 83 00 54 01 01 EE 00 54 01 01 DB 00
   54 01 02 FB 02 E7 01 02 FC 02 FD 01 03 07 03 08
   01 00 61 00 59 01 00 58 00 59 01 02 FA 01 3D 01
   00 7B 00 73 01 00 83 00 84 01 00 93 00 94 01 00
   8B 00 6E 01 02 C9 01 3D 01 00 AB 00 73 01 01 DF
   01 94 01 00 8F 00 6E 01 01 BE 01 94 01 02 F2 02
   F3 01 02 1B 01 F2 01 01 A6 01 A7 01 01 AC 01 9E
   01 01 9D 01 9E 01 01 F1 01 F2 01 02 60 02 61 01
   01 6E 01 6F 01 02 58 01 6F 01 01 B4 01 B5 01 01
   B4 01 B8 01 01 B7 01 B8 01 01 FD 00 54 01 01 FD
   01 FE 01 01 87 01 6F 01 01 AD 01 6F 01 01 7E 01
   6F 01 01 8C 01 8D 01 01 74 01 75 01 01 AB 01 9E
   01 01 EF 01 B8 01 01 DC 01 B8 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
