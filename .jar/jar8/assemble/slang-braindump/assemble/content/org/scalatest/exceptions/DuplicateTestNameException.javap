Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/exceptions/DuplicateTestNameException.class
  Last modified May 29, 2022; size 5379 bytes
  SHA-256 checksum fed12bffc7d5628387bf568568f45ce1a50da7c3289dd147addd2d9ec000c7f2
  Compiled from "DuplicateTestNameException.scala"
public class org.scalatest.exceptions.DuplicateTestNameException extends org.scalatest.exceptions.StackDepthException
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/exceptions/DuplicateTestNameException
  super_class: #4                         // org/scalatest/exceptions/StackDepthException
  interfaces: 0, fields: 2, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/exceptions/DuplicateTestNameException
    #2 = Class              #1            // org/scalatest/exceptions/DuplicateTestNameException
    #3 = Utf8               org/scalatest/exceptions/StackDepthException
    #4 = Class              #3            // org/scalatest/exceptions/StackDepthException
    #5 = Utf8               DuplicateTestNameException.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\t4Aa\u0003\u0007\u0001\'!A\u0001\u0004\u0001B\u0001B\u0003%\u0011\u0004\u0003\u0005\'\u0001\t\u0005\t\u0015!\u0003(\u0011\u0015y\u0004\u0001\"\u0001A\u0011\u0015y\u0004\u0001\"\u0001E\u0011\u0015y\u0004\u0001\"\u0001J\u0011\u0015y\u0004\u0001\"\u0001N\u0011\u0015\t\u0006\u0001\"\u0001S\u0011\u0015\u0019\u0006\u0001\"\u0011U\u0011\u0015i\u0006\u0001\"\u0011_\u0011\u0015\u0001\u0007\u0001\"\u0011b\u0005i!U\u000f\u001d7jG\u0006$X\rV3ti:\u000bW.Z#yG\u0016\u0004H/[8o\u0015\tia\"\u0001\u0006fq\u000e,\u0007\u000f^5p]NT!a\u0004\t\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\t\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0005\u0001!\u0002CA\u000b\u0017\u001b\u0005a\u0011BA\f\r\u0005M\u0019F/Y2l\t\u0016\u0004H\u000f[#yG\u0016\u0004H/[8o\u0003!!Xm\u001d;OC6,\u0007C\u0001\u000e$\u001d\tY\u0012\u0005\u0005\u0002\u001d?5\tQD\u0003\u0002\u001f%\u00051AH]8pizR\u0011\u0001I\u0001\u0006g\u000e\fG.Y\u0005\u0003E}\ta\u0001\u0015:fI\u00164\u0017B\u0001\u0013&\u0005\u0019\u0019FO]5oO*\u0011!eH\u0001\u0013a>\u001cxJ]*uC\u000e\\G)\u001a9uQ\u001a+h\u000e\u0005\u0003)[ABdBA\u0015,\u001d\ta\"&C\u0001!\u0013\tas$A\u0004qC\u000e\\\u0017mZ3\n\u00059z#AB#ji\",\'O\u0003\u0002-?A\u0011\u0011GN\u0007\u0002e)\u00111\u0007N\u0001\u0007g>,(oY3\u000b\u0005U\u0002\u0012!C:dC2\f7\r^5d\u0013\t9$G\u0001\u0005Q_NLG/[8o!\u0011I$\b\u0006\u001f\u000e\u0003}I!aO\u0010\u0003\u0013\u0019+hn\u0019;j_:\f\u0004CA\u001d>\u0013\tqtDA\u0002J]R\fa\u0001P5oSRtDcA!C\u0007B\u0011Q\u0003\u0001\u0005\u00061\r\u0001\r!\u0007\u0005\u0006M\r\u0001\ra\n\u000b\u0004\u0003\u0016;\u0005\"\u0002$\u0005\u0001\u0004I\u0012aB7fgN\fw-\u001a\u0005\u0006\u0011\u0012\u0001\r\u0001M\u0001\u0004a>\u001cHcA!K\u0017\")\u0001$\u0002a\u00013!)A*\u0002a\u0001y\u0005!b-Y5mK\u0012\u001cu\u000eZ3Ti\u0006\u001c7\u000eR3qi\"$2!\u0011(P\u0011\u0015Ab\u00011\u0001\u001a\u0011\u0015\u0001f\u00011\u00019\u0003]1\u0017-\u001b7fI\u000e{G-Z*uC\u000e\\G)\u001a9uQ\u001a+h.A\ntKZ,\'/\u001a3BiN#\u0018mY6EKB$\b.F\u0001B\u0003!\u0019\u0017M\\#rk\u0006dGCA+Y!\tId+\u0003\u0002X?\t9!i\\8mK\u0006t\u0007\"B-\t\u0001\u0004Q\u0016!B8uQ\u0016\u0014\bCA\u001d\\\u0013\tavDA\u0002B]f\fa!Z9vC2\u001cHCA+`\u0011\u0015I\u0016\u00021\u0001[\u0003!A\u0017m\u001d5D_\u0012,G#\u0001\u001f
    #9 = Utf8               org/scalactic/Requirements$RequirementsHelper
   #10 = Class              #9            // org/scalactic/Requirements$RequirementsHelper
   #11 = Utf8               org/scalactic/Requirements
   #12 = Class              #11           // org/scalactic/Requirements
   #13 = Utf8               RequirementsHelper
   #14 = Utf8               org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$1
   #15 = Class              #14           // org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$1
   #16 = Utf8               org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$2
   #17 = Class              #16           // org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$2
   #18 = Utf8               testName
   #19 = Utf8               Ljava/lang/String;
   #20 = Utf8               posOrStackDepthFun
   #21 = Utf8               Lscala/util/Either;
   #22 = Utf8               Lscala/util/Either<Lorg/scalactic/source/Position;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;>;
   #23 = Utf8               severedAtStackDepth
   #24 = Utf8               ()Lorg/scalatest/exceptions/DuplicateTestNameException;
   #25 = Utf8               scala/collection/ArrayOps$
   #26 = Class              #25           // scala/collection/ArrayOps$
   #27 = Utf8               MODULE$
   #28 = Utf8               Lscala/collection/ArrayOps$;
   #29 = NameAndType        #27:#28       // MODULE$:Lscala/collection/ArrayOps$;
   #30 = Fieldref           #26.#29       // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
   #31 = Utf8               scala/Predef$
   #32 = Class              #31           // scala/Predef$
   #33 = Utf8               Lscala/Predef$;
   #34 = NameAndType        #27:#33       // MODULE$:Lscala/Predef$;
   #35 = Fieldref           #32.#34       // scala/Predef$.MODULE$:Lscala/Predef$;
   #36 = Utf8               getStackTrace
   #37 = Utf8               ()[Ljava/lang/StackTraceElement;
   #38 = NameAndType        #36:#37       // getStackTrace:()[Ljava/lang/StackTraceElement;
   #39 = Methodref          #2.#38        // org/scalatest/exceptions/DuplicateTestNameException.getStackTrace:()[Ljava/lang/StackTraceElement;
   #40 = Utf8               [Ljava/lang/Object;
   #41 = Class              #40           // "[Ljava/lang/Object;"
   #42 = Utf8               refArrayOps
   #43 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
   #44 = NameAndType        #42:#43       // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #45 = Methodref          #32.#44       // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #46 = Utf8               failedCodeStackDepth
   #47 = Utf8               ()I
   #48 = NameAndType        #46:#47       // failedCodeStackDepth:()I
   #49 = Methodref          #2.#48        // org/scalatest/exceptions/DuplicateTestNameException.failedCodeStackDepth:()I
   #50 = Utf8               drop$extension
   #51 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
   #52 = NameAndType        #50:#51       // drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
   #53 = Methodref          #26.#52       // scala/collection/ArrayOps$.drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
   #54 = Utf8               [Ljava/lang/StackTraceElement;
   #55 = Class              #54           // "[Ljava/lang/StackTraceElement;"
   #56 = NameAndType        #18:#19       // testName:Ljava/lang/String;
   #57 = Fieldref           #2.#56        // org/scalatest/exceptions/DuplicateTestNameException.testName:Ljava/lang/String;
   #58 = NameAndType        #20:#21       // posOrStackDepthFun:Lscala/util/Either;
   #59 = Fieldref           #2.#58        // org/scalatest/exceptions/DuplicateTestNameException.posOrStackDepthFun:Lscala/util/Either;
   #60 = Utf8               <init>
   #61 = Utf8               (Ljava/lang/String;Lscala/util/Either;)V
   #62 = NameAndType        #60:#61       // "<init>":(Ljava/lang/String;Lscala/util/Either;)V
   #63 = Methodref          #2.#62        // org/scalatest/exceptions/DuplicateTestNameException."<init>":(Ljava/lang/String;Lscala/util/Either;)V
   #64 = Utf8               setStackTrace
   #65 = Utf8               ([Ljava/lang/StackTraceElement;)V
   #66 = NameAndType        #64:#65       // setStackTrace:([Ljava/lang/StackTraceElement;)V
   #67 = Methodref          #2.#66        // org/scalatest/exceptions/DuplicateTestNameException.setStackTrace:([Ljava/lang/StackTraceElement;)V
   #68 = Utf8               truncated
   #69 = Utf8               e
   #70 = Utf8               Lorg/scalatest/exceptions/DuplicateTestNameException;
   #71 = Utf8               this
   #72 = Utf8               canEqual
   #73 = Utf8               (Ljava/lang/Object;)Z
   #74 = Utf8               other
   #75 = Utf8               Ljava/lang/Object;
   #76 = Utf8               equals
   #77 = NameAndType        #76:#73       // equals:(Ljava/lang/Object;)Z
   #78 = Methodref          #4.#77        // org/scalatest/exceptions/StackDepthException.equals:(Ljava/lang/Object;)Z
   #79 = Utf8               java/lang/Object
   #80 = Class              #79           // java/lang/Object
   #81 = Utf8               hashCode
   #82 = NameAndType        #81:#47       // hashCode:()I
   #83 = Methodref          #4.#82        // org/scalatest/exceptions/StackDepthException.hashCode:()I
   #84 = Utf8               ()Ljava/lang/Throwable;
   #85 = NameAndType        #23:#24       // severedAtStackDepth:()Lorg/scalatest/exceptions/DuplicateTestNameException;
   #86 = Methodref          #2.#85        // org/scalatest/exceptions/DuplicateTestNameException.severedAtStackDepth:()Lorg/scalatest/exceptions/DuplicateTestNameException;
   #87 = Utf8               (Ljava/lang/String;Lscala/util/Either<Lorg/scalactic/source/Position;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;>;)V
   #88 = Utf8               (Ljava/lang/String;)V
   #89 = NameAndType        #60:#88       // "<init>":(Ljava/lang/String;)V
   #90 = Methodref          #15.#89       // org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$1."<init>":(Ljava/lang/String;)V
   #91 = Utf8               scala/None$
   #92 = Class              #91           // scala/None$
   #93 = Utf8               Lscala/None$;
   #94 = NameAndType        #27:#93       // MODULE$:Lscala/None$;
   #95 = Fieldref           #92.#94       // scala/None$.MODULE$:Lscala/None$;
   #96 = Utf8               (Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
   #97 = NameAndType        #60:#96       // "<init>":(Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
   #98 = Methodref          #4.#97        // org/scalatest/exceptions/StackDepthException."<init>":(Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
   #99 = Utf8               org/scalactic/Requirements$
  #100 = Class              #99           // org/scalactic/Requirements$
  #101 = Utf8               Lorg/scalactic/Requirements$;
  #102 = NameAndType        #27:#101      // MODULE$:Lorg/scalactic/Requirements$;
  #103 = Fieldref           #100.#102     // org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
  #104 = Utf8               requirementsHelper
  #105 = Utf8               ()Lorg/scalactic/Requirements$RequirementsHelper;
  #106 = NameAndType        #104:#105     // requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
  #107 = Methodref          #100.#106     // org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
  #108 = Utf8               java/lang/String
  #109 = Class              #108          // java/lang/String
  #110 = Utf8               DuplicateTestNameException.this.testName
  #111 = String             #110          // DuplicateTestNameException.this.testName
  #112 = Utf8               [Ljava/lang/String;
  #113 = Class              #112          // "[Ljava/lang/String;"
  #114 = Utf8               org/scalactic/Prettifier$
  #115 = Class              #114          // org/scalactic/Prettifier$
  #116 = Utf8               Lorg/scalactic/Prettifier$;
  #117 = NameAndType        #27:#116      // MODULE$:Lorg/scalactic/Prettifier$;
  #118 = Fieldref           #115.#117     // org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
  #119 = Utf8               default
  #120 = Utf8               ()Lorg/scalactic/Prettifier;
  #121 = NameAndType        #119:#120     // default:()Lorg/scalactic/Prettifier;
  #122 = Methodref          #115.#121     // org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
  #123 = Utf8               org/scalactic/source/Position
  #124 = Class              #123          // org/scalactic/source/Position
  #125 = String             #5            // DuplicateTestNameException.scala
  #126 = Utf8               Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
  #127 = String             #126          // Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
  #128 = Utf8               (Ljava/lang/String;Ljava/lang/String;I)V
  #129 = NameAndType        #60:#128      // "<init>":(Ljava/lang/String;Ljava/lang/String;I)V
  #130 = Methodref          #124.#129     // org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
  #131 = Utf8               macroRequireNonNull
  #132 = Utf8               ([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #133 = NameAndType        #131:#132     // macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #134 = Methodref          #10.#133      // org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #135 = Utf8               (Ljava/lang/String;Lorg/scalactic/source/Position;)V
  #136 = Utf8               message
  #137 = Utf8               pos
  #138 = Utf8               scala/package$
  #139 = Class              #138          // scala/package$
  #140 = Utf8               Lscala/package$;
  #141 = NameAndType        #27:#140      // MODULE$:Lscala/package$;
  #142 = Fieldref           #139.#141     // scala/package$.MODULE$:Lscala/package$;
  #143 = Utf8               Left
  #144 = Utf8               ()Lscala/util/Left$;
  #145 = NameAndType        #143:#144     // Left:()Lscala/util/Left$;
  #146 = Methodref          #139.#145     // scala/package$.Left:()Lscala/util/Left$;
  #147 = Utf8               scala/util/Left$
  #148 = Class              #147          // scala/util/Left$
  #149 = Utf8               apply
  #150 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #151 = NameAndType        #149:#150     // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #152 = Methodref          #148.#151     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #153 = Utf8               Lorg/scalactic/source/Position;
  #154 = Utf8               (Ljava/lang/String;I)V
  #155 = Utf8               Right
  #156 = Utf8               ()Lscala/util/Right$;
  #157 = NameAndType        #155:#156     // Right:()Lscala/util/Right$;
  #158 = Methodref          #139.#157     // scala/package$.Right:()Lscala/util/Right$;
  #159 = Utf8               (I)V
  #160 = NameAndType        #60:#159      // "<init>":(I)V
  #161 = Methodref          #17.#160      // org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$2."<init>":(I)V
  #162 = Utf8               scala/util/Right$
  #163 = Class              #162          // scala/util/Right$
  #164 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #165 = NameAndType        #149:#164     // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #166 = Methodref          #163.#165     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #167 = Utf8               I
  #168 = Utf8               (Ljava/lang/String;Lscala/Function1;)V
  #169 = Utf8               (Ljava/lang/String;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;)V
  #170 = Utf8               failedCodeStackDepthFun
  #171 = Utf8               Lscala/Function1;
  #172 = Utf8               Signature
  #173 = Utf8               Code
  #174 = Utf8               LineNumberTable
  #175 = Utf8               LocalVariableTable
  #176 = Utf8               MethodParameters
  #177 = Utf8               StackMapTable
  #178 = Utf8               InnerClasses
  #179 = Utf8               SourceFile
  #180 = Utf8               RuntimeVisibleAnnotations
  #181 = Utf8               ScalaInlineInfo
  #182 = Utf8               ScalaSig
{
  private final java.lang.String testName;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.util.Either<org.scalactic.source.Position, scala.Function1<org.scalatest.exceptions.StackDepthException, java.lang.Object>> posOrStackDepthFun;
    descriptor: Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #22                          // Lscala/util/Either<Lorg/scalactic/source/Position;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;>;

  public org.scalatest.exceptions.DuplicateTestNameException severedAtStackDepth();
    descriptor: ()Lorg/scalatest/exceptions/DuplicateTestNameException;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: getstatic     #30                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         3: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #39                 // Method getStackTrace:()[Ljava/lang/StackTraceElement;
        10: checkcast     #41                 // class "[Ljava/lang/Object;"
        13: invokevirtual #45                 // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        16: aload_0
        17: invokevirtual #49                 // Method failedCodeStackDepth:()I
        20: invokevirtual #53                 // Method scala/collection/ArrayOps$.drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        23: checkcast     #55                 // class "[Ljava/lang/StackTraceElement;"
        26: astore_1
        27: new           #2                  // class org/scalatest/exceptions/DuplicateTestNameException
        30: dup
        31: aload_0
        32: getfield      #57                 // Field testName:Ljava/lang/String;
        35: aload_0
        36: getfield      #59                 // Field posOrStackDepthFun:Lscala/util/Either;
        39: invokespecial #63                 // Method "<init>":(Ljava/lang/String;Lscala/util/Either;)V
        42: astore_2
        43: aload_2
        44: aload_1
        45: invokevirtual #67                 // Method setStackTrace:([Ljava/lang/StackTraceElement;)V
        48: aload_2
        49: areturn
      LineNumberTable:
        line 88: 0
        line 89: 27
        line 90: 43
        line 91: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      22     1 truncated   [Ljava/lang/StackTraceElement;
           43       6     2     e   Lorg/scalatest/exceptions/DuplicateTestNameException;
            0      50     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/exceptions/DuplicateTestNameException
         4: ireturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;
            0       5     1 other   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      other                          final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #2                  // class org/scalatest/exceptions/DuplicateTestNameException
         6: ifeq          25
         9: aload_3
        10: checkcast     #2                  // class org/scalatest/exceptions/DuplicateTestNameException
        13: astore        4
        15: aload_0
        16: aload         4
        18: invokespecial #78                 // Method org/scalatest/exceptions/StackDepthException.equals:(Ljava/lang/Object;)Z
        21: istore_2
        22: goto          33
        25: goto          28
        28: iconst_0
        29: istore_2
        30: goto          33
        33: iload_2
        34: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/exceptions/DuplicateTestNameException, class java/lang/Object, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 106: 0
        line 107: 2
        line 108: 28
        line 106: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;
            0      35     1 other   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      other                          final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #83                 // Method org/scalatest/exceptions/StackDepthException.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;

  public java.lang.Throwable severedAtStackDepth();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #86                 // Method severedAtStackDepth:()Lorg/scalatest/exceptions/DuplicateTestNameException;
         4: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;

  public org.scalatest.exceptions.DuplicateTestNameException(java.lang.String, scala.util.Either<org.scalactic.source.Position, scala.Function1<org.scalatest.exceptions.StackDepthException, java.lang.Object>>);
    descriptor: (Ljava/lang/String;Lscala/util/Either;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #57                 // Field testName:Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #59                 // Field posOrStackDepthFun:Lscala/util/Either;
        10: aload_0
        11: new           #15                 // class org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$1
        14: dup
        15: aload_1
        16: invokespecial #90                 // Method org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$1."<init>":(Ljava/lang/String;)V
        19: getstatic     #95                 // Field scala/None$.MODULE$:Lscala/None$;
        22: aload_2
        23: invokespecial #98                 // Method org/scalatest/exceptions/StackDepthException."<init>":(Lscala/Function1;Lscala/Option;Lscala/util/Either;)V
        26: getstatic     #103                // Field org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
        29: invokevirtual #107                // Method org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
        32: iconst_1
        33: anewarray     #109                // class java/lang/String
        36: dup
        37: iconst_0
        38: ldc           #111                // String DuplicateTestNameException.this.testName
        40: aastore
        41: checkcast     #41                 // class "[Ljava/lang/Object;"
        44: checkcast     #113                // class "[Ljava/lang/String;"
        47: iconst_1
        48: anewarray     #80                 // class java/lang/Object
        51: dup
        52: iconst_0
        53: aload_1
        54: aastore
        55: checkcast     #41                 // class "[Ljava/lang/Object;"
        58: getstatic     #118                // Field org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
        61: invokevirtual #122                // Method org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
        64: new           #124                // class org/scalactic/source/Position
        67: dup
        68: ldc           #125                // String DuplicateTestNameException.scala
        70: ldc           #127                // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        72: bipush        47
        74: invokespecial #130                // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        77: invokevirtual #134                // Method org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
        80: return
      LineNumberTable:
        line 39: 0
        line 40: 5
        line 41: 10
        line 42: 11
        line 43: 19
        line 44: 22
        line 47: 26
        line 38: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;
            0      81     1 testName   Ljava/lang/String;
            0      81     2 posOrStackDepthFun   Lscala/util/Either;
    Signature: #87                          // (Ljava/lang/String;Lscala/util/Either<Lorg/scalactic/source/Position;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;>;)V
    MethodParameters:
      Name                           Flags
      testName                       final
      posOrStackDepthFun             final

  public org.scalatest.exceptions.DuplicateTestNameException(java.lang.String, org.scalactic.source.Position);
    descriptor: (Ljava/lang/String;Lorg/scalactic/source/Position;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #142                // Field scala/package$.MODULE$:Lscala/package$;
         5: invokevirtual #146                // Method scala/package$.Left:()Lscala/util/Left$;
         8: aload_2
         9: invokevirtual #152                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        12: invokespecial #63                 // Method "<init>":(Ljava/lang/String;Lscala/util/Either;)V
        15: return
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;
            0      16     1 message   Ljava/lang/String;
            0      16     2   pos   Lorg/scalactic/source/Position;
    MethodParameters:
      Name                           Flags
      message                        final
      pos                            final

  public org.scalatest.exceptions.DuplicateTestNameException(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #142                // Field scala/package$.MODULE$:Lscala/package$;
         5: invokevirtual #158                // Method scala/package$.Right:()Lscala/util/Right$;
         8: new           #17                 // class org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$2
        11: dup
        12: iload_2
        13: invokespecial #161                // Method org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$2."<init>":(I)V
        16: invokevirtual #166                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        19: invokespecial #63                 // Method "<init>":(Ljava/lang/String;Lscala/util/Either;)V
        22: return
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;
            0      23     1 testName   Ljava/lang/String;
            0      23     2 failedCodeStackDepth   I
    MethodParameters:
      Name                           Flags
      testName                       final
      failedCodeStackDepth           final

  public org.scalatest.exceptions.DuplicateTestNameException(java.lang.String, scala.Function1<org.scalatest.exceptions.StackDepthException, java.lang.Object>);
    descriptor: (Ljava/lang/String;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #142                // Field scala/package$.MODULE$:Lscala/package$;
         5: invokevirtual #158                // Method scala/package$.Right:()Lscala/util/Right$;
         8: aload_2
         9: invokevirtual #166                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        12: invokespecial #63                 // Method "<init>":(Ljava/lang/String;Lscala/util/Either;)V
        15: return
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/scalatest/exceptions/DuplicateTestNameException;
            0      16     1 testName   Ljava/lang/String;
            0      16     2 failedCodeStackDepthFun   Lscala/Function1;
    Signature: #169                         // (Ljava/lang/String;Lscala/Function1<Lorg/scalatest/exceptions/StackDepthException;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      testName                       final
      failedCodeStackDepthFun        final
}
InnerClasses:
  public static #13= #10 of #12;          // RequirementsHelper=class org/scalactic/Requirements$RequirementsHelper of class org/scalactic/Requirements
  public final #15;                       // class org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$1
  public final #17;                       // class org/scalatest/exceptions/DuplicateTestNameException$$anonfun$$lessinit$greater$2
SourceFile: "DuplicateTestNameException.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t4Aa\u0003\u0007\u0001\'!A\u0001\u0004\u0001B\u0001B\u0003%\u0011\u0004\u0003\u0005\'\u0001\t\u0005\t\u0015!\u0003(\u0011\u0015y\u0004\u0001\"\u0001A\u0011\u0015y\u0004\u0001\"\u0001E\u0011\u0015y\u0004\u0001\"\u0001J\u0011\u0015y\u0004\u0001\"\u0001N\u0011\u0015\t\u0006\u0001\"\u0001S\u0011\u0015\u0019\u0006\u0001\"\u0011U\u0011\u0015i\u0006\u0001\"\u0011_\u0011\u0015\u0001\u0007\u0001\"\u0011b\u0005i!U\u000f\u001d7jG\u0006$X\rV3ti:\u000bW.Z#yG\u0016\u0004H/[8o\u0015\tia\"\u0001\u0006fq\u000e,\u0007\u000f^5p]NT!a\u0004\t\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\t\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0005\u0001!\u0002CA\u000b\u0017\u001b\u0005a\u0011BA\f\r\u0005M\u0019F/Y2l\t\u0016\u0004H\u000f[#yG\u0016\u0004H/[8o\u0003!!Xm\u001d;OC6,\u0007C\u0001\u000e$\u001d\tY\u0012\u0005\u0005\u0002\u001d?5\tQD\u0003\u0002\u001f%\u00051AH]8pizR\u0011\u0001I\u0001\u0006g\u000e\fG.Y\u0005\u0003E}\ta\u0001\u0015:fI\u00164\u0017B\u0001\u0013&\u0005\u0019\u0019FO]5oO*\u0011!eH\u0001\u0013a>\u001cxJ]*uC\u000e\\G)\u001a9uQ\u001a+h\u000e\u0005\u0003)[ABdBA\u0015,\u001d\ta\"&C\u0001!\u0013\tas$A\u0004qC\u000e\\\u0017mZ3\n\u00059z#AB#ji\",\'O\u0003\u0002-?A\u0011\u0011GN\u0007\u0002e)\u00111\u0007N\u0001\u0007g>,(oY3\u000b\u0005U\u0002\u0012!C:dC2\f7\r^5d\u0013\t9$G\u0001\u0005Q_NLG/[8o!\u0011I$\b\u0006\u001f\u000e\u0003}I!aO\u0010\u0003\u0013\u0019+hn\u0019;j_:\f\u0004CA\u001d>\u0013\tqtDA\u0002J]R\fa\u0001P5oSRtDcA!C\u0007B\u0011Q\u0003\u0001\u0005\u00061\r\u0001\r!\u0007\u0005\u0006M\r\u0001\ra\n\u000b\u0004\u0003\u0016;\u0005\"\u0002$\u0005\u0001\u0004I\u0012aB7fgN\fw-\u001a\u0005\u0006\u0011\u0012\u0001\r\u0001M\u0001\u0004a>\u001cHcA!K\u0017\")\u0001$\u0002a\u00013!)A*\u0002a\u0001y\u0005!b-Y5mK\u0012\u001cu\u000eZ3Ti\u0006\u001c7\u000eR3qi\"$2!\u0011(P\u0011\u0015Ab\u00011\u0001\u001a\u0011\u0015\u0001f\u00011\u00019\u0003]1\u0017-\u001b7fI\u000e{G-Z*uC\u000e\\G)\u001a9uQ\u001a+h.A\ntKZ,\'/\u001a3BiN#\u0018mY6EKB$\b.F\u0001B\u0003!\u0019\u0017M\\#rk\u0006dGCA+Y!\tId+\u0003\u0002X?\t9!i\\8mK\u0006t\u0007\"B-\t\u0001\u0004Q\u0016!B8uQ\u0016\u0014\bCA\u001d\\\u0013\tavDA\u0002B]f\fa!Z9vC2\u001cHCA+`\u0011\u0015I\u0016\u00021\u0001[\u0003!A\u0017m\u001d5D_\u0012,G#\u0001\u001f"
    )
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 00 00 09 00 3C 00 9A 00 00 3C 00 87 00 00 3C
   00 A8 00 00 3C 00 3D 00 00 48 00 49 00 00 4C 00
   49 00 00 51 00 2F 00 00 17 00 54 00 00 17 00 18
   00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
