Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/Accumulation$Accumulatable.class
  Last modified May 29, 2022; size 1001 bytes
  SHA-256 checksum f40c81d0c7e972734f3196b8e5ff57068ca07b5303ef655921ddda3b7e7a925b
  Compiled from "Accumulation.scala"
public interface org.scalactic.Accumulation$Accumulatable<G extends java.lang.Object, ERR extends java.lang.Object, EVERY extends org.scalactic.Every<java.lang.Object>>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalactic/Accumulation$Accumulatable
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 5
Constant pool:
   #1 = Utf8               org/scalactic/Accumulation$Accumulatable
   #2 = Class              #1             // org/scalactic/Accumulation$Accumulatable
   #3 = Utf8               <G:Ljava/lang/Object;ERR:Ljava/lang/Object;EVERY:Lorg/scalactic/Every<Ljava/lang/Object;>;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               Accumulation.scala
   #7 = Utf8               org/scalactic/Accumulation
   #8 = Class              #7             // org/scalactic/Accumulation
   #9 = Utf8               Accumulatable
  #10 = Utf8               zip
  #11 = Utf8               (Lorg/scalactic/Or;)Lorg/scalactic/Or;
  #12 = Utf8               <H:Ljava/lang/Object;OTHERERR:Ljava/lang/Object;OTHEREVERY:Lorg/scalactic/Every<Ljava/lang/Object;>;>(Lorg/scalactic/Or<TH;TOTHEREVERY;>;)Lorg/scalactic/Or<Lscala/Tuple2<TG;TH;>;Lorg/scalactic/Every<TOTHERERR;>;>;
  #13 = Utf8               other
  #14 = Utf8               when
  #15 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/scalactic/Or;
  #16 = Utf8               <OTHERERR:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lscala/Function1<TG;Lorg/scalactic/Validation<TOTHERERR;>;>;>;)Lorg/scalactic/Or<TG;Lorg/scalactic/Every<TOTHERERR;>;>;
  #17 = Utf8               validations
  #18 = Utf8               Signature
  #19 = Utf8               MethodParameters
  #20 = Utf8               InnerClasses
  #21 = Utf8               SourceFile
  #22 = Utf8               ScalaInlineInfo
  #23 = Utf8               Scala
{
  public abstract <H extends java.lang.Object, OTHERERR extends java.lang.Object, OTHEREVERY extends org.scalactic.Every<java.lang.Object>> org.scalactic.Or<scala.Tuple2<G, H>, org.scalactic.Every<OTHERERR>> zip(org.scalactic.Or<H, OTHEREVERY>);
    descriptor: (Lorg/scalactic/Or;)Lorg/scalactic/Or;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #12                          // <H:Ljava/lang/Object;OTHERERR:Ljava/lang/Object;OTHEREVERY:Lorg/scalactic/Every<Ljava/lang/Object;>;>(Lorg/scalactic/Or<TH;TOTHEREVERY;>;)Lorg/scalactic/Or<Lscala/Tuple2<TG;TH;>;Lorg/scalactic/Every<TOTHERERR;>;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public abstract <OTHERERR extends java.lang.Object> org.scalactic.Or<G, org.scalactic.Every<OTHERERR>> when(scala.collection.immutable.Seq<scala.Function1<G, org.scalactic.Validation<OTHERERR>>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lorg/scalactic/Or;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #16                          // <OTHERERR:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lscala/Function1<TG;Lorg/scalactic/Validation<TOTHERERR;>;>;>;)Lorg/scalactic/Or<TG;Lorg/scalactic/Every<TOTHERERR;>;>;
    MethodParameters:
      Name                           Flags
      validations                    final
}
InnerClasses:
  public static #9= #2 of #8;             // Accumulatable=class org/scalactic/Accumulation$Accumulatable of class org/scalactic/Accumulation
Signature: #3                           // <G:Ljava/lang/Object;ERR:Ljava/lang/Object;EVERY:Lorg/scalactic/Every<Ljava/lang/Object;>;>Ljava/lang/Object;
SourceFile: "Accumulation.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 00 00 02 00 0E 00 0F 00 00 0A 00 0B 00
  Scala: length = 0x0 (unknown attribute)

