Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Map.class
  Last modified May 29, 2022; size 21347 bytes
  SHA-256 checksum 9eb06343a8fb46e10750ffade00b1a9a70b8bd41fdaeaf2a835b7e83b0d3613d
  Compiled from "Map.scala"
public final class org.sireum.Map<K extends java.lang.Object, T extends java.lang.Object> extends java.lang.Object implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Map
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 47, attributes: 7
Constant pool:
    #1 = Utf8               org/sireum/Map
    #2 = Class              #1            // org/sireum/Map
    #3 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/DatatypeSig
    #7 = Class              #6            // org/sireum/DatatypeSig
    #8 = Utf8               Map.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\r]u!\u0002\u001b6\u0011\u0003Qd!\u0002\u001f6\u0011\u0003i\u0004\"\u0002#\u0002\t\u0003)\u0005\"\u0002$\u0002\t\u00039\u0005b\u0002B2\u0003\u0011\u0005!Q\r\u0005\b\u0003O\u000bA\u0011\u0001B;\u0011\u001d\u0011\t*\u0001C\u0001\u0005\';qAa+\u0002\u0011\u0003\u0011iKB\u0004\u00032\u0006A\tAa-\t\r\u0011CA\u0011\u0001B[\u0011\u001d\tY\u0005\u0003C\u0001\u0005oCqAa3\t\t\u0003\u0011i\rC\u0004\u0003f\"!\tAa:\t\u000f\tu\b\u0002\"\u0001\u0003\u0000\"91q\u0003\u0005\u0005\u0002\re\u0001bBB\u001a\u0011\u0011\u00051Q\u0007\u0005\b\u0007\u001bBA\u0011AB(\u0011\u001d\t\t\"\u0001C\u0001\u0007OBqaa\u001f\u0002\t\u0003\u0019iH\u0002\u0003=k\tQ\u0005\u0002C(\u0014\u0005\u0003\u0005\u000b\u0011\u0002)\t\u000b\u0011\u001bB\u0011A6\t\r9\u001c\u0002\u0015!\u0003Q\u0011\u0015y7\u0003\"\u0001q\u0011\u0015\t8\u0003\"\u0001q\u0011\u0015\u00118\u0003\"\u0011t\u0011!a8\u0003#b\u0001\n\u0003j\bbBA\u0002\'\u0011\u0005\u0013Q\u0001\u0005\b\u0003#\u0019B\u0011AA\n\u0011%\t9bEI\u0001\n\u0003\tI\u0002\u0003\u0006\u00020MA)\u0019!C!\u0003cAq!a\u0013\u0014\t\u0003\ti\u0005C\u0004\u0002nM!\t!a\u001c\t\u000f\u0005m4\u0003\"\u0001\u0002~!9\u00111Q\n\u0005\u0002\u0005\u0015\u0005bBAK\'\u0011\u0005\u0011q\u0013\u0005\b\u0003;\u001bB\u0011AAP\u0011\u001d\t9k\u0005C\u0001\u0003SCq!a0\u0014\t\u0003\t\t\rC\u0004\u0002PN!\t!!5\t\u000f\u0005\u00058\u0003\"\u0001\u0002d\"9\u00111^\n\u0005\u0002\u00055\bbBA{\'\u0011\u0005\u0011q\u001f\u0005\b\u0005\u0007\u0019B\u0011\u0001B\u0003\u0011\u001d\u0011\u0019b\u0005C\u0001\u0005+AqAa\u0007\u0014\t\u0003\u0011i\u0002C\u0004\u0003*M!\tAa\u000b\t\u000f\t=2\u0003\"\u0001\u0003,!9!1G\n\u0005\u0002\tU\u0002b\u0002B\u001d\'\u0011\u0005#1\b\u0005\b\u0005\u0007\u001aB\u0011\tB\u001b\u0011\u001d\u00119e\u0005C\u0001\u0005\u0013\n1!T1q\u0015\t1t\'\u0001\u0004tSJ,W/\u001c\u0006\u0002q\u0005\u0019qN]4\u0004\u0001A\u00111(A\u0007\u0002k\t\u0019Q*\u00199\u0014\u0005\u0005q\u0004CA C\u001b\u0005\u0001%\"A!\u0002\u000bM\u001c\u0017\r\\1\n\u0005\r\u0003%AB!osJ+g-\u0001\u0004=S:LGO\u0010\u000b\u0002u\u0005)Q-\u001c9usV)\u0001Ja\u0017\u0003`U\t\u0011\n\u0005\u0004<\'\te#QL\u000b\u0004\u0017~K7cA\n?\u0019B\u00111(T\u0005\u0003\u001dV\u00121\u0002R1uCRL\b/Z*jO\u0006IqlX3oiJLWm\u001d\t\u0004#RSfBA\u001eS\u0013\t\u0019V\'A\u0004qC\u000e\\\u0017mZ3\n\u0005U3&aA%T5&\u0011q\u000b\u0017\u0002\r!\u0006\u001c7.Y4f)J\f\u0017\u000e\u001e\u0006\u00033V\n\u0011\u0002J5oi\u0016\u0014h.\u00197\u0011\t}ZV\f[\u0005\u00039\u0002\u0013a\u0001V;qY\u0016\u0014\u0004C\u00010`\u0019\u0001!Q\u0001Y\nC\u0002\u0005\u0014\u0011aS\t\u0003E\u0016\u0004\"aP2\n\u0005\u0011\u0004%a\u0002(pi\"Lgn\u001a\t\u0003\u007f\u0019L!a\u001a!\u0003\u0007\u0005s\u0017\u0010\u0005\u0002_S\u0012)!n\u0005b\u0001C\n\tA\u000b\u0006\u0002m[B!1hE/i\u0011\u0015yU\u00031\u0001Q\u0003!yVM\u001c;sS\u0016\u001c\u0018aB3oiJLWm]\u000b\u0002!\u0006Qq-\u001a;F]R\u0014\u0018.Z:\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012\u0001\u001e\t\u0003kjl\u0011A\u001e\u0006\u0003ob\fA\u0001\\1oO*\t\u00110\u0001\u0003kCZ\f\u0017BA>w\u0005\u0019\u0019FO]5oO\u0006A\u0001.Y:i\u0007>$W-F\u0001\u007f!\tyt0C\u0002\u0002\u0002\u0001\u00131!\u00138u\u0003\u0019)\u0017/^1mgR!\u0011qAA\u0007!\ry\u0014\u0011B\u0005\u0004\u0003\u0017\u0001%a\u0002\"p_2,\u0017M\u001c\u0005\u0007\u0003\u001fY\u0002\u0019A3\u0002\u0003=\fQ!\u00199qYf$2\u0001\\A\u000b\u0011\u001dyG\u0004%AA\u0002A\u000bq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0003\u00037Q3\u0001UA\u000fW\t\ty\u0002\u0005\u0003\u0002\"\u0005-RBAA\u0012\u0015\u0011\t)#a\n\u0002\u0013Ut7\r[3dW\u0016$\'bAA\u0015\u0001\u0006Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u00055\u00121\u0005\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017\u0001\u0003\u0013d_:$XM\u001c;\u0016\u0005\u0005M\u0002CBA\u001b\u0003\u0007\nIE\u0004\u0003\u00028\u0005\u0005c\u0002BA\u001d\u0003\u007fi!!a\u000f\u000b\u0007\u0005u\u0012(\u0001\u0004=e>|GOP\u0005\u0002\u0003&\u00111\u000bQ\u0005\u0005\u0003\u000b\n9EA\u0002TKFT!a\u0015!\u0011\t}ZF/Z\u0001\u000bk:L\u0017/^3LKf\u001cXCAA(!\u0011\t\t&a\u0018\u000f\t\u0005M\u0013q\u000b\t\u0004w\u0005U#BA*6\u0013\u0011\tI&a\u0017\u0002\u0011\r{g\u000e\u001e:bGRL1!!\u00186\u0005!\u0019wN\u001c;sC\u000e$\u0018\u0002BA1\u0003G\u0012\u0011\"\u00138wCJL\u0017M\u001c;\u000b\t\u0005e\u00131\f\u0015\u0004?\u0005\u001d\u0004cA\u001e\u0002j%\u0019\u00111N\u001b\u0003\tM\u0004XmY\u0001\u0005W\u0016L8/\u0006\u0002\u0002rA\u0019\u0011\u000bV/)\u0007\u0001\n)\bE\u0002<\u0003oJ1!!\u001f6\u0005\u0011\u0001XO]3\u0002\rY\fG.^3t+\t\ty\bE\u0002R)\"D3!IA;\u0003\u0019YW-_*fiV\u0011\u0011q\u0011\t\u0005w\u0005%U,C\u0002\u0002\fV\u00121aU3uQ\r\u0011\u0013q\u0012\t\u0004w\u0005E\u0015bAAJk\tQ1\u000f\u001e:jGR\u0004XO]3\u0002\u0011Y\fG.^3TKR,\"!!\'\u0011\tm\nI\t\u001b\u0015\u0004G\u0005=\u0015!\u0002\u0013qYV\u001cHc\u00017\u0002\"\"1\u00111\u0015\u0013A\u0002i\u000b\u0011\u0001\u001d\u0015\u0004I\u0005U\u0014A\u0003\u0013qYV\u001cH\u0005\u001d7vgV!\u00111VA])\ra\u0017Q\u0016\u0005\b\u0003_+\u0003\u0019AAY\u0003\rYgo\u001d\t\u0007w\u0005M\u0016q\u0017.\n\u0007\u0005UVG\u0001\u0002J\'B\u0019a,!/\u0005\r\u0005mVE1\u0001b\u0005\u0005I\u0005fA\u0013\u0002v\u0005\u0019q-\u001a;\u0015\t\u0005\r\u0017\u0011\u001a\t\u0005w\u0005\u0015\u0007.C\u0002\u0002HV\u0012aa\u00149uS>t\u0007BBAfM\u0001\u0007Q,A\u0002lKfD3AJA;\u0003%9W\r^(s\u000b2\u001cX\rF\u0003i\u0003\'\f)\u000e\u0003\u0004\u0002L\u001e\u0002\r!\u0018\u0005\t\u0003/<C\u00111\u0001\u0002Z\u00069A-\u001a4bk2$\b\u0003B \u0002\\\"L1!!8A\u0005!a$-\u001f8b[\u0016t\u0004fA\u0014\u0002v\u0005qq-\u001a;Pe\u0016c7/Z#bO\u0016\u0014H#\u00025\u0002f\u0006\u001d\bBBAfQ\u0001\u0007Q\f\u0003\u0004\u0002X\"\u0002\r\u0001\u001b\u0015\u0004Q\u0005U\u0014!B3oiJLH\u0003BAx\u0003c\u0004BaOAc5\"1\u00111Z\u0015A\u0002uC3!KA;\u0003\u001dIg\u000eZ3y\u001f\u001a$B!!?\u0002\u0000B\u00191(a?\n\u0007\u0005uXGA\u0001[\u0011\u0019\tYM\u000ba\u0001;\"\u001a!&!\u001e\u0002\u0019\u0011j\u0017N\\;tI5Lg.^:\u0016\t\t\u001d!q\u0002\u000b\u0004Y\n%\u0001bBA7W\u0001\u0007!1\u0002\t\u0007w\u0005M&QB/\u0011\u0007y\u0013y\u0001\u0002\u0004\u0002<.\u0012\r!\u0019\u0015\u0004W\u0005U\u0014A\u0002\u0013nS:,8\u000fF\u0002m\u0005/Aa!a)-\u0001\u0004Q\u0006f\u0001\u0017\u0002v\u0005A1m\u001c8uC&t7\u000f\u0006\u0003\u0003 \t\u0015\u0002cA\u001e\u0003\"%\u0019!1E\u001b\u0003\u0003\tCa!a3.\u0001\u0004i\u0006fA\u0017\u0002v\u00059\u0011n]#naRLXC\u0001B\u0010Q\rq\u0013QO\u0001\t]>tW)\u001c9us\"\u001aq&!\u001e\u0002\tML\'0Z\u000b\u0003\u0003sD3\u0001MA;\u0003\u0019\u0019HO]5oOV\u0011!Q\b\t\u0004w\t}\u0012BA>6Q\r\t\u0014QO\u0001\u0005Q\u0006\u001c\b\u000eK\u00023\u0003k\nq![:FcV\fG\u000e\u0006\u0003\u0003 \t-\u0003B\u0002B\'g\u0001\u0007A.A\u0003pi\",\'\u000fK\u00024\u0003kB3a\u0005B*!\rY$QK\u0005\u0004\u0005/*$\u0001\u00033bi\u0006$\u0018\u0010]3\u0011\u0007y\u0013Y\u0006B\u0003a\u0007\t\u0007\u0011\rE\u0002_\u0005?\"QA[\u0002C\u0002\u0005D3aAAH\u0003\tyg-\u0006\u0004\u0003h\t5$\u0011O\u000b\u0003\u0005S\u0002baO\n\u0003l\t=\u0004c\u00010\u0003n\u0011)\u0001\r\u0002b\u0001CB\u0019aL!\u001d\u0005\u000b)$!\u0019A1)\u0007\u0011\ty)\u0006\u0005\u0003x\tu$\u0011\u0011BF)\u0011\u0011IHa!\u0011\rm\u001a\"1\u0010B@!\rq&Q\u0010\u0003\u0006A\u0016\u0011\r!\u0019\t\u0004=\n\u0005E!\u00026\u0006\u0005\u0004\t\u0007b\u0002BC\u000b\u0001\u0007!qQ\u0001\u0002gB91(a-\u0003\n\n5\u0005c\u00010\u0003\f\u00121\u00111X\u0003C\u0002\u0005\u0004baP.\u0003|\t}\u0004fA\u0003\u0002\u0010\u0006IQM\u001c;sS\u0016\u001cxJZ\u000b\u0007\u0005+\u0013iJ!)\u0015\t\t]%1\u0015\t\u0005#R\u0013I\n\u0005\u0004@7\nm%q\u0014\t\u0004=\nuE!\u00021\u0007\u0005\u0004\t\u0007c\u00010\u0003\"\u0012)!N\u0002b\u0001C\"9!Q\u0015\u0004A\u0002\t\u001d\u0016!A7\u0011\rm\u001a\"1\u0014BPQ\r1\u0011qR\u0001\b\u000b:$(/[3t!\r\u0011y\u000bC\u0007\u0002\u0003\t9QI\u001c;sS\u0016\u001c8C\u0001\u0005?)\t\u0011i+\u0006\u0004\u0003:\n\r\'q\u0019\u000b\u0005\u0005?\u0011Y\f\u0003\u0004p\u0015\u0001\u0007!Q\u0018\t\u0005#R\u0013y\f\u0005\u0004@7\n\u0005\'Q\u0019\t\u0004=\n\rG!\u00021\u000b\u0005\u0004\t\u0007c\u00010\u0003H\u0012)!N\u0003b\u0001C\"\u001a!\"a$\u0002\u000f\r|g\u000e^1j]V1!q\u001aBm\u0005;$bAa\b\u0003R\n}\u0007BB8\f\u0001\u0004\u0011\u0019\u000e\u0005\u0003R)\nU\u0007CB \\\u0005/\u0014Y\u000eE\u0002_\u00053$Q\u0001Y\u0006C\u0002\u0005\u00042A\u0018Bo\t\u0015Q7B1\u0001b\u0011\u001d\u0011\to\u0003a\u0001\u0005+\f!a\u001b<)\u0007-\ty)\u0001\u0006d_:$\u0018-\u001b8LKf,bA!;\u0003t\n]HC\u0002B\u0010\u0005W\u0014I\u0010\u0003\u0004p\u0019\u0001\u0007!Q\u001e\t\u0005#R\u0013y\u000f\u0005\u0004@7\nE(Q\u001f\t\u0004=\nMH!\u00021\r\u0005\u0004\t\u0007c\u00010\u0003x\u0012)!\u000e\u0004b\u0001C\"9\u00111\u001a\u0007A\u0002\tE\bf\u0001\u0007\u0002\u0010\u0006a1m\u001c8uC&tg+\u00197vKV11\u0011AB\u0006\u0007\u001f!bAa\b\u0004\u0004\rE\u0001BB8\u000e\u0001\u0004\u0019)\u0001\u0005\u0003R)\u000e\u001d\u0001CB \\\u0007\u0013\u0019i\u0001E\u0002_\u0007\u0017!Q\u0001Y\u0007C\u0002\u0005\u00042AXB\b\t\u0015QWB1\u0001b\u0011\u001d\u0019\u0019\"\u0004a\u0001\u0007\u001b\tQA^1mk\u0016D3!DAH\u00039YW-_%oI\u0016DxJ\u001a$s_6,baa\u0007\u0004&\r%B\u0003CA}\u0007;\u0019Yc!\f\t\r=t\u0001\u0019AB\u0010!\u0011\tFk!\t\u0011\r}Z61EB\u0014!\rq6Q\u0005\u0003\u0006A:\u0011\r!\u0019\t\u0004=\u000e%B!\u00026\u000f\u0005\u0004\t\u0007bBAf\u001d\u0001\u000711\u0005\u0005\b\u0007_q\u0001\u0019AA}\u0003\u00111\'o\\7)\u00079\ty)\u0001\twC2,X-\u00138eKb|eM\u0012:p[V11qGB!\u0007\u000b\"\u0002\"!?\u0004:\r\u001d3\u0011\n\u0005\u0007_>\u0001\raa\u000f\u0011\tE#6Q\b\t\u0007\u007fm\u001byda\u0011\u0011\u0007y\u001b\t\u0005B\u0003a\u001f\t\u0007\u0011\rE\u0002_\u0007\u000b\"QA[\bC\u0002\u0005Dqaa\u0005\u0010\u0001\u0004\u0019\u0019\u0005C\u0004\u00040=\u0001\r!!?)\u0007=\ty)A\u0006j]\u0012,\u0007p\u00144Ge>lWCBB)\u00077\u001ay\u0006\u0006\u0005\u0002z\u000eM3\u0011MB2\u0011\u0019y\u0007\u00031\u0001\u0004VA!\u0011\u000bVB,!\u0019y4l!\u0017\u0004^A\u0019ala\u0017\u0005\u000b\u0001\u0004\"\u0019A1\u0011\u0007y\u001by\u0006B\u0003k!\t\u0007\u0011\rC\u0004\u0003bB\u0001\raa\u0016\t\u000f\r=\u0002\u00031\u0001\u0002z\"\u001a\u0001#a$\u0016\r\r%4qNB:)\u0011\u0019Yg!\u001e\u0011\rm\u001a2QNB9!\rq6q\u000e\u0003\u0006AF\u0011\r!\u0019\t\u0004=\u000eMD!\u00026\u0012\u0005\u0004\t\u0007BB8\u0012\u0001\u0004\u00199\b\u0005\u0003R)\u000ee\u0004CB \\\u0007[\u001a\t(A\u0004v]\u0006\u0004\b\u000f\\=\u0016\r\r}4QRBI)\u0011\u0019\tia%\u0011\u000b}\u001a\u0019ia\"\n\u0007\r\u0015\u0005I\u0001\u0003T_6,\u0007\u0003B)U\u0007\u0013\u0003baP.\u0004\f\u000e=\u0005c\u00010\u0004\u000e\u0012)\u0001M\u0005b\u0001CB\u0019al!%\u0005\u000b)\u0014\"\u0019A1\t\u000f\u0005=!\u00031\u0001\u0004\u0016B11hEBF\u0007\u001f\u0003
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #18 = Class              #17           // org/sireum/$internal/PackageTrait$ISZ$
   #19 = Utf8               org/sireum/$internal/PackageTrait
   #20 = Class              #19           // org/sireum/$internal/PackageTrait
   #21 = Utf8               ISZ$
   #22 = Utf8               org/sireum/Map$Entries$
   #23 = Class              #22           // org/sireum/Map$Entries$
   #24 = Utf8               Entries$
   #25 = Utf8               org/sireum/ST$Any
   #26 = Class              #25           // org/sireum/ST$Any
   #27 = Utf8               org/sireum/ST
   #28 = Class              #27           // org/sireum/ST
   #29 = Utf8               Any
   #30 = Utf8               org/sireum/ST$Any$
   #31 = Class              #30           // org/sireum/ST$Any$
   #32 = Utf8               Any$
   #33 = Utf8               org/sireum/ST$Arg
   #34 = Class              #33           // org/sireum/ST$Arg
   #35 = Utf8               Arg
   #36 = Utf8               org/sireum/ST$Templ
   #37 = Class              #36           // org/sireum/ST$Templ
   #38 = Utf8               Templ
   #39 = Utf8               org/sireum/ST$Templ$
   #40 = Class              #39           // org/sireum/ST$Templ$
   #41 = Utf8               Templ$
   #42 = Utf8               org/sireum/Z$$String$
   #43 = Class              #42           // org/sireum/Z$$String$
   #44 = Utf8               org/sireum/Z
   #45 = Class              #44           // org/sireum/Z
   #46 = Utf8               $String$
   #47 = Utf8               org/sireum/contract$Contract$
   #48 = Class              #47           // org/sireum/contract$Contract$
   #49 = Utf8               org/sireum/contract
   #50 = Class              #49           // org/sireum/contract
   #51 = Utf8               Contract$
   #52 = Utf8               org/sireum/contract$Contract$Invariant
   #53 = Class              #52           // org/sireum/contract$Contract$Invariant
   #54 = Utf8               Invariant
   #55 = Utf8               org/sireum/package$$Arrow$
   #56 = Class              #55           // org/sireum/package$$Arrow$
   #57 = Utf8               org/sireum/package
   #58 = Class              #57           // org/sireum/package
   #59 = Utf8               $Arrow$
   #60 = Utf8               hashCode
   #61 = Utf8               I
   #62 = Utf8               $content
   #63 = Utf8               Lscala/collection/immutable/Seq;
   #64 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #65 = Utf8               _entries
   #66 = Utf8               Lorg/sireum/IS;
   #67 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;
   #68 = Utf8               bitmap$0
   #69 = Utf8               B
   #70 = Utf8               unapply
   #71 = Utf8               (Lorg/sireum/Map;)Lscala/Some;
   #72 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TT;>;)Lscala/Some<Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;>;
   #73 = Utf8               o
   #74 = Utf8               org/sireum/Map$
   #75 = Class              #74           // org/sireum/Map$
   #76 = Utf8               MODULE$
   #77 = Utf8               Lorg/sireum/Map$;
   #78 = NameAndType        #76:#77       // MODULE$:Lorg/sireum/Map$;
   #79 = Fieldref           #75.#78       // org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
   #80 = NameAndType        #70:#71       // unapply:(Lorg/sireum/Map;)Lscala/Some;
   #81 = Methodref          #75.#80       // org/sireum/Map$.unapply:(Lorg/sireum/Map;)Lscala/Some;
   #82 = Utf8               Lorg/sireum/Map;
   #83 = Utf8               entriesOf
   #84 = Utf8               (Lorg/sireum/Map;)Lorg/sireum/IS;
   #85 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TT;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;
   #86 = Utf8               m
   #87 = NameAndType        #83:#84       // entriesOf:(Lorg/sireum/Map;)Lorg/sireum/IS;
   #88 = Methodref          #75.#87       // org/sireum/Map$.entriesOf:(Lorg/sireum/Map;)Lorg/sireum/IS;
   #89 = Utf8               of
   #90 = Utf8               ()Lorg/sireum/Map;
   #91 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/Map<TK;TT;>;
   #92 = NameAndType        #89:#90       // of:()Lorg/sireum/Map;
   #93 = Methodref          #75.#92       // org/sireum/Map$.of:()Lorg/sireum/Map;
   #94 = Utf8               empty
   #95 = NameAndType        #94:#90       // empty:()Lorg/sireum/Map;
   #96 = Methodref          #75.#95       // org/sireum/Map$.empty:()Lorg/sireum/Map;
   #97 = Utf8               $cannotMixImmutableAndMutable
   #98 = Utf8               ()Lscala/runtime/Nothing$;
   #99 = Utf8               org/sireum/Immutable
  #100 = Class              #99           // org/sireum/Immutable
  #101 = Utf8               $cannotMixImmutableAndMutable$
  #102 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #103 = NameAndType        #101:#102     // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #104 = InterfaceMethodref #100.#103     // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #105 = Utf8               this
  #106 = Utf8               $hasEquals
  #107 = Utf8               ()Z
  #108 = Utf8               $hasEquals$
  #109 = Utf8               (Lorg/sireum/Immutable;)Z
  #110 = NameAndType        #108:#109     // $hasEquals$:(Lorg/sireum/Immutable;)Z
  #111 = InterfaceMethodref #100.#110     // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
  #112 = Utf8               $hasString
  #113 = Utf8               $hasString$
  #114 = NameAndType        #113:#109     // $hasString$:(Lorg/sireum/Immutable;)Z
  #115 = InterfaceMethodref #100.#114     // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
  #116 = Utf8               $clone
  #117 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
  #118 = Utf8               org/sireum/$internal/ImmutableMarker
  #119 = Class              #118          // org/sireum/$internal/ImmutableMarker
  #120 = Utf8               $clone$
  #121 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #122 = NameAndType        #120:#121     // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #123 = InterfaceMethodref #119.#122     // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #124 = Utf8               entries
  #125 = Utf8               ()Lorg/sireum/IS;
  #126 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;
  #127 = NameAndType        #65:#66       // _entries:Lorg/sireum/IS;
  #128 = Fieldref           #2.#127       // org/sireum/Map._entries:Lorg/sireum/IS;
  #129 = Utf8               getEntries
  #130 = Utf8               toString
  #131 = Utf8               ()Ljava/lang/String;
  #132 = Utf8               string
  #133 = NameAndType        #132:#131     // string:()Ljava/lang/String;
  #134 = Methodref          #2.#133       // org/sireum/Map.string:()Ljava/lang/String;
  #135 = Utf8               hashCode$lzycompute
  #136 = Utf8               ()I
  #137 = NameAndType        #68:#69       // bitmap$0:B
  #138 = Fieldref           #2.#137       // org/sireum/Map.bitmap$0:B
  #139 = Utf8               hash
  #140 = Utf8               ()Lorg/sireum/Z;
  #141 = NameAndType        #139:#140     // hash:()Lorg/sireum/Z;
  #142 = Methodref          #2.#141       // org/sireum/Map.hash:()Lorg/sireum/Z;
  #143 = NameAndType        #60:#136      // hashCode:()I
  #144 = Methodref          #5.#143       // java/lang/Object.hashCode:()I
  #145 = NameAndType        #60:#61       // hashCode:I
  #146 = Fieldref           #2.#145       // org/sireum/Map.hashCode:I
  #147 = Utf8               java/lang/Throwable
  #148 = Class              #147          // java/lang/Throwable
  #149 = NameAndType        #135:#136     // hashCode$lzycompute:()I
  #150 = Methodref          #2.#149       // org/sireum/Map.hashCode$lzycompute:()I
  #151 = Utf8               equals
  #152 = Utf8               (Ljava/lang/Object;)Z
  #153 = Utf8               org/sireum/B$
  #154 = Class              #153          // org/sireum/B$
  #155 = Utf8               Lorg/sireum/B$;
  #156 = NameAndType        #76:#155      // MODULE$:Lorg/sireum/B$;
  #157 = Fieldref           #154.#156     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #158 = Utf8               isEqual
  #159 = Utf8               (Lorg/sireum/Map;)Z
  #160 = NameAndType        #158:#159     // isEqual:(Lorg/sireum/Map;)Z
  #161 = Methodref          #2.#160       // org/sireum/Map.isEqual:(Lorg/sireum/Map;)Z
  #162 = Utf8               $4B
  #163 = Utf8               (Z)Z
  #164 = NameAndType        #162:#163     // $4B:(Z)Z
  #165 = Methodref          #154.#164     // org/sireum/B$.$4B:(Z)Z
  #166 = Utf8               Ljava/lang/Object;
  #167 = Utf8               apply
  #168 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Map;
  #169 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/Map<TK;TT;>;
  #170 = Utf8               <init>
  #171 = Utf8               (Lorg/sireum/IS;)V
  #172 = NameAndType        #170:#171     // "<init>":(Lorg/sireum/IS;)V
  #173 = Methodref          #2.#172       // org/sireum/Map."<init>":(Lorg/sireum/IS;)V
  #174 = Utf8               apply$default$1
  #175 = NameAndType        #124:#125     // entries:()Lorg/sireum/IS;
  #176 = Methodref          #2.#175       // org/sireum/Map.entries:()Lorg/sireum/IS;
  #177 = Utf8               $content$lzycompute
  #178 = Utf8               ()Lscala/collection/immutable/Seq;
  #179 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #180 = Utf8               scala/package$
  #181 = Class              #180          // scala/package$
  #182 = Utf8               Lscala/package$;
  #183 = NameAndType        #76:#182      // MODULE$:Lscala/package$;
  #184 = Fieldref           #181.#183     // scala/package$.MODULE$:Lscala/package$;
  #185 = Utf8               Seq
  #186 = Utf8               ()Lscala/collection/immutable/Seq$;
  #187 = NameAndType        #185:#186     // Seq:()Lscala/collection/immutable/Seq$;
  #188 = Methodref          #181.#187     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #189 = Utf8               scala/runtime/ScalaRunTime$
  #190 = Class              #189          // scala/runtime/ScalaRunTime$
  #191 = Utf8               Lscala/runtime/ScalaRunTime$;
  #192 = NameAndType        #76:#191      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #193 = Fieldref           #190.#192     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #194 = Utf8               scala/Tuple2
  #195 = Class              #194          // scala/Tuple2
  #196 = Utf8               type
  #197 = String             #196          // type
  #198 = Utf8               List
  #199 = Utf8               ()Lscala/collection/immutable/List$;
  #200 = NameAndType        #198:#199     // List:()Lscala/collection/immutable/List$;
  #201 = Methodref          #181.#200     // scala/package$.List:()Lscala/collection/immutable/List$;
  #202 = Utf8               java/lang/String
  #203 = Class              #202          // java/lang/String
  #204 = Utf8               org
  #205 = String             #204          // org
  #206 = Utf8               sireum
  #207 = String             #206          // sireum
  #208 = Utf8               Map
  #209 = String             #208          // Map
  #210 = Utf8               [Ljava/lang/Object;
  #211 = Class              #210          // "[Ljava/lang/Object;"
  #212 = Utf8               wrapRefArray
  #213 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #214 = NameAndType        #212:#213     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #215 = Methodref          #190.#214     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #216 = Utf8               scala/collection/immutable/List$
  #217 = Class              #216          // scala/collection/immutable/List$
  #218 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #219 = NameAndType        #167:#218     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #220 = Methodref          #217.#219     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #221 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #222 = NameAndType        #170:#221     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #223 = Methodref          #195.#222     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #224 = String             #124          // entries
  #225 = Utf8               scala/collection/immutable/Seq$
  #226 = Class              #225          // scala/collection/immutable/Seq$
  #227 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #228 = NameAndType        #167:#227     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #229 = Methodref          #226.#228     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #230 = Utf8               scala/collection/immutable/Seq
  #231 = Class              #230          // scala/collection/immutable/Seq
  #232 = NameAndType        #62:#63       // $content:Lscala/collection/immutable/Seq;
  #233 = Fieldref           #2.#232       // org/sireum/Map.$content:Lscala/collection/immutable/Seq;
  #234 = NameAndType        #177:#178     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #235 = Methodref          #2.#234       // org/sireum/Map.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #236 = Utf8               uniqueKeys
  #237 = Utf8               ()Lorg/sireum/contract$Contract$Invariant;
  #238 = Utf8               org/sireum/package$
  #239 = Class              #238          // org/sireum/package$
  #240 = Utf8               Lorg/sireum/package$;
  #241 = NameAndType        #76:#240      // MODULE$:Lorg/sireum/package$;
  #242 = Fieldref           #239.#241     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #243 = Utf8               org/sireum/B
  #244 = Class              #243          // org/sireum/B
  #245 = Utf8               Lorg/sireum/Map$Entries$;
  #246 = NameAndType        #76:#245      // MODULE$:Lorg/sireum/Map$Entries$;
  #247 = Fieldref           #23.#246      // org/sireum/Map$Entries$.MODULE$:Lorg/sireum/Map$Entries$;
  #248 = Utf8               (Lorg/sireum/IS;)Z
  #249 = NameAndType        #236:#248     // uniqueKeys:(Lorg/sireum/IS;)Z
  #250 = Methodref          #23.#249      // org/sireum/Map$Entries$.uniqueKeys:(Lorg/sireum/IS;)Z
  #251 = Utf8               (Z)V
  #252 = NameAndType        #170:#251     // "<init>":(Z)V
  #253 = Methodref          #244.#252     // org/sireum/B."<init>":(Z)V
  #254 = Utf8               genericWrapArray
  #255 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #256 = NameAndType        #254:#255     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #257 = Methodref          #190.#256     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #258 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/contract$Contract$Invariant;
  #259 = NameAndType        #54:#258      // Invariant:(Lscala/collection/immutable/Seq;)Lorg/sireum/contract$Contract$Invariant;
  #260 = Methodref          #239.#259     // org/sireum/package$.Invariant:(Lscala/collection/immutable/Seq;)Lorg/sireum/contract$Contract$Invariant;
  #261 = Utf8               keys
  #262 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;
  #263 = Utf8               scala/runtime/BoxedUnit
  #264 = Class              #263          // scala/runtime/BoxedUnit
  #265 = Utf8               UNIT
  #266 = Utf8               Lscala/runtime/BoxedUnit;
  #267 = NameAndType        #265:#266     // UNIT:Lscala/runtime/BoxedUnit;
  #268 = Fieldref           #264.#267     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #269 = Utf8               ISZ
  #270 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #271 = NameAndType        #269:#270     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #272 = Methodref          #239.#271     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #273 = Utf8               scala/collection/immutable/Nil$
  #274 = Class              #273          // scala/collection/immutable/Nil$
  #275 = Utf8               Lscala/collection/immutable/Nil$;
  #276 = NameAndType        #76:#275      // MODULE$:Lscala/collection/immutable/Nil$;
  #277 = Fieldref           #274.#276     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #278 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #279 = NameAndType        #167:#278     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #280 = Methodref          #18.#279      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #281 = Utf8               org/sireum/Z$
  #282 = Class              #281          // org/sireum/Z$
  #283 = Utf8               Lorg/sireum/Z$;
  #284 = NameAndType        #76:#283      // MODULE$:Lorg/sireum/Z$;
  #285 = Fieldref           #282.#284     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #286 = Utf8               (I)Lorg/sireum/Z;
  #287 = NameAndType        #167:#286     // apply:(I)Lorg/sireum/Z;
  #288 = Methodref          #282.#287     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #289 = Utf8               org/sireum/IS
  #290 = Class              #289          // org/sireum/IS
  #291 = Utf8               size
  #292 = NameAndType        #291:#140     // size:()Lorg/sireum/Z;
  #293 = Methodref          #290.#292     // org/sireum/IS.size:()Lorg/sireum/Z;
  #294 = Utf8               $less
  #295 = Utf8               (Lorg/sireum/Z;)Z
  #296 = NameAndType        #294:#295     // $less:(Lorg/sireum/Z;)Z
  #297 = InterfaceMethodref #45.#296      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #298 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #299 = NameAndType        #167:#298     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #300 = Methodref          #290.#299     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #301 = Utf8               _1
  #302 = Utf8               ()Ljava/lang/Object;
  #303 = NameAndType        #301:#302     // _1:()Ljava/lang/Object;
  #304 = Methodref          #195.#303     // scala/Tuple2._1:()Ljava/lang/Object;
  #305 = Utf8               $colon$plus
  #306 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #307 = NameAndType        #305:#306     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #308 = Methodref          #290.#307     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #309 = Utf8               $plus
  #310 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #311 = NameAndType        #309:#310     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #312 = InterfaceMethodref #45.#311      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #313 = Utf8               r
  #314 = Utf8               i
  #315 = Utf8               Lorg/sireum/Z;
  #316 = Utf8               values
  #317 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
  #318 = Utf8               _2
  #319 = NameAndType        #318:#302     // _2:()Ljava/lang/Object;
  #320 = Methodref          #195.#319     // scala/Tuple2._2:()Ljava/lang/Object;
  #321 = Utf8               keySet
  #322 = Utf8               ()Lorg/sireum/Set;
  #323 = Utf8               ()Lorg/sireum/Set<TK;>;
  #324 = Utf8               org/sireum/Set$
  #325 = Class              #324          // org/sireum/Set$
  #326 = Utf8               Lorg/sireum/Set$;
  #327 = NameAndType        #76:#326      // MODULE$:Lorg/sireum/Set$;
  #328 = Fieldref           #325.#327     // org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
  #329 = NameAndType        #94:#322      // empty:()Lorg/sireum/Set;
  #330 = Methodref          #325.#329     // org/sireum/Set$.empty:()Lorg/sireum/Set;
  #331 = NameAndType        #261:#125     // keys:()Lorg/sireum/IS;
  #332 = Methodref          #2.#331       // org/sireum/Map.keys:()Lorg/sireum/IS;
  #333 = Utf8               org/sireum/Set
  #334 = Class              #333          // org/sireum/Set
  #335 = Utf8               $plus$plus
  #336 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Set;
  #337 = NameAndType        #335:#336     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
  #338 = Methodref          #334.#337     // org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
  #339 = Utf8               valueSet
  #340 = Utf8               ()Lorg/sireum/Set<TT;>;
  #341 = NameAndType        #316:#125     // values:()Lorg/sireum/IS;
  #342 = Methodref          #2.#341       // org/sireum/Map.values:()Lorg/sireum/IS;
  #343 = Utf8               (Lscala/Tuple2;)Lorg/sireum/Map;
  #344 = Utf8               (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/Map<TK;TT;>;
  #345 = Utf8               p
  #346 = Utf8               org/sireum/helper$
  #347 = Class              #346          // org/sireum/helper$
  #348 = Utf8               Lorg/sireum/helper$;
  #349 = NameAndType        #76:#348      // MODULE$:Lorg/sireum/helper$;
  #350 = Fieldref           #347.#349     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #351 = Utf8               assign
  #352 = NameAndType        #351:#298     // assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #353 = Methodref          #347.#352     // org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #354 = Utf8               scala/MatchError
  #355 = Class              #354          // scala/MatchError
  #356 = Utf8               (Ljava/lang/Object;)V
  #357 = NameAndType        #170:#356     // "<init>":(Ljava/lang/Object;)V
  #358 = Methodref          #355.#357     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #359 = Utf8               indexOf
  #360 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Z;
  #361 = NameAndType        #359:#360     // indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
  #362 = Methodref          #2.#361       // org/sireum/Map.indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
  #363 = Utf8               Lorg/sireum/package$$Arrow$;
  #364 = NameAndType        #76:#363      // MODULE$:Lorg/sireum/package$$Arrow$;
  #365 = Fieldref           #56.#364      // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
  #366 = Utf8               $Arrow
  #367 = NameAndType        #366:#298     // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #368 = Methodref          #239.#367     // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #369 = Utf8               $tilde$greater$extension
  #370 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #371 = NameAndType        #369:#370     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #372 = Methodref          #56.#371      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #373 = Methodref          #290.#279     // org/sireum/IS.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #374 = NameAndType        #167:#168     // apply:(Lorg/sireum/IS;)Lorg/sireum/Map;
  #375 = Methodref          #75.#374      // org/sireum/Map$.apply:(Lorg/sireum/IS;)Lorg/sireum/Map;
  #376 = Utf8               x
  #377 = Utf8               Lscala/Tuple2;
  #378 = Utf8               key
  #379 = Utf8               value
  #380 = Utf8               index
  #381 = Utf8               newEntries
  #382 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/Map<TK;TT;>;
  #383 = Utf8               kvs
  #384 = Utf8               scala/runtime/ObjectRef
  #385 = Class              #384          // scala/runtime/ObjectRef
  #386 = Utf8               create
  #387 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #388 = NameAndType        #386:#387     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #389 = Methodref          #385.#388     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #390 = MethodType         #298          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #391 = Utf8               $anonfun$$plus$plus$1$adapted
  #392 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #393 = NameAndType        #391:#392     // $anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #394 = Methodref          #2.#393       // org/sireum/Map.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #395 = MethodHandle       6:#394        // REF_invokeStatic org/sireum/Map.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #396 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #397 = MethodType         #396          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #398 = Integer            5
  #399 = Integer            1
  #400 = Utf8               java/lang/invoke/LambdaMetafactory
  #401 = Class              #400          // java/lang/invoke/LambdaMetafactory
  #402 = Utf8               altMetafactory
  #403 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #404 = NameAndType        #402:#403     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #405 = Methodref          #401.#404     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #406 = MethodHandle       6:#405        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #407 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #408 = NameAndType        #167:#407     // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #409 = InvokeDynamic      #0:#408       // #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #410 = Utf8               foreach
  #411 = Utf8               (Lscala/Function1;)V
  #412 = NameAndType        #410:#411     // foreach:(Lscala/Function1;)V
  #413 = Methodref          #290.#412     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #414 = Utf8               elem
  #415 = NameAndType        #414:#166     // elem:Ljava/lang/Object;
  #416 = Fieldref           #385.#415     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #417 = Utf8               Lscala/runtime/ObjectRef;
  #418 = Utf8               get
  #419 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #420 = Utf8               (TK;)Lorg/sireum/Option<TT;>;
  #421 = Utf8               org/sireum/None$
  #422 = Class              #421          // org/sireum/None$
  #423 = Utf8               Lorg/sireum/None$;
  #424 = NameAndType        #76:#423      // MODULE$:Lorg/sireum/None$;
  #425 = Fieldref           #422.#424     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #426 = Utf8               ()Lorg/sireum/None;
  #427 = NameAndType        #167:#426     // apply:()Lorg/sireum/None;
  #428 = Methodref          #422.#427     // org/sireum/None$.apply:()Lorg/sireum/None;
  #429 = Utf8               org/sireum/Some$
  #430 = Class              #429          // org/sireum/Some$
  #431 = Utf8               Lorg/sireum/Some$;
  #432 = NameAndType        #76:#431      // MODULE$:Lorg/sireum/Some$;
  #433 = Fieldref           #430.#432     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #434 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #435 = NameAndType        #167:#434     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #436 = Methodref          #430.#435     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #437 = Utf8               Lorg/sireum/Option;
  #438 = Utf8               getOrElse
  #439 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #440 = Utf8               (TK;Lscala/Function0<TT;>;)TT;
  #441 = Utf8               default
  #442 = Utf8               scala/Function0
  #443 = Class              #442          // scala/Function0
  #444 = NameAndType        #167:#302     // apply:()Ljava/lang/Object;
  #445 = InterfaceMethodref #443.#444     // scala/Function0.apply:()Ljava/lang/Object;
  #446 = Utf8               Lscala/Function0;
  #447 = Utf8               getOrElseEager
  #448 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #449 = Utf8               (TK;TT;)TT;
  #450 = Utf8               entry
  #451 = Utf8               (TK;)Lorg/sireum/Option<Lscala/Tuple2<TK;TT;>;>;
  #452 = Utf8               (TK;)Lorg/sireum/Z;
  #453 = Utf8               scala/runtime/BoxesRunTime
  #454 = Class              #453          // scala/runtime/BoxesRunTime
  #455 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #456 = NameAndType        #151:#455     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #457 = Methodref          #454.#456     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #458 = Utf8               $minus
  #459 = NameAndType        #458:#310     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #460 = InterfaceMethodref #45.#459      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #461 = Utf8               $minus$minus
  #462 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TK;>;)Lorg/sireum/Map<TK;TT;>;
  #463 = Utf8               $anonfun$$minus$minus$1$adapted
  #464 = Utf8               (Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #465 = NameAndType        #463:#464     // $anonfun$$minus$minus$1$adapted:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #466 = Methodref          #2.#465       // org/sireum/Map.$anonfun$$minus$minus$1$adapted:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #467 = MethodHandle       6:#466        // REF_invokeStatic org/sireum/Map.$anonfun$$minus$minus$1$adapted:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #468 = Utf8               (Lorg/sireum/Map;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #469 = NameAndType        #167:#468     // apply:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #470 = InvokeDynamic      #1:#469       // #1:apply:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #471 = Utf8               nonEmpty
  #472 = NameAndType        #471:#107     // nonEmpty:()Z
  #473 = Methodref          #290.#472     // org/sireum/IS.nonEmpty:()Z
  #474 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
  #475 = NameAndType        #461:#474     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #476 = Methodref          #290.#475     // org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #477 = Utf8               deletedMappings
  #478 = NameAndType        #151:#152     // equals:(Ljava/lang/Object;)Z
  #479 = Methodref          #5.#478       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #480 = Utf8               kv
  #481 = Utf8               contains
  #482 = Utf8               (TK;)Z
  #483 = Utf8               $greater$eq
  #484 = NameAndType        #483:#295     // $greater$eq:(Lorg/sireum/Z;)Z
  #485 = InterfaceMethodref #45.#484      // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
  #486 = Utf8               isEmpty
  #487 = Methodref          #2.#292       // org/sireum/Map.size:()Lorg/sireum/Z;
  #488 = Utf8               Lorg/sireum/Z$$String$;
  #489 = NameAndType        #76:#488      // MODULE$:Lorg/sireum/Z$$String$;
  #490 = Fieldref           #43.#489      // org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
  #491 = Utf8               0
  #492 = String             #491          // 0
  #493 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #494 = NameAndType        #167:#493     // apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #495 = Methodref          #43.#494      // org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #496 = NameAndType        #167:#163     // apply:(Z)Z
  #497 = Methodref          #154.#496     // org/sireum/B$.apply:(Z)Z
  #498 = Utf8               org/sireum/ST$
  #499 = Class              #498          // org/sireum/ST$
  #500 = Utf8               Lorg/sireum/ST$;
  #501 = NameAndType        #76:#500      // MODULE$:Lorg/sireum/ST$;
  #502 = Fieldref           #499.#501     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #503 = Utf8               {\n    |
  #504 = String             #503          // {\n    |
  #505 = Utf8               \n    |}
  #506 = String             #505          // \n    |}
  #507 = Utf8               Lorg/sireum/ST$Templ$;
  #508 = NameAndType        #76:#507      // MODULE$:Lorg/sireum/ST$Templ$;
  #509 = Fieldref           #40.#508      // org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
  #510 = Utf8               $anonfun$string$1
  #511 = Utf8               (Lscala/Tuple2;)Lorg/sireum/ST;
  #512 = NameAndType        #510:#511     // $anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #513 = Methodref          #2.#512       // org/sireum/Map.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #514 = MethodHandle       6:#513        // REF_invokeStatic org/sireum/Map.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #515 = MethodType         #511          //  (Lscala/Tuple2;)Lorg/sireum/ST;
  #516 = Utf8               ()Lscala/Function1;
  #517 = NameAndType        #167:#516     // apply:()Lscala/Function1;
  #518 = InvokeDynamic      #2:#517       // #2:apply:()Lscala/Function1;
  #519 = Utf8               map
  #520 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
  #521 = NameAndType        #519:#520     // map:(Lscala/Function1;)Lorg/sireum/IS;
  #522 = Methodref          #290.#521     // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
  #523 = Utf8               elements
  #524 = NameAndType        #523:#178     // elements:()Lscala/collection/immutable/Seq;
  #525 = Methodref          #290.#524     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #526 = Utf8               org/sireum/String$
  #527 = Class              #526          // org/sireum/String$
  #528 = Utf8               Lorg/sireum/String$;
  #529 = NameAndType        #76:#528      // MODULE$:Lorg/sireum/String$;
  #530 = Fieldref           #527.#529     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #531 = Utf8               ,\n
  #532 = String             #531          // ,\n
  #533 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #534 = NameAndType        #167:#533     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #535 = Methodref          #527.#534     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #536 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #537 = NameAndType        #167:#536     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #538 = Methodref          #40.#537      // org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #539 = Utf8                           st\"\"\"{\n    |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n    |}\"\"\"
  #540 = String             #539          //             st\"\"\"{\n    |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n    |}\"\"\"
  #541 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #542 = NameAndType        #167:#541     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #543 = Methodref          #499.#542     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #544 = Utf8               render
  #545 = NameAndType        #544:#131     // render:()Ljava/lang/String;
  #546 = Methodref          #28.#545      // org/sireum/ST.render:()Ljava/lang/String;
  #547 = Utf8               Lorg/sireum/ST;
  #548 = Utf8               (Lorg/sireum/Map<TK;TT;>;)Z
  #549 = Utf8               other
  #550 = Utf8               T
  #551 = NameAndType        #550:#107     // T:()Z
  #552 = Methodref          #239.#551     // org/sireum/package$.T:()Z
  #553 = Utf8               F
  #554 = NameAndType        #553:#107     // F:()Z
  #555 = Methodref          #239.#554     // org/sireum/package$.F:()Z
  #556 = Utf8               $amp$extension
  #557 = Utf8               (ZZ)Z
  #558 = NameAndType        #556:#557     // $amp$extension:(ZZ)Z
  #559 = Methodref          #154.#558     // org/sireum/B$.$amp$extension:(ZZ)Z
  #560 = NameAndType        #418:#419     // get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #561 = Methodref          #2.#560       // org/sireum/Map.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #562 = Utf8               org/sireum/Some
  #563 = Class              #562          // org/sireum/Some
  #564 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #565 = NameAndType        #70:#564      // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #566 = Methodref          #430.#565     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #567 = Utf8               scala/Some
  #568 = Class              #567          // scala/Some
  #569 = NameAndType        #486:#107     // isEmpty:()Z
  #570 = Methodref          #568.#569     // scala/Some.isEmpty:()Z
  #571 = NameAndType        #418:#302     // get:()Ljava/lang/Object;
  #572 = Methodref          #568.#571     // scala/Some.get:()Ljava/lang/Object;
  #573 = Utf8               v
  #574 = Utf8               v2
  #575 = Utf8               v2Opt
  #576 = Utf8               sz
  #577 = Utf8               Z
  #578 = Utf8               org/sireum/Option
  #579 = Class              #578          // org/sireum/Option
  #580 = NameAndType        #116:#117     // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #581 = Methodref          #2.#580       // org/sireum/Map.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #582 = Utf8               $anonfun$$plus$plus$1
  #583 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #584 = Utf8               r$1
  #585 = NameAndType        #309:#343     // $plus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #586 = Methodref          #2.#585       // org/sireum/Map.$plus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #587 = Utf8               $anonfun$$minus$minus$1
  #588 = Utf8               (Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #589 = Utf8               $this
  #590 = Utf8               deletedMappings$1
  #591 = Utf8               e
  #592 = Utf8               scala/StringContext$
  #593 = Class              #592          // scala/StringContext$
  #594 = Utf8               Lscala/StringContext$;
  #595 = NameAndType        #76:#594      // MODULE$:Lscala/StringContext$;
  #596 = Fieldref           #593.#595     // scala/StringContext$.MODULE$:Lscala/StringContext$;
  #597 = Utf8
  #598 = String             #597          //
  #599 = Utf8               processEscapes
  #600 = NameAndType        #599:#533     // processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #601 = Methodref          #593.#600     // scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #602 = Utf8                ->
  #603 = String             #602          //  ->
  #604 = Utf8               Lorg/sireum/ST$Any$;
  #605 = NameAndType        #76:#604      // MODULE$:Lorg/sireum/ST$Any$;
  #606 = Fieldref           #31.#605      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #607 = Utf8               org/sireum/$internal/Option$
  #608 = Class              #607          // org/sireum/$internal/Option$
  #609 = Utf8               Lorg/sireum/$internal/Option$;
  #610 = NameAndType        #76:#609      // MODULE$:Lorg/sireum/$internal/Option$;
  #611 = Fieldref           #608.#610     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #612 = Methodref          #608.#299     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #613 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #614 = NameAndType        #167:#613     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #615 = Methodref          #31.#614      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #616 = Utf8                                                  st\"${e._1} -> ${e._2}\"
  #617 = String             #616          //                                    st\"${e._1} -> ${e._2}\"
  #618 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;)V
  #619 = Utf8               __entries
  #620 = Utf8               ()V
  #621 = NameAndType        #170:#620     // "<init>":()V
  #622 = Methodref          #5.#621       // java/lang/Object."<init>":()V
  #623 = Utf8               $init$
  #624 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #625 = NameAndType        #623:#624     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #626 = InterfaceMethodref #119.#625     // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #627 = Utf8               (Lorg/sireum/Immutable;)V
  #628 = NameAndType        #623:#627     // $init$:(Lorg/sireum/Immutable;)V
  #629 = InterfaceMethodref #100.#628     // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #630 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #631 = NameAndType        #623:#630     // $init$:(Lorg/sireum/DatatypeSig;)V
  #632 = InterfaceMethodref #7.#631       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #633 = NameAndType        #582:#583     // $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #634 = Methodref          #2.#633       // org/sireum/Map.$anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #635 = NameAndType        #587:#588     // $anonfun$$minus$minus$1:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #636 = Methodref          #2.#635       // org/sireum/Map.$anonfun$$minus$minus$1:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #637 = Utf8               $deserializeLambda$
  #638 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #639 = Utf8               scala/runtime/LambdaDeserialize
  #640 = Class              #639          // scala/runtime/LambdaDeserialize
  #641 = Utf8               bootstrap
  #642 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #643 = NameAndType        #641:#642     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #644 = Methodref          #640.#643     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #645 = MethodHandle       6:#644        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #646 = Utf8               lambdaDeserialize
  #647 = NameAndType        #646:#638     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #648 = InvokeDynamic      #3:#647       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #649 = Utf8               Signature
  #650 = Utf8               Code
  #651 = Utf8               LocalVariableTable
  #652 = Utf8               MethodParameters
  #653 = Utf8               LineNumberTable
  #654 = Utf8               StackMapTable
  #655 = Utf8               InnerClasses
  #656 = Utf8               SourceFile
  #657 = Utf8               RuntimeVisibleAnnotations
  #658 = Utf8               BootstrapMethods
  #659 = Utf8               ScalaInlineInfo
  #660 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #64                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>> _entries;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #67                          // Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <K extends java.lang.Object, T extends java.lang.Object> scala.Some<org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>>> unapply(org.sireum.Map<K, T>);
    descriptor: (Lorg/sireum/Map;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #79                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
         3: aload_0
         4: invokevirtual #81                 // Method org/sireum/Map$.unapply:(Lorg/sireum/Map;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/Map;
    Signature: #72                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TT;>;)Lscala/Some<Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static <K extends java.lang.Object, T extends java.lang.Object> org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>> entriesOf(org.sireum.Map<K, T>);
    descriptor: (Lorg/sireum/Map;)Lorg/sireum/IS;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #79                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
         3: aload_0
         4: invokevirtual #88                 // Method org/sireum/Map$.entriesOf:(Lorg/sireum/Map;)Lorg/sireum/IS;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     m   Lorg/sireum/Map;
    Signature: #85                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TT;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;
    MethodParameters:
      Name                           Flags
      m                              final

  public static <K extends java.lang.Object, T extends java.lang.Object> org.sireum.Map<K, T> of();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #79                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
         3: invokevirtual #93                 // Method org/sireum/Map$.of:()Lorg/sireum/Map;
         6: areturn
    Signature: #91                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/Map<TK;TT;>;

  public static <K extends java.lang.Object, T extends java.lang.Object> org.sireum.Map<K, T> empty();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #79                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
         3: invokevirtual #96                 // Method org/sireum/Map$.empty:()Lorg/sireum/Map;
         6: areturn
    Signature: #91                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/Map<TK;TT;>;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #104                // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #111                // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #115                // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #123                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;

  public org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>> entries();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #128                // Field _entries:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;
    Signature: #126                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;

  public org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>> getEntries();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #128                // Field _entries:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;
    Signature: #126                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #134                // Method string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #138                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     37
        15: aload_0
        16: aload_0
        17: invokevirtual #142                // Method hash:()Lorg/sireum/Z;
        20: invokevirtual #144                // Method java/lang/Object.hashCode:()I
        23: putfield      #146                // Field hashCode:I
        26: aload_0
        27: aload_0
        28: getfield      #138                // Field bitmap$0:B
        31: iconst_1
        32: ior
        33: i2b
        34: putfield      #138                // Field bitmap$0:B
        37: aload_1
        38: monitorexit
        39: goto          45
        42: aload_1
        43: monitorexit
        44: athrow
        45: aload_0
        46: getfield      #146                // Field hashCode:I
        49: ireturn
      Exception table:
         from    to  target type
             4    37    42   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class org/sireum/Map ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/Map;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #138                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #150                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #146                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Map;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     9
         5: iconst_1
         6: goto          46
         9: aload_1
        10: astore_3
        11: aload_3
        12: instanceof    #2                  // class org/sireum/Map
        15: ifeq          40
        18: aload_3
        19: checkcast     #2                  // class org/sireum/Map
        22: astore        4
        24: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        27: aload_0
        28: aload         4
        30: invokevirtual #161                // Method isEqual:(Lorg/sireum/Map;)Z
        33: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        36: istore_2
        37: goto          45
        40: goto          43
        43: iconst_0
        44: ireturn
        45: iload_2
        46: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/Map, class java/lang/Object, int, class java/lang/Object, class org/sireum/Map ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Map, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/Map;
            0      47     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Map<K, T> apply(org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/Map
         3: dup
         4: aload_1
         5: invokespecial #173                // Method "<init>":(Lorg/sireum/IS;)V
         8: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/Map;
            0       9     1 entries   Lorg/sireum/IS;
    Signature: #169                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/Map<TK;TT;>;
    MethodParameters:
      Name                           Flags
      entries                        final

  public org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>> apply$default$1();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;
    Signature: #126                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #138                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     120
        15: aload_0
        16: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_2
        26: anewarray     #195                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #195                // class scala/Tuple2
        34: dup
        35: ldc           #197                // String type
        37: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #201                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #203                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #205                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #207                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #209                // String Map
        64: aastore
        65: checkcast     #211                // class "[Ljava/lang/Object;"
        68: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #220                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #195                // class scala/Tuple2
        83: dup
        84: ldc           #224                // String entries
        86: aload_0
        87: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        90: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: checkcast     #211                // class "[Ljava/lang/Object;"
        97: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       100: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       103: checkcast     #231                // class scala/collection/immutable/Seq
       106: putfield      #233                // Field $content:Lscala/collection/immutable/Seq;
       109: aload_0
       110: aload_0
       111: getfield      #138                // Field bitmap$0:B
       114: iconst_2
       115: ior
       116: i2b
       117: putfield      #138                // Field bitmap$0:B
       120: aload_1
       121: monitorexit
       122: goto          128
       125: aload_1
       126: monitorexit
       127: athrow
       128: aload_0
       129: getfield      #233                // Field $content:Lscala/collection/immutable/Seq;
       132: areturn
      Exception table:
         from    to  target type
             4   120   125   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 120
          locals = [ class org/sireum/Map ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     133     0  this   Lorg/sireum/Map;
    Signature: #179                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #138                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #235                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #233                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Map;
    Signature: #179                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.contract$Contract$Invariant uniqueKeys();
    descriptor: ()Lorg/sireum/contract$Contract$Invariant;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=1, args_size=1
         0: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         6: iconst_1
         7: anewarray     #244                // class org/sireum/B
        10: dup
        11: iconst_0
        12: new           #244                // class org/sireum/B
        15: dup
        16: getstatic     #247                // Field org/sireum/Map$Entries$.MODULE$:Lorg/sireum/Map$Entries$;
        19: aload_0
        20: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        23: invokevirtual #250                // Method org/sireum/Map$Entries$.uniqueKeys:(Lorg/sireum/IS;)Z
        26: invokespecial #253                // Method org/sireum/B."<init>":(Z)V
        29: aastore
        30: invokevirtual #257                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        33: invokevirtual #260                // Method org/sireum/package$.Invariant:(Lscala/collection/immutable/Seq;)Lorg/sireum/contract$Contract$Invariant;
        36: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lorg/sireum/Map;

  public org.sireum.IS<org.sireum.Z, K> keys();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #272                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        10: getstatic     #277                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        13: invokevirtual #280                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        16: astore_1
        17: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        20: iconst_0
        21: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        24: astore_2
        25: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        28: aload_2
        29: aload_0
        30: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        33: invokevirtual #293                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        36: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        41: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        44: ifeq          87
        47: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        56: aload_2
        57: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        60: checkcast     #195                // class scala/Tuple2
        63: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
        66: invokevirtual #308                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        69: astore_1
        70: aload_2
        71: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        74: iconst_1
        75: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        78: invokeinterface #312,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        83: astore_2
        84: goto          25
        87: aload_1
        88: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ class org/sireum/IS, class org/sireum/Z ]
        frame_type = 61 /* same */
      LineNumberTable:
        line 76: 0
        line 82: 4
        line 83: 17
        line 84: 25
        line 85: 47
        line 92: 51
        line 93: 70
        line 84: 84
        line 95: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      72     1     r   Lorg/sireum/IS;
           25      64     2     i   Lorg/sireum/Z;
            0      89     0  this   Lorg/sireum/Map;
    Signature: #262                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;

  public org.sireum.IS<org.sireum.Z, T> values();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #272                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        10: getstatic     #277                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        13: invokevirtual #280                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        16: astore_1
        17: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        20: iconst_0
        21: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        24: astore_2
        25: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        28: aload_2
        29: aload_0
        30: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        33: invokevirtual #293                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        36: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        41: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        44: ifeq          87
        47: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        56: aload_2
        57: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        60: checkcast     #195                // class scala/Tuple2
        63: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
        66: invokevirtual #308                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        69: astore_1
        70: aload_2
        71: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        74: iconst_1
        75: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        78: invokeinterface #312,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        83: astore_2
        84: goto          25
        87: aload_1
        88: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ class org/sireum/IS, class org/sireum/Z ]
        frame_type = 61 /* same */
      LineNumberTable:
        line 99: 0
        line 100: 4
        line 101: 17
        line 102: 25
        line 103: 47
        line 110: 51
        line 111: 70
        line 102: 84
        line 113: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      72     1     r   Lorg/sireum/IS;
           25      64     2     i   Lorg/sireum/Z;
            0      89     0  this   Lorg/sireum/Map;
    Signature: #317                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public org.sireum.Set<K> keySet();
    descriptor: ()Lorg/sireum/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #328                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
         3: invokevirtual #330                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
         6: aload_0
         7: invokevirtual #332                // Method keys:()Lorg/sireum/IS;
        10: invokevirtual #338                // Method org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
        13: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/Map;
    Signature: #323                         // ()Lorg/sireum/Set<TK;>;

  public org.sireum.Set<T> valueSet();
    descriptor: ()Lorg/sireum/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #328                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
         3: invokevirtual #330                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
         6: aload_0
         7: invokevirtual #342                // Method values:()Lorg/sireum/IS;
        10: invokevirtual #338                // Method org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
        13: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/Map;
    Signature: #340                         // ()Lorg/sireum/Set<TT;>;

  public org.sireum.Map<K, T> $plus(scala.Tuple2<K, T>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=15, args_size=2
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_1
         5: astore        6
         7: new           #195                // class scala/Tuple2
        10: dup
        11: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        14: aload         6
        16: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
        19: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        22: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        25: aload         6
        27: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
        30: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        33: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        36: astore        5
        38: aload         5
        40: ifnull        72
        43: aload         5
        45: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
        48: astore        7
        50: aload         5
        52: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
        55: astore        8
        57: new           #195                // class scala/Tuple2
        60: dup
        61: aload         7
        63: aload         8
        65: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        68: astore_2
        69: goto          85
        72: goto          75
        75: new           #355                // class scala/MatchError
        78: dup
        79: aload         5
        81: invokespecial #358                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        84: athrow
        85: aload_2
        86: astore        4
        88: new           #195                // class scala/Tuple2
        91: dup
        92: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        95: aload         4
        97: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
       100: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       103: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       106: aload         4
       108: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
       111: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       114: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       117: astore_3
       118: aload_3
       119: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
       122: astore        9
       124: aload_3
       125: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
       128: astore        10
       130: aload_0
       131: aload         9
       133: invokevirtual #362                // Method indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
       136: astore        11
       138: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       141: aload         11
       143: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       146: iconst_0
       147: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       150: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       155: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
       158: ifeq          190
       161: aload_0
       162: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
       165: new           #195                // class scala/Tuple2
       168: dup
       169: aload         9
       171: aload         10
       173: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       176: invokevirtual #308                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       179: astore        13
       181: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       184: pop
       185: aload         13
       187: goto          236
       190: aload_0
       191: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
       194: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       197: iconst_1
       198: anewarray     #195                // class scala/Tuple2
       201: dup
       202: iconst_0
       203: getstatic     #365                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       206: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       209: aload         11
       211: invokevirtual #368                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       214: aload_1
       215: invokevirtual #372                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       218: aastore
       219: checkcast     #211                // class "[Ljava/lang/Object;"
       222: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       225: invokevirtual #373                // Method org/sireum/IS.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       228: astore        14
       230: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       233: pop
       234: aload         14
       236: astore        12
       238: getstatic     #79                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
       241: aload         12
       243: invokevirtual #375                // Method org/sireum/Map$.apply:(Lorg/sireum/IS;)Lorg/sireum/Map;
       246: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 72
          locals = [ class org/sireum/Map, class scala/Tuple2, top, top, top, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/Map, class scala/Tuple2, class scala/Tuple2, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 104
          locals = [ class org/sireum/Map, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object, class java/lang/Object, class java/lang/Object, class org/sireum/Z ]
          stack = []
        frame_type = 109 /* same_locals_1_stack_item */
          stack = [ class org/sireum/IS ]
      LineNumberTable:
        line 121: 0
        line 131: 4
        line 132: 130
        line 133: 138
        line 134: 161
        line 135: 181
        line 144: 185
        line 146: 190
        line 147: 230
        line 156: 234
        line 158: 238
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      29     6     x   Lscala/Tuple2;
           50      22     7   key   Ljava/lang/Object;
           57      15     8 value   Ljava/lang/Object;
           88      29     4     x   Lscala/Tuple2;
          181       6    13     r   Lorg/sireum/IS;
          230       6    14     r   Lorg/sireum/IS;
          124     123     9   key   Ljava/lang/Object;
          130     117    10 value   Ljava/lang/Object;
          138     109    11 index   Lorg/sireum/Z;
          238       9    12 newEntries   Lorg/sireum/IS;
            0     247     0  this   Lorg/sireum/Map;
            0     247     1     p   Lscala/Tuple2;
    Signature: #344                         // (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/Map<TK;TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public <I extends java.lang.Object> org.sireum.Map<K, T> $plus$plus(org.sireum.IS<I, scala.Tuple2<K, T>>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokestatic  #389                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokedynamic #409,  0            // InvokeDynamic #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        12: invokevirtual #413                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        15: aload_2
        16: getfield      #416                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #2                  // class org/sireum/Map
        22: areturn
      LineNumberTable:
        line 162: 0
        line 163: 5
        line 166: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2     r   Lscala/runtime/ObjectRef;
            0      23     0  this   Lorg/sireum/Map;
            0      23     1   kvs   Lorg/sireum/IS;
    Signature: #382                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/Map<TK;TT;>;
    MethodParameters:
      Name                           Flags
      kvs                            final

  public org.sireum.Option<T> get(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_0
         5: aload_1
         6: invokevirtual #362                // Method indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
         9: astore_2
        10: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        13: aload_2
        14: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        17: iconst_0
        18: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        21: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        26: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        29: ifeq          41
        32: getstatic     #425                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        35: invokevirtual #428                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        38: goto          61
        41: getstatic     #433                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        44: aload_0
        45: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        48: aload_2
        49: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        52: checkcast     #195                // class scala/Tuple2
        55: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
        58: invokevirtual #436                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        61: astore_3
        62: aload_3
        63: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 41
          locals = [ class org/sireum/Z ]
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 170: 0
        line 182: 4
        line 183: 10
        line 184: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      54     2 index   Lorg/sireum/Z;
           62       2     3     r   Lorg/sireum/Option;
            0      64     0  this   Lorg/sireum/Map;
            0      64     1   key   Ljava/lang/Object;
    Signature: #420                         // (TK;)Lorg/sireum/Option<TT;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public T getOrElse(K, scala.Function0<T>);
    descriptor: (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #362                // Method indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
         5: astore_3
         6: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         9: aload_3
        10: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        13: iconst_0
        14: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        17: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        22: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        25: ifeq          37
        28: aload_2
        29: invokeinterface #445,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        34: goto          51
        37: aload_0
        38: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        41: aload_3
        42: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        45: checkcast     #195                // class scala/Tuple2
        48: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
        51: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class org/sireum/Z ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 188: 0
        line 189: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      46     3 index   Lorg/sireum/Z;
            0      52     0  this   Lorg/sireum/Map;
            0      52     1   key   Ljava/lang/Object;
            0      52     2 default   Lscala/Function0;
    Signature: #440                         // (TK;Lscala/Function0<TT;>;)TT;
    MethodParameters:
      Name                           Flags
      key                            final
      default                        final

  public T getOrElseEager(K, T);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_0
         5: aload_1
         6: invokevirtual #362                // Method indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
         9: astore_3
        10: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        13: aload_3
        14: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        17: iconst_0
        18: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        21: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        26: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        29: ifeq          36
        32: aload_2
        33: goto          50
        36: aload_0
        37: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        40: aload_3
        41: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        44: checkcast     #195                // class scala/Tuple2
        47: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
        50: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class org/sireum/Z ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 193: 0
        line 205: 4
        line 206: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      41     3 index   Lorg/sireum/Z;
            0      51     0  this   Lorg/sireum/Map;
            0      51     1   key   Ljava/lang/Object;
            0      51     2 default   Ljava/lang/Object;
    Signature: #449                         // (TK;TT;)TT;
    MethodParameters:
      Name                           Flags
      key                            final
      default                        final

  public org.sireum.Option<scala.Tuple2<K, T>> entry(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_0
         5: aload_1
         6: invokevirtual #362                // Method indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
         9: astore_2
        10: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        13: aload_2
        14: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        17: iconst_0
        18: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        21: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        26: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        29: ifeq          41
        32: getstatic     #425                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        35: invokevirtual #428                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        38: goto          55
        41: getstatic     #433                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        44: aload_0
        45: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        48: aload_2
        49: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        52: invokevirtual #436                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        55: astore_3
        56: aload_3
        57: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 41
          locals = [ class org/sireum/Z ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 210: 0
        line 222: 4
        line 223: 10
        line 224: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      48     2 index   Lorg/sireum/Z;
           56       2     3     r   Lorg/sireum/Option;
            0      58     0  this   Lorg/sireum/Map;
            0      58     1   key   Ljava/lang/Object;
    Signature: #451                         // (TK;)Lorg/sireum/Option<Lscala/Tuple2<TK;TT;>;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public org.sireum.Z indexOf(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         7: iconst_m1
         8: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        15: iconst_0
        16: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        19: astore_3
        20: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        23: aload_3
        24: aload_0
        25: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        28: invokevirtual #293                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        31: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        36: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        39: ifeq          109
        42: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        50: aload_3
        51: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        54: checkcast     #195                // class scala/Tuple2
        57: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
        60: aload_1
        61: invokestatic  #457                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        64: ifeq          92
        67: aload_3
        68: astore_2
        69: aload_0
        70: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        73: invokevirtual #293                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        76: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        79: iconst_1
        80: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        83: invokeinterface #460,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        88: astore_3
        89: goto          92
        92: aload_3
        93: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        96: iconst_1
        97: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       100: invokeinterface #312,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       105: astore_3
       106: goto          20
       109: aload_2
       110: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ class org/sireum/Z, class org/sireum/Z ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 71
        frame_type = 16 /* same */
      LineNumberTable:
        line 228: 0
        line 244: 4
        line 245: 12
        line 246: 20
        line 247: 42
        line 254: 46
        line 255: 67
        line 256: 69
        line 258: 92
        line 246: 106
        line 260: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      99     2 index   Lorg/sireum/Z;
           20      91     3     i   Lorg/sireum/Z;
            0     111     0  this   Lorg/sireum/Map;
            0     111     1   key   Ljava/lang/Object;
    Signature: #452                         // (TK;)Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      key                            final

  public <I extends java.lang.Object> org.sireum.Map<K, T> $minus$minus(org.sireum.IS<I, K>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #272                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #277                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #280                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: invokestatic  #389                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        15: astore_2
        16: aload_1
        17: aload_0
        18: aload_2
        19: invokedynamic #470,  0            // InvokeDynamic #1:apply:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;)Lscala/Function1;
        24: invokevirtual #413                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        27: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        30: aload_2
        31: getfield      #416                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        34: checkcast     #290                // class org/sireum/IS
        37: invokevirtual #473                // Method org/sireum/IS.nonEmpty:()Z
        40: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        43: ifeq          67
        46: getstatic     #79                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
        49: aload_0
        50: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        53: aload_2
        54: getfield      #416                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        57: checkcast     #290                // class org/sireum/IS
        60: invokevirtual #476                // Method org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        63: invokevirtual #375                // Method org/sireum/Map$.apply:(Lorg/sireum/IS;)Lorg/sireum/Map;
        66: areturn
        67: aload_0
        68: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 67
          locals = [ class scala/runtime/ObjectRef ]
      LineNumberTable:
        line 264: 0
        line 265: 16
        line 271: 27
        line 272: 46
        line 274: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      53     2 deletedMappings   Lscala/runtime/ObjectRef;
            0      69     0  this   Lorg/sireum/Map;
            0      69     1  keys   Lorg/sireum/IS;
    Signature: #462                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TK;>;)Lorg/sireum/Map<TK;TT;>;
    MethodParameters:
      Name                           Flags
      keys                           final

  public org.sireum.Map<K, T> $minus(scala.Tuple2<K, T>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=2
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #272                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        10: getstatic     #277                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        13: invokevirtual #280                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        16: astore_2
        17: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        20: iconst_0
        21: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        24: astore_3
        25: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        28: aload_3
        29: aload_0
        30: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        33: invokevirtual #293                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        36: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        41: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        44: ifeq          155
        47: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        50: pop
        51: aload_0
        52: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        55: aload_3
        56: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        59: checkcast     #195                // class scala/Tuple2
        62: astore        5
        64: new           #195                // class scala/Tuple2
        67: dup
        68: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        71: aload         5
        73: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
        76: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        79: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        82: aload         5
        84: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
        87: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        90: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: astore        4
        95: aload         4
        97: aload_1
        98: astore        6
       100: dup
       101: ifnonnull     113
       104: pop
       105: aload         6
       107: ifnull        134
       110: goto          121
       113: aload         6
       115: invokevirtual #479                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       118: ifne          134
       121: aload_2
       122: aload         4
       124: invokevirtual #308                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       127: astore_2
       128: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       131: goto          137
       134: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       137: pop
       138: aload_3
       139: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       142: iconst_1
       143: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       146: invokeinterface #312,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       151: astore_3
       152: goto          25
       155: getstatic     #79                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
       158: aload_2
       159: invokevirtual #375                // Method org/sireum/Map$.apply:(Lorg/sireum/IS;)Lorg/sireum/Map;
       162: astore        7
       164: aload         7
       166: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ class org/sireum/IS, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 87
          locals = [ class org/sireum/Map, class scala/Tuple2, class org/sireum/IS, class org/sireum/Z, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2 ]
          stack = [ class scala/Tuple2 ]
        frame_type = 7 /* same */
        frame_type = 12 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 248 /* chop */
          offset_delta = 17
      LineNumberTable:
        line 279: 0
        line 288: 4
        line 289: 17
        line 290: 25
        line 291: 47
        line 302: 51
        line 303: 95
        line 304: 121
        line 305: 128
        line 303: 134
        line 309: 138
        line 290: 152
        line 311: 155
        line 312: 164
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      29     5     x   Lscala/Tuple2;
           95      57     4    kv   Lscala/Tuple2;
           17     150     2 newEntries   Lorg/sireum/IS;
           25     142     3     i   Lorg/sireum/Z;
          164       3     7     r   Lorg/sireum/Map;
            0     167     0  this   Lorg/sireum/Map;
            0     167     1     p   Lscala/Tuple2;
    Signature: #344                         // (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/Map<TK;TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public boolean contains(K);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_0
         5: aload_1
         6: invokevirtual #362                // Method indexOf:(Ljava/lang/Object;)Lorg/sireum/Z;
         9: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        12: iconst_0
        13: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        16: invokeinterface #485,  2          // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
        21: ireturn
      LineNumberTable:
        line 316: 0
        line 317: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/Map;
            0      22     1   key   Ljava/lang/Object;
    Signature: #482                         // (TK;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         7: aload_0
         8: invokevirtual #487                // Method size:()Lorg/sireum/Z;
        11: getstatic     #490                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        14: ldc_w         #492                // String 0
        17: invokevirtual #495                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        20: astore_1
        21: dup
        22: ifnonnull     33
        25: pop
        26: aload_1
        27: ifnull        40
        30: goto          44
        33: aload_1
        34: invokevirtual #479                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        37: ifeq          44
        40: iconst_1
        41: goto          45
        44: iconst_0
        45: invokevirtual #497                // Method org/sireum/B$.apply:(Z)Z
        48: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class org/sireum/Map, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Map, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 321: 0
        line 322: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/sireum/Map;

  public boolean nonEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         7: aload_0
         8: invokevirtual #487                // Method size:()Lorg/sireum/Z;
        11: getstatic     #490                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        14: ldc_w         #492                // String 0
        17: invokevirtual #495                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        20: astore_1
        21: dup
        22: ifnonnull     33
        25: pop
        26: aload_1
        27: ifnull        44
        30: goto          40
        33: aload_1
        34: invokevirtual #479                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        37: ifne          44
        40: iconst_1
        41: goto          45
        44: iconst_0
        45: invokevirtual #497                // Method org/sireum/B$.apply:(Z)Z
        48: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class org/sireum/Map, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Map, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 326: 0
        line 327: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/sireum/Map;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_0
         5: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
         8: invokevirtual #293                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        11: areturn
      LineNumberTable:
        line 331: 0
        line 332: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/Map;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=2, args_size=1
         0: getstatic     #502                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_2
        13: anewarray     #203                // class java/lang/String
        16: dup
        17: iconst_0
        18: ldc_w         #504                // String {\n    |
        21: aastore
        22: dup
        23: iconst_1
        24: ldc_w         #506                // String \n    |}
        27: aastore
        28: checkcast     #211                // class "[Ljava/lang/Object;"
        31: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        34: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        37: checkcast     #231                // class scala/collection/immutable/Seq
        40: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        43: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        46: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        49: iconst_1
        50: anewarray     #34                 // class org/sireum/ST$Arg
        53: dup
        54: iconst_0
        55: getstatic     #509                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
        58: aload_0
        59: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
        62: invokedynamic #518,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        67: invokevirtual #522                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        70: invokevirtual #525                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        73: getstatic     #530                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        76: ldc_w         #532                // String ,\n
        79: invokevirtual #535                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        82: invokevirtual #538                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
        85: aastore
        86: checkcast     #211                // class "[Ljava/lang/Object;"
        89: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        92: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        95: checkcast     #231                // class scala/collection/immutable/Seq
        98: ldc_w         #540                // String             st\"\"\"{\n    |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n    |}\"\"\"
       101: invokevirtual #543                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       104: astore_1
       105: aload_1
       106: invokevirtual #546                // Method org/sireum/ST.render:()Ljava/lang/String;
       109: areturn
      LineNumberTable:
        line 336: 0
        line 337: 24
        line 336: 40
        line 337: 58
        line 336: 98
        line 339: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          105       5     1     r   Lorg/sireum/ST;
            0     110     0  this   Lorg/sireum/Map;

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
         4: invokevirtual #293                // Method org/sireum/IS.size:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 343: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Map;

  public boolean isEqual(org.sireum.Map<K, T>);
    descriptor: (Lorg/sireum/Map;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=21, args_size=2
         0: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_0
         5: invokevirtual #487                // Method size:()Lorg/sireum/Z;
         8: astore        4
        10: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        13: invokevirtual #552                // Method org/sireum/package$.T:()Z
        16: istore        5
        18: aload         4
        20: aload_1
        21: invokevirtual #487                // Method size:()Lorg/sireum/Z;
        24: astore        6
        26: dup
        27: ifnonnull     39
        30: pop
        31: aload         6
        33: ifnull        58
        36: goto          47
        39: aload         6
        41: invokevirtual #479                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        44: ifne          58
        47: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        50: invokevirtual #555                // Method org/sireum/package$.F:()Z
        53: istore        5
        55: goto          360
        58: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        61: iconst_0
        62: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        65: astore        7
        67: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        70: getstatic     #157                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        73: iload         5
        75: aload         7
        77: aload         4
        79: invokeinterface #297,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        84: invokevirtual #559                // Method org/sireum/B$.$amp$extension:(ZZ)Z
        87: invokevirtual #165                // Method org/sireum/B$.$4B:(Z)Z
        90: ifeq          360
        93: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        96: pop
        97: aload_0
        98: invokevirtual #176                // Method entries:()Lorg/sireum/IS;
       101: aload         7
       103: invokevirtual #300                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       106: checkcast     #195                // class scala/Tuple2
       109: astore        11
       111: new           #195                // class scala/Tuple2
       114: dup
       115: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       118: aload         11
       120: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
       123: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       126: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       129: aload         11
       131: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
       134: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       137: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       140: astore        10
       142: aload         10
       144: ifnull        176
       147: aload         10
       149: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
       152: astore        12
       154: aload         10
       156: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
       159: astore        13
       161: new           #195                // class scala/Tuple2
       164: dup
       165: aload         12
       167: aload         13
       169: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       172: astore_3
       173: goto          189
       176: goto          179
       179: new           #355                // class scala/MatchError
       182: dup
       183: aload         10
       185: invokespecial #358                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       188: athrow
       189: aload_3
       190: astore        9
       192: new           #195                // class scala/Tuple2
       195: dup
       196: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       199: aload         9
       201: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
       204: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       207: getstatic     #350                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       210: aload         9
       212: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
       215: invokevirtual #353                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       218: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       221: astore        8
       223: aload         8
       225: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
       228: astore        14
       230: aload         8
       232: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
       235: astore        15
       237: aload_1
       238: aload         14
       240: invokevirtual #561                // Method get:(Ljava/lang/Object;)Lorg/sireum/Option;
       243: astore        16
       245: aload         16
       247: astore        17
       249: aload         17
       251: instanceof    #563                // class org/sireum/Some
       254: ifeq          323
       257: aload         17
       259: checkcast     #563                // class org/sireum/Some
       262: astore        18
       264: getstatic     #433                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       267: aload         18
       269: invokevirtual #566                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       272: astore        19
       274: aload         19
       276: invokevirtual #570                // Method scala/Some.isEmpty:()Z
       279: ifne          320
       282: aload         19
       284: invokevirtual #572                // Method scala/Some.get:()Ljava/lang/Object;
       287: astore        20
       289: aload         20
       291: aload         15
       293: invokestatic  #457                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       296: ifne          313
       299: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       302: invokevirtual #555                // Method org/sireum/package$.F:()Z
       305: istore        5
       307: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       310: goto          316
       313: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       316: astore_2
       317: goto          341
       320: goto          326
       323: goto          326
       326: getstatic     #242                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       329: invokevirtual #555                // Method org/sireum/package$.F:()Z
       332: istore        5
       334: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       337: astore_2
       338: goto          341
       341: aload         7
       343: getstatic     #285                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       346: iconst_1
       347: invokevirtual #288                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       350: invokeinterface #312,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       355: astore        7
       357: goto          67
       360: iload         5
       362: ireturn
      StackMapTable: number_of_entries = 14
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class org/sireum/Map, class org/sireum/Map, top, top, class org/sireum/Z, int, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 10 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 108
          locals = [ class org/sireum/Map, class org/sireum/Map, top, top, class org/sireum/Z, int, class org/sireum/Z, class org/sireum/Z, top, top, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/Map, class org/sireum/Map, top, class scala/Tuple2, class org/sireum/Z, int, class org/sireum/Z, class org/sireum/Z, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 123
          locals = [ class org/sireum/Map, class org/sireum/Map, top, class scala/Tuple2, class org/sireum/Z, int, class org/sireum/Z, class org/sireum/Z, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object, class java/lang/Object, class java/lang/Object, class org/sireum/Option, class org/sireum/Option, class org/sireum/Some, class scala/Some, class java/lang/Object ]
          stack = []
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/sireum/Map, class org/sireum/Map, class scala/runtime/BoxedUnit, class scala/Tuple2, class org/sireum/Z, int, class org/sireum/Z, class org/sireum/Z, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object, class java/lang/Object, class java/lang/Object, class org/sireum/Option, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class org/sireum/Map, class org/sireum/Map, top, top, class org/sireum/Z, int, class org/sireum/Z ]
          stack = []
      LineNumberTable:
        line 347: 0
        line 378: 4
        line 379: 10
        line 380: 18
        line 381: 47
        line 383: 58
        line 384: 67
        line 385: 93
        line 394: 97
        line 395: 237
        line 396: 245
        line 397: 249
        line 396: 282
        line 398: 289
        line 399: 299
        line 398: 313
        line 397: 320
        line 402: 326
        line 404: 341
        line 384: 357
        line 407: 360
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          111      29    11     x   Lscala/Tuple2;
          154      22    12   key   Ljava/lang/Object;
          161      15    13     v   Ljava/lang/Object;
          192      29     9     x   Lscala/Tuple2;
          289      31    20    v2   Ljava/lang/Object;
          230     127    14   key   Ljava/lang/Object;
          237     120    15     v   Ljava/lang/Object;
          245     112    16 v2Opt   Lorg/sireum/Option;
           67     293     7     i   Lorg/sireum/Z;
           10     353     4    sz   Lorg/sireum/Z;
           18     345     5     r   Z
            0     363     0  this   Lorg/sireum/Map;
            0     363     1 other   Lorg/sireum/Map;
    Signature: #548                         // (Lorg/sireum/Map<TK;TT;>;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #581                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Map;

  public static final void $anonfun$$plus$plus$1(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #416                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/Map
         8: aload_1
         9: invokevirtual #586                // Method $plus:(Lscala/Tuple2;)Lorg/sireum/Map;
        12: putfield      #416                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        15: return
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   r$1   Lscala/runtime/ObjectRef;
            0      16     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$1                            final
      kv                             final

  public static final void $anonfun$$minus$minus$1(org.sireum.Map, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=8, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #561                // Method get:(Ljava/lang/Object;)Lorg/sireum/Option;
         5: astore        4
         7: aload         4
         9: instanceof    #563                // class org/sireum/Some
        12: ifeq          81
        15: aload         4
        17: checkcast     #563                // class org/sireum/Some
        20: astore        5
        22: getstatic     #433                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        25: aload         5
        27: invokevirtual #566                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        30: astore        6
        32: aload         6
        34: invokevirtual #570                // Method scala/Some.isEmpty:()Z
        37: ifne          78
        40: aload         6
        42: invokevirtual #572                // Method scala/Some.get:()Ljava/lang/Object;
        45: astore        7
        47: aload_1
        48: aload_1
        49: getfield      #416                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        52: checkcast     #290                // class org/sireum/IS
        55: new           #195                // class scala/Tuple2
        58: dup
        59: aload_2
        60: aload         7
        62: invokespecial #223                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        65: invokevirtual #308                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        68: putfield      #416                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        71: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        74: astore_3
        75: goto          91
        78: goto          84
        81: goto          84
        84: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        87: astore_3
        88: goto          91
        91: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 78
          locals = [ class org/sireum/Map, class scala/runtime/ObjectRef, class java/lang/Object, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/Map, class scala/runtime/ObjectRef, class java/lang/Object, class scala/runtime/BoxedUnit, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 266: 0
        line 267: 7
        line 266: 40
        line 267: 47
        line 268: 84
        line 266: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           47      31     7 value   Ljava/lang/Object;
            0      92     0 $this   Lorg/sireum/Map;
            0      92     1 deletedMappings$1   Lscala/runtime/ObjectRef;
            0      92     2   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      deletedMappings$1              final
      key                            final

  public static final org.sireum.ST $anonfun$string$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/ST;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=15, locals=1, args_size=1
         0: getstatic     #502                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_3
        13: anewarray     #203                // class java/lang/String
        16: dup
        17: iconst_0
        18: getstatic     #596                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        21: ldc_w         #598                // String
        24: invokevirtual #601                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        27: aastore
        28: dup
        29: iconst_1
        30: getstatic     #596                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        33: ldc_w         #603                // String  ->
        36: invokevirtual #601                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        39: aastore
        40: dup
        41: iconst_2
        42: getstatic     #596                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        45: ldc_w         #598                // String
        48: invokevirtual #601                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        51: aastore
        52: checkcast     #211                // class "[Ljava/lang/Object;"
        55: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        58: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        61: checkcast     #231                // class scala/collection/immutable/Seq
        64: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        67: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        70: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        73: iconst_2
        74: anewarray     #34                 // class org/sireum/ST$Arg
        77: dup
        78: iconst_0
        79: getstatic     #606                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
        82: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        85: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        88: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        91: iconst_1
        92: anewarray     #5                  // class java/lang/Object
        95: dup
        96: iconst_0
        97: getstatic     #611                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       100: aload_0
       101: invokevirtual #304                // Method scala/Tuple2._1:()Ljava/lang/Object;
       104: invokevirtual #612                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       107: aastore
       108: invokevirtual #257                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       111: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       114: checkcast     #231                // class scala/collection/immutable/Seq
       117: ldc_w         #598                // String
       120: invokevirtual #615                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       123: aastore
       124: dup
       125: iconst_1
       126: getstatic     #606                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       129: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
       132: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       135: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       138: iconst_1
       139: anewarray     #5                  // class java/lang/Object
       142: dup
       143: iconst_0
       144: getstatic     #611                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       147: aload_0
       148: invokevirtual #320                // Method scala/Tuple2._2:()Ljava/lang/Object;
       151: invokevirtual #612                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       154: aastore
       155: invokevirtual #257                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       158: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       161: checkcast     #231                // class scala/collection/immutable/Seq
       164: ldc_w         #598                // String
       167: invokevirtual #615                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       170: aastore
       171: checkcast     #211                // class "[Ljava/lang/Object;"
       174: invokevirtual #215                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       177: invokevirtual #229                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       180: checkcast     #231                // class scala/collection/immutable/Seq
       183: ldc_w         #617                // String                                    st\"${e._1} -> ${e._2}\"
       186: invokevirtual #543                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       189: areturn
      LineNumberTable:
        line 337: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     190     0     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      e                              final

  public org.sireum.Map(org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #622                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #626                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #629                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #632                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #128                // Field _entries:Lorg/sireum/IS;
        21: return
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/Map;
            0      22     1 __entries   Lorg/sireum/IS;
    Signature: #618                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;)V
    MethodParameters:
      Name                           Flags
      __entries                      final

  public static final java.lang.Object $anonfun$$plus$plus$1$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #634                // Method $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         5: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$1   Lscala/runtime/ObjectRef;
            0       9     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$1                            final
      kv                             final

  public static final java.lang.Object $anonfun$$minus$minus$1$adapted(org.sireum.Map, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #636                // Method $anonfun$$minus$minus$1:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         6: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/Map;
            0      10     1 deletedMappings$1   Lscala/runtime/ObjectRef;
            0      10     2   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      deletedMappings$1              final
      key                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #648,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #21= #18 of #20;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static #24= #23 of #2;           // Entries$=class org/sireum/Map$Entries$ of class org/sireum/Map
  public static final #29= #26 of #28;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #32= #31 of #28;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #35= #34 of #28;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static final #38= #37 of #28;    // Templ=class org/sireum/ST$Templ of class org/sireum/ST
  public static #41= #40 of #28;          // Templ$=class org/sireum/ST$Templ$ of class org/sireum/ST
  public static #46= #43 of #45;          // $String$=class org/sireum/Z$$String$ of class org/sireum/Z
  public #51= #48 of #50;                 // Contract$=class org/sireum/contract$Contract$ of class org/sireum/contract
  public #54= #53 of #48;                 // Invariant=class org/sireum/contract$Contract$Invariant of class org/sireum/contract$Contract$
  public static #59= #56 of #58;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
Signature: #3                           // <K:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
SourceFile: "Map.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\r]u!\u0002\u001b6\u0011\u0003Qd!\u0002\u001f6\u0011\u0003i\u0004\"\u0002#\u0002\t\u0003)\u0005\"\u0002$\u0002\t\u00039\u0005b\u0002B2\u0003\u0011\u0005!Q\r\u0005\b\u0003O\u000bA\u0011\u0001B;\u0011\u001d\u0011\t*\u0001C\u0001\u0005\';qAa+\u0002\u0011\u0003\u0011iKB\u0004\u00032\u0006A\tAa-\t\r\u0011CA\u0011\u0001B[\u0011\u001d\tY\u0005\u0003C\u0001\u0005oCqAa3\t\t\u0003\u0011i\rC\u0004\u0003f\"!\tAa:\t\u000f\tu\b\u0002\"\u0001\u0003\u0000\"91q\u0003\u0005\u0005\u0002\re\u0001bBB\u001a\u0011\u0011\u00051Q\u0007\u0005\b\u0007\u001bBA\u0011AB(\u0011\u001d\t\t\"\u0001C\u0001\u0007OBqaa\u001f\u0002\t\u0003\u0019iH\u0002\u0003=k\tQ\u0005\u0002C(\u0014\u0005\u0003\u0005\u000b\u0011\u0002)\t\u000b\u0011\u001bB\u0011A6\t\r9\u001c\u0002\u0015!\u0003Q\u0011\u0015y7\u0003\"\u0001q\u0011\u0015\t8\u0003\"\u0001q\u0011\u0015\u00118\u0003\"\u0011t\u0011!a8\u0003#b\u0001\n\u0003j\bbBA\u0002\'\u0011\u0005\u0013Q\u0001\u0005\b\u0003#\u0019B\u0011AA\n\u0011%\t9bEI\u0001\n\u0003\tI\u0002\u0003\u0006\u00020MA)\u0019!C!\u0003cAq!a\u0013\u0014\t\u0003\ti\u0005C\u0004\u0002nM!\t!a\u001c\t\u000f\u0005m4\u0003\"\u0001\u0002~!9\u00111Q\n\u0005\u0002\u0005\u0015\u0005bBAK\'\u0011\u0005\u0011q\u0013\u0005\b\u0003;\u001bB\u0011AAP\u0011\u001d\t9k\u0005C\u0001\u0003SCq!a0\u0014\t\u0003\t\t\rC\u0004\u0002PN!\t!!5\t\u000f\u0005\u00058\u0003\"\u0001\u0002d\"9\u00111^\n\u0005\u0002\u00055\bbBA{\'\u0011\u0005\u0011q\u001f\u0005\b\u0005\u0007\u0019B\u0011\u0001B\u0003\u0011\u001d\u0011\u0019b\u0005C\u0001\u0005+AqAa\u0007\u0014\t\u0003\u0011i\u0002C\u0004\u0003*M!\tAa\u000b\t\u000f\t=2\u0003\"\u0001\u0003,!9!1G\n\u0005\u0002\tU\u0002b\u0002B\u001d\'\u0011\u0005#1\b\u0005\b\u0005\u0007\u001aB\u0011\tB\u001b\u0011\u001d\u00119e\u0005C\u0001\u0005\u0013\n1!T1q\u0015\t1t\'\u0001\u0004tSJ,W/\u001c\u0006\u0002q\u0005\u0019qN]4\u0004\u0001A\u00111(A\u0007\u0002k\t\u0019Q*\u00199\u0014\u0005\u0005q\u0004CA C\u001b\u0005\u0001%\"A!\u0002\u000bM\u001c\u0017\r\\1\n\u0005\r\u0003%AB!osJ+g-\u0001\u0004=S:LGO\u0010\u000b\u0002u\u0005)Q-\u001c9usV)\u0001Ja\u0017\u0003`U\t\u0011\n\u0005\u0004<\'\te#QL\u000b\u0004\u0017~K7cA\n?\u0019B\u00111(T\u0005\u0003\u001dV\u00121\u0002R1uCRL\b/Z*jO\u0006IqlX3oiJLWm\u001d\t\u0004#RSfBA\u001eS\u0013\t\u0019V\'A\u0004qC\u000e\\\u0017mZ3\n\u0005U3&aA%T5&\u0011q\u000b\u0017\u0002\r!\u0006\u001c7.Y4f)J\f\u0017\u000e\u001e\u0006\u00033V\n\u0011\u0002J5oi\u0016\u0014h.\u00197\u0011\t}ZV\f[\u0005\u00039\u0002\u0013a\u0001V;qY\u0016\u0014\u0004C\u00010`\u0019\u0001!Q\u0001Y\nC\u0002\u0005\u0014\u0011aS\t\u0003E\u0016\u0004\"aP2\n\u0005\u0011\u0004%a\u0002(pi\"Lgn\u001a\t\u0003\u007f\u0019L!a\u001a!\u0003\u0007\u0005s\u0017\u0010\u0005\u0002_S\u0012)!n\u0005b\u0001C\n\tA\u000b\u0006\u0002m[B!1hE/i\u0011\u0015yU\u00031\u0001Q\u0003!yVM\u001c;sS\u0016\u001c\u0018aB3oiJLWm]\u000b\u0002!\u0006Qq-\u001a;F]R\u0014\u0018.Z:\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012\u0001\u001e\t\u0003kjl\u0011A\u001e\u0006\u0003ob\fA\u0001\\1oO*\t\u00110\u0001\u0003kCZ\f\u0017BA>w\u0005\u0019\u0019FO]5oO\u0006A\u0001.Y:i\u0007>$W-F\u0001\u007f!\tyt0C\u0002\u0002\u0002\u0001\u00131!\u00138u\u0003\u0019)\u0017/^1mgR!\u0011qAA\u0007!\ry\u0014\u0011B\u0005\u0004\u0003\u0017\u0001%a\u0002\"p_2,\u0017M\u001c\u0005\u0007\u0003\u001fY\u0002\u0019A3\u0002\u0003=\fQ!\u00199qYf$2\u0001\\A\u000b\u0011\u001dyG\u0004%AA\u0002A\u000bq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0003\u00037Q3\u0001UA\u000fW\t\ty\u0002\u0005\u0003\u0002\"\u0005-RBAA\u0012\u0015\u0011\t)#a\n\u0002\u0013Ut7\r[3dW\u0016$\'bAA\u0015\u0001\u0006Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u00055\u00121\u0005\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017\u0001\u0003\u0013d_:$XM\u001c;\u0016\u0005\u0005M\u0002CBA\u001b\u0003\u0007\nIE\u0004\u0003\u00028\u0005\u0005c\u0002BA\u001d\u0003\u007fi!!a\u000f\u000b\u0007\u0005u\u0012(\u0001\u0004=e>|GOP\u0005\u0002\u0003&\u00111\u000bQ\u0005\u0005\u0003\u000b\n9EA\u0002TKFT!a\u0015!\u0011\t}ZF/Z\u0001\u000bk:L\u0017/^3LKf\u001cXCAA(!\u0011\t\t&a\u0018\u000f\t\u0005M\u0013q\u000b\t\u0004w\u0005U#BA*6\u0013\u0011\tI&a\u0017\u0002\u0011\r{g\u000e\u001e:bGRL1!!\u00186\u0005!\u0019wN\u001c;sC\u000e$\u0018\u0002BA1\u0003G\u0012\u0011\"\u00138wCJL\u0017M\u001c;\u000b\t\u0005e\u00131\f\u0015\u0004?\u0005\u001d\u0004cA\u001e\u0002j%\u0019\u00111N\u001b\u0003\tM\u0004XmY\u0001\u0005W\u0016L8/\u0006\u0002\u0002rA\u0019\u0011\u000bV/)\u0007\u0001\n)\bE\u0002<\u0003oJ1!!\u001f6\u0005\u0011\u0001XO]3\u0002\rY\fG.^3t+\t\ty\bE\u0002R)\"D3!IA;\u0003\u0019YW-_*fiV\u0011\u0011q\u0011\t\u0005w\u0005%U,C\u0002\u0002\fV\u00121aU3uQ\r\u0011\u0013q\u0012\t\u0004w\u0005E\u0015bAAJk\tQ1\u000f\u001e:jGR\u0004XO]3\u0002\u0011Y\fG.^3TKR,\"!!\'\u0011\tm\nI\t\u001b\u0015\u0004G\u0005=\u0015!\u0002\u0013qYV\u001cHc\u00017\u0002\"\"1\u00111\u0015\u0013A\u0002i\u000b\u0011\u0001\u001d\u0015\u0004I\u0005U\u0014A\u0003\u0013qYV\u001cH\u0005\u001d7vgV!\u00111VA])\ra\u0017Q\u0016\u0005\b\u0003_+\u0003\u0019AAY\u0003\rYgo\u001d\t\u0007w\u0005M\u0016q\u0017.\n\u0007\u0005UVG\u0001\u0002J\'B\u0019a,!/\u0005\r\u0005mVE1\u0001b\u0005\u0005I\u0005fA\u0013\u0002v\u0005\u0019q-\u001a;\u0015\t\u0005\r\u0017\u0011\u001a\t\u0005w\u0005\u0015\u0007.C\u0002\u0002HV\u0012aa\u00149uS>t\u0007BBAfM\u0001\u0007Q,A\u0002lKfD3AJA;\u0003%9W\r^(s\u000b2\u001cX\rF\u0003i\u0003\'\f)\u000e\u0003\u0004\u0002L\u001e\u0002\r!\u0018\u0005\t\u0003/<C\u00111\u0001\u0002Z\u00069A-\u001a4bk2$\b\u0003B \u0002\\\"L1!!8A\u0005!a$-\u001f8b[\u0016t\u0004fA\u0014\u0002v\u0005qq-\u001a;Pe\u0016c7/Z#bO\u0016\u0014H#\u00025\u0002f\u0006\u001d\bBBAfQ\u0001\u0007Q\f\u0003\u0004\u0002X\"\u0002\r\u0001\u001b\u0015\u0004Q\u0005U\u0014!B3oiJLH\u0003BAx\u0003c\u0004BaOAc5\"1\u00111Z\u0015A\u0002uC3!KA;\u0003\u001dIg\u000eZ3y\u001f\u001a$B!!?\u0002\u0000B\u00191(a?\n\u0007\u0005uXGA\u0001[\u0011\u0019\tYM\u000ba\u0001;\"\u001a!&!\u001e\u0002\u0019\u0011j\u0017N\\;tI5Lg.^:\u0016\t\t\u001d!q\u0002\u000b\u0004Y\n%\u0001bBA7W\u0001\u0007!1\u0002\t\u0007w\u0005M&QB/\u0011\u0007y\u0013y\u0001\u0002\u0004\u0002<.\u0012\r!\u0019\u0015\u0004W\u0005U\u0014A\u0002\u0013nS:,8\u000fF\u0002m\u0005/Aa!a)-\u0001\u0004Q\u0006f\u0001\u0017\u0002v\u0005A1m\u001c8uC&t7\u000f\u0006\u0003\u0003 \t\u0015\u0002cA\u001e\u0003\"%\u0019!1E\u001b\u0003\u0003\tCa!a3.\u0001\u0004i\u0006fA\u0017\u0002v\u00059\u0011n]#naRLXC\u0001B\u0010Q\rq\u0013QO\u0001\t]>tW)\u001c9us\"\u001aq&!\u001e\u0002\tML\'0Z\u000b\u0003\u0003sD3\u0001MA;\u0003\u0019\u0019HO]5oOV\u0011!Q\b\t\u0004w\t}\u0012BA>6Q\r\t\u0014QO\u0001\u0005Q\u0006\u001c\b\u000eK\u00023\u0003k\nq![:FcV\fG\u000e\u0006\u0003\u0003 \t-\u0003B\u0002B\'g\u0001\u0007A.A\u0003pi\",\'\u000fK\u00024\u0003kB3a\u0005B*!\rY$QK\u0005\u0004\u0005/*$\u0001\u00033bi\u0006$\u0018\u0010]3\u0011\u0007y\u0013Y\u0006B\u0003a\u0007\t\u0007\u0011\rE\u0002_\u0005?\"QA[\u0002C\u0002\u0005D3aAAH\u0003\tyg-\u0006\u0004\u0003h\t5$\u0011O\u000b\u0003\u0005S\u0002baO\n\u0003l\t=\u0004c\u00010\u0003n\u0011)\u0001\r\u0002b\u0001CB\u0019aL!\u001d\u0005\u000b)$!\u0019A1)\u0007\u0011\ty)\u0006\u0005\u0003x\tu$\u0011\u0011BF)\u0011\u0011IHa!\u0011\rm\u001a\"1\u0010B@!\rq&Q\u0010\u0003\u0006A\u0016\u0011\r!\u0019\t\u0004=\n\u0005E!\u00026\u0006\u0005\u0004\t\u0007b\u0002BC\u000b\u0001\u0007!qQ\u0001\u0002gB91(a-\u0003\n\n5\u0005c\u00010\u0003\f\u00121\u00111X\u0003C\u0002\u0005\u0004baP.\u0003|\t}\u0004fA\u0003\u0002\u0010\u0006IQM\u001c;sS\u0016\u001cxJZ\u000b\u0007\u0005+\u0013iJ!)\u0015\t\t]%1\u0015\t\u0005#R\u0013I\n\u0005\u0004@7\nm%q\u0014\t\u0004=\nuE!\u00021\u0007\u0005\u0004\t\u0007c\u00010\u0003\"\u0012)!N\u0002b\u0001C\"9!Q\u0015\u0004A\u0002\t\u001d\u0016!A7\u0011\rm\u001a\"1\u0014BPQ\r1\u0011qR\u0001\b\u000b:$(/[3t!\r\u0011y\u000bC\u0007\u0002\u0003\t9QI\u001c;sS\u0016\u001c8C\u0001\u0005?)\t\u0011i+\u0006\u0004\u0003:\n\r\'q\u0019\u000b\u0005\u0005?\u0011Y\f\u0003\u0004p\u0015\u0001\u0007!Q\u0018\t\u0005#R\u0013y\f\u0005\u0004@7\n\u0005\'Q\u0019\t\u0004=\n\rG!\u00021\u000b\u0005\u0004\t\u0007c\u00010\u0003H\u0012)!N\u0003b\u0001C\"\u001a!\"a$\u0002\u000f\r|g\u000e^1j]V1!q\u001aBm\u0005;$bAa\b\u0003R\n}\u0007BB8\f\u0001\u0004\u0011\u0019\u000e\u0005\u0003R)\nU\u0007CB \\\u0005/\u0014Y\u000eE\u0002_\u00053$Q\u0001Y\u0006C\u0002\u0005\u00042A\u0018Bo\t\u0015Q7B1\u0001b\u0011\u001d\u0011\to\u0003a\u0001\u0005+\f!a\u001b<)\u0007-\ty)\u0001\u0006d_:$\u0018-\u001b8LKf,bA!;\u0003t\n]HC\u0002B\u0010\u0005W\u0014I\u0010\u0003\u0004p\u0019\u0001\u0007!Q\u001e\t\u0005#R\u0013y\u000f\u0005\u0004@7\nE(Q\u001f\t\u0004=\nMH!\u00021\r\u0005\u0004\t\u0007c\u00010\u0003x\u0012)!\u000e\u0004b\u0001C\"9\u00111\u001a\u0007A\u0002\tE\bf\u0001\u0007\u0002\u0010\u0006a1m\u001c8uC&tg+\u00197vKV11\u0011AB\u0006\u0007\u001f!bAa\b\u0004\u0004\rE\u0001BB8\u000e\u0001\u0004\u0019)\u0001\u0005\u0003R)\u000e\u001d\u0001CB \\\u0007\u0013\u0019i\u0001E\u0002_\u0007\u0017!Q\u0001Y\u0007C\u0002\u0005\u00042AXB\b\t\u0015QWB1\u0001b\u0011\u001d\u0019\u0019\"\u0004a\u0001\u0007\u001b\tQA^1mk\u0016D3!DAH\u00039YW-_%oI\u0016DxJ\u001a$s_6,baa\u0007\u0004&\r%B\u0003CA}\u0007;\u0019Yc!\f\t\r=t\u0001\u0019AB\u0010!\u0011\tFk!\t\u0011\r}Z61EB\u0014!\rq6Q\u0005\u0003\u0006A:\u0011\r!\u0019\t\u0004=\u000e%B!\u00026\u000f\u0005\u0004\t\u0007bBAf\u001d\u0001\u000711\u0005\u0005\b\u0007_q\u0001\u0019AA}\u0003\u00111\'o\\7)\u00079\ty)\u0001\twC2,X-\u00138eKb|eM\u0012:p[V11qGB!\u0007\u000b\"\u0002\"!?\u0004:\r\u001d3\u0011\n\u0005\u0007_>\u0001\raa\u000f\u0011\tE#6Q\b\t\u0007\u007fm\u001byda\u0011\u0011\u0007y\u001b\t\u0005B\u0003a\u001f\t\u0007\u0011\rE\u0002_\u0007\u000b\"QA[\bC\u0002\u0005Dqaa\u0005\u0010\u0001\u0004\u0019\u0019\u0005C\u0004\u00040=\u0001\r!!?)\u0007=\ty)A\u0006j]\u0012,\u0007p\u00144Ge>lWCBB)\u00077\u001ay\u0006\u0006\u0005\u0002z\u000eM3\u0011MB2\u0011\u0019y\u0007\u00031\u0001\u0004VA!\u0011\u000bVB,!\u0019y4l!\u0017\u0004^A\u0019ala\u0017\u0005\u000b\u0001\u0004\"\u0019A1\u0011\u0007y\u001by\u0006B\u0003k!\t\u0007\u0011\rC\u0004\u0003bB\u0001\raa\u0016\t\u000f\r=\u0002\u00031\u0001\u0002z\"\u001a\u0001#a$\u0016\r\r%4qNB:)\u0011\u0019Yg!\u001e\u0011\rm\u001a2QNB9!\rq6q\u000e\u0003\u0006AF\u0011\r!\u0019\t\u0004=\u000eMD!\u00026\u0012\u0005\u0004\t\u0007BB8\u0012\u0001\u0004\u00199\b\u0005\u0003R)\u000ee\u0004CB \\\u0007[\u001a\t(A\u0004v]\u0006\u0004\b\u000f\\=\u0016\r\r}4QRBI)\u0011\u0019\tia%\u0011\u000b}\u001a\u0019ia\"\n\u0007\r\u0015\u0005I\u0001\u0003T_6,\u0007\u0003B)U\u0007\u0013\u0003baP.\u0004\f\u000e=\u0005c\u00010\u0004\u000e\u0012)\u0001M\u0005b\u0001CB\u0019al!%\u0005\u000b)\u0014\"\u0019A1\t\u000f\u0005=!\u00031\u0001\u0004\u0016B11hEBF\u0007\u001f\u0003"
    )
BootstrapMethods:
  0: #406 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #390 (Ljava/lang/Object;)Ljava/lang/Object;
      #395 REF_invokeStatic org/sireum/Map.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #397 (Lscala/Tuple2;)Ljava/lang/Object;
      #398 5
      #399 1
      #397 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #406 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #390 (Ljava/lang/Object;)Ljava/lang/Object;
      #467 REF_invokeStatic org/sireum/Map.$anonfun$$minus$minus$1$adapted:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #390 (Ljava/lang/Object;)Ljava/lang/Object;
      #399 1
  2: #406 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #390 (Ljava/lang/Object;)Ljava/lang/Object;
      #514 REF_invokeStatic org/sireum/Map.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
      #515 (Lscala/Tuple2;)Lorg/sireum/ST;
      #398 5
      #399 1
      #515 (Lscala/Tuple2;)Lorg/sireum/ST;
  3: #645 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #467 REF_invokeStatic org/sireum/Map.$anonfun$$minus$minus$1$adapted:(Lorg/sireum/Map;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #395 REF_invokeStatic org/sireum/Map.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #514 REF_invokeStatic org/sireum/Map.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  ScalaInlineInfo: length = 0xD6 (unknown attribute)
   01 01 00 2A 02 4B 02 4C 01 01 CF 01 D0 01 02 46
   02 47 01 01 87 01 88 01 01 FE 01 FF 01 00 61 00
   62 01 00 74 01 2E 01 00 74 00 75 01 00 3E 00 B2
   01 00 B1 00 B2 01 00 6A 00 6B 01 00 70 00 6B 01
   01 CA 01 57 01 01 CD 00 A8 01 01 35 01 57 01 01
   4F 00 A8 01 00 AA 00 AB 01 00 A7 00 A8 01 00 AE
   00 7D 01 01 E1 00 98 01 00 7C 00 7D 01 01 C2 01
   A3 01 00 97 00 98 01 01 A2 01 A3 01 00 81 00 7D
   01 01 B6 01 B7 01 01 BF 01 C0 01 00 8B 00 8C 01
   00 3C 00 88 01 00 87 00 88 01 01 67 01 68 01 01
   E6 00 6B 01 00 9E 00 9F 01 01 41 01 42 01 01 05
   00 7D 01 01 D7 00 6B 01 01 23 00 8C 01 00 84 00
   83 01 00 82 00 83 01 00 EC 00 ED 01 01 53 01 42
   01 01 3C 00 7D 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
