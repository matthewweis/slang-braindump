Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/conversions/C_Ext$.class
  Last modified May 29, 2022; size 2989 bytes
  SHA-256 checksum 0bc33aad90526c56fee78803dd99e1b3ca979b451403f13c28a4a4aef408b5f1
  Compiled from "extension.scala"
public final class org.sireum.conversions.C_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/C_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 7, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/conversions/C_Ext$
    #2 = Class              #1            // org/sireum/conversions/C_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               extension.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$ISZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               ISZ$
   #16 = Utf8               MODULE$
   #17 = Utf8               Lorg/sireum/conversions/C_Ext$;
   #18 = Utf8               <clinit>
   #19 = Utf8               ()V
   #20 = Utf8               <init>
   #21 = NameAndType        #20:#19       // "<init>":()V
   #22 = Methodref          #2.#21        // org/sireum/conversions/C_Ext$."<init>":()V
   #23 = NameAndType        #16:#17       // MODULE$:Lorg/sireum/conversions/C_Ext$;
   #24 = Fieldref           #2.#23        // org/sireum/conversions/C_Ext$.MODULE$:Lorg/sireum/conversions/C_Ext$;
   #25 = Utf8               toU32
   #26 = Utf8               (I)I
   #27 = Utf8               c
   #28 = Utf8               org/sireum/U32$
   #29 = Class              #28           // org/sireum/U32$
   #30 = Utf8               Lorg/sireum/U32$;
   #31 = NameAndType        #16:#30       // MODULE$:Lorg/sireum/U32$;
   #32 = Fieldref           #29.#31       // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
   #33 = Utf8               apply
   #34 = NameAndType        #33:#26       // apply:(I)I
   #35 = Methodref          #29.#34       // org/sireum/U32$.apply:(I)I
   #36 = Utf8               this
   #37 = Utf8               I
   #38 = Utf8               toCodePoints
   #39 = Utf8               (I)Lorg/sireum/IS;
   #40 = Utf8               (I)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/C;>;
   #41 = Utf8               org/sireum/package$
   #42 = Class              #41           // org/sireum/package$
   #43 = Utf8               Lorg/sireum/package$;
   #44 = NameAndType        #16:#43       // MODULE$:Lorg/sireum/package$;
   #45 = Fieldref           #42.#44       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #46 = Utf8               ISZ
   #47 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #48 = NameAndType        #46:#47       // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #49 = Methodref          #42.#48       // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #50 = Utf8               scala/collection/ArrayOps$
   #51 = Class              #50           // scala/collection/ArrayOps$
   #52 = Utf8               Lscala/collection/ArrayOps$;
   #53 = NameAndType        #16:#52       // MODULE$:Lscala/collection/ArrayOps$;
   #54 = Fieldref           #51.#53       // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
   #55 = Utf8               scala/Predef$
   #56 = Class              #55           // scala/Predef$
   #57 = Utf8               Lscala/Predef$;
   #58 = NameAndType        #16:#57       // MODULE$:Lscala/Predef$;
   #59 = Fieldref           #56.#58       // scala/Predef$.MODULE$:Lscala/Predef$;
   #60 = Utf8               java/lang/Character
   #61 = Class              #60           // java/lang/Character
   #62 = Utf8               toChars
   #63 = Utf8               (I)[C
   #64 = NameAndType        #62:#63       // toChars:(I)[C
   #65 = Methodref          #61.#64       // java/lang/Character.toChars:(I)[C
   #66 = Utf8               charArrayOps
   #67 = Utf8               ([C)Ljava/lang/Object;
   #68 = NameAndType        #66:#67       // charArrayOps:([C)Ljava/lang/Object;
   #69 = Methodref          #56.#68       // scala/Predef$.charArrayOps:([C)Ljava/lang/Object;
   #70 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #71 = MethodType         #70           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #72 = Utf8               $anonfun$toCodePoints$1$adapted
   #73 = NameAndType        #72:#70       // $anonfun$toCodePoints$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #74 = Methodref          #2.#73        // org/sireum/conversions/C_Ext$.$anonfun$toCodePoints$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #75 = MethodHandle       6:#74         // REF_invokeStatic org/sireum/conversions/C_Ext$.$anonfun$toCodePoints$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #76 = Integer            1
   #77 = Utf8               java/lang/invoke/LambdaMetafactory
   #78 = Class              #77           // java/lang/invoke/LambdaMetafactory
   #79 = Utf8               altMetafactory
   #80 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = NameAndType        #79:#80       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #82 = Methodref          #78.#81       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = MethodHandle       6:#82         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #84 = Utf8               ()Lscala/Function1;
   #85 = NameAndType        #33:#84       // apply:()Lscala/Function1;
   #86 = InvokeDynamic      #0:#85        // #0:apply:()Lscala/Function1;
   #87 = Utf8               scala/reflect/ClassTag$
   #88 = Class              #87           // scala/reflect/ClassTag$
   #89 = Utf8               Lscala/reflect/ClassTag$;
   #90 = NameAndType        #16:#89       // MODULE$:Lscala/reflect/ClassTag$;
   #91 = Fieldref           #88.#90       // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
   #92 = Utf8               org/sireum/C
   #93 = Class              #92           // org/sireum/C
   #94 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #95 = NameAndType        #33:#94       // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #96 = Methodref          #88.#95       // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #97 = Utf8               map$extension
   #98 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
   #99 = NameAndType        #97:#98       // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #100 = Methodref          #51.#99       // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #101 = Utf8               genericArrayOps
  #102 = NameAndType        #101:#70      // genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
  #103 = Methodref          #56.#102      // scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
  #104 = Utf8               toSeq$extension
  #105 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #106 = NameAndType        #104:#105     // toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #107 = Methodref          #51.#106      // scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #108 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #109 = NameAndType        #33:#108      // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #110 = Methodref          #12.#109      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #111 = Utf8               $anonfun$toCodePoints$1
  #112 = Utf8               (C)I
  #113 = Utf8               x$1
  #114 = Utf8               org/sireum/C$
  #115 = Class              #114          // org/sireum/C$
  #116 = Utf8               Lorg/sireum/C$;
  #117 = NameAndType        #16:#116      // MODULE$:Lorg/sireum/C$;
  #118 = Fieldref           #115.#117     // org/sireum/C$.MODULE$:Lorg/sireum/C$;
  #119 = NameAndType        #33:#112      // apply:(C)I
  #120 = Methodref          #115.#119     // org/sireum/C$.apply:(C)I
  #121 = Utf8               C
  #122 = Methodref          #4.#21        // java/lang/Object."<init>":()V
  #123 = Utf8               scala/runtime/BoxesRunTime
  #124 = Class              #123          // scala/runtime/BoxesRunTime
  #125 = Utf8               unboxToChar
  #126 = Utf8               (Ljava/lang/Object;)C
  #127 = NameAndType        #125:#126     // unboxToChar:(Ljava/lang/Object;)C
  #128 = Methodref          #124.#127     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #129 = NameAndType        #111:#112     // $anonfun$toCodePoints$1:(C)I
  #130 = Methodref          #2.#129       // org/sireum/conversions/C_Ext$.$anonfun$toCodePoints$1:(C)I
  #131 = Utf8               (I)V
  #132 = NameAndType        #20:#131      // "<init>":(I)V
  #133 = Methodref          #93.#132      // org/sireum/C."<init>":(I)V
  #134 = Utf8               Ljava/lang/Object;
  #135 = Utf8               $deserializeLambda$
  #136 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #137 = Utf8               scala/runtime/LambdaDeserialize
  #138 = Class              #137          // scala/runtime/LambdaDeserialize
  #139 = Utf8               bootstrap
  #140 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #141 = NameAndType        #139:#140     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #142 = Methodref          #138.#141     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #143 = MethodHandle       6:#142        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #144 = Utf8               lambdaDeserialize
  #145 = NameAndType        #144:#136     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #146 = InvokeDynamic      #1:#145       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #147 = Utf8               Code
  #148 = Utf8               LineNumberTable
  #149 = Utf8               LocalVariableTable
  #150 = Utf8               MethodParameters
  #151 = Utf8               Signature
  #152 = Utf8               InnerClasses
  #153 = Utf8               SourceFile
  #154 = Utf8               BootstrapMethods
  #155 = Utf8               ScalaInlineInfo
  #156 = Utf8               Scala
{
  public static final org.sireum.conversions.C_Ext$ MODULE$;
    descriptor: Lorg/sireum/conversions/C_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/C_Ext$
         3: dup
         4: invokespecial #22                 // Method "<init>":()V
         7: putstatic     #24                 // Field MODULE$:Lorg/sireum/conversions/C_Ext$;
        10: return
      LineNumberTable:
        line 94: 0

  public int toU32(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #32                 // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
         3: iload_1
         4: invokevirtual #35                 // Method org/sireum/U32$.apply:(I)I
         7: ireturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/C_Ext$;
            0       8     1     c   I
    MethodParameters:
      Name                           Flags
      c                              final

  public org.sireum.IS<org.sireum.Z, org.sireum.C> toCodePoints(int);
    descriptor: (I)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #45                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #49                 // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #54                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         9: getstatic     #59                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: getstatic     #54                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        15: getstatic     #59                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        18: iload_1
        19: invokestatic  #65                 // Method java/lang/Character.toChars:(I)[C
        22: invokevirtual #69                 // Method scala/Predef$.charArrayOps:([C)Ljava/lang/Object;
        25: invokedynamic #86,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        30: getstatic     #91                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        33: ldc           #93                 // class org/sireum/C
        35: invokevirtual #96                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        38: invokevirtual #100                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        41: invokevirtual #103                // Method scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
        44: invokevirtual #107                // Method scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
        47: invokevirtual #110                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        50: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lorg/sireum/conversions/C_Ext$;
            0      51     1     c   I
    Signature: #40                          // (I)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/C;>;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final int $anonfun$toCodePoints$1(char);
    descriptor: (C)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #118                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         3: iload_0
         4: invokevirtual #120                // Method org/sireum/C$.apply:(C)I
         7: ireturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   C
    MethodParameters:
      Name                           Flags
      x$1                            final

  private org.sireum.conversions.C_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #122                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/C_Ext$;

  public static final java.lang.Object $anonfun$toCodePoints$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #93                 // class org/sireum/C
         3: dup
         4: aload_0
         5: invokestatic  #128                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         8: invokestatic  #130                // Method $anonfun$toCodePoints$1:(C)I
        11: invokespecial #133                // Method org/sireum/C."<init>":(I)V
        14: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #146,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
SourceFile: "extension.scala"
BootstrapMethods:
  0: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #71 (Ljava/lang/Object;)Ljava/lang/Object;
      #75 REF_invokeStatic org/sireum/conversions/C_Ext$.$anonfun$toCodePoints$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #71 (Ljava/lang/Object;)Ljava/lang/Object;
      #76 1
  1: #143 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #75 REF_invokeStatic org/sireum/conversions/C_Ext$.$anonfun$toCodePoints$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 6F 00 70 01 00 48 00 46 01 00 14
   00 13 01 00 26 00 27 01 00 19 00 1A 01
  Scala: length = 0x0 (unknown attribute)

