Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/jdk/DoubleAccumulatorStepper.class
  Last modified May 29, 2022; size 8642 bytes
  SHA-256 checksum c8a43b57cf3b235e756b71ad957b394ad504927df50085492ec3572b924fa85b
  Compiled from "DoubleAccumulator.scala"
public class scala.jdk.DoubleAccumulatorStepper implements scala.collection.DoubleStepper,scala.collection.Stepper$EfficientSplit
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/jdk/DoubleAccumulatorStepper
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 6, methods: 38, attributes: 5
Constant pool:
    #1 = Utf8               scala/jdk/DoubleAccumulatorStepper
    #2 = Class              #1            // scala/jdk/DoubleAccumulatorStepper
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/collection/DoubleStepper
    #6 = Class              #5            // scala/collection/DoubleStepper
    #7 = Utf8               scala/collection/Stepper$EfficientSplit
    #8 = Class              #7            // scala/collection/Stepper$EfficientSplit
    #9 = Utf8               DoubleAccumulator.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005=b!B\u000e\u001d\u0001q\u0001\u0003\u0002\u0003\u001e\u0001\u0005\u000b\u0007I\u0011B\u001e\t\u0011\u0001\u0003!\u0011!Q\u0001\nqBQ!\u0011\u0001\u0005\u0002\tCq!\u0012\u0001A\u0002\u0013%a\tC\u0004K\u0001\u0001\u0007I\u0011B&\t\rE\u0003\u0001\u0015)\u0003H\u0011\u001d\u0011\u0006\u00011A\u0005\n\u0019Cqa\u0015\u0001A\u0002\u0013%A\u000b\u0003\u0004W\u0001\u0001\u0006Ka\u0012\u0005\b/\u0002\u0001\r\u0011\"\u0003Y\u0011\u001dy\u0006\u00011A\u0005\n\u0001DaA\u0019\u0001!B\u0013I\u0006bB2\u0001\u0001\u0004%I\u0001\u001a\u0005\bQ\u0002\u0001\r\u0011\"\u0003j\u0011\u0019Y\u0007\u0001)Q\u0005K\"9A\u000e\u0001a\u0001\n\u0013!\u0007bB7\u0001\u0001\u0004%IA\u001c\u0005\u0007a\u0002\u0001\u000b\u0015B3\t\u000bE\u0004A\u0011\u0002:\t\u000bU\u0004A\u0011\u0002<\t\u000b]\u0004A\u0011\u0001$\t\u000ba\u0004A\u0011\u00013\t\u000be\u0004A\u0011\u0001>\t\u000by\u0004A\u0011A@\t\u000f\u0005\u0005\u0001\u0001\"\u0001\u0002\u0004!9\u0011Q\u0001\u0001\u0005B\u0005\u001d!\u0001\u0007#pk\ndW-Q2dk6,H.\u0019;peN#X\r\u001d9fe*\u0011QDH\u0001\u0004U\u0012\\\'\"A\u0010\u0002\u000bM\u001c\u0017\r\\1\u0014\t\u0001\tSe\u000b\t\u0003E\rj\u0011AH\u0005\u0003Iy\u0011a!\u00118z%\u00164\u0007C\u0001\u0014*\u001b\u00059#B\u0001\u0015\u001f\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003U\u001d\u0012Q\u0002R8vE2,7\u000b^3qa\u0016\u0014\bC\u0001\u00178\u001d\tiSG\u0004\u0002/i9\u0011qfM\u0007\u0002a)\u0011\u0011GM\u0001\u0007yI|w\u000e\u001e \u0004\u0001%\tq$\u0003\u0002)=%\u0011agJ\u0001\b\'R,\u0007\u000f]3s\u0013\tA\u0014H\u0001\bFM\u001aL7-[3oiN\u0003H.\u001b;\u000b\u0005Y:\u0013aA1dGV\tA\b\u0005\u0002>}5\tA$\u0003\u0002@9\t\tBi\\;cY\u0016\f5mY;nk2\fGo\u001c:\u0002\t\u0005\u001c7\rI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005\r#\u0005CA\u001f\u0001\u0011\u0015Q4\u00011\u0001=\u0003\u0005AW#A$\u0011\u0005\tB\u0015BA%\u001f\u0005\rIe\u000e^\u0001\u0006Q~#S-\u001d\u000b\u0003\u0019>\u0003\"AI\'\n\u00059s\"\u0001B+oSRDq\u0001U\u0003\u0002\u0002\u0003\u0007q)A\u0002yIE\n!\u0001\u001b\u0011\u0002\u0003%\fQ![0%KF$\"\u0001T+\t\u000fAC\u0011\u0011!a\u0001\u000f\u0006\u0011\u0011\u000eI\u0001\u0002CV\t\u0011\fE\u0002#5rK!a\u0017\u0010\u0003\u000b\u0005\u0013(/Y=\u0011\u0005\tj\u0016B\u00010\u001f\u0005\u0019!u.\u001e2mK\u0006)\u0011m\u0018\u0013fcR\u0011A*\u0019\u0005\b!.\t\t\u00111\u0001Z\u0003\t\t\u0007%A\u0001o+\u0005)\u0007C\u0001\u0012g\u0013\t9gD\u0001\u0003M_:<\u0017!\u00028`I\u0015\fHC\u0001\'k\u0011\u001d\u0001f\"!AA\u0002\u0015\f!A\u001c\u0011\u0002\u00039\u000bQAT0%KF$\"\u0001T8\t\u000fA\u000b\u0012\u0011!a\u0001K\u0006\u0011a\nI\u0001\u000eIV\u0004H.[2bi\u0016\u001cV\r\u001c4\u0015\u0005\r\u001b\b\"\u0002;\u0014\u0001\u0004)\u0017!\u00027j[&$\u0018\u0001\u00037pC\u0012luN]3\u0015\u00031\u000bqb\u00195be\u0006\u001cG/\u001a:jgRL7m]\u0001\rKN$\u0018.\\1uKNK\'0Z\u0001\bQ\u0006\u001c8\u000b^3q+\u0005Y\bC\u0001\u0012}\u0013\tihDA\u0004C_>dW-\u00198\u0002\u00119,\u0007\u0010^*uKB$\u0012\u0001X\u0001\tiJL8\u000b\u001d7jiR\tQ%A\u0006ta2LG/\u001a:bi>\u0014X\u0003BA\u0005\u0003G)\"!a\u0003\u0011\t\u00055\u0011Q\u0004\b\u0005\u0003\u001f\tI\"\u0004\u0002\u0002\u0012)!\u00111CA\u000b\u0003\u0011)H/\u001b7\u000b\u0005\u0005]\u0011\u0001\u00026bm\u0006LA!a\u0007\u0002\u0012\u0005Y1\u000b\u001d7ji\u0016\u0014\u0018\r^8s\u0013\u0011\ty\"!\t\u0003\u0011=3Gi\\;cY\u0016TA!a\u0007\u0002\u0012\u00119\u0011Q\u0005\u000eC\u0002\u0005\u001d\"!\u0001\"\u0012\u0007q\u000bI\u0003E\u0002#\u0003WI1!!\f\u001f\u0005\r\te.\u001f
   #13 = Utf8               java/util/PrimitiveIterator$OfDouble
   #14 = Class              #13           // java/util/PrimitiveIterator$OfDouble
   #15 = Utf8               java/util/PrimitiveIterator
   #16 = Class              #15           // java/util/PrimitiveIterator
   #17 = Utf8               OfDouble
   #18 = Utf8               java/util/Spliterator$OfDouble
   #19 = Class              #18           // java/util/Spliterator$OfDouble
   #20 = Utf8               java/util/Spliterator
   #21 = Class              #20           // java/util/Spliterator
   #22 = Utf8               scala/collection/Stepper
   #23 = Class              #22           // scala/collection/Stepper
   #24 = Utf8               EfficientSplit
   #25 = Utf8               scala/jdk/DoubleAccumulatorStepper$$anon$1
   #26 = Class              #25           // scala/jdk/DoubleAccumulatorStepper$$anon$1
   #27 = Utf8               acc
   #28 = Utf8               Lscala/jdk/DoubleAccumulator;
   #29 = Utf8               h
   #30 = Utf8               I
   #31 = Utf8               scala$jdk$DoubleAccumulatorStepper$$i
   #32 = Utf8               scala$jdk$DoubleAccumulatorStepper$$a
   #33 = Utf8               [D
   #34 = Utf8               scala$jdk$DoubleAccumulatorStepper$$n
   #35 = Utf8               J
   #36 = Utf8               scala$jdk$DoubleAccumulatorStepper$$N
   #37 = Utf8               javaIterator
   #38 = Utf8               ()Ljava/util/PrimitiveIterator$OfDouble;
   #39 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfDouble;
   #40 = Utf8               javaIterator$
   #41 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #42 = NameAndType        #40:#41       // javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #43 = InterfaceMethodref #6.#42        // scala/collection/DoubleStepper.javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #44 = Utf8               this
   #45 = Utf8               Lscala/jdk/DoubleAccumulatorStepper;
   #46 = Utf8               javaIterator$mcD$sp
   #47 = Utf8               ()Ljava/util/Iterator;
   #48 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #49 = Utf8               javaIterator$mcD$sp$
   #50 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #51 = NameAndType        #49:#50       // javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #52 = InterfaceMethodref #6.#51        // scala/collection/DoubleStepper.javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #53 = Utf8               nextStep$mcI$sp
   #54 = Utf8               ()I
   #55 = Utf8               nextStep$mcI$sp$
   #56 = Utf8               (Lscala/collection/Stepper;)I
   #57 = NameAndType        #55:#56       // nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #58 = InterfaceMethodref #23.#57       // scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #59 = Utf8               nextStep$mcJ$sp
   #60 = Utf8               ()J
   #61 = Utf8               nextStep$mcJ$sp$
   #62 = Utf8               (Lscala/collection/Stepper;)J
   #63 = NameAndType        #61:#62       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #64 = InterfaceMethodref #23.#63       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #65 = Utf8               trySplit$mcD$sp
   #66 = Utf8               ()Lscala/collection/Stepper;
   #67 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #68 = Utf8               trySplit$mcD$sp$
   #69 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #70 = NameAndType        #68:#69       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #71 = InterfaceMethodref #23.#70       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #72 = Utf8               trySplit$mcI$sp
   #73 = Utf8               trySplit$mcI$sp$
   #74 = NameAndType        #73:#69       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #75 = InterfaceMethodref #23.#74       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #76 = Utf8               trySplit$mcJ$sp
   #77 = Utf8               trySplit$mcJ$sp$
   #78 = NameAndType        #77:#69       // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #79 = InterfaceMethodref #23.#78       // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #80 = Utf8               spliterator$mcI$sp
   #81 = Utf8               ()Ljava/util/Spliterator;
   #82 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #83 = Utf8               spliterator$mcI$sp$
   #84 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #85 = NameAndType        #83:#84       // spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #86 = InterfaceMethodref #23.#85       // scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #87 = Utf8               spliterator$mcJ$sp
   #88 = Utf8               spliterator$mcJ$sp$
   #89 = NameAndType        #88:#84       // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #90 = InterfaceMethodref #23.#89       // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #91 = Utf8               javaIterator$mcI$sp
   #92 = Utf8               javaIterator$mcI$sp$
   #93 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
   #94 = NameAndType        #92:#93       // javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #95 = InterfaceMethodref #23.#94       // scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #96 = Utf8               javaIterator$mcJ$sp
   #97 = Utf8               javaIterator$mcJ$sp$
   #98 = NameAndType        #97:#93       // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #99 = InterfaceMethodref #23.#98       // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #100 = Utf8               iterator
  #101 = Utf8               ()Lscala/collection/Iterator;
  #102 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #103 = Utf8               iterator$
  #104 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #105 = NameAndType        #103:#104     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #106 = InterfaceMethodref #23.#105      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #107 = Utf8               ()Lscala/jdk/DoubleAccumulator;
  #108 = NameAndType        #27:#28       // acc:Lscala/jdk/DoubleAccumulator;
  #109 = Fieldref           #2.#108       // scala/jdk/DoubleAccumulatorStepper.acc:Lscala/jdk/DoubleAccumulator;
  #110 = NameAndType        #29:#30       // h:I
  #111 = Fieldref           #2.#110       // scala/jdk/DoubleAccumulatorStepper.h:I
  #112 = Utf8               h_$eq
  #113 = Utf8               (I)V
  #114 = Utf8               x$1
  #115 = NameAndType        #31:#30       // scala$jdk$DoubleAccumulatorStepper$$i:I
  #116 = Fieldref           #2.#115       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$i:I
  #117 = Utf8               scala$jdk$DoubleAccumulatorStepper$$i_$eq
  #118 = Utf8               ()[D
  #119 = NameAndType        #32:#33       // scala$jdk$DoubleAccumulatorStepper$$a:[D
  #120 = Fieldref           #2.#119       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$a:[D
  #121 = Utf8               a_$eq
  #122 = Utf8               ([D)V
  #123 = NameAndType        #34:#35       // scala$jdk$DoubleAccumulatorStepper$$n:J
  #124 = Fieldref           #2.#123       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$n:J
  #125 = Utf8               scala$jdk$DoubleAccumulatorStepper$$n_$eq
  #126 = Utf8               (J)V
  #127 = NameAndType        #36:#35       // scala$jdk$DoubleAccumulatorStepper$$N:J
  #128 = Fieldref           #2.#127       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$N:J
  #129 = Utf8               scala$jdk$DoubleAccumulatorStepper$$N_$eq
  #130 = Utf8               duplicateSelf
  #131 = Utf8               (J)Lscala/jdk/DoubleAccumulatorStepper;
  #132 = Utf8               limit
  #133 = NameAndType        #27:#107      // acc:()Lscala/jdk/DoubleAccumulator;
  #134 = Methodref          #2.#133       // scala/jdk/DoubleAccumulatorStepper.acc:()Lscala/jdk/DoubleAccumulator;
  #135 = Utf8               <init>
  #136 = Utf8               (Lscala/jdk/DoubleAccumulator;)V
  #137 = NameAndType        #135:#136     // "<init>":(Lscala/jdk/DoubleAccumulator;)V
  #138 = Methodref          #2.#137       // scala/jdk/DoubleAccumulatorStepper."<init>":(Lscala/jdk/DoubleAccumulator;)V
  #139 = NameAndType        #29:#54       // h:()I
  #140 = Methodref          #2.#139       // scala/jdk/DoubleAccumulatorStepper.h:()I
  #141 = NameAndType        #112:#113     // h_$eq:(I)V
  #142 = Methodref          #2.#141       // scala/jdk/DoubleAccumulatorStepper.h_$eq:(I)V
  #143 = NameAndType        #31:#54       // scala$jdk$DoubleAccumulatorStepper$$i:()I
  #144 = Methodref          #2.#143       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$i:()I
  #145 = NameAndType        #117:#113     // scala$jdk$DoubleAccumulatorStepper$$i_$eq:(I)V
  #146 = Methodref          #2.#145       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$i_$eq:(I)V
  #147 = NameAndType        #32:#118      // scala$jdk$DoubleAccumulatorStepper$$a:()[D
  #148 = Methodref          #2.#147       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$a:()[D
  #149 = NameAndType        #121:#122     // a_$eq:([D)V
  #150 = Methodref          #2.#149       // scala/jdk/DoubleAccumulatorStepper.a_$eq:([D)V
  #151 = NameAndType        #34:#60       // scala$jdk$DoubleAccumulatorStepper$$n:()J
  #152 = Methodref          #2.#151       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$n:()J
  #153 = NameAndType        #125:#126     // scala$jdk$DoubleAccumulatorStepper$$n_$eq:(J)V
  #154 = Methodref          #2.#153       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$n_$eq:(J)V
  #155 = NameAndType        #129:#126     // scala$jdk$DoubleAccumulatorStepper$$N_$eq:(J)V
  #156 = Methodref          #2.#155       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$N_$eq:(J)V
  #157 = Utf8               ans
  #158 = Utf8               scala$jdk$DoubleAccumulatorStepper$$loadMore
  #159 = Utf8               ()V
  #160 = Utf8               scala/jdk/DoubleAccumulator
  #161 = Class              #160          // scala/jdk/DoubleAccumulator
  #162 = Utf8               hIndex
  #163 = NameAndType        #162:#54      // hIndex:()I
  #164 = Methodref          #161.#163     // scala/jdk/DoubleAccumulator.hIndex:()I
  #165 = Utf8               history
  #166 = Utf8               ()[[D
  #167 = NameAndType        #165:#166     // history:()[[D
  #168 = Methodref          #161.#167     // scala/jdk/DoubleAccumulator.history:()[[D
  #169 = Utf8               cumulative
  #170 = Utf8               (I)J
  #171 = NameAndType        #169:#170     // cumulative:(I)J
  #172 = Methodref          #161.#171     // scala/jdk/DoubleAccumulator.cumulative:(I)J
  #173 = Utf8               current
  #174 = NameAndType        #173:#118     // current:()[D
  #175 = Methodref          #161.#174     // scala/jdk/DoubleAccumulator.current:()[D
  #176 = Utf8               index
  #177 = NameAndType        #176:#54      // index:()I
  #178 = Methodref          #161.#177     // scala/jdk/DoubleAccumulator.index:()I
  #179 = Utf8               characteristics
  #180 = Utf8               estimateSize
  #181 = NameAndType        #36:#60       // scala$jdk$DoubleAccumulatorStepper$$N:()J
  #182 = Methodref          #2.#181       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$N:()J
  #183 = Utf8               hasStep
  #184 = Utf8               ()Z
  #185 = Utf8               nextStep
  #186 = Utf8               ()D
  #187 = Utf8               nextStep$mcD$sp
  #188 = NameAndType        #187:#186     // nextStep$mcD$sp:()D
  #189 = Methodref          #2.#188       // scala/jdk/DoubleAccumulatorStepper.nextStep$mcD$sp:()D
  #190 = Utf8               trySplit
  #191 = Utf8               ()Lscala/collection/DoubleStepper;
  #192 = NameAndType        #130:#131     // duplicateSelf:(J)Lscala/jdk/DoubleAccumulatorStepper;
  #193 = Methodref          #2.#192       // scala/jdk/DoubleAccumulatorStepper.duplicateSelf:(J)Lscala/jdk/DoubleAccumulatorStepper;
  #194 = Utf8               seekSlot
  #195 = Utf8               (J)J
  #196 = NameAndType        #194:#195     // seekSlot:(J)J
  #197 = Methodref          #161.#196     // scala/jdk/DoubleAccumulator.seekSlot:(J)J
  #198 = Long               4294967295l
  #200 = Utf8               w
  #201 = Utf8               half
  #202 = Utf8               R
  #203 = Utf8               spliterator
  #204 = Utf8               ()Ljava/util/Spliterator$OfDouble;
  #205 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfDouble;
  #206 = Utf8               spliterator$mcD$sp
  #207 = NameAndType        #206:#81      // spliterator$mcD$sp:()Ljava/util/Spliterator;
  #208 = Methodref          #2.#207       // scala/jdk/DoubleAccumulatorStepper.spliterator$mcD$sp:()Ljava/util/Spliterator;
  #209 = Utf8               java/util/NoSuchElementException
  #210 = Class              #209          // java/util/NoSuchElementException
  #211 = Utf8               next on empty Stepper
  #212 = String             #211          // next on empty Stepper
  #213 = Utf8               (Ljava/lang/String;)V
  #214 = NameAndType        #135:#213     // "<init>":(Ljava/lang/String;)V
  #215 = Methodref          #210.#214     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #216 = NameAndType        #158:#159     // scala$jdk$DoubleAccumulatorStepper$$loadMore:()V
  #217 = Methodref          #2.#216       // scala/jdk/DoubleAccumulatorStepper.scala$jdk$DoubleAccumulatorStepper$$loadMore:()V
  #218 = Utf8               D
  #219 = Utf8               (Lscala/jdk/DoubleAccumulatorStepper;)V
  #220 = NameAndType        #135:#219     // "<init>":(Lscala/jdk/DoubleAccumulatorStepper;)V
  #221 = Methodref          #26.#220      // scala/jdk/DoubleAccumulatorStepper$$anon$1."<init>":(Lscala/jdk/DoubleAccumulatorStepper;)V
  #222 = NameAndType        #37:#38       // javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
  #223 = Methodref          #2.#222       // scala/jdk/DoubleAccumulatorStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
  #224 = NameAndType        #203:#204     // spliterator:()Ljava/util/Spliterator$OfDouble;
  #225 = Methodref          #2.#224       // scala/jdk/DoubleAccumulatorStepper.spliterator:()Ljava/util/Spliterator$OfDouble;
  #226 = NameAndType        #190:#191     // trySplit:()Lscala/collection/DoubleStepper;
  #227 = Methodref          #2.#226       // scala/jdk/DoubleAccumulatorStepper.trySplit:()Lscala/collection/DoubleStepper;
  #228 = Utf8               ()Ljava/lang/Object;
  #229 = NameAndType        #185:#186     // nextStep:()D
  #230 = Methodref          #2.#229       // scala/jdk/DoubleAccumulatorStepper.nextStep:()D
  #231 = Utf8               scala/runtime/BoxesRunTime
  #232 = Class              #231          // scala/runtime/BoxesRunTime
  #233 = Utf8               boxToDouble
  #234 = Utf8               (D)Ljava/lang/Double;
  #235 = NameAndType        #233:#234     // boxToDouble:(D)Ljava/lang/Double;
  #236 = Methodref          #232.#235     // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #237 = NameAndType        #135:#159     // "<init>":()V
  #238 = Methodref          #4.#237       // java/lang/Object."<init>":()V
  #239 = Utf8               totalSize
  #240 = NameAndType        #239:#60      // totalSize:()J
  #241 = Methodref          #161.#240     // scala/jdk/DoubleAccumulator.totalSize:()J
  #242 = Class              #33           // "[D"
  #243 = Utf8               Code
  #244 = Utf8               LineNumberTable
  #245 = Utf8               LocalVariableTable
  #246 = Utf8               Signature
  #247 = Utf8               MethodParameters
  #248 = Utf8               StackMapTable
  #249 = Utf8               InnerClasses
  #250 = Utf8               SourceFile
  #251 = Utf8               RuntimeVisibleAnnotations
  #252 = Utf8               ScalaInlineInfo
  #253 = Utf8               ScalaSig
{
  private final scala.jdk.DoubleAccumulator acc;
    descriptor: Lscala/jdk/DoubleAccumulator;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private int h;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int scala$jdk$DoubleAccumulatorStepper$$i;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private double[] scala$jdk$DoubleAccumulatorStepper$$a;
    descriptor: [D
    flags: (0x0002) ACC_PRIVATE

  private long scala$jdk$DoubleAccumulatorStepper$$n;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  private long scala$jdk$DoubleAccumulatorStepper$$N;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfDouble javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod scala/collection/DoubleStepper.javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #39                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfDouble;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #52                 // InterfaceMethod scala/collection/DoubleStepper.javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #48                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
         4: ireturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #86                 // InterfaceMethod scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #82                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #90                 // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #82                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #95                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #48                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #99                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #48                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #106                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #102                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  private scala.jdk.DoubleAccumulator acc();
    descriptor: ()Lscala/jdk/DoubleAccumulator;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #109                // Field acc:Lscala/jdk/DoubleAccumulator;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  private int h();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field h:I
         4: ireturn
      LineNumberTable:
        line 367: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  private void h_$eq(int);
    descriptor: (I)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #111                // Field h:I
         5: return
      LineNumberTable:
        line 367: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/DoubleAccumulatorStepper;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int scala$jdk$DoubleAccumulatorStepper$$i();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #116                // Field scala$jdk$DoubleAccumulatorStepper$$i:I
         4: ireturn
      LineNumberTable:
        line 368: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public void scala$jdk$DoubleAccumulatorStepper$$i_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #116                // Field scala$jdk$DoubleAccumulatorStepper$$i:I
         5: return
      LineNumberTable:
        line 368: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/DoubleAccumulatorStepper;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public double[] scala$jdk$DoubleAccumulatorStepper$$a();
    descriptor: ()[D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #120                // Field scala$jdk$DoubleAccumulatorStepper$$a:[D
         4: areturn
      LineNumberTable:
        line 369: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  private void a_$eq(double[]);
    descriptor: ([D)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #120                // Field scala$jdk$DoubleAccumulatorStepper$$a:[D
         5: return
      LineNumberTable:
        line 369: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/DoubleAccumulatorStepper;
            0       6     1   x$1   [D
    MethodParameters:
      Name                           Flags
      x$1                            final

  public long scala$jdk$DoubleAccumulatorStepper$$n();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #124                // Field scala$jdk$DoubleAccumulatorStepper$$n:J
         4: lreturn
      LineNumberTable:
        line 370: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public void scala$jdk$DoubleAccumulatorStepper$$n_$eq(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: putfield      #124                // Field scala$jdk$DoubleAccumulatorStepper$$n:J
         5: return
      LineNumberTable:
        line 370: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/DoubleAccumulatorStepper;
            0       6     1   x$1   J
    MethodParameters:
      Name                           Flags
      x$1                            final

  public long scala$jdk$DoubleAccumulatorStepper$$N();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #128                // Field scala$jdk$DoubleAccumulatorStepper$$N:J
         4: lreturn
      LineNumberTable:
        line 371: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public void scala$jdk$DoubleAccumulatorStepper$$N_$eq(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: putfield      #128                // Field scala$jdk$DoubleAccumulatorStepper$$N:J
         5: return
      LineNumberTable:
        line 371: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/jdk/DoubleAccumulatorStepper;
            0       6     1   x$1   J
    MethodParameters:
      Name                           Flags
      x$1                            final

  private scala.jdk.DoubleAccumulatorStepper duplicateSelf(long);
    descriptor: (J)Lscala/jdk/DoubleAccumulatorStepper;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=4, args_size=2
         0: new           #2                  // class scala/jdk/DoubleAccumulatorStepper
         3: dup
         4: aload_0
         5: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
         8: invokespecial #138                // Method "<init>":(Lscala/jdk/DoubleAccumulator;)V
        11: astore_3
        12: aload_3
        13: aload_0
        14: invokespecial #140                // Method h:()I
        17: invokespecial #142                // Method h_$eq:(I)V
        20: aload_3
        21: aload_0
        22: invokevirtual #144                // Method scala$jdk$DoubleAccumulatorStepper$$i:()I
        25: invokevirtual #146                // Method scala$jdk$DoubleAccumulatorStepper$$i_$eq:(I)V
        28: aload_3
        29: aload_0
        30: invokevirtual #148                // Method scala$jdk$DoubleAccumulatorStepper$$a:()[D
        33: invokespecial #150                // Method a_$eq:([D)V
        36: aload_3
        37: aload_0
        38: invokevirtual #152                // Method scala$jdk$DoubleAccumulatorStepper$$n:()J
        41: invokevirtual #154                // Method scala$jdk$DoubleAccumulatorStepper$$n_$eq:(J)V
        44: aload_3
        45: lload_1
        46: invokevirtual #156                // Method scala$jdk$DoubleAccumulatorStepper$$N_$eq:(J)V
        49: aload_3
        50: areturn
      LineNumberTable:
        line 374: 0
        line 375: 12
        line 376: 20
        line 377: 28
        line 378: 36
        line 379: 44
        line 380: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      38     3   ans   Lscala/jdk/DoubleAccumulatorStepper;
            0      51     0  this   Lscala/jdk/DoubleAccumulatorStepper;
            0      51     1 limit   J
    MethodParameters:
      Name                           Flags
      limit                          final

  public void scala$jdk$DoubleAccumulatorStepper$$loadMore();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokespecial #140                // Method h:()I
         5: iconst_1
         6: iadd
         7: invokespecial #142                // Method h_$eq:(I)V
        10: aload_0
        11: invokespecial #140                // Method h:()I
        14: aload_0
        15: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        18: invokevirtual #164                // Method scala/jdk/DoubleAccumulator.hIndex:()I
        21: if_icmpge     72
        24: aload_0
        25: aload_0
        26: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        29: invokevirtual #168                // Method scala/jdk/DoubleAccumulator.history:()[[D
        32: aload_0
        33: invokespecial #140                // Method h:()I
        36: aaload
        37: invokespecial #150                // Method a_$eq:([D)V
        40: aload_0
        41: aload_0
        42: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        45: aload_0
        46: invokespecial #140                // Method h:()I
        49: invokevirtual #172                // Method scala/jdk/DoubleAccumulator.cumulative:(I)J
        52: aload_0
        53: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        56: aload_0
        57: invokespecial #140                // Method h:()I
        60: iconst_1
        61: isub
        62: invokevirtual #172                // Method scala/jdk/DoubleAccumulator.cumulative:(I)J
        65: lsub
        66: invokevirtual #154                // Method scala$jdk$DoubleAccumulatorStepper$$n_$eq:(J)V
        69: goto          95
        72: aload_0
        73: aload_0
        74: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        77: invokevirtual #175                // Method scala/jdk/DoubleAccumulator.current:()[D
        80: invokespecial #150                // Method a_$eq:([D)V
        83: aload_0
        84: aload_0
        85: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        88: invokevirtual #178                // Method scala/jdk/DoubleAccumulator.index:()I
        91: i2l
        92: invokevirtual #154                // Method scala$jdk$DoubleAccumulatorStepper$$n_$eq:(J)V
        95: aload_0
        96: iconst_0
        97: invokevirtual #146                // Method scala$jdk$DoubleAccumulatorStepper$$i_$eq:(I)V
       100: return
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 72
        frame_type = 22 /* same */
      LineNumberTable:
        line 384: 0
        line 385: 10
        line 386: 72
        line 387: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     101     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public int characteristics();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: sipush        16720
         3: ireturn
      LineNumberTable:
        line 390: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public long estimateSize();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #182                // Method scala$jdk$DoubleAccumulatorStepper$$N:()J
         4: lreturn
      LineNumberTable:
        line 392: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public boolean hasStep();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #182                // Method scala$jdk$DoubleAccumulatorStepper$$N:()J
         4: lconst_0
         5: lcmp
         6: ifle          11
         9: iconst_1
        10: ireturn
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 394: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public double nextStep();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #189                // Method nextStep$mcD$sp:()D
         4: dreturn
      LineNumberTable:
        line 396: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public scala.collection.DoubleStepper trySplit();
    descriptor: ()Lscala/collection/DoubleStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=8, args_size=1
         0: aload_0
         1: invokevirtual #182                // Method scala$jdk$DoubleAccumulatorStepper$$N:()J
         4: lconst_1
         5: lcmp
         6: ifgt          11
         9: aconst_null
        10: areturn
        11: aload_0
        12: invokevirtual #182                // Method scala$jdk$DoubleAccumulatorStepper$$N:()J
        15: iconst_1
        16: lshr
        17: lstore_1
        18: aload_0
        19: invokespecial #140                // Method h:()I
        22: iconst_0
        23: if_icmpgt     30
        26: lconst_0
        27: goto          43
        30: aload_0
        31: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        34: aload_0
        35: invokespecial #140                // Method h:()I
        38: iconst_1
        39: isub
        40: invokevirtual #172                // Method scala/jdk/DoubleAccumulator.cumulative:(I)J
        43: aload_0
        44: invokevirtual #144                // Method scala$jdk$DoubleAccumulatorStepper$$i:()I
        47: i2l
        48: ladd
        49: lload_1
        50: ladd
        51: lstore_3
        52: aload_0
        53: lload_1
        54: invokespecial #193                // Method duplicateSelf:(J)Lscala/jdk/DoubleAccumulatorStepper;
        57: astore        5
        59: aload_0
        60: invokespecial #140                // Method h:()I
        63: aload_0
        64: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        67: invokevirtual #164                // Method scala/jdk/DoubleAccumulator.hIndex:()I
        70: if_icmpge     204
        73: aload_0
        74: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
        77: lload_3
        78: invokevirtual #197                // Method scala/jdk/DoubleAccumulator.seekSlot:(J)J
        81: lstore        6
        83: aload_0
        84: lload         6
        86: bipush        32
        88: lushr
        89: l2i
        90: invokespecial #142                // Method h_$eq:(I)V
        93: aload_0
        94: invokespecial #140                // Method h:()I
        97: aload_0
        98: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
       101: invokevirtual #164                // Method scala/jdk/DoubleAccumulator.hIndex:()I
       104: if_icmpge     167
       107: aload_0
       108: aload_0
       109: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
       112: invokevirtual #168                // Method scala/jdk/DoubleAccumulator.history:()[[D
       115: aload_0
       116: invokespecial #140                // Method h:()I
       119: aaload
       120: invokespecial #150                // Method a_$eq:([D)V
       123: aload_0
       124: aload_0
       125: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
       128: aload_0
       129: invokespecial #140                // Method h:()I
       132: invokevirtual #172                // Method scala/jdk/DoubleAccumulator.cumulative:(I)J
       135: aload_0
       136: invokespecial #140                // Method h:()I
       139: iconst_0
       140: if_icmple     159
       143: aload_0
       144: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
       147: aload_0
       148: invokespecial #140                // Method h:()I
       151: iconst_1
       152: isub
       153: invokevirtual #172                // Method scala/jdk/DoubleAccumulator.cumulative:(I)J
       156: goto          160
       159: lconst_0
       160: lsub
       161: invokevirtual #154                // Method scala$jdk$DoubleAccumulatorStepper$$n_$eq:(J)V
       164: goto          190
       167: aload_0
       168: aload_0
       169: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
       172: invokevirtual #175                // Method scala/jdk/DoubleAccumulator.current:()[D
       175: invokespecial #150                // Method a_$eq:([D)V
       178: aload_0
       179: aload_0
       180: invokespecial #134                // Method acc:()Lscala/jdk/DoubleAccumulator;
       183: invokevirtual #178                // Method scala/jdk/DoubleAccumulator.index:()I
       186: i2l
       187: invokevirtual #154                // Method scala$jdk$DoubleAccumulatorStepper$$n_$eq:(J)V
       190: aload_0
       191: lload         6
       193: ldc2_w        #198                // long 4294967295l
       196: land
       197: l2i
       198: invokevirtual #146                // Method scala$jdk$DoubleAccumulatorStepper$$i_$eq:(I)V
       201: goto          215
       204: aload_0
       205: aload_0
       206: invokevirtual #144                // Method scala$jdk$DoubleAccumulatorStepper$$i:()I
       209: lload_1
       210: l2i
       211: iadd
       212: invokevirtual #146                // Method scala$jdk$DoubleAccumulatorStepper$$i_$eq:(I)V
       215: aload_0
       216: aload_0
       217: invokevirtual #182                // Method scala$jdk$DoubleAccumulatorStepper$$N:()J
       220: lload_1
       221: lsub
       222: invokevirtual #156                // Method scala$jdk$DoubleAccumulatorStepper$$N_$eq:(J)V
       225: aload         5
       227: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 11 /* same */
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ long ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ long ]
        frame_type = 255 /* full_frame */
          offset_delta = 115
          locals = [ class scala/jdk/DoubleAccumulatorStepper, long, long, class scala/jdk/DoubleAccumulatorStepper, long ]
          stack = [ class scala/jdk/DoubleAccumulatorStepper, long ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/jdk/DoubleAccumulatorStepper, long, long, class scala/jdk/DoubleAccumulatorStepper, long ]
          stack = [ class scala/jdk/DoubleAccumulatorStepper, long, long ]
        frame_type = 6 /* same */
        frame_type = 22 /* same */
        frame_type = 250 /* chop */
          offset_delta = 13
        frame_type = 10 /* same */
      LineNumberTable:
        line 407: 0
        line 409: 11
        line 410: 18
        line 411: 49
        line 412: 52
        line 413: 59
        line 414: 73
        line 415: 83
        line 416: 93
        line 417: 107
        line 418: 123
        line 421: 167
        line 422: 178
        line 424: 190
        line 426: 204
        line 427: 215
        line 428: 225
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           83     118     6     w   J
           18     209     1  half   J
           52     175     3     R   J
           59     168     5   ans   Lscala/jdk/DoubleAccumulatorStepper;
            0     228     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public <B extends java.lang.Object> java.util.Spliterator$OfDouble spliterator();
    descriptor: ()Ljava/util/Spliterator$OfDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #208                // Method spliterator$mcD$sp:()Ljava/util/Spliterator;
         4: checkcast     #19                 // class java/util/Spliterator$OfDouble
         7: areturn
      LineNumberTable:
        line 431: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #205                         // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfDouble;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #152                // Method scala$jdk$DoubleAccumulatorStepper$$n:()J
         4: lconst_0
         5: lcmp
         6: ifgt          19
         9: new           #210                // class java/util/NoSuchElementException
        12: dup
        13: ldc           #212                // String next on empty Stepper
        15: invokespecial #215                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: invokevirtual #144                // Method scala$jdk$DoubleAccumulatorStepper$$i:()I
        23: i2l
        24: aload_0
        25: invokevirtual #152                // Method scala$jdk$DoubleAccumulatorStepper$$n:()J
        28: lcmp
        29: iflt          36
        32: aload_0
        33: invokevirtual #217                // Method scala$jdk$DoubleAccumulatorStepper$$loadMore:()V
        36: aload_0
        37: invokevirtual #148                // Method scala$jdk$DoubleAccumulatorStepper$$a:()[D
        40: aload_0
        41: invokevirtual #144                // Method scala$jdk$DoubleAccumulatorStepper$$i:()I
        44: daload
        45: dstore_1
        46: aload_0
        47: aload_0
        48: invokevirtual #144                // Method scala$jdk$DoubleAccumulatorStepper$$i:()I
        51: iconst_1
        52: iadd
        53: invokevirtual #146                // Method scala$jdk$DoubleAccumulatorStepper$$i_$eq:(I)V
        56: aload_0
        57: aload_0
        58: invokevirtual #182                // Method scala$jdk$DoubleAccumulatorStepper$$N:()J
        61: lconst_1
        62: lsub
        63: invokevirtual #156                // Method scala$jdk$DoubleAccumulatorStepper$$N_$eq:(J)V
        66: dload_1
        67: dreturn
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 16 /* same */
      LineNumberTable:
        line 397: 0
        line 399: 19
        line 400: 36
        line 401: 46
        line 402: 56
        line 403: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           46      21     1   ans   D
            0      68     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #26                 // class scala/jdk/DoubleAccumulatorStepper$$anon$1
         3: dup
         4: aload_0
         5: invokespecial #221                // Method scala/jdk/DoubleAccumulatorStepper$$anon$1."<init>":(Lscala/jdk/DoubleAccumulatorStepper;)V
         8: areturn
      LineNumberTable:
        line 431: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/jdk/DoubleAccumulatorStepper;
    Signature: #82                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #223                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #225                // Method spliterator:()Ljava/util/Spliterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #227                // Method trySplit:()Lscala/collection/DoubleStepper;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #230                // Method nextStep:()D
         4: invokestatic  #236                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
         7: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/jdk/DoubleAccumulatorStepper;

  public scala.jdk.DoubleAccumulatorStepper(scala.jdk.DoubleAccumulator);
    descriptor: (Lscala/jdk/DoubleAccumulator;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #109                // Field acc:Lscala/jdk/DoubleAccumulator;
         5: aload_0
         6: invokespecial #238                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: iconst_0
        11: putfield      #111                // Field h:I
        14: aload_0
        15: iconst_0
        16: putfield      #116                // Field scala$jdk$DoubleAccumulatorStepper$$i:I
        19: aload_0
        20: aload_1
        21: invokevirtual #164                // Method scala/jdk/DoubleAccumulator.hIndex:()I
        24: iconst_0
        25: if_icmple     37
        28: aload_1
        29: invokevirtual #168                // Method scala/jdk/DoubleAccumulator.history:()[[D
        32: iconst_0
        33: aaload
        34: goto          41
        37: aload_1
        38: invokevirtual #175                // Method scala/jdk/DoubleAccumulator.current:()[D
        41: putfield      #120                // Field scala$jdk$DoubleAccumulatorStepper$$a:[D
        44: aload_0
        45: aload_1
        46: invokevirtual #164                // Method scala/jdk/DoubleAccumulator.hIndex:()I
        49: iconst_0
        50: if_icmple     61
        53: aload_1
        54: iconst_0
        55: invokevirtual #172                // Method scala/jdk/DoubleAccumulator.cumulative:(I)J
        58: goto          66
        61: aload_1
        62: invokevirtual #178                // Method scala/jdk/DoubleAccumulator.index:()I
        65: i2l
        66: putfield      #124                // Field scala$jdk$DoubleAccumulatorStepper$$n:J
        69: aload_0
        70: aload_1
        71: invokevirtual #241                // Method scala/jdk/DoubleAccumulator.totalSize:()J
        74: putfield      #128                // Field scala$jdk$DoubleAccumulatorStepper$$N:J
        77: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class scala/jdk/DoubleAccumulatorStepper, class scala/jdk/DoubleAccumulator ]
          stack = [ class scala/jdk/DoubleAccumulatorStepper ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/jdk/DoubleAccumulatorStepper, class scala/jdk/DoubleAccumulator ]
          stack = [ class scala/jdk/DoubleAccumulatorStepper, class "[D" ]
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class scala/jdk/DoubleAccumulatorStepper ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/jdk/DoubleAccumulatorStepper, class scala/jdk/DoubleAccumulator ]
          stack = [ class scala/jdk/DoubleAccumulatorStepper, long ]
      LineNumberTable:
        line 364: 0
        line 367: 9
        line 368: 14
        line 369: 19
        line 370: 44
        line 371: 69
        line 364: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      78     0  this   Lscala/jdk/DoubleAccumulatorStepper;
            0      78     1   acc   Lscala/jdk/DoubleAccumulator;
    MethodParameters:
      Name                           Flags
      acc                            final
}
InnerClasses:
  public static #17= #14 of #16;          // OfDouble=class java/util/PrimitiveIterator$OfDouble of class java/util/PrimitiveIterator
  public static #17= #19 of #21;          // OfDouble=class java/util/Spliterator$OfDouble of class java/util/Spliterator
  public static #24= #8 of #23;           // EfficientSplit=class scala/collection/Stepper$EfficientSplit of class scala/collection/Stepper
  public final #26;                       // class scala/jdk/DoubleAccumulatorStepper$$anon$1
SourceFile: "DoubleAccumulator.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005=b!B\u000e\u001d\u0001q\u0001\u0003\u0002\u0003\u001e\u0001\u0005\u000b\u0007I\u0011B\u001e\t\u0011\u0001\u0003!\u0011!Q\u0001\nqBQ!\u0011\u0001\u0005\u0002\tCq!\u0012\u0001A\u0002\u0013%a\tC\u0004K\u0001\u0001\u0007I\u0011B&\t\rE\u0003\u0001\u0015)\u0003H\u0011\u001d\u0011\u0006\u00011A\u0005\n\u0019Cqa\u0015\u0001A\u0002\u0013%A\u000b\u0003\u0004W\u0001\u0001\u0006Ka\u0012\u0005\b/\u0002\u0001\r\u0011\"\u0003Y\u0011\u001dy\u0006\u00011A\u0005\n\u0001DaA\u0019\u0001!B\u0013I\u0006bB2\u0001\u0001\u0004%I\u0001\u001a\u0005\bQ\u0002\u0001\r\u0011\"\u0003j\u0011\u0019Y\u0007\u0001)Q\u0005K\"9A\u000e\u0001a\u0001\n\u0013!\u0007bB7\u0001\u0001\u0004%IA\u001c\u0005\u0007a\u0002\u0001\u000b\u0015B3\t\u000bE\u0004A\u0011\u0002:\t\u000bU\u0004A\u0011\u0002<\t\u000b]\u0004A\u0011\u0001$\t\u000ba\u0004A\u0011\u00013\t\u000be\u0004A\u0011\u0001>\t\u000by\u0004A\u0011A@\t\u000f\u0005\u0005\u0001\u0001\"\u0001\u0002\u0004!9\u0011Q\u0001\u0001\u0005B\u0005\u001d!\u0001\u0007#pk\ndW-Q2dk6,H.\u0019;peN#X\r\u001d9fe*\u0011QDH\u0001\u0004U\u0012\\\'\"A\u0010\u0002\u000bM\u001c\u0017\r\\1\u0014\t\u0001\tSe\u000b\t\u0003E\rj\u0011AH\u0005\u0003Iy\u0011a!\u00118z%\u00164\u0007C\u0001\u0014*\u001b\u00059#B\u0001\u0015\u001f\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003U\u001d\u0012Q\u0002R8vE2,7\u000b^3qa\u0016\u0014\bC\u0001\u00178\u001d\tiSG\u0004\u0002/i9\u0011qfM\u0007\u0002a)\u0011\u0011GM\u0001\u0007yI|w\u000e\u001e \u0004\u0001%\tq$\u0003\u0002)=%\u0011agJ\u0001\b\'R,\u0007\u000f]3s\u0013\tA\u0014H\u0001\bFM\u001aL7-[3oiN\u0003H.\u001b;\u000b\u0005Y:\u0013aA1dGV\tA\b\u0005\u0002>}5\tA$\u0003\u0002@9\t\tBi\\;cY\u0016\f5mY;nk2\fGo\u001c:\u0002\t\u0005\u001c7\rI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005\r#\u0005CA\u001f\u0001\u0011\u0015Q4\u00011\u0001=\u0003\u0005AW#A$\u0011\u0005\tB\u0015BA%\u001f\u0005\rIe\u000e^\u0001\u0006Q~#S-\u001d\u000b\u0003\u0019>\u0003\"AI\'\n\u00059s\"\u0001B+oSRDq\u0001U\u0003\u0002\u0002\u0003\u0007q)A\u0002yIE\n!\u0001\u001b\u0011\u0002\u0003%\fQ![0%KF$\"\u0001T+\t\u000fAC\u0011\u0011!a\u0001\u000f\u0006\u0011\u0011\u000eI\u0001\u0002CV\t\u0011\fE\u0002#5rK!a\u0017\u0010\u0003\u000b\u0005\u0013(/Y=\u0011\u0005\tj\u0016B\u00010\u001f\u0005\u0019!u.\u001e2mK\u0006)\u0011m\u0018\u0013fcR\u0011A*\u0019\u0005\b!.\t\t\u00111\u0001Z\u0003\t\t\u0007%A\u0001o+\u0005)\u0007C\u0001\u0012g\u0013\t9gD\u0001\u0003M_:<\u0017!\u00028`I\u0015\fHC\u0001\'k\u0011\u001d\u0001f\"!AA\u0002\u0015\f!A\u001c\u0011\u0002\u00039\u000bQAT0%KF$\"\u0001T8\t\u000fA\u000b\u0012\u0011!a\u0001K\u0006\u0011a\nI\u0001\u000eIV\u0004H.[2bi\u0016\u001cV\r\u001c4\u0015\u0005\r\u001b\b\"\u0002;\u0014\u0001\u0004)\u0017!\u00027j[&$\u0018\u0001\u00037pC\u0012luN]3\u0015\u00031\u000bqb\u00195be\u0006\u001cG/\u001a:jgRL7m]\u0001\rKN$\u0018.\\1uKNK\'0Z\u0001\bQ\u0006\u001c8\u000b^3q+\u0005Y\bC\u0001\u0012}\u0013\tihDA\u0004C_>dW-\u00198\u0002\u00119,\u0007\u0010^*uKB$\u0012\u0001X\u0001\tiJL8\u000b\u001d7jiR\tQ%A\u0006ta2LG/\u001a:bi>\u0014X\u0003BA\u0005\u0003G)\"!a\u0003\u0011\t\u00055\u0011Q\u0004\b\u0005\u0003\u001f\tI\"\u0004\u0002\u0002\u0012)!\u00111CA\u000b\u0003\u0011)H/\u001b7\u000b\u0005\u0005]\u0011\u0001\u00026bm\u0006LA!a\u0007\u0002\u0012\u0005Y1\u000b\u001d7ji\u0016\u0014\u0018\r^8s\u0013\u0011\ty\"!\t\u0003\u0011=3Gi\\;cY\u0016TA!a\u0007\u0002\u0012\u00119\u0011Q\u0005\u000eC\u0002\u0005\u001d\"!\u0001\"\u0012\u0007q\u000bI\u0003E\u0002#\u0003WI1!!\f\u001f\u0005\r\te.\u001f"
    )
  ScalaInlineInfo: length = 0xC2 (unknown attribute)
   01 00 00 26 00 87 00 88 00 00 79 00 7A 01 00 1B
   00 6B 01 00 B3 00 36 00 00 82 00 83 01 00 B4 00
   3C 00 00 1D 00 36 01 00 70 00 71 01 00 B7 00 B8
   00 00 64 00 65 00 00 25 00 2F 00 00 25 00 26 00
   00 2E 00 2F 00 00 5B 00 2F 00 00 60 00 2F 00 00
   B9 00 BA 00 00 B9 00 E4 00 00 BB 00 BA 00 00 35
   00 36 00 00 3B 00 3C 00 00 24 00 3C 01 00 81 00
   7E 01 00 20 00 76 01 00 1F 00 36 01 00 75 00 71
   01 00 9E 00 9F 01 00 22 00 3C 01 00 7D 00 7E 01
   00 CB 00 CC 00 00 CB 00 51 00 00 CE 00 51 00 00
   50 00 51 00 00 57 00 51 00 00 BE 00 BF 00 00 BE
   00 42 00 00 41 00 42 00 00 48 00 42 00 00 4C 00
   42 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
