Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/concurrent/BatchingExecutor.class
  Last modified May 29, 2022; size 4932 bytes
  SHA-256 checksum 007349bf63009c648ee3676410147c86054bd49f8cd59b3d2ed7d2aa34ed1831
  Compiled from "BatchingExecutor.scala"
public interface scala.concurrent.BatchingExecutor extends java.util.concurrent.Executor
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/concurrent/BatchingExecutor
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               scala/concurrent/BatchingExecutor
    #2 = Class              #1            // scala/concurrent/BatchingExecutor
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/util/concurrent/Executor
    #6 = Class              #5            // java/util/concurrent/Executor
    #7 = Utf8               BatchingExecutor.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u0005Uf\u0001C\u0013\'!\u0003\r\tA\n\u0016\t\u000bi\u0002A\u0011\u0001\u001f\t\u000f\u0005\u0003!\u0019)C\u0007\u0005\u001a1\u0011\n\u0001Q\u0002*)C\u0001bS\u0002\u0003\u0002\u0004%)\u0002\u0014\u0005\t!\u000e\u0011\t\u0019!C\u000b#\"AAk\u0001B\u0001B\u00036Q\n\u0003\u0005V\u0007\t\u0005\r\u0011\"\u0006W\u0011!Q6A!a\u0001\n+Y\u0006\u0002C/\u0004\u0005\u0003\u0005\u000bUB,\t\u0011y\u001b!\u00111A\u0005\u0016}C\u0001bY\u0002\u0003\u0002\u0004%)\u0002\u001a\u0005\tM\u000e\u0011\t\u0011)Q\u0007A\")qm\u0001C\tQ\"1an\u0001Q\u0005\u000e=DQA]\u0002\u0005\u0006MDQA^\u0002\u0005\u0016]4\u0001\"!\u0002\u0001A\u00035\u0011q\u0001\u0005\n\u0003_\t\"\u0011!Q\u0001\n5C\u0011\"!\r\u0012\u0005\u0003\u0005\u000b\u0011B,\t\u0013\u0005M\u0012C!A!\u0002\u0013\u0001\u0007BB4\u0012\t\u0013\t)\u0004\u0003\u0005\u0002@E\u0001\u000bUBA\u0005\u0011\u00199\u0017\u0003\"\u0002\u0002B!1\u0011qI\t\u0005FqBq!!\u0013\u0012\t\u000b\nY\u0005\u0003\u0005\u0002RE\u0001KQBA*\u0011!\tI&\u0005Q\u0005\u000e\u0005m\u0003bBA/#\u0011\u0015\u0013q\f\u0004\t\u0003\u001f\u0003\u0001\u0015!\u0004\u0002\u0012\"I\u0011QI\u000f\u0003\u0002\u0003\u0006I!\u0014\u0005\u0007Ov!\t!a%\t\r\u0005\u001dS\u0004\"\u0012=\u0011\u001d\tY\n\u0001D\t\u0003;Cq!!)\u0001\r#\t\u0019\u000bC\u0004\u0002*\u0002!)\"a+\t\u000f\u0005=\u0006\u0001\"\u0006\u00022\n\u0001\")\u0019;dQ&tw-\u0012=fGV$xN\u001d\u0006\u0003O!\n!bY8oGV\u0014(/\u001a8u\u0015\u0005I\u0013!B:dC2\f7c\u0001\u0001,gA\u0011A&M\u0007\u0002[)\u0011afL\u0001\u0005Y\u0006twMC\u00011\u0003\u0011Q\u0017M^1\n\u0005Ij#AB(cU\u0016\u001cG\u000f\u0005\u00025q5\tQG\u0003\u0002(m)\u0011qgL\u0001\u0005kRLG.\u0003\u0002:k\tAQ\t_3dkR|\'/\u0001\u0004%S:LG\u000fJ\u0002\u0001)\u0005i\u0004C\u0001 @\u001b\u0005A\u0013B\u0001!)\u0005\u0011)f.\u001b;\u0002\u0017}#\u0018m]6t\u0019>\u001c\u0017\r\\\u000b\u0002\u0007B\u0019A\u0006\u0012$\n\u0005\u0015k#a\u0003+ie\u0016\fG\rT8dC2\u0004\"AP$\n\u0005!C#AB!osJ+gMA\u0007BEN$(/Y2u\u0005\u0006$8\r[\n\u0003\u0007\u0019\u000bQAZ5sgR,\u0012!\u0014\t\u0003Y9K!aT\u0017\u0003\u0011I+hN\\1cY\u0016\f\u0011BZ5sgR|F%Z9\u0015\u0005u\u0012\u0006bB*\u0006\u0003\u0003\u0005\r!T\u0001\u0004q\u0012\n\u0014A\u00024jeN$\b%A\u0003pi\",\'/F\u0001X!\rq\u0004,T\u0005\u00033\"\u0012Q!\u0011:sCf\f\u0011b\u001c;iKJ|F%Z9\u0015\u0005ub\u0006bB*\t\u0003\u0003\u0005\raV\u0001\u0007_RDWM\u001d\u0011\u0002\tML\'0Z\u000b\u0002AB\u0011a(Y\u0005\u0003E\"\u00121!\u00138u\u0003!\u0019\u0018N_3`I\u0015\fHCA\u001ff\u0011\u001d\u00196\"!AA\u0002\u0001\fQa]5{K\u0002\na\u0001P5oSRtD\u0003B5lY6\u0004\"A[\u0002\u000e\u0003\u0001AQaS\u0007A\u00025CQ!V\u0007A\u0002]CQAX\u0007A\u0002\u0001\fa\"\u001a8tkJ,7)\u00199bG&$\u0018\u0010\u0006\u0002Xa\")\u0011O\u0004a\u0001A\u000691-\u001e:TSj,\u0017\u0001\u00029vg\"$\"!\u0010;\t\u000bU|\u0001\u0019A\'\u0002\u0003I\fAA];o\u001dR\u0011Q\b\u001f\u0005\u0006sB\u0001\r\u0001Y\u0001\u0002]\"\u0012\u0001c\u001f\t\u0003y~l\u0011! \u0006\u0003}\"\n!\"\u00198o_R\fG/[8o\u0013\r\t\t! \u0002\bi\u0006LGN]3dS\r\u0019\u0011#\b\u0002\u000b\u0003NLhn\u0019\"bi\u000eD7cB\tj\u001b\u0006%\u0011\u0011\u0003\t\u0005\u0003\u0017\ti!D\u0001\'\u0013\r\tyA\n\u0002\r\u00052|7m[\"p]R,\u0007\u0010\u001e\t\b}\u0005M\u0011\u0011BA\f\u0013\r\t)\u0002\u000b\u0002\n\rVt7\r^5p]F\u0002B!!\u0007\u0002*9!\u00111DA\u0013\u001d\u0011\ti\"a\t\u000e\u0005\u0005}!bAA\u0011w\u00051AH]8pizJ\u0011!K\u0005\u0004\u0003OA\u0013a\u00029bG.\fw-Z\u0005\u0005\u0003W\tiCA\u0005UQJ|w/\u00192mK*\u0019\u0011q\u0005\u0015\u0002\r}3\u0017N]:u\u0003\u0019yv\u000e\u001e5fe\u0006)ql]5{KRA\u0011qGA\u001d\u0003w\ti\u0004\u0005\u0002k#!1\u0011qF\u000bA\u00025Ca!!\r\u0016\u0001\u00049\u0006BBA\u001a+\u0001\u0007\u0001-\u0001\nqCJ,g\u000e\u001e\"m_\u000e\\7i\u001c8uKb$H\u0003BA\u001c\u0003\u0007Ba!!\u0012\u0018\u0001\u0004i\u0015\u0001\u0003:v]:\f\'\r\\3\u0002\u0007I,h.A\u0003baBd\u0017\u0010\u0006\u0003\u0002\u0018\u00055\u0003bBA(3\u0001\u0007\u0011\u0011B\u0001\u0011aJ,gO\u00117pG.\u001cuN\u001c;fqR\f\u0001B]3tk\nl\u0017\u000e\u001e\u000b\u0005\u0003/\t)\u0006C\u0004\u0002Xi\u0001\r!a\u0006\u0002\u000b\r\fWo]3\u0002\u001b\rdwN\\3B]\u0012\u001cE.Z1s)\t\t9$A\u0004cY>\u001c7n\u00148\u0016\t\u0005\u0005\u0014\u0011\u000e\u000b\u0005\u0003G\n)\t\u0006\u0003\u0002f\u0005m\u0004\u0003BA4\u0003Sb\u0001\u0001B\u0004\u0002lq\u0011\r!!\u001c\u0003\u0003Q\u000bB!a\u001c\u0002vA\u0019a(!\u001d\n\u0007\u0005M\u0004FA\u0004O_RD\u0017N\\4\u0011\u0007y\n9(C\u0002\u0002z!\u00121!\u00118z\u0011\u001d\ti\b\ba\u0002\u0003\u007f\n!\u0002]3s[&\u001c8/[8o!\u0011\tY!!!\n\u0007\u0005\reE\u0001\u0005DC:\fu/Y5u\u0011!\t9\t\bCA\u0002\u0005%\u0015!\u0002;ik:\\\u0007#\u0002 \u0002\f\u0006\u0015\u0014bAAGQ\tAAHY=oC6,gHA\u0005Ts:\u001c\')\u0019;dQN\u0019Q$[\'\u0015\t\u0005U\u0015q\u0013\t\u0003UvAa!!\u0012 \u0001\u0004i\u0005F\u0001\u0011|\u0003I\u0019XOY7ji\u001a{\'/\u0012=fGV$\u0018n\u001c8\u0015\u0007u\ny\n\u0003\u0004\u0002F\u0005\u0002\r!T\u0001\u000ee\u0016\u0004xN\u001d;GC&dWO]3\u0015\u0007u\n)\u000bC\u0004\u0002(\n\u0002\r!a\u0006\u0002\u0013QD\'o\\<bE2,\u0017AE:vE6LG/Q:z]\u000e\u0014\u0015\r^2iK\u0012$2!PAW\u0011\u0019\t)e\ta\u0001\u001b\u0006\t2/\u001e2nSR\u001c\u0016P\\2CCR\u001c\u0007.\u001a3\u0015\u0007u\n\u0019\f\u0003\u0004\u0002F\u0011\u0002\r!\u0014
   #11 = Utf8               scala/concurrent/BatchingExecutor$AbstractBatch
   #12 = Class              #11           // scala/concurrent/BatchingExecutor$AbstractBatch
   #13 = Utf8               AbstractBatch
   #14 = Utf8               scala/concurrent/BatchingExecutor$AsyncBatch
   #15 = Class              #14           // scala/concurrent/BatchingExecutor$AsyncBatch
   #16 = Utf8               AsyncBatch
   #17 = Utf8               scala/concurrent/BatchingExecutor$SyncBatch
   #18 = Class              #17           // scala/concurrent/BatchingExecutor$SyncBatch
   #19 = Utf8               SyncBatch
   #20 = Utf8               scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq
   #21 = Utf8               (Ljava/lang/ThreadLocal;)V
   #22 = Utf8               (Ljava/lang/ThreadLocal<Ljava/lang/Object;>;)V
   #23 = Utf8               x$1
   #24 = Utf8               scala$concurrent$BatchingExecutor$$_tasksLocal
   #25 = Utf8               ()Ljava/lang/ThreadLocal;
   #26 = Utf8               ()Ljava/lang/ThreadLocal<Ljava/lang/Object;>;
   #27 = Utf8               submitForExecution
   #28 = Utf8               (Ljava/lang/Runnable;)V
   #29 = Utf8               runnable
   #30 = Utf8               reportFailure
   #31 = Utf8               (Ljava/lang/Throwable;)V
   #32 = Utf8               throwable
   #33 = Utf8               submitAsyncBatched$
   #34 = Utf8               (Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #35 = Utf8               $this
   #36 = Utf8               submitAsyncBatched
   #37 = NameAndType        #36:#28       // submitAsyncBatched:(Ljava/lang/Runnable;)V
   #38 = InterfaceMethodref #2.#37        // scala/concurrent/BatchingExecutor.submitAsyncBatched:(Ljava/lang/Runnable;)V
   #39 = Utf8               Lscala/concurrent/BatchingExecutor;
   #40 = Utf8               Ljava/lang/Runnable;
   #41 = NameAndType        #24:#25       // scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
   #42 = InterfaceMethodref #2.#41        // scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
   #43 = Utf8               java/lang/ThreadLocal
   #44 = Class              #43           // java/lang/ThreadLocal
   #45 = Utf8               get
   #46 = Utf8               ()Ljava/lang/Object;
   #47 = NameAndType        #45:#46       // get:()Ljava/lang/Object;
   #48 = Methodref          #44.#47       // java/lang/ThreadLocal.get:()Ljava/lang/Object;
   #49 = Utf8               push
   #50 = NameAndType        #49:#28       // push:(Ljava/lang/Runnable;)V
   #51 = Methodref          #15.#50       // scala/concurrent/BatchingExecutor$AsyncBatch.push:(Ljava/lang/Runnable;)V
   #52 = Utf8               <init>
   #53 = NameAndType        #52:#34       // "<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #54 = Methodref          #15.#53       // scala/concurrent/BatchingExecutor$AsyncBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #55 = NameAndType        #27:#28       // submitForExecution:(Ljava/lang/Runnable;)V
   #56 = InterfaceMethodref #2.#55        // scala/concurrent/BatchingExecutor.submitForExecution:(Ljava/lang/Runnable;)V
   #57 = Utf8               b
   #58 = Utf8               Ljava/lang/Object;
   #59 = Utf8               this
   #60 = Utf8               submitSyncBatched$
   #61 = Utf8               submitSyncBatched
   #62 = NameAndType        #61:#28       // submitSyncBatched:(Ljava/lang/Runnable;)V
   #63 = InterfaceMethodref #2.#62        // scala/concurrent/BatchingExecutor.submitSyncBatched:(Ljava/lang/Runnable;)V
   #64 = Utf8               java/lang/InterruptedException
   #65 = Class              #64           // java/lang/InterruptedException
   #66 = Utf8               java/lang/Throwable
   #67 = Class              #66           // java/lang/Throwable
   #68 = Utf8               runnable is null
   #69 = String             #68           // runnable is null
   #70 = Utf8               java/util/Objects
   #71 = Class              #70           // java/util/Objects
   #72 = Utf8               requireNonNull
   #73 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #74 = NameAndType        #72:#73       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #75 = Methodref          #71.#74       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #76 = Methodref          #18.#50       // scala/concurrent/BatchingExecutor$SyncBatch.push:(Ljava/lang/Runnable;)V
   #77 = Utf8               java/lang/Integer
   #78 = Class              #77           // java/lang/Integer
   #79 = Utf8               intValue
   #80 = Utf8               ()I
   #81 = NameAndType        #79:#80       // intValue:()I
   #82 = Methodref          #78.#81       // java/lang/Integer.intValue:()I
   #83 = Utf8               valueOf
   #84 = Utf8               (I)Ljava/lang/Integer;
   #85 = NameAndType        #83:#84       // valueOf:(I)Ljava/lang/Integer;
   #86 = Methodref          #78.#85       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #87 = Utf8               set
   #88 = Utf8               (Ljava/lang/Object;)V
   #89 = NameAndType        #87:#88       // set:(Ljava/lang/Object;)V
   #90 = Methodref          #44.#89       // java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
   #91 = NameAndType        #30:#31       // reportFailure:(Ljava/lang/Throwable;)V
   #92 = InterfaceMethodref #2.#91        // scala/concurrent/BatchingExecutor.reportFailure:(Ljava/lang/Throwable;)V
   #93 = Utf8               scala/util/control/NonFatal$
   #94 = Class              #93           // scala/util/control/NonFatal$
   #95 = Utf8               MODULE$
   #96 = Utf8               Lscala/util/control/NonFatal$;
   #97 = NameAndType        #95:#96       // MODULE$:Lscala/util/control/NonFatal$;
   #98 = Fieldref           #94.#97       // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
   #99 = Utf8               apply
  #100 = Utf8               (Ljava/lang/Throwable;)Z
  #101 = NameAndType        #99:#100      // apply:(Ljava/lang/Throwable;)Z
  #102 = Methodref          #94.#101      // scala/util/control/NonFatal$.apply:(Ljava/lang/Throwable;)Z
  #103 = Methodref          #18.#53       // scala/concurrent/BatchingExecutor$SyncBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
  #104 = Utf8               batch
  #105 = Utf8               Lscala/concurrent/BatchingExecutor$SyncBatch;
  #106 = Utf8               i
  #107 = Utf8               I
  #108 = Utf8               tl
  #109 = Utf8               Ljava/lang/ThreadLocal;
  #110 = Utf8               java/lang/Runnable
  #111 = Class              #110          // java/lang/Runnable
  #112 = Utf8               $init$
  #113 = Utf8               (Lscala/concurrent/BatchingExecutor;)V
  #114 = Utf8               ()V
  #115 = NameAndType        #52:#114      // "<init>":()V
  #116 = Methodref          #44.#115      // java/lang/ThreadLocal."<init>":()V
  #117 = NameAndType        #20:#21       // scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq:(Ljava/lang/ThreadLocal;)V
  #118 = InterfaceMethodref #2.#117       // scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq:(Ljava/lang/ThreadLocal;)V
  #119 = Utf8               Signature
  #120 = Utf8               MethodParameters
  #121 = Utf8               Code
  #122 = Utf8               LineNumberTable
  #123 = Utf8               LocalVariableTable
  #124 = Utf8               StackMapTable
  #125 = Utf8               InnerClasses
  #126 = Utf8               SourceFile
  #127 = Utf8               RuntimeVisibleAnnotations
  #128 = Utf8               ScalaInlineInfo
  #129 = Utf8               ScalaSig
{
  public abstract void scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq(java.lang.ThreadLocal<java.lang.Object>);
    descriptor: (Ljava/lang/ThreadLocal;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #22                          // (Ljava/lang/ThreadLocal<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract java.lang.ThreadLocal<java.lang.Object> scala$concurrent$BatchingExecutor$$_tasksLocal();
    descriptor: ()Ljava/lang/ThreadLocal;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #26                          // ()Ljava/lang/ThreadLocal<Ljava/lang/Object;>;

  public abstract void submitForExecution(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      runnable                       final

  public abstract void reportFailure(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      throwable                      final

  public static void submitAsyncBatched$(scala.concurrent.BatchingExecutor, java.lang.Runnable);
    descriptor: (Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #38                 // InterfaceMethod submitAsyncBatched:(Ljava/lang/Runnable;)V
         5: return
      LineNumberTable:
        line 235: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/concurrent/BatchingExecutor;
            0       6     1 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      runnable                       final

  public default void submitAsyncBatched(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: invokeinterface #42,  1           // InterfaceMethod scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
         6: invokevirtual #48                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
         9: astore_2
        10: aload_2
        11: instanceof    #15                 // class scala/concurrent/BatchingExecutor$AsyncBatch
        14: ifeq          26
        17: aload_2
        18: checkcast     #15                 // class scala/concurrent/BatchingExecutor$AsyncBatch
        21: aload_1
        22: invokevirtual #51                 // Method scala/concurrent/BatchingExecutor$AsyncBatch.push:(Ljava/lang/Runnable;)V
        25: return
        26: aload_0
        27: new           #15                 // class scala/concurrent/BatchingExecutor$AsyncBatch
        30: dup
        31: aload_0
        32: aload_1
        33: invokespecial #54                 // Method scala/concurrent/BatchingExecutor$AsyncBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
        36: invokeinterface #56,  2           // InterfaceMethod submitForExecution:(Ljava/lang/Runnable;)V
        41: return
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 236: 0
        line 237: 10
        line 238: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      31     2     b   Ljava/lang/Object;
            0      42     0  this   Lscala/concurrent/BatchingExecutor;
            0      42     1 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      runnable                       final

  public static void submitSyncBatched$(scala.concurrent.BatchingExecutor, java.lang.Runnable);
    descriptor: (Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #63                 // InterfaceMethod submitSyncBatched:(Ljava/lang/Runnable;)V
         5: return
      LineNumberTable:
        line 245: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/concurrent/BatchingExecutor;
            0       6     1 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      runnable                       final

  public default void submitSyncBatched(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=9, args_size=2
         0: aload_1
         1: ldc           #69                 // String runnable is null
         3: invokestatic  #75                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: aload_0
         8: invokeinterface #42,  1           // InterfaceMethod scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
        13: astore_2
        14: aload_2
        15: invokevirtual #48                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
        18: astore_3
        19: aload_3
        20: instanceof    #18                 // class scala/concurrent/BatchingExecutor$SyncBatch
        23: ifeq          35
        26: aload_3
        27: checkcast     #18                 // class scala/concurrent/BatchingExecutor$SyncBatch
        30: aload_1
        31: invokevirtual #76                 // Method scala/concurrent/BatchingExecutor$SyncBatch.push:(Ljava/lang/Runnable;)V
        34: return
        35: aload_3
        36: ifnull        49
        39: aload_3
        40: checkcast     #78                 // class java/lang/Integer
        43: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
        46: goto          50
        49: iconst_0
        50: istore        4
        52: iload         4
        54: bipush        16
        56: if_icmpge     136
        59: aload_2
        60: iload         4
        62: iconst_1
        63: iadd
        64: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        67: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
        70: aload_0
        71: aload_1
        72: invokeinterface #56,  2           // InterfaceMethod submitForExecution:(Ljava/lang/Runnable;)V
        77: goto          130
        80: astore        5
        82: aload_0
        83: aload         5
        85: invokeinterface #92,  2           // InterfaceMethod reportFailure:(Ljava/lang/Throwable;)V
        90: goto          130
        93: astore        6
        95: getstatic     #98                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
        98: aload         6
       100: invokevirtual #102                // Method scala/util/control/NonFatal$.apply:(Ljava/lang/Throwable;)Z
       103: ifeq          117
       106: aload_0
       107: aload         6
       109: invokeinterface #92,  2           // InterfaceMethod reportFailure:(Ljava/lang/Throwable;)V
       114: goto          130
       117: aload         6
       119: athrow
       120: astore        7
       122: aload_2
       123: aload_3
       124: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       127: aload         7
       129: athrow
       130: aload_2
       131: aload_3
       132: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       135: return
       136: new           #18                 // class scala/concurrent/BatchingExecutor$SyncBatch
       139: dup
       140: aload_0
       141: aload_1
       142: invokespecial #103                // Method scala/concurrent/BatchingExecutor$SyncBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
       145: astore        8
       147: aload_2
       148: aload         8
       150: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       153: aload_0
       154: aload         8
       156: invokeinterface #56,  2           // InterfaceMethod submitForExecution:(Ljava/lang/Runnable;)V
       161: aload_2
       162: aload_3
       163: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       166: return
      Exception table:
         from    to  target type
            70    77    80   Class java/lang/InterruptedException
            70    77    93   Class java/lang/Throwable
            70   120   120   any
      StackMapTable: number_of_entries = 9
        frame_type = 253 /* append */
          offset_delta = 35
          locals = [ class java/lang/ThreadLocal, class java/lang/Object ]
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class scala/concurrent/BatchingExecutor, class java/lang/Runnable, class java/lang/ThreadLocal, class java/lang/Object, int ]
          stack = [ class java/lang/InterruptedException ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ top, class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/concurrent/BatchingExecutor, class java/lang/Runnable, class java/lang/ThreadLocal, class java/lang/Object, int ]
          stack = [ class java/lang/Throwable ]
        frame_type = 9 /* same */
        frame_type = 5 /* same */
      LineNumberTable:
        line 246: 0
        line 247: 7
        line 248: 14
        line 249: 19
        line 251: 35
        line 252: 52
        line 253: 59
        line 254: 70
        line 257: 82
        line 258: 95
        line 259: 106
        line 261: 122
        line 263: 136
        line 264: 147
        line 265: 153
        line 266: 161
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          147      19     8 batch   Lscala/concurrent/BatchingExecutor$SyncBatch;
           52     114     4     i   I
           14     152     2    tl   Ljava/lang/ThreadLocal;
           19     147     3     b   Ljava/lang/Object;
            0     167     0  this   Lscala/concurrent/BatchingExecutor;
            0     167     1 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      runnable                       final

  public static void $init$(scala.concurrent.BatchingExecutor);
    descriptor: (Lscala/concurrent/BatchingExecutor;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: new           #44                 // class java/lang/ThreadLocal
         4: dup
         5: invokespecial #116                // Method java/lang/ThreadLocal."<init>":()V
         8: invokeinterface #118,  2          // InterfaceMethod scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq:(Ljava/lang/ThreadLocal;)V
        13: return
      LineNumberTable:
        line 93: 0
        line 92: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Lscala/concurrent/BatchingExecutor;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  private abstract #13= #12 of #2;        // AbstractBatch=class scala/concurrent/BatchingExecutor$AbstractBatch of class scala/concurrent/BatchingExecutor
  private final #16= #15 of #2;           // AsyncBatch=class scala/concurrent/BatchingExecutor$AsyncBatch of class scala/concurrent/BatchingExecutor
  private final #19= #18 of #2;           // SyncBatch=class scala/concurrent/BatchingExecutor$SyncBatch of class scala/concurrent/BatchingExecutor
SourceFile: "BatchingExecutor.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Uf\u0001C\u0013\'!\u0003\r\tA\n\u0016\t\u000bi\u0002A\u0011\u0001\u001f\t\u000f\u0005\u0003!\u0019)C\u0007\u0005\u001a1\u0011\n\u0001Q\u0002*)C\u0001bS\u0002\u0003\u0002\u0004%)\u0002\u0014\u0005\t!\u000e\u0011\t\u0019!C\u000b#\"AAk\u0001B\u0001B\u00036Q\n\u0003\u0005V\u0007\t\u0005\r\u0011\"\u0006W\u0011!Q6A!a\u0001\n+Y\u0006\u0002C/\u0004\u0005\u0003\u0005\u000bUB,\t\u0011y\u001b!\u00111A\u0005\u0016}C\u0001bY\u0002\u0003\u0002\u0004%)\u0002\u001a\u0005\tM\u000e\u0011\t\u0011)Q\u0007A\")qm\u0001C\tQ\"1an\u0001Q\u0005\u000e=DQA]\u0002\u0005\u0006MDQA^\u0002\u0005\u0016]4\u0001\"!\u0002\u0001A\u00035\u0011q\u0001\u0005\n\u0003_\t\"\u0011!Q\u0001\n5C\u0011\"!\r\u0012\u0005\u0003\u0005\u000b\u0011B,\t\u0013\u0005M\u0012C!A!\u0002\u0013\u0001\u0007BB4\u0012\t\u0013\t)\u0004\u0003\u0005\u0002@E\u0001\u000bUBA\u0005\u0011\u00199\u0017\u0003\"\u0002\u0002B!1\u0011qI\t\u0005FqBq!!\u0013\u0012\t\u000b\nY\u0005\u0003\u0005\u0002RE\u0001KQBA*\u0011!\tI&\u0005Q\u0005\u000e\u0005m\u0003bBA/#\u0011\u0015\u0013q\f\u0004\t\u0003\u001f\u0003\u0001\u0015!\u0004\u0002\u0012\"I\u0011QI\u000f\u0003\u0002\u0003\u0006I!\u0014\u0005\u0007Ov!\t!a%\t\r\u0005\u001dS\u0004\"\u0012=\u0011\u001d\tY\n\u0001D\t\u0003;Cq!!)\u0001\r#\t\u0019\u000bC\u0004\u0002*\u0002!)\"a+\t\u000f\u0005=\u0006\u0001\"\u0006\u00022\n\u0001\")\u0019;dQ&tw-\u0012=fGV$xN\u001d\u0006\u0003O!\n!bY8oGV\u0014(/\u001a8u\u0015\u0005I\u0013!B:dC2\f7c\u0001\u0001,gA\u0011A&M\u0007\u0002[)\u0011afL\u0001\u0005Y\u0006twMC\u00011\u0003\u0011Q\u0017M^1\n\u0005Ij#AB(cU\u0016\u001cG\u000f\u0005\u00025q5\tQG\u0003\u0002(m)\u0011qgL\u0001\u0005kRLG.\u0003\u0002:k\tAQ\t_3dkR|\'/\u0001\u0004%S:LG\u000fJ\u0002\u0001)\u0005i\u0004C\u0001 @\u001b\u0005A\u0013B\u0001!)\u0005\u0011)f.\u001b;\u0002\u0017}#\u0018m]6t\u0019>\u001c\u0017\r\\\u000b\u0002\u0007B\u0019A\u0006\u0012$\n\u0005\u0015k#a\u0003+ie\u0016\fG\rT8dC2\u0004\"AP$\n\u0005!C#AB!osJ+gMA\u0007BEN$(/Y2u\u0005\u0006$8\r[\n\u0003\u0007\u0019\u000bQAZ5sgR,\u0012!\u0014\t\u0003Y9K!aT\u0017\u0003\u0011I+hN\\1cY\u0016\f\u0011BZ5sgR|F%Z9\u0015\u0005u\u0012\u0006bB*\u0006\u0003\u0003\u0005\r!T\u0001\u0004q\u0012\n\u0014A\u00024jeN$\b%A\u0003pi\",\'/F\u0001X!\rq\u0004,T\u0005\u00033\"\u0012Q!\u0011:sCf\f\u0011b\u001c;iKJ|F%Z9\u0015\u0005ub\u0006bB*\t\u0003\u0003\u0005\raV\u0001\u0007_RDWM\u001d\u0011\u0002\tML\'0Z\u000b\u0002AB\u0011a(Y\u0005\u0003E\"\u00121!\u00138u\u0003!\u0019\u0018N_3`I\u0015\fHCA\u001ff\u0011\u001d\u00196\"!AA\u0002\u0001\fQa]5{K\u0002\na\u0001P5oSRtD\u0003B5lY6\u0004\"A[\u0002\u000e\u0003\u0001AQaS\u0007A\u00025CQ!V\u0007A\u0002]CQAX\u0007A\u0002\u0001\fa\"\u001a8tkJ,7)\u00199bG&$\u0018\u0010\u0006\u0002Xa\")\u0011O\u0004a\u0001A\u000691-\u001e:TSj,\u0017\u0001\u00029vg\"$\"!\u0010;\t\u000bU|\u0001\u0019A\'\u0002\u0003I\fAA];o\u001dR\u0011Q\b\u001f\u0005\u0006sB\u0001\r\u0001Y\u0001\u0002]\"\u0012\u0001c\u001f\t\u0003y~l\u0011! \u0006\u0003}\"\n!\"\u00198o_R\fG/[8o\u0013\r\t\t! \u0002\bi\u0006LGN]3dS\r\u0019\u0011#\b\u0002\u000b\u0003NLhn\u0019\"bi\u000eD7cB\tj\u001b\u0006%\u0011\u0011\u0003\t\u0005\u0003\u0017\ti!D\u0001\'\u0013\r\tyA\n\u0002\r\u00052|7m[\"p]R,\u0007\u0010\u001e\t\b}\u0005M\u0011\u0011BA\f\u0013\r\t)\u0002\u000b\u0002\n\rVt7\r^5p]F\u0002B!!\u0007\u0002*9!\u00111DA\u0013\u001d\u0011\ti\"a\t\u000e\u0005\u0005}!bAA\u0011w\u00051AH]8pizJ\u0011!K\u0005\u0004\u0003OA\u0013a\u00029bG.\fw-Z\u0005\u0005\u0003W\tiCA\u0005UQJ|w/\u00192mK*\u0019\u0011q\u0005\u0015\u0002\r}3\u0017N]:u\u0003\u0019yv\u000e\u001e5fe\u0006)ql]5{KRA\u0011qGA\u001d\u0003w\ti\u0004\u0005\u0002k#!1\u0011qF\u000bA\u00025Ca!!\r\u0016\u0001\u00049\u0006BBA\u001a+\u0001\u0007\u0001-\u0001\nqCJ,g\u000e\u001e\"m_\u000e\\7i\u001c8uKb$H\u0003BA\u001c\u0003\u0007Ba!!\u0012\u0018\u0001\u0004i\u0015\u0001\u0003:v]:\f\'\r\\3\u0002\u0007I,h.A\u0003baBd\u0017\u0010\u0006\u0003\u0002\u0018\u00055\u0003bBA(3\u0001\u0007\u0011\u0011B\u0001\u0011aJ,gO\u00117pG.\u001cuN\u001c;fqR\f\u0001B]3tk\nl\u0017\u000e\u001e\u000b\u0005\u0003/\t)\u0006C\u0004\u0002Xi\u0001\r!a\u0006\u0002\u000b\r\fWo]3\u0002\u001b\rdwN\\3B]\u0012\u001cE.Z1s)\t\t9$A\u0004cY>\u001c7n\u00148\u0016\t\u0005\u0005\u0014\u0011\u000e\u000b\u0005\u0003G\n)\t\u0006\u0003\u0002f\u0005m\u0004\u0003BA4\u0003Sb\u0001\u0001B\u0004\u0002lq\u0011\r!!\u001c\u0003\u0003Q\u000bB!a\u001c\u0002vA\u0019a(!\u001d\n\u0007\u0005M\u0004FA\u0004O_RD\u0017N\\4\u0011\u0007y\n9(C\u0002\u0002z!\u00121!\u00118z\u0011\u001d\ti\b\ba\u0002\u0003\u007f\n!\u0002]3s[&\u001c8/[8o!\u0011\tY!!!\n\u0007\u0005\reE\u0001\u0005DC:\fu/Y5u\u0011!\t9\t\bCA\u0002\u0005%\u0015!\u0002;ik:\\\u0007#\u0002 \u0002\f\u0006\u0015\u0014bAAGQ\tAAHY=oC6,gHA\u0005Ts:\u001c\')\u0019;dQN\u0019Q$[\'\u0015\t\u0005U\u0015q\u0013\t\u0003UvAa!!\u0012 \u0001\u0004i\u0005F\u0001\u0011|\u0003I\u0019XOY7ji\u001a{\'/\u0012=fGV$\u0018n\u001c8\u0015\u0007u\ny\n\u0003\u0004\u0002F\u0005\u0002\r!T\u0001\u000ee\u0016\u0004xN\u001d;GC&dWO]3\u0015\u0007u\n)\u000bC\u0004\u0002(\n\u0002\r!a\u0006\u0002\u0013QD\'o\\<bE2,\u0017AE:vE6LG/Q:z]\u000e\u0014\u0015\r^2iK\u0012$2!PAW\u0011\u0019\t)e\ta\u0001\u001b\u0006\t2/\u001e2nSR\u001c\u0016P\\2CCR\u001c\u0007.\u001a3\u0015\u0007u\n\u0019\f\u0003\u0004\u0002F\u0011\u0002\r!\u0014"
    )
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 00 00 09 00 70 00 71 01 00 1E 00 1F 00 00 18
   00 19 00 00 14 00 15 00 00 24 00 1C 01 00 21 00
   22 01 00 1B 00 1C 00 00 3D 00 1C 01 00 3C 00 22
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
