Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/objectweb/asm/ModuleVisitor.class
  Last modified May 29, 2022; size 2276 bytes
  SHA-256 checksum 86e37dde317e99f435aa7e827a9211c495441a2a400708163db7c6009b93724e
  Compiled from "ModuleVisitor.java"
public abstract class org.objectweb.asm.ModuleVisitor
  minor version: 0
  major version: 49
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // org/objectweb/asm/ModuleVisitor
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 10, attributes: 1
Constant pool:
   #1 = Utf8               org/objectweb/asm/ModuleVisitor
   #2 = Class              #1             // org/objectweb/asm/ModuleVisitor
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               ModuleVisitor.java
   #6 = Utf8               api
   #7 = Utf8               I
   #8 = Utf8               mv
   #9 = Utf8               Lorg/objectweb/asm/ModuleVisitor;
  #10 = Utf8               <init>
  #11 = Utf8               (I)V
  #12 = Utf8               (ILorg/objectweb/asm/ModuleVisitor;)V
  #13 = NameAndType        #10:#12        // "<init>":(ILorg/objectweb/asm/ModuleVisitor;)V
  #14 = Methodref          #2.#13         // org/objectweb/asm/ModuleVisitor."<init>":(ILorg/objectweb/asm/ModuleVisitor;)V
  #15 = Utf8               this
  #16 = Utf8               ()V
  #17 = NameAndType        #10:#16        // "<init>":()V
  #18 = Methodref          #4.#17         // java/lang/Object."<init>":()V
  #19 = Integer            589824
  #20 = Integer            524288
  #21 = Integer            458752
  #22 = Integer            393216
  #23 = Integer            327680
  #24 = Integer            262144
  #25 = Integer            17432576
  #26 = Utf8               java/lang/IllegalArgumentException
  #27 = Class              #26            // java/lang/IllegalArgumentException
  #28 = Utf8               java/lang/StringBuilder
  #29 = Class              #28            // java/lang/StringBuilder
  #30 = Methodref          #29.#17        // java/lang/StringBuilder."<init>":()V
  #31 = Utf8               Unsupported api
  #32 = String             #31            // Unsupported api
  #33 = Utf8               append
  #34 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #35 = NameAndType        #33:#34        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #36 = Methodref          #29.#35        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #37 = Utf8               (I)Ljava/lang/StringBuilder;
  #38 = NameAndType        #33:#37        // append:(I)Ljava/lang/StringBuilder;
  #39 = Methodref          #29.#38        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #40 = Utf8               toString
  #41 = Utf8               ()Ljava/lang/String;
  #42 = NameAndType        #40:#41        // toString:()Ljava/lang/String;
  #43 = Methodref          #29.#42        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #44 = Utf8               (Ljava/lang/String;)V
  #45 = NameAndType        #10:#44        // "<init>":(Ljava/lang/String;)V
  #46 = Methodref          #27.#45        // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #47 = Utf8               org/objectweb/asm/Constants
  #48 = Class              #47            // org/objectweb/asm/Constants
  #49 = Utf8               checkAsmExperimental
  #50 = Utf8               (Ljava/lang/Object;)V
  #51 = NameAndType        #49:#50        // checkAsmExperimental:(Ljava/lang/Object;)V
  #52 = Methodref          #48.#51        // org/objectweb/asm/Constants.checkAsmExperimental:(Ljava/lang/Object;)V
  #53 = NameAndType        #6:#7          // api:I
  #54 = Fieldref           #2.#53         // org/objectweb/asm/ModuleVisitor.api:I
  #55 = NameAndType        #8:#9          // mv:Lorg/objectweb/asm/ModuleVisitor;
  #56 = Fieldref           #2.#55         // org/objectweb/asm/ModuleVisitor.mv:Lorg/objectweb/asm/ModuleVisitor;
  #57 = Utf8               moduleVisitor
  #58 = Utf8               visitMainClass
  #59 = NameAndType        #58:#44        // visitMainClass:(Ljava/lang/String;)V
  #60 = Methodref          #2.#59         // org/objectweb/asm/ModuleVisitor.visitMainClass:(Ljava/lang/String;)V
  #61 = Utf8               mainClass
  #62 = Utf8               Ljava/lang/String;
  #63 = Utf8               visitPackage
  #64 = NameAndType        #63:#44        // visitPackage:(Ljava/lang/String;)V
  #65 = Methodref          #2.#64         // org/objectweb/asm/ModuleVisitor.visitPackage:(Ljava/lang/String;)V
  #66 = Utf8               packaze
  #67 = Utf8               visitRequire
  #68 = Utf8               (Ljava/lang/String;ILjava/lang/String;)V
  #69 = NameAndType        #67:#68        // visitRequire:(Ljava/lang/String;ILjava/lang/String;)V
  #70 = Methodref          #2.#69         // org/objectweb/asm/ModuleVisitor.visitRequire:(Ljava/lang/String;ILjava/lang/String;)V
  #71 = Utf8               module
  #72 = Utf8               access
  #73 = Utf8               version
  #74 = Utf8               visitExport
  #75 = Utf8               (Ljava/lang/String;I[Ljava/lang/String;)V
  #76 = NameAndType        #74:#75        // visitExport:(Ljava/lang/String;I[Ljava/lang/String;)V
  #77 = Methodref          #2.#76         // org/objectweb/asm/ModuleVisitor.visitExport:(Ljava/lang/String;I[Ljava/lang/String;)V
  #78 = Utf8               modules
  #79 = Utf8               [Ljava/lang/String;
  #80 = Utf8               visitOpen
  #81 = NameAndType        #80:#75        // visitOpen:(Ljava/lang/String;I[Ljava/lang/String;)V
  #82 = Methodref          #2.#81         // org/objectweb/asm/ModuleVisitor.visitOpen:(Ljava/lang/String;I[Ljava/lang/String;)V
  #83 = Utf8               visitUse
  #84 = NameAndType        #83:#44        // visitUse:(Ljava/lang/String;)V
  #85 = Methodref          #2.#84         // org/objectweb/asm/ModuleVisitor.visitUse:(Ljava/lang/String;)V
  #86 = Utf8               service
  #87 = Utf8               visitProvide
  #88 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)V
  #89 = NameAndType        #87:#88        // visitProvide:(Ljava/lang/String;[Ljava/lang/String;)V
  #90 = Methodref          #2.#89         // org/objectweb/asm/ModuleVisitor.visitProvide:(Ljava/lang/String;[Ljava/lang/String;)V
  #91 = Utf8               providers
  #92 = Utf8               visitEnd
  #93 = NameAndType        #92:#16        // visitEnd:()V
  #94 = Methodref          #2.#93         // org/objectweb/asm/ModuleVisitor.visitEnd:()V
  #95 = Utf8               Code
  #96 = Utf8               LineNumberTable
  #97 = Utf8               LocalVariableTable
  #98 = Utf8               SourceFile
{
  protected final int api;
    descriptor: I
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL

  protected org.objectweb.asm.ModuleVisitor mv;
    descriptor: Lorg/objectweb/asm/ModuleVisitor;
    flags: (0x0004) ACC_PROTECTED

  protected org.objectweb.asm.ModuleVisitor(int);
    descriptor: (I)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: aconst_null
         3: invokespecial #14                 // Method "<init>":(ILorg/objectweb/asm/ModuleVisitor;)V
         6: return
      LineNumberTable:
        line 57: 0
        line 58: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0       7     1   api   I

  protected org.objectweb.asm.ModuleVisitor(int, org.objectweb.asm.ModuleVisitor);
    descriptor: (ILorg/objectweb/asm/ModuleVisitor;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: invokespecial #18                 // Method java/lang/Object."<init>":()V
         4: iload_1
         5: ldc           #19                 // int 589824
         7: if_icmpeq     73
        10: iload_1
        11: ldc           #20                 // int 524288
        13: if_icmpeq     73
        16: iload_1
        17: ldc           #21                 // int 458752
        19: if_icmpeq     73
        22: iload_1
        23: ldc           #22                 // int 393216
        25: if_icmpeq     73
        28: iload_1
        29: ldc           #23                 // int 327680
        31: if_icmpeq     73
        34: iload_1
        35: ldc           #24                 // int 262144
        37: if_icmpeq     73
        40: iload_1
        41: ldc           #25                 // int 17432576
        43: if_icmpeq     73
        46: new           #27                 // class java/lang/IllegalArgumentException
        49: dup
        50: new           #29                 // class java/lang/StringBuilder
        53: dup
        54: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
        57: ldc           #32                 // String Unsupported api
        59: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: iload_1
        63: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        66: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        69: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        72: athrow
        73: iload_1
        74: ldc           #25                 // int 17432576
        76: if_icmpne     83
        79: aload_0
        80: invokestatic  #52                 // Method org/objectweb/asm/Constants.checkAsmExperimental:(Ljava/lang/Object;)V
        83: aload_0
        84: iload_1
        85: putfield      #54                 // Field api:I
        88: aload_0
        89: aload_2
        90: putfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        93: return
      LineNumberTable:
        line 68: 0
        line 69: 4
        line 76: 46
        line 78: 73
        line 79: 79
        line 81: 83
        line 82: 88
        line 83: 93
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      94     1   api   I
            0      94     2 moduleVisitor   Lorg/objectweb/asm/ModuleVisitor;

  public void visitMainClass(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        15
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: aload_1
        12: invokevirtual #60                 // Method visitMainClass:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 91: 0
        line 92: 7
        line 94: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      16     1 mainClass   Ljava/lang/String;

  public void visitPackage(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        15
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: aload_1
        12: invokevirtual #65                 // Method visitPackage:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 102: 0
        line 103: 7
        line 105: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      16     1 packaze   Ljava/lang/String;

  public void visitRequire(java.lang.String, int, java.lang.String);
    descriptor: (Ljava/lang/String;ILjava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        17
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: aload_1
        12: iload_2
        13: aload_3
        14: invokevirtual #70                 // Method visitRequire:(Ljava/lang/String;ILjava/lang/String;)V
        17: return
      LineNumberTable:
        line 116: 0
        line 117: 7
        line 119: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      18     1 module   Ljava/lang/String;
            0      18     2 access   I
            0      18     3 version   Ljava/lang/String;

  public void visitExport(java.lang.String, int, java.lang.String...);
    descriptor: (Ljava/lang/String;I[Ljava/lang/String;)V
    flags: (0x0081) ACC_PUBLIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        17
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: aload_1
        12: iload_2
        13: aload_3
        14: invokevirtual #77                 // Method visitExport:(Ljava/lang/String;I[Ljava/lang/String;)V
        17: return
      LineNumberTable:
        line 131: 0
        line 132: 7
        line 134: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      18     1 packaze   Ljava/lang/String;
            0      18     2 access   I
            0      18     3 modules   [Ljava/lang/String;

  public void visitOpen(java.lang.String, int, java.lang.String...);
    descriptor: (Ljava/lang/String;I[Ljava/lang/String;)V
    flags: (0x0081) ACC_PUBLIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        17
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: aload_1
        12: iload_2
        13: aload_3
        14: invokevirtual #82                 // Method visitOpen:(Ljava/lang/String;I[Ljava/lang/String;)V
        17: return
      LineNumberTable:
        line 146: 0
        line 147: 7
        line 149: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      18     1 packaze   Ljava/lang/String;
            0      18     2 access   I
            0      18     3 modules   [Ljava/lang/String;

  public void visitUse(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        15
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: aload_1
        12: invokevirtual #85                 // Method visitUse:(Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 158: 0
        line 159: 7
        line 161: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      16     1 service   Ljava/lang/String;

  public void visitProvide(java.lang.String, java.lang.String...);
    descriptor: (Ljava/lang/String;[Ljava/lang/String;)V
    flags: (0x0081) ACC_PUBLIC, ACC_VARARGS
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        16
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: aload_1
        12: aload_2
        13: invokevirtual #90                 // Method visitProvide:(Ljava/lang/String;[Ljava/lang/String;)V
        16: return
      LineNumberTable:
        line 171: 0
        line 172: 7
        line 174: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/objectweb/asm/ModuleVisitor;
            0      17     1 service   Ljava/lang/String;
            0      17     2 providers   [Ljava/lang/String;

  public void visitEnd();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
         4: ifnull        14
         7: aload_0
         8: getfield      #56                 // Field mv:Lorg/objectweb/asm/ModuleVisitor;
        11: invokevirtual #94                 // Method visitEnd:()V
        14: return
      LineNumberTable:
        line 181: 0
        line 182: 7
        line 184: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/objectweb/asm/ModuleVisitor;
}
SourceFile: "ModuleVisitor.java"
