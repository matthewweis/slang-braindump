Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/mutable/RedBlackTree$TreeIterator.class
  Last modified May 29, 2022; size 3369 bytes
  SHA-256 checksum 3c1c0d332fb90e1a537e10339b36f64b7a5eb06e4a3050485a87337202dac614
  Compiled from "RedBlackTree.scala"
public abstract class scala.collection.mutable.RedBlackTree$TreeIterator<A extends java.lang.Object, B extends java.lang.Object, R extends java.lang.Object> extends scala.collection.AbstractIterator<R>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/collection/mutable/RedBlackTree$TreeIterator
  super_class: #5                         // scala/collection/AbstractIterator
  interfaces: 0, fields: 3, methods: 5, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/mutable/RedBlackTree$TreeIterator
    #2 = Class              #1            // scala/collection/mutable/RedBlackTree$TreeIterator
    #3 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;R:Ljava/lang/Object;>Lscala/collection/AbstractIterator<TR;>;
    #4 = Utf8               scala/collection/AbstractIterator
    #5 = Class              #4            // scala/collection/AbstractIterator
    #6 = Utf8               RedBlackTree.scala
    #7 = Utf8               scala/collection/mutable/RedBlackTree$Node
    #8 = Class              #7            // scala/collection/mutable/RedBlackTree$Node
    #9 = Utf8               scala/collection/mutable/RedBlackTree
   #10 = Class              #9            // scala/collection/mutable/RedBlackTree
   #11 = Utf8               Node
   #12 = Utf8               scala/collection/mutable/RedBlackTree$Tree
   #13 = Class              #12           // scala/collection/mutable/RedBlackTree$Tree
   #14 = Utf8               Tree
   #15 = Utf8               TreeIterator
   #16 = Utf8               end
   #17 = Utf8               Lscala/Option;
   #18 = Utf8               Lscala/Option<TA;>;
   #19 = Utf8               ord
   #20 = Utf8               Lscala/math/Ordering;
   #21 = Utf8               Lscala/math/Ordering<TA;>;
   #22 = Utf8               nextNode
   #23 = Utf8               Lscala/collection/mutable/RedBlackTree$Node;
   #24 = Utf8               Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;
   #25 = Utf8               nextResult
   #26 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;)Ljava/lang/Object;
   #27 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)TR;
   #28 = Utf8               node
   #29 = Utf8               hasNext
   #30 = Utf8               ()Z
   #31 = NameAndType        #22:#23       // nextNode:Lscala/collection/mutable/RedBlackTree$Node;
   #32 = Fieldref           #2.#31        // scala/collection/mutable/RedBlackTree$TreeIterator.nextNode:Lscala/collection/mutable/RedBlackTree$Node;
   #33 = Utf8               this
   #34 = Utf8               Lscala/collection/mutable/RedBlackTree$TreeIterator;
   #35 = Utf8               next
   #36 = Utf8               ()Ljava/lang/Object;
   #37 = Utf8               ()TR;^Ljava/util/NoSuchElementException;
   #38 = Utf8               java/util/NoSuchElementException
   #39 = Class              #38           // java/util/NoSuchElementException
   #40 = Utf8               next on empty iterator
   #41 = String             #40           // next on empty iterator
   #42 = Utf8               <init>
   #43 = Utf8               (Ljava/lang/String;)V
   #44 = NameAndType        #42:#43       // "<init>":(Ljava/lang/String;)V
   #45 = Methodref          #39.#44       // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
   #46 = Utf8               scala/collection/mutable/RedBlackTree$
   #47 = Class              #46           // scala/collection/mutable/RedBlackTree$
   #48 = Utf8               MODULE$
   #49 = Utf8               Lscala/collection/mutable/RedBlackTree$;
   #50 = NameAndType        #48:#49       // MODULE$:Lscala/collection/mutable/RedBlackTree$;
   #51 = Fieldref           #47.#50       // scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
   #52 = Utf8               scala$collection$mutable$RedBlackTree$$successor
   #53 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
   #54 = NameAndType        #52:#53       // scala$collection$mutable$RedBlackTree$$successor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
   #55 = Methodref          #47.#54       // scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$successor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
   #56 = Utf8               setNullIfAfterEnd
   #57 = Utf8               ()V
   #58 = NameAndType        #56:#57       // setNullIfAfterEnd:()V
   #59 = Methodref          #2.#58        // scala/collection/mutable/RedBlackTree$TreeIterator.setNullIfAfterEnd:()V
   #60 = NameAndType        #25:#26       // nextResult:(Lscala/collection/mutable/RedBlackTree$Node;)Ljava/lang/Object;
   #61 = Methodref          #2.#60        // scala/collection/mutable/RedBlackTree$TreeIterator.nextResult:(Lscala/collection/mutable/RedBlackTree$Node;)Ljava/lang/Object;
   #62 = NameAndType        #16:#17       // end:Lscala/Option;
   #63 = Fieldref           #2.#62        // scala/collection/mutable/RedBlackTree$TreeIterator.end:Lscala/Option;
   #64 = Utf8               scala/Option
   #65 = Class              #64           // scala/Option
   #66 = Utf8               isDefined
   #67 = NameAndType        #66:#30       // isDefined:()Z
   #68 = Methodref          #65.#67       // scala/Option.isDefined:()Z
   #69 = NameAndType        #19:#20       // ord:Lscala/math/Ordering;
   #70 = Fieldref           #2.#69        // scala/collection/mutable/RedBlackTree$TreeIterator.ord:Lscala/math/Ordering;
   #71 = Utf8               key
   #72 = NameAndType        #71:#36       // key:()Ljava/lang/Object;
   #73 = Methodref          #8.#72        // scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
   #74 = Utf8               get
   #75 = NameAndType        #74:#36       // get:()Ljava/lang/Object;
   #76 = Methodref          #65.#75       // scala/Option.get:()Ljava/lang/Object;
   #77 = Utf8               scala/math/Ordering
   #78 = Class              #77           // scala/math/Ordering
   #79 = Utf8               compare
   #80 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I
   #81 = NameAndType        #79:#80       // compare:(Ljava/lang/Object;Ljava/lang/Object;)I
   #82 = InterfaceMethodref #78.#81       // scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
   #83 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
   #84 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)V
   #85 = Utf8               tree
   #86 = Utf8               start
   #87 = NameAndType        #42:#57       // "<init>":()V
   #88 = Methodref          #5.#87        // scala/collection/AbstractIterator."<init>":()V
   #89 = Utf8               scala/None$
   #90 = Class              #89           // scala/None$
   #91 = Utf8               Lscala/None$;
   #92 = NameAndType        #48:#91       // MODULE$:Lscala/None$;
   #93 = Fieldref           #90.#92       // scala/None$.MODULE$:Lscala/None$;
   #94 = Utf8               java/lang/Object
   #95 = Class              #94           // java/lang/Object
   #96 = Utf8               equals
   #97 = Utf8               (Ljava/lang/Object;)Z
   #98 = NameAndType        #96:#97       // equals:(Ljava/lang/Object;)Z
   #99 = Methodref          #95.#98       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #100 = Utf8               root
  #101 = Utf8               ()Lscala/collection/mutable/RedBlackTree$Node;
  #102 = NameAndType        #100:#101     // root:()Lscala/collection/mutable/RedBlackTree$Node;
  #103 = Methodref          #13.#102      // scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
  #104 = Utf8               scala$collection$mutable$RedBlackTree$$minNode
  #105 = NameAndType        #104:#53      // scala$collection$mutable$RedBlackTree$$minNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #106 = Methodref          #47.#105      // scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$minNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
  #107 = Utf8               scala/Some
  #108 = Class              #107          // scala/Some
  #109 = Utf8               value
  #110 = NameAndType        #109:#36      // value:()Ljava/lang/Object;
  #111 = Methodref          #108.#110     // scala/Some.value:()Ljava/lang/Object;
  #112 = Utf8               scala$collection$mutable$RedBlackTree$$minNodeAfter
  #113 = Utf8               (Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
  #114 = NameAndType        #112:#113     // scala$collection$mutable$RedBlackTree$$minNodeAfter:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
  #115 = Methodref          #47.#114      // scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$minNodeAfter:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
  #116 = Utf8               scala/MatchError
  #117 = Class              #116          // scala/MatchError
  #118 = Utf8               (Ljava/lang/Object;)V
  #119 = NameAndType        #42:#118      // "<init>":(Ljava/lang/Object;)V
  #120 = Methodref          #117.#119     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #121 = Utf8               from
  #122 = Utf8               Ljava/lang/Object;
  #123 = Utf8               Lscala/collection/mutable/RedBlackTree$Tree;
  #124 = Utf8               Signature
  #125 = Utf8               MethodParameters
  #126 = Utf8               Code
  #127 = Utf8               StackMapTable
  #128 = Utf8               LineNumberTable
  #129 = Utf8               LocalVariableTable
  #130 = Utf8               Exceptions
  #131 = Utf8               InnerClasses
  #132 = Utf8               SourceFile
  #133 = Utf8               ScalaInlineInfo
  #134 = Utf8               Scala
{
  private final scala.Option<A> end;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/Option<TA;>;

  private final scala.math.Ordering<A> ord;
    descriptor: Lscala/math/Ordering;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #21                          // Lscala/math/Ordering<TA;>;

  private scala.collection.mutable.RedBlackTree$Node<A, B> nextNode;
    descriptor: Lscala/collection/mutable/RedBlackTree$Node;
    flags: (0x0002) ACC_PRIVATE
    Signature: #24                          // Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;

  public abstract R nextResult(scala.collection.mutable.RedBlackTree$Node<A, B>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Node;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #27                          // (Lscala/collection/mutable/RedBlackTree$Node<TA;TB;>;)TR;
    MethodParameters:
      Name                           Flags
      node                           final

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #32                 // Field nextNode:Lscala/collection/mutable/RedBlackTree$Node;
         4: ifnull        9
         7: iconst_1
         8: ireturn
         9: iconst_0
        10: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 9 /* same */
      LineNumberTable:
        line 493: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/RedBlackTree$TreeIterator;

  public R next() throws java/util/NoSuchElementException;
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: getfield      #32                 // Field nextNode:Lscala/collection/mutable/RedBlackTree$Node;
         4: astore_1
         5: aload_1
         6: ifnonnull     19
         9: new           #39                 // class java/util/NoSuchElementException
        12: dup
        13: ldc           #41                 // String next on empty iterator
        15: invokespecial #45                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: getstatic     #51                 // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        23: aload_1
        24: invokevirtual #55                 // Method scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$successor:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        27: putfield      #32                 // Field nextNode:Lscala/collection/mutable/RedBlackTree$Node;
        30: aload_0
        31: invokespecial #59                 // Method setNullIfAfterEnd:()V
        34: aload_0
        35: aload_1
        36: invokevirtual #61                 // Method nextResult:(Lscala/collection/mutable/RedBlackTree$Node;)Ljava/lang/Object;
        39: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class scala/collection/mutable/RedBlackTree$Node ]
      LineNumberTable:
        line 496: 0
        line 497: 5
        line 499: 19
        line 500: 30
        line 501: 34
        line 496: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lscala/collection/mutable/RedBlackTree$TreeIterator;
    Exceptions:
      throws java.util.NoSuchElementException
    Signature: #37                          // ()TR;^Ljava/util/NoSuchElementException;

  private void setNullIfAfterEnd();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #63                 // Field end:Lscala/Option;
         4: invokevirtual #68                 // Method scala/Option.isDefined:()Z
         7: ifeq          49
        10: aload_0
        11: getfield      #32                 // Field nextNode:Lscala/collection/mutable/RedBlackTree$Node;
        14: ifnull        49
        17: aload_0
        18: getfield      #70                 // Field ord:Lscala/math/Ordering;
        21: aload_0
        22: getfield      #32                 // Field nextNode:Lscala/collection/mutable/RedBlackTree$Node;
        25: invokevirtual #73                 // Method scala/collection/mutable/RedBlackTree$Node.key:()Ljava/lang/Object;
        28: aload_0
        29: getfield      #63                 // Field end:Lscala/Option;
        32: invokevirtual #76                 // Method scala/Option.get:()Ljava/lang/Object;
        35: invokeinterface #82,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        40: iconst_0
        41: if_icmplt     49
        44: aload_0
        45: aconst_null
        46: putfield      #32                 // Field nextNode:Lscala/collection/mutable/RedBlackTree$Node;
        49: return
      StackMapTable: number_of_entries = 1
        frame_type = 49 /* same */
      LineNumberTable:
        line 510: 0
        line 511: 44
        line 510: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lscala/collection/mutable/RedBlackTree$TreeIterator;

  public scala.collection.mutable.RedBlackTree$TreeIterator(scala.collection.mutable.RedBlackTree$Tree<A, B>, scala.Option<A>, scala.Option<A>, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=5
         0: aload_0
         1: aload_3
         2: putfield      #63                 // Field end:Lscala/Option;
         5: aload_0
         6: aload         4
         8: putfield      #70                 // Field ord:Lscala/math/Ordering;
        11: aload_0
        12: invokespecial #88                 // Method scala/collection/AbstractIterator."<init>":()V
        15: aload_0
        16: getstatic     #93                 // Field scala/None$.MODULE$:Lscala/None$;
        19: aload_2
        20: invokevirtual #99                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        23: ifeq          41
        26: getstatic     #51                 // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        29: aload_1
        30: invokevirtual #103                // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        33: invokevirtual #106                // Method scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$minNode:(Lscala/collection/mutable/RedBlackTree$Node;)Lscala/collection/mutable/RedBlackTree$Node;
        36: astore        5
        38: goto          85
        41: aload_2
        42: instanceof    #108                // class scala/Some
        45: ifeq          76
        48: aload_2
        49: checkcast     #108                // class scala/Some
        52: invokevirtual #111                // Method scala/Some.value:()Ljava/lang/Object;
        55: astore        6
        57: getstatic     #51                 // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        60: aload_1
        61: invokevirtual #103                // Method scala/collection/mutable/RedBlackTree$Tree.root:()Lscala/collection/mutable/RedBlackTree$Node;
        64: aload         6
        66: aload         4
        68: invokevirtual #115                // Method scala/collection/mutable/RedBlackTree$.scala$collection$mutable$RedBlackTree$$minNodeAfter:(Lscala/collection/mutable/RedBlackTree$Node;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/collection/mutable/RedBlackTree$Node;
        71: astore        5
        73: goto          85
        76: new           #117                // class scala/MatchError
        79: dup
        80: aload_2
        81: invokespecial #120                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        84: athrow
        85: aload         5
        87: putfield      #32                 // Field nextNode:Lscala/collection/mutable/RedBlackTree$Node;
        90: aload_0
        91: invokespecial #59                 // Method setNullIfAfterEnd:()V
        94: return
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class scala/collection/mutable/RedBlackTree$TreeIterator, class scala/collection/mutable/RedBlackTree$Tree, class scala/Option, class scala/Option, class scala/math/Ordering ]
          stack = [ class scala/collection/mutable/RedBlackTree$TreeIterator ]
        frame_type = 98 /* same_locals_1_stack_item */
          stack = [ class scala/collection/mutable/RedBlackTree$TreeIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/mutable/RedBlackTree$TreeIterator, class scala/collection/mutable/RedBlackTree$Tree, class scala/Option, class scala/Option, class scala/math/Ordering, class scala/collection/mutable/RedBlackTree$Node ]
          stack = [ class scala/collection/mutable/RedBlackTree$TreeIterator ]
      LineNumberTable:
        line 488: 0
        line 489: 5
        line 504: 15
        line 505: 16
        line 506: 41
        line 504: 76
        line 513: 90
        line 488: 94
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           57      19     6  from   Ljava/lang/Object;
            0      95     0  this   Lscala/collection/mutable/RedBlackTree$TreeIterator;
            0      95     1  tree   Lscala/collection/mutable/RedBlackTree$Tree;
            0      95     2 start   Lscala/Option;
            0      95     3   end   Lscala/Option;
            0      95     4   ord   Lscala/math/Ordering;
    Signature: #84                          // (Lscala/collection/mutable/RedBlackTree$Tree<TA;TB;>;Lscala/Option<TA;>;Lscala/Option<TA;>;Lscala/math/Ordering<TA;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      start                          final
      end                            final
      ord                            final
}
InnerClasses:
  public static final #11= #8 of #10;     // Node=class scala/collection/mutable/RedBlackTree$Node of class scala/collection/mutable/RedBlackTree
  public static final #14= #13 of #10;    // Tree=class scala/collection/mutable/RedBlackTree$Tree of class scala/collection/mutable/RedBlackTree
  private static abstract #15= #2 of #10; // TreeIterator=class scala/collection/mutable/RedBlackTree$TreeIterator of class scala/collection/mutable/RedBlackTree
Signature: #3                           // <A:Ljava/lang/Object;B:Ljava/lang/Object;R:Ljava/lang/Object;>Lscala/collection/AbstractIterator<TR;>;
SourceFile: "RedBlackTree.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 2A 00 53 00 00 1D 00 1E 00 00 23
   00 24 00 00 19 00 1A 00 00 38 00 39 01
  Scala: length = 0x0 (unknown attribute)

