Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/FutureTasks.class
  Last modified May 29, 2022; size 9482 bytes
  SHA-256 checksum cf86299a7826f38c2429208f8a1f93a770ace0653bedc81342e285dd6c844830
  Compiled from "Tasks.scala"
public final class scala.collection.parallel.FutureTasks implements scala.collection.parallel.Tasks
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/FutureTasks
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 20, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/FutureTasks
    #2 = Class              #1            // scala/collection/parallel/FutureTasks
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/collection/parallel/Tasks
    #6 = Class              #5            // scala/collection/parallel/Tasks
    #7 = Utf8               Tasks.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u00014Qa\u0003\u0007\u0003\u0019IA\u0001b\u0007\u0001\u0003\u0002\u0003\u0006I!\b\u0005\u0006G\u0001!\t\u0001\n\u0005\bO\u0001\u0011\r\u0011\"\u0003)\u0011\u0019a\u0003\u0001)A\u0005S!9Q\u0006\u0001b\u0001\n\u0003q\u0003BB\u0018\u0001A\u0003%Q\u0004C\u00031\u0001\u0011%\u0011\u0007C\u0003J\u0001\u0011\u0005!\nC\u0003W\u0001\u0011\u0005q\u000bC\u0003`\u0001\u0011\u0005\u0001FA\u0006GkR,(/\u001a+bg.\u001c(BA\u0007\u000f\u0003!\u0001\u0018M]1mY\u0016d\'BA\b\u0011\u0003)\u0019w\u000e\u001c7fGRLwN\u001c\u0006\u0002#\u0005)1oY1mCN\u0019\u0001aE\f\u0011\u0005Q)R\"\u0001\t\n\u0005Y\u0001\"AB!osJ+g\r\u0005\u0002\u001935\tA\"\u0003\u0002\u001b\u0019\t)A+Y:lg\u0006AQ\r_3dkR|\'o\u0001\u0001\u0011\u0005y\tS\"A\u0010\u000b\u0005\u0001\u0002\u0012AC2p]\u000e,(O]3oi&\u0011!e\b\u0002\u0011\u000bb,7-\u001e;j_:\u001cuN\u001c;fqR\fa\u0001P5oSRtDCA\u0013\'!\tA\u0002\u0001C\u0003\u001c\u0005\u0001\u0007Q$\u0001\u0005nCb$W\r\u001d;i+\u0005I\u0003C\u0001\u000b+\u0013\tY\u0003CA\u0002J]R\f\u0011\"\\1yI\u0016\u0004H\u000f\u001b\u0011\u0002\u0017\u0015tg/\u001b:p]6,g\u000e^\u000b\u0002;\u0005aQM\u001c<je>tW.\u001a8uA\u0005!Q\r_3d+\r\u0011\u0004h\u0012\u000b\u0003g\u0005\u00032A\b\u001b7\u0013\t)tD\u0001\u0004GkR,(/\u001a\t\u0003oab\u0001\u0001B\u0003:\u000f\t\u0007!HA\u0001S#\tYd\b\u0005\u0002\u0015y%\u0011Q\b\u0005\u0002\b\u001d>$\b.\u001b8h!\t!r(\u0003\u0002A!\t\u0019\u0011I\\=\t\u000b\t;\u0001\u0019A\"\u0002\u0019Q|\u0007\u000fT3wK2$\u0016m]6\u0011\ta!eGR\u0005\u0003\u000b2\u0011A\u0001V1tWB\u0011qg\u0012\u0003\u0006\u0011\u001e\u0011\rA\u000f\u0002\u0003)B\fq!\u001a=fGV$X-F\u0002L!V#\"\u0001T)\u0011\u0007Qiu*\u0003\u0002O!\tIa)\u001e8di&|g\u000e\r\t\u0003oA#Q!\u000f\u0005C\u0002iBQA\u0015\u0005A\u0002M\u000bA\u0001^1tWB!\u0001\u0004R(U!\t9T\u000bB\u0003I\u0011\t\u0007!(\u0001\u000bfq\u0016\u001cW\u000f^3B]\u0012<\u0016-\u001b;SKN,H\u000e^\u000b\u00041jsFCA-\\!\t9$\fB\u0003:\u0013\t\u0007!\bC\u0003S\u0013\u0001\u0007A\f\u0005\u0003\u0019\tfk\u0006CA\u001c_\t\u0015A\u0015B1\u0001;\u0003A\u0001\u0018M]1mY\u0016d\u0017n]7MKZ,G\u000e
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/collection/parallel/FutureTasks$$anonfun$compute$1$1
   #17 = Class              #16           // scala/collection/parallel/FutureTasks$$anonfun$compute$1$1
   #18 = Utf8               scala/concurrent/duration/Duration$Infinite
   #19 = Class              #18           // scala/concurrent/duration/Duration$Infinite
   #20 = Utf8               scala/concurrent/duration/Duration
   #21 = Class              #20           // scala/concurrent/duration/Duration
   #22 = Utf8               Infinite
   #23 = Utf8               maxdepth
   #24 = Utf8               I
   #25 = Utf8               environment
   #26 = Utf8               Lscala/concurrent/ExecutionContext;
   #27 = Utf8               debugMessages
   #28 = Utf8               Lscala/collection/mutable/ArrayBuffer;
   #29 = Utf8               Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;
   #30 = Utf8               debuglog
   #31 = Utf8               (Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
   #32 = Utf8               (Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;
   #33 = Utf8               s
   #34 = Utf8               debuglog$
   #35 = Utf8               (Lscala/collection/parallel/Tasks;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
   #36 = NameAndType        #34:#35       // debuglog$:(Lscala/collection/parallel/Tasks;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
   #37 = InterfaceMethodref #6.#36        // scala/collection/parallel/Tasks.debuglog$:(Lscala/collection/parallel/Tasks;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
   #38 = Utf8               this
   #39 = Utf8               Lscala/collection/parallel/FutureTasks;
   #40 = Utf8               Ljava/lang/String;
   #41 = Utf8               ()Lscala/collection/mutable/ArrayBuffer;
   #42 = Utf8               ()Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;
   #43 = NameAndType        #27:#28       // debugMessages:Lscala/collection/mutable/ArrayBuffer;
   #44 = Fieldref           #2.#43        // scala/collection/parallel/FutureTasks.debugMessages:Lscala/collection/mutable/ArrayBuffer;
   #45 = Utf8               scala$collection$parallel$Tasks$_setter_$debugMessages_$eq
   #46 = Utf8               (Lscala/collection/mutable/ArrayBuffer;)V
   #47 = Utf8               (Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;)V
   #48 = Utf8               x$1
   #49 = Utf8               ()I
   #50 = NameAndType        #23:#24       // maxdepth:I
   #51 = Fieldref           #2.#50        // scala/collection/parallel/FutureTasks.maxdepth:I
   #52 = Utf8               ()Lscala/concurrent/ExecutionContext;
   #53 = NameAndType        #25:#26       // environment:Lscala/concurrent/ExecutionContext;
   #54 = Fieldref           #2.#53        // scala/collection/parallel/FutureTasks.environment:Lscala/concurrent/ExecutionContext;
   #55 = Utf8               exec
   #56 = Utf8               (Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
   #57 = Utf8               <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>(Lscala/collection/parallel/Task<TR;TTp;>;)Lscala/concurrent/Future<TR;>;
   #58 = Utf8               topLevelTask
   #59 = NameAndType        #25:#52       // environment:()Lscala/concurrent/ExecutionContext;
   #60 = Methodref          #2.#59        // scala/collection/parallel/FutureTasks.environment:()Lscala/concurrent/ExecutionContext;
   #61 = Utf8               compute$1
   #62 = Utf8               (Lscala/collection/parallel/Task;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
   #63 = NameAndType        #61:#62       // compute$1:(Lscala/collection/parallel/Task;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
   #64 = Methodref          #2.#63        // scala/collection/parallel/FutureTasks.compute$1:(Lscala/collection/parallel/Task;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
   #65 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #66 = MethodType         #65           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #67 = Utf8               $anonfun$exec$6
   #68 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #69 = NameAndType        #67:#68       // $anonfun$exec$6:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #70 = Methodref          #2.#69        // scala/collection/parallel/FutureTasks.$anonfun$exec$6:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #71 = MethodHandle       6:#70         // REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$6:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #72 = MethodType         #68           //  (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #73 = Integer            5
   #74 = Integer            1
   #75 = Utf8               java/lang/invoke/LambdaMetafactory
   #76 = Class              #75           // java/lang/invoke/LambdaMetafactory
   #77 = Utf8               altMetafactory
   #78 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #79 = NameAndType        #77:#78       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #80 = Methodref          #76.#79       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = MethodHandle       6:#80         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #82 = Utf8               apply
   #83 = Utf8               ()Lscala/Function1;
   #84 = NameAndType        #82:#83       // apply:()Lscala/Function1;
   #85 = InvokeDynamic      #0:#84        // #0:apply:()Lscala/Function1;
   #86 = Utf8               scala/concurrent/Future
   #87 = Class              #86           // scala/concurrent/Future
   #88 = Utf8               map
   #89 = Utf8               (Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
   #90 = NameAndType        #88:#89       // map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
   #91 = InterfaceMethodref #87.#90       // scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
   #92 = Utf8               ec
   #93 = Utf8               Lscala/collection/parallel/Task;
   #94 = Utf8               execute
   #95 = Utf8               (Lscala/collection/parallel/Task;)Lscala/Function0;
   #96 = Utf8               <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>(Lscala/collection/parallel/Task<TR;TTp;>;)Lscala/Function0<TR;>;
   #97 = Utf8               task
   #98 = NameAndType        #55:#56       // exec:(Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
   #99 = Methodref          #2.#98        // scala/collection/parallel/FutureTasks.exec:(Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #100 = Utf8               ()Ljava/lang/Object;
  #101 = MethodType         #100          //  ()Ljava/lang/Object;
  #102 = Utf8               $anonfun$execute$2
  #103 = Utf8               (Lscala/concurrent/Future;)Ljava/lang/Object;
  #104 = NameAndType        #102:#103     // $anonfun$execute$2:(Lscala/concurrent/Future;)Ljava/lang/Object;
  #105 = Methodref          #2.#104       // scala/collection/parallel/FutureTasks.$anonfun$execute$2:(Lscala/concurrent/Future;)Ljava/lang/Object;
  #106 = MethodHandle       6:#105        // REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$execute$2:(Lscala/concurrent/Future;)Ljava/lang/Object;
  #107 = Utf8               (Lscala/concurrent/Future;)Lscala/Function0;
  #108 = NameAndType        #82:#107      // apply:(Lscala/concurrent/Future;)Lscala/Function0;
  #109 = InvokeDynamic      #1:#108       // #1:apply:(Lscala/concurrent/Future;)Lscala/Function0;
  #110 = Utf8               future
  #111 = Utf8               Lscala/concurrent/Future;
  #112 = Utf8               callback
  #113 = Utf8               Lscala/Function0;
  #114 = Utf8               executeAndWaitResult
  #115 = Utf8               <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>(Lscala/collection/parallel/Task<TR;TTp;>;)TR;
  #116 = NameAndType        #94:#95       // execute:(Lscala/collection/parallel/Task;)Lscala/Function0;
  #117 = Methodref          #2.#116       // scala/collection/parallel/FutureTasks.execute:(Lscala/collection/parallel/Task;)Lscala/Function0;
  #118 = Utf8               scala/Function0
  #119 = Class              #118          // scala/Function0
  #120 = NameAndType        #82:#100      // apply:()Ljava/lang/Object;
  #121 = InterfaceMethodref #119.#120     // scala/Function0.apply:()Ljava/lang/Object;
  #122 = Utf8               parallelismLevel
  #123 = Utf8               java/lang/Runtime
  #124 = Class              #123          // java/lang/Runtime
  #125 = Utf8               getRuntime
  #126 = Utf8               ()Ljava/lang/Runtime;
  #127 = NameAndType        #125:#126     // getRuntime:()Ljava/lang/Runtime;
  #128 = Methodref          #124.#127     // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
  #129 = Utf8               availableProcessors
  #130 = NameAndType        #129:#49      // availableProcessors:()I
  #131 = Methodref          #124.#130     // java/lang/Runtime.availableProcessors:()I
  #132 = Utf8               $anonfun$exec$1
  #133 = Utf8               (Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #134 = Utf8               $this
  #135 = Utf8               depth$1
  #136 = Utf8               ec$1
  #137 = Utf8               subtask
  #138 = Utf8               $anonfun$exec$4
  #139 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #140 = Utf8               firstTask$1
  #141 = Utf8               nextTask
  #142 = Utf8               scala/collection/parallel/Task
  #143 = Class              #142          // scala/collection/parallel/Task
  #144 = Utf8               repr
  #145 = NameAndType        #144:#100     // repr:()Ljava/lang/Object;
  #146 = InterfaceMethodref #143.#145     // scala/collection/parallel/Task.repr:()Ljava/lang/Object;
  #147 = Utf8               tryMerge
  #148 = Utf8               (Ljava/lang/Object;)V
  #149 = NameAndType        #147:#148     // tryMerge:(Ljava/lang/Object;)V
  #150 = InterfaceMethodref #143.#149     // scala/collection/parallel/Task.tryMerge:(Ljava/lang/Object;)V
  #151 = Utf8               $anonfun$exec$3
  #152 = Utf8               (Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #153 = Utf8               nextFuture$1
  #154 = Utf8               firstTask
  #155 = NameAndType        #138:#139     // $anonfun$exec$4:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #156 = Methodref          #2.#155       // scala/collection/parallel/FutureTasks.$anonfun$exec$4:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #157 = MethodHandle       6:#156        // REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$4:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #158 = Utf8               (Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #159 = MethodType         #158          //  (Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #160 = Utf8               (Lscala/collection/parallel/Task;)Lscala/Function1;
  #161 = NameAndType        #82:#160      // apply:(Lscala/collection/parallel/Task;)Lscala/Function1;
  #162 = InvokeDynamic      #2:#161       // #2:apply:(Lscala/collection/parallel/Task;)Lscala/Function1;
  #163 = Utf8               $anonfun$exec$2
  #164 = Utf8               (Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
  #165 = Utf8               firstFuture
  #166 = Utf8               nextFuture
  #167 = NameAndType        #151:#152     // $anonfun$exec$3:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #168 = Methodref          #2.#167       // scala/collection/parallel/FutureTasks.$anonfun$exec$3:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #169 = MethodHandle       6:#168        // REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$3:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #170 = MethodType         #56           //  (Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #171 = Utf8               (Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lscala/Function1;
  #172 = NameAndType        #82:#171      // apply:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lscala/Function1;
  #173 = InvokeDynamic      #3:#172       // #3:apply:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lscala/Function1;
  #174 = Utf8               flatMap
  #175 = NameAndType        #174:#89      // flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #176 = InterfaceMethodref #87.#175      // scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #177 = Utf8               $anonfun$exec$5
  #178 = Utf8               task$1
  #179 = Utf8               scala/None$
  #180 = Class              #179          // scala/None$
  #181 = Utf8               MODULE$
  #182 = Utf8               Lscala/None$;
  #183 = NameAndType        #181:#182     // MODULE$:Lscala/None$;
  #184 = Fieldref           #180.#183     // scala/None$.MODULE$:Lscala/None$;
  #185 = Utf8               tryLeaf
  #186 = Utf8               (Lscala/Option;)V
  #187 = NameAndType        #185:#186     // tryLeaf:(Lscala/Option;)V
  #188 = InterfaceMethodref #143.#187     // scala/collection/parallel/Task.tryLeaf:(Lscala/Option;)V
  #189 = Utf8               depth
  #190 = Utf8               shouldSplitFurther
  #191 = Utf8               ()Z
  #192 = NameAndType        #190:#191     // shouldSplitFurther:()Z
  #193 = InterfaceMethodref #143.#192     // scala/collection/parallel/Task.shouldSplitFurther:()Z
  #194 = NameAndType        #23:#49       // maxdepth:()I
  #195 = Methodref          #2.#194       // scala/collection/parallel/FutureTasks.maxdepth:()I
  #196 = Utf8               split
  #197 = Utf8               ()Lscala/collection/immutable/Seq;
  #198 = NameAndType        #196:#197     // split:()Lscala/collection/immutable/Seq;
  #199 = InterfaceMethodref #143.#198     // scala/collection/parallel/Task.split:()Lscala/collection/immutable/Seq;
  #200 = Utf8               scala/collection/immutable/Seq
  #201 = Class              #200          // scala/collection/immutable/Seq
  #202 = Utf8               iterator
  #203 = Utf8               ()Lscala/collection/Iterator;
  #204 = NameAndType        #202:#203     // iterator:()Lscala/collection/Iterator;
  #205 = InterfaceMethodref #201.#204     // scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
  #206 = NameAndType        #132:#133     // $anonfun$exec$1:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #207 = Methodref          #2.#206       // scala/collection/parallel/FutureTasks.$anonfun$exec$1:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #208 = MethodHandle       6:#207        // REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$1:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  #209 = Utf8               (Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;)Lscala/Function1;
  #210 = NameAndType        #82:#209      // apply:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;)Lscala/Function1;
  #211 = InvokeDynamic      #4:#210       // #4:apply:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;)Lscala/Function1;
  #212 = Utf8               scala/collection/Iterator
  #213 = Class              #212          // scala/collection/Iterator
  #214 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #215 = NameAndType        #88:#214      // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #216 = InterfaceMethodref #213.#215     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #217 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #218 = MethodType         #217          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #219 = NameAndType        #163:#164     // $anonfun$exec$2:(Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
  #220 = Methodref          #2.#219       // scala/collection/parallel/FutureTasks.$anonfun$exec$2:(Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
  #221 = MethodHandle       6:#220        // REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$2:(Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
  #222 = Utf8               (Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
  #223 = MethodType         #222          //  (Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
  #224 = Utf8               (Lscala/concurrent/ExecutionContext;)Lscala/Function2;
  #225 = NameAndType        #82:#224      // apply:(Lscala/concurrent/ExecutionContext;)Lscala/Function2;
  #226 = InvokeDynamic      #5:#225       // #5:apply:(Lscala/concurrent/ExecutionContext;)Lscala/Function2;
  #227 = Utf8               reduceLeft
  #228 = Utf8               (Lscala/Function2;)Ljava/lang/Object;
  #229 = NameAndType        #227:#228     // reduceLeft:(Lscala/Function2;)Ljava/lang/Object;
  #230 = InterfaceMethodref #213.#229     // scala/collection/Iterator.reduceLeft:(Lscala/Function2;)Ljava/lang/Object;
  #231 = Utf8               <init>
  #232 = Utf8               (Lscala/collection/parallel/FutureTasks;Lscala/collection/parallel/Task;)V
  #233 = NameAndType        #231:#232     // "<init>":(Lscala/collection/parallel/FutureTasks;Lscala/collection/parallel/Task;)V
  #234 = Methodref          #17.#233      // scala/collection/parallel/FutureTasks$$anonfun$compute$1$1."<init>":(Lscala/collection/parallel/FutureTasks;Lscala/collection/parallel/Task;)V
  #235 = Utf8               andThen
  #236 = Utf8               (Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #237 = NameAndType        #235:#236     // andThen:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #238 = InterfaceMethodref #87.#237      // scala/concurrent/Future.andThen:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #239 = Utf8               scala/concurrent/Future$
  #240 = Class              #239          // scala/concurrent/Future$
  #241 = Utf8               Lscala/concurrent/Future$;
  #242 = NameAndType        #181:#241     // MODULE$:Lscala/concurrent/Future$;
  #243 = Fieldref           #240.#242     // scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
  #244 = NameAndType        #177:#158     // $anonfun$exec$5:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #245 = Methodref          #2.#244       // scala/collection/parallel/FutureTasks.$anonfun$exec$5:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #246 = MethodHandle       6:#245        // REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$5:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  #247 = Utf8               ()Lscala/collection/parallel/Task;
  #248 = MethodType         #247          //  ()Lscala/collection/parallel/Task;
  #249 = NameAndType        #82:#95       // apply:(Lscala/collection/parallel/Task;)Lscala/Function0;
  #250 = InvokeDynamic      #6:#249       // #6:apply:(Lscala/collection/parallel/Task;)Lscala/Function0;
  #251 = Utf8               (Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #252 = NameAndType        #82:#251      // apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #253 = Methodref          #240.#252     // scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
  #254 = Utf8               subtasks
  #255 = Utf8               Lscala/collection/immutable/Seq;
  #256 = Utf8               subfutures
  #257 = Utf8               Lscala/collection/Iterator;
  #258 = Utf8               t
  #259 = Utf8               forwardThrowable
  #260 = Utf8               ()V
  #261 = NameAndType        #259:#260     // forwardThrowable:()V
  #262 = InterfaceMethodref #143.#261     // scala/collection/parallel/Task.forwardThrowable:()V
  #263 = Utf8               result
  #264 = NameAndType        #263:#100     // result:()Ljava/lang/Object;
  #265 = InterfaceMethodref #143.#264     // scala/collection/parallel/Task.result:()Ljava/lang/Object;
  #266 = Utf8               future$1
  #267 = Utf8               scala/concurrent/Await$
  #268 = Class              #267          // scala/concurrent/Await$
  #269 = Utf8               Lscala/concurrent/Await$;
  #270 = NameAndType        #181:#269     // MODULE$:Lscala/concurrent/Await$;
  #271 = Fieldref           #268.#270     // scala/concurrent/Await$.MODULE$:Lscala/concurrent/Await$;
  #272 = Utf8               scala/concurrent/duration/Duration$
  #273 = Class              #272          // scala/concurrent/duration/Duration$
  #274 = Utf8               Lscala/concurrent/duration/Duration$;
  #275 = NameAndType        #181:#274     // MODULE$:Lscala/concurrent/duration/Duration$;
  #276 = Fieldref           #273.#275     // scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
  #277 = Utf8               Inf
  #278 = Utf8               ()Lscala/concurrent/duration/Duration$Infinite;
  #279 = NameAndType        #277:#278     // Inf:()Lscala/concurrent/duration/Duration$Infinite;
  #280 = Methodref          #273.#279     // scala/concurrent/duration/Duration$.Inf:()Lscala/concurrent/duration/Duration$Infinite;
  #281 = Utf8               (Lscala/concurrent/Awaitable;Lscala/concurrent/duration/Duration;)Ljava/lang/Object;
  #282 = NameAndType        #263:#281     // result:(Lscala/concurrent/Awaitable;Lscala/concurrent/duration/Duration;)Ljava/lang/Object;
  #283 = Methodref          #268.#282     // scala/concurrent/Await$.result:(Lscala/concurrent/Awaitable;Lscala/concurrent/duration/Duration;)Ljava/lang/Object;
  #284 = Utf8               (Lscala/concurrent/ExecutionContext;)V
  #285 = Utf8               executor
  #286 = NameAndType        #231:#260     // "<init>":()V
  #287 = Methodref          #4.#286       // java/lang/Object."<init>":()V
  #288 = Utf8               $init$
  #289 = Utf8               (Lscala/collection/parallel/Tasks;)V
  #290 = NameAndType        #288:#289     // $init$:(Lscala/collection/parallel/Tasks;)V
  #291 = InterfaceMethodref #6.#290       // scala/collection/parallel/Tasks.$init$:(Lscala/collection/parallel/Tasks;)V
  #292 = Utf8               scala/math/package$
  #293 = Class              #292          // scala/math/package$
  #294 = Utf8               Lscala/math/package$;
  #295 = NameAndType        #181:#294     // MODULE$:Lscala/math/package$;
  #296 = Fieldref           #293.#295     // scala/math/package$.MODULE$:Lscala/math/package$;
  #297 = NameAndType        #122:#49      // parallelismLevel:()I
  #298 = Methodref          #2.#297       // scala/collection/parallel/FutureTasks.parallelismLevel:()I
  #299 = Utf8               log
  #300 = Utf8               (D)D
  #301 = NameAndType        #299:#300     // log:(D)D
  #302 = Methodref          #293.#301     // scala/math/package$.log:(D)D
  #303 = Double             2.0d
  #305 = Utf8               scala/runtime/Statics
  #306 = Class              #305          // scala/runtime/Statics
  #307 = Utf8               releaseFence
  #308 = NameAndType        #307:#260     // releaseFence:()V
  #309 = Methodref          #306.#308     // scala/runtime/Statics.releaseFence:()V
  #310 = Utf8               $deserializeLambda$
  #311 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #312 = Utf8               scala/runtime/LambdaDeserialize
  #313 = Class              #312          // scala/runtime/LambdaDeserialize
  #314 = Utf8               bootstrap
  #315 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #316 = NameAndType        #314:#315     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #317 = Methodref          #313.#316     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #318 = MethodHandle       6:#317        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #319 = Utf8               lambdaDeserialize
  #320 = NameAndType        #319:#311     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #321 = InvokeDynamic      #7:#320       // #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #322 = Utf8               Signature
  #323 = Utf8               Code
  #324 = Utf8               LineNumberTable
  #325 = Utf8               LocalVariableTable
  #326 = Utf8               MethodParameters
  #327 = Utf8               StackMapTable
  #328 = Utf8               InnerClasses
  #329 = Utf8               SourceFile
  #330 = Utf8               RuntimeVisibleAnnotations
  #331 = Utf8               BootstrapMethods
  #332 = Utf8               ScalaInlineInfo
  #333 = Utf8               ScalaSig
{
  private final int maxdepth;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.concurrent.ExecutionContext environment;
    descriptor: Lscala/concurrent/ExecutionContext;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.collection.mutable.ArrayBuffer<java.lang.String> debugMessages;
    descriptor: Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0002) ACC_PRIVATE
    Signature: #29                          // Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debuglog(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #37                 // InterfaceMethod scala/collection/parallel/Tasks.debuglog$:(Lscala/collection/parallel/Tasks;Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer;
         5: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/FutureTasks;
            0       6     1     s   Ljava/lang/String;
    Signature: #32                          // (Ljava/lang/String;)Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.collection.mutable.ArrayBuffer<java.lang.String> debugMessages();
    descriptor: ()Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #44                 // Field debugMessages:Lscala/collection/mutable/ArrayBuffer;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/FutureTasks;
    Signature: #42                          // ()Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;

  public void scala$collection$parallel$Tasks$_setter_$debugMessages_$eq(scala.collection.mutable.ArrayBuffer<java.lang.String>);
    descriptor: (Lscala/collection/mutable/ArrayBuffer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #44                 // Field debugMessages:Lscala/collection/mutable/ArrayBuffer;
         5: return
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/FutureTasks;
            0       6     1   x$1   Lscala/collection/mutable/ArrayBuffer;
    Signature: #47                          // (Lscala/collection/mutable/ArrayBuffer<Ljava/lang/String;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  private int maxdepth();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #51                 // Field maxdepth:I
         4: ireturn
      LineNumberTable:
        line 319: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/FutureTasks;

  public scala.concurrent.ExecutionContext environment();
    descriptor: ()Lscala/concurrent/ExecutionContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #54                 // Field environment:Lscala/concurrent/ExecutionContext;
         4: areturn
      LineNumberTable:
        line 321: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/FutureTasks;

  private <R extends java.lang.Object, Tp extends java.lang.Object> scala.concurrent.Future<R> exec(scala.collection.parallel.Task<R, Tp>);
    descriptor: (Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #60                 // Method environment:()Lscala/concurrent/ExecutionContext;
         4: astore_2
         5: aload_0
         6: aload_1
         7: iconst_0
         8: aload_2
         9: invokespecial #64                 // Method compute$1:(Lscala/collection/parallel/Task;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
        12: invokedynamic #85,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        17: aload_2
        18: invokeinterface #91,  3           // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
        23: areturn
      LineNumberTable:
        line 328: 0
        line 357: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2    ec   Lscala/concurrent/ExecutionContext;
            0      24     0  this   Lscala/collection/parallel/FutureTasks;
            0      24     1 topLevelTask   Lscala/collection/parallel/Task;
    Signature: #57                          // <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>(Lscala/collection/parallel/Task<TR;TTp;>;)Lscala/concurrent/Future<TR;>;
    MethodParameters:
      Name                           Flags
      topLevelTask                   final

  public <R extends java.lang.Object, Tp extends java.lang.Object> scala.Function0<R> execute(scala.collection.parallel.Task<R, Tp>);
    descriptor: (Lscala/collection/parallel/Task;)Lscala/Function0;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #99                 // Method exec:(Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
         5: astore_2
         6: aload_2
         7: invokedynamic #109,  0            // InvokeDynamic #1:apply:(Lscala/concurrent/Future;)Lscala/Function0;
        12: astore_3
        13: aload_3
        14: areturn
      LineNumberTable:
        line 364: 0
        line 365: 6
        line 368: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6       8     2 future   Lscala/concurrent/Future;
           13       1     3 callback   Lscala/Function0;
            0      15     0  this   Lscala/collection/parallel/FutureTasks;
            0      15     1  task   Lscala/collection/parallel/Task;
    Signature: #96                          // <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>(Lscala/collection/parallel/Task<TR;TTp;>;)Lscala/Function0<TR;>;
    MethodParameters:
      Name                           Flags
      task                           final

  public <R extends java.lang.Object, Tp extends java.lang.Object> R executeAndWaitResult(scala.collection.parallel.Task<R, Tp>);
    descriptor: (Lscala/collection/parallel/Task;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #117                // Method execute:(Lscala/collection/parallel/Task;)Lscala/Function0;
         5: invokeinterface #121,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 372: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/parallel/FutureTasks;
            0      11     1  task   Lscala/collection/parallel/Task;
    Signature: #115                         // <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>(Lscala/collection/parallel/Task<TR;TTp;>;)TR;
    MethodParameters:
      Name                           Flags
      task                           final

  public int parallelismLevel();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: invokestatic  #128                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
         3: invokevirtual #131                // Method java/lang/Runtime.availableProcessors:()I
         6: ireturn
      LineNumberTable:
        line 375: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/parallel/FutureTasks;

  public java.lang.Object environment();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #60                 // Method environment:()Lscala/concurrent/ExecutionContext;
         4: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/FutureTasks;

  public static final scala.concurrent.Future $anonfun$exec$1(scala.collection.parallel.FutureTasks, int, scala.concurrent.ExecutionContext, scala.collection.parallel.Task);
    descriptor: (Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: iload_1
         3: iconst_1
         4: iadd
         5: aload_2
         6: invokespecial #64                 // Method compute$1:(Lscala/collection/parallel/Task;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
         9: areturn
      LineNumberTable:
        line 335: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lscala/collection/parallel/FutureTasks;
            0      10     1 depth$1   I
            0      10     2  ec$1   Lscala/concurrent/ExecutionContext;
            0      10     3 subtask   Lscala/collection/parallel/Task;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      depth$1                        final
      ec$1                           final
      subtask                        final

  public static final scala.collection.parallel.Task $anonfun$exec$4(scala.collection.parallel.Task, scala.collection.parallel.Task);
    descriptor: (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #146,  1          // InterfaceMethod scala/collection/parallel/Task.repr:()Ljava/lang/Object;
         7: invokeinterface #150,  2          // InterfaceMethod scala/collection/parallel/Task.tryMerge:(Ljava/lang/Object;)V
        12: aload_0
        13: areturn
      LineNumberTable:
        line 341: 0
        line 342: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 firstTask$1   Lscala/collection/parallel/Task;
            0      14     1 nextTask   Lscala/collection/parallel/Task;
    MethodParameters:
      Name                           Flags
      firstTask$1                    final
      nextTask                       final

  public static final scala.concurrent.Future $anonfun$exec$3(scala.concurrent.Future, scala.concurrent.ExecutionContext, scala.collection.parallel.Task);
    descriptor: (Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: invokedynamic #162,  0            // InvokeDynamic #2:apply:(Lscala/collection/parallel/Task;)Lscala/Function1;
         7: aload_1
         8: invokeinterface #91,  3           // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
        13: areturn
      LineNumberTable:
        line 339: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 nextFuture$1   Lscala/concurrent/Future;
            0      14     1  ec$1   Lscala/concurrent/ExecutionContext;
            0      14     2 firstTask   Lscala/collection/parallel/Task;
    MethodParameters:
      Name                           Flags
      nextFuture$1                   final
      ec$1                           final
      firstTask                      final

  public static final scala.concurrent.Future $anonfun$exec$2(scala.concurrent.ExecutionContext, scala.concurrent.Future, scala.concurrent.Future);
    descriptor: (Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: aload_0
         3: invokedynamic #173,  0            // InvokeDynamic #3:apply:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;)Lscala/Function1;
         8: aload_0
         9: invokeinterface #176,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
        14: areturn
      LineNumberTable:
        line 338: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  ec$1   Lscala/concurrent/ExecutionContext;
            0      15     1 firstFuture   Lscala/concurrent/Future;
            0      15     2 nextFuture   Lscala/concurrent/Future;
    MethodParameters:
      Name                           Flags
      ec$1                           final
      firstFuture                    final
      nextFuture                     final

  public static final scala.collection.parallel.Task $anonfun$exec$5(scala.collection.parallel.Task);
    descriptor: (Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #184                // Field scala/None$.MODULE$:Lscala/None$;
         4: invokeinterface #188,  2          // InterfaceMethod scala/collection/parallel/Task.tryLeaf:(Lscala/Option;)V
         9: aload_0
        10: areturn
      LineNumberTable:
        line 352: 0
        line 353: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 task$1   Lscala/collection/parallel/Task;
    MethodParameters:
      Name                           Flags
      task$1                         final

  private final scala.concurrent.Future compute$1(scala.collection.parallel.Task, int, scala.concurrent.ExecutionContext);
    descriptor: (Lscala/collection/parallel/Task;ILscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=6, args_size=4
         0: aload_1
         1: invokeinterface #193,  1          // InterfaceMethod scala/collection/parallel/Task.shouldSplitFurther:()Z
         6: ifeq          81
         9: iload_2
        10: aload_0
        11: invokespecial #195                // Method maxdepth:()I
        14: if_icmpge     81
        17: aload_1
        18: invokeinterface #199,  1          // InterfaceMethod scala/collection/parallel/Task.split:()Lscala/collection/immutable/Seq;
        23: astore        4
        25: aload         4
        27: invokeinterface #205,  1          // InterfaceMethod scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
        32: aload_0
        33: iload_2
        34: aload_3
        35: invokedynamic #211,  0            // InvokeDynamic #4:apply:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;)Lscala/Function1;
        40: invokeinterface #216,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        45: astore        5
        47: aload         5
        49: aload_3
        50: invokedynamic #226,  0            // InvokeDynamic #5:apply:(Lscala/concurrent/ExecutionContext;)Lscala/Function2;
        55: invokeinterface #230,  2          // InterfaceMethod scala/collection/Iterator.reduceLeft:(Lscala/Function2;)Ljava/lang/Object;
        60: checkcast     #87                 // class scala/concurrent/Future
        63: new           #17                 // class scala/collection/parallel/FutureTasks$$anonfun$compute$1$1
        66: dup
        67: aconst_null
        68: aload_1
        69: invokespecial #234                // Method scala/collection/parallel/FutureTasks$$anonfun$compute$1$1."<init>":(Lscala/collection/parallel/FutureTasks;Lscala/collection/parallel/Task;)V
        72: aload_3
        73: invokeinterface #238,  3          // InterfaceMethod scala/concurrent/Future.andThen:(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
        78: goto          94
        81: getstatic     #243                // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
        84: aload_1
        85: invokedynamic #250,  0            // InvokeDynamic #6:apply:(Lscala/collection/parallel/Task;)Lscala/Function0;
        90: aload_3
        91: invokevirtual #253                // Method scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
        94: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 81
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class scala/concurrent/Future ]
      LineNumberTable:
        line 333: 0
        line 334: 17
        line 335: 25
        line 336: 47
        line 344: 63
        line 351: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      53     4 subtasks   Lscala/collection/immutable/Seq;
           47      31     5 subfutures   Lscala/collection/Iterator;
            0      95     0  this   Lscala/collection/parallel/FutureTasks;
            0      95     1  task   Lscala/collection/parallel/Task;
            0      95     2 depth   I
            0      95     3  ec$1   Lscala/concurrent/ExecutionContext;
    MethodParameters:
      Name                           Flags
      task                           final
      depth                          final
      ec$1                           final

  public static final java.lang.Object $anonfun$exec$6(scala.collection.parallel.Task);
    descriptor: (Lscala/collection/parallel/Task;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #262,  1          // InterfaceMethod scala/collection/parallel/Task.forwardThrowable:()V
         6: aload_0
         7: invokeinterface #265,  1          // InterfaceMethod scala/collection/parallel/Task.result:()Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 358: 0
        line 359: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0     t   Lscala/collection/parallel/Task;
    MethodParameters:
      Name                           Flags
      t                              final

  public static final java.lang.Object $anonfun$execute$2(scala.concurrent.Future);
    descriptor: (Lscala/concurrent/Future;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #271                // Field scala/concurrent/Await$.MODULE$:Lscala/concurrent/Await$;
         3: aload_0
         4: getstatic     #276                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
         7: invokevirtual #280                // Method scala/concurrent/duration/Duration$.Inf:()Lscala/concurrent/duration/Duration$Infinite;
        10: invokevirtual #283                // Method scala/concurrent/Await$.result:(Lscala/concurrent/Awaitable;Lscala/concurrent/duration/Duration;)Ljava/lang/Object;
        13: areturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 future$1   Lscala/concurrent/Future;
    MethodParameters:
      Name                           Flags
      future$1                       final

  public scala.collection.parallel.FutureTasks(scala.concurrent.ExecutionContext);
    descriptor: (Lscala/concurrent/ExecutionContext;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: invokespecial #287                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #291                // InterfaceMethod scala/collection/parallel/Tasks.$init$:(Lscala/collection/parallel/Tasks;)V
         8: aload_0
         9: getstatic     #296                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        12: aload_0
        13: invokevirtual #298                // Method parallelismLevel:()I
        16: i2d
        17: invokevirtual #302                // Method scala/math/package$.log:(D)D
        20: getstatic     #296                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        23: ldc2_w        #303                // double 2.0d
        26: invokevirtual #302                // Method scala/math/package$.log:(D)D
        29: ddiv
        30: iconst_1
        31: i2d
        32: dadd
        33: d2i
        34: putfield      #51                 // Field maxdepth:I
        37: aload_0
        38: aload_1
        39: putfield      #54                 // Field environment:Lscala/concurrent/ExecutionContext;
        42: invokestatic  #309                // Method scala/runtime/Statics.releaseFence:()V
        45: return
      LineNumberTable:
        line 315: 0
        line 319: 8
        line 321: 37
        line 315: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lscala/collection/parallel/FutureTasks;
            0      46     1 executor   Lscala/concurrent/ExecutionContext;
    MethodParameters:
      Name                           Flags
      executor                       final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #321,  0            // InvokeDynamic #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #17;                       // class scala/collection/parallel/FutureTasks$$anonfun$compute$1$1
  public static abstract #22= #19 of #21; // Infinite=class scala/concurrent/duration/Duration$Infinite of class scala/concurrent/duration/Duration
SourceFile: "Tasks.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00014Qa\u0003\u0007\u0003\u0019IA\u0001b\u0007\u0001\u0003\u0002\u0003\u0006I!\b\u0005\u0006G\u0001!\t\u0001\n\u0005\bO\u0001\u0011\r\u0011\"\u0003)\u0011\u0019a\u0003\u0001)A\u0005S!9Q\u0006\u0001b\u0001\n\u0003q\u0003BB\u0018\u0001A\u0003%Q\u0004C\u00031\u0001\u0011%\u0011\u0007C\u0003J\u0001\u0011\u0005!\nC\u0003W\u0001\u0011\u0005q\u000bC\u0003`\u0001\u0011\u0005\u0001FA\u0006GkR,(/\u001a+bg.\u001c(BA\u0007\u000f\u0003!\u0001\u0018M]1mY\u0016d\'BA\b\u0011\u0003)\u0019w\u000e\u001c7fGRLwN\u001c\u0006\u0002#\u0005)1oY1mCN\u0019\u0001aE\f\u0011\u0005Q)R\"\u0001\t\n\u0005Y\u0001\"AB!osJ+g\r\u0005\u0002\u001935\tA\"\u0003\u0002\u001b\u0019\t)A+Y:lg\u0006AQ\r_3dkR|\'o\u0001\u0001\u0011\u0005y\tS\"A\u0010\u000b\u0005\u0001\u0002\u0012AC2p]\u000e,(O]3oi&\u0011!e\b\u0002\u0011\u000bb,7-\u001e;j_:\u001cuN\u001c;fqR\fa\u0001P5oSRtDCA\u0013\'!\tA\u0002\u0001C\u0003\u001c\u0005\u0001\u0007Q$\u0001\u0005nCb$W\r\u001d;i+\u0005I\u0003C\u0001\u000b+\u0013\tY\u0003CA\u0002J]R\f\u0011\"\\1yI\u0016\u0004H\u000f\u001b\u0011\u0002\u0017\u0015tg/\u001b:p]6,g\u000e^\u000b\u0002;\u0005aQM\u001c<je>tW.\u001a8uA\u0005!Q\r_3d+\r\u0011\u0004h\u0012\u000b\u0003g\u0005\u00032A\b\u001b7\u0013\t)tD\u0001\u0004GkR,(/\u001a\t\u0003oab\u0001\u0001B\u0003:\u000f\t\u0007!HA\u0001S#\tYd\b\u0005\u0002\u0015y%\u0011Q\b\u0005\u0002\b\u001d>$\b.\u001b8h!\t!r(\u0003\u0002A!\t\u0019\u0011I\\=\t\u000b\t;\u0001\u0019A\"\u0002\u0019Q|\u0007\u000fT3wK2$\u0016m]6\u0011\ta!eGR\u0005\u0003\u000b2\u0011A\u0001V1tWB\u0011qg\u0012\u0003\u0006\u0011\u001e\u0011\rA\u000f\u0002\u0003)B\fq!\u001a=fGV$X-F\u0002L!V#\"\u0001T)\u0011\u0007Qiu*\u0003\u0002O!\tIa)\u001e8di&|g\u000e\r\t\u0003oA#Q!\u000f\u0005C\u0002iBQA\u0015\u0005A\u0002M\u000bA\u0001^1tWB!\u0001\u0004R(U!\t9T\u000bB\u0003I\u0011\t\u0007!(\u0001\u000bfq\u0016\u001cW\u000f^3B]\u0012<\u0016-\u001b;SKN,H\u000e^\u000b\u00041jsFCA-\\!\t9$\fB\u0003:\u0013\t\u0007!\bC\u0003S\u0013\u0001\u0007A\f\u0005\u0003\u0019\tfk\u0006CA\u001c_\t\u0015A\u0015B1\u0001;\u0003A\u0001\u0018M]1mY\u0016d\u0017n]7MKZ,G\u000e"
    )
BootstrapMethods:
  0: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #71 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$6:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
      #72 (Lscala/collection/parallel/Task;)Ljava/lang/Object;
      #73 5
      #74 1
      #72 (Lscala/collection/parallel/Task;)Ljava/lang/Object;
  1: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 ()Ljava/lang/Object;
      #106 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$execute$2:(Lscala/concurrent/Future;)Ljava/lang/Object;
      #101 ()Ljava/lang/Object;
      #74 1
  2: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #157 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$4:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
      #159 (Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
      #73 5
      #74 1
      #159 (Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
  3: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #169 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$3:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
      #170 (Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
      #73 5
      #74 1
      #170 (Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  4: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 (Ljava/lang/Object;)Ljava/lang/Object;
      #208 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$1:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
      #170 (Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
      #73 5
      #74 1
      #170 (Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
  5: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #218 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #221 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$2:(Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
      #223 (Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
      #73 5
      #74 1
      #223 (Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
  6: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 ()Ljava/lang/Object;
      #246 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$5:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
      #248 ()Lscala/collection/parallel/Task;
      #73 5
      #74 1
      #248 ()Lscala/collection/parallel/Task;
  7: #318 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #208 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$1:(Lscala/collection/parallel/FutureTasks;ILscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
      #221 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$2:(Lscala/concurrent/ExecutionContext;Lscala/concurrent/Future;Lscala/concurrent/Future;)Lscala/concurrent/Future;
      #169 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$3:(Lscala/concurrent/Future;Lscala/concurrent/ExecutionContext;Lscala/collection/parallel/Task;)Lscala/concurrent/Future;
      #157 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$4:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
      #246 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$5:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/Task;
      #71 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$exec$6:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
      #106 REF_invokeStatic scala/collection/parallel/FutureTasks.$anonfun$execute$2:(Lscala/concurrent/Future;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x63 (unknown attribute)
   01 01 00 13 00 84 00 85 01 00 A3 00 A4 01 00 97
   00 98 01 00 8A 00 8B 01 00 B1 00 9E 01 00 43 00
   44 01 00 66 00 67 01 00 E7 01 1C 01 00 3D 00 3E
   01 00 1B 00 29 01 00 1E 00 1F 01 00 19 00 64 01
   00 19 00 34 01 00 37 00 38 01 00 5E 00 5F 01 00
   72 00 44 01 00 17 00 31 01 00 7A 00 31 01 00 2D
   00 2E 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
