Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/math/Equiv$Tuple5Equiv.class
  Last modified May 29, 2022; size 3529 bytes
  SHA-256 checksum 75951bc8ca5bfd1436436be5564db6da7a971dff06bad80b5db980887c2a6e7e
  Compiled from "Equiv.scala"
public final class scala.math.Equiv$Tuple5Equiv<T1 extends java.lang.Object, T2 extends java.lang.Object, T3 extends java.lang.Object, T4 extends java.lang.Object, T5 extends java.lang.Object> extends java.lang.Object implements scala.math.Equiv<scala.Tuple5<T1, T2, T3, T4, T5>>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/Equiv$Tuple5Equiv
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 10, attributes: 5
Constant pool:
    #1 = Utf8               scala/math/Equiv$Tuple5Equiv
    #2 = Class              #1            // scala/math/Equiv$Tuple5Equiv
    #3 = Utf8               <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple5<TT1;TT2;TT3;TT4;TT5;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Equiv
    #7 = Class              #6            // scala/math/Equiv
    #8 = Utf8               Equiv.scala
    #9 = Utf8               Tuple5Equiv
   #10 = Utf8               eqv1
   #11 = Utf8               Lscala/math/Equiv;
   #12 = Utf8               Lscala/math/Equiv<TT1;>;
   #13 = Utf8               eqv2
   #14 = Utf8               Lscala/math/Equiv<TT2;>;
   #15 = Utf8               eqv3
   #16 = Utf8               Lscala/math/Equiv<TT3;>;
   #17 = Utf8               eqv4
   #18 = Utf8               Lscala/math/Equiv<TT4;>;
   #19 = Utf8               eqv5
   #20 = Utf8               Lscala/math/Equiv<TT5;>;
   #21 = Utf8               ()Lscala/math/Equiv;
   #22 = Utf8               ()Lscala/math/Equiv<TT1;>;
   #23 = NameAndType        #10:#11       // eqv1:Lscala/math/Equiv;
   #24 = Fieldref           #2.#23        // scala/math/Equiv$Tuple5Equiv.eqv1:Lscala/math/Equiv;
   #25 = Utf8               this
   #26 = Utf8               Lscala/math/Equiv$Tuple5Equiv;
   #27 = Utf8               ()Lscala/math/Equiv<TT2;>;
   #28 = NameAndType        #13:#11       // eqv2:Lscala/math/Equiv;
   #29 = Fieldref           #2.#28        // scala/math/Equiv$Tuple5Equiv.eqv2:Lscala/math/Equiv;
   #30 = Utf8               ()Lscala/math/Equiv<TT3;>;
   #31 = NameAndType        #15:#11       // eqv3:Lscala/math/Equiv;
   #32 = Fieldref           #2.#31        // scala/math/Equiv$Tuple5Equiv.eqv3:Lscala/math/Equiv;
   #33 = Utf8               ()Lscala/math/Equiv<TT4;>;
   #34 = NameAndType        #17:#11       // eqv4:Lscala/math/Equiv;
   #35 = Fieldref           #2.#34        // scala/math/Equiv$Tuple5Equiv.eqv4:Lscala/math/Equiv;
   #36 = Utf8               ()Lscala/math/Equiv<TT5;>;
   #37 = NameAndType        #19:#11       // eqv5:Lscala/math/Equiv;
   #38 = Fieldref           #2.#37        // scala/math/Equiv$Tuple5Equiv.eqv5:Lscala/math/Equiv;
   #39 = Utf8               equiv
   #40 = Utf8               (Lscala/Tuple5;Lscala/Tuple5;)Z
   #41 = Utf8               (Lscala/Tuple5<TT1;TT2;TT3;TT4;TT5;>;Lscala/Tuple5<TT1;TT2;TT3;TT4;TT5;>;)Z
   #42 = Utf8               x
   #43 = Utf8               y
   #44 = NameAndType        #10:#21       // eqv1:()Lscala/math/Equiv;
   #45 = Methodref          #2.#44        // scala/math/Equiv$Tuple5Equiv.eqv1:()Lscala/math/Equiv;
   #46 = Utf8               scala/Tuple5
   #47 = Class              #46           // scala/Tuple5
   #48 = Utf8               _1
   #49 = Utf8               ()Ljava/lang/Object;
   #50 = NameAndType        #48:#49       // _1:()Ljava/lang/Object;
   #51 = Methodref          #47.#50       // scala/Tuple5._1:()Ljava/lang/Object;
   #52 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #53 = NameAndType        #39:#52       // equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #54 = InterfaceMethodref #7.#53        // scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #55 = NameAndType        #13:#21       // eqv2:()Lscala/math/Equiv;
   #56 = Methodref          #2.#55        // scala/math/Equiv$Tuple5Equiv.eqv2:()Lscala/math/Equiv;
   #57 = Utf8               _2
   #58 = NameAndType        #57:#49       // _2:()Ljava/lang/Object;
   #59 = Methodref          #47.#58       // scala/Tuple5._2:()Ljava/lang/Object;
   #60 = NameAndType        #15:#21       // eqv3:()Lscala/math/Equiv;
   #61 = Methodref          #2.#60        // scala/math/Equiv$Tuple5Equiv.eqv3:()Lscala/math/Equiv;
   #62 = Utf8               _3
   #63 = NameAndType        #62:#49       // _3:()Ljava/lang/Object;
   #64 = Methodref          #47.#63       // scala/Tuple5._3:()Ljava/lang/Object;
   #65 = NameAndType        #17:#21       // eqv4:()Lscala/math/Equiv;
   #66 = Methodref          #2.#65        // scala/math/Equiv$Tuple5Equiv.eqv4:()Lscala/math/Equiv;
   #67 = Utf8               _4
   #68 = NameAndType        #67:#49       // _4:()Ljava/lang/Object;
   #69 = Methodref          #47.#68       // scala/Tuple5._4:()Ljava/lang/Object;
   #70 = NameAndType        #19:#21       // eqv5:()Lscala/math/Equiv;
   #71 = Methodref          #2.#70        // scala/math/Equiv$Tuple5Equiv.eqv5:()Lscala/math/Equiv;
   #72 = Utf8               _5
   #73 = NameAndType        #72:#49       // _5:()Ljava/lang/Object;
   #74 = Methodref          #47.#73       // scala/Tuple5._5:()Ljava/lang/Object;
   #75 = Utf8               Lscala/Tuple5;
   #76 = Utf8               equals
   #77 = Utf8               (Ljava/lang/Object;)Z
   #78 = Utf8               obj
   #79 = NameAndType        #76:#77       // equals:(Ljava/lang/Object;)Z
   #80 = Methodref          #5.#79        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #81 = Utf8               Ljava/lang/Object;
   #82 = Utf8               hashCode
   #83 = Utf8               ()I
   #84 = Utf8               <init>
   #85 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #86 = NameAndType        #84:#85       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #87 = Methodref          #47.#86       // scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #88 = Utf8               scala/util/hashing/MurmurHash3$
   #89 = Class              #88           // scala/util/hashing/MurmurHash3$
   #90 = Utf8               MODULE$
   #91 = Utf8               Lscala/util/hashing/MurmurHash3$;
   #92 = NameAndType        #90:#91       // MODULE$:Lscala/util/hashing/MurmurHash3$;
   #93 = Fieldref           #89.#92       // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
   #94 = Utf8               productHash
   #95 = Utf8               (Lscala/Product;)I
   #96 = NameAndType        #94:#95       // productHash:(Lscala/Product;)I
   #97 = Methodref          #89.#96       // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
   #98 = Utf8               hashCode_this
   #99 = NameAndType        #39:#40       // equiv:(Lscala/Tuple5;Lscala/Tuple5;)Z
  #100 = Methodref          #2.#99        // scala/math/Equiv$Tuple5Equiv.equiv:(Lscala/Tuple5;Lscala/Tuple5;)Z
  #101 = Utf8               (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
  #102 = Utf8               (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;)V
  #103 = Utf8               ()V
  #104 = NameAndType        #84:#103      // "<init>":()V
  #105 = Methodref          #5.#104       // java/lang/Object."<init>":()V
  #106 = Utf8               Signature
  #107 = Utf8               Code
  #108 = Utf8               LineNumberTable
  #109 = Utf8               LocalVariableTable
  #110 = Utf8               StackMapTable
  #111 = Utf8               MethodParameters
  #112 = Utf8               InnerClasses
  #113 = Utf8               SourceFile
  #114 = Utf8               ScalaInlineInfo
  #115 = Utf8               Scala
{
  private final scala.math.Equiv<T1> eqv1;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/math/Equiv<TT1;>;

  private final scala.math.Equiv<T2> eqv2;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/math/Equiv<TT2;>;

  private final scala.math.Equiv<T3> eqv3;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/math/Equiv<TT3;>;

  private final scala.math.Equiv<T4> eqv4;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/math/Equiv<TT4;>;

  private final scala.math.Equiv<T5> eqv5;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/math/Equiv<TT5;>;

  private scala.math.Equiv<T1> eqv1();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #24                 // Field eqv1:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 335: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple5Equiv;
    Signature: #22                          // ()Lscala/math/Equiv<TT1;>;

  private scala.math.Equiv<T2> eqv2();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field eqv2:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 336: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple5Equiv;
    Signature: #27                          // ()Lscala/math/Equiv<TT2;>;

  private scala.math.Equiv<T3> eqv3();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #32                 // Field eqv3:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 337: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple5Equiv;
    Signature: #30                          // ()Lscala/math/Equiv<TT3;>;

  private scala.math.Equiv<T4> eqv4();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #35                 // Field eqv4:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 338: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple5Equiv;
    Signature: #33                          // ()Lscala/math/Equiv<TT4;>;

  private scala.math.Equiv<T5> eqv5();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #38                 // Field eqv5:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 339: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple5Equiv;
    Signature: #36                          // ()Lscala/math/Equiv<TT5;>;

  public boolean equiv(scala.Tuple5<T1, T2, T3, T4, T5>, scala.Tuple5<T1, T2, T3, T4, T5>);
    descriptor: (Lscala/Tuple5;Lscala/Tuple5;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #45                 // Method eqv1:()Lscala/math/Equiv;
         4: aload_1
         5: invokevirtual #51                 // Method scala/Tuple5._1:()Ljava/lang/Object;
         8: aload_2
         9: invokevirtual #51                 // Method scala/Tuple5._1:()Ljava/lang/Object;
        12: invokeinterface #54,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        17: ifeq          102
        20: aload_0
        21: invokespecial #56                 // Method eqv2:()Lscala/math/Equiv;
        24: aload_1
        25: invokevirtual #59                 // Method scala/Tuple5._2:()Ljava/lang/Object;
        28: aload_2
        29: invokevirtual #59                 // Method scala/Tuple5._2:()Ljava/lang/Object;
        32: invokeinterface #54,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        37: ifeq          102
        40: aload_0
        41: invokespecial #61                 // Method eqv3:()Lscala/math/Equiv;
        44: aload_1
        45: invokevirtual #64                 // Method scala/Tuple5._3:()Ljava/lang/Object;
        48: aload_2
        49: invokevirtual #64                 // Method scala/Tuple5._3:()Ljava/lang/Object;
        52: invokeinterface #54,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        57: ifeq          102
        60: aload_0
        61: invokespecial #66                 // Method eqv4:()Lscala/math/Equiv;
        64: aload_1
        65: invokevirtual #69                 // Method scala/Tuple5._4:()Ljava/lang/Object;
        68: aload_2
        69: invokevirtual #69                 // Method scala/Tuple5._4:()Ljava/lang/Object;
        72: invokeinterface #54,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        77: ifeq          102
        80: aload_0
        81: invokespecial #71                 // Method eqv5:()Lscala/math/Equiv;
        84: aload_1
        85: invokevirtual #74                 // Method scala/Tuple5._5:()Ljava/lang/Object;
        88: aload_2
        89: invokevirtual #74                 // Method scala/Tuple5._5:()Ljava/lang/Object;
        92: invokeinterface #54,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        97: ifeq          102
       100: iconst_1
       101: ireturn
       102: iconst_0
       103: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 102
      LineNumberTable:
        line 342: 0
        line 343: 20
        line 344: 40
        line 345: 60
        line 346: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     104     0  this   Lscala/math/Equiv$Tuple5Equiv;
            0     104     1     x   Lscala/Tuple5;
            0     104     2     y   Lscala/Tuple5;
    Signature: #41                          // (Lscala/Tuple5<TT1;TT2;TT3;TT4;TT5;>;Lscala/Tuple5<TT1;TT2;TT3;TT4;TT5;>;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/lang/Object
         4: ifeq          17
         7: aload_0
         8: aload_1
         9: if_acmpne     17
        12: iconst_1
        13: istore_2
        14: goto          195
        17: aload_1
        18: instanceof    #2                  // class scala/math/Equiv$Tuple5Equiv
        21: ifeq          193
        24: aload_1
        25: checkcast     #2                  // class scala/math/Equiv$Tuple5Equiv
        28: astore_3
        29: aload_0
        30: invokespecial #45                 // Method eqv1:()Lscala/math/Equiv;
        33: aload_3
        34: invokespecial #45                 // Method eqv1:()Lscala/math/Equiv;
        37: astore        4
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         4
        46: ifnull        60
        49: goto          188
        52: aload         4
        54: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          188
        60: aload_0
        61: invokespecial #56                 // Method eqv2:()Lscala/math/Equiv;
        64: aload_3
        65: invokespecial #56                 // Method eqv2:()Lscala/math/Equiv;
        68: astore        5
        70: dup
        71: ifnonnull     83
        74: pop
        75: aload         5
        77: ifnull        91
        80: goto          188
        83: aload         5
        85: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        88: ifeq          188
        91: aload_0
        92: invokespecial #61                 // Method eqv3:()Lscala/math/Equiv;
        95: aload_3
        96: invokespecial #61                 // Method eqv3:()Lscala/math/Equiv;
        99: astore        6
       101: dup
       102: ifnonnull     114
       105: pop
       106: aload         6
       108: ifnull        122
       111: goto          188
       114: aload         6
       116: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       119: ifeq          188
       122: aload_0
       123: invokespecial #66                 // Method eqv4:()Lscala/math/Equiv;
       126: aload_3
       127: invokespecial #66                 // Method eqv4:()Lscala/math/Equiv;
       130: astore        7
       132: dup
       133: ifnonnull     145
       136: pop
       137: aload         7
       139: ifnull        153
       142: goto          188
       145: aload         7
       147: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       150: ifeq          188
       153: aload_0
       154: invokespecial #71                 // Method eqv5:()Lscala/math/Equiv;
       157: aload_3
       158: invokespecial #71                 // Method eqv5:()Lscala/math/Equiv;
       161: astore        8
       163: dup
       164: ifnonnull     176
       167: pop
       168: aload         8
       170: ifnull        184
       173: goto          188
       176: aload         8
       178: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       181: ifeq          188
       184: iconst_1
       185: goto          189
       188: iconst_0
       189: istore_2
       190: goto          195
       193: iconst_0
       194: istore_2
       195: iload_2
       196: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/math/Equiv$Tuple5Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple5Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple5Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple5Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple5Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple5Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple5Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple5Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple5Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple5Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/math/Equiv$Tuple5Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple5Equiv, class scala/math/Equiv ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 349: 0
        line 350: 17
        line 351: 29
        line 352: 60
        line 353: 91
        line 354: 122
        line 355: 153
        line 356: 193
        line 348: 195
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     197     0  this   Lscala/math/Equiv$Tuple5Equiv;
            0     197     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=1
         0: new           #47                 // class scala/Tuple5
         3: dup
         4: aload_0
         5: invokespecial #45                 // Method eqv1:()Lscala/math/Equiv;
         8: aload_0
         9: invokespecial #56                 // Method eqv2:()Lscala/math/Equiv;
        12: aload_0
        13: invokespecial #61                 // Method eqv3:()Lscala/math/Equiv;
        16: aload_0
        17: invokespecial #66                 // Method eqv4:()Lscala/math/Equiv;
        20: aload_0
        21: invokespecial #71                 // Method eqv5:()Lscala/math/Equiv;
        24: invokespecial #87                 // Method scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        27: astore_1
        28: getstatic     #93                 // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        31: aload_1
        32: invokevirtual #97                 // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
        35: ireturn
      LineNumberTable:
        line 358: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/math/Equiv$Tuple5Equiv;
           28       7     1 hashCode_this   Lscala/Tuple5;

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #47                 // class scala/Tuple5
         5: aload_2
         6: checkcast     #47                 // class scala/Tuple5
         9: invokevirtual #100                // Method equiv:(Lscala/Tuple5;Lscala/Tuple5;)Z
        12: ireturn
      LineNumberTable:
        line 335: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Equiv$Tuple5Equiv;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Equiv$Tuple5Equiv(scala.math.Equiv<T1>, scala.math.Equiv<T2>, scala.math.Equiv<T3>, scala.math.Equiv<T4>, scala.math.Equiv<T5>);
    descriptor: (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: putfield      #24                 // Field eqv1:Lscala/math/Equiv;
         5: aload_0
         6: aload_2
         7: putfield      #29                 // Field eqv2:Lscala/math/Equiv;
        10: aload_0
        11: aload_3
        12: putfield      #32                 // Field eqv3:Lscala/math/Equiv;
        15: aload_0
        16: aload         4
        18: putfield      #35                 // Field eqv4:Lscala/math/Equiv;
        21: aload_0
        22: aload         5
        24: putfield      #38                 // Field eqv5:Lscala/math/Equiv;
        27: aload_0
        28: invokespecial #105                // Method java/lang/Object."<init>":()V
        31: return
      LineNumberTable:
        line 335: 0
        line 336: 5
        line 337: 10
        line 338: 15
        line 339: 21
        line 340: 27
        line 335: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/math/Equiv$Tuple5Equiv;
            0      32     1  eqv1   Lscala/math/Equiv;
            0      32     2  eqv2   Lscala/math/Equiv;
            0      32     3  eqv3   Lscala/math/Equiv;
            0      32     4  eqv4   Lscala/math/Equiv;
            0      32     5  eqv5   Lscala/math/Equiv;
    Signature: #102                         // (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;)V
    MethodParameters:
      Name                           Flags
      eqv1                           final
      eqv2                           final
      eqv3                           final
      eqv4                           final
      eqv5                           final
}
InnerClasses:
  private static final #9= #2 of #7;      // Tuple5Equiv=class scala/math/Equiv$Tuple5Equiv of class scala/math/Equiv
Signature: #3                           // <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple5<TT1;TT2;TT3;TT4;TT5;>;>;
SourceFile: "Equiv.scala"
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 01 00 0A 00 54 00 65 01 00 4C 00 4D 01 00 27
   00 34 01 00 27 00 28 01 00 0A 00 15 01 00 0D 00
   15 01 00 0F 00 15 01 00 11 00 15 01 00 13 00 15
   01 00 52 00 53 01
  Scala: length = 0x0 (unknown attribute)

