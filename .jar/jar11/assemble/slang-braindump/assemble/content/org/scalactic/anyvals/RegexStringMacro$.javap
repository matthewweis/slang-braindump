Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/anyvals/RegexStringMacro$.class
  Last modified May 29, 2022; size 6136 bytes
  SHA-256 checksum e3256ef927f751e3d4a79780402a3364e6965f73cd78f25a6459ab537ffe1660
  Compiled from "RegexStringMacro.scala"
public final class org.scalactic.anyvals.RegexStringMacro$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalactic/anyvals/RegexStringMacro$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               org/scalactic/anyvals/RegexStringMacro$
    #2 = Class              #1            // org/scalactic/anyvals/RegexStringMacro$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               RegexStringMacro.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/scalactic/anyvals/RegexStringMacro$$treecreator1$1
   #12 = Class              #11           // org/scalactic/anyvals/RegexStringMacro$$treecreator1$1
   #13 = Utf8               $treecreator1$1
   #14 = Utf8               org/scalactic/anyvals/RegexStringMacro$$typecreator2$1
   #15 = Class              #14           // org/scalactic/anyvals/RegexStringMacro$$typecreator2$1
   #16 = Utf8               $typecreator2$1
   #17 = Utf8               scala/reflect/api/Constants$ConstantApi
   #18 = Class              #17           // scala/reflect/api/Constants$ConstantApi
   #19 = Utf8               scala/reflect/api/Constants
   #20 = Class              #19           // scala/reflect/api/Constants
   #21 = Utf8               ConstantApi
   #22 = Utf8               scala/reflect/api/Exprs$Expr
   #23 = Class              #22           // scala/reflect/api/Exprs$Expr
   #24 = Utf8               scala/reflect/api/Exprs
   #25 = Class              #24           // scala/reflect/api/Exprs
   #26 = Utf8               Expr
   #27 = Utf8               scala/reflect/api/Exprs$Expr$
   #28 = Class              #27           // scala/reflect/api/Exprs$Expr$
   #29 = Utf8               Expr$
   #30 = Utf8               scala/reflect/api/Trees$LiteralApi
   #31 = Class              #30           // scala/reflect/api/Trees$LiteralApi
   #32 = Utf8               scala/reflect/api/Trees
   #33 = Class              #32           // scala/reflect/api/Trees
   #34 = Utf8               LiteralApi
   #35 = Utf8               scala/reflect/api/Trees$LiteralExtractor
   #36 = Class              #35           // scala/reflect/api/Trees$LiteralExtractor
   #37 = Utf8               LiteralExtractor
   #38 = Utf8               scala/reflect/api/Trees$TreeApi
   #39 = Class              #38           // scala/reflect/api/Trees$TreeApi
   #40 = Utf8               TreeApi
   #41 = Utf8               scala/reflect/api/TypeTags$TypeTag
   #42 = Class              #41           // scala/reflect/api/TypeTags$TypeTag
   #43 = Utf8               scala/reflect/api/TypeTags
   #44 = Class              #43           // scala/reflect/api/TypeTags
   #45 = Utf8               TypeTag
   #46 = Utf8               scala/reflect/api/TypeTags$TypeTag$
   #47 = Class              #46           // scala/reflect/api/TypeTags$TypeTag$
   #48 = Utf8               TypeTag$
   #49 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag
   #50 = Class              #49           // scala/reflect/api/TypeTags$WeakTypeTag
   #51 = Utf8               WeakTypeTag
   #52 = Utf8               MODULE$
   #53 = Utf8               Lorg/scalactic/anyvals/RegexStringMacro$;
   #54 = Utf8               <clinit>
   #55 = Utf8               ()V
   #56 = Utf8               <init>
   #57 = NameAndType        #56:#55       // "<init>":()V
   #58 = Methodref          #2.#57        // org/scalactic/anyvals/RegexStringMacro$."<init>":()V
   #59 = NameAndType        #52:#53       // MODULE$:Lorg/scalactic/anyvals/RegexStringMacro$;
   #60 = Fieldref           #2.#59        // org/scalactic/anyvals/RegexStringMacro$.MODULE$:Lorg/scalactic/anyvals/RegexStringMacro$;
   #61 = Utf8               isValid
   #62 = Utf8               (Ljava/lang/String;)Z
   #63 = Utf8               s
   #64 = Utf8               checkIsValid
   #65 = Utf8               (Ljava/lang/String;)Lscala/Tuple2;
   #66 = NameAndType        #64:#65       // checkIsValid:(Ljava/lang/String;)Lscala/Tuple2;
   #67 = Methodref          #2.#66        // org/scalactic/anyvals/RegexStringMacro$.checkIsValid:(Ljava/lang/String;)Lscala/Tuple2;
   #68 = Utf8               scala/Tuple2
   #69 = Class              #68           // scala/Tuple2
   #70 = Utf8               _1$mcZ$sp
   #71 = Utf8               ()Z
   #72 = NameAndType        #70:#71       // _1$mcZ$sp:()Z
   #73 = Methodref          #69.#72       // scala/Tuple2._1$mcZ$sp:()Z
   #74 = Utf8               this
   #75 = Utf8               Ljava/lang/String;
   #76 = Utf8               (Ljava/lang/String;)Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/String;>;
   #77 = Utf8               java/util/regex/PatternSyntaxException
   #78 = Class              #77           // java/util/regex/PatternSyntaxException
   #79 = Utf8               java/util/regex/Pattern
   #80 = Class              #79           // java/util/regex/Pattern
   #81 = Utf8               compile
   #82 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;
   #83 = NameAndType        #81:#82       // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
   #84 = Methodref          #80.#83       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
   #85 = Utf8               scala/runtime/BoxesRunTime
   #86 = Class              #85           // scala/runtime/BoxesRunTime
   #87 = Utf8               boxToBoolean
   #88 = Utf8               (Z)Ljava/lang/Boolean;
   #89 = NameAndType        #87:#88       // boxToBoolean:(Z)Ljava/lang/Boolean;
   #90 = Methodref          #86.#89       // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #91 = Utf8
   #92 = String             #91           //
   #93 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #94 = NameAndType        #56:#93       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #95 = Methodref          #69.#94       // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #96 = Utf8               java/lang/StringBuilder
   #97 = Class              #96           // java/lang/StringBuilder
   #98 = Integer            1
   #99 = Utf8               (I)V
  #100 = NameAndType        #56:#99       // "<init>":(I)V
  #101 = Methodref          #97.#100      // java/lang/StringBuilder."<init>":(I)V
  #102 = Utf8               \n
  #103 = String             #102          // \n
  #104 = Utf8               append
  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #106 = NameAndType        #104:#105     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #107 = Methodref          #97.#106      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #108 = Utf8               getMessage
  #109 = Utf8               ()Ljava/lang/String;
  #110 = NameAndType        #108:#109     // getMessage:()Ljava/lang/String;
  #111 = Methodref          #78.#110      // java/util/regex/PatternSyntaxException.getMessage:()Ljava/lang/String;
  #112 = Utf8               toString
  #113 = NameAndType        #112:#109     // toString:()Ljava/lang/String;
  #114 = Methodref          #97.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #115 = Utf8               e
  #116 = Utf8               Ljava/util/regex/PatternSyntaxException;
  #117 = Utf8               apply
  #118 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #119 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/anyvals/RegexString;>;
  #120 = Utf8               c
  #121 = Utf8               value
  #122 = Utf8               tree
  #123 = Utf8               ()Lscala/reflect/api/Trees$TreeApi;
  #124 = NameAndType        #122:#123     // tree:()Lscala/reflect/api/Trees$TreeApi;
  #125 = InterfaceMethodref #23.#124      // scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
  #126 = Utf8               scala/reflect/macros/whitebox/Context
  #127 = Class              #126          // scala/reflect/macros/whitebox/Context
  #128 = Utf8               universe
  #129 = Utf8               ()Lscala/reflect/macros/Universe;
  #130 = NameAndType        #128:#129     // universe:()Lscala/reflect/macros/Universe;
  #131 = InterfaceMethodref #127.#130     // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #132 = Utf8               scala/reflect/macros/Universe
  #133 = Class              #132          // scala/reflect/macros/Universe
  #134 = Utf8               LiteralTag
  #135 = Utf8               ()Lscala/reflect/ClassTag;
  #136 = NameAndType        #134:#135     // LiteralTag:()Lscala/reflect/ClassTag;
  #137 = Methodref          #133.#136     // scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
  #138 = Utf8               scala/reflect/ClassTag
  #139 = Class              #138          // scala/reflect/ClassTag
  #140 = Utf8               unapply
  #141 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #142 = NameAndType        #140:#141     // unapply:(Ljava/lang/Object;)Lscala/Option;
  #143 = InterfaceMethodref #139.#142     // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
  #144 = Utf8               scala/Option
  #145 = Class              #144          // scala/Option
  #146 = Utf8               isEmpty
  #147 = NameAndType        #146:#71      // isEmpty:()Z
  #148 = Methodref          #145.#147     // scala/Option.isEmpty:()Z
  #149 = Utf8               get
  #150 = Utf8               ()Ljava/lang/Object;
  #151 = NameAndType        #149:#150     // get:()Ljava/lang/Object;
  #152 = Methodref          #145.#151     // scala/Option.get:()Ljava/lang/Object;
  #153 = Utf8               Literal
  #154 = Utf8               ()Lscala/reflect/api/Trees$LiteralExtractor;
  #155 = NameAndType        #153:#154     // Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #156 = Methodref          #133.#155     // scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #157 = Utf8               (Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
  #158 = NameAndType        #140:#157     // unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
  #159 = Methodref          #36.#158      // scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
  #160 = NameAndType        #121:#150     // value:()Ljava/lang/Object;
  #161 = Methodref          #18.#160      // scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
  #162 = Methodref          #4.#113       // java/lang/Object.toString:()Ljava/lang/String;
  #163 = Utf8               _2
  #164 = NameAndType        #163:#150     // _2:()Ljava/lang/Object;
  #165 = Methodref          #69.#164      // scala/Tuple2._2:()Ljava/lang/Object;
  #166 = Utf8               java/lang/String
  #167 = Class              #166          // java/lang/String
  #168 = Integer            98
  #169 = Utf8               RegexString.apply can only be invoked on String literals that represent valid regular expressions.
  #170 = String             #169          // RegexString.apply can only be invoked on String literals that represent valid regular expressions.
  #171 = Utf8               RegexString.apply can only be invoked on String literals that represent valid regular expressions. Please use RegexString.from instead.
  #172 = String             #171          // RegexString.apply can only be invoked on String literals that represent valid regular expressions. Please use RegexString.from instead.
  #173 = Utf8               org/scalactic/anyvals/CompileTimeAssertions$
  #174 = Class              #173          // org/scalactic/anyvals/CompileTimeAssertions$
  #175 = Utf8               Lorg/scalactic/anyvals/CompileTimeAssertions$;
  #176 = NameAndType        #52:#175      // MODULE$:Lorg/scalactic/anyvals/CompileTimeAssertions$;
  #177 = Fieldref           #174.#176     // org/scalactic/anyvals/CompileTimeAssertions$.MODULE$:Lorg/scalactic/anyvals/CompileTimeAssertions$;
  #178 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #179 = MethodType         #178          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #180 = Utf8               $anonfun$apply$1$adapted
  #181 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #182 = NameAndType        #180:#181     // $anonfun$apply$1$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #183 = Methodref          #2.#182       // org/scalactic/anyvals/RegexStringMacro$.$anonfun$apply$1$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #184 = MethodHandle       6:#183        // REF_invokeStatic org/scalactic/anyvals/RegexStringMacro$.$anonfun$apply$1$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #185 = MethodType         #181          //  (Ljava/lang/String;)Ljava/lang/Object;
  #186 = Integer            5
  #187 = Utf8               java/lang/invoke/LambdaMetafactory
  #188 = Class              #187          // java/lang/invoke/LambdaMetafactory
  #189 = Utf8               altMetafactory
  #190 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #191 = NameAndType        #189:#190     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #192 = Methodref          #188.#191     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #193 = MethodHandle       6:#192        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #194 = Utf8               ()Lscala/Function1;
  #195 = NameAndType        #117:#194     // apply:()Lscala/Function1;
  #196 = InvokeDynamic      #0:#195       // #0:apply:()Lscala/Function1;
  #197 = Utf8               ensureValidStringLiteral
  #198 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #199 = NameAndType        #197:#198     // ensureValidStringLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #200 = Methodref          #174.#199     // org/scalactic/anyvals/CompileTimeAssertions$.ensureValidStringLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
  #201 = Utf8               rootMirror
  #202 = Utf8               ()Lscala/reflect/api/Mirror;
  #203 = NameAndType        #201:#202     // rootMirror:()Lscala/reflect/api/Mirror;
  #204 = Methodref          #133.#203     // scala/reflect/macros/Universe.rootMirror:()Lscala/reflect/api/Mirror;
  #205 = Utf8               ()Lscala/reflect/api/Exprs$Expr$;
  #206 = NameAndType        #26:#205      // Expr:()Lscala/reflect/api/Exprs$Expr$;
  #207 = Methodref          #133.#206     // scala/reflect/macros/Universe.Expr:()Lscala/reflect/api/Exprs$Expr$;
  #208 = Utf8               (Lscala/reflect/api/Exprs$Expr;)V
  #209 = NameAndType        #56:#208      // "<init>":(Lscala/reflect/api/Exprs$Expr;)V
  #210 = Methodref          #12.#209      // org/scalactic/anyvals/RegexStringMacro$$treecreator1$1."<init>":(Lscala/reflect/api/Exprs$Expr;)V
  #211 = Utf8               ()Lscala/reflect/api/TypeTags$TypeTag$;
  #212 = NameAndType        #45:#211      // TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
  #213 = Methodref          #133.#212     // scala/reflect/macros/Universe.TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
  #214 = Methodref          #15.#57       // org/scalactic/anyvals/RegexStringMacro$$typecreator2$1."<init>":()V
  #215 = Utf8               (Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
  #216 = NameAndType        #117:#215     // apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
  #217 = Methodref          #47.#216      // scala/reflect/api/TypeTags$TypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
  #218 = Utf8               (Lscala/reflect/api/Mirror;Lscala/reflect/api/TreeCreator;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #219 = NameAndType        #117:#218     // apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TreeCreator;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #220 = Methodref          #28.#219      // scala/reflect/api/Exprs$Expr$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TreeCreator;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #221 = Utf8               stringConst
  #222 = Utf8               Lscala/reflect/api/Constants$ConstantApi;
  #223 = Utf8               $u
  #224 = Utf8               Lscala/reflect/macros/Universe;
  #225 = Utf8               $m
  #226 = Utf8               Lscala/reflect/api/Mirror;
  #227 = Utf8               notValidExceptionMsg
  #228 = Utf8               notValidMsg
  #229 = Utf8               notLiteralMsg
  #230 = Utf8               Lscala/reflect/macros/whitebox/Context;
  #231 = Utf8               Lscala/reflect/api/Exprs$Expr;
  #232 = Utf8               $anonfun$apply$1
  #233 = NameAndType        #61:#62       // isValid:(Ljava/lang/String;)Z
  #234 = Methodref          #2.#233       // org/scalactic/anyvals/RegexStringMacro$.isValid:(Ljava/lang/String;)Z
  #235 = Methodref          #4.#57        // java/lang/Object."<init>":()V
  #236 = NameAndType        #232:#62      // $anonfun$apply$1:(Ljava/lang/String;)Z
  #237 = Methodref          #2.#236       // org/scalactic/anyvals/RegexStringMacro$.$anonfun$apply$1:(Ljava/lang/String;)Z
  #238 = Utf8               $deserializeLambda$
  #239 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #240 = Utf8               scala/runtime/LambdaDeserialize
  #241 = Class              #240          // scala/runtime/LambdaDeserialize
  #242 = Utf8               bootstrap
  #243 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #244 = NameAndType        #242:#243     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #245 = Methodref          #241.#244     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #246 = MethodHandle       6:#245        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #247 = Utf8               lambdaDeserialize
  #248 = NameAndType        #247:#239     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #249 = InvokeDynamic      #1:#248       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #250 = Utf8               Code
  #251 = Utf8               LineNumberTable
  #252 = Utf8               LocalVariableTable
  #253 = Utf8               MethodParameters
  #254 = Utf8               StackMapTable
  #255 = Utf8               Signature
  #256 = Utf8               InnerClasses
  #257 = Utf8               SourceFile
  #258 = Utf8               BootstrapMethods
  #259 = Utf8               ScalaInlineInfo
  #260 = Utf8               Scala
{
  public static final org.scalactic.anyvals.RegexStringMacro$ MODULE$;
    descriptor: Lorg/scalactic/anyvals/RegexStringMacro$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/scalactic/anyvals/RegexStringMacro$
         3: dup
         4: invokespecial #58                 // Method "<init>":()V
         7: putstatic     #60                 // Field MODULE$:Lorg/scalactic/anyvals/RegexStringMacro$;
        10: return
      LineNumberTable:
        line 25: 0

  public boolean isValid(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #67                 // Method checkIsValid:(Ljava/lang/String;)Lscala/Tuple2;
         5: invokevirtual #73                 // Method scala/Tuple2._1$mcZ$sp:()Z
         8: ireturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalactic/anyvals/RegexStringMacro$;
            0       9     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private scala.Tuple2<java.lang.Object, java.lang.String> checkIsValid(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=3, args_size=2
         0: aload_1
         1: invokestatic  #84                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
         4: pop
         5: new           #69                 // class scala/Tuple2
         8: dup
         9: iconst_1
        10: invokestatic  #90                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        13: ldc           #92                 // String
        15: invokespecial #95                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        18: goto          60
        21: astore_2
        22: new           #69                 // class scala/Tuple2
        25: dup
        26: iconst_0
        27: invokestatic  #90                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        30: new           #97                 // class java/lang/StringBuilder
        33: dup
        34: ldc           #98                 // int 1
        36: invokespecial #101                // Method java/lang/StringBuilder."<init>":(I)V
        39: ldc           #103                // String \n
        41: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        44: aload_2
        45: invokevirtual #111                // Method java/util/regex/PatternSyntaxException.getMessage:()Ljava/lang/String;
        48: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        51: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        54: invokespecial #95                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        57: goto          60
        60: areturn
      Exception table:
         from    to  target type
             0    18    21   Class java/util/regex/PatternSyntaxException
      StackMapTable: number_of_entries = 2
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/util/regex/PatternSyntaxException ]
        frame_type = 102 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 32: 0
        line 33: 5
        line 40: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      36     2     e   Ljava/util/regex/PatternSyntaxException;
            0      61     0  this   Lorg/scalactic/anyvals/RegexStringMacro$;
            0      61     1     s   Ljava/lang/String;
    Signature: #76                          // (Ljava/lang/String;)Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.reflect.api.Exprs$Expr<org.scalactic.anyvals.RegexString> apply(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=15, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: invokeinterface #125,  1          // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        10: astore        6
        12: aload         6
        14: ifnull        123
        17: aload_1
        18: invokeinterface #131,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        23: invokevirtual #137                // Method scala/reflect/macros/Universe.LiteralTag:()Lscala/reflect/ClassTag;
        26: aload         6
        28: invokeinterface #143,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        33: astore        7
        35: aload         7
        37: invokevirtual #148                // Method scala/Option.isEmpty:()Z
        40: ifne          120
        43: aload         7
        45: invokevirtual #152                // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #31                 // class scala/reflect/api/Trees$LiteralApi
        51: astore        8
        53: aload         8
        55: ifnull        117
        58: aload_1
        59: invokeinterface #131,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        64: invokevirtual #156                // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        67: aload         8
        69: invokevirtual #159                // Method scala/reflect/api/Trees$LiteralExtractor.unapply:(Lscala/reflect/api/Trees$LiteralApi;)Lscala/Option;
        72: astore        9
        74: aload         9
        76: invokevirtual #148                // Method scala/Option.isEmpty:()Z
        79: ifne          114
        82: aload         9
        84: invokevirtual #152                // Method scala/Option.get:()Ljava/lang/Object;
        87: checkcast     #18                 // class scala/reflect/api/Constants$ConstantApi
        90: astore        10
        92: aload_0
        93: aload         10
        95: invokevirtual #161                // Method scala/reflect/api/Constants$ConstantApi.value:()Ljava/lang/Object;
        98: invokevirtual #162                // Method java/lang/Object.toString:()Ljava/lang/String;
       101: invokespecial #67                 // Method checkIsValid:(Ljava/lang/String;)Lscala/Tuple2;
       104: invokevirtual #165                // Method scala/Tuple2._2:()Ljava/lang/Object;
       107: checkcast     #167                // class java/lang/String
       110: astore_3
       111: goto          132
       114: goto          126
       117: goto          126
       120: goto          126
       123: goto          126
       126: ldc           #92                 // String
       128: astore_3
       129: goto          132
       132: aload_3
       133: astore        5
       135: new           #97                 // class java/lang/StringBuilder
       138: dup
       139: ldc           #168                // int 98
       141: invokespecial #101                // Method java/lang/StringBuilder."<init>":(I)V
       144: ldc           #170                // String RegexString.apply can only be invoked on String literals that represent valid regular expressions.
       146: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       149: aload         5
       151: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       154: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       157: astore        11
       159: ldc           #172                // String RegexString.apply can only be invoked on String literals that represent valid regular expressions. Please use RegexString.from instead.
       161: astore        12
       163: getstatic     #177                // Field org/scalactic/anyvals/CompileTimeAssertions$.MODULE$:Lorg/scalactic/anyvals/CompileTimeAssertions$;
       166: aload_1
       167: aload         4
       169: aload         11
       171: aload         12
       173: invokedynamic #196,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       178: invokevirtual #200                // Method org/scalactic/anyvals/CompileTimeAssertions$.ensureValidStringLiteral:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
       181: aload_1
       182: invokeinterface #131,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       187: astore        13
       189: aload_1
       190: invokeinterface #131,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       195: invokevirtual #204                // Method scala/reflect/macros/Universe.rootMirror:()Lscala/reflect/api/Mirror;
       198: astore        14
       200: aload         13
       202: invokevirtual #207                // Method scala/reflect/macros/Universe.Expr:()Lscala/reflect/api/Exprs$Expr$;
       205: aload         14
       207: new           #12                 // class org/scalactic/anyvals/RegexStringMacro$$treecreator1$1
       210: dup
       211: aload         4
       213: invokespecial #210                // Method org/scalactic/anyvals/RegexStringMacro$$treecreator1$1."<init>":(Lscala/reflect/api/Exprs$Expr;)V
       216: aload         13
       218: invokevirtual #213                // Method scala/reflect/macros/Universe.TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
       221: aload         14
       223: new           #15                 // class org/scalactic/anyvals/RegexStringMacro$$typecreator2$1
       226: dup
       227: invokespecial #214                // Method org/scalactic/anyvals/RegexStringMacro$$typecreator2$1."<init>":()V
       230: invokevirtual #217                // Method scala/reflect/api/TypeTags$TypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
       233: invokevirtual #220                // Method scala/reflect/api/Exprs$Expr$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TreeCreator;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
       236: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 114
          locals = [ class org/scalactic/anyvals/RegexStringMacro$, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, top, class scala/reflect/api/Exprs$Expr, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$LiteralApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class org/scalactic/anyvals/RegexStringMacro$, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class java/lang/String, class scala/reflect/api/Exprs$Expr, top, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 43: 0
        line 48: 3
        line 49: 12
        line 48: 43
        line 49: 53
        line 48: 82
        line 50: 92
        line 49: 114
        line 52: 126
        line 48: 132
        line 58: 135
        line 57: 144
        line 58: 149
        line 61: 159
        line 63: 163
        line 64: 181
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           92      22    10 stringConst   Lscala/reflect/api/Constants$ConstantApi;
          189      47    13    $u   Lscala/reflect/macros/Universe;
          200      36    14    $m   Lscala/reflect/api/Mirror;
          135     101     5 notValidExceptionMsg   Ljava/lang/String;
          159      77    11 notValidMsg   Ljava/lang/String;
          163      73    12 notLiteralMsg   Ljava/lang/String;
            0     237     0  this   Lorg/scalactic/anyvals/RegexStringMacro$;
            0     237     1     c   Lscala/reflect/macros/whitebox/Context;
            0     237     2 value   Lscala/reflect/api/Exprs$Expr;
    Signature: #119                         // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/anyvals/RegexString;>;
    MethodParameters:
      Name                           Flags
      c                              final
      value                          final

  public static final boolean $anonfun$apply$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #60                 // Field MODULE$:Lorg/scalactic/anyvals/RegexStringMacro$;
         3: aload_0
         4: invokevirtual #234                // Method isValid:(Ljava/lang/String;)Z
         7: ireturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private org.scalactic.anyvals.RegexStringMacro$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #235                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 66: 0
        line 25: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/anyvals/RegexStringMacro$;

  public static final java.lang.Object $anonfun$apply$1$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #237                // Method $anonfun$apply$1:(Ljava/lang/String;)Z
         4: invokestatic  #90                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #249,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #13= #12;                  // $treecreator1$1=class org/scalactic/anyvals/RegexStringMacro$$treecreator1$1
  public final #16= #15;                  // $typecreator2$1=class org/scalactic/anyvals/RegexStringMacro$$typecreator2$1
  public abstract #21= #18 of #20;        // ConstantApi=class scala/reflect/api/Constants$ConstantApi of class scala/reflect/api/Constants
  public #26= #23 of #25;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
  public #29= #28 of #25;                 // Expr$=class scala/reflect/api/Exprs$Expr$ of class scala/reflect/api/Exprs
  public #34= #31 of #33;                 // LiteralApi=class scala/reflect/api/Trees$LiteralApi of class scala/reflect/api/Trees
  public abstract #37= #36 of #33;        // LiteralExtractor=class scala/reflect/api/Trees$LiteralExtractor of class scala/reflect/api/Trees
  public #40= #39 of #33;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #45= #42 of #44;                 // TypeTag=class scala/reflect/api/TypeTags$TypeTag of class scala/reflect/api/TypeTags
  public #48= #47 of #44;                 // TypeTag$=class scala/reflect/api/TypeTags$TypeTag$ of class scala/reflect/api/TypeTags
  public #51= #50 of #44;                 // WeakTypeTag=class scala/reflect/api/TypeTags$WeakTypeTag of class scala/reflect/api/TypeTags
SourceFile: "RegexStringMacro.scala"
BootstrapMethods:
  0: #193 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #179 (Ljava/lang/Object;)Ljava/lang/Object;
      #184 REF_invokeStatic org/scalactic/anyvals/RegexStringMacro$.$anonfun$apply$1$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #185 (Ljava/lang/String;)Ljava/lang/Object;
      #186 5
      #98 1
      #185 (Ljava/lang/String;)Ljava/lang/Object;
  1: #246 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #184 REF_invokeStatic org/scalactic/anyvals/RegexStringMacro$.$anonfun$apply$1$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 E8 00 3E 01 00 B4 00 B5 01 00 38
   00 37 01 00 75 00 76 01 00 40 00 41 01 00 3D 00
   3E 01
  Scala: length = 0x0 (unknown attribute)

