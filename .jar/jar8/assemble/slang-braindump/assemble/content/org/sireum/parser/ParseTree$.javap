Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/ParseTree$.class
  Last modified May 29, 2022; size 14334 bytes
  SHA-256 checksum 2246cfdda6fbcd7870d2a157b03059591fbbae7ad719ae9f21972db32eca4ba5
  Compiled from "ParseTree.scala"
public final class org.sireum.parser.ParseTree$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/ParseTree$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/ParseTree$
    #2 = Class              #1            // org/sireum/parser/ParseTree$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ParseTree.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$ISZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               ISZ$
   #16 = Utf8               org/sireum/parser/ParseTree$BinaryPrecedenceOps
   #17 = Class              #16           // org/sireum/parser/ParseTree$BinaryPrecedenceOps
   #18 = Utf8               org/sireum/parser/ParseTree
   #19 = Class              #18           // org/sireum/parser/ParseTree
   #20 = Utf8               BinaryPrecedenceOps
   #21 = Utf8               MODULE$
   #22 = Utf8               Lorg/sireum/parser/ParseTree$;
   #23 = Utf8               <clinit>
   #24 = Utf8               ()V
   #25 = Utf8               <init>
   #26 = NameAndType        #25:#24       // "<init>":()V
   #27 = Methodref          #2.#26        // org/sireum/parser/ParseTree$."<init>":()V
   #28 = NameAndType        #21:#22       // MODULE$:Lorg/sireum/parser/ParseTree$;
   #29 = Fieldref           #2.#28        // org/sireum/parser/ParseTree$.MODULE$:Lorg/sireum/parser/ParseTree$;
   #30 = Utf8               rewriteBinary
   #31 = Utf8               (Ljava/lang/Object;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/message/Reporter;)Ljava/lang/Object;
   #32 = Utf8               <Builder:Ljava/lang/Object;T1:Ljava/lang/Object;T2:Ljava/lang/Object;>(TBuilder;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps<TBuilder;TT1;TT2;>;Lorg/sireum/IS<Lorg/sireum/Z;TT1;>;Lorg/sireum/message/Reporter;)TT2;
   #33 = Utf8               builder
   #34 = Utf8               bp
   #35 = Utf8               trees
   #36 = Utf8               reporter
   #37 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #38 = MethodType         #37           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #39 = Utf8               $anonfun$rewriteBinary$11
   #40 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #41 = NameAndType        #39:#40       // $anonfun$rewriteBinary$11:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #42 = Methodref          #2.#41        // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$11:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #43 = MethodHandle       6:#42         // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$11:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #44 = Integer            1
   #45 = Utf8               java/lang/invoke/LambdaMetafactory
   #46 = Class              #45           // java/lang/invoke/LambdaMetafactory
   #47 = Utf8               altMetafactory
   #48 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #49 = NameAndType        #47:#48       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #50 = Methodref          #46.#49       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #51 = MethodHandle       6:#50         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #52 = Utf8               apply
   #53 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Lscala/Function1;
   #54 = NameAndType        #52:#53       // apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Lscala/Function1;
   #55 = InvokeDynamic      #0:#54        // #0:apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Lscala/Function1;
   #56 = Utf8               org/sireum/IS
   #57 = Class              #56           // org/sireum/IS
   #58 = Utf8               map
   #59 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
   #60 = NameAndType        #58:#59       // map:(Lscala/Function1;)Lorg/sireum/IS;
   #61 = Methodref          #57.#60       // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
   #62 = Utf8               size
   #63 = Utf8               ()Lorg/sireum/Z;
   #64 = NameAndType        #62:#63       // size:()Lorg/sireum/Z;
   #65 = Methodref          #57.#64       // org/sireum/IS.size:()Lorg/sireum/Z;
   #66 = Utf8               org/sireum/Z$
   #67 = Class              #66           // org/sireum/Z$
   #68 = Utf8               Lorg/sireum/Z$;
   #69 = NameAndType        #21:#68       // MODULE$:Lorg/sireum/Z$;
   #70 = Fieldref           #67.#69       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #71 = Utf8               (I)Lorg/sireum/Z;
   #72 = NameAndType        #52:#71       // apply:(I)Lorg/sireum/Z;
   #73 = Methodref          #67.#72       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #74 = Utf8               equals
   #75 = Utf8               (Ljava/lang/Object;)Z
   #76 = NameAndType        #74:#75       // equals:(Ljava/lang/Object;)Z
   #77 = Methodref          #4.#76        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #78 = Utf8               reduceHighestPrecedence$1
   #79 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/message/Reporter;Ljava/lang/Object;)Lorg/sireum/IS;
   #80 = NameAndType        #78:#79       // reduceHighestPrecedence$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/message/Reporter;Ljava/lang/Object;)Lorg/sireum/IS;
   #81 = Methodref          #2.#80        // org/sireum/parser/ParseTree$.reduceHighestPrecedence$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/message/Reporter;Ljava/lang/Object;)Lorg/sireum/IS;
   #82 = NameAndType        #52:#37       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #83 = Methodref          #57.#82       // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #84 = Utf8               acs
   #85 = Utf8               Lorg/sireum/IS;
   #86 = Utf8               this
   #87 = Utf8               Ljava/lang/Object;
   #88 = Utf8               Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
   #89 = Utf8               Lorg/sireum/message/Reporter;
   #90 = Utf8               org/sireum/message/Reporter
   #91 = Class              #90           // org/sireum/message/Reporter
   #92 = Utf8               org/sireum/Z
   #93 = Class              #92           // org/sireum/Z
   #94 = Utf8               $anonfun$rewriteBinary$1
   #95 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
   #96 = Utf8               ts$1
   #97 = Utf8               bp$1
   #98 = Utf8               builder$1
   #99 = Utf8               r$1
  #100 = Utf8               i
  #101 = Utf8               $plus
  #102 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #103 = NameAndType        #101:#102     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #104 = InterfaceMethodref #93.#103      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #105 = Utf8               org/sireum/B$
  #106 = Class              #105          // org/sireum/B$
  #107 = Utf8               Lorg/sireum/B$;
  #108 = NameAndType        #21:#107      // MODULE$:Lorg/sireum/B$;
  #109 = Fieldref           #106.#108     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #110 = Utf8               shouldParenthesizeOperands
  #111 = NameAndType        #110:#75      // shouldParenthesizeOperands:(Ljava/lang/Object;)Z
  #112 = InterfaceMethodref #17.#111      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.shouldParenthesizeOperands:(Ljava/lang/Object;)Z
  #113 = Utf8               $4B
  #114 = Utf8               (Z)Z
  #115 = NameAndType        #113:#114     // $4B:(Z)Z
  #116 = Methodref          #106.#115     // org/sireum/B$.$4B:(Z)Z
  #117 = Utf8               isBinary
  #118 = NameAndType        #117:#75      // isBinary:(Ljava/lang/Object;)Z
  #119 = InterfaceMethodref #17.#118      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.isBinary:(Ljava/lang/Object;)Z
  #120 = Utf8               parenthesize
  #121 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #122 = NameAndType        #120:#121     // parenthesize:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #123 = InterfaceMethodref #17.#122      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.parenthesize:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #124 = Utf8               scala/runtime/ObjectRef
  #125 = Class              #124          // scala/runtime/ObjectRef
  #126 = Utf8               elem
  #127 = NameAndType        #126:#87      // elem:Ljava/lang/Object;
  #128 = Fieldref           #125.#127     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #129 = Utf8               binary
  #130 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #131 = NameAndType        #129:#130     // binary:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #132 = InterfaceMethodref #17.#131      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.binary:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #133 = Utf8               op
  #134 = Utf8               l
  #135 = Utf8               Lscala/runtime/ObjectRef;
  #136 = Utf8               Lorg/sireum/Z;
  #137 = Utf8               $anonfun$rewriteBinary$2
  #138 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)V
  #139 = Utf8               l$1
  #140 = Utf8               $minus
  #141 = NameAndType        #140:#102     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #142 = InterfaceMethodref #93.#141      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #143 = Utf8               r
  #144 = Utf8               construct$1
  #145 = Utf8               (Lorg/sireum/IS;ZLorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Ljava/lang/Object;
  #146 = Utf8               ts
  #147 = Utf8               rightAssoc
  #148 = Utf8               start
  #149 = Utf8               stop
  #150 = Utf8               create
  #151 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #152 = NameAndType        #150:#151     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #153 = Methodref          #125.#152     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #154 = Utf8               to
  #155 = Utf8               (Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #156 = NameAndType        #154:#155     // to:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #157 = InterfaceMethodref #93.#156      // org/sireum/Z.to:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #158 = Utf8               org/sireum/ZRange
  #159 = Class              #158          // org/sireum/ZRange
  #160 = Utf8               by
  #161 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/ZRange;
  #162 = NameAndType        #160:#161     // by:(Lorg/sireum/Z;)Lorg/sireum/ZRange;
  #163 = Methodref          #159.#162     // org/sireum/ZRange.by:(Lorg/sireum/Z;)Lorg/sireum/ZRange;
  #164 = Utf8               $anonfun$rewriteBinary$1$adapted
  #165 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #166 = NameAndType        #164:#165     // $anonfun$rewriteBinary$1$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #167 = Methodref          #2.#166       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$1$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #168 = MethodHandle       6:#167        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$1$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #169 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #170 = MethodType         #169          //  (Lorg/sireum/Z;)Ljava/lang/Object;
  #171 = Integer            5
  #172 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #173 = NameAndType        #52:#172      // apply:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #174 = InvokeDynamic      #1:#173       // #1:apply:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #175 = Utf8               foreach
  #176 = Utf8               (Lscala/Function1;)V
  #177 = NameAndType        #175:#176     // foreach:(Lscala/Function1;)V
  #178 = Methodref          #159.#177     // org/sireum/ZRange.foreach:(Lscala/Function1;)V
  #179 = Utf8               $anonfun$rewriteBinary$2$adapted
  #180 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #181 = NameAndType        #179:#180     // $anonfun$rewriteBinary$2$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #182 = Methodref          #2.#181       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$2$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #183 = MethodHandle       6:#182        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$2$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #184 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
  #185 = NameAndType        #52:#184      // apply:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
  #186 = InvokeDynamic      #2:#185       // #2:apply:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
  #187 = Utf8               Z
  #188 = Utf8               $anonfun$rewriteBinary$3
  #189 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #190 = Utf8               max$1
  #191 = Utf8               e
  #192 = Utf8               precedence
  #193 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #194 = NameAndType        #192:#193     // precedence:(Ljava/lang/Object;)Lorg/sireum/Option;
  #195 = InterfaceMethodref #17.#194      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.precedence:(Ljava/lang/Object;)Lorg/sireum/Option;
  #196 = Utf8               org/sireum/Some
  #197 = Class              #196          // org/sireum/Some
  #198 = Utf8               org/sireum/Some$
  #199 = Class              #198          // org/sireum/Some$
  #200 = Utf8               Lorg/sireum/Some$;
  #201 = NameAndType        #21:#200      // MODULE$:Lorg/sireum/Some$;
  #202 = Fieldref           #199.#201     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #203 = Utf8               unapply
  #204 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #205 = NameAndType        #203:#204     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #206 = Methodref          #199.#205     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #207 = Utf8               scala/Some
  #208 = Class              #207          // scala/Some
  #209 = Utf8               isEmpty
  #210 = Utf8               ()Z
  #211 = NameAndType        #209:#210     // isEmpty:()Z
  #212 = Methodref          #208.#211     // scala/Some.isEmpty:()Z
  #213 = Utf8               get
  #214 = Utf8               ()Ljava/lang/Object;
  #215 = NameAndType        #213:#214     // get:()Ljava/lang/Object;
  #216 = Methodref          #208.#215     // scala/Some.get:()Ljava/lang/Object;
  #217 = Utf8               isHigherPrecedence
  #218 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #219 = NameAndType        #217:#218     // isHigherPrecedence:(Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #220 = InterfaceMethodref #17.#219      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.isHigherPrecedence:(Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #221 = Utf8               scala/runtime/BoxedUnit
  #222 = Class              #221          // scala/runtime/BoxedUnit
  #223 = Utf8               UNIT
  #224 = Utf8               Lscala/runtime/BoxedUnit;
  #225 = NameAndType        #223:#224     // UNIT:Lscala/runtime/BoxedUnit;
  #226 = Fieldref           #222.#225     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #227 = Utf8               n
  #228 = Utf8               org/sireum/Option
  #229 = Class              #228          // org/sireum/Option
  #230 = Utf8               maxPrecedence$1
  #231 = Utf8               (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;)Lorg/sireum/Z;
  #232 = Utf8               lowestPrecedence
  #233 = NameAndType        #232:#63      // lowestPrecedence:()Lorg/sireum/Z;
  #234 = InterfaceMethodref #17.#233      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.lowestPrecedence:()Lorg/sireum/Z;
  #235 = Utf8               $anonfun$rewriteBinary$3$adapted
  #236 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #237 = NameAndType        #235:#236     // $anonfun$rewriteBinary$3$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #238 = Methodref          #2.#237       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$3$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #239 = MethodHandle       6:#238        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$3$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #240 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #241 = NameAndType        #52:#240      // apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #242 = InvokeDynamic      #3:#241       // #3:apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #243 = Methodref          #57.#177      // org/sireum/IS.foreach:(Lscala/Function1;)V
  #244 = Utf8               max
  #245 = Utf8               $anonfun$rewriteBinary$4
  #246 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Z
  #247 = Utf8               acs$1
  #248 = Utf8               maxOpt$1
  #249 = NameAndType        #52:#114      // apply:(Z)Z
  #250 = Methodref          #106.#249     // org/sireum/B$.apply:(Z)Z
  #251 = Utf8               Lorg/sireum/Option;
  #252 = Utf8               $anonfun$rewriteBinary$5
  #253 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;)Lscala/runtime/Nothing$;
  #254 = Utf8               nonLocalReturnKey1$1
  #255 = Utf8               scala/runtime/NonLocalReturnControl
  #256 = Class              #255          // scala/runtime/NonLocalReturnControl
  #257 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #258 = NameAndType        #25:#257      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #259 = Methodref          #256.#258     // scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #260 = Utf8               findMaxPrecedenceIndex$1
  #261 = Utf8               (Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/Option;)Lorg/sireum/Z;
  #262 = Utf8               from
  #263 = Methodref          #4.#26        // java/lang/Object."<init>":()V
  #264 = Utf8               until
  #265 = NameAndType        #264:#155     // until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #266 = InterfaceMethodref #93.#265      // org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #267 = Utf8               $anonfun$rewriteBinary$4$adapted
  #268 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Ljava/lang/Object;
  #269 = NameAndType        #267:#268     // $anonfun$rewriteBinary$4$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Ljava/lang/Object;
  #270 = Methodref          #2.#269       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$4$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Ljava/lang/Object;
  #271 = MethodHandle       6:#270        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$4$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Ljava/lang/Object;
  #272 = Utf8               (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;)Lscala/Function1;
  #273 = NameAndType        #52:#272      // apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;)Lscala/Function1;
  #274 = InvokeDynamic      #4:#273       // #4:apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;)Lscala/Function1;
  #275 = Utf8               withFilter
  #276 = Utf8               (Lscala/Function1;)Lorg/sireum/ZRange;
  #277 = NameAndType        #275:#276     // withFilter:(Lscala/Function1;)Lorg/sireum/ZRange;
  #278 = Methodref          #159.#277     // org/sireum/ZRange.withFilter:(Lscala/Function1;)Lorg/sireum/ZRange;
  #279 = NameAndType        #252:#253     // $anonfun$rewriteBinary$5:(Ljava/lang/Object;Lorg/sireum/Z;)Lscala/runtime/Nothing$;
  #280 = Methodref          #2.#279       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$5:(Ljava/lang/Object;Lorg/sireum/Z;)Lscala/runtime/Nothing$;
  #281 = MethodHandle       6:#280        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$5:(Ljava/lang/Object;Lorg/sireum/Z;)Lscala/runtime/Nothing$;
  #282 = Utf8               (Lorg/sireum/Z;)Lscala/runtime/Nothing$;
  #283 = MethodType         #282          //  (Lorg/sireum/Z;)Lscala/runtime/Nothing$;
  #284 = Utf8               (Ljava/lang/Object;)Lscala/Function1;
  #285 = NameAndType        #52:#284      // apply:(Ljava/lang/Object;)Lscala/Function1;
  #286 = InvokeDynamic      #5:#285       // #5:apply:(Ljava/lang/Object;)Lscala/Function1;
  #287 = Utf8               key
  #288 = NameAndType        #287:#214     // key:()Ljava/lang/Object;
  #289 = Methodref          #256.#288     // scala/runtime/NonLocalReturnControl.key:()Ljava/lang/Object;
  #290 = Utf8               value
  #291 = NameAndType        #290:#214     // value:()Ljava/lang/Object;
  #292 = Methodref          #256.#291     // scala/runtime/NonLocalReturnControl.value:()Ljava/lang/Object;
  #293 = Utf8               ex
  #294 = Utf8               Lscala/runtime/NonLocalReturnControl;
  #295 = Utf8               $anonfun$rewriteBinary$6
  #296 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #297 = Utf8               newAcs$1
  #298 = Utf8               j
  #299 = Utf8               $colon$plus
  #300 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #301 = NameAndType        #299:#300     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #302 = Methodref          #57.#301      // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #303 = Utf8               $anonfun$rewriteBinary$7
  #304 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Z
  #305 = Utf8               i$1
  #306 = Utf8               $less
  #307 = Utf8               (Lorg/sireum/Z;)Z
  #308 = NameAndType        #306:#307     // $less:(Lorg/sireum/Z;)Z
  #309 = InterfaceMethodref #93.#308      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #310 = Utf8               $anonfun$rewriteBinary$8
  #311 = Utf8               $anonfun$rewriteBinary$9
  #312 = Utf8               $anonfun$rewriteBinary$10
  #313 = Utf8               reporter$1
  #314 = NameAndType        #230:#231     // maxPrecedence$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;)Lorg/sireum/Z;
  #315 = Methodref          #2.#314       // org/sireum/parser/ParseTree$.maxPrecedence$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;)Lorg/sireum/Z;
  #316 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #317 = NameAndType        #52:#316      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #318 = Methodref          #199.#317     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #319 = Utf8               org/sireum/package$
  #320 = Class              #319          // org/sireum/package$
  #321 = Utf8               Lorg/sireum/package$;
  #322 = NameAndType        #21:#321      // MODULE$:Lorg/sireum/package$;
  #323 = Fieldref           #320.#322     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #324 = Utf8               ISZ
  #325 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #326 = NameAndType        #324:#325     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #327 = Methodref          #320.#326     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #328 = Utf8               scala/collection/immutable/Nil$
  #329 = Class              #328          // scala/collection/immutable/Nil$
  #330 = Utf8               Lscala/collection/immutable/Nil$;
  #331 = NameAndType        #21:#330      // MODULE$:Lscala/collection/immutable/Nil$;
  #332 = Fieldref           #329.#331     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #333 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #334 = NameAndType        #52:#333      // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #335 = Methodref          #12.#334      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #336 = NameAndType        #260:#261     // findMaxPrecedenceIndex$1:(Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/Option;)Lorg/sireum/Z;
  #337 = Methodref          #2.#336       // org/sireum/parser/ParseTree$.findMaxPrecedenceIndex$1:(Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/Option;)Lorg/sireum/Z;
  #338 = Utf8               $anonfun$rewriteBinary$6$adapted
  #339 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #340 = NameAndType        #338:#339     // $anonfun$rewriteBinary$6$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #341 = Methodref          #2.#340       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$6$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #342 = MethodHandle       6:#341        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$6$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #343 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
  #344 = NameAndType        #52:#343      // apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
  #345 = InvokeDynamic      #6:#344       // #6:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
  #346 = Utf8               F
  #347 = NameAndType        #346:#210     // F:()Z
  #348 = Methodref          #320.#347     // org/sireum/package$.F:()Z
  #349 = Utf8               unary_$bang$extension
  #350 = NameAndType        #349:#114     // unary_$bang$extension:(Z)Z
  #351 = Methodref          #106.#350     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #352 = MethodType         #214          //  ()Ljava/lang/Object;
  #353 = Utf8               $anonfun$rewriteBinary$7$adapted
  #354 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Ljava/lang/Object;
  #355 = NameAndType        #353:#354     // $anonfun$rewriteBinary$7$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Ljava/lang/Object;
  #356 = Methodref          #2.#355       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$7$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Ljava/lang/Object;
  #357 = MethodHandle       6:#356        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$7$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Ljava/lang/Object;
  #358 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function0;
  #359 = NameAndType        #52:#358      // apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function0;
  #360 = InvokeDynamic      #7:#359       // #7:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function0;
  #361 = Utf8               $amp$amp$extension
  #362 = Utf8               (ZLscala/Function0;)Z
  #363 = NameAndType        #361:#362     // $amp$amp$extension:(ZLscala/Function0;)Z
  #364 = Methodref          #106.#363     // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #365 = Utf8               isRightAssoc
  #366 = NameAndType        #365:#75      // isRightAssoc:(Ljava/lang/Object;)Z
  #367 = InterfaceMethodref #17.#366      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.isRightAssoc:(Ljava/lang/Object;)Z
  #368 = Utf8               posOpt
  #369 = NameAndType        #368:#193     // posOpt:(Ljava/lang/Object;)Lorg/sireum/Option;
  #370 = InterfaceMethodref #17.#369      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.posOpt:(Ljava/lang/Object;)Lorg/sireum/Option;
  #371 = Utf8               messageKind
  #372 = Utf8               ()Ljava/lang/String;
  #373 = NameAndType        #371:#372     // messageKind:()Ljava/lang/String;
  #374 = InterfaceMethodref #17.#373      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.messageKind:()Ljava/lang/String;
  #375 = Utf8               org/sireum/String$
  #376 = Class              #375          // org/sireum/String$
  #377 = Utf8               Lorg/sireum/String$;
  #378 = NameAndType        #21:#377      // MODULE$:Lorg/sireum/String$;
  #379 = Fieldref           #376.#378     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #380 = Utf8               java/lang/StringBuilder
  #381 = Class              #380          // java/lang/StringBuilder
  #382 = Integer            75
  #383 = Utf8               (I)V
  #384 = NameAndType        #25:#383      // "<init>":(I)V
  #385 = Methodref          #381.#384     // java/lang/StringBuilder."<init>":(I)V
  #386 = Utf8               Could not mix right/left associative operators with the same precedence:
  #387 = String             #386          // Could not mix right/left associative operators with the same precedence:
  #388 = Utf8               append
  #389 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #390 = NameAndType        #388:#389     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #391 = Methodref          #381.#390     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #392 = Utf8               org/sireum/String
  #393 = Class              #392          // org/sireum/String
  #394 = Utf8               toString
  #395 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #396 = NameAndType        #394:#395     // toString:(Ljava/lang/Object;)Ljava/lang/String;
  #397 = InterfaceMethodref #17.#396      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.toString:(Ljava/lang/Object;)Ljava/lang/String;
  #398 = Utf8               (Ljava/lang/String;)V
  #399 = NameAndType        #25:#398      // "<init>":(Ljava/lang/String;)V
  #400 = Methodref          #393.#399     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #401 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #402 = NameAndType        #388:#401     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #403 = Methodref          #381.#402     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #404 = Utf8               ,
  #405 = String             #404          // ,
  #406 = NameAndType        #394:#372     // toString:()Ljava/lang/String;
  #407 = Methodref          #381.#406     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #408 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #409 = NameAndType        #52:#408      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #410 = Methodref          #376.#409     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #411 = Utf8               error
  #412 = Utf8               (Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #413 = NameAndType        #411:#412     // error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #414 = InterfaceMethodref #91.#413      // org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #415 = Utf8               T
  #416 = NameAndType        #415:#210     // T:()Z
  #417 = Methodref          #320.#416     // org/sireum/package$.T:()Z
  #418 = Utf8               $greater$eq
  #419 = NameAndType        #418:#307     // $greater$eq:(Lorg/sireum/Z;)Z
  #420 = InterfaceMethodref #93.#419      // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
  #421 = NameAndType        #144:#145     // construct$1:(Lorg/sireum/IS;ZLorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Ljava/lang/Object;
  #422 = Methodref          #2.#421       // org/sireum/parser/ParseTree$.construct$1:(Lorg/sireum/IS;ZLorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Ljava/lang/Object;
  #423 = Utf8               $anonfun$rewriteBinary$8$adapted
  #424 = NameAndType        #423:#339     // $anonfun$rewriteBinary$8$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #425 = Methodref          #2.#424       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$8$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #426 = MethodHandle       6:#425        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$8$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #427 = InvokeDynamic      #8:#344       // #8:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
  #428 = Utf8               $anonfun$rewriteBinary$9$adapted
  #429 = NameAndType        #428:#339     // $anonfun$rewriteBinary$9$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #430 = Methodref          #2.#429       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$9$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #431 = MethodHandle       6:#430        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$9$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #432 = InvokeDynamic      #9:#344       // #9:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
  #433 = Utf8               $anonfun$rewriteBinary$10$adapted
  #434 = NameAndType        #433:#339     // $anonfun$rewriteBinary$10$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #435 = Methodref          #2.#434       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$10$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #436 = MethodHandle       6:#435        // REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$10$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  #437 = InvokeDynamic      #10:#344      // #10:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
  #438 = Utf8               startOp
  #439 = Utf8               found
  #440 = Utf8               maxOpt
  #441 = Utf8               newAcs
  #442 = Utf8               t
  #443 = Utf8               transform
  #444 = NameAndType        #443:#121     // transform:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #445 = InterfaceMethodref #17.#444      // org/sireum/parser/ParseTree$BinaryPrecedenceOps.transform:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #446 = NameAndType        #94:#95       // $anonfun$rewriteBinary$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
  #447 = Methodref          #2.#446       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
  #448 = NameAndType        #137:#138     // $anonfun$rewriteBinary$2:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)V
  #449 = Methodref          #2.#448       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$2:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)V
  #450 = NameAndType        #188:#189     // $anonfun$rewriteBinary$3:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #451 = Methodref          #2.#450       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$3:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #452 = Utf8               org/sireum/B
  #453 = Class              #452          // org/sireum/B
  #454 = NameAndType        #245:#246     // $anonfun$rewriteBinary$4:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Z
  #455 = Methodref          #2.#454       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$4:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Z
  #456 = Utf8               (Z)V
  #457 = NameAndType        #25:#456      // "<init>":(Z)V
  #458 = Methodref          #453.#457     // org/sireum/B."<init>":(Z)V
  #459 = NameAndType        #295:#296     // $anonfun$rewriteBinary$6:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #460 = Methodref          #2.#459       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$6:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #461 = NameAndType        #303:#304     // $anonfun$rewriteBinary$7:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Z
  #462 = Methodref          #2.#461       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$7:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Z
  #463 = NameAndType        #310:#296     // $anonfun$rewriteBinary$8:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #464 = Methodref          #2.#463       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$8:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #465 = NameAndType        #311:#296     // $anonfun$rewriteBinary$9:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #466 = Methodref          #2.#465       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$9:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #467 = NameAndType        #312:#296     // $anonfun$rewriteBinary$10:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #468 = Methodref          #2.#467       // org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$10:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
  #469 = Utf8               $deserializeLambda$
  #470 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #471 = Utf8               scala/runtime/LambdaDeserialize
  #472 = Class              #471          // scala/runtime/LambdaDeserialize
  #473 = Utf8               bootstrap
  #474 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #475 = NameAndType        #473:#474     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #476 = Methodref          #472.#475     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #477 = MethodHandle       6:#476        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #478 = Utf8               lambdaDeserialize
  #479 = NameAndType        #478:#470     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #480 = InvokeDynamic      #11:#479      // #11:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #481 = Utf8               Code
  #482 = Utf8               LineNumberTable
  #483 = Utf8               StackMapTable
  #484 = Utf8               LocalVariableTable
  #485 = Utf8               Signature
  #486 = Utf8               MethodParameters
  #487 = Utf8               InnerClasses
  #488 = Utf8               SourceFile
  #489 = Utf8               BootstrapMethods
  #490 = Utf8               ScalaInlineInfo
  #491 = Utf8               Scala
{
  public static final org.sireum.parser.ParseTree$ MODULE$;
    descriptor: Lorg/sireum/parser/ParseTree$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/parser/ParseTree$
         3: dup
         4: invokespecial #27                 // Method "<init>":()V
         7: putstatic     #29                 // Field MODULE$:Lorg/sireum/parser/ParseTree$;
        10: return
      LineNumberTable:
        line 45: 0

  public <Builder extends java.lang.Object, T1 extends java.lang.Object, T2 extends java.lang.Object> T2 rewriteBinary(Builder, org.sireum.parser.ParseTree$BinaryPrecedenceOps<Builder, T1, T2>, org.sireum.IS<org.sireum.Z, T1>, org.sireum.message.Reporter);
    descriptor: (Ljava/lang/Object;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/message/Reporter;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=5
         0: aload_3
         1: aload_2
         2: aload_1
         3: invokedynamic #55,  0             // InvokeDynamic #0:apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Lscala/Function1;
         8: invokevirtual #61                 // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        11: astore        5
        13: aload         5
        15: invokevirtual #65                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
        18: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        21: iconst_1
        22: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        25: astore        6
        27: dup
        28: ifnonnull     40
        31: pop
        32: aload         6
        34: ifnull        62
        37: goto          48
        40: aload         6
        42: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        45: ifne          62
        48: aload         5
        50: aload_2
        51: aload         4
        53: aload_1
        54: invokestatic  #81                 // Method reduceHighestPrecedence$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/message/Reporter;Ljava/lang/Object;)Lorg/sireum/IS;
        57: astore        5
        59: goto          13
        62: aload         5
        64: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        67: iconst_0
        68: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        71: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        74: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class org/sireum/IS ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class org/sireum/parser/ParseTree$, class java/lang/Object, class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class org/sireum/IS, class org/sireum/message/Reporter, class org/sireum/IS, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 13 /* same */
      LineNumberTable:
        line 236: 0
        line 237: 13
        line 238: 48
        line 240: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      62     5   acs   Lorg/sireum/IS;
            0      75     0  this   Lorg/sireum/parser/ParseTree$;
            0      75     1 builder   Ljava/lang/Object;
            0      75     2    bp   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0      75     3 trees   Lorg/sireum/IS;
            0      75     4 reporter   Lorg/sireum/message/Reporter;
    Signature: #32                          // <Builder:Ljava/lang/Object;T1:Ljava/lang/Object;T2:Ljava/lang/Object;>(TBuilder;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps<TBuilder;TT1;TT2;>;Lorg/sireum/IS<Lorg/sireum/Z;TT1;>;Lorg/sireum/message/Reporter;)TT2;
    MethodParameters:
      Name                           Flags
      builder                        final
      bp                             final
      trees                          final
      reporter                       final

  public static final void $anonfun$rewriteBinary$1(org.sireum.IS, org.sireum.parser.ParseTree$BinaryPrecedenceOps, java.lang.Object, scala.runtime.ObjectRef, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=7, args_size=5
         0: aload_0
         1: aload         4
         3: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         6: iconst_1
         7: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        10: invokeinterface #104,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        15: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        18: astore        5
        20: aload_0
        21: aload         4
        23: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        26: astore        6
        28: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        31: aload_1
        32: aload         5
        34: invokeinterface #112,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.shouldParenthesizeOperands:(Ljava/lang/Object;)Z
        39: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
        42: ifeq          114
        45: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        48: aload_1
        49: aload         6
        51: invokeinterface #119,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.isBinary:(Ljava/lang/Object;)Z
        56: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
        59: ifeq          76
        62: aload_1
        63: aload_2
        64: aload         6
        66: invokeinterface #123,  3          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.parenthesize:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        71: astore        6
        73: goto          76
        76: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        79: aload_1
        80: aload         5
        82: invokeinterface #112,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.shouldParenthesizeOperands:(Ljava/lang/Object;)Z
        87: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
        90: ifeq          111
        93: aload_3
        94: aload_1
        95: aload_2
        96: aload_3
        97: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       100: invokeinterface #123,  3          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.parenthesize:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       105: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       108: goto          111
       111: goto          114
       114: aload_3
       115: aload_1
       116: aload_2
       117: aload         6
       119: aload         5
       121: aload_3
       122: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       125: invokeinterface #132,  5          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.binary:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       130: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       133: return
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 76
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 34 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 139: 0
        line 140: 20
        line 141: 28
        line 142: 45
        line 143: 62
        line 145: 76
        line 146: 93
        line 145: 111
        line 149: 114
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20     113     5    op   Ljava/lang/Object;
           28     105     6     l   Ljava/lang/Object;
            0     134     0  ts$1   Lorg/sireum/IS;
            0     134     1  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0     134     2 builder$1   Ljava/lang/Object;
            0     134     3   r$1   Lscala/runtime/ObjectRef;
            0     134     4     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      ts$1                           final
      bp$1                           final
      builder$1                      final
      r$1                            final
      i                              final

  public static final void $anonfun$rewriteBinary$2(org.sireum.IS, org.sireum.parser.ParseTree$BinaryPrecedenceOps, scala.runtime.ObjectRef, java.lang.Object, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=7, args_size=5
         0: aload_0
         1: aload         4
         3: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         6: iconst_1
         7: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        10: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        15: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        18: astore        5
        20: aload_0
        21: aload         4
        23: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        26: astore        6
        28: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        31: aload_1
        32: aload         5
        34: invokeinterface #112,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.shouldParenthesizeOperands:(Ljava/lang/Object;)Z
        39: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
        42: ifeq          116
        45: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        48: aload_1
        49: aload_2
        50: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        53: invokeinterface #119,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.isBinary:(Ljava/lang/Object;)Z
        58: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
        61: ifeq          82
        64: aload_2
        65: aload_1
        66: aload_3
        67: aload_2
        68: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        71: invokeinterface #123,  3          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.parenthesize:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        76: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        79: goto          82
        82: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        85: aload_1
        86: aload         5
        88: invokeinterface #112,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.shouldParenthesizeOperands:(Ljava/lang/Object;)Z
        93: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
        96: ifeq          113
        99: aload_1
       100: aload_3
       101: aload         6
       103: invokeinterface #123,  3          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.parenthesize:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       108: astore        6
       110: goto          113
       113: goto          116
       116: aload_2
       117: aload_1
       118: aload_3
       119: aload_2
       120: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       123: aload         5
       125: aload         6
       127: invokeinterface #132,  5          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.binary:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       132: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       135: return
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 82
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 30 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 155: 0
        line 156: 20
        line 157: 28
        line 158: 45
        line 159: 64
        line 161: 82
        line 162: 99
        line 161: 113
        line 165: 116
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20     115     5    op   Ljava/lang/Object;
           28     107     6     r   Ljava/lang/Object;
            0     136     0  ts$1   Lorg/sireum/IS;
            0     136     1  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0     136     2   l$1   Lscala/runtime/ObjectRef;
            0     136     3 builder$1   Ljava/lang/Object;
            0     136     4     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      ts$1                           final
      bp$1                           final
      l$1                            final
      builder$1                      final
      i                              final

  private static final java.lang.Object construct$1(org.sireum.IS, boolean, org.sireum.Z, org.sireum.Z, org.sireum.parser.ParseTree$BinaryPrecedenceOps, java.lang.Object);
    descriptor: (Lorg/sireum/IS;ZLorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=5, locals=8, args_size=6
         0: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          71
        10: aload_0
        11: aload_3
        12: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        15: invokestatic  #153                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        18: astore        6
        20: aload_3
        21: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        24: iconst_2
        25: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        28: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        33: aload_2
        34: invokeinterface #157,  2          // InterfaceMethod org/sireum/Z.to:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
        39: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        42: bipush        -2
        44: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        47: invokevirtual #163                // Method org/sireum/ZRange.by:(Lorg/sireum/Z;)Lorg/sireum/ZRange;
        50: aload_0
        51: aload         4
        53: aload         5
        55: aload         6
        57: invokedynamic #174,  0            // InvokeDynamic #1:apply:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
        62: invokevirtual #178                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
        65: aload         6
        67: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        70: areturn
        71: aload_0
        72: aload_2
        73: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        76: invokestatic  #153                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        79: astore        7
        81: aload_2
        82: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        85: iconst_2
        86: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        89: invokeinterface #104,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        94: aload_3
        95: invokeinterface #157,  2          // InterfaceMethod org/sireum/Z.to:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
       100: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       103: iconst_2
       104: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       107: invokevirtual #163                // Method org/sireum/ZRange.by:(Lorg/sireum/Z;)Lorg/sireum/ZRange;
       110: aload_0
       111: aload         4
       113: aload         7
       115: aload         5
       117: invokedynamic #186,  0            // InvokeDynamic #2:apply:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
       122: invokevirtual #178                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
       125: aload         7
       127: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       130: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 71
      LineNumberTable:
        line 136: 0
        line 137: 10
        line 138: 20
        line 151: 65
        line 153: 71
        line 154: 81
        line 167: 125
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      51     6     r   Lscala/runtime/ObjectRef;
           81      50     7     l   Lscala/runtime/ObjectRef;
            0     131     0    ts   Lorg/sireum/IS;
            0     131     1 rightAssoc   Z
            0     131     2 start   Lorg/sireum/Z;
            0     131     3  stop   Lorg/sireum/Z;
            0     131     4  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0     131     5 builder$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      ts                             final
      rightAssoc                     final
      start                          final
      stop                           final
      bp$1                           final
      builder$1                      final

  public static final void $anonfun$rewriteBinary$3(org.sireum.parser.ParseTree$BinaryPrecedenceOps, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=8, args_size=3
         0: aload_0
         1: aload_2
         2: invokeinterface #195,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.precedence:(Ljava/lang/Object;)Lorg/sireum/Option;
         7: astore        4
         9: aload         4
        11: instanceof    #197                // class org/sireum/Some
        14: ifeq          95
        17: aload         4
        19: checkcast     #197                // class org/sireum/Some
        22: astore        5
        24: getstatic     #202                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        27: aload         5
        29: invokevirtual #206                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        32: astore        6
        34: aload         6
        36: invokevirtual #212                // Method scala/Some.isEmpty:()Z
        39: ifne          92
        42: aload         6
        44: invokevirtual #216                // Method scala/Some.get:()Ljava/lang/Object;
        47: checkcast     #93                 // class org/sireum/Z
        50: astore        7
        52: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        55: aload_0
        56: aload         7
        58: aload_1
        59: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        62: checkcast     #93                 // class org/sireum/Z
        65: invokeinterface #220,  3          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.isHigherPrecedence:(Lorg/sireum/Z;Lorg/sireum/Z;)Z
        70: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
        73: ifeq          89
        76: aload_1
        77: aload         7
        79: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        82: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        85: astore_3
        86: goto          105
        89: goto          98
        92: goto          98
        95: goto          98
        98: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       101: astore_3
       102: goto          105
       105: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 89
          locals = [ class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class scala/runtime/ObjectRef, class java/lang/Object, top, class org/sireum/Option, class org/sireum/Some, class scala/Some, class org/sireum/Z ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class scala/runtime/ObjectRef, class java/lang/Object, class scala/runtime/BoxedUnit, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 174: 0
        line 175: 9
        line 174: 42
        line 175: 52
        line 176: 98
        line 174: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52      40     7     n   Lorg/sireum/Z;
            0     106     0  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0     106     1 max$1   Lscala/runtime/ObjectRef;
            0     106     2     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      bp$1                           final
      max$1                          final
      e                              final

  private static final org.sireum.Z maxPrecedence$1(org.sireum.IS, org.sireum.parser.ParseTree$BinaryPrecedenceOps);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;)Lorg/sireum/Z;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: invokeinterface #234,  1          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.lowestPrecedence:()Lorg/sireum/Z;
         6: invokestatic  #153                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         9: astore_2
        10: aload_0
        11: aload_1
        12: aload_2
        13: invokedynamic #242,  0            // InvokeDynamic #3:apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
        18: invokevirtual #243                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        21: aload_2
        22: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        25: checkcast     #93                 // class org/sireum/Z
        28: areturn
      LineNumberTable:
        line 172: 0
        line 173: 10
        line 179: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      19     2   max   Lscala/runtime/ObjectRef;
            0      29     0    ts   Lorg/sireum/IS;
            0      29     1  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
    MethodParameters:
      Name                           Flags
      ts                             final
      bp$1                           final

  public static final boolean $anonfun$rewriteBinary$4(org.sireum.parser.ParseTree$BinaryPrecedenceOps, org.sireum.IS, org.sireum.Option, org.sireum.Z);
    descriptor: (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=4
         0: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: aload_1
         5: aload_3
         6: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         9: invokeinterface #195,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.precedence:(Ljava/lang/Object;)Lorg/sireum/Option;
        14: aload_2
        15: astore        4
        17: dup
        18: ifnonnull     30
        21: pop
        22: aload         4
        24: ifnull        38
        27: goto          42
        30: aload         4
        32: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        35: ifeq          42
        38: iconst_1
        39: goto          43
        42: iconst_0
        43: invokevirtual #250                // Method org/sireum/B$.apply:(Z)Z
        46: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class org/sireum/IS, class org/sireum/Option, class org/sireum/Z, class org/sireum/Option ]
          stack = [ class org/sireum/B$, class org/sireum/Option ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class org/sireum/IS, class org/sireum/Option, class org/sireum/Z, class org/sireum/Option ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 187: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0      47     1 acs$1   Lorg/sireum/IS;
            0      47     2 maxOpt$1   Lorg/sireum/Option;
            0      47     3     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      bp$1                           final
      acs$1                          final
      maxOpt$1                       final
      i                              final

  public static final scala.runtime.Nothing$ $anonfun$rewriteBinary$5(java.lang.Object, org.sireum.Z);
    descriptor: (Ljava/lang/Object;Lorg/sireum/Z;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #256                // class scala/runtime/NonLocalReturnControl
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #259                // Method scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: athrow
      LineNumberTable:
        line 188: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      10     1     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      nonLocalReturnKey1$1           final
      i                              final

  private static final org.sireum.Z findMaxPrecedenceIndex$1(org.sireum.Z, org.sireum.IS, org.sireum.parser.ParseTree$BinaryPrecedenceOps, org.sireum.Option);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/Option;)Lorg/sireum/Z;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=6, args_size=4
         0: new           #4                  // class java/lang/Object
         3: dup
         4: invokespecial #263                // Method java/lang/Object."<init>":()V
         7: astore        4
         9: aload_0
        10: aload_1
        11: invokevirtual #65                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
        14: invokeinterface #266,  2          // InterfaceMethod org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
        19: aload_2
        20: aload_1
        21: aload_3
        22: invokedynamic #274,  0            // InvokeDynamic #4:apply:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;)Lscala/Function1;
        27: invokevirtual #278                // Method org/sireum/ZRange.withFilter:(Lscala/Function1;)Lorg/sireum/ZRange;
        30: aload         4
        32: invokedynamic #286,  0            // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function1;
        37: invokevirtual #178                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
        40: aload_1
        41: invokevirtual #65                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
        44: areturn
        45: astore        5
        47: aload         5
        49: invokevirtual #289                // Method scala/runtime/NonLocalReturnControl.key:()Ljava/lang/Object;
        52: aload         4
        54: if_acmpne     68
        57: aload         5
        59: invokevirtual #292                // Method scala/runtime/NonLocalReturnControl.value:()Ljava/lang/Object;
        62: checkcast     #93                 // class org/sireum/Z
        65: goto          71
        68: aload         5
        70: athrow
        71: goto          74
        74: areturn
      Exception table:
         from    to  target type
             9    45    45   Class scala/runtime/NonLocalReturnControl
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 45
          locals = [ class org/sireum/Z, class org/sireum/IS, class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class org/sireum/Option, class java/lang/Object ]
          stack = [ class scala/runtime/NonLocalReturnControl ]
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class scala/runtime/NonLocalReturnControl ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 186: 0
        line 187: 9
        line 190: 40
        line 186: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           45      26     5    ex   Lscala/runtime/NonLocalReturnControl;
            0      75     0  from   Lorg/sireum/Z;
            0      75     1 acs$1   Lorg/sireum/IS;
            0      75     2  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0      75     3 maxOpt$1   Lorg/sireum/Option;
    MethodParameters:
      Name                           Flags
      from                           final
      acs$1                          final
      bp$1                           final
      maxOpt$1                       final

  public static final void $anonfun$rewriteBinary$6(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_0
         2: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #57                 // class org/sireum/IS
         8: aload_1
         9: aload_2
        10: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: invokevirtual #302                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        16: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: return
      LineNumberTable:
        line 196: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      20     1 acs$1   Lorg/sireum/IS;
            0      20     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  public static final boolean $anonfun$rewriteBinary$7(scala.runtime.ObjectRef, org.sireum.IS);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #93                 // class org/sireum/Z
         7: aload_1
         8: invokevirtual #65                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
        11: invokeinterface #309,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        16: ireturn
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0   i$1   Lscala/runtime/ObjectRef;
            0      17     1 acs$1   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      i$1                            final
      acs$1                          final

  public static final void $anonfun$rewriteBinary$8(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_0
         2: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #57                 // class org/sireum/IS
         8: aload_1
         9: aload_2
        10: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: invokevirtual #302                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        16: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: return
      LineNumberTable:
        line 218: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      20     1 acs$1   Lorg/sireum/IS;
            0      20     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  public static final void $anonfun$rewriteBinary$9(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_0
         2: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #57                 // class org/sireum/IS
         8: aload_1
         9: aload_2
        10: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: invokevirtual #302                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        16: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: return
      LineNumberTable:
        line 225: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      20     1 acs$1   Lorg/sireum/IS;
            0      20     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  public static final void $anonfun$rewriteBinary$10(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_0
         2: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #57                 // class org/sireum/IS
         8: aload_1
         9: aload_2
        10: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: invokevirtual #302                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        16: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: return
      LineNumberTable:
        line 229: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      20     1 acs$1   Lorg/sireum/IS;
            0      20     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  private static final org.sireum.IS reduceHighestPrecedence$1(org.sireum.IS, org.sireum.parser.ParseTree$BinaryPrecedenceOps, org.sireum.message.Reporter, java.lang.Object);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/message/Reporter;Ljava/lang/Object;)Lorg/sireum/IS;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=9, locals=13, args_size=4
         0: aload_0
         1: aload_1
         2: invokestatic  #315                // Method maxPrecedence$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;)Lorg/sireum/Z;
         5: astore        4
         7: getstatic     #202                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        10: aload         4
        12: invokevirtual #318                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        15: astore        5
        17: getstatic     #323                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        20: invokevirtual #327                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        23: getstatic     #332                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        26: invokevirtual #335                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        29: invokestatic  #153                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        32: astore        6
        34: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        37: iconst_1
        38: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        41: aload_0
        42: aload_1
        43: aload         5
        45: invokestatic  #337                // Method findMaxPrecedenceIndex$1:(Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/Option;)Lorg/sireum/Z;
        48: astore        7
        50: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        53: iconst_0
        54: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        57: aload         7
        59: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        62: iconst_2
        63: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        66: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        71: invokeinterface #157,  2          // InterfaceMethod org/sireum/Z.to:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
        76: aload         6
        78: aload_0
        79: invokedynamic #345,  0            // InvokeDynamic #6:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
        84: invokevirtual #178                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
        87: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        90: aload         7
        92: aload_0
        93: invokevirtual #65                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
        96: invokeinterface #309,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       101: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
       104: ifeq          636
       107: aload_0
       108: aload         7
       110: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       113: astore        8
       115: aload         7
       117: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       120: iconst_2
       121: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       124: invokeinterface #104,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       129: invokestatic  #153                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       132: astore        9
       134: getstatic     #323                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       137: invokevirtual #348                // Method org/sireum/package$.F:()Z
       140: istore        10
       142: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       145: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       148: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       151: iload         10
       153: invokevirtual #351                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
       156: aload         9
       158: aload_0
       159: invokedynamic #360,  0            // InvokeDynamic #7:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function0;
       164: invokevirtual #364                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       167: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
       170: ifeq          374
       173: aload_0
       174: aload         9
       176: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       179: checkcast     #93                 // class org/sireum/Z
       182: invokevirtual #83                 // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       185: astore        11
       187: aload_1
       188: aload         11
       190: invokeinterface #195,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.precedence:(Ljava/lang/Object;)Lorg/sireum/Option;
       195: aload_1
       196: aload         8
       198: invokeinterface #195,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.precedence:(Ljava/lang/Object;)Lorg/sireum/Option;
       203: astore        12
       205: dup
       206: ifnonnull     218
       209: pop
       210: aload         12
       212: ifnull        226
       215: goto          363
       218: aload         12
       220: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       223: ifeq          363
       226: aload_1
       227: aload         11
       229: invokeinterface #367,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.isRightAssoc:(Ljava/lang/Object;)Z
       234: aload_1
       235: aload         11
       237: invokeinterface #367,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.isRightAssoc:(Ljava/lang/Object;)Z
       242: if_icmpeq     335
       245: aload_2
       246: aload_1
       247: aload         11
       249: invokeinterface #370,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.posOpt:(Ljava/lang/Object;)Lorg/sireum/Option;
       254: aload_1
       255: invokeinterface #374,  1          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.messageKind:()Ljava/lang/String;
       260: getstatic     #379                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       263: new           #381                // class java/lang/StringBuilder
       266: dup
       267: ldc_w         #382                // int 75
       270: invokespecial #385                // Method java/lang/StringBuilder."<init>":(I)V
       273: ldc_w         #387                // String Could not mix right/left associative operators with the same precedence:
       276: invokevirtual #391                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       279: new           #393                // class org/sireum/String
       282: dup
       283: aload_1
       284: aload         11
       286: invokeinterface #397,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.toString:(Ljava/lang/Object;)Ljava/lang/String;
       291: invokespecial #400                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       294: invokevirtual #403                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       297: ldc_w         #405                // String ,
       300: invokevirtual #391                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       303: new           #393                // class org/sireum/String
       306: dup
       307: aload_1
       308: aload         8
       310: invokeinterface #397,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.toString:(Ljava/lang/Object;)Ljava/lang/String;
       315: invokespecial #400                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       318: invokevirtual #403                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       321: invokevirtual #407                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       324: invokevirtual #410                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       327: invokeinterface #414,  4          // InterfaceMethod org/sireum/message/Reporter.error:(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
       332: goto          335
       335: aload         9
       337: aload         9
       339: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       342: checkcast     #93                 // class org/sireum/Z
       345: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       348: iconst_2
       349: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       352: invokeinterface #104,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       357: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       360: goto          371
       363: getstatic     #323                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       366: invokevirtual #417                // Method org/sireum/package$.T:()Z
       369: istore        10
       371: goto          142
       374: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       377: aload         9
       379: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       382: checkcast     #93                 // class org/sireum/Z
       385: aload         7
       387: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       392: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       395: iconst_2
       396: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       399: invokeinterface #420,  2          // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
       404: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
       407: ifeq          477
       410: aload         6
       412: aload         6
       414: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       417: checkcast     #57                 // class org/sireum/IS
       420: aload_0
       421: aload_1
       422: aload         8
       424: invokeinterface #367,  2          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.isRightAssoc:(Ljava/lang/Object;)Z
       429: aload         7
       431: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       434: iconst_1
       435: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       438: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       443: aload         9
       445: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       448: checkcast     #93                 // class org/sireum/Z
       451: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       454: iconst_1
       455: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       458: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       463: aload_1
       464: aload_3
       465: invokestatic  #422                // Method construct$1:(Lorg/sireum/IS;ZLorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;)Ljava/lang/Object;
       468: invokevirtual #302                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       471: putfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       474: goto          515
       477: aload         7
       479: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       482: iconst_1
       483: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       486: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       491: aload         9
       493: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       496: checkcast     #93                 // class org/sireum/Z
       499: invokeinterface #266,  2          // InterfaceMethod org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
       504: aload         6
       506: aload_0
       507: invokedynamic #427,  0            // InvokeDynamic #8:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
       512: invokevirtual #178                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
       515: aload         9
       517: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       520: checkcast     #93                 // class org/sireum/Z
       523: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       526: iconst_2
       527: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       530: invokeinterface #104,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       535: aload_0
       536: aload_1
       537: aload         5
       539: invokestatic  #337                // Method findMaxPrecedenceIndex$1:(Lorg/sireum/Z;Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/Option;)Lorg/sireum/Z;
       542: astore        7
       544: getstatic     #109                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       547: aload         7
       549: aload_0
       550: invokevirtual #65                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
       553: invokeinterface #309,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       558: invokevirtual #116                // Method org/sireum/B$.$4B:(Z)Z
       561: ifeq          605
       564: aload         9
       566: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       569: checkcast     #93                 // class org/sireum/Z
       572: aload         7
       574: getstatic     #70                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       577: iconst_2
       578: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       581: invokeinterface #142,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       586: invokeinterface #157,  2          // InterfaceMethod org/sireum/Z.to:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
       591: aload         6
       593: aload_0
       594: invokedynamic #432,  0            // InvokeDynamic #9:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
       599: invokevirtual #178                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
       602: goto          633
       605: aload         9
       607: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       610: checkcast     #93                 // class org/sireum/Z
       613: aload_0
       614: invokevirtual #65                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
       617: invokeinterface #266,  2          // InterfaceMethod org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
       622: aload         6
       624: aload_0
       625: invokedynamic #437,  0            // InvokeDynamic #10:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Lscala/Function1;
       630: invokevirtual #178                // Method org/sireum/ZRange.foreach:(Lscala/Function1;)V
       633: goto          87
       636: aload         6
       638: getfield      #128                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       641: checkcast     #57                 // class org/sireum/IS
       644: areturn
      StackMapTable: number_of_entries = 13
        frame_type = 255 /* full_frame */
          offset_delta = 87
          locals = [ class org/sireum/IS, class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class org/sireum/message/Reporter, class java/lang/Object, class org/sireum/Z, class org/sireum/Some, class scala/runtime/ObjectRef, class org/sireum/Z ]
          stack = []
        frame_type = 254 /* append */
          offset_delta = 54
          locals = [ class java/lang/Object, class scala/runtime/ObjectRef, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 75
          locals = [ class org/sireum/IS, class org/sireum/parser/ParseTree$BinaryPrecedenceOps, class org/sireum/message/Reporter, class java/lang/Object, class org/sireum/Z, class org/sireum/Some, class scala/runtime/ObjectRef, class org/sireum/Z, class java/lang/Object, class scala/runtime/ObjectRef, int, class java/lang/Object, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 108
        frame_type = 27 /* same */
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 102
        frame_type = 37 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 89
        frame_type = 27 /* same */
        frame_type = 248 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 183: 0
        line 184: 7
        line 193: 17
        line 194: 34
        line 195: 50
        line 198: 87
        line 199: 107
        line 200: 115
        line 201: 134
        line 202: 142
        line 203: 173
        line 204: 187
        line 205: 226
        line 206: 245
        line 207: 260
        line 209: 335
        line 211: 363
        line 202: 371
        line 214: 374
        line 215: 410
        line 217: 477
        line 222: 515
        line 223: 544
        line 224: 564
        line 228: 605
        line 198: 633
        line 233: 636
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          187     184    11    op   Ljava/lang/Object;
          115     518     8 startOp   Ljava/lang/Object;
          134     499     9     i   Lscala/runtime/ObjectRef;
          142     491    10 found   Z
            7     638     4   max   Lorg/sireum/Z;
           17     628     5 maxOpt   Lorg/sireum/Option;
           34     611     6 newAcs   Lscala/runtime/ObjectRef;
           50     595     7 start   Lorg/sireum/Z;
            0     645     0   acs   Lorg/sireum/IS;
            0     645     1  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0     645     2 reporter$1   Lorg/sireum/message/Reporter;
            0     645     3 builder$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      acs                            final
      bp$1                           final
      reporter$1                     final
      builder$1                      final

  public static final java.lang.Object $anonfun$rewriteBinary$11(org.sireum.parser.ParseTree$BinaryPrecedenceOps, java.lang.Object, java.lang.Object);
    descriptor: (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #445,  3          // InterfaceMethod org/sireum/parser/ParseTree$BinaryPrecedenceOps.transform:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0       9     1 builder$1   Ljava/lang/Object;
            0       9     2     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      bp$1                           final
      builder$1                      final
      t                              final

  private org.sireum.parser.ParseTree$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #263                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$;

  public static final java.lang.Object $anonfun$rewriteBinary$1$adapted(org.sireum.IS, org.sireum.parser.ParseTree$BinaryPrecedenceOps, java.lang.Object, scala.runtime.ObjectRef, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #447                // Method $anonfun$rewriteBinary$1:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
         9: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        12: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  ts$1   Lorg/sireum/IS;
            0      13     1  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0      13     2 builder$1   Ljava/lang/Object;
            0      13     3   r$1   Lscala/runtime/ObjectRef;
            0      13     4     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      ts$1                           final
      bp$1                           final
      builder$1                      final
      r$1                            final
      i                              final

  public static final java.lang.Object $anonfun$rewriteBinary$2$adapted(org.sireum.IS, org.sireum.parser.ParseTree$BinaryPrecedenceOps, scala.runtime.ObjectRef, java.lang.Object, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #449                // Method $anonfun$rewriteBinary$2:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)V
         9: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        12: areturn
      LineNumberTable:
        line 154: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  ts$1   Lorg/sireum/IS;
            0      13     1  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0      13     2   l$1   Lscala/runtime/ObjectRef;
            0      13     3 builder$1   Ljava/lang/Object;
            0      13     4     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      ts$1                           final
      bp$1                           final
      l$1                            final
      builder$1                      final
      i                              final

  public static final java.lang.Object $anonfun$rewriteBinary$3$adapted(org.sireum.parser.ParseTree$BinaryPrecedenceOps, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #451                // Method $anonfun$rewriteBinary$3:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         6: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 173: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0      10     1 max$1   Lscala/runtime/ObjectRef;
            0      10     2     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      bp$1                           final
      max$1                          final
      e                              final

  public static final java.lang.Object $anonfun$rewriteBinary$4$adapted(org.sireum.parser.ParseTree$BinaryPrecedenceOps, org.sireum.IS, org.sireum.Option, org.sireum.Z);
    descriptor: (Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=4, args_size=4
         0: new           #453                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: aload_2
         7: aload_3
         8: invokestatic  #455                // Method $anonfun$rewriteBinary$4:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Z
        11: invokespecial #458                // Method org/sireum/B."<init>":(Z)V
        14: areturn
      LineNumberTable:
        line 187: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  bp$1   Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;
            0      15     1 acs$1   Lorg/sireum/IS;
            0      15     2 maxOpt$1   Lorg/sireum/Option;
            0      15     3     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      bp$1                           final
      acs$1                          final
      maxOpt$1                       final
      i                              final

  public static final java.lang.Object $anonfun$rewriteBinary$6$adapted(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #460                // Method $anonfun$rewriteBinary$6:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
         6: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 195: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      10     1 acs$1   Lorg/sireum/IS;
            0      10     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  public static final java.lang.Object $anonfun$rewriteBinary$7$adapted(scala.runtime.ObjectRef, org.sireum.IS);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #453                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: invokestatic  #462                // Method $anonfun$rewriteBinary$7:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Z
         9: invokespecial #458                // Method org/sireum/B."<init>":(Z)V
        12: areturn
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0   i$1   Lscala/runtime/ObjectRef;
            0      13     1 acs$1   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      i$1                            final
      acs$1                          final

  public static final java.lang.Object $anonfun$rewriteBinary$8$adapted(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #464                // Method $anonfun$rewriteBinary$8:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
         6: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      10     1 acs$1   Lorg/sireum/IS;
            0      10     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  public static final java.lang.Object $anonfun$rewriteBinary$9$adapted(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #466                // Method $anonfun$rewriteBinary$9:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
         6: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 224: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      10     1 acs$1   Lorg/sireum/IS;
            0      10     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  public static final java.lang.Object $anonfun$rewriteBinary$10$adapted(scala.runtime.ObjectRef, org.sireum.IS, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #468                // Method $anonfun$rewriteBinary$10:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)V
         6: getstatic     #226                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 228: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 newAcs$1   Lscala/runtime/ObjectRef;
            0      10     1 acs$1   Lorg/sireum/IS;
            0      10     2     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newAcs$1                       final
      acs$1                          final
      j                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #480,  0            // InvokeDynamic #11:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static #20= #17 of #19;          // BinaryPrecedenceOps=class org/sireum/parser/ParseTree$BinaryPrecedenceOps of class org/sireum/parser/ParseTree
SourceFile: "ParseTree.scala"
BootstrapMethods:
  0: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #43 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$11:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #44 1
  1: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #168 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$1$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
      #171 5
      #44 1
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
  2: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #183 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$2$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
      #171 5
      #44 1
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
  3: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #239 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$3$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #44 1
  4: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #271 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$4$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Ljava/lang/Object;
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
      #171 5
      #44 1
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
  5: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #281 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$5:(Ljava/lang/Object;Lorg/sireum/Z;)Lscala/runtime/Nothing$;
      #283 (Lorg/sireum/Z;)Lscala/runtime/Nothing$;
      #171 5
      #44 1
      #283 (Lorg/sireum/Z;)Lscala/runtime/Nothing$;
  6: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #342 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$6$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
      #171 5
      #44 1
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
  7: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #352 ()Ljava/lang/Object;
      #357 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$7$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Ljava/lang/Object;
      #352 ()Ljava/lang/Object;
      #44 1
  8: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #426 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$8$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
      #171 5
      #44 1
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
  9: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #431 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$9$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
      #171 5
      #44 1
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
  10: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #436 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$10$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
      #171 5
      #44 1
      #170 (Lorg/sireum/Z;)Ljava/lang/Object;
  11: #477 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$1$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
      #436 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$10$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
      #43 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$11:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #183 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$2$adapted:(Lorg/sireum/IS;Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
      #239 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$3$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #271 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$4$adapted:(Lorg/sireum/parser/ParseTree$BinaryPrecedenceOps;Lorg/sireum/IS;Lorg/sireum/Option;Lorg/sireum/Z;)Ljava/lang/Object;
      #281 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$5:(Ljava/lang/Object;Lorg/sireum/Z;)Lscala/runtime/Nothing$;
      #342 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$6$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
      #357 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$7$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;)Ljava/lang/Object;
      #426 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$8$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
      #431 REF_invokeStatic org/sireum/parser/ParseTree$.$anonfun$rewriteBinary$9$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/IS;Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 00 5E 00 5F 01 00 A4 00 A5 01 01 38
   01 28 01 01 B1 01 53 01 00 27 00 28 01 00 89 00
   8A 01 00 B3 00 B4 01 00 BC 00 BD 01 00 EB 00 EC
   01 00 F5 00 F6 01 01 0B 01 0C 01 00 FC 00 FD 01
   01 27 01 28 01 01 52 01 53 01 01 2F 01 30 01 01
   61 01 62 01 01 36 01 28 01 01 A7 01 53 01 01 37
   01 28 01 01 AC 01 53 01 00 19 00 18 01 00 90 00
   91 01 01 04 01 05 01 00 E6 00 E7 01 00 4E 00 4F
   01 00 1E 00 1F 01
  Scala: length = 0x0 (unknown attribute)

