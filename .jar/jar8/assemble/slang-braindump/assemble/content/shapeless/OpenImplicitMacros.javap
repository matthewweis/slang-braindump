Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/OpenImplicitMacros.class
  Last modified May 29, 2022; size 6432 bytes
  SHA-256 checksum 431195dca262cb97970b622bb9685efc415350e9b7a6566dae3878d3b9c19cd2
  Compiled from "lazy.scala"
public interface shapeless.OpenImplicitMacros
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // shapeless/OpenImplicitMacros
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 12, attributes: 6
Constant pool:
    #1 = Utf8               shapeless/OpenImplicitMacros
    #2 = Class              #1            // shapeless/OpenImplicitMacros
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               lazy.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005a2qAB\u0004\u0011\u0002\u0007\u0005!\u0002C\u0003\u0012\u0001\u0011\u0005!\u0003C\u0004\u0017\u0001\t\u0007i\u0011A\f\t\u000b\t\u0002A\u0011A\u0012\t\u000bY\u0002A\u0011A\u0012\t\u000b]\u0002A\u0011A\u0012\u0003%=\u0003XM\\%na2L7-\u001b;NC\u000e\u0014xn\u001d\u0006\u0002\u0011\u0005I1\u000f[1qK2,7o]\u0002\u0001\'\t\u00011\u0002\u0005\u0002\r\u001f5\tQBC\u0001\u000f\u0003\u0015\u00198-\u00197b\u0013\t\u0001RB\u0001\u0004B]f\u0014VMZ\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003M\u0001\"\u0001\u0004\u000b\n\u0005Ui!\u0001B+oSR\f\u0011aY\u000b\u00021A\u0011\u0011\u0004I\u0007\u00025)\u00111\u0004H\u0001\to\"LG/\u001a2pq*\u0011QDH\u0001\u0007[\u0006\u001c\'o\\:\u000b\u0005}i\u0011a\u0002:fM2,7\r^\u0005\u0003Ci\u0011qaQ8oi\u0016DH/A\bpa\u0016t\u0017*\u001c9mS\u000eLG\u000f\u00169f+\u0005!\u0003c\u0001\u0007&O%\u0011a%\u0004\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005!\u0002dBA\u0015,\u001d\tQ#!D\u0001\u0001\u0013\taS&\u0001\u0005v]&4XM]:f\u0013\t\tcF\u0003\u000209\u0005A!\r\\1dW\n|\u00070\u0003\u00022e\t!A+\u001f9f\u0013\t\u0019DGA\u0003UsB,7O\u0003\u00026=\u0005\u0019\u0011\r]5\u0002)=\u0004XM\\%na2L7-\u001b;Ua\u0016\u0004\u0016M]1n\u0003U\u0019XmY8oI>\u0003XM\\%na2L7-\u001b;Ua\u0016\u0004
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
   #15 = Class              #14           // scala/collection/SeqFactory$UnapplySeqWrapper
   #16 = Utf8               scala/collection/SeqFactory
   #17 = Class              #16           // scala/collection/SeqFactory
   #18 = Utf8               UnapplySeqWrapper
   #19 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #20 = Class              #19           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #21 = Utf8               UnapplySeqWrapper$
   #22 = Utf8               scala/reflect/api/Types$TypeApi
   #23 = Class              #22           // scala/reflect/api/Types$TypeApi
   #24 = Utf8               scala/reflect/api/Types
   #25 = Class              #24           // scala/reflect/api/Types
   #26 = Utf8               TypeApi
   #27 = Utf8               scala/reflect/api/Types$TypeRefApi
   #28 = Class              #27           // scala/reflect/api/Types$TypeRefApi
   #29 = Utf8               TypeRefApi
   #30 = Utf8               scala/reflect/api/Types$TypeRefExtractor
   #31 = Class              #30           // scala/reflect/api/Types$TypeRefExtractor
   #32 = Utf8               TypeRefExtractor
   #33 = Utf8               scala/reflect/macros/whitebox/Context$ImplicitCandidate
   #34 = Class              #33           // scala/reflect/macros/whitebox/Context$ImplicitCandidate
   #35 = Utf8               scala/reflect/macros/whitebox/Context
   #36 = Class              #35           // scala/reflect/macros/whitebox/Context
   #37 = Utf8               ImplicitCandidate
   #38 = Utf8               c
   #39 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #40 = Utf8               openImplicitTpe$
   #41 = Utf8               (Lshapeless/OpenImplicitMacros;)Lscala/Option;
   #42 = Utf8               $this
   #43 = Utf8               openImplicitTpe
   #44 = Utf8               ()Lscala/Option;
   #45 = NameAndType        #43:#44       // openImplicitTpe:()Lscala/Option;
   #46 = InterfaceMethodref #2.#45        // shapeless/OpenImplicitMacros.openImplicitTpe:()Lscala/Option;
   #47 = Utf8               Lshapeless/OpenImplicitMacros;
   #48 = Utf8               ()Lscala/Option<Lscala/reflect/api/Types$TypeApi;>;
   #49 = NameAndType        #38:#39       // c:()Lscala/reflect/macros/whitebox/Context;
   #50 = InterfaceMethodref #2.#49        // shapeless/OpenImplicitMacros.c:()Lscala/reflect/macros/whitebox/Context;
   #51 = Utf8               openImplicits
   #52 = Utf8               ()Lscala/collection/immutable/List;
   #53 = NameAndType        #51:#52       // openImplicits:()Lscala/collection/immutable/List;
   #54 = InterfaceMethodref #36.#53       // scala/reflect/macros/whitebox/Context.openImplicits:()Lscala/collection/immutable/List;
   #55 = Utf8               scala/collection/immutable/List
   #56 = Class              #55           // scala/collection/immutable/List
   #57 = Utf8               headOption
   #58 = NameAndType        #57:#44       // headOption:()Lscala/Option;
   #59 = Methodref          #56.#58       // scala/collection/immutable/List.headOption:()Lscala/Option;
   #60 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #61 = MethodType         #60           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #62 = Utf8               $anonfun$openImplicitTpe$1
   #63 = Utf8               (Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
   #64 = NameAndType        #62:#63       // $anonfun$openImplicitTpe$1:(Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
   #65 = InterfaceMethodref #2.#64        // shapeless/OpenImplicitMacros.$anonfun$openImplicitTpe$1:(Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
   #66 = MethodHandle       6:#65         // REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpe$1:(Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
   #67 = MethodType         #63           //  (Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
   #68 = Integer            5
   #69 = Integer            1
   #70 = Utf8               java/lang/invoke/LambdaMetafactory
   #71 = Class              #70           // java/lang/invoke/LambdaMetafactory
   #72 = Utf8               altMetafactory
   #73 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #74 = NameAndType        #72:#73       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #75 = Methodref          #71.#74       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #76 = MethodHandle       6:#75         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #77 = Utf8               apply
   #78 = Utf8               ()Lscala/Function1;
   #79 = NameAndType        #77:#78       // apply:()Lscala/Function1;
   #80 = InvokeDynamic      #0:#79        // #0:apply:()Lscala/Function1;
   #81 = Utf8               scala/Option
   #82 = Class              #81           // scala/Option
   #83 = Utf8               map
   #84 = Utf8               (Lscala/Function1;)Lscala/Option;
   #85 = NameAndType        #83:#84       // map:(Lscala/Function1;)Lscala/Option;
   #86 = Methodref          #82.#85       // scala/Option.map:(Lscala/Function1;)Lscala/Option;
   #87 = Utf8               this
   #88 = Utf8               openImplicitTpeParam$
   #89 = Utf8               openImplicitTpeParam
   #90 = NameAndType        #89:#44       // openImplicitTpeParam:()Lscala/Option;
   #91 = InterfaceMethodref #2.#90        // shapeless/OpenImplicitMacros.openImplicitTpeParam:()Lscala/Option;
   #92 = Utf8               $anonfun$openImplicitTpeParam$1
   #93 = Utf8               (Lshapeless/OpenImplicitMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #94 = NameAndType        #92:#93       // $anonfun$openImplicitTpeParam$1:(Lshapeless/OpenImplicitMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #95 = InterfaceMethodref #2.#94        // shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$1:(Lshapeless/OpenImplicitMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #96 = MethodHandle       6:#95         // REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$1:(Lshapeless/OpenImplicitMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #97 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #98 = MethodType         #97           //  (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #99 = Utf8               (Lshapeless/OpenImplicitMacros;)Lscala/Function1;
  #100 = NameAndType        #77:#99       // apply:(Lshapeless/OpenImplicitMacros;)Lscala/Function1;
  #101 = InvokeDynamic      #1:#100       // #1:apply:(Lshapeless/OpenImplicitMacros;)Lscala/Function1;
  #102 = Utf8               secondOpenImplicitTpe$
  #103 = Utf8               secondOpenImplicitTpe
  #104 = NameAndType        #103:#44      // secondOpenImplicitTpe:()Lscala/Option;
  #105 = InterfaceMethodref #2.#104       // shapeless/OpenImplicitMacros.secondOpenImplicitTpe:()Lscala/Option;
  #106 = Utf8               scala/collection/immutable/List$
  #107 = Class              #106          // scala/collection/immutable/List$
  #108 = Utf8               MODULE$
  #109 = Utf8               Lscala/collection/immutable/List$;
  #110 = NameAndType        #108:#109     // MODULE$:Lscala/collection/immutable/List$;
  #111 = Fieldref           #107.#110     // scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
  #112 = Utf8               unapplySeq
  #113 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #114 = NameAndType        #112:#113     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #115 = Methodref          #107.#114     // scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #116 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #117 = NameAndType        #108:#116     // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #118 = Fieldref           #20.#117      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #119 = Utf8               isEmpty$extension
  #120 = Utf8               (Lscala/collection/SeqOps;)Z
  #121 = NameAndType        #119:#120     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #122 = Methodref          #20.#121      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #123 = Utf8               get$extension
  #124 = NameAndType        #123:#113     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #125 = Methodref          #20.#124      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #126 = Utf8               <init>
  #127 = Utf8               (Lscala/collection/SeqOps;)V
  #128 = NameAndType        #126:#127     // "<init>":(Lscala/collection/SeqOps;)V
  #129 = Methodref          #15.#128      // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #130 = Utf8               lengthCompare$extension
  #131 = Utf8               (Lscala/collection/SeqOps;I)I
  #132 = NameAndType        #130:#131     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #133 = Methodref          #20.#132      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #134 = Utf8               apply$extension
  #135 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #136 = NameAndType        #134:#135     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #137 = Methodref          #20.#136      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #138 = Utf8               scala/Some
  #139 = Class              #138          // scala/Some
  #140 = Utf8               pt
  #141 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
  #142 = NameAndType        #140:#141     // pt:()Lscala/reflect/api/Types$TypeApi;
  #143 = Methodref          #34.#142      // scala/reflect/macros/whitebox/Context$ImplicitCandidate.pt:()Lscala/reflect/api/Types$TypeApi;
  #144 = Utf8               (Ljava/lang/Object;)V
  #145 = NameAndType        #126:#144     // "<init>":(Ljava/lang/Object;)V
  #146 = Methodref          #139.#145     // scala/Some."<init>":(Ljava/lang/Object;)V
  #147 = Utf8               scala/None$
  #148 = Class              #147          // scala/None$
  #149 = Utf8               Lscala/None$;
  #150 = NameAndType        #108:#149     // MODULE$:Lscala/None$;
  #151 = Fieldref           #148.#150     // scala/None$.MODULE$:Lscala/None$;
  #152 = Utf8               second
  #153 = Utf8               Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;
  #154 = Utf8               scala/collection/SeqOps
  #155 = Class              #154          // scala/collection/SeqOps
  #156 = Utf8               x$1
  #157 = Utf8               $anonfun$openImplicitTpeParam$2
  #158 = Utf8               x$2
  #159 = Utf8               dealias
  #160 = NameAndType        #159:#141     // dealias:()Lscala/reflect/api/Types$TypeApi;
  #161 = Methodref          #23.#160      // scala/reflect/api/Types$TypeApi.dealias:()Lscala/reflect/api/Types$TypeApi;
  #162 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #163 = Utf8               x0$1
  #164 = Utf8               universe
  #165 = Utf8               ()Lscala/reflect/macros/Universe;
  #166 = NameAndType        #164:#165     // universe:()Lscala/reflect/macros/Universe;
  #167 = InterfaceMethodref #36.#166      // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #168 = Utf8               scala/reflect/macros/Universe
  #169 = Class              #168          // scala/reflect/macros/Universe
  #170 = Utf8               TypeRefTag
  #171 = Utf8               ()Lscala/reflect/ClassTag;
  #172 = NameAndType        #170:#171     // TypeRefTag:()Lscala/reflect/ClassTag;
  #173 = Methodref          #169.#172     // scala/reflect/macros/Universe.TypeRefTag:()Lscala/reflect/ClassTag;
  #174 = Utf8               scala/reflect/ClassTag
  #175 = Class              #174          // scala/reflect/ClassTag
  #176 = Utf8               unapply
  #177 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #178 = NameAndType        #176:#177     // unapply:(Ljava/lang/Object;)Lscala/Option;
  #179 = InterfaceMethodref #175.#178     // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
  #180 = Utf8               isEmpty
  #181 = Utf8               ()Z
  #182 = NameAndType        #180:#181     // isEmpty:()Z
  #183 = Methodref          #82.#182      // scala/Option.isEmpty:()Z
  #184 = Utf8               get
  #185 = Utf8               ()Ljava/lang/Object;
  #186 = NameAndType        #184:#185     // get:()Ljava/lang/Object;
  #187 = Methodref          #82.#186      // scala/Option.get:()Ljava/lang/Object;
  #188 = Utf8               TypeRef
  #189 = Utf8               ()Lscala/reflect/api/Types$TypeRefExtractor;
  #190 = NameAndType        #188:#189     // TypeRef:()Lscala/reflect/api/Types$TypeRefExtractor;
  #191 = Methodref          #169.#190     // scala/reflect/macros/Universe.TypeRef:()Lscala/reflect/api/Types$TypeRefExtractor;
  #192 = Utf8               (Lscala/reflect/api/Types$TypeRefApi;)Lscala/Option;
  #193 = NameAndType        #176:#192     // unapply:(Lscala/reflect/api/Types$TypeRefApi;)Lscala/Option;
  #194 = Methodref          #31.#193      // scala/reflect/api/Types$TypeRefExtractor.unapply:(Lscala/reflect/api/Types$TypeRefApi;)Lscala/Option;
  #195 = Utf8               scala/Tuple3
  #196 = Class              #195          // scala/Tuple3
  #197 = Utf8               _3
  #198 = NameAndType        #197:#185     // _3:()Ljava/lang/Object;
  #199 = Methodref          #196.#198     // scala/Tuple3._3:()Ljava/lang/Object;
  #200 = NameAndType        #157:#97      // $anonfun$openImplicitTpeParam$2:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #201 = InterfaceMethodref #2.#200       // shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$2:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #202 = MethodHandle       6:#201        // REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$2:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #203 = InvokeDynamic      #2:#79        // #2:apply:()Lscala/Function1;
  #204 = Utf8               (Lscala/Function1;)Lscala/reflect/api/Types$TypeApi;
  #205 = NameAndType        #83:#204      // map:(Lscala/Function1;)Lscala/reflect/api/Types$TypeApi;
  #206 = Methodref          #23.#205      // scala/reflect/api/Types$TypeApi.map:(Lscala/Function1;)Lscala/reflect/api/Types$TypeApi;
  #207 = Utf8               enclosingPosition
  #208 = Utf8               ()Lscala/reflect/api/Position;
  #209 = NameAndType        #207:#208     // enclosingPosition:()Lscala/reflect/api/Position;
  #210 = InterfaceMethodref #36.#209      // scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
  #211 = Utf8               java/lang/StringBuilder
  #212 = Class              #211          // java/lang/StringBuilder
  #213 = Integer            21
  #214 = Utf8               (I)V
  #215 = NameAndType        #126:#214     // "<init>":(I)V
  #216 = Methodref          #212.#215     // java/lang/StringBuilder."<init>":(I)V
  #217 = Utf8               Bad materialization:
  #218 = String             #217          // Bad materialization:
  #219 = Utf8               append
  #220 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #221 = NameAndType        #219:#220     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #222 = Methodref          #212.#221     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #223 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #224 = NameAndType        #219:#223     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #225 = Methodref          #212.#224     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #226 = Utf8               toString
  #227 = Utf8               ()Ljava/lang/String;
  #228 = NameAndType        #226:#227     // toString:()Ljava/lang/String;
  #229 = Methodref          #212.#228     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #230 = Utf8               abort
  #231 = Utf8               (Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #232 = NameAndType        #230:#231     // abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #233 = InterfaceMethodref #36.#232      // scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #234 = Utf8               tpe
  #235 = Utf8               $init$
  #236 = Utf8               (Lshapeless/OpenImplicitMacros;)V
  #237 = Utf8               $deserializeLambda$
  #238 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #239 = Utf8               scala/runtime/LambdaDeserialize
  #240 = Class              #239          // scala/runtime/LambdaDeserialize
  #241 = Utf8               bootstrap
  #242 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #243 = NameAndType        #241:#242     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #244 = Methodref          #240.#243     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #245 = MethodHandle       6:#244        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #246 = Utf8               lambdaDeserialize
  #247 = NameAndType        #246:#238     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #248 = InvokeDynamic      #3:#247       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #249 = Utf8               Code
  #250 = Utf8               LineNumberTable
  #251 = Utf8               LocalVariableTable
  #252 = Utf8               MethodParameters
  #253 = Utf8               Signature
  #254 = Utf8               StackMapTable
  #255 = Utf8               InnerClasses
  #256 = Utf8               SourceFile
  #257 = Utf8               RuntimeVisibleAnnotations
  #258 = Utf8               BootstrapMethods
  #259 = Utf8               ScalaInlineInfo
  #260 = Utf8               ScalaSig
{
  public abstract scala.reflect.macros.whitebox.Context c();
    descriptor: ()Lscala/reflect/macros/whitebox/Context;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static scala.Option openImplicitTpe$(shapeless.OpenImplicitMacros);
    descriptor: (Lshapeless/OpenImplicitMacros;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #46                 // InterfaceMethod openImplicitTpe:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lshapeless/OpenImplicitMacros;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.Option<scala.reflect.api.Types$TypeApi> openImplicitTpe();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #50,  1           // InterfaceMethod c:()Lscala/reflect/macros/whitebox/Context;
         6: invokeinterface #54,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.openImplicits:()Lscala/collection/immutable/List;
        11: invokevirtual #59                 // Method scala/collection/immutable/List.headOption:()Lscala/Option;
        14: invokedynamic #80,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        19: invokevirtual #86                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lshapeless/OpenImplicitMacros;
    Signature: #48                          // ()Lscala/Option<Lscala/reflect/api/Types$TypeApi;>;

  public static scala.Option openImplicitTpeParam$(shapeless.OpenImplicitMacros);
    descriptor: (Lshapeless/OpenImplicitMacros;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #91                 // InterfaceMethod openImplicitTpeParam:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lshapeless/OpenImplicitMacros;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.Option<scala.reflect.api.Types$TypeApi> openImplicitTpeParam();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #46,  1           // InterfaceMethod openImplicitTpe:()Lscala/Option;
         6: aload_0
         7: invokedynamic #101,  0            // InvokeDynamic #1:apply:(Lshapeless/OpenImplicitMacros;)Lscala/Function1;
        12: invokevirtual #86                 // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        15: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lshapeless/OpenImplicitMacros;
    Signature: #48                          // ()Lscala/Option<Lscala/reflect/api/Types$TypeApi;>;

  public static scala.Option secondOpenImplicitTpe$(shapeless.OpenImplicitMacros);
    descriptor: (Lshapeless/OpenImplicitMacros;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #105                // InterfaceMethod secondOpenImplicitTpe:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 188: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lshapeless/OpenImplicitMacros;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.Option<scala.reflect.api.Types$TypeApi> secondOpenImplicitTpe();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: invokeinterface #50,  1           // InterfaceMethod c:()Lscala/reflect/macros/whitebox/Context;
         6: invokeinterface #54,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.openImplicits:()Lscala/collection/immutable/List;
        11: astore_2
        12: aload_2
        13: ifnull        107
        16: getstatic     #111                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
        19: aload_2
        20: invokevirtual #115                // Method scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        23: astore_3
        24: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        27: aload_3
        28: invokevirtual #122                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        31: ifne          104
        34: new           #15                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        37: dup
        38: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        41: aload_3
        42: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        45: invokespecial #129                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        48: ifnull        104
        51: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        54: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        57: aload_3
        58: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        61: iconst_2
        62: invokevirtual #133                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        65: iconst_0
        66: if_icmplt     104
        69: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        72: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        75: aload_3
        76: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        79: iconst_1
        80: invokevirtual #137                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
        83: checkcast     #34                 // class scala/reflect/macros/whitebox/Context$ImplicitCandidate
        86: astore        4
        88: new           #139                // class scala/Some
        91: dup
        92: aload         4
        94: invokevirtual #143                // Method scala/reflect/macros/whitebox/Context$ImplicitCandidate.pt:()Lscala/reflect/api/Types$TypeApi;
        97: invokespecial #146                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       100: astore_1
       101: goto          117
       104: goto          110
       107: goto          110
       110: getstatic     #151                // Field scala/None$.MODULE$:Lscala/None$;
       113: astore_1
       114: goto          117
       117: aload_1
       118: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 104
          locals = [ top, class scala/collection/immutable/List, class scala/collection/SeqOps ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class shapeless/OpenImplicitMacros, class scala/Option, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 189: 0
        line 190: 12
        line 191: 88
        line 190: 104
        line 192: 110
        line 189: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           86      18     4 second   Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;
            0     119     0  this   Lshapeless/OpenImplicitMacros;
    Signature: #48                          // ()Lscala/Option<Lscala/reflect/api/Types$TypeApi;>;

  public static scala.reflect.api.Types$TypeApi $anonfun$openImplicitTpe$1(scala.reflect.macros.whitebox.Context$ImplicitCandidate);
    descriptor: (Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #143                // Method scala/reflect/macros/whitebox/Context$ImplicitCandidate.pt:()Lscala/reflect/api/Types$TypeApi;
         4: areturn
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static scala.reflect.api.Types$TypeApi $anonfun$openImplicitTpeParam$2(scala.reflect.api.Types$TypeApi);
    descriptor: (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #161                // Method scala/reflect/api/Types$TypeApi.dealias:()Lscala/reflect/api/Types$TypeApi;
         4: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static scala.reflect.api.Types$TypeApi $anonfun$openImplicitTpeParam$1(shapeless.OpenImplicitMacros, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/OpenImplicitMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=10, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        208
         6: aload_0
         7: invokeinterface #50,  1           // InterfaceMethod c:()Lscala/reflect/macros/whitebox/Context;
        12: invokeinterface #167,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        17: invokevirtual #173                // Method scala/reflect/macros/Universe.TypeRefTag:()Lscala/reflect/ClassTag;
        20: aload_3
        21: invokeinterface #179,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        26: astore        4
        28: aload         4
        30: invokevirtual #183                // Method scala/Option.isEmpty:()Z
        33: ifne          205
        36: aload         4
        38: invokevirtual #187                // Method scala/Option.get:()Ljava/lang/Object;
        41: checkcast     #28                 // class scala/reflect/api/Types$TypeRefApi
        44: astore        5
        46: aload         5
        48: ifnull        202
        51: aload_0
        52: invokeinterface #50,  1           // InterfaceMethod c:()Lscala/reflect/macros/whitebox/Context;
        57: invokeinterface #167,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        62: invokevirtual #191                // Method scala/reflect/macros/Universe.TypeRef:()Lscala/reflect/api/Types$TypeRefExtractor;
        65: aload         5
        67: invokevirtual #194                // Method scala/reflect/api/Types$TypeRefExtractor.unapply:(Lscala/reflect/api/Types$TypeRefApi;)Lscala/Option;
        70: astore        6
        72: aload         6
        74: invokevirtual #183                // Method scala/Option.isEmpty:()Z
        77: ifne          199
        80: aload         6
        82: invokevirtual #187                // Method scala/Option.get:()Ljava/lang/Object;
        85: checkcast     #196                // class scala/Tuple3
        88: invokevirtual #199                // Method scala/Tuple3._3:()Ljava/lang/Object;
        91: checkcast     #56                 // class scala/collection/immutable/List
        94: astore        7
        96: aload         7
        98: ifnull        196
       101: getstatic     #111                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       104: aload         7
       106: invokevirtual #115                // Method scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       109: astore        8
       111: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       114: aload         8
       116: invokevirtual #122                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
       119: ifne          193
       122: new           #15                 // class scala/collection/SeqFactory$UnapplySeqWrapper
       125: dup
       126: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       129: aload         8
       131: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       134: invokespecial #129                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
       137: ifnull        193
       140: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       143: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       146: aload         8
       148: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       151: iconst_1
       152: invokevirtual #133                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
       155: iconst_0
       156: if_icmpne     193
       159: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       162: getstatic     #118                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       165: aload         8
       167: invokevirtual #125                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       170: iconst_0
       171: invokevirtual #137                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
       174: checkcast     #23                 // class scala/reflect/api/Types$TypeApi
       177: astore        9
       179: aload         9
       181: invokedynamic #203,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       186: invokevirtual #206                // Method scala/reflect/api/Types$TypeApi.map:(Lscala/Function1;)Lscala/reflect/api/Types$TypeApi;
       189: astore_2
       190: goto          255
       193: goto          211
       196: goto          211
       199: goto          211
       202: goto          211
       205: goto          211
       208: goto          211
       211: aload_0
       212: invokeinterface #50,  1           // InterfaceMethod c:()Lscala/reflect/macros/whitebox/Context;
       217: aload_0
       218: invokeinterface #50,  1           // InterfaceMethod c:()Lscala/reflect/macros/whitebox/Context;
       223: invokeinterface #210,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       228: new           #212                // class java/lang/StringBuilder
       231: dup
       232: ldc           #213                // int 21
       234: invokespecial #216                // Method java/lang/StringBuilder."<init>":(I)V
       237: ldc           #218                // String Bad materialization:
       239: invokevirtual #222                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       242: aload_3
       243: invokevirtual #225                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       246: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       249: invokeinterface #233,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       254: athrow
       255: aload_2
       256: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 193
          locals = [ class shapeless/OpenImplicitMacros, class scala/reflect/api/Types$TypeApi, top, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/reflect/api/Types$TypeRefApi, class scala/Option, class scala/collection/immutable/List, class scala/collection/SeqOps ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class shapeless/OpenImplicitMacros, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/reflect/api/Types$TypeRefApi, class scala/Option, class scala/collection/immutable/List, class scala/collection/SeqOps, class scala/reflect/api/Types$TypeApi ]
          stack = []
      LineNumberTable:
        line 181: 0
        line 182: 2
        line 181: 36
        line 182: 46
        line 181: 80
        line 182: 96
        line 183: 179
        line 182: 193
        line 185: 211
        line 181: 255
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          177      16     9   tpe   Lscala/reflect/api/Types$TypeApi;
            0     257     0 $this   Lshapeless/OpenImplicitMacros;
            0     257     1  x0$1   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x0$1                           final

  public static void $init$(shapeless.OpenImplicitMacros);
    descriptor: (Lshapeless/OpenImplicitMacros;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lshapeless/OpenImplicitMacros;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #248,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #18= #15 of #17;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #21= #20 of #17;          // UnapplySeqWrapper$=class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
  public abstract #26= #23 of #25;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #29= #28 of #25;                 // TypeRefApi=class scala/reflect/api/Types$TypeRefApi of class scala/reflect/api/Types
  public abstract #32= #31 of #25;        // TypeRefExtractor=class scala/reflect/api/Types$TypeRefExtractor of class scala/reflect/api/Types
  public #37= #34 of #36;                 // ImplicitCandidate=class scala/reflect/macros/whitebox/Context$ImplicitCandidate of class scala/reflect/macros/whitebox/Context
SourceFile: "lazy.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005a2qAB\u0004\u0011\u0002\u0007\u0005!\u0002C\u0003\u0012\u0001\u0011\u0005!\u0003C\u0004\u0017\u0001\t\u0007i\u0011A\f\t\u000b\t\u0002A\u0011A\u0012\t\u000bY\u0002A\u0011A\u0012\t\u000b]\u0002A\u0011A\u0012\u0003%=\u0003XM\\%na2L7-\u001b;NC\u000e\u0014xn\u001d\u0006\u0002\u0011\u0005I1\u000f[1qK2,7o]\u0002\u0001\'\t\u00011\u0002\u0005\u0002\r\u001f5\tQBC\u0001\u000f\u0003\u0015\u00198-\u00197b\u0013\t\u0001RB\u0001\u0004B]f\u0014VMZ\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003M\u0001\"\u0001\u0004\u000b\n\u0005Ui!\u0001B+oSR\f\u0011aY\u000b\u00021A\u0011\u0011\u0004I\u0007\u00025)\u00111\u0004H\u0001\to\"LG/\u001a2pq*\u0011QDH\u0001\u0007[\u0006\u001c\'o\\:\u000b\u0005}i\u0011a\u0002:fM2,7\r^\u0005\u0003Ci\u0011qaQ8oi\u0016DH/A\bpa\u0016t\u0017*\u001c9mS\u000eLG\u000f\u00169f+\u0005!\u0003c\u0001\u0007&O%\u0011a%\u0004\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005!\u0002dBA\u0015,\u001d\tQ#!D\u0001\u0001\u0013\taS&\u0001\u0005v]&4XM]:f\u0013\t\tcF\u0003\u000209\u0005A!\r\\1dW\n|\u00070\u0003\u00022e\t!A+\u001f9f\u0013\t\u0019DGA\u0003UsB,7O\u0003\u00026=\u0005\u0019\u0011\r]5\u0002)=\u0004XM\\%na2L7-\u001b;Ua\u0016\u0004\u0016M]1n\u0003U\u0019XmY8oI>\u0003XM\\%na2L7-\u001b;Ua\u0016\u0004"
    )
BootstrapMethods:
  0: #76 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #61 (Ljava/lang/Object;)Ljava/lang/Object;
      #66 REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpe$1:(Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
      #67 (Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
      #68 5
      #69 1
      #67 (Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
  1: #76 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #61 (Ljava/lang/Object;)Ljava/lang/Object;
      #96 REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$1:(Lshapeless/OpenImplicitMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
      #98 (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
      #68 5
      #69 1
      #98 (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  2: #76 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #61 (Ljava/lang/Object;)Ljava/lang/Object;
      #202 REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$2:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
      #98 (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
      #68 5
      #69 1
      #98 (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  3: #245 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #66 REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpe$1:(Lscala/reflect/macros/whitebox/Context$ImplicitCandidate;)Lscala/reflect/api/Types$TypeApi;
      #96 REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$1:(Lshapeless/OpenImplicitMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
      #202 REF_invokeStatic shapeless/OpenImplicitMacros.$anonfun$openImplicitTpeParam$2:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 00 00 0B 00 3E 00 3F 01 00 5C 00 5D 01 00 9D
   00 61 01 00 EB 00 EC 01 00 26 00 27 00 00 28 00
   29 01 00 2B 00 2C 00 00 58 00 29 01 00 59 00 2C
   00 00 66 00 29 01 00 67 00 2C 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
