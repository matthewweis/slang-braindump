Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/tools/NestedSuiteParam.class
  Last modified May 29, 2022; size 6040 bytes
  SHA-256 checksum 23b4cec8e8a8690a725e6be8e6638db1aa6fa8dada1aa7bade989ae0e68d84bc
  Compiled from "NestedSuiteParam.scala"
public class org.scalatest.tools.NestedSuiteParam implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/tools/NestedSuiteParam
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 3, methods: 22, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/tools/NestedSuiteParam
    #2 = Class              #1            // org/scalatest/tools/NestedSuiteParam
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               NestedSuiteParam.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005Md!\u0002\u000f\u001e\u0001v\u0019\u0003\u0002\u0003\u001e\u0001\u0005+\u0007I\u0011A\u001e\t\u0011\u0011\u0003!\u0011#Q\u0001\nqB\u0001\"\u0012\u0001\u0003\u0016\u0004%\tA\u0012\u0005\t\u0015\u0002\u0011\t\u0012)A\u0005\u000f\"A1\n\u0001BK\u0002\u0013\u0005a\t\u0003\u0005M\u0001\tE\t\u0015!\u0003H\u0011\u0015i\u0005\u0001\"\u0001O\u0011\u001d!\u0006!!A\u0005\u0002UCq!\u0017\u0001\u0012\u0002\u0013\u0005!\fC\u0004f\u0001E\u0005I\u0011\u00014\t\u000f!\u0004\u0011\u0013!C\u0001M\"9\u0011\u000eAA\u0001\n\u0003R\u0007b\u0002:\u0001\u0003\u0003%\ta\u001d\u0005\bo\u0002\t\t\u0011\"\u0001y\u0011\u001dq\b!!A\u0005B}D\u0011\"!\u0004\u0001\u0003\u0003%\t!a\u0004\t\u0013\u0005e\u0001!!A\u0005B\u0005m\u0001\"CA\u0010\u0001\u0005\u0005I\u0011IA\u0011\u0011%\t\u0019\u0003AA\u0001\n\u0003\n)\u0003C\u0005\u0002(\u0001\t\t\u0011\"\u0011\u0002*\u001dQ\u0011QF\u000f\u0002\u0002#\u0005Q$a\f\u0007\u0013qi\u0012\u0011!E\u0001;\u0005E\u0002BB\'\u0017\t\u0003\tI\u0005C\u0005\u0002$Y\t\t\u0011\"\u0012\u0002&!I\u00111\n\f\u0002\u0002\u0013\u0005\u0015Q\n\u0005\n\u0003+2\u0012\u0011!CA\u0003/B\u0011\"!\u001b\u0017\u0003\u0003%I!a\u001b\u0003!9+7\u000f^3e\'VLG/\u001a)be\u0006l\'B\u0001\u0010 \u0003\u0015!xn\u001c7t\u0015\t\u0001\u0013%A\u0005tG\u0006d\u0017\r^3ti*\t!%A\u0002pe\u001e\u001cB\u0001\u0001\u0013+[A\u0011Q\u0005K\u0007\u0002M)\tq%A\u0003tG\u0006d\u0017-\u0003\u0002*M\t1\u0011I\\=SK\u001a\u0004\"!J\u0016\n\u000512#a\u0002)s_\u0012,8\r\u001e\t\u0003]]r!aL\u001b\u000f\u0005A\"T\"A\u0019\u000b\u0005I\u001a\u0014A\u0002\u001fs_>$hh\u0001\u0001\n\u0003\u001dJ!A\u000e\u0014\u0002\u000fA\f7m[1hK&\u0011\u0001(\u000f\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003m\u0019\nqa];ji\u0016LE-F\u0001=!\ti\u0014I\u0004\u0002?\u007fA\u0011\u0001GJ\u0005\u0003\u0001\u001a\na\u0001\u0015:fI\u00164\u0017B\u0001\"D\u0005\u0019\u0019FO]5oO*\u0011\u0001IJ\u0001\tgVLG/Z%eA\u0005IA/Z:u\u001d\u0006lWm]\u000b\u0002\u000fB\u0019Q\u0005\u0013\u001f\n\u0005%3#!B!se\u0006L\u0018A\u0003;fgRt\u0015-\\3tA\u0005\tr/\u001b7eG\u0006\u0014H\rV3ti:\u000bW.Z:\u0002%]LG\u000eZ2be\u0012$Vm\u001d;OC6,7\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\t=\u000b&k\u0015\t\u0003!\u0002i\u0011!\b\u0005\u0006u\u001d\u0001\r\u0001\u0010\u0005\u0006\u000b\u001e\u0001\ra\u0012\u0005\u0006\u0017\u001e\u0001\raR\u0001\u0005G>\u0004\u0018\u0010\u0006\u0003P-^C\u0006b\u0002\u001e\t!\u0003\u0005\r\u0001\u0010\u0005\b\u000b\"\u0001\n\u00111\u0001H\u0011\u001dY\u0005\u0002%AA\u0002\u001d\u000babY8qs\u0012\"WMZ1vYR$\u0013\'F\u0001\\U\taDlK\u0001^!\tq6-D\u0001`\u0015\t\u0001\u0017-A\u0005v]\u000eDWmY6fI*\u0011!MJ\u0001\u000bC:tw\u000e^1uS>t\u0017B\u00013`\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00133+\u00059\'FA$]\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uIM\nQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DX#A6\u0011\u00051\fX\"A7\u000b\u00059|\u0017\u0001\u00027b]\u001eT\u0011\u0001]\u0001\u0005U\u00064\u0018-\u0003\u0002C[\u0006a\u0001O]8ek\u000e$\u0018I]5usV\tA\u000f\u0005\u0002&k&\u0011aO\n\u0002\u0004\u0013:$\u0018A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0003sr\u0004\"!\n>\n\u0005m4#aA!os\"9QPDA\u0001\u0002\u0004!\u0018a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0002\u0002A)\u00111AA\u0005s6\u0011\u0011Q\u0001\u0006\u0004\u0003\u000f1\u0013AC2pY2,7\r^5p]&!\u00111BA\u0003\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\t\u0005E\u0011q\u0003\t\u0004K\u0005M\u0011bAA\u000bM\t9!i\\8mK\u0006t\u0007bB?\u0011\u0003\u0003\u0005\r!_\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\rF\u0002l\u0003;Aq!`\t\u0002\u0002\u0003\u0007A/\u0001\u0005iCND7i\u001c3f)\u0005!\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003-\fa!Z9vC2\u001cH\u0003BA\t\u0003WAq! \u000b\u0002\u0002\u0003\u0007\u00110\u0001\tOKN$X\rZ*vSR,\u0007+\u0019:b[B\u0011\u0001KF\n\u0006-\u0005M\u0012q\b\t\t\u0003k\tY\u0004P$H\u001f6\u0011\u0011q\u0007\u0006\u0004\u0003s1\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003{\t9DA\tBEN$(/Y2u\rVt7\r^5p]N\u0002B!!\u0011\u0002H5\u0011\u00111\t\u0006\u0004\u0003\u000bz\u0017AA5p\u0013\rA\u00141\t\u000b\u0003\u0003_\tQ!\u00199qYf$raTA(\u0003#\n\u0019\u0006C\u0003;3\u0001\u0007A\bC\u0003F3\u0001\u0007q\tC\u0003L3\u0001\u0007q)A\u0004v]\u0006\u0004\b\u000f\\=\u0015\t\u0005e\u0013Q\r\t\u0006K\u0005m\u0013qL\u0005\u0004\u0003;2#AB(qi&|g\u000e\u0005\u0004&\u0003CbtiR\u0005\u0004\u0003G2#A\u0002+va2,7\u0007\u0003\u0005\u0002hi\t\t\u00111\u0001P\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003[\u00022\u0001\\A8\u0013\r\t\t(\u001c\u0002\u0007\u001f\nTWm\u0019;
   #13 = Utf8               suiteId
   #14 = Utf8               Ljava/lang/String;
   #15 = Utf8               testNames
   #16 = Utf8               [Ljava/lang/String;
   #17 = Utf8               wildcardTestNames
   #18 = Utf8               unapply
   #19 = Utf8               (Lorg/scalatest/tools/NestedSuiteParam;)Lscala/Option;
   #20 = Utf8               (Lorg/scalatest/tools/NestedSuiteParam;)Lscala/Option<Lscala/Tuple3<Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;>;>;
   #21 = Utf8               x$0
   #22 = Utf8               org/scalatest/tools/NestedSuiteParam$
   #23 = Class              #22           // org/scalatest/tools/NestedSuiteParam$
   #24 = Utf8               MODULE$
   #25 = Utf8               Lorg/scalatest/tools/NestedSuiteParam$;
   #26 = NameAndType        #24:#25       // MODULE$:Lorg/scalatest/tools/NestedSuiteParam$;
   #27 = Fieldref           #23.#26       // org/scalatest/tools/NestedSuiteParam$.MODULE$:Lorg/scalatest/tools/NestedSuiteParam$;
   #28 = NameAndType        #18:#19       // unapply:(Lorg/scalatest/tools/NestedSuiteParam;)Lscala/Option;
   #29 = Methodref          #23.#28       // org/scalatest/tools/NestedSuiteParam$.unapply:(Lorg/scalatest/tools/NestedSuiteParam;)Lscala/Option;
   #30 = Utf8               Lorg/scalatest/tools/NestedSuiteParam;
   #31 = Utf8               apply
   #32 = Utf8               (Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/scalatest/tools/NestedSuiteParam;
   #33 = NameAndType        #31:#32       // apply:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/scalatest/tools/NestedSuiteParam;
   #34 = Methodref          #23.#33       // org/scalatest/tools/NestedSuiteParam$.apply:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/scalatest/tools/NestedSuiteParam;
   #35 = Utf8               tupled
   #36 = Utf8               ()Lscala/Function1;
   #37 = Utf8               ()Lscala/Function1<Lscala/Tuple3<Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;>;Lorg/scalatest/tools/NestedSuiteParam;>;
   #38 = NameAndType        #35:#36       // tupled:()Lscala/Function1;
   #39 = Methodref          #23.#38       // org/scalatest/tools/NestedSuiteParam$.tupled:()Lscala/Function1;
   #40 = Utf8               curried
   #41 = Utf8               ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<[Ljava/lang/String;Lscala/Function1<[Ljava/lang/String;Lorg/scalatest/tools/NestedSuiteParam;>;>;>;
   #42 = NameAndType        #40:#36       // curried:()Lscala/Function1;
   #43 = Methodref          #23.#42       // org/scalatest/tools/NestedSuiteParam$.curried:()Lscala/Function1;
   #44 = Utf8               productElementNames
   #45 = Utf8               ()Lscala/collection/Iterator;
   #46 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #47 = Utf8               productElementNames$
   #48 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #49 = NameAndType        #47:#48       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #50 = InterfaceMethodref #6.#49        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #51 = Utf8               this
   #52 = Utf8               ()Ljava/lang/String;
   #53 = NameAndType        #13:#14       // suiteId:Ljava/lang/String;
   #54 = Fieldref           #2.#53        // org/scalatest/tools/NestedSuiteParam.suiteId:Ljava/lang/String;
   #55 = Utf8               ()[Ljava/lang/String;
   #56 = NameAndType        #15:#16       // testNames:[Ljava/lang/String;
   #57 = Fieldref           #2.#56        // org/scalatest/tools/NestedSuiteParam.testNames:[Ljava/lang/String;
   #58 = NameAndType        #17:#16       // wildcardTestNames:[Ljava/lang/String;
   #59 = Fieldref           #2.#58        // org/scalatest/tools/NestedSuiteParam.wildcardTestNames:[Ljava/lang/String;
   #60 = Utf8               copy
   #61 = Utf8               <init>
   #62 = Utf8               (Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V
   #63 = NameAndType        #61:#62       // "<init>":(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V
   #64 = Methodref          #2.#63        // org/scalatest/tools/NestedSuiteParam."<init>":(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V
   #65 = Utf8               copy$default$1
   #66 = NameAndType        #13:#52       // suiteId:()Ljava/lang/String;
   #67 = Methodref          #2.#66        // org/scalatest/tools/NestedSuiteParam.suiteId:()Ljava/lang/String;
   #68 = Utf8               copy$default$2
   #69 = NameAndType        #15:#55       // testNames:()[Ljava/lang/String;
   #70 = Methodref          #2.#69        // org/scalatest/tools/NestedSuiteParam.testNames:()[Ljava/lang/String;
   #71 = Utf8               copy$default$3
   #72 = NameAndType        #17:#55       // wildcardTestNames:()[Ljava/lang/String;
   #73 = Methodref          #2.#72        // org/scalatest/tools/NestedSuiteParam.wildcardTestNames:()[Ljava/lang/String;
   #74 = Utf8               productPrefix
   #75 = Utf8               NestedSuiteParam
   #76 = String             #75           // NestedSuiteParam
   #77 = Utf8               productArity
   #78 = Utf8               ()I
   #79 = Utf8               productElement
   #80 = Utf8               (I)Ljava/lang/Object;
   #81 = Utf8               x$1
   #82 = Utf8               scala/runtime/Statics
   #83 = Class              #82           // scala/runtime/Statics
   #84 = Utf8               ioobe
   #85 = NameAndType        #84:#80       // ioobe:(I)Ljava/lang/Object;
   #86 = Methodref          #83.#85       // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
   #87 = Utf8               I
   #88 = Utf8               productIterator
   #89 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #90 = Utf8               scala/runtime/ScalaRunTime$
   #91 = Class              #90           // scala/runtime/ScalaRunTime$
   #92 = Utf8               Lscala/runtime/ScalaRunTime$;
   #93 = NameAndType        #24:#92       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #94 = Fieldref           #91.#93       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #95 = Utf8               typedProductIterator
   #96 = NameAndType        #95:#48       // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #97 = Methodref          #91.#96       // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #98 = Utf8               canEqual
   #99 = Utf8               (Ljava/lang/Object;)Z
  #100 = Utf8               Ljava/lang/Object;
  #101 = Utf8               productElementName
  #102 = Utf8               (I)Ljava/lang/String;
  #103 = String             #13           // suiteId
  #104 = String             #15           // testNames
  #105 = String             #17           // wildcardTestNames
  #106 = Utf8               java/lang/String
  #107 = Class              #106          // java/lang/String
  #108 = Utf8               hashCode
  #109 = Utf8               _hashCode
  #110 = Utf8               (Lscala/Product;)I
  #111 = NameAndType        #109:#110     // _hashCode:(Lscala/Product;)I
  #112 = Methodref          #91.#111      // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
  #113 = Utf8               toString
  #114 = Utf8               _toString
  #115 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #116 = NameAndType        #114:#115     // _toString:(Lscala/Product;)Ljava/lang/String;
  #117 = Methodref          #91.#116      // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #118 = Utf8               equals
  #119 = NameAndType        #118:#99      // equals:(Ljava/lang/Object;)Z
  #120 = Methodref          #4.#119       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #121 = NameAndType        #98:#99       // canEqual:(Ljava/lang/Object;)Z
  #122 = Methodref          #2.#121       // org/scalatest/tools/NestedSuiteParam.canEqual:(Ljava/lang/Object;)Z
  #123 = Utf8               ()V
  #124 = NameAndType        #61:#123      // "<init>":()V
  #125 = Methodref          #4.#124       // java/lang/Object."<init>":()V
  #126 = Utf8               $init$
  #127 = Utf8               (Lscala/Product;)V
  #128 = NameAndType        #126:#127     // $init$:(Lscala/Product;)V
  #129 = InterfaceMethodref #6.#128       // scala/Product.$init$:(Lscala/Product;)V
  #130 = Utf8               Code
  #131 = Utf8               LocalVariableTable
  #132 = Utf8               Signature
  #133 = Utf8               MethodParameters
  #134 = Utf8               LineNumberTable
  #135 = Utf8               StackMapTable
  #136 = Utf8               SourceFile
  #137 = Utf8               RuntimeVisibleAnnotations
  #138 = Utf8               ScalaInlineInfo
  #139 = Utf8               ScalaSig
{
  private final java.lang.String suiteId;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String[] testNames;
    descriptor: [Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String[] wildcardTestNames;
    descriptor: [Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Option<scala.Tuple3<java.lang.String, java.lang.String[], java.lang.String[]>> unapply(org.scalatest.tools.NestedSuiteParam);
    descriptor: (Lorg/scalatest/tools/NestedSuiteParam;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field org/scalatest/tools/NestedSuiteParam$.MODULE$:Lorg/scalatest/tools/NestedSuiteParam$;
         3: aload_0
         4: invokevirtual #29                 // Method org/scalatest/tools/NestedSuiteParam$.unapply:(Lorg/scalatest/tools/NestedSuiteParam;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lorg/scalatest/tools/NestedSuiteParam;
    Signature: #20                          // (Lorg/scalatest/tools/NestedSuiteParam;)Lscala/Option<Lscala/Tuple3<Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static org.scalatest.tools.NestedSuiteParam apply(java.lang.String, java.lang.String[], java.lang.String[]);
    descriptor: (Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/scalatest/tools/NestedSuiteParam;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #27                 // Field org/scalatest/tools/NestedSuiteParam$.MODULE$:Lorg/scalatest/tools/NestedSuiteParam$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #34                 // Method org/scalatest/tools/NestedSuiteParam$.apply:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/scalatest/tools/NestedSuiteParam;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 suiteId   Ljava/lang/String;
            0      10     1 testNames   [Ljava/lang/String;
            0      10     2 wildcardTestNames   [Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      suiteId                        final
      testNames                      final
      wildcardTestNames              final

  public static scala.Function1<scala.Tuple3<java.lang.String, java.lang.String[], java.lang.String[]>, org.scalatest.tools.NestedSuiteParam> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field org/scalatest/tools/NestedSuiteParam$.MODULE$:Lorg/scalatest/tools/NestedSuiteParam$;
         3: invokevirtual #39                 // Method org/scalatest/tools/NestedSuiteParam$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #37                          // ()Lscala/Function1<Lscala/Tuple3<Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;>;Lorg/scalatest/tools/NestedSuiteParam;>;

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.String[], scala.Function1<java.lang.String[], org.scalatest.tools.NestedSuiteParam>>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field org/scalatest/tools/NestedSuiteParam$.MODULE$:Lorg/scalatest/tools/NestedSuiteParam$;
         3: invokevirtual #43                 // Method org/scalatest/tools/NestedSuiteParam$.curried:()Lscala/Function1;
         6: areturn
    Signature: #41                          // ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<[Ljava/lang/String;Lscala/Function1<[Ljava/lang/String;Lorg/scalatest/tools/NestedSuiteParam;>;>;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #50                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;
    Signature: #46                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String suiteId();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #54                 // Field suiteId:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public java.lang.String[] testNames();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #57                 // Field testNames:[Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public java.lang.String[] wildcardTestNames();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #59                 // Field wildcardTestNames:[Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public org.scalatest.tools.NestedSuiteParam copy(java.lang.String, java.lang.String[], java.lang.String[]);
    descriptor: (Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/scalatest/tools/NestedSuiteParam;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/scalatest/tools/NestedSuiteParam
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #64                 // Method "<init>":(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/scalatest/tools/NestedSuiteParam;
            0      11     1 suiteId   Ljava/lang/String;
            0      11     2 testNames   [Ljava/lang/String;
            0      11     3 wildcardTestNames   [Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      suiteId                        final
      testNames                      final
      wildcardTestNames              final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #67                 // Method suiteId:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public java.lang.String[] copy$default$2();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #70                 // Method testNames:()[Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public java.lang.String[] copy$default$3();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #73                 // Method wildcardTestNames:()[Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #76                 // String NestedSuiteParam
         2: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_3
         1: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 35
                       2: 42
                 default: 49
            }
        28: aload_0
        29: invokevirtual #67                 // Method suiteId:()Ljava/lang/String;
        32: goto          56
        35: aload_0
        36: invokevirtual #70                 // Method testNames:()[Ljava/lang/String;
        39: goto          56
        42: aload_0
        43: invokevirtual #73                 // Method wildcardTestNames:()[Ljava/lang/String;
        46: goto          56
        49: iload_1
        50: invokestatic  #86                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        53: goto          56
        56: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lorg/scalatest/tools/NestedSuiteParam;
            0      57     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #94                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #97                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/NestedSuiteParam;
    Signature: #89                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/tools/NestedSuiteParam
         4: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/NestedSuiteParam;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 33
                       2: 38
                 default: 43
            }
        28: ldc           #103                // String suiteId
        30: goto          53
        33: ldc           #104                // String testNames
        35: goto          53
        38: ldc           #105                // String wildcardTestNames
        40: goto          53
        43: iload_1
        44: invokestatic  #86                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        47: checkcast     #107                // class java/lang/String
        50: goto          53
        53: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lorg/scalatest/tools/NestedSuiteParam;
            0      54     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #94                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #112                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #94                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #117                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/NestedSuiteParam;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     110
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalatest/tools/NestedSuiteParam
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          114
        31: aload_1
        32: checkcast     #2                  // class org/scalatest/tools/NestedSuiteParam
        35: astore        4
        37: aload_0
        38: invokevirtual #67                 // Method suiteId:()Ljava/lang/String;
        41: aload         4
        43: invokevirtual #67                 // Method suiteId:()Ljava/lang/String;
        46: astore        5
        48: dup
        49: ifnonnull     61
        52: pop
        53: aload         5
        55: ifnull        69
        58: goto          106
        61: aload         5
        63: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        66: ifeq          106
        69: aload_0
        70: invokevirtual #70                 // Method testNames:()[Ljava/lang/String;
        73: aload         4
        75: invokevirtual #70                 // Method testNames:()[Ljava/lang/String;
        78: if_acmpne     106
        81: aload_0
        82: invokevirtual #73                 // Method wildcardTestNames:()[Ljava/lang/String;
        85: aload         4
        87: invokevirtual #73                 // Method wildcardTestNames:()[Ljava/lang/String;
        90: if_acmpne     106
        93: aload         4
        95: aload_0
        96: invokevirtual #122                // Method canEqual:(Ljava/lang/Object;)Z
        99: ifeq          106
       102: iconst_1
       103: goto          107
       106: iconst_0
       107: ifeq          114
       110: iconst_1
       111: goto          115
       114: iconst_0
       115: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/tools/NestedSuiteParam, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class org/scalatest/tools/NestedSuiteParam, class java/lang/Object, int, class java/lang/Object, class org/scalatest/tools/NestedSuiteParam, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 36 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/tools/NestedSuiteParam, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/tools/NestedSuiteParam, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     116     0  this   Lorg/scalatest/tools/NestedSuiteParam;
            0     116     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalatest.tools.NestedSuiteParam(java.lang.String, java.lang.String[], java.lang.String[]);
    descriptor: (Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #54                 // Field suiteId:Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #57                 // Field testNames:[Ljava/lang/String;
        10: aload_0
        11: aload_3
        12: putfield      #59                 // Field wildcardTestNames:[Ljava/lang/String;
        15: aload_0
        16: invokespecial #125                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: invokestatic  #129                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        23: return
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/scalatest/tools/NestedSuiteParam;
            0      24     1 suiteId   Ljava/lang/String;
            0      24     2 testNames   [Ljava/lang/String;
            0      24     3 wildcardTestNames   [Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      suiteId                        final
      testNames                      final
      wildcardTestNames              final
}
SourceFile: "NestedSuiteParam.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Md!\u0002\u000f\u001e\u0001v\u0019\u0003\u0002\u0003\u001e\u0001\u0005+\u0007I\u0011A\u001e\t\u0011\u0011\u0003!\u0011#Q\u0001\nqB\u0001\"\u0012\u0001\u0003\u0016\u0004%\tA\u0012\u0005\t\u0015\u0002\u0011\t\u0012)A\u0005\u000f\"A1\n\u0001BK\u0002\u0013\u0005a\t\u0003\u0005M\u0001\tE\t\u0015!\u0003H\u0011\u0015i\u0005\u0001\"\u0001O\u0011\u001d!\u0006!!A\u0005\u0002UCq!\u0017\u0001\u0012\u0002\u0013\u0005!\fC\u0004f\u0001E\u0005I\u0011\u00014\t\u000f!\u0004\u0011\u0013!C\u0001M\"9\u0011\u000eAA\u0001\n\u0003R\u0007b\u0002:\u0001\u0003\u0003%\ta\u001d\u0005\bo\u0002\t\t\u0011\"\u0001y\u0011\u001dq\b!!A\u0005B}D\u0011\"!\u0004\u0001\u0003\u0003%\t!a\u0004\t\u0013\u0005e\u0001!!A\u0005B\u0005m\u0001\"CA\u0010\u0001\u0005\u0005I\u0011IA\u0011\u0011%\t\u0019\u0003AA\u0001\n\u0003\n)\u0003C\u0005\u0002(\u0001\t\t\u0011\"\u0011\u0002*\u001dQ\u0011QF\u000f\u0002\u0002#\u0005Q$a\f\u0007\u0013qi\u0012\u0011!E\u0001;\u0005E\u0002BB\'\u0017\t\u0003\tI\u0005C\u0005\u0002$Y\t\t\u0011\"\u0012\u0002&!I\u00111\n\f\u0002\u0002\u0013\u0005\u0015Q\n\u0005\n\u0003+2\u0012\u0011!CA\u0003/B\u0011\"!\u001b\u0017\u0003\u0003%I!a\u001b\u0003!9+7\u000f^3e\'VLG/\u001a)be\u0006l\'B\u0001\u0010 \u0003\u0015!xn\u001c7t\u0015\t\u0001\u0013%A\u0005tG\u0006d\u0017\r^3ti*\t!%A\u0002pe\u001e\u001cB\u0001\u0001\u0013+[A\u0011Q\u0005K\u0007\u0002M)\tq%A\u0003tG\u0006d\u0017-\u0003\u0002*M\t1\u0011I\\=SK\u001a\u0004\"!J\u0016\n\u000512#a\u0002)s_\u0012,8\r\u001e\t\u0003]]r!aL\u001b\u000f\u0005A\"T\"A\u0019\u000b\u0005I\u001a\u0014A\u0002\u001fs_>$hh\u0001\u0001\n\u0003\u001dJ!A\u000e\u0014\u0002\u000fA\f7m[1hK&\u0011\u0001(\u000f\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003m\u0019\nqa];ji\u0016LE-F\u0001=!\ti\u0014I\u0004\u0002?\u007fA\u0011\u0001GJ\u0005\u0003\u0001\u001a\na\u0001\u0015:fI\u00164\u0017B\u0001\"D\u0005\u0019\u0019FO]5oO*\u0011\u0001IJ\u0001\tgVLG/Z%eA\u0005IA/Z:u\u001d\u0006lWm]\u000b\u0002\u000fB\u0019Q\u0005\u0013\u001f\n\u0005%3#!B!se\u0006L\u0018A\u0003;fgRt\u0015-\\3tA\u0005\tr/\u001b7eG\u0006\u0014H\rV3ti:\u000bW.Z:\u0002%]LG\u000eZ2be\u0012$Vm\u001d;OC6,7\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\t=\u000b&k\u0015\t\u0003!\u0002i\u0011!\b\u0005\u0006u\u001d\u0001\r\u0001\u0010\u0005\u0006\u000b\u001e\u0001\ra\u0012\u0005\u0006\u0017\u001e\u0001\raR\u0001\u0005G>\u0004\u0018\u0010\u0006\u0003P-^C\u0006b\u0002\u001e\t!\u0003\u0005\r\u0001\u0010\u0005\b\u000b\"\u0001\n\u00111\u0001H\u0011\u001dY\u0005\u0002%AA\u0002\u001d\u000babY8qs\u0012\"WMZ1vYR$\u0013\'F\u0001\\U\taDlK\u0001^!\tq6-D\u0001`\u0015\t\u0001\u0017-A\u0005v]\u000eDWmY6fI*\u0011!MJ\u0001\u000bC:tw\u000e^1uS>t\u0017B\u00013`\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00133+\u00059\'FA$]\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uIM\nQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DX#A6\u0011\u00051\fX\"A7\u000b\u00059|\u0017\u0001\u00027b]\u001eT\u0011\u0001]\u0001\u0005U\u00064\u0018-\u0003\u0002C[\u0006a\u0001O]8ek\u000e$\u0018I]5usV\tA\u000f\u0005\u0002&k&\u0011aO\n\u0002\u0004\u0013:$\u0018A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0003sr\u0004\"!\n>\n\u0005m4#aA!os\"9QPDA\u0001\u0002\u0004!\u0018a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0002\u0002A)\u00111AA\u0005s6\u0011\u0011Q\u0001\u0006\u0004\u0003\u000f1\u0013AC2pY2,7\r^5p]&!\u00111BA\u0003\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\t\u0005E\u0011q\u0003\t\u0004K\u0005M\u0011bAA\u000bM\t9!i\\8mK\u0006t\u0007bB?\u0011\u0003\u0003\u0005\r!_\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\rF\u0002l\u0003;Aq!`\t\u0002\u0002\u0003\u0007A/\u0001\u0005iCND7i\u001c3f)\u0005!\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003-\fa!Z9vC2\u001cH\u0003BA\t\u0003WAq! \u000b\u0002\u0002\u0003\u0007\u00110\u0001\tOKN$X\rZ*vSR,\u0007+\u0019:b[B\u0011\u0001KF\n\u0006-\u0005M\u0012q\b\t\t\u0003k\tY\u0004P$H\u001f6\u0011\u0011q\u0007\u0006\u0004\u0003s1\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003{\t9DA\tBEN$(/Y2u\rVt7\r^5p]N\u0002B!!\u0011\u0002H5\u0011\u00111\t\u0006\u0004\u0003\u000bz\u0017AA5p\u0013\rA\u00141\t\u000b\u0003\u0003_\tQ!\u00199qYf$raTA(\u0003#\n\u0019\u0006C\u0003;3\u0001\u0007A\bC\u0003F3\u0001\u0007q\tC\u0003L3\u0001\u0007q)A\u0004v]\u0006\u0004\b\u000f\\=\u0015\t\u0005e\u0013Q\r\t\u0006K\u0005m\u0013qL\u0005\u0004\u0003;2#AB(qi&|g\u000e\u0005\u0004&\u0003CbtiR\u0005\u0004\u0003G2#A\u0002+va2,7\u0007\u0003\u0005\u0002hi\t\t\u00111\u0001P\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003[\u00022\u0001\\A8\u0013\r\t\t(\u001c\u0002\u0007\u001f\nTWm\u0019;"
    )
  ScalaInlineInfo: length = 0x5E (unknown attribute)
   01 00 00 12 00 3D 00 3E 00 00 62 00 63 00 00 3C
   00 20 00 00 41 00 34 00 00 44 00 37 00 00 47 00
   37 00 00 76 00 63 00 00 6C 00 4E 00 00 4D 00 4E
   00 00 4F 00 50 00 00 65 00 66 00 00 2C 00 2D 00
   00 58 00 2D 00 00 4A 00 34 00 00 0D 00 34 00 00
   0F 00 37 00 00 71 00 34 00 00 11 00 37 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
