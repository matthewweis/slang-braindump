Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/JsonObject.class
  Last modified May 29, 2022; size 3545 bytes
  SHA-256 checksum ae770b20bdd62378d749ea52ef8dd7edd8c76fb02a7537ffe0de76436a456fb7
  Compiled from "JsonObject.scala"
public abstract class argonaut.JsonObject
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // argonaut/JsonObject
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 20, attributes: 4
Constant pool:
   #1 = Utf8               argonaut/JsonObject
   #2 = Class              #1             // argonaut/JsonObject
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               JsonObject.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005\u0005\u0005c!\u0002\r\u001a\u0003Ca\u0002\"B\u0012\u0001\t\u0003!\u0003\"B\u0014\u0001\r\u0003A\u0003\"B \u0001\r\u0003\u0001\u0005\"B#\u0001\r\u00031\u0005\"\u0002\'\u0001\r\u0003i\u0005\"B(\u0001\r\u0003\u0001\u0006\"\u0002*\u0001\r\u0003\u0019\u0006\"\u0002-\u0001\r\u0003I\u0006\"B0\u0001\r\u0003\u0001\u0007\"\u00023\u0001\r\u0003\u0001\u0007\"B3\u0001\r\u00031\u0007\"\u00025\u0001\r\u0003I\u0007\"\u0002<\u0001\r\u00039\b\"B=\u0001\r\u0003Q\b\"\u0002?\u0001\r\u0003i\bbBA\u0002\u0001\u0019\u0005\u0011Q\u0001\u0005\b\u0003\u0013\u0001a\u0011AA\u0006\u000f\u001d\tI\"\u0007E\u0001\u000371a\u0001G\r\t\u0002\u0005u\u0001BB\u0012\u0014\t\u0003\t)\u0003C\u0004\u0002(M!\t!!\u000b\t\u000f\u0005-2\u0003\"\u0001\u0002.!9\u00111G\n\u0005\u0002\u0005U\"A\u0003&t_:|%M[3di*\t!$\u0001\u0005be\u001e|g.Y;u\u0007\u0001\u0019\"\u0001A\u000f\u0011\u0005y\tS\"A\u0010\u000b\u0003\u0001\nQa]2bY\u0006L!AI\u0010\u0003\r\u0005s\u0017PU3g\u0003\u0019a\u0014N\\5u}Q\tQ\u0005\u0005\u0002\'\u00015\t\u0011$A\u0003u_6\u000b\u0007/F\u0001*!\u0011Q\u0013\u0007\u000e\u001f\u000f\u0005-z\u0003C\u0001\u0017 \u001b\u0005i#B\u0001\u0018\u001c\u0003\u0019a$o\\8u}%\u0011\u0001gH\u0001\u0007!J,G-\u001a4\n\u0005I\u001a$aA\'ba*\u0011\u0001g\b\t\u0003kar!A\n\u001c\n\u0005]J\u0012\u0001\u0002&t_:L!!\u000f\u001e\u0003\u0013)\u001bxN\u001c$jK2$\u0017BA\u001e\u001a\u0005\u0015Q5o\u001c8t!\t1S(\u0003\u0002?3\t!!j]8o\u0003\u0015!\u0003\u000f\\;t)\r)\u0013i\u0011\u0005\u0006\u0005\u000e\u0001\r\u0001N\u0001\u0002M\")Ai\u0001a\u0001y\u0005\t!.A\u0006%G>dwN\u001c\u0013qYV\u001cHCA\u0013H\u0011\u0015AE\u00011\u0001J\u0003\t1\'\u000e\u0005\u0003\u001f\u0015Rb\u0014BA& \u0005\u0019!V\u000f\u001d7fe\u0005YA\u0005\u001d7vg\u0012\u001aw\u000e\\8o)\t)c\nC\u0003I\u000b\u0001\u0007\u0011*\u0001\u0004%[&tWo\u001d\u000b\u0003KECQA\u0011\u0004A\u0002Q\nQ!\u00199qYf$\"\u0001V,\u0011\u0007y)F(\u0003\u0002W?\t1q\n\u001d;j_:DQAQ\u0004A\u0002Q\n\u0011b^5uQ*\u001bxN\\:\u0015\u0005\u0015R\u0006\"B.\t\u0001\u0004a\u0016!A6\u0011\tyiF\bP\u0005\u0003=~\u0011\u0011BR;oGRLwN\\\u0019\u0002\u000f%\u001cX)\u001c9usV\t\u0011\r\u0005\u0002\u001fE&\u00111m\b\u0002\b\u0005>|G.Z1o\u0003)I7OT8u\u000b6\u0004H/_\u0001\rIEl\u0017M]6%c6\f\'o\u001b\u000b\u0003C\u001eDQAQ\u0006A\u0002Q\na\u0001^8MSN$X#\u00016\u0011\u0007-\u00048O\u0004\u0002m]:\u0011A&\\\u0005\u0002A%\u0011qnH\u0001\ba\u0006\u001c7.Y4f\u0013\t\t(O\u0001\u0003MSN$(BA8 !\t)D/\u0003\u0002vu\tI!j]8o\u0003N\u001cxnY\u0001\u0007m\u0006dW/Z:\u0016\u0003a\u00042a\u001b9=\u0003\u00191\u0017.\u001a7egV\t1\u0010E\u0002laR\n\u0001BZ5fY\u0012\u001cV\r^\u000b\u0002}B\u0019!f \u001b\n\u0007\u0005\u00051GA\u0002TKR\f1!\\1q)\r)\u0013q\u0001\u0005\u0006\u0005B\u0001\r\u0001X\u0001\u0005g&TX-\u0006\u0002\u0002\u000eA\u0019a$a\u0004\n\u0007\u0005EqDA\u0002J]RL3\u0001AA\u000b\u0013\r\t9\"\u0007\u0002\u0013\u0015N|gn\u00142kK\u000e$\u0018J\\:uC:\u001cW-\u0001\u0006Kg>twJ\u00196fGR\u0004\"AJ\n\u0014\tMi\u0012q\u0004\t\u0004M\u0005\u0005\u0012bAA\u00123\tY!j]8o\u001f\nTWm\u0019;t)\t\tY\"A\u0003f[B$\u00180F\u0001&\u0003\u0019\u0019\u0018N\\4mKR)Q%a\f\u00022!)!I\u0006a\u0001i!)AI\u0006a\u0001y\u0005\u0019bM]8n)J\fg/\u001a:tC\ndWm\u00148dKR\u0019Q%a\u000e\t\u000f\u0005er\u00031\u0001\u0002<\u0005\tA\u000f\u0005\u0003l\u0003{I\u0015bAA e\nyAK]1wKJ\u001c\u0018M\u00197f\u001f:\u001cW\r
   #9 = Utf8               fromTraversableOnce
  #10 = Utf8               (Lscala/collection/IterableOnce;)Largonaut/JsonObject;
  #11 = Utf8               (Lscala/collection/IterableOnce<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/JsonObject;
  #12 = Utf8               t
  #13 = Utf8               argonaut/JsonObject$
  #14 = Class              #13            // argonaut/JsonObject$
  #15 = Utf8               MODULE$
  #16 = Utf8               Largonaut/JsonObject$;
  #17 = NameAndType        #15:#16        // MODULE$:Largonaut/JsonObject$;
  #18 = Fieldref           #14.#17        // argonaut/JsonObject$.MODULE$:Largonaut/JsonObject$;
  #19 = NameAndType        #9:#10         // fromTraversableOnce:(Lscala/collection/IterableOnce;)Largonaut/JsonObject;
  #20 = Methodref          #14.#19        // argonaut/JsonObject$.fromTraversableOnce:(Lscala/collection/IterableOnce;)Largonaut/JsonObject;
  #21 = Utf8               single
  #22 = Utf8               (Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
  #23 = Utf8               f
  #24 = Utf8               j
  #25 = NameAndType        #21:#22        // single:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
  #26 = Methodref          #14.#25        // argonaut/JsonObject$.single:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
  #27 = Utf8               empty
  #28 = Utf8               ()Largonaut/JsonObject;
  #29 = NameAndType        #27:#28        // empty:()Largonaut/JsonObject;
  #30 = Methodref          #14.#29        // argonaut/JsonObject$.empty:()Largonaut/JsonObject;
  #31 = Utf8               toMap
  #32 = Utf8               ()Lscala/collection/immutable/Map;
  #33 = Utf8               ()Lscala/collection/immutable/Map<Ljava/lang/String;Largonaut/Json;>;
  #34 = Utf8               $plus
  #35 = Utf8               $colon$plus
  #36 = Utf8               (Lscala/Tuple2;)Largonaut/JsonObject;
  #37 = Utf8               (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;)Largonaut/JsonObject;
  #38 = Utf8               fj
  #39 = Utf8               $plus$colon
  #40 = Utf8               $minus
  #41 = Utf8               (Ljava/lang/String;)Largonaut/JsonObject;
  #42 = Utf8               apply
  #43 = Utf8               (Ljava/lang/String;)Lscala/Option;
  #44 = Utf8               (Ljava/lang/String;)Lscala/Option<Largonaut/Json;>;
  #45 = Utf8               withJsons
  #46 = Utf8               (Lscala/Function1;)Largonaut/JsonObject;
  #47 = Utf8               (Lscala/Function1<Largonaut/Json;Largonaut/Json;>;)Largonaut/JsonObject;
  #48 = Utf8               k
  #49 = Utf8               isEmpty
  #50 = Utf8               ()Z
  #51 = Utf8               isNotEmpty
  #52 = Utf8               $qmark$qmark
  #53 = Utf8               (Ljava/lang/String;)Z
  #54 = Utf8               toList
  #55 = Utf8               ()Lscala/collection/immutable/List;
  #56 = Utf8               ()Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;
  #57 = Utf8               values
  #58 = Utf8               ()Lscala/collection/immutable/List<Largonaut/Json;>;
  #59 = Utf8               fields
  #60 = Utf8               ()Lscala/collection/immutable/List<Ljava/lang/String;>;
  #61 = Utf8               fieldSet
  #62 = Utf8               ()Lscala/collection/immutable/Set;
  #63 = Utf8               ()Lscala/collection/immutable/Set<Ljava/lang/String;>;
  #64 = Utf8               map
  #65 = Utf8               size
  #66 = Utf8               ()I
  #67 = Utf8               <init>
  #68 = Utf8               ()V
  #69 = NameAndType        #67:#68        // "<init>":()V
  #70 = Methodref          #4.#69         // java/lang/Object."<init>":()V
  #71 = Utf8               this
  #72 = Utf8               Largonaut/JsonObject;
  #73 = Utf8               Code
  #74 = Utf8               Signature
  #75 = Utf8               MethodParameters
  #76 = Utf8               LineNumberTable
  #77 = Utf8               LocalVariableTable
  #78 = Utf8               SourceFile
  #79 = Utf8               RuntimeVisibleAnnotations
  #80 = Utf8               ScalaInlineInfo
  #81 = Utf8               ScalaSig
{
  public static argonaut.JsonObject fromTraversableOnce(scala.collection.IterableOnce<scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/collection/IterableOnce;)Largonaut/JsonObject;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #18                 // Field argonaut/JsonObject$.MODULE$:Largonaut/JsonObject$;
         3: aload_0
         4: invokevirtual #20                 // Method argonaut/JsonObject$.fromTraversableOnce:(Lscala/collection/IterableOnce;)Largonaut/JsonObject;
         7: areturn
    Signature: #11                          // (Lscala/collection/IterableOnce<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      t                              final

  public static argonaut.JsonObject single(java.lang.String, argonaut.Json);
    descriptor: (Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #18                 // Field argonaut/JsonObject$.MODULE$:Largonaut/JsonObject$;
         3: aload_0
         4: aload_1
         5: invokevirtual #26                 // Method argonaut/JsonObject$.single:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
         8: areturn
    MethodParameters:
      Name                           Flags
      f                              final
      j                              final

  public static argonaut.JsonObject empty();
    descriptor: ()Largonaut/JsonObject;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #18                 // Field argonaut/JsonObject$.MODULE$:Largonaut/JsonObject$;
         3: invokevirtual #30                 // Method argonaut/JsonObject$.empty:()Largonaut/JsonObject;
         6: areturn

  public abstract scala.collection.immutable.Map<java.lang.String, argonaut.Json> toMap();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #33                          // ()Lscala/collection/immutable/Map<Ljava/lang/String;Largonaut/Json;>;

  public abstract argonaut.JsonObject $plus(java.lang.String, argonaut.Json);
    descriptor: (Ljava/lang/String;Largonaut/Json;)Largonaut/JsonObject;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      f                              final
      j                              final

  public abstract argonaut.JsonObject $colon$plus(scala.Tuple2<java.lang.String, argonaut.Json>);
    descriptor: (Lscala/Tuple2;)Largonaut/JsonObject;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #37                          // (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;)Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      fj                             final

  public abstract argonaut.JsonObject $plus$colon(scala.Tuple2<java.lang.String, argonaut.Json>);
    descriptor: (Lscala/Tuple2;)Largonaut/JsonObject;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #37                          // (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;)Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      fj                             final

  public abstract argonaut.JsonObject $minus(java.lang.String);
    descriptor: (Ljava/lang/String;)Largonaut/JsonObject;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract scala.Option<argonaut.Json> apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #44                          // (Ljava/lang/String;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract argonaut.JsonObject withJsons(scala.Function1<argonaut.Json, argonaut.Json>);
    descriptor: (Lscala/Function1;)Largonaut/JsonObject;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #47                          // (Lscala/Function1<Largonaut/Json;Largonaut/Json;>;)Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      k                              final

  public abstract boolean isEmpty();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isNotEmpty();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean $qmark$qmark(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract scala.collection.immutable.List<scala.Tuple2<java.lang.String, argonaut.Json>> toList();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #56                          // ()Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;

  public abstract scala.collection.immutable.List<argonaut.Json> values();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #58                          // ()Lscala/collection/immutable/List<Largonaut/Json;>;

  public abstract scala.collection.immutable.List<java.lang.String> fields();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #60                          // ()Lscala/collection/immutable/List<Ljava/lang/String;>;

  public abstract scala.collection.immutable.Set<java.lang.String> fieldSet();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #63                          // ()Lscala/collection/immutable/Set<Ljava/lang/String;>;

  public abstract argonaut.JsonObject map(scala.Function1<argonaut.Json, argonaut.Json>);
    descriptor: (Lscala/Function1;)Largonaut/JsonObject;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #47                          // (Lscala/Function1<Largonaut/Json;Largonaut/Json;>;)Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract int size();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public argonaut.JsonObject();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #70                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 92: 0
        line 10: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonObject;
}
SourceFile: "JsonObject.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u0005c!\u0002\r\u001a\u0003Ca\u0002\"B\u0012\u0001\t\u0003!\u0003\"B\u0014\u0001\r\u0003A\u0003\"B \u0001\r\u0003\u0001\u0005\"B#\u0001\r\u00031\u0005\"\u0002\'\u0001\r\u0003i\u0005\"B(\u0001\r\u0003\u0001\u0006\"\u0002*\u0001\r\u0003\u0019\u0006\"\u0002-\u0001\r\u0003I\u0006\"B0\u0001\r\u0003\u0001\u0007\"\u00023\u0001\r\u0003\u0001\u0007\"B3\u0001\r\u00031\u0007\"\u00025\u0001\r\u0003I\u0007\"\u0002<\u0001\r\u00039\b\"B=\u0001\r\u0003Q\b\"\u0002?\u0001\r\u0003i\bbBA\u0002\u0001\u0019\u0005\u0011Q\u0001\u0005\b\u0003\u0013\u0001a\u0011AA\u0006\u000f\u001d\tI\"\u0007E\u0001\u000371a\u0001G\r\t\u0002\u0005u\u0001BB\u0012\u0014\t\u0003\t)\u0003C\u0004\u0002(M!\t!!\u000b\t\u000f\u0005-2\u0003\"\u0001\u0002.!9\u00111G\n\u0005\u0002\u0005U\"A\u0003&t_:|%M[3di*\t!$\u0001\u0005be\u001e|g.Y;u\u0007\u0001\u0019\"\u0001A\u000f\u0011\u0005y\tS\"A\u0010\u000b\u0003\u0001\nQa]2bY\u0006L!AI\u0010\u0003\r\u0005s\u0017PU3g\u0003\u0019a\u0014N\\5u}Q\tQ\u0005\u0005\u0002\'\u00015\t\u0011$A\u0003u_6\u000b\u0007/F\u0001*!\u0011Q\u0013\u0007\u000e\u001f\u000f\u0005-z\u0003C\u0001\u0017 \u001b\u0005i#B\u0001\u0018\u001c\u0003\u0019a$o\\8u}%\u0011\u0001gH\u0001\u0007!J,G-\u001a4\n\u0005I\u001a$aA\'ba*\u0011\u0001g\b\t\u0003kar!A\n\u001c\n\u0005]J\u0012\u0001\u0002&t_:L!!\u000f\u001e\u0003\u0013)\u001bxN\u001c$jK2$\u0017BA\u001e\u001a\u0005\u0015Q5o\u001c8t!\t1S(\u0003\u0002?3\t!!j]8o\u0003\u0015!\u0003\u000f\\;t)\r)\u0013i\u0011\u0005\u0006\u0005\u000e\u0001\r\u0001N\u0001\u0002M\")Ai\u0001a\u0001y\u0005\t!.A\u0006%G>dwN\u001c\u0013qYV\u001cHCA\u0013H\u0011\u0015AE\u00011\u0001J\u0003\t1\'\u000e\u0005\u0003\u001f\u0015Rb\u0014BA& \u0005\u0019!V\u000f\u001d7fe\u0005YA\u0005\u001d7vg\u0012\u001aw\u000e\\8o)\t)c\nC\u0003I\u000b\u0001\u0007\u0011*\u0001\u0004%[&tWo\u001d\u000b\u0003KECQA\u0011\u0004A\u0002Q\nQ!\u00199qYf$\"\u0001V,\u0011\u0007y)F(\u0003\u0002W?\t1q\n\u001d;j_:DQAQ\u0004A\u0002Q\n\u0011b^5uQ*\u001bxN\\:\u0015\u0005\u0015R\u0006\"B.\t\u0001\u0004a\u0016!A6\u0011\tyiF\bP\u0005\u0003=~\u0011\u0011BR;oGRLwN\\\u0019\u0002\u000f%\u001cX)\u001c9usV\t\u0011\r\u0005\u0002\u001fE&\u00111m\b\u0002\b\u0005>|G.Z1o\u0003)I7OT8u\u000b6\u0004H/_\u0001\rIEl\u0017M]6%c6\f\'o\u001b\u000b\u0003C\u001eDQAQ\u0006A\u0002Q\na\u0001^8MSN$X#\u00016\u0011\u0007-\u00048O\u0004\u0002m]:\u0011A&\\\u0005\u0002A%\u0011qnH\u0001\ba\u0006\u001c7.Y4f\u0013\t\t(O\u0001\u0003MSN$(BA8 !\t)D/\u0003\u0002vu\tI!j]8o\u0003N\u001cxnY\u0001\u0007m\u0006dW/Z:\u0016\u0003a\u00042a\u001b9=\u0003\u00191\u0017.\u001a7egV\t1\u0010E\u0002laR\n\u0001BZ5fY\u0012\u001cV\r^\u000b\u0002}B\u0019!f \u001b\n\u0007\u0005\u00051GA\u0002TKR\f1!\\1q)\r)\u0013q\u0001\u0005\u0006\u0005B\u0001\r\u0001X\u0001\u0005g&TX-\u0006\u0002\u0002\u000eA\u0019a$a\u0004\n\u0007\u0005EqDA\u0002J]RL3\u0001AA\u000b\u0013\r\t9\"\u0007\u0002\u0013\u0015N|gn\u00142kK\u000e$\u0018J\\:uC:\u001cW-\u0001\u0006Kg>twJ\u00196fGR\u0004\"AJ\n\u0014\tMi\u0012q\u0004\t\u0004M\u0005\u0005\u0012bAA\u00123\tY!j]8o\u001f\nTWm\u0019;t)\t\tY\"A\u0003f[B$\u00180F\u0001&\u0003\u0019\u0019\u0018N\\4mKR)Q%a\f\u00022!)!I\u0006a\u0001i!)AI\u0006a\u0001y\u0005\u0019bM]8n)J\fg/\u001a:tC\ndWm\u00148dKR\u0019Q%a\u000e\t\u000f\u0005er\u00031\u0001\u0002<\u0005\tA\u000f\u0005\u0003l\u0003{I\u0015bAA e\nyAK]1wKJ\u001c\u0018M\u00197f\u001f:\u001cW\r"
    )
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 00 00 11 00 23 00 24 00 00 28 00 29 00 00 22
   00 16 00 00 27 00 24 00 00 34 00 35 00 00 43 00
   44 00 00 2A 00 2B 00 00 3D 00 3E 00 00 3B 00 37
   00 00 31 00 32 00 00 33 00 32 00 00 40 00 2E 00
   00 41 00 42 00 00 36 00 37 00 00 1F 00 20 00 00
   39 00 37 00 00 2D 00 2E 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
