Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/HashSMap$.class
  Last modified May 29, 2022; size 2819 bytes
  SHA-256 checksum b55fe741a35d0d972e6213cf874587694103d1ab391605e98f505d08cd0b0604
  Compiled from "HashSMap.scala"
public final class org.sireum.HashSMap$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/HashSMap$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 7, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/HashSMap$
    #2 = Class              #1            // org/sireum/HashSMap$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               HashSMap.scala
    #6 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
    #7 = Class              #6            // org/sireum/$internal/PackageTrait$ISZ$
    #8 = Utf8               org/sireum/$internal/PackageTrait
    #9 = Class              #8            // org/sireum/$internal/PackageTrait
   #10 = Utf8               ISZ$
   #11 = Utf8               MODULE$
   #12 = Utf8               Lorg/sireum/HashSMap$;
   #13 = Utf8               <clinit>
   #14 = Utf8               ()V
   #15 = Utf8               <init>
   #16 = NameAndType        #15:#14       // "<init>":()V
   #17 = Methodref          #2.#16        // org/sireum/HashSMap$."<init>":()V
   #18 = NameAndType        #11:#12       // MODULE$:Lorg/sireum/HashSMap$;
   #19 = Fieldref           #2.#18        // org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
   #20 = Utf8               empty
   #21 = Utf8               ()Lorg/sireum/HashSMap;
   #22 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashSMap<TK;TT;>;
   #23 = Utf8               org/sireum/HashMap$
   #24 = Class              #23           // org/sireum/HashMap$
   #25 = Utf8               Lorg/sireum/HashMap$;
   #26 = NameAndType        #11:#25       // MODULE$:Lorg/sireum/HashMap$;
   #27 = Fieldref           #24.#26       // org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
   #28 = Utf8               ()Lorg/sireum/HashMap;
   #29 = NameAndType        #20:#28       // empty:()Lorg/sireum/HashMap;
   #30 = Methodref          #24.#29       // org/sireum/HashMap$.empty:()Lorg/sireum/HashMap;
   #31 = Utf8               org/sireum/package$
   #32 = Class              #31           // org/sireum/package$
   #33 = Utf8               Lorg/sireum/package$;
   #34 = NameAndType        #11:#33       // MODULE$:Lorg/sireum/package$;
   #35 = Fieldref           #32.#34       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #36 = Utf8               ISZ
   #37 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #38 = NameAndType        #36:#37       // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #39 = Methodref          #32.#38       // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #40 = Utf8               scala/collection/immutable/Nil$
   #41 = Class              #40           // scala/collection/immutable/Nil$
   #42 = Utf8               Lscala/collection/immutable/Nil$;
   #43 = NameAndType        #11:#42       // MODULE$:Lscala/collection/immutable/Nil$;
   #44 = Fieldref           #41.#43       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #45 = Utf8               apply
   #46 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #47 = NameAndType        #45:#46       // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #48 = Methodref          #7.#47        // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #49 = Utf8               (Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #50 = NameAndType        #45:#49       // apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #51 = Methodref          #2.#50        // org/sireum/HashSMap$.apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #52 = Utf8               this
   #53 = Utf8               emptyInit
   #54 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashSMap;
   #55 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashSMap<TK;TT;>;
   #56 = Utf8               initialCapacity
   #57 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #58 = NameAndType        #53:#57       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #59 = Methodref          #24.#58       // org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #60 = Utf8               Lorg/sireum/Z;
   #61 = Utf8               $plus$plus
   #62 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #63 = Utf8               <I:Ljava/lang/Object;K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashSMap<TK;TT;>;
   #64 = Utf8               s
   #65 = Utf8               org/sireum/IS
   #66 = Class              #65           // org/sireum/IS
   #67 = Utf8               size
   #68 = Utf8               ()Lorg/sireum/Z;
   #69 = NameAndType        #67:#68       // size:()Lorg/sireum/Z;
   #70 = Methodref          #66.#69       // org/sireum/IS.size:()Lorg/sireum/Z;
   #71 = NameAndType        #53:#54       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
   #72 = Methodref          #2.#71        // org/sireum/HashSMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
   #73 = Utf8               org/sireum/HashSMap
   #74 = Class              #73           // org/sireum/HashSMap
   #75 = NameAndType        #61:#62       // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #76 = Methodref          #74.#75       // org/sireum/HashSMap.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #77 = Utf8               Lorg/sireum/IS;
   #78 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)Lorg/sireum/HashSMap<TK;TT;>;
   #79 = Utf8               map
   #80 = Utf8               keys
   #81 = Utf8               (Lorg/sireum/HashMap;Lorg/sireum/IS;)V
   #82 = NameAndType        #15:#81       // "<init>":(Lorg/sireum/HashMap;Lorg/sireum/IS;)V
   #83 = Methodref          #74.#82       // org/sireum/HashSMap."<init>":(Lorg/sireum/HashMap;Lorg/sireum/IS;)V
   #84 = Utf8               Lorg/sireum/HashMap;
   #85 = Utf8               unapply
   #86 = Utf8               (Lorg/sireum/HashSMap;)Lscala/Some;
   #87 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;>;>;
   #88 = Utf8               o
   #89 = Utf8               scala/Some
   #90 = Class              #89           // scala/Some
   #91 = Utf8               scala/Tuple2
   #92 = Class              #91           // scala/Tuple2
   #93 = NameAndType        #79:#28       // map:()Lorg/sireum/HashMap;
   #94 = Methodref          #74.#93       // org/sireum/HashSMap.map:()Lorg/sireum/HashMap;
   #95 = Utf8               ()Lorg/sireum/IS;
   #96 = NameAndType        #80:#95       // keys:()Lorg/sireum/IS;
   #97 = Methodref          #74.#96       // org/sireum/HashSMap.keys:()Lorg/sireum/IS;
   #98 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #99 = NameAndType        #15:#98       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #100 = Methodref          #92.#99       // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #101 = Utf8               (Ljava/lang/Object;)V
  #102 = NameAndType        #15:#101      // "<init>":(Ljava/lang/Object;)V
  #103 = Methodref          #90.#102      // scala/Some."<init>":(Ljava/lang/Object;)V
  #104 = Utf8               Lorg/sireum/HashSMap;
  #105 = Methodref          #4.#16        // java/lang/Object."<init>":()V
  #106 = Utf8               Code
  #107 = Utf8               LineNumberTable
  #108 = Utf8               LocalVariableTable
  #109 = Utf8               Signature
  #110 = Utf8               MethodParameters
  #111 = Utf8               InnerClasses
  #112 = Utf8               SourceFile
  #113 = Utf8               ScalaInlineInfo
  #114 = Utf8               Scala
{
  public static final org.sireum.HashSMap$ MODULE$;
    descriptor: Lorg/sireum/HashSMap$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/HashSMap$
         3: dup
         4: invokespecial #17                 // Method "<init>":()V
         7: putstatic     #19                 // Field MODULE$:Lorg/sireum/HashSMap$;
        10: return
      LineNumberTable:
        line 29: 0

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashSMap<K, T> empty();
    descriptor: ()Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getstatic     #27                 // Field org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
         4: invokevirtual #30                 // Method org/sireum/HashMap$.empty:()Lorg/sireum/HashMap;
         7: getstatic     #35                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        10: invokevirtual #39                 // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        13: getstatic     #44                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        16: invokevirtual #48                 // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        19: invokevirtual #51                 // Method apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        22: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashSMap$;
    Signature: #22                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashSMap<TK;TT;>;

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashSMap<K, T> emptyInit(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getstatic     #27                 // Field org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
         4: aload_1
         5: invokevirtual #59                 // Method org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
         8: getstatic     #35                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        11: invokevirtual #39                 // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        14: getstatic     #44                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        17: invokevirtual #48                 // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        20: invokevirtual #51                 // Method apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        23: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/sireum/HashSMap$;
            0      24     1 initialCapacity   Lorg/sireum/Z;
    Signature: #55                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      initialCapacity                final

  public <I extends java.lang.Object, K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashSMap<K, T> $plus$plus(org.sireum.IS<I, scala.Tuple2<K, T>>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #70                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
         5: invokevirtual #72                 // Method emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
         8: aload_1
         9: invokevirtual #76                 // Method org/sireum/HashSMap.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        12: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/HashSMap$;
            0      13     1     s   Lorg/sireum/IS;
    Signature: #63                          // <I:Ljava/lang/Object;K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashSMap<K, T> apply(org.sireum.HashMap<K, T>, org.sireum.IS<org.sireum.Z, K>);
    descriptor: (Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #74                 // class org/sireum/HashSMap
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #83                 // Method org/sireum/HashSMap."<init>":(Lorg/sireum/HashMap;Lorg/sireum/IS;)V
         9: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/HashSMap$;
            0      10     1   map   Lorg/sireum/HashMap;
            0      10     2  keys   Lorg/sireum/IS;
    Signature: #78                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      map                            final
      keys                           final

  public <K extends java.lang.Object, T extends java.lang.Object> scala.Some<scala.Tuple2<org.sireum.HashMap<K, T>, org.sireum.IS<org.sireum.Z, K>>> unapply(org.sireum.HashSMap<K, T>);
    descriptor: (Lorg/sireum/HashSMap;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #90                 // class scala/Some
         3: dup
         4: new           #92                 // class scala/Tuple2
         7: dup
         8: aload_1
         9: invokevirtual #94                 // Method org/sireum/HashSMap.map:()Lorg/sireum/HashMap;
        12: aload_1
        13: invokevirtual #97                 // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        16: invokespecial #100                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        19: invokespecial #103                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        22: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashSMap$;
            0      23     1     o   Lorg/sireum/HashSMap;
    Signature: #87                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  private org.sireum.HashSMap$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #105                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap$;
}
InnerClasses:
  public #10= #7 of #9;                   // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
SourceFile: "HashSMap.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 3D 00 3E 01 00 0F 00 0E 01 00 2D
   00 31 01 00 14 00 15 01 00 35 00 36 01 00 55 00
   56 01
  Scala: length = 0x0 (unknown attribute)

