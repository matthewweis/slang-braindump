Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/objectweb/asm/TypePath.class
  Last modified May 29, 2022; size 2634 bytes
  SHA-256 checksum 9445f17849afa9eb0114bde7ab06f6f7354bd75f184c88dadff39611b2339d95
  Compiled from "TypePath.java"
public final class org.objectweb.asm.TypePath
  minor version: 0
  major version: 49
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/objectweb/asm/TypePath
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 6, methods: 7, attributes: 1
Constant pool:
    #1 = Utf8               org/objectweb/asm/TypePath
    #2 = Class              #1            // org/objectweb/asm/TypePath
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               TypePath.java
    #6 = Utf8               ARRAY_ELEMENT
    #7 = Utf8               I
    #8 = Integer            0
    #9 = Utf8               INNER_TYPE
   #10 = Integer            1
   #11 = Utf8               WILDCARD_BOUND
   #12 = Integer            2
   #13 = Utf8               TYPE_ARGUMENT
   #14 = Integer            3
   #15 = Utf8               typePathContainer
   #16 = Utf8               [B
   #17 = Utf8               typePathOffset
   #18 = Utf8               <init>
   #19 = Utf8               ([BI)V
   #20 = Utf8               ()V
   #21 = NameAndType        #18:#20       // "<init>":()V
   #22 = Methodref          #4.#21        // java/lang/Object."<init>":()V
   #23 = NameAndType        #15:#16       // typePathContainer:[B
   #24 = Fieldref           #2.#23        // org/objectweb/asm/TypePath.typePathContainer:[B
   #25 = NameAndType        #17:#7        // typePathOffset:I
   #26 = Fieldref           #2.#25        // org/objectweb/asm/TypePath.typePathOffset:I
   #27 = Utf8               this
   #28 = Utf8               Lorg/objectweb/asm/TypePath;
   #29 = Utf8               getLength
   #30 = Utf8               ()I
   #31 = Utf8               getStep
   #32 = Utf8               (I)I
   #33 = Utf8               index
   #34 = Utf8               getStepArgument
   #35 = Utf8               fromString
   #36 = Utf8               (Ljava/lang/String;)Lorg/objectweb/asm/TypePath;
   #37 = Utf8               java/lang/String
   #38 = Class              #37           // java/lang/String
   #39 = Utf8               length
   #40 = NameAndType        #39:#30       // length:()I
   #41 = Methodref          #38.#40       // java/lang/String.length:()I
   #42 = Utf8               org/objectweb/asm/ByteVector
   #43 = Class              #42           // org/objectweb/asm/ByteVector
   #44 = Utf8               (I)V
   #45 = NameAndType        #18:#44       // "<init>":(I)V
   #46 = Methodref          #43.#45       // org/objectweb/asm/ByteVector."<init>":(I)V
   #47 = Utf8               putByte
   #48 = Utf8               (I)Lorg/objectweb/asm/ByteVector;
   #49 = NameAndType        #47:#48       // putByte:(I)Lorg/objectweb/asm/ByteVector;
   #50 = Methodref          #43.#49       // org/objectweb/asm/ByteVector.putByte:(I)Lorg/objectweb/asm/ByteVector;
   #51 = Utf8               charAt
   #52 = Utf8               (I)C
   #53 = NameAndType        #51:#52       // charAt:(I)C
   #54 = Methodref          #38.#53       // java/lang/String.charAt:(I)C
   #55 = Utf8               put11
   #56 = Utf8               (II)Lorg/objectweb/asm/ByteVector;
   #57 = NameAndType        #55:#56       // put11:(II)Lorg/objectweb/asm/ByteVector;
   #58 = Methodref          #43.#57       // org/objectweb/asm/ByteVector.put11:(II)Lorg/objectweb/asm/ByteVector;
   #59 = Utf8               java/lang/IllegalArgumentException
   #60 = Class              #59           // java/lang/IllegalArgumentException
   #61 = Methodref          #60.#21       // java/lang/IllegalArgumentException."<init>":()V
   #62 = Utf8               data
   #63 = NameAndType        #62:#16       // data:[B
   #64 = Fieldref           #43.#63       // org/objectweb/asm/ByteVector.data:[B
   #65 = NameAndType        #39:#7        // length:I
   #66 = Fieldref           #43.#65       // org/objectweb/asm/ByteVector.length:I
   #67 = NameAndType        #18:#19       // "<init>":([BI)V
   #68 = Methodref          #2.#67        // org/objectweb/asm/TypePath."<init>":([BI)V
   #69 = Utf8               typeArg
   #70 = Utf8               c
   #71 = Utf8               C
   #72 = Utf8               typePath
   #73 = Utf8               Ljava/lang/String;
   #74 = Utf8               typePathLength
   #75 = Utf8               output
   #76 = Utf8               Lorg/objectweb/asm/ByteVector;
   #77 = Utf8               typePathIndex
   #78 = Utf8               toString
   #79 = Utf8               ()Ljava/lang/String;
   #80 = NameAndType        #29:#30       // getLength:()I
   #81 = Methodref          #2.#80        // org/objectweb/asm/TypePath.getLength:()I
   #82 = Utf8               java/lang/StringBuilder
   #83 = Class              #82           // java/lang/StringBuilder
   #84 = Methodref          #83.#45       // java/lang/StringBuilder."<init>":(I)V
   #85 = NameAndType        #31:#32       // getStep:(I)I
   #86 = Methodref          #2.#85        // org/objectweb/asm/TypePath.getStep:(I)I
   #87 = Utf8               append
   #88 = Utf8               (C)Ljava/lang/StringBuilder;
   #89 = NameAndType        #87:#88       // append:(C)Ljava/lang/StringBuilder;
   #90 = Methodref          #83.#89       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #91 = NameAndType        #34:#32       // getStepArgument:(I)I
   #92 = Methodref          #2.#91        // org/objectweb/asm/TypePath.getStepArgument:(I)I
   #93 = Utf8               (I)Ljava/lang/StringBuilder;
   #94 = NameAndType        #87:#93       // append:(I)Ljava/lang/StringBuilder;
   #95 = Methodref          #83.#94       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #96 = Utf8               java/lang/AssertionError
   #97 = Class              #96           // java/lang/AssertionError
   #98 = Methodref          #97.#21       // java/lang/AssertionError."<init>":()V
   #99 = NameAndType        #78:#79       // toString:()Ljava/lang/String;
  #100 = Methodref          #83.#99       // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #101 = Utf8               i
  #102 = Utf8               result
  #103 = Utf8               Ljava/lang/StringBuilder;
  #104 = Utf8               put
  #105 = Utf8               (Lorg/objectweb/asm/TypePath;Lorg/objectweb/asm/ByteVector;)V
  #106 = Utf8               putByteArray
  #107 = Utf8               ([BII)Lorg/objectweb/asm/ByteVector;
  #108 = NameAndType        #106:#107     // putByteArray:([BII)Lorg/objectweb/asm/ByteVector;
  #109 = Methodref          #43.#108      // org/objectweb/asm/ByteVector.putByteArray:([BII)Lorg/objectweb/asm/ByteVector;
  #110 = Utf8               ConstantValue
  #111 = Utf8               Code
  #112 = Utf8               LineNumberTable
  #113 = Utf8               LocalVariableTable
  #114 = Utf8               SourceFile
{
  public static final int ARRAY_ELEMENT;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 0

  public static final int INNER_TYPE;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1

  public static final int WILDCARD_BOUND;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2

  public static final int TYPE_ARGUMENT;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 3

  private final byte[] typePathContainer;
    descriptor: [B
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int typePathOffset;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  org.objectweb.asm.TypePath(byte[], int);
    descriptor: ([BI)V
    flags: (0x0000)
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #22                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #24                 // Field typePathContainer:[B
         9: aload_0
        10: iload_2
        11: putfield      #26                 // Field typePathOffset:I
        14: return
      LineNumberTable:
        line 72: 0
        line 73: 4
        line 74: 9
        line 75: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/objectweb/asm/TypePath;
            0      15     1 typePathContainer   [B
            0      15     2 typePathOffset   I

  public int getLength();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #24                 // Field typePathContainer:[B
         4: aload_0
         5: getfield      #26                 // Field typePathOffset:I
         8: baload
         9: ireturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/objectweb/asm/TypePath;

  public int getStep(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getfield      #24                 // Field typePathContainer:[B
         4: aload_0
         5: getfield      #26                 // Field typePathOffset:I
         8: iconst_2
         9: iload_1
        10: imul
        11: iadd
        12: iconst_1
        13: iadd
        14: baload
        15: ireturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/objectweb/asm/TypePath;
            0      16     1 index   I

  public int getStepArgument(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getfield      #24                 // Field typePathContainer:[B
         4: aload_0
         5: getfield      #26                 // Field typePathOffset:I
         8: iconst_2
         9: iload_1
        10: imul
        11: iadd
        12: iconst_2
        13: iadd
        14: baload
        15: ireturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/objectweb/asm/TypePath;
            0      16     1 index   I

  public static org.objectweb.asm.TypePath fromString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/objectweb/asm/TypePath;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: ifnull        11
         4: aload_0
         5: invokevirtual #41                 // Method java/lang/String.length:()I
         8: ifne          13
        11: aconst_null
        12: areturn
        13: aload_0
        14: invokevirtual #41                 // Method java/lang/String.length:()I
        17: istore_1
        18: new           #43                 // class org/objectweb/asm/ByteVector
        21: dup
        22: iload_1
        23: invokespecial #46                 // Method org/objectweb/asm/ByteVector."<init>":(I)V
        26: astore_2
        27: aload_2
        28: iconst_0
        29: invokevirtual #50                 // Method org/objectweb/asm/ByteVector.putByte:(I)Lorg/objectweb/asm/ByteVector;
        32: pop
        33: iconst_0
        34: istore_3
        35: iload_3
        36: iload_1
        37: if_icmpge     207
        40: aload_0
        41: iload_3
        42: iinc          3, 1
        45: invokevirtual #54                 // Method java/lang/String.charAt:(I)C
        48: istore        4
        50: iload         4
        52: bipush        91
        54: if_icmpne     67
        57: aload_2
        58: iconst_0
        59: iconst_0
        60: invokevirtual #58                 // Method org/objectweb/asm/ByteVector.put11:(II)Lorg/objectweb/asm/ByteVector;
        63: pop
        64: goto          204
        67: iload         4
        69: bipush        46
        71: if_icmpne     84
        74: aload_2
        75: iconst_1
        76: iconst_0
        77: invokevirtual #58                 // Method org/objectweb/asm/ByteVector.put11:(II)Lorg/objectweb/asm/ByteVector;
        80: pop
        81: goto          204
        84: iload         4
        86: bipush        42
        88: if_icmpne     101
        91: aload_2
        92: iconst_2
        93: iconst_0
        94: invokevirtual #58                 // Method org/objectweb/asm/ByteVector.put11:(II)Lorg/objectweb/asm/ByteVector;
        97: pop
        98: goto          204
       101: iload         4
       103: bipush        48
       105: if_icmplt     196
       108: iload         4
       110: bipush        57
       112: if_icmpgt     196
       115: iload         4
       117: bipush        48
       119: isub
       120: istore        5
       122: iload_3
       123: iload_1
       124: if_icmpge     185
       127: aload_0
       128: iload_3
       129: iinc          3, 1
       132: invokevirtual #54                 // Method java/lang/String.charAt:(I)C
       135: istore        4
       137: iload         4
       139: bipush        48
       141: if_icmplt     167
       144: iload         4
       146: bipush        57
       148: if_icmpgt     167
       151: iload         5
       153: bipush        10
       155: imul
       156: iload         4
       158: iadd
       159: bipush        48
       161: isub
       162: istore        5
       164: goto          122
       167: iload         4
       169: bipush        59
       171: if_icmpne     177
       174: goto          185
       177: new           #60                 // class java/lang/IllegalArgumentException
       180: dup
       181: invokespecial #61                 // Method java/lang/IllegalArgumentException."<init>":()V
       184: athrow
       185: aload_2
       186: iconst_3
       187: iload         5
       189: invokevirtual #58                 // Method org/objectweb/asm/ByteVector.put11:(II)Lorg/objectweb/asm/ByteVector;
       192: pop
       193: goto          204
       196: new           #60                 // class java/lang/IllegalArgumentException
       199: dup
       200: invokespecial #61                 // Method java/lang/IllegalArgumentException."<init>":()V
       203: athrow
       204: goto          35
       207: aload_2
       208: getfield      #64                 // Field org/objectweb/asm/ByteVector.data:[B
       211: iconst_0
       212: aload_2
       213: getfield      #66                 // Field org/objectweb/asm/ByteVector.length:I
       216: iconst_2
       217: idiv
       218: i2b
       219: bastore
       220: new           #2                  // class org/objectweb/asm/TypePath
       223: dup
       224: aload_2
       225: getfield      #64                 // Field org/objectweb/asm/ByteVector.data:[B
       228: iconst_0
       229: invokespecial #68                 // Method "<init>":([BI)V
       232: areturn
      LineNumberTable:
        line 120: 0
        line 121: 11
        line 123: 13
        line 124: 18
        line 125: 27
        line 126: 33
        line 127: 35
        line 128: 40
        line 129: 50
        line 130: 57
        line 131: 67
        line 132: 74
        line 133: 84
        line 134: 91
        line 135: 101
        line 136: 115
        line 137: 122
        line 138: 127
        line 139: 137
        line 140: 151
        line 141: 167
        line 142: 174
        line 144: 177
        line 147: 185
        line 148: 193
        line 149: 196
        line 151: 204
        line 152: 207
        line 153: 220
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          122      71     5 typeArg   I
           50     154     4     c   C
            0     233     0 typePath   Ljava/lang/String;
           18     215     1 typePathLength   I
           27     206     2 output   Lorg/objectweb/asm/ByteVector;
           35     198     3 typePathIndex   I

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokevirtual #81                 // Method getLength:()I
         4: istore_1
         5: new           #83                 // class java/lang/StringBuilder
         8: dup
         9: iload_1
        10: iconst_2
        11: imul
        12: invokespecial #84                 // Method java/lang/StringBuilder."<init>":(I)V
        15: astore_2
        16: iconst_0
        17: istore_3
        18: iload_3
        19: iload_1
        20: if_icmpge     122
        23: aload_0
        24: iload_3
        25: invokevirtual #86                 // Method getStep:(I)I
        28: tableswitch   { // 0 to 3
                       0: 60
                       1: 70
                       2: 80
                       3: 90
                 default: 108
            }
        60: aload_2
        61: bipush        91
        63: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        66: pop
        67: goto          116
        70: aload_2
        71: bipush        46
        73: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        76: pop
        77: goto          116
        80: aload_2
        81: bipush        42
        83: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        86: pop
        87: goto          116
        90: aload_2
        91: aload_0
        92: iload_3
        93: invokevirtual #92                 // Method getStepArgument:(I)I
        96: invokevirtual #95                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        99: bipush        59
       101: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       104: pop
       105: goto          116
       108: new           #97                 // class java/lang/AssertionError
       111: dup
       112: invokespecial #98                 // Method java/lang/AssertionError."<init>":()V
       115: athrow
       116: iinc          3, 1
       119: goto          18
       122: aload_2
       123: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       126: areturn
      LineNumberTable:
        line 163: 0
        line 164: 5
        line 165: 16
        line 166: 23
        line 168: 60
        line 169: 67
        line 171: 70
        line 172: 77
        line 174: 80
        line 175: 87
        line 177: 90
        line 178: 105
        line 180: 108
        line 165: 116
        line 183: 122
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     104     3     i   I
            0     127     0  this   Lorg/objectweb/asm/TypePath;
            5     122     1 length   I
           16     111     2 result   Ljava/lang/StringBuilder;

  static void put(org.objectweb.asm.TypePath, org.objectweb.asm.ByteVector);
    descriptor: (Lorg/objectweb/asm/TypePath;Lorg/objectweb/asm/ByteVector;)V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ifnonnull     13
         4: aload_1
         5: iconst_0
         6: invokevirtual #50                 // Method org/objectweb/asm/ByteVector.putByte:(I)Lorg/objectweb/asm/ByteVector;
         9: pop
        10: goto          41
        13: aload_0
        14: getfield      #24                 // Field typePathContainer:[B
        17: aload_0
        18: getfield      #26                 // Field typePathOffset:I
        21: baload
        22: iconst_2
        23: imul
        24: iconst_1
        25: iadd
        26: istore_2
        27: aload_1
        28: aload_0
        29: getfield      #24                 // Field typePathContainer:[B
        32: aload_0
        33: getfield      #26                 // Field typePathOffset:I
        36: iload_2
        37: invokevirtual #109                // Method org/objectweb/asm/ByteVector.putByteArray:([BII)Lorg/objectweb/asm/ByteVector;
        40: pop
        41: return
      LineNumberTable:
        line 194: 0
        line 195: 4
        line 197: 13
        line 198: 27
        line 200: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      14     2 length   I
            0      42     0 typePath   Lorg/objectweb/asm/TypePath;
            0      42     1 output   Lorg/objectweb/asm/ByteVector;
}
SourceFile: "TypePath.java"
