Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/GitHub$Repository.class
  Last modified May 29, 2022; size 8584 bytes
  SHA-256 checksum 6097a9edcd574d5ccbdd7ff3bb15d1f4d650a83dbf9c596f117b49d5e49f900a
  Compiled from "GitHub.scala"
public final class org.sireum.GitHub$Repository implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/GitHub$Repository
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/GitHub$Repository
    #2 = Class              #1            // org/sireum/GitHub$Repository
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/DatatypeSig
    #6 = Class              #5            // org/sireum/DatatypeSig
    #7 = Utf8               GitHub.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/GitHub$Credential
   #14 = Class              #13           // org/sireum/GitHub$Credential
   #15 = Utf8               org/sireum/GitHub
   #16 = Class              #15           // org/sireum/GitHub
   #17 = Utf8               Credential
   #18 = Utf8               org/sireum/GitHub$Ext$
   #19 = Class              #18           // org/sireum/GitHub$Ext$
   #20 = Utf8               Ext$
   #21 = Utf8               org/sireum/GitHub$Release
   #22 = Class              #21           // org/sireum/GitHub$Release
   #23 = Utf8               Release
   #24 = Utf8               Repository
   #25 = Utf8               hashCode
   #26 = Utf8               I
   #27 = Utf8               $content
   #28 = Utf8               Lscala/collection/immutable/Seq;
   #29 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #30 = Utf8               _bconnection
   #31 = Utf8               Z
   #32 = Utf8               _connection
   #33 = Utf8               Lorg/sireum/GitHub$Credential;
   #34 = Utf8               _owner
   #35 = Utf8               Ljava/lang/String;
   #36 = Utf8               _name
   #37 = Utf8               bitmap$0
   #38 = Utf8               B
   #39 = Utf8               hash
   #40 = Utf8               ()Lorg/sireum/Z;
   #41 = Utf8               hash$
   #42 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #43 = NameAndType        #41:#42       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #44 = InterfaceMethodref #6.#43        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #45 = Utf8               this
   #46 = Utf8               Lorg/sireum/GitHub$Repository;
   #47 = Utf8               $cannotMixImmutableAndMutable
   #48 = Utf8               ()Lscala/runtime/Nothing$;
   #49 = Utf8               org/sireum/Immutable
   #50 = Class              #49           // org/sireum/Immutable
   #51 = Utf8               $cannotMixImmutableAndMutable$
   #52 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #53 = NameAndType        #51:#52       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #54 = InterfaceMethodref #50.#53       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #55 = Utf8               $hasEquals
   #56 = Utf8               ()Z
   #57 = Utf8               $hasEquals$
   #58 = Utf8               (Lorg/sireum/Immutable;)Z
   #59 = NameAndType        #57:#58       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #60 = InterfaceMethodref #50.#59       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #61 = Utf8               $hasString
   #62 = Utf8               $hasString$
   #63 = NameAndType        #62:#58       // $hasString$:(Lorg/sireum/Immutable;)Z
   #64 = InterfaceMethodref #50.#63       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #65 = Utf8               $clone
   #66 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #67 = Utf8               org/sireum/$internal/ImmutableMarker
   #68 = Class              #67           // org/sireum/$internal/ImmutableMarker
   #69 = Utf8               $clone$
   #70 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #71 = NameAndType        #69:#70       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #72 = InterfaceMethodref #68.#71       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #73 = Utf8               connection
   #74 = Utf8               ()Lorg/sireum/Option;
   #75 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;
   #76 = NameAndType        #30:#31       // _bconnection:Z
   #77 = Fieldref           #2.#76        // org/sireum/GitHub$Repository._bconnection:Z
   #78 = Utf8               org/sireum/None$
   #79 = Class              #78           // org/sireum/None$
   #80 = Utf8               MODULE$
   #81 = Utf8               Lorg/sireum/None$;
   #82 = NameAndType        #80:#81       // MODULE$:Lorg/sireum/None$;
   #83 = Fieldref           #79.#82       // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #84 = Utf8               apply
   #85 = Utf8               ()Lorg/sireum/None;
   #86 = NameAndType        #84:#85       // apply:()Lorg/sireum/None;
   #87 = Methodref          #79.#86       // org/sireum/None$.apply:()Lorg/sireum/None;
   #88 = Utf8               org/sireum/Some$
   #89 = Class              #88           // org/sireum/Some$
   #90 = Utf8               Lorg/sireum/Some$;
   #91 = NameAndType        #80:#90       // MODULE$:Lorg/sireum/Some$;
   #92 = Fieldref           #89.#91       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #93 = NameAndType        #32:#33       // _connection:Lorg/sireum/GitHub$Credential;
   #94 = Fieldref           #2.#93        // org/sireum/GitHub$Repository._connection:Lorg/sireum/GitHub$Credential;
   #95 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
   #96 = NameAndType        #84:#95       // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #97 = Methodref          #89.#96       // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #98 = Utf8               getConnection
   #99 = NameAndType        #73:#74       // connection:()Lorg/sireum/Option;
  #100 = Methodref          #2.#99        // org/sireum/GitHub$Repository.connection:()Lorg/sireum/Option;
  #101 = Utf8               owner
  #102 = Utf8               ()Ljava/lang/String;
  #103 = NameAndType        #34:#35       // _owner:Ljava/lang/String;
  #104 = Fieldref           #2.#103       // org/sireum/GitHub$Repository._owner:Ljava/lang/String;
  #105 = Utf8               getOwner
  #106 = Utf8               name
  #107 = NameAndType        #36:#35       // _name:Ljava/lang/String;
  #108 = Fieldref           #2.#107       // org/sireum/GitHub$Repository._name:Ljava/lang/String;
  #109 = Utf8               getName
  #110 = Utf8               toString
  #111 = NameAndType        #61:#56       // $hasString:()Z
  #112 = Methodref          #2.#111       // org/sireum/GitHub$Repository.$hasString:()Z
  #113 = Utf8               string$
  #114 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #115 = NameAndType        #113:#114     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #116 = InterfaceMethodref #6.#115       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #117 = Utf8               java/lang/StringBuilder
  #118 = Class              #117          // java/lang/StringBuilder
  #119 = Utf8               <init>
  #120 = Utf8               ()V
  #121 = NameAndType        #119:#120     // "<init>":()V
  #122 = Methodref          #118.#121     // java/lang/StringBuilder."<init>":()V
  #123 = String             #24           // Repository
  #124 = Utf8               append
  #125 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #126 = NameAndType        #124:#125     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #127 = Methodref          #118.#126     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #128 = Utf8               (C)Ljava/lang/StringBuilder;
  #129 = NameAndType        #124:#128     // append:(C)Ljava/lang/StringBuilder;
  #130 = Methodref          #118.#129     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #131 = Utf8               org/sireum/String$
  #132 = Class              #131          // org/sireum/String$
  #133 = Utf8               Lorg/sireum/String$;
  #134 = NameAndType        #80:#133      // MODULE$:Lorg/sireum/String$;
  #135 = Fieldref           #132.#134     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #136 = Utf8               escape
  #137 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #138 = NameAndType        #136:#137     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #139 = Methodref          #132.#138     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #140 = Utf8               ,
  #141 = String             #140          // ,
  #142 = Utf8               org/sireum/String
  #143 = Class              #142          // org/sireum/String
  #144 = NameAndType        #101:#102     // owner:()Ljava/lang/String;
  #145 = Methodref          #2.#144       // org/sireum/GitHub$Repository.owner:()Ljava/lang/String;
  #146 = Utf8               (Ljava/lang/String;)V
  #147 = NameAndType        #119:#146     // "<init>":(Ljava/lang/String;)V
  #148 = Methodref          #143.#147     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #149 = NameAndType        #106:#102     // name:()Ljava/lang/String;
  #150 = Methodref          #2.#149       // org/sireum/GitHub$Repository.name:()Ljava/lang/String;
  #151 = NameAndType        #110:#102     // toString:()Ljava/lang/String;
  #152 = Methodref          #118.#151     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #153 = Utf8               sb
  #154 = Utf8               Ljava/lang/StringBuilder;
  #155 = Utf8               java/lang/String
  #156 = Class              #155          // java/lang/String
  #157 = Utf8               string
  #158 = Methodref          #2.#151       // org/sireum/GitHub$Repository.toString:()Ljava/lang/String;
  #159 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #160 = NameAndType        #84:#159      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #161 = Methodref          #132.#160     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #162 = Utf8               hashCode$lzycompute
  #163 = Utf8               ()I
  #164 = NameAndType        #37:#38       // bitmap$0:B
  #165 = Fieldref           #2.#164       // org/sireum/GitHub$Repository.bitmap$0:B
  #166 = NameAndType        #55:#56       // $hasEquals:()Z
  #167 = Methodref          #2.#166       // org/sireum/GitHub$Repository.$hasEquals:()Z
  #168 = NameAndType        #25:#163      // hashCode:()I
  #169 = Methodref          #4.#168       // java/lang/Object.hashCode:()I
  #170 = Utf8               scala/package$
  #171 = Class              #170          // scala/package$
  #172 = Utf8               Lscala/package$;
  #173 = NameAndType        #80:#172      // MODULE$:Lscala/package$;
  #174 = Fieldref           #171.#173     // scala/package$.MODULE$:Lscala/package$;
  #175 = Utf8               Seq
  #176 = Utf8               ()Lscala/collection/immutable/Seq$;
  #177 = NameAndType        #175:#176     // Seq:()Lscala/collection/immutable/Seq$;
  #178 = Methodref          #171.#177     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #179 = Utf8               scala/runtime/ScalaRunTime$
  #180 = Class              #179          // scala/runtime/ScalaRunTime$
  #181 = Utf8               Lscala/runtime/ScalaRunTime$;
  #182 = NameAndType        #80:#181      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #183 = Fieldref           #180.#182     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #184 = Utf8               getClass
  #185 = Utf8               ()Ljava/lang/Class;
  #186 = NameAndType        #184:#185     // getClass:()Ljava/lang/Class;
  #187 = Methodref          #2.#186       // org/sireum/GitHub$Repository.getClass:()Ljava/lang/Class;
  #188 = Utf8               java/lang/Class
  #189 = Class              #188          // java/lang/Class
  #190 = NameAndType        #109:#102     // getName:()Ljava/lang/String;
  #191 = Methodref          #189.#190     // java/lang/Class.getName:()Ljava/lang/String;
  #192 = Utf8               genericWrapArray
  #193 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #194 = NameAndType        #192:#193     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #195 = Methodref          #180.#194     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #196 = Utf8               scala/collection/immutable/Seq$
  #197 = Class              #196          // scala/collection/immutable/Seq$
  #198 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #199 = NameAndType        #84:#198      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #200 = Methodref          #197.#199     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #201 = Utf8               scala/collection/Seq
  #202 = Class              #201          // scala/collection/Seq
  #203 = InterfaceMethodref #202.#168     // scala/collection/Seq.hashCode:()I
  #204 = NameAndType        #25:#26       // hashCode:I
  #205 = Fieldref           #2.#204       // org/sireum/GitHub$Repository.hashCode:I
  #206 = Utf8               java/lang/Throwable
  #207 = Class              #206          // java/lang/Throwable
  #208 = NameAndType        #162:#163     // hashCode$lzycompute:()I
  #209 = Methodref          #2.#208       // org/sireum/GitHub$Repository.hashCode$lzycompute:()I
  #210 = Utf8               equals
  #211 = Utf8               (Ljava/lang/Object;)Z
  #212 = Utf8               o
  #213 = NameAndType        #210:#211     // equals:(Ljava/lang/Object;)Z
  #214 = Methodref          #4.#213       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #215 = Methodref          #2.#168       // org/sireum/GitHub$Repository.hashCode:()I
  #216 = Utf8               Ljava/lang/Object;
  #217 = Utf8               org/sireum/Option
  #218 = Class              #217          // org/sireum/Option
  #219 = Utf8               (Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/GitHub$Repository;
  #220 = Utf8               (Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/GitHub$Repository;
  #221 = Utf8               (Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #222 = NameAndType        #119:#221     // "<init>":(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #223 = Methodref          #2.#222       // org/sireum/GitHub$Repository."<init>":(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
  #224 = Utf8               Lorg/sireum/Option;
  #225 = Utf8               apply$default$1
  #226 = Utf8               apply$default$2
  #227 = Utf8               apply$default$3
  #228 = Utf8               $content$lzycompute
  #229 = Utf8               ()Lscala/collection/immutable/Seq;
  #230 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #231 = Utf8               scala/Tuple2
  #232 = Class              #231          // scala/Tuple2
  #233 = Utf8               type
  #234 = String             #233          // type
  #235 = Utf8               List
  #236 = Utf8               ()Lscala/collection/immutable/List$;
  #237 = NameAndType        #235:#236     // List:()Lscala/collection/immutable/List$;
  #238 = Methodref          #171.#237     // scala/package$.List:()Lscala/collection/immutable/List$;
  #239 = Utf8               org
  #240 = String             #239          // org
  #241 = Utf8               sireum
  #242 = String             #241          // sireum
  #243 = Utf8               [Ljava/lang/Object;
  #244 = Class              #243          // "[Ljava/lang/Object;"
  #245 = Utf8               wrapRefArray
  #246 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #247 = NameAndType        #245:#246     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #248 = Methodref          #180.#247     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #249 = Utf8               scala/collection/immutable/List$
  #250 = Class              #249          // scala/collection/immutable/List$
  #251 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #252 = NameAndType        #84:#251      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #253 = Methodref          #250.#252     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #254 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #255 = NameAndType        #119:#254     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #256 = Methodref          #232.#255     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #257 = String             #73           // connection
  #258 = String             #101          // owner
  #259 = String             #106          // name
  #260 = Utf8               scala/collection/immutable/Seq
  #261 = Class              #260          // scala/collection/immutable/Seq
  #262 = NameAndType        #27:#28       // $content:Lscala/collection/immutable/Seq;
  #263 = Fieldref           #2.#262       // org/sireum/GitHub$Repository.$content:Lscala/collection/immutable/Seq;
  #264 = NameAndType        #228:#229     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #265 = Methodref          #2.#264       // org/sireum/GitHub$Repository.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #266 = Utf8               latestRelease
  #267 = Utf8               ()Lorg/sireum/GitHub$Release;
  #268 = Utf8               Lorg/sireum/GitHub$Ext$;
  #269 = NameAndType        #80:#268      // MODULE$:Lorg/sireum/GitHub$Ext$;
  #270 = Fieldref           #19.#269      // org/sireum/GitHub$Ext$.MODULE$:Lorg/sireum/GitHub$Ext$;
  #271 = Utf8               (Lorg/sireum/GitHub$Repository;)Lorg/sireum/GitHub$Release;
  #272 = NameAndType        #266:#271     // latestRelease:(Lorg/sireum/GitHub$Repository;)Lorg/sireum/GitHub$Release;
  #273 = Methodref          #19.#272      // org/sireum/GitHub$Ext$.latestRelease:(Lorg/sireum/GitHub$Repository;)Lorg/sireum/GitHub$Release;
  #274 = Utf8               releases
  #275 = Utf8               ()Lorg/sireum/Jen;
  #276 = Utf8               ()Lorg/sireum/Jen<Lorg/sireum/GitHub$Release;>;
  #277 = Utf8               (Lorg/sireum/GitHub$Repository;)Lorg/sireum/Jen;
  #278 = NameAndType        #274:#277     // releases:(Lorg/sireum/GitHub$Repository;)Lorg/sireum/Jen;
  #279 = Methodref          #19.#278      // org/sireum/GitHub$Ext$.releases:(Lorg/sireum/GitHub$Repository;)Lorg/sireum/Jen;
  #280 = Utf8               ()Ljava/lang/Object;
  #281 = NameAndType        #65:#66       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #282 = Methodref          #2.#281       // org/sireum/GitHub$Repository.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #283 = Utf8               $anonfun$_connection$1
  #284 = Utf8               ()Lorg/sireum/GitHub$Credential;
  #285 = Utf8               (Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;Ljava/lang/String;Ljava/lang/String;)V
  #286 = Utf8               __connection
  #287 = Utf8               __owner
  #288 = Utf8               __name
  #289 = Methodref          #4.#121       // java/lang/Object."<init>":()V
  #290 = Utf8               $init$
  #291 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #292 = NameAndType        #290:#291     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #293 = InterfaceMethodref #68.#292      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #294 = Utf8               (Lorg/sireum/Immutable;)V
  #295 = NameAndType        #290:#294     // $init$:(Lorg/sireum/Immutable;)V
  #296 = InterfaceMethodref #50.#295      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #297 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #298 = NameAndType        #290:#297     // $init$:(Lorg/sireum/DatatypeSig;)V
  #299 = InterfaceMethodref #6.#298       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #300 = Utf8               isEmpty
  #301 = NameAndType        #300:#56      // isEmpty:()Z
  #302 = InterfaceMethodref #218.#301     // org/sireum/Option.isEmpty:()Z
  #303 = MethodType         #280          //  ()Ljava/lang/Object;
  #304 = NameAndType        #283:#284     // $anonfun$_connection$1:()Lorg/sireum/GitHub$Credential;
  #305 = Methodref          #2.#304       // org/sireum/GitHub$Repository.$anonfun$_connection$1:()Lorg/sireum/GitHub$Credential;
  #306 = MethodHandle       6:#305        // REF_invokeStatic org/sireum/GitHub$Repository.$anonfun$_connection$1:()Lorg/sireum/GitHub$Credential;
  #307 = MethodType         #284          //  ()Lorg/sireum/GitHub$Credential;
  #308 = Integer            5
  #309 = Integer            1
  #310 = Utf8               java/lang/invoke/LambdaMetafactory
  #311 = Class              #310          // java/lang/invoke/LambdaMetafactory
  #312 = Utf8               altMetafactory
  #313 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #314 = NameAndType        #312:#313     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #315 = Methodref          #311.#314     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #316 = MethodHandle       6:#315        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #317 = Utf8               ()Lscala/Function0;
  #318 = NameAndType        #84:#317      // apply:()Lscala/Function0;
  #319 = InvokeDynamic      #0:#318       // #0:apply:()Lscala/Function0;
  #320 = Utf8               getOrElse
  #321 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #322 = NameAndType        #320:#321     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #323 = InterfaceMethodref #218.#322     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #324 = Utf8               $deserializeLambda$
  #325 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #326 = Utf8               scala/runtime/LambdaDeserialize
  #327 = Class              #326          // scala/runtime/LambdaDeserialize
  #328 = Utf8               bootstrap
  #329 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #330 = NameAndType        #328:#329     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #331 = Methodref          #327.#330     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #332 = MethodHandle       6:#331        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #333 = Utf8               lambdaDeserialize
  #334 = NameAndType        #333:#325     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #335 = InvokeDynamic      #1:#334       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #336 = Utf8               Signature
  #337 = Utf8               Code
  #338 = Utf8               LineNumberTable
  #339 = Utf8               LocalVariableTable
  #340 = Utf8               StackMapTable
  #341 = Utf8               MethodParameters
  #342 = Utf8               InnerClasses
  #343 = Utf8               SourceFile
  #344 = Utf8               BootstrapMethods
  #345 = Utf8               ScalaInlineInfo
  #346 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #29                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final boolean _bconnection;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.GitHub$Credential _connection;
    descriptor: Lorg/sireum/GitHub$Credential;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _owner;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _name;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #54                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #60                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public org.sireum.Option<org.sireum.GitHub$Credential> connection();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #77                 // Field _bconnection:Z
         4: ifeq          16
         7: getstatic     #83                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #87                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #92                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #94                 // Field _connection:Lorg/sireum/GitHub$Credential;
        23: invokevirtual #97                 // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/GitHub$Repository;
    Signature: #75                          // ()Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;

  public org.sireum.Option<org.sireum.GitHub$Credential> getConnection();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method connection:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;
    Signature: #75                          // ()Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;

  public java.lang.String owner();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _owner:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public java.lang.String getOwner();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _owner:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #112                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #116                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          120
        14: new           #118                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #122                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #123                // String Repository
        25: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #130                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #135                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #100                // Method connection:()Lorg/sireum/Option;
        44: invokevirtual #139                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #141                // String ,
        54: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #135                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: new           #143                // class org/sireum/String
        65: dup
        66: aload_0
        67: invokevirtual #145                // Method owner:()Ljava/lang/String;
        70: invokespecial #148                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        73: invokevirtual #139                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: ldc           #141                // String ,
        83: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: getstatic     #135                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        91: new           #143                // class org/sireum/String
        94: dup
        95: aload_0
        96: invokevirtual #150                // Method name:()Ljava/lang/String;
        99: invokespecial #148                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       102: invokevirtual #139                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       105: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: bipush        41
       112: invokevirtual #130                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       115: pop
       116: aload_1
       117: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       120: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 105
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      98     1    sb   Ljava/lang/StringBuilder;
            0     121     0  this   Lorg/sireum/GitHub$Repository;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #112                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #116                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #135                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #158                // Method toString:()Ljava/lang/String;
        21: invokevirtual #161                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/GitHub$Repository;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #165                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     116
        15: aload_0
        16: aload_0
        17: invokevirtual #167                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #169                // Method java/lang/Object.hashCode:()I
        27: goto          102
        30: getstatic     #174                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #178                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_4
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #187                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #191                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #100                // Method connection:()Lorg/sireum/Option;
        59: aastore
        60: dup
        61: iconst_2
        62: new           #143                // class org/sireum/String
        65: dup
        66: aload_0
        67: invokevirtual #145                // Method owner:()Ljava/lang/String;
        70: invokespecial #148                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        73: aastore
        74: dup
        75: iconst_3
        76: new           #143                // class org/sireum/String
        79: dup
        80: aload_0
        81: invokevirtual #150                // Method name:()Ljava/lang/String;
        84: invokespecial #148                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        87: aastore
        88: invokevirtual #195                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        91: invokevirtual #200                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        94: checkcast     #202                // class scala/collection/Seq
        97: invokeinterface #203,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       102: putfield      #205                // Field hashCode:I
       105: aload_0
       106: aload_0
       107: getfield      #165                // Field bitmap$0:B
       110: iconst_1
       111: ior
       112: i2b
       113: putfield      #165                // Field bitmap$0:B
       116: aload_1
       117: monitorexit
       118: goto          124
       121: aload_1
       122: monitorexit
       123: athrow
       124: aload_0
       125: getfield      #205                // Field hashCode:I
       128: ireturn
      Exception table:
         from    to  target type
             4   116   121   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/GitHub$Repository, class org/sireum/GitHub$Repository ]
          stack = [ class org/sireum/GitHub$Repository ]
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class org/sireum/GitHub$Repository, class org/sireum/GitHub$Repository ]
          stack = [ class org/sireum/GitHub$Repository, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     129     0  this   Lorg/sireum/GitHub$Repository;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #165                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #209                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #205                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/GitHub$Repository;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #167                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #214                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          169
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          169
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/GitHub$Repository
        30: ifeq          160
        33: aload_3
        34: checkcast     #2                  // class org/sireum/GitHub$Repository
        37: astore        4
        39: aload_0
        40: invokevirtual #215                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #215                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          156
        55: aload_0
        56: invokevirtual #100                // Method connection:()Lorg/sireum/Option;
        59: aload         4
        61: invokevirtual #100                // Method connection:()Lorg/sireum/Option;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          155
        79: aload         5
        81: invokevirtual #214                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          155
        87: aload_0
        88: invokevirtual #145                // Method owner:()Ljava/lang/String;
        91: aload         4
        93: invokevirtual #145                // Method owner:()Ljava/lang/String;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          155
       111: aload         6
       113: invokevirtual #214                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          155
       119: aload_0
       120: invokevirtual #150                // Method name:()Ljava/lang/String;
       123: aload         4
       125: invokevirtual #150                // Method name:()Ljava/lang/String;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          155
       143: aload         7
       145: invokevirtual #214                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          155
       151: iconst_1
       152: goto          156
       155: iconst_0
       156: istore_2
       157: goto          168
       160: goto          163
       163: iconst_0
       164: istore_2
       165: goto          168
       168: iload_2
       169: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/GitHub$Repository ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/GitHub$Repository, class java/lang/Object, top, class java/lang/Object, class org/sireum/GitHub$Repository, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/GitHub$Repository, class java/lang/Object, top, class java/lang/Object, class org/sireum/GitHub$Repository, class org/sireum/Option, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/GitHub$Repository, class java/lang/Object, top, class java/lang/Object, class org/sireum/GitHub$Repository, class org/sireum/Option, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/GitHub$Repository, class java/lang/Object, top, class java/lang/Object, class org/sireum/GitHub$Repository ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/GitHub$Repository, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/GitHub$Repository, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     170     0  this   Lorg/sireum/GitHub$Repository;
            0     170     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.GitHub$Repository apply(org.sireum.Option<org.sireum.GitHub$Credential>, java.lang.String, java.lang.String);
    descriptor: (Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/GitHub$Repository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/sireum/GitHub$Repository
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #223                // Method "<init>":(Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/GitHub$Repository;
            0      11     1 connection   Lorg/sireum/Option;
            0      11     2 owner   Ljava/lang/String;
            0      11     3  name   Ljava/lang/String;
    Signature: #220                         // (Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/GitHub$Repository;
    MethodParameters:
      Name                           Flags
      connection                     final
      owner                          final
      name                           final

  public org.sireum.Option<org.sireum.GitHub$Credential> apply$default$1();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method connection:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;
    Signature: #75                          // ()Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;

  public java.lang.String apply$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #145                // Method owner:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public java.lang.String apply$default$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #150                // Method name:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #165                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     169
        15: aload_0
        16: getstatic     #174                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #178                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_4
        26: anewarray     #232                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #232                // class scala/Tuple2
        34: dup
        35: ldc           #234                // String type
        37: getstatic     #174                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #238                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #156                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #240                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #242                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #123                // String Repository
        64: aastore
        65: checkcast     #244                // class "[Ljava/lang/Object;"
        68: invokevirtual #248                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #253                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #232                // class scala/Tuple2
        83: dup
        84: ldc_w         #257                // String connection
        87: aload_0
        88: invokevirtual #100                // Method connection:()Lorg/sireum/Option;
        91: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        94: aastore
        95: dup
        96: iconst_2
        97: new           #232                // class scala/Tuple2
       100: dup
       101: ldc_w         #258                // String owner
       104: new           #143                // class org/sireum/String
       107: dup
       108: aload_0
       109: invokevirtual #145                // Method owner:()Ljava/lang/String;
       112: invokespecial #148                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       115: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       118: aastore
       119: dup
       120: iconst_3
       121: new           #232                // class scala/Tuple2
       124: dup
       125: ldc_w         #259                // String name
       128: new           #143                // class org/sireum/String
       131: dup
       132: aload_0
       133: invokevirtual #150                // Method name:()Ljava/lang/String;
       136: invokespecial #148                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       139: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       142: aastore
       143: checkcast     #244                // class "[Ljava/lang/Object;"
       146: invokevirtual #248                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       149: invokevirtual #200                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       152: checkcast     #261                // class scala/collection/immutable/Seq
       155: putfield      #263                // Field $content:Lscala/collection/immutable/Seq;
       158: aload_0
       159: aload_0
       160: getfield      #165                // Field bitmap$0:B
       163: iconst_2
       164: ior
       165: i2b
       166: putfield      #165                // Field bitmap$0:B
       169: aload_1
       170: monitorexit
       171: goto          177
       174: aload_1
       175: monitorexit
       176: athrow
       177: aload_0
       178: getfield      #263                // Field $content:Lscala/collection/immutable/Seq;
       181: areturn
      Exception table:
         from    to  target type
             4   169   174   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 169
          locals = [ class org/sireum/GitHub$Repository ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     182     0  this   Lorg/sireum/GitHub$Repository;
    Signature: #230                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #165                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #265                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #263                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/GitHub$Repository;
    Signature: #230                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.GitHub$Release latestRelease();
    descriptor: ()Lorg/sireum/GitHub$Release;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #270                // Field org/sireum/GitHub$Ext$.MODULE$:Lorg/sireum/GitHub$Ext$;
         3: aload_0
         4: invokevirtual #273                // Method org/sireum/GitHub$Ext$.latestRelease:(Lorg/sireum/GitHub$Repository;)Lorg/sireum/GitHub$Release;
         7: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/GitHub$Repository;

  public org.sireum.Jen<org.sireum.GitHub$Release> releases();
    descriptor: ()Lorg/sireum/Jen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #270                // Field org/sireum/GitHub$Ext$.MODULE$:Lorg/sireum/GitHub$Ext$;
         3: aload_0
         4: invokevirtual #279                // Method org/sireum/GitHub$Ext$.releases:(Lorg/sireum/GitHub$Repository;)Lorg/sireum/Jen;
         7: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/GitHub$Repository;
    Signature: #276                         // ()Lorg/sireum/Jen<Lorg/sireum/GitHub$Release;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #282                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/GitHub$Repository;

  public static final org.sireum.GitHub$Credential $anonfun$_connection$1();
    descriptor: ()Lorg/sireum/GitHub$Credential;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 32: 0

  public org.sireum.GitHub$Repository(org.sireum.Option<org.sireum.GitHub$Credential>, java.lang.String, java.lang.String);
    descriptor: (Lorg/sireum/Option;Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: invokespecial #289                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #293                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #296                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #299                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: invokeinterface #302,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        23: putfield      #77                 // Field _bconnection:Z
        26: aload_0
        27: aload_1
        28: invokedynamic #319,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        33: invokeinterface #323,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        38: checkcast     #14                 // class org/sireum/GitHub$Credential
        41: putfield      #94                 // Field _connection:Lorg/sireum/GitHub$Credential;
        44: aload_0
        45: aload_2
        46: putfield      #104                // Field _owner:Ljava/lang/String;
        49: aload_0
        50: aload_3
        51: putfield      #108                // Field _name:Ljava/lang/String;
        54: return
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0  this   Lorg/sireum/GitHub$Repository;
            0      55     1 __connection   Lorg/sireum/Option;
            0      55     2 __owner   Ljava/lang/String;
            0      55     3 __name   Ljava/lang/String;
    Signature: #285                         // (Lorg/sireum/Option<Lorg/sireum/GitHub$Credential;>;Ljava/lang/String;Ljava/lang/String;)V
    MethodParameters:
      Name                           Flags
      __connection                   final
      __owner                        final
      __name                         final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #335,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #17= #14 of #16;          // Credential=class org/sireum/GitHub$Credential of class org/sireum/GitHub
  public static #20= #19 of #16;          // Ext$=class org/sireum/GitHub$Ext$ of class org/sireum/GitHub
  public static final #23= #22 of #16;    // Release=class org/sireum/GitHub$Release of class org/sireum/GitHub
  public static final #24= #2 of #16;     // Repository=class org/sireum/GitHub$Repository of class org/sireum/GitHub
SourceFile: "GitHub.scala"
BootstrapMethods:
  0: #316 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #303 ()Ljava/lang/Object;
      #306 REF_invokeStatic org/sireum/GitHub$Repository.$anonfun$_connection$1:()Lorg/sireum/GitHub$Credential;
      #307 ()Lorg/sireum/GitHub$Credential;
      #308 5
      #309 1
      #307 ()Lorg/sireum/GitHub$Credential;
  1: #332 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #306 REF_invokeStatic org/sireum/GitHub$Repository.$anonfun$_connection$1:()Lorg/sireum/GitHub$Credential;
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 01 00 1B 01 1B 01 1C 01 00 2F 00 30 01 00 41
   01 18 01 00 41 00 42 01 00 1B 00 E5 01 00 E4 00
   E5 01 00 37 00 38 01 00 3D 00 38 01 00 77 00 DD
   01 00 54 00 DB 01 00 E1 00 4A 01 00 E2 00 66 01
   00 E3 00 66 01 00 49 00 4A 01 00 D2 00 D3 01 00
   62 00 4A 01 00 6D 00 66 01 00 69 00 66 01 00 27
   00 28 01 00 19 00 A3 01 00 A2 00 A3 01 01 0A 01
   0B 01 00 6A 00 66 01 00 65 00 66 01 01 12 01 13
   01 00 9D 00 66 01 00 6E 00 66 01
  Scala: length = 0x0 (unknown attribute)

