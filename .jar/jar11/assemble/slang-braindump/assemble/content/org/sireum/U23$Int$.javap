Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/U23$Int$.class
  Last modified May 29, 2022; size 3463 bytes
  SHA-256 checksum 6e02b975e642765c124eaacd1cac02ca1fedaf8d7a067a8c68fa55b96bd562eb
  Compiled from "BitsRangeTypes.scala"
public class org.sireum.U23$Int$ extends java.lang.Object implements org.sireum.$ZCompanionInt<org.sireum.U23>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/U23$Int$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 9, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/U23$Int$
    #2 = Class              #1            // org/sireum/U23$Int$
    #3 = Utf8               Ljava/lang/Object;Lorg/sireum/$ZCompanionInt<Lorg/sireum/U23;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/$ZCompanionInt
    #7 = Class              #6            // org/sireum/$ZCompanionInt
    #8 = Utf8               BitsRangeTypes.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               org/sireum/U23
   #15 = Class              #14           // org/sireum/U23
   #16 = Utf8               Int$
   #17 = Utf8               org/sireum/Z$MP$
   #18 = Class              #17           // org/sireum/Z$MP$
   #19 = Utf8               org/sireum/Z
   #20 = Class              #19           // org/sireum/Z
   #21 = Utf8               MP$
   #22 = Utf8               org/sireum/package$$Int2Z$
   #23 = Class              #22           // org/sireum/package$$Int2Z$
   #24 = Utf8               org/sireum/package
   #25 = Class              #24           // org/sireum/package
   #26 = Utf8               $Int2Z$
   #27 = Utf8               MODULE$
   #28 = Utf8               Lorg/sireum/U23$Int$;
   #29 = Utf8               <clinit>
   #30 = Utf8               ()V
   #31 = Utf8               <init>
   #32 = NameAndType        #31:#30       // "<init>":()V
   #33 = Methodref          #2.#32        // org/sireum/U23$Int$."<init>":()V
   #34 = NameAndType        #27:#28       // MODULE$:Lorg/sireum/U23$Int$;
   #35 = Fieldref           #2.#34        // org/sireum/U23$Int$.MODULE$:Lorg/sireum/U23$Int$;
   #36 = Utf8               apply
   #37 = Utf8               (I)I
   #38 = Utf8               n
   #39 = Utf8               org/sireum/U23$
   #40 = Class              #39           // org/sireum/U23$
   #41 = Utf8               Lorg/sireum/U23$;
   #42 = NameAndType        #27:#41       // MODULE$:Lorg/sireum/U23$;
   #43 = Fieldref           #40.#42       // org/sireum/U23$.MODULE$:Lorg/sireum/U23$;
   #44 = Utf8               isWrapped
   #45 = Utf8               ()Z
   #46 = NameAndType        #44:#45       // isWrapped:()Z
   #47 = Methodref          #40.#46       // org/sireum/U23$.isWrapped:()Z
   #48 = Utf8               Lorg/sireum/Z$MP$;
   #49 = NameAndType        #27:#48       // MODULE$:Lorg/sireum/Z$MP$;
   #50 = Fieldref           #18.#49       // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
   #51 = Utf8               (I)Lorg/sireum/Z;
   #52 = NameAndType        #36:#51       // apply:(I)Lorg/sireum/Z;
   #53 = Methodref          #18.#52       // org/sireum/Z$MP$.apply:(I)Lorg/sireum/Z;
   #54 = Utf8               (Lorg/sireum/Z;)I
   #55 = NameAndType        #36:#54       // apply:(Lorg/sireum/Z;)I
   #56 = Methodref          #40.#55       // org/sireum/U23$.apply:(Lorg/sireum/Z;)I
   #57 = Utf8               this
   #58 = Utf8               I
   #59 = Utf8               unapply
   #60 = Utf8               (I)Lscala/Option;
   #61 = Utf8               (I)Lscala/Option<Ljava/lang/Object;>;
   #62 = Utf8               (I)V
   #63 = NameAndType        #31:#62       // "<init>":(I)V
   #64 = Methodref          #15.#63       // org/sireum/U23."<init>":(I)V
   #65 = Utf8               toMP
   #66 = Utf8               ()Lorg/sireum/Z;
   #67 = NameAndType        #65:#66       // toMP:()Lorg/sireum/Z;
   #68 = Methodref          #15.#67       // org/sireum/U23.toMP:()Lorg/sireum/Z;
   #69 = Utf8               org/sireum/B$
   #70 = Class              #69           // org/sireum/B$
   #71 = Utf8               Lorg/sireum/B$;
   #72 = NameAndType        #27:#71       // MODULE$:Lorg/sireum/B$;
   #73 = Fieldref           #70.#72       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #74 = Utf8               Lorg/sireum/package$$Int2Z$;
   #75 = NameAndType        #27:#74       // MODULE$:Lorg/sireum/package$$Int2Z$;
   #76 = Fieldref           #23.#75       // org/sireum/package$$Int2Z$.MODULE$:Lorg/sireum/package$$Int2Z$;
   #77 = Utf8               org/sireum/package$
   #78 = Class              #77           // org/sireum/package$
   #79 = Utf8               Lorg/sireum/package$;
   #80 = NameAndType        #27:#79       // MODULE$:Lorg/sireum/package$;
   #81 = Fieldref           #78.#80       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #82 = Integer            -2147483648
   #83 = Utf8               $Int2Z
   #84 = NameAndType        #83:#37       // $Int2Z:(I)I
   #85 = Methodref          #78.#84       // org/sireum/package$.$Int2Z:(I)I
   #86 = Utf8               $less$eq$extension
   #87 = Utf8               (ILorg/sireum/Z;)Z
   #88 = NameAndType        #86:#87       // $less$eq$extension:(ILorg/sireum/Z;)Z
   #89 = Methodref          #23.#88       // org/sireum/package$$Int2Z$.$less$eq$extension:(ILorg/sireum/Z;)Z
   #90 = Utf8               ()Ljava/lang/Object;
   #91 = MethodType         #90           //  ()Ljava/lang/Object;
   #92 = Utf8               $anonfun$unapply$28$adapted
   #93 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
   #94 = NameAndType        #92:#93       // $anonfun$unapply$28$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
   #95 = Methodref          #2.#94        // org/sireum/U23$Int$.$anonfun$unapply$28$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
   #96 = MethodHandle       6:#95         // REF_invokeStatic org/sireum/U23$Int$.$anonfun$unapply$28$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
   #97 = Integer            1
   #98 = Utf8               java/lang/invoke/LambdaMetafactory
   #99 = Class              #98           // java/lang/invoke/LambdaMetafactory
  #100 = Utf8               altMetafactory
  #101 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #102 = NameAndType        #100:#101     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #103 = Methodref          #99.#102      // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #104 = MethodHandle       6:#103        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #105 = Utf8               (Lorg/sireum/Z;)Lscala/Function0;
  #106 = NameAndType        #36:#105      // apply:(Lorg/sireum/Z;)Lscala/Function0;
  #107 = InvokeDynamic      #0:#106       // #0:apply:(Lorg/sireum/Z;)Lscala/Function0;
  #108 = Utf8               $amp$amp$extension
  #109 = Utf8               (ZLscala/Function0;)Z
  #110 = NameAndType        #108:#109     // $amp$amp$extension:(ZLscala/Function0;)Z
  #111 = Methodref          #70.#110      // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #112 = Utf8               $4B
  #113 = Utf8               (Z)Z
  #114 = NameAndType        #112:#113     // $4B:(Z)Z
  #115 = Methodref          #70.#114      // org/sireum/B$.$4B:(Z)Z
  #116 = Utf8               scala/Some
  #117 = Class              #116          // scala/Some
  #118 = Utf8               toInt
  #119 = Utf8               ()I
  #120 = NameAndType        #118:#119     // toInt:()I
  #121 = InterfaceMethodref #20.#120      // org/sireum/Z.toInt:()I
  #122 = Utf8               scala/runtime/BoxesRunTime
  #123 = Class              #122          // scala/runtime/BoxesRunTime
  #124 = Utf8               boxToInteger
  #125 = Utf8               (I)Ljava/lang/Integer;
  #126 = NameAndType        #124:#125     // boxToInteger:(I)Ljava/lang/Integer;
  #127 = Methodref          #123.#126     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #128 = Utf8               (Ljava/lang/Object;)V
  #129 = NameAndType        #31:#128      // "<init>":(Ljava/lang/Object;)V
  #130 = Methodref          #117.#129     // scala/Some."<init>":(Ljava/lang/Object;)V
  #131 = Utf8               scala/None$
  #132 = Class              #131          // scala/None$
  #133 = Utf8               Lscala/None$;
  #134 = NameAndType        #27:#133      // MODULE$:Lscala/None$;
  #135 = Fieldref           #132.#134     // scala/None$.MODULE$:Lscala/None$;
  #136 = Utf8               v
  #137 = Utf8               Lorg/sireum/Z;
  #138 = Utf8               scala/Option
  #139 = Class              #138          // scala/Option
  #140 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #141 = Utf8               value
  #142 = NameAndType        #141:#119     // value:()I
  #143 = Methodref          #15.#142      // org/sireum/U23.value:()I
  #144 = NameAndType        #59:#60       // unapply:(I)Lscala/Option;
  #145 = Methodref          #2.#144       // org/sireum/U23$Int$.unapply:(I)Lscala/Option;
  #146 = Utf8               Ljava/lang/Object;
  #147 = Utf8               (I)Ljava/lang/Object;
  #148 = NameAndType        #36:#37       // apply:(I)I
  #149 = Methodref          #2.#148       // org/sireum/U23$Int$.apply:(I)I
  #150 = Utf8               $anonfun$unapply$28
  #151 = Utf8               (Lorg/sireum/Z;)Z
  #152 = Utf8               v$19
  #153 = Utf8               org/sireum/Z$
  #154 = Class              #153          // org/sireum/Z$
  #155 = Utf8               Lorg/sireum/Z$;
  #156 = NameAndType        #27:#155      // MODULE$:Lorg/sireum/Z$;
  #157 = Fieldref           #154.#156     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #158 = Integer            2147483647
  #159 = Methodref          #154.#52      // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #160 = Utf8               $less$eq
  #161 = NameAndType        #160:#151     // $less$eq:(Lorg/sireum/Z;)Z
  #162 = InterfaceMethodref #20.#161      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #163 = Methodref          #5.#32        // java/lang/Object."<init>":()V
  #164 = Utf8               org/sireum/B
  #165 = Class              #164          // org/sireum/B
  #166 = NameAndType        #150:#151     // $anonfun$unapply$28:(Lorg/sireum/Z;)Z
  #167 = Methodref          #2.#166       // org/sireum/U23$Int$.$anonfun$unapply$28:(Lorg/sireum/Z;)Z
  #168 = Utf8               (Z)V
  #169 = NameAndType        #31:#168      // "<init>":(Z)V
  #170 = Methodref          #165.#169     // org/sireum/B."<init>":(Z)V
  #171 = Utf8               $deserializeLambda$
  #172 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #173 = Utf8               scala/runtime/LambdaDeserialize
  #174 = Class              #173          // scala/runtime/LambdaDeserialize
  #175 = Utf8               bootstrap
  #176 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #177 = NameAndType        #175:#176     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #178 = Methodref          #174.#177     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #179 = MethodHandle       6:#178        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #180 = Utf8               lambdaDeserialize
  #181 = NameAndType        #180:#172     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #182 = InvokeDynamic      #1:#181       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #183 = Utf8               Code
  #184 = Utf8               LineNumberTable
  #185 = Utf8               StackMapTable
  #186 = Utf8               LocalVariableTable
  #187 = Utf8               MethodParameters
  #188 = Utf8               Signature
  #189 = Utf8               InnerClasses
  #190 = Utf8               SourceFile
  #191 = Utf8               BootstrapMethods
  #192 = Utf8               ScalaInlineInfo
  #193 = Utf8               Scala
{
  public static final org.sireum.U23$Int$ MODULE$;
    descriptor: Lorg/sireum/U23$Int$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/U23$Int$
         3: dup
         4: invokespecial #33                 // Method "<init>":()V
         7: putstatic     #35                 // Field MODULE$:Lorg/sireum/U23$Int$;
        10: return
      LineNumberTable:
        line 99: 0

  public int apply(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #43                 // Field org/sireum/U23$.MODULE$:Lorg/sireum/U23$;
         3: invokevirtual #47                 // Method org/sireum/U23$.isWrapped:()Z
         6: ifeq          13
         9: iload_1
        10: goto          26
        13: getstatic     #43                 // Field org/sireum/U23$.MODULE$:Lorg/sireum/U23$;
        16: getstatic     #50                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        19: iload_1
        20: invokevirtual #53                 // Method org/sireum/Z$MP$.apply:(I)Lorg/sireum/Z;
        23: invokevirtual #56                 // Method org/sireum/U23$.apply:(Lorg/sireum/Z;)I
        26: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/U23$Int$;
            0      27     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.Option<java.lang.Object> unapply(int);
    descriptor: (I)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: new           #15                 // class org/sireum/U23
         3: dup
         4: iload_1
         5: invokespecial #64                 // Method org/sireum/U23."<init>":(I)V
         8: invokevirtual #68                 // Method org/sireum/U23.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #73                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        15: getstatic     #73                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #76                 // Field org/sireum/package$$Int2Z$.MODULE$:Lorg/sireum/package$$Int2Z$;
        21: getstatic     #81                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        24: ldc           #82                 // int -2147483648
        26: invokevirtual #85                 // Method org/sireum/package$.$Int2Z:(I)I
        29: aload_2
        30: invokevirtual #89                 // Method org/sireum/package$$Int2Z$.$less$eq$extension:(ILorg/sireum/Z;)Z
        33: aload_2
        34: invokedynamic #107,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Z;)Lscala/Function0;
        39: invokevirtual #111                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        42: invokevirtual #115                // Method org/sireum/B$.$4B:(Z)Z
        45: ifeq          67
        48: new           #117                // class scala/Some
        51: dup
        52: aload_2
        53: invokeinterface #121,  1          // InterfaceMethod org/sireum/Z.toInt:()I
        58: invokestatic  #127                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        61: invokespecial #130                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        64: goto          70
        67: getstatic     #135                // Field scala/None$.MODULE$:Lscala/None$;
        70: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 67
          locals = [ class org/sireum/Z ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      58     2     v   Lorg/sireum/Z;
            0      71     0  this   Lorg/sireum/U23$Int$;
            0      71     1     n   I
    Signature: #61                          // (I)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.Option unapply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: instanceof    #15                 // class org/sireum/U23
         4: ifeq          21
         7: aload_0
         8: aload_1
         9: checkcast     #15                 // class org/sireum/U23
        12: invokevirtual #143                // Method org/sireum/U23.value:()I
        15: invokevirtual #145                // Method unapply:(I)Lscala/Option;
        18: goto          24
        21: getstatic     #135                // Field scala/None$.MODULE$:Lscala/None$;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/U23$Int$;
            0      25     1     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object apply(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #15                 // class org/sireum/U23
         3: dup
         4: aload_0
         5: iload_1
         6: invokevirtual #149                // Method apply:(I)I
         9: invokespecial #64                 // Method org/sireum/U23."<init>":(I)V
        12: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/U23$Int$;
            0      13     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final boolean $anonfun$unapply$28(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #157                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         4: ldc           #158                // int 2147483647
         6: invokevirtual #159                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         9: invokeinterface #162,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        14: ireturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  v$19   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      v$19                           final

  public org.sireum.U23$Int$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #163                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/U23$Int$;

  public static final java.lang.Object $anonfun$unapply$28$adapted(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #165                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #167                // Method $anonfun$unapply$28:(Lorg/sireum/Z;)Z
         8: invokespecial #170                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  v$19   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      v$19                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #182,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #16= #2 of #15;           // Int$=class org/sireum/U23$Int$ of class org/sireum/U23
  public static #21= #18 of #20;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
  public static #26= #23 of #25;          // $Int2Z$=class org/sireum/package$$Int2Z$ of class org/sireum/package
Signature: #3                           // Ljava/lang/Object;Lorg/sireum/$ZCompanionInt<Lorg/sireum/U23;>;
SourceFile: "BitsRangeTypes.scala"
BootstrapMethods:
  0: #104 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #91 ()Ljava/lang/Object;
      #96 REF_invokeStatic org/sireum/U23$Int$.$anonfun$unapply$28$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
      #91 ()Ljava/lang/Object;
      #97 1
  1: #179 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #96 REF_invokeStatic org/sireum/U23$Int$.$anonfun$unapply$28$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 96 00 97 01 00 5C 00 5D 01 00 1F
   00 1E 01 00 24 00 25 01 00 24 00 93 01 00 3B 00
   3C 01 00 3B 00 8C 01
  Scala: length = 0x0 (unknown attribute)

