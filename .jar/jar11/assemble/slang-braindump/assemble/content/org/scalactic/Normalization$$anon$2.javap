Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/Normalization$$anon$2.class
  Last modified May 29, 2022; size 2640 bytes
  SHA-256 checksum 746937093e1a3baa7175b1a5a8cf31c7b5c6af44761967832840842f105ab405
  Compiled from "Normalization.scala"
public final class org.scalactic.Normalization$$anon$2 extends java.lang.Object implements org.scalactic.NormalizingEquivalence<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalactic/Normalization$$anon$2
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 7, attributes: 6
Constant pool:
   #1 = Utf8               org/scalactic/Normalization$$anon$2
   #2 = Class              #1             // org/scalactic/Normalization$$anon$2
   #3 = Utf8               Ljava/lang/Object;Lorg/scalactic/NormalizingEquivalence<TA;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               org/scalactic/NormalizingEquivalence
   #7 = Class              #6             // org/scalactic/NormalizingEquivalence
   #8 = Utf8               Normalization.scala
   #9 = Utf8               org/scalactic/Normalization
  #10 = Class              #9             // org/scalactic/Normalization
  #11 = Utf8               toEquivalence
  #12 = Utf8               (Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
  #13 = NameAndType        #11:#12        // toEquivalence:(Lorg/scalactic/Equivalence;)Lorg/scalactic/NormalizingEquivalence;
  #14 = Utf8               afterNormalizationEquivalence
  #15 = Utf8               Lorg/scalactic/Equivalence;
  #16 = Utf8               Lorg/scalactic/Equivalence<TA;>;
  #17 = Utf8               $outer
  #18 = Utf8               Lorg/scalactic/Normalization;
  #19 = Utf8               areEquivalent
  #20 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #21 = Utf8               (TA;TA;)Z
  #22 = Utf8               a
  #23 = Utf8               b
  #24 = Utf8               areEquivalent$
  #25 = Utf8               (Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
  #26 = NameAndType        #24:#25        // areEquivalent$:(Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
  #27 = InterfaceMethodref #7.#26         // org/scalactic/NormalizingEquivalence.areEquivalent$:(Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
  #28 = Utf8               this
  #29 = Utf8               Lorg/scalactic/Normalization$$anon$2;
  #30 = Utf8               Ljava/lang/Object;
  #31 = Utf8               and
  #32 = Utf8               (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #33 = Utf8               (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
  #34 = Utf8               other
  #35 = Utf8               and$
  #36 = Utf8               (Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #37 = NameAndType        #35:#36        // and$:(Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #38 = InterfaceMethodref #7.#37         // org/scalactic/NormalizingEquivalence.and$:(Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #39 = Utf8               toNormalization
  #40 = Utf8               ()Lorg/scalactic/Normalization;
  #41 = Utf8               ()Lorg/scalactic/Normalization<TA;>;
  #42 = Utf8               toNormalization$
  #43 = Utf8               (Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
  #44 = NameAndType        #42:#43        // toNormalization$:(Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
  #45 = InterfaceMethodref #7.#44         // org/scalactic/NormalizingEquivalence.toNormalization$:(Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
  #46 = Utf8               org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq
  #47 = Utf8               (Lorg/scalactic/Equivalence;)V
  #48 = Utf8               (Lorg/scalactic/Equivalence<TA;>;)V
  #49 = Utf8               x$1
  #50 = Utf8               ()Lorg/scalactic/Equivalence;
  #51 = Utf8               ()Lorg/scalactic/Equivalence<TA;>;
  #52 = NameAndType        #14:#15        // afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
  #53 = Fieldref           #2.#52         // org/scalactic/Normalization$$anon$2.afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
  #54 = Utf8               normalized
  #55 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #56 = Utf8               (TA;)TA;
  #57 = NameAndType        #17:#18        // $outer:Lorg/scalactic/Normalization;
  #58 = Fieldref           #2.#57         // org/scalactic/Normalization$$anon$2.$outer:Lorg/scalactic/Normalization;
  #59 = NameAndType        #54:#55        // normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #60 = InterfaceMethodref #10.#59        // org/scalactic/Normalization.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #61 = Utf8               <init>
  #62 = Utf8               (Lorg/scalactic/Normalization;Lorg/scalactic/Equivalence;)V
  #63 = Utf8               equivalence$1
  #64 = Utf8               ()V
  #65 = NameAndType        #61:#64        // "<init>":()V
  #66 = Methodref          #5.#65         // java/lang/Object."<init>":()V
  #67 = Utf8               $init$
  #68 = Utf8               (Lorg/scalactic/NormalizingEquivalence;)V
  #69 = NameAndType        #67:#68        // $init$:(Lorg/scalactic/NormalizingEquivalence;)V
  #70 = InterfaceMethodref #7.#69         // org/scalactic/NormalizingEquivalence.$init$:(Lorg/scalactic/NormalizingEquivalence;)V
  #71 = Utf8               Signature
  #72 = Utf8               Code
  #73 = Utf8               LineNumberTable
  #74 = Utf8               LocalVariableTable
  #75 = Utf8               MethodParameters
  #76 = Utf8               StackMapTable
  #77 = Utf8               InnerClasses
  #78 = Utf8               EnclosingMethod
  #79 = Utf8               SourceFile
  #80 = Utf8               ScalaInlineInfo
  #81 = Utf8               Scala
{
  private final org.scalactic.Equivalence<A> afterNormalizationEquivalence;
    descriptor: Lorg/scalactic/Equivalence;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lorg/scalactic/Equivalence<TA;>;

  private final org.scalactic.Normalization $outer;
    descriptor: Lorg/scalactic/Normalization;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public final boolean areEquivalent(A, A);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #27                 // InterfaceMethod org/scalactic/NormalizingEquivalence.areEquivalent$:(Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/scalactic/Normalization$$anon$2;
            0       7     1     a   Ljava/lang/Object;
            0       7     2     b   Ljava/lang/Object;
    Signature: #21                          // (TA;TA;)Z
    MethodParameters:
      Name                           Flags
      a                              final
      b                              final

  public final org.scalactic.NormalizingEquivalence<A> and(org.scalactic.Normalization<A>);
    descriptor: (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #38                 // InterfaceMethod org/scalactic/NormalizingEquivalence.and$:(Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
         5: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/Normalization$$anon$2;
            0       6     1 other   Lorg/scalactic/Normalization;
    Signature: #33                          // (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public final org.scalactic.Normalization<A> toNormalization();
    descriptor: ()Lorg/scalactic/Normalization;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #45                 // InterfaceMethod org/scalactic/NormalizingEquivalence.toNormalization$:(Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
         4: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/Normalization$$anon$2;
    Signature: #41                          // ()Lorg/scalactic/Normalization<TA;>;

  public void org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq(org.scalactic.Equivalence<A>);
    descriptor: (Lorg/scalactic/Equivalence;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/scalactic/Normalization$$anon$2;
            0       1     1   x$1   Lorg/scalactic/Equivalence;
    Signature: #48                          // (Lorg/scalactic/Equivalence<TA;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalactic.Equivalence<A> afterNormalizationEquivalence();
    descriptor: ()Lorg/scalactic/Equivalence;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #53                 // Field afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
         4: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/Normalization$$anon$2;
    Signature: #51                          // ()Lorg/scalactic/Equivalence<TA;>;

  public A normalized(A);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #58                 // Field $outer:Lorg/scalactic/Normalization;
         4: aload_1
         5: invokeinterface #60,  2           // InterfaceMethod org/scalactic/Normalization.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/scalactic/Normalization$$anon$2;
            0      11     1     a   Ljava/lang/Object;
    Signature: #56                          // (TA;)TA;
    MethodParameters:
      Name                           Flags
      a                              final

  public org.scalactic.Normalization$$anon$2(org.scalactic.Normalization, org.scalactic.Equivalence);
    descriptor: (Lorg/scalactic/Normalization;Lorg/scalactic/Equivalence;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #58                 // Field $outer:Lorg/scalactic/Normalization;
        11: aload_0
        12: invokespecial #66                 // Method java/lang/Object."<init>":()V
        15: aload_0
        16: invokestatic  #70                 // InterfaceMethod org/scalactic/NormalizingEquivalence.$init$:(Lorg/scalactic/NormalizingEquivalence;)V
        19: aload_0
        20: aload_2
        21: putfield      #53                 // Field afterNormalizationEquivalence:Lorg/scalactic/Equivalence;
        24: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 115: 0
        line 116: 19
        line 115: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/scalactic/Normalization$$anon$2;
            0      25     1 $outer   Lorg/scalactic/Normalization;
            0      25     2 equivalence$1   Lorg/scalactic/Equivalence;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      equivalence$1                  final
}
InnerClasses:
  public final #2;                        // class org/scalactic/Normalization$$anon$2
EnclosingMethod: #10.#13                // org.scalactic.Normalization.toEquivalence
Signature: #3                           // Ljava/lang/Object;Lorg/scalactic/NormalizingEquivalence<TA;>;
SourceFile: "Normalization.scala"
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 3D 00 3E 01 00 0E 00 32 01 00 1F
   00 20 01 00 13 00 14 01 00 36 00 37 01 00 2E 00
   2F 01 00 27 00 28 01
  Scala: length = 0x0 (unknown attribute)

