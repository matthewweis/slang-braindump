Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Graph$Edge$Plain.class
  Last modified May 29, 2022; size 6828 bytes
  SHA-256 checksum d2d4e4a2882ca9e0fa4e29b1a74565c5c29f0a7db6023d36f6845940e164e7a6
  Compiled from "Graph.scala"
public final class org.sireum.Graph$Edge$Plain<W extends java.lang.Object, E extends java.lang.Object> extends java.lang.Object implements org.sireum.Graph$Edge<W, E>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Graph$Edge$Plain
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 22, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Graph$Edge$Plain
    #2 = Class              #1            // org/sireum/Graph$Edge$Plain
    #3 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Graph$Edge<TW;TE;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/Graph$Edge
    #7 = Class              #6            // org/sireum/Graph$Edge
    #8 = Utf8               Graph.scala
    #9 = Utf8               org/sireum/Graph
   #10 = Class              #9            // org/sireum/Graph
   #11 = Utf8               Edge
   #12 = Utf8               org/sireum/Graph$Edge$
   #13 = Class              #12           // org/sireum/Graph$Edge$
   #14 = Utf8               Edge$
   #15 = Utf8               Plain
   #16 = Utf8               org/sireum/Graph$Internal$
   #17 = Class              #16           // org/sireum/Graph$Internal$
   #18 = Utf8               Internal$
   #19 = Utf8               org/sireum/Graph$Internal$Edge
   #20 = Class              #19           // org/sireum/Graph$Internal$Edge
   #21 = Utf8               org/sireum/Graph$Internal$Edge$
   #22 = Class              #21           // org/sireum/Graph$Internal$Edge$
   #23 = Utf8               org/sireum/Graph$Internal$Edge$Plain
   #24 = Class              #23           // org/sireum/Graph$Internal$Edge$Plain
   #25 = Utf8               org/sireum/Graph$Internal$Edge$Plain$
   #26 = Class              #25           // org/sireum/Graph$Internal$Edge$Plain$
   #27 = Utf8               Plain$
   #28 = Utf8               hashCode
   #29 = Utf8               I
   #30 = Utf8               $content
   #31 = Utf8               Lscala/collection/immutable/Seq;
   #32 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #33 = Utf8               _source
   #34 = Utf8               Ljava/lang/Object;
   #35 = Utf8               TW;
   #36 = Utf8               _dest
   #37 = Utf8               bitmap$0
   #38 = Utf8               B
   #39 = Utf8               hash
   #40 = Utf8               ()Lorg/sireum/Z;
   #41 = Utf8               org/sireum/DatatypeSig
   #42 = Class              #41           // org/sireum/DatatypeSig
   #43 = Utf8               hash$
   #44 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #45 = NameAndType        #43:#44       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #46 = InterfaceMethodref #42.#45       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #47 = Utf8               this
   #48 = Utf8               Lorg/sireum/Graph$Edge$Plain;
   #49 = Utf8               $cannotMixImmutableAndMutable
   #50 = Utf8               ()Lscala/runtime/Nothing$;
   #51 = Utf8               org/sireum/Immutable
   #52 = Class              #51           // org/sireum/Immutable
   #53 = Utf8               $cannotMixImmutableAndMutable$
   #54 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #55 = NameAndType        #53:#54       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #56 = InterfaceMethodref #52.#55       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #57 = Utf8               $hasEquals
   #58 = Utf8               ()Z
   #59 = Utf8               $hasEquals$
   #60 = Utf8               (Lorg/sireum/Immutable;)Z
   #61 = NameAndType        #59:#60       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #62 = InterfaceMethodref #52.#61       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #63 = Utf8               $hasString
   #64 = Utf8               $hasString$
   #65 = NameAndType        #64:#60       // $hasString$:(Lorg/sireum/Immutable;)Z
   #66 = InterfaceMethodref #52.#65       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #67 = Utf8               $clone
   #68 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #69 = Utf8               org/sireum/$internal/ImmutableMarker
   #70 = Class              #69           // org/sireum/$internal/ImmutableMarker
   #71 = Utf8               $clone$
   #72 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #73 = NameAndType        #71:#72       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #74 = InterfaceMethodref #70.#73       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #75 = Utf8               source
   #76 = Utf8               ()Ljava/lang/Object;
   #77 = Utf8               ()TW;
   #78 = NameAndType        #33:#34       // _source:Ljava/lang/Object;
   #79 = Fieldref           #2.#78        // org/sireum/Graph$Edge$Plain._source:Ljava/lang/Object;
   #80 = Utf8               getSource
   #81 = Utf8               dest
   #82 = NameAndType        #36:#34       // _dest:Ljava/lang/Object;
   #83 = Fieldref           #2.#82        // org/sireum/Graph$Edge$Plain._dest:Ljava/lang/Object;
   #84 = Utf8               getDest
   #85 = Utf8               toString
   #86 = Utf8               ()Ljava/lang/String;
   #87 = NameAndType        #63:#58       // $hasString:()Z
   #88 = Methodref          #2.#87        // org/sireum/Graph$Edge$Plain.$hasString:()Z
   #89 = Utf8               string$
   #90 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #91 = NameAndType        #89:#90       // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #92 = InterfaceMethodref #42.#91       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #93 = Utf8               java/lang/StringBuilder
   #94 = Class              #93           // java/lang/StringBuilder
   #95 = Utf8               <init>
   #96 = Utf8               ()V
   #97 = NameAndType        #95:#96       // "<init>":()V
   #98 = Methodref          #94.#97       // java/lang/StringBuilder."<init>":()V
   #99 = String             #15           // Plain
  #100 = Utf8               append
  #101 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #102 = NameAndType        #100:#101     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #103 = Methodref          #94.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #104 = Utf8               (C)Ljava/lang/StringBuilder;
  #105 = NameAndType        #100:#104     // append:(C)Ljava/lang/StringBuilder;
  #106 = Methodref          #94.#105      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #107 = Utf8               org/sireum/String$
  #108 = Class              #107          // org/sireum/String$
  #109 = Utf8               MODULE$
  #110 = Utf8               Lorg/sireum/String$;
  #111 = NameAndType        #109:#110     // MODULE$:Lorg/sireum/String$;
  #112 = Fieldref           #108.#111     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #113 = NameAndType        #75:#76       // source:()Ljava/lang/Object;
  #114 = Methodref          #2.#113       // org/sireum/Graph$Edge$Plain.source:()Ljava/lang/Object;
  #115 = Utf8               escape
  #116 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #117 = NameAndType        #115:#116     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #118 = Methodref          #108.#117     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #119 = Utf8               ,
  #120 = String             #119          // ,
  #121 = NameAndType        #81:#76       // dest:()Ljava/lang/Object;
  #122 = Methodref          #2.#121       // org/sireum/Graph$Edge$Plain.dest:()Ljava/lang/Object;
  #123 = NameAndType        #85:#86       // toString:()Ljava/lang/String;
  #124 = Methodref          #94.#123      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #125 = Utf8               sb
  #126 = Utf8               Ljava/lang/StringBuilder;
  #127 = Utf8               java/lang/String
  #128 = Class              #127          // java/lang/String
  #129 = Utf8               string
  #130 = Methodref          #2.#123       // org/sireum/Graph$Edge$Plain.toString:()Ljava/lang/String;
  #131 = Utf8               apply
  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #133 = NameAndType        #131:#132     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #134 = Methodref          #108.#133     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #135 = Utf8               hashCode$lzycompute
  #136 = Utf8               ()I
  #137 = NameAndType        #37:#38       // bitmap$0:B
  #138 = Fieldref           #2.#137       // org/sireum/Graph$Edge$Plain.bitmap$0:B
  #139 = NameAndType        #57:#58       // $hasEquals:()Z
  #140 = Methodref          #2.#139       // org/sireum/Graph$Edge$Plain.$hasEquals:()Z
  #141 = NameAndType        #28:#136      // hashCode:()I
  #142 = Methodref          #5.#141       // java/lang/Object.hashCode:()I
  #143 = Utf8               scala/package$
  #144 = Class              #143          // scala/package$
  #145 = Utf8               Lscala/package$;
  #146 = NameAndType        #109:#145     // MODULE$:Lscala/package$;
  #147 = Fieldref           #144.#146     // scala/package$.MODULE$:Lscala/package$;
  #148 = Utf8               Seq
  #149 = Utf8               ()Lscala/collection/immutable/Seq$;
  #150 = NameAndType        #148:#149     // Seq:()Lscala/collection/immutable/Seq$;
  #151 = Methodref          #144.#150     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #152 = Utf8               scala/runtime/ScalaRunTime$
  #153 = Class              #152          // scala/runtime/ScalaRunTime$
  #154 = Utf8               Lscala/runtime/ScalaRunTime$;
  #155 = NameAndType        #109:#154     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #156 = Fieldref           #153.#155     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #157 = Utf8               getClass
  #158 = Utf8               ()Ljava/lang/Class;
  #159 = NameAndType        #157:#158     // getClass:()Ljava/lang/Class;
  #160 = Methodref          #2.#159       // org/sireum/Graph$Edge$Plain.getClass:()Ljava/lang/Class;
  #161 = Utf8               java/lang/Class
  #162 = Class              #161          // java/lang/Class
  #163 = Utf8               getName
  #164 = NameAndType        #163:#86      // getName:()Ljava/lang/String;
  #165 = Methodref          #162.#164     // java/lang/Class.getName:()Ljava/lang/String;
  #166 = Utf8               genericWrapArray
  #167 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #168 = NameAndType        #166:#167     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #169 = Methodref          #153.#168     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #170 = Utf8               scala/collection/immutable/Seq$
  #171 = Class              #170          // scala/collection/immutable/Seq$
  #172 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #173 = NameAndType        #131:#172     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #174 = Methodref          #171.#173     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #175 = Utf8               scala/collection/Seq
  #176 = Class              #175          // scala/collection/Seq
  #177 = InterfaceMethodref #176.#141     // scala/collection/Seq.hashCode:()I
  #178 = NameAndType        #28:#29       // hashCode:I
  #179 = Fieldref           #2.#178       // org/sireum/Graph$Edge$Plain.hashCode:I
  #180 = Utf8               java/lang/Throwable
  #181 = Class              #180          // java/lang/Throwable
  #182 = NameAndType        #135:#136     // hashCode$lzycompute:()I
  #183 = Methodref          #2.#182       // org/sireum/Graph$Edge$Plain.hashCode$lzycompute:()I
  #184 = Utf8               equals
  #185 = Utf8               (Ljava/lang/Object;)Z
  #186 = Utf8               o
  #187 = NameAndType        #184:#185     // equals:(Ljava/lang/Object;)Z
  #188 = Methodref          #5.#187       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #189 = Methodref          #2.#141       // org/sireum/Graph$Edge$Plain.hashCode:()I
  #190 = Utf8               scala/runtime/BoxesRunTime
  #191 = Class              #190          // scala/runtime/BoxesRunTime
  #192 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #193 = NameAndType        #184:#192     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #194 = Methodref          #191.#193     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #195 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lorg/sireum/Graph$Edge$Plain;
  #196 = Utf8               (TW;TW;)Lorg/sireum/Graph$Edge$Plain<TW;TE;>;
  #197 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #198 = NameAndType        #95:#197      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #199 = Methodref          #2.#198       // org/sireum/Graph$Edge$Plain."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #200 = Utf8               apply$default$1
  #201 = Utf8               apply$default$2
  #202 = Utf8               $content$lzycompute
  #203 = Utf8               ()Lscala/collection/immutable/Seq;
  #204 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #205 = Utf8               scala/Tuple2
  #206 = Class              #205          // scala/Tuple2
  #207 = Utf8               type
  #208 = String             #207          // type
  #209 = Utf8               List
  #210 = Utf8               ()Lscala/collection/immutable/List$;
  #211 = NameAndType        #209:#210     // List:()Lscala/collection/immutable/List$;
  #212 = Methodref          #144.#211     // scala/package$.List:()Lscala/collection/immutable/List$;
  #213 = Utf8               org
  #214 = String             #213          // org
  #215 = Utf8               sireum
  #216 = String             #215          // sireum
  #217 = Utf8               [Ljava/lang/Object;
  #218 = Class              #217          // "[Ljava/lang/Object;"
  #219 = Utf8               wrapRefArray
  #220 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #221 = NameAndType        #219:#220     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #222 = Methodref          #153.#221     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #223 = Utf8               scala/collection/immutable/List$
  #224 = Class              #223          // scala/collection/immutable/List$
  #225 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #226 = NameAndType        #131:#225     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #227 = Methodref          #224.#226     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #228 = Methodref          #206.#198     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #229 = String             #75           // source
  #230 = String             #81           // dest
  #231 = Utf8               scala/collection/immutable/Seq
  #232 = Class              #231          // scala/collection/immutable/Seq
  #233 = NameAndType        #30:#31       // $content:Lscala/collection/immutable/Seq;
  #234 = Fieldref           #2.#233       // org/sireum/Graph$Edge$Plain.$content:Lscala/collection/immutable/Seq;
  #235 = NameAndType        #202:#203     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #236 = Methodref          #2.#235       // org/sireum/Graph$Edge$Plain.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #237 = Utf8               toInternal
  #238 = Utf8               (Lorg/sireum/HashSMap;)Lorg/sireum/Graph$Internal$Edge;
  #239 = Utf8               (Lorg/sireum/HashSMap<TW;Lorg/sireum/Z;>;)Lorg/sireum/Graph$Internal$Edge<TE;>;
  #240 = Utf8               map
  #241 = Utf8               Lorg/sireum/Graph$Internal$Edge$Plain$;
  #242 = NameAndType        #109:#241     // MODULE$:Lorg/sireum/Graph$Internal$Edge$Plain$;
  #243 = Fieldref           #26.#242      // org/sireum/Graph$Internal$Edge$Plain$.MODULE$:Lorg/sireum/Graph$Internal$Edge$Plain$;
  #244 = Utf8               org/sireum/HashSMap
  #245 = Class              #244          // org/sireum/HashSMap
  #246 = Utf8               get
  #247 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #248 = NameAndType        #246:#247     // get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #249 = Methodref          #245.#248     // org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #250 = Utf8               org/sireum/Option
  #251 = Class              #250          // org/sireum/Option
  #252 = NameAndType        #246:#76      // get:()Ljava/lang/Object;
  #253 = InterfaceMethodref #251.#252     // org/sireum/Option.get:()Ljava/lang/Object;
  #254 = Utf8               org/sireum/Z
  #255 = Class              #254          // org/sireum/Z
  #256 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
  #257 = NameAndType        #131:#256     // apply:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
  #258 = Methodref          #26.#257      // org/sireum/Graph$Internal$Edge$Plain$.apply:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
  #259 = Utf8               Lorg/sireum/HashSMap;
  #260 = NameAndType        #67:#68       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #261 = Methodref          #2.#260       // org/sireum/Graph$Edge$Plain.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #262 = Utf8               (TW;TW;)V
  #263 = Utf8               __source
  #264 = Utf8               __dest
  #265 = Methodref          #5.#97        // java/lang/Object."<init>":()V
  #266 = Utf8               $init$
  #267 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #268 = NameAndType        #266:#267     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #269 = InterfaceMethodref #70.#268      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #270 = Utf8               (Lorg/sireum/Immutable;)V
  #271 = NameAndType        #266:#270     // $init$:(Lorg/sireum/Immutable;)V
  #272 = InterfaceMethodref #52.#271      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #273 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #274 = NameAndType        #266:#273     // $init$:(Lorg/sireum/DatatypeSig;)V
  #275 = InterfaceMethodref #42.#274      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #276 = Utf8               Signature
  #277 = Utf8               Code
  #278 = Utf8               LineNumberTable
  #279 = Utf8               LocalVariableTable
  #280 = Utf8               StackMapTable
  #281 = Utf8               MethodParameters
  #282 = Utf8               InnerClasses
  #283 = Utf8               SourceFile
  #284 = Utf8               ScalaInlineInfo
  #285 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #32                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final W _source;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #35                          // TW;

  private final W _dest;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #35                          // TW;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #66                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;

  public W source();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #79                 // Field _source:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #77                          // ()TW;

  public W getSource();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #79                 // Field _source:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #77                          // ()TW;

  public W dest();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #83                 // Field _dest:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #77                          // ()TW;

  public W getDest();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #83                 // Field _dest:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #77                          // ()TW;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #88                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #92                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          84
        14: new           #94                 // class java/lang/StringBuilder
        17: dup
        18: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #99                 // String Plain
        25: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #112                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #114                // Method source:()Ljava/lang/Object;
        44: invokevirtual #118                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #120                // String ,
        54: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #112                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: aload_0
        63: invokevirtual #122                // Method dest:()Ljava/lang/Object;
        66: invokevirtual #118                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        69: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: pop
        73: aload_1
        74: bipush        41
        76: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: invokevirtual #124                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        84: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 69
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      62     1    sb   Ljava/lang/StringBuilder;
            0      85     0  this   Lorg/sireum/Graph$Edge$Plain;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #88                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #92                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #112                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #130                // Method toString:()Ljava/lang/String;
        21: invokevirtual #134                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/Graph$Edge$Plain;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #138                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     95
        15: aload_0
        16: aload_0
        17: invokevirtual #140                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #142                // Method java/lang/Object.hashCode:()I
        27: goto          81
        30: getstatic     #147                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #151                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #156                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_3
        40: anewarray     #5                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #160                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #165                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #114                // Method source:()Ljava/lang/Object;
        59: aastore
        60: dup
        61: iconst_2
        62: aload_0
        63: invokevirtual #122                // Method dest:()Ljava/lang/Object;
        66: aastore
        67: invokevirtual #169                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        70: invokevirtual #174                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        73: checkcast     #176                // class scala/collection/Seq
        76: invokeinterface #177,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        81: putfield      #179                // Field hashCode:I
        84: aload_0
        85: aload_0
        86: getfield      #138                // Field bitmap$0:B
        89: iconst_1
        90: ior
        91: i2b
        92: putfield      #138                // Field bitmap$0:B
        95: aload_1
        96: monitorexit
        97: goto          103
       100: aload_1
       101: monitorexit
       102: athrow
       103: aload_0
       104: getfield      #179                // Field hashCode:I
       107: ireturn
      Exception table:
         from    to  target type
             4    95   100   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/Graph$Edge$Plain, class org/sireum/Graph$Edge$Plain ]
          stack = [ class org/sireum/Graph$Edge$Plain ]
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/sireum/Graph$Edge$Plain, class org/sireum/Graph$Edge$Plain ]
          stack = [ class org/sireum/Graph$Edge$Plain, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lorg/sireum/Graph$Edge$Plain;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #138                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #183                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #179                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Graph$Edge$Plain;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #140                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #188                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          103
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          103
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/Graph$Edge$Plain
        30: ifeq          94
        33: aload_3
        34: checkcast     #2                  // class org/sireum/Graph$Edge$Plain
        37: astore        4
        39: aload_0
        40: invokevirtual #189                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #189                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          90
        55: aload_0
        56: invokevirtual #114                // Method source:()Ljava/lang/Object;
        59: aload         4
        61: invokevirtual #114                // Method source:()Ljava/lang/Object;
        64: invokestatic  #194                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        67: ifeq          89
        70: aload_0
        71: invokevirtual #122                // Method dest:()Ljava/lang/Object;
        74: aload         4
        76: invokevirtual #122                // Method dest:()Ljava/lang/Object;
        79: invokestatic  #194                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        82: ifeq          89
        85: iconst_1
        86: goto          90
        89: iconst_0
        90: istore_2
        91: goto          102
        94: goto          97
        97: iconst_0
        98: istore_2
        99: goto          102
       102: iload_2
       103: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/Graph$Edge$Plain ]
        frame_type = 33 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/Graph$Edge$Plain, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Graph$Edge$Plain, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     104     0  this   Lorg/sireum/Graph$Edge$Plain;
            0     104     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Graph$Edge$Plain<W, E> apply(W, W);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lorg/sireum/Graph$Edge$Plain;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/sireum/Graph$Edge$Plain
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #199                // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/Graph$Edge$Plain;
            0      10     1 source   Ljava/lang/Object;
            0      10     2  dest   Ljava/lang/Object;
    Signature: #196                         // (TW;TW;)Lorg/sireum/Graph$Edge$Plain<TW;TE;>;
    MethodParameters:
      Name                           Flags
      source                         final
      dest                           final

  public W apply$default$1();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #114                // Method source:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #77                          // ()TW;

  public W apply$default$2();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #122                // Method dest:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #77                          // ()TW;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #138                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     136
        15: aload_0
        16: getstatic     #147                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #151                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #156                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_3
        26: anewarray     #206                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #206                // class scala/Tuple2
        34: dup
        35: ldc           #208                // String type
        37: getstatic     #147                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #212                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #156                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #128                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #214                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #216                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #99                 // String Plain
        64: aastore
        65: checkcast     #218                // class "[Ljava/lang/Object;"
        68: invokevirtual #222                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #227                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #228                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #206                // class scala/Tuple2
        83: dup
        84: ldc           #229                // String source
        86: aload_0
        87: invokevirtual #114                // Method source:()Ljava/lang/Object;
        90: invokespecial #228                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: dup
        95: iconst_2
        96: new           #206                // class scala/Tuple2
        99: dup
       100: ldc           #230                // String dest
       102: aload_0
       103: invokevirtual #122                // Method dest:()Ljava/lang/Object;
       106: invokespecial #228                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       109: aastore
       110: checkcast     #218                // class "[Ljava/lang/Object;"
       113: invokevirtual #222                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       116: invokevirtual #174                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       119: checkcast     #232                // class scala/collection/immutable/Seq
       122: putfield      #234                // Field $content:Lscala/collection/immutable/Seq;
       125: aload_0
       126: aload_0
       127: getfield      #138                // Field bitmap$0:B
       130: iconst_2
       131: ior
       132: i2b
       133: putfield      #138                // Field bitmap$0:B
       136: aload_1
       137: monitorexit
       138: goto          144
       141: aload_1
       142: monitorexit
       143: athrow
       144: aload_0
       145: getfield      #234                // Field $content:Lscala/collection/immutable/Seq;
       148: areturn
      Exception table:
         from    to  target type
             4   136   141   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 136
          locals = [ class org/sireum/Graph$Edge$Plain ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     149     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #204                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #138                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #236                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #234                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Graph$Edge$Plain;
    Signature: #204                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.Graph$Internal$Edge<E> toInternal(org.sireum.HashSMap<W, org.sireum.Z>);
    descriptor: (Lorg/sireum/HashSMap;)Lorg/sireum/Graph$Internal$Edge;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #243                // Field org/sireum/Graph$Internal$Edge$Plain$.MODULE$:Lorg/sireum/Graph$Internal$Edge$Plain$;
         3: aload_1
         4: aload_0
         5: invokevirtual #114                // Method source:()Ljava/lang/Object;
         8: invokevirtual #249                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        11: invokeinterface #253,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        16: checkcast     #255                // class org/sireum/Z
        19: aload_1
        20: aload_0
        21: invokevirtual #122                // Method dest:()Ljava/lang/Object;
        24: invokevirtual #249                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        27: invokeinterface #253,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        32: checkcast     #255                // class org/sireum/Z
        35: invokevirtual #258                // Method org/sireum/Graph$Internal$Edge$Plain$.apply:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Graph$Internal$Edge$Plain;
        38: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/sireum/Graph$Edge$Plain;
            0      39     1   map   Lorg/sireum/HashSMap;
    Signature: #239                         // (Lorg/sireum/HashSMap<TW;Lorg/sireum/Z;>;)Lorg/sireum/Graph$Internal$Edge<TE;>;
    MethodParameters:
      Name                           Flags
      map                            final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #261                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Graph$Edge$Plain;

  public org.sireum.Graph$Edge$Plain(W, W);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #265                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #269                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #272                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #275                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #79                 // Field _source:Ljava/lang/Object;
        21: aload_0
        22: aload_2
        23: putfield      #83                 // Field _dest:Ljava/lang/Object;
        26: return
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/Graph$Edge$Plain;
            0      27     1 __source   Ljava/lang/Object;
            0      27     2 __dest   Ljava/lang/Object;
    Signature: #262                         // (TW;TW;)V
    MethodParameters:
      Name                           Flags
      __source                       final
      __dest                         final
}
InnerClasses:
  public static #11= #7 of #10;           // Edge=class org/sireum/Graph$Edge of class org/sireum/Graph
  public static #14= #13 of #10;          // Edge$=class org/sireum/Graph$Edge$ of class org/sireum/Graph
  public static final #15= #2 of #13;     // Plain=class org/sireum/Graph$Edge$Plain of class org/sireum/Graph$Edge$
  public static #18= #17 of #10;          // Internal$=class org/sireum/Graph$Internal$ of class org/sireum/Graph
  public static #11= #20 of #17;          // Edge=class org/sireum/Graph$Internal$Edge of class org/sireum/Graph$Internal$
  public static #14= #22 of #17;          // Edge$=class org/sireum/Graph$Internal$Edge$ of class org/sireum/Graph$Internal$
  public static final #15= #24 of #22;    // Plain=class org/sireum/Graph$Internal$Edge$Plain of class org/sireum/Graph$Internal$Edge$
  public static #27= #26 of #22;          // Plain$=class org/sireum/Graph$Internal$Edge$Plain$ of class org/sireum/Graph$Internal$Edge$
Signature: #3                           // <W:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Graph$Edge<TW;TE;>;
SourceFile: "Graph.scala"
  ScalaInlineInfo: length = 0x72 (unknown attribute)
   01 01 00 16 00 31 00 32 01 00 43 00 4C 01 00 43
   00 44 01 00 1E 00 CB 01 00 CA 00 CB 01 00 39 00
   3A 01 00 3F 00 3A 01 00 5F 00 C5 01 00 83 00 C3
   01 00 C8 00 4C 01 00 C9 00 4C 01 00 51 00 4C 01
   00 B8 00 B9 01 00 54 00 4C 01 00 50 00 4C 01 00
   27 00 28 01 00 1C 00 88 01 00 87 00 88 01 00 4B
   00 4C 01 00 81 00 56 01 00 ED 00 EE 01 00 55 00
   56 01
  Scala: length = 0x0 (unknown attribute)

