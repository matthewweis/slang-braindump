Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/conversions/B_Ext$.class
  Last modified May 29, 2022; size 10607 bytes
  SHA-256 checksum 6de0fea488bbebf39fac9a2e7cfd97f8a4f2c87a9877244fbba69a01f36b4740
  Compiled from "extension.scala"
public final class org.sireum.conversions.B_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/B_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 24, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/conversions/B_Ext$
    #2 = Class              #1            // org/sireum/conversions/B_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               extension.scala
    #6 = Utf8               org/sireum/F32$$String$
    #7 = Class              #6            // org/sireum/F32$$String$
    #8 = Utf8               org/sireum/F32
    #9 = Class              #8            // org/sireum/F32
   #10 = Utf8               $String$
   #11 = Utf8               org/sireum/F64$$String$
   #12 = Class              #11           // org/sireum/F64$$String$
   #13 = Utf8               org/sireum/F64
   #14 = Class              #13           // org/sireum/F64
   #15 = Utf8               org/sireum/N$N$Slang
   #16 = Class              #15           // org/sireum/N$N$Slang
   #17 = Utf8               org/sireum/N
   #18 = Class              #17           // org/sireum/N
   #19 = Utf8               N$Slang
   #20 = Utf8               org/sireum/N$N$Slang$n$
   #21 = Class              #20           // org/sireum/N$N$Slang$n$
   #22 = Utf8               n$
   #23 = Utf8               org/sireum/N16$N16$Slang
   #24 = Class              #23           // org/sireum/N16$N16$Slang
   #25 = Utf8               org/sireum/N16
   #26 = Class              #25           // org/sireum/N16
   #27 = Utf8               N16$Slang
   #28 = Utf8               org/sireum/N16$N16$Slang$n16$
   #29 = Class              #28           // org/sireum/N16$N16$Slang$n16$
   #30 = Utf8               n16$
   #31 = Utf8               org/sireum/N32$N32$Slang
   #32 = Class              #31           // org/sireum/N32$N32$Slang
   #33 = Utf8               org/sireum/N32
   #34 = Class              #33           // org/sireum/N32
   #35 = Utf8               N32$Slang
   #36 = Utf8               org/sireum/N32$N32$Slang$n32$
   #37 = Class              #36           // org/sireum/N32$N32$Slang$n32$
   #38 = Utf8               n32$
   #39 = Utf8               org/sireum/N64$N64$Slang
   #40 = Class              #39           // org/sireum/N64$N64$Slang
   #41 = Utf8               org/sireum/N64
   #42 = Class              #41           // org/sireum/N64
   #43 = Utf8               N64$Slang
   #44 = Utf8               org/sireum/N64$N64$Slang$n64$
   #45 = Class              #44           // org/sireum/N64$N64$Slang$n64$
   #46 = Utf8               n64$
   #47 = Utf8               org/sireum/N8$N8$Slang
   #48 = Class              #47           // org/sireum/N8$N8$Slang
   #49 = Utf8               org/sireum/N8
   #50 = Class              #49           // org/sireum/N8
   #51 = Utf8               N8$Slang
   #52 = Utf8               org/sireum/N8$N8$Slang$n8$
   #53 = Class              #52           // org/sireum/N8$N8$Slang$n8$
   #54 = Utf8               n8$
   #55 = Utf8               org/sireum/R$$String$
   #56 = Class              #55           // org/sireum/R$$String$
   #57 = Utf8               org/sireum/R
   #58 = Class              #57           // org/sireum/R
   #59 = Utf8               org/sireum/S16$S16$Slang
   #60 = Class              #59           // org/sireum/S16$S16$Slang
   #61 = Utf8               org/sireum/S16
   #62 = Class              #61           // org/sireum/S16
   #63 = Utf8               S16$Slang
   #64 = Utf8               org/sireum/S16$S16$Slang$s16$
   #65 = Class              #64           // org/sireum/S16$S16$Slang$s16$
   #66 = Utf8               s16$
   #67 = Utf8               org/sireum/S32$S32$Slang
   #68 = Class              #67           // org/sireum/S32$S32$Slang
   #69 = Utf8               org/sireum/S32
   #70 = Class              #69           // org/sireum/S32
   #71 = Utf8               S32$Slang
   #72 = Utf8               org/sireum/S32$S32$Slang$s32$
   #73 = Class              #72           // org/sireum/S32$S32$Slang$s32$
   #74 = Utf8               s32$
   #75 = Utf8               org/sireum/S64$S64$Slang
   #76 = Class              #75           // org/sireum/S64$S64$Slang
   #77 = Utf8               org/sireum/S64
   #78 = Class              #77           // org/sireum/S64
   #79 = Utf8               S64$Slang
   #80 = Utf8               org/sireum/S64$S64$Slang$s64$
   #81 = Class              #80           // org/sireum/S64$S64$Slang$s64$
   #82 = Utf8               s64$
   #83 = Utf8               org/sireum/S8$S8$Slang
   #84 = Class              #83           // org/sireum/S8$S8$Slang
   #85 = Utf8               org/sireum/S8
   #86 = Class              #85           // org/sireum/S8
   #87 = Utf8               S8$Slang
   #88 = Utf8               org/sireum/S8$S8$Slang$s8$
   #89 = Class              #88           // org/sireum/S8$S8$Slang$s8$
   #90 = Utf8               s8$
   #91 = Utf8               org/sireum/U16$U16$Slang
   #92 = Class              #91           // org/sireum/U16$U16$Slang
   #93 = Utf8               org/sireum/U16
   #94 = Class              #93           // org/sireum/U16
   #95 = Utf8               U16$Slang
   #96 = Utf8               org/sireum/U16$U16$Slang$u16$
   #97 = Class              #96           // org/sireum/U16$U16$Slang$u16$
   #98 = Utf8               u16$
   #99 = Utf8               org/sireum/U32$U32$Slang
  #100 = Class              #99           // org/sireum/U32$U32$Slang
  #101 = Utf8               org/sireum/U32
  #102 = Class              #101          // org/sireum/U32
  #103 = Utf8               U32$Slang
  #104 = Utf8               org/sireum/U32$U32$Slang$u32$
  #105 = Class              #104          // org/sireum/U32$U32$Slang$u32$
  #106 = Utf8               u32$
  #107 = Utf8               org/sireum/U64$U64$Slang
  #108 = Class              #107          // org/sireum/U64$U64$Slang
  #109 = Utf8               org/sireum/U64
  #110 = Class              #109          // org/sireum/U64
  #111 = Utf8               U64$Slang
  #112 = Utf8               org/sireum/U64$U64$Slang$u64$
  #113 = Class              #112          // org/sireum/U64$U64$Slang$u64$
  #114 = Utf8               u64$
  #115 = Utf8               org/sireum/U8$U8$Slang
  #116 = Class              #115          // org/sireum/U8$U8$Slang
  #117 = Utf8               org/sireum/U8
  #118 = Class              #117          // org/sireum/U8
  #119 = Utf8               U8$Slang
  #120 = Utf8               org/sireum/U8$U8$Slang$u8$
  #121 = Class              #120          // org/sireum/U8$U8$Slang$u8$
  #122 = Utf8               u8$
  #123 = Utf8               org/sireum/Z16$Z16$Slang
  #124 = Class              #123          // org/sireum/Z16$Z16$Slang
  #125 = Utf8               org/sireum/Z16
  #126 = Class              #125          // org/sireum/Z16
  #127 = Utf8               Z16$Slang
  #128 = Utf8               org/sireum/Z16$Z16$Slang$z16$
  #129 = Class              #128          // org/sireum/Z16$Z16$Slang$z16$
  #130 = Utf8               z16$
  #131 = Utf8               org/sireum/Z32$Z32$Slang
  #132 = Class              #131          // org/sireum/Z32$Z32$Slang
  #133 = Utf8               org/sireum/Z32
  #134 = Class              #133          // org/sireum/Z32
  #135 = Utf8               Z32$Slang
  #136 = Utf8               org/sireum/Z32$Z32$Slang$z32$
  #137 = Class              #136          // org/sireum/Z32$Z32$Slang$z32$
  #138 = Utf8               z32$
  #139 = Utf8               org/sireum/Z64$Z64$Slang
  #140 = Class              #139          // org/sireum/Z64$Z64$Slang
  #141 = Utf8               org/sireum/Z64
  #142 = Class              #141          // org/sireum/Z64
  #143 = Utf8               Z64$Slang
  #144 = Utf8               org/sireum/Z64$Z64$Slang$z64$
  #145 = Class              #144          // org/sireum/Z64$Z64$Slang$z64$
  #146 = Utf8               z64$
  #147 = Utf8               org/sireum/Z8$Z8$Slang
  #148 = Class              #147          // org/sireum/Z8$Z8$Slang
  #149 = Utf8               org/sireum/Z8
  #150 = Class              #149          // org/sireum/Z8
  #151 = Utf8               Z8$Slang
  #152 = Utf8               org/sireum/Z8$Z8$Slang$z8$
  #153 = Class              #152          // org/sireum/Z8$Z8$Slang$z8$
  #154 = Utf8               z8$
  #155 = Utf8               MODULE$
  #156 = Utf8               Lorg/sireum/conversions/B_Ext$;
  #157 = Utf8               <clinit>
  #158 = Utf8               ()V
  #159 = Utf8               <init>
  #160 = NameAndType        #159:#158     // "<init>":()V
  #161 = Methodref          #2.#160       // org/sireum/conversions/B_Ext$."<init>":()V
  #162 = NameAndType        #155:#156     // MODULE$:Lorg/sireum/conversions/B_Ext$;
  #163 = Fieldref           #2.#162       // org/sireum/conversions/B_Ext$.MODULE$:Lorg/sireum/conversions/B_Ext$;
  #164 = Utf8               toB
  #165 = Utf8               (Z)Z
  #166 = Utf8               b
  #167 = Utf8               this
  #168 = Utf8               Z
  #169 = Utf8               toZ
  #170 = Utf8               (Z)Lorg/sireum/Z;
  #171 = Utf8               org/sireum/B$
  #172 = Class              #171          // org/sireum/B$
  #173 = Utf8               Lorg/sireum/B$;
  #174 = NameAndType        #155:#173     // MODULE$:Lorg/sireum/B$;
  #175 = Fieldref           #172.#174     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #176 = Utf8               $4B
  #177 = NameAndType        #176:#165     // $4B:(Z)Z
  #178 = Methodref          #172.#177     // org/sireum/B$.$4B:(Z)Z
  #179 = Utf8               org/sireum/Z$
  #180 = Class              #179          // org/sireum/Z$
  #181 = Utf8               Lorg/sireum/Z$;
  #182 = NameAndType        #155:#181     // MODULE$:Lorg/sireum/Z$;
  #183 = Fieldref           #180.#182     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #184 = Utf8               apply
  #185 = Utf8               (I)Lorg/sireum/Z;
  #186 = NameAndType        #184:#185     // apply:(I)Lorg/sireum/Z;
  #187 = Methodref          #180.#186     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #188 = Utf8               org/sireum/Z
  #189 = Class              #188          // org/sireum/Z
  #190 = Utf8               toZ8
  #191 = Utf8               org/sireum/Z8$
  #192 = Class              #191          // org/sireum/Z8$
  #193 = Utf8               Lorg/sireum/Z8$;
  #194 = NameAndType        #155:#193     // MODULE$:Lorg/sireum/Z8$;
  #195 = Fieldref           #192.#194     // org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
  #196 = Utf8               scala/StringContext
  #197 = Class              #196          // scala/StringContext
  #198 = Utf8               scala/runtime/ScalaRunTime$
  #199 = Class              #198          // scala/runtime/ScalaRunTime$
  #200 = Utf8               Lscala/runtime/ScalaRunTime$;
  #201 = NameAndType        #155:#200     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #202 = Fieldref           #199.#201     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #203 = Utf8               java/lang/String
  #204 = Class              #203          // java/lang/String
  #205 = Utf8               1
  #206 = String             #205          // 1
  #207 = Utf8               [Ljava/lang/Object;
  #208 = Class              #207          // "[Ljava/lang/Object;"
  #209 = Utf8               wrapRefArray
  #210 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #211 = NameAndType        #209:#210     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #212 = Methodref          #199.#211     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #213 = Utf8               (Lscala/collection/immutable/Seq;)V
  #214 = NameAndType        #159:#213     // "<init>":(Lscala/collection/immutable/Seq;)V
  #215 = Methodref          #197.#214     // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
  #216 = Utf8               (Lscala/StringContext;)Lorg/sireum/Z8$Z8$Slang;
  #217 = NameAndType        #151:#216     // Z8$Slang:(Lscala/StringContext;)Lorg/sireum/Z8$Z8$Slang;
  #218 = Methodref          #192.#217     // org/sireum/Z8$.Z8$Slang:(Lscala/StringContext;)Lorg/sireum/Z8$Z8$Slang;
  #219 = Utf8               z8
  #220 = Utf8               ()Lorg/sireum/Z8$Z8$Slang$z8$;
  #221 = NameAndType        #219:#220     // z8:()Lorg/sireum/Z8$Z8$Slang$z8$;
  #222 = Methodref          #148.#221     // org/sireum/Z8$Z8$Slang.z8:()Lorg/sireum/Z8$Z8$Slang$z8$;
  #223 = Utf8               scala/collection/immutable/Nil$
  #224 = Class              #223          // scala/collection/immutable/Nil$
  #225 = Utf8               Lscala/collection/immutable/Nil$;
  #226 = NameAndType        #155:#225     // MODULE$:Lscala/collection/immutable/Nil$;
  #227 = Fieldref           #224.#226     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #228 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #229 = NameAndType        #184:#228     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #230 = Methodref          #153.#229     // org/sireum/Z8$Z8$Slang$z8$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #231 = Utf8               0
  #232 = String             #231          // 0
  #233 = Utf8               toZ16
  #234 = Utf8               org/sireum/Z16$
  #235 = Class              #234          // org/sireum/Z16$
  #236 = Utf8               Lorg/sireum/Z16$;
  #237 = NameAndType        #155:#236     // MODULE$:Lorg/sireum/Z16$;
  #238 = Fieldref           #235.#237     // org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
  #239 = Utf8               (Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
  #240 = NameAndType        #127:#239     // Z16$Slang:(Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
  #241 = Methodref          #235.#240     // org/sireum/Z16$.Z16$Slang:(Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
  #242 = Utf8               z16
  #243 = Utf8               ()Lorg/sireum/Z16$Z16$Slang$z16$;
  #244 = NameAndType        #242:#243     // z16:()Lorg/sireum/Z16$Z16$Slang$z16$;
  #245 = Methodref          #124.#244     // org/sireum/Z16$Z16$Slang.z16:()Lorg/sireum/Z16$Z16$Slang$z16$;
  #246 = Methodref          #129.#229     // org/sireum/Z16$Z16$Slang$z16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #247 = Utf8               toZ32
  #248 = Utf8               org/sireum/Z32$
  #249 = Class              #248          // org/sireum/Z32$
  #250 = Utf8               Lorg/sireum/Z32$;
  #251 = NameAndType        #155:#250     // MODULE$:Lorg/sireum/Z32$;
  #252 = Fieldref           #249.#251     // org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
  #253 = Utf8               (Lscala/StringContext;)Lorg/sireum/Z32$Z32$Slang;
  #254 = NameAndType        #135:#253     // Z32$Slang:(Lscala/StringContext;)Lorg/sireum/Z32$Z32$Slang;
  #255 = Methodref          #249.#254     // org/sireum/Z32$.Z32$Slang:(Lscala/StringContext;)Lorg/sireum/Z32$Z32$Slang;
  #256 = Utf8               z32
  #257 = Utf8               ()Lorg/sireum/Z32$Z32$Slang$z32$;
  #258 = NameAndType        #256:#257     // z32:()Lorg/sireum/Z32$Z32$Slang$z32$;
  #259 = Methodref          #132.#258     // org/sireum/Z32$Z32$Slang.z32:()Lorg/sireum/Z32$Z32$Slang$z32$;
  #260 = Methodref          #137.#229     // org/sireum/Z32$Z32$Slang$z32$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #261 = Utf8               toZ64
  #262 = Utf8               org/sireum/Z64$
  #263 = Class              #262          // org/sireum/Z64$
  #264 = Utf8               Lorg/sireum/Z64$;
  #265 = NameAndType        #155:#264     // MODULE$:Lorg/sireum/Z64$;
  #266 = Fieldref           #263.#265     // org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
  #267 = Utf8               (Lscala/StringContext;)Lorg/sireum/Z64$Z64$Slang;
  #268 = NameAndType        #143:#267     // Z64$Slang:(Lscala/StringContext;)Lorg/sireum/Z64$Z64$Slang;
  #269 = Methodref          #263.#268     // org/sireum/Z64$.Z64$Slang:(Lscala/StringContext;)Lorg/sireum/Z64$Z64$Slang;
  #270 = Utf8               z64
  #271 = Utf8               ()Lorg/sireum/Z64$Z64$Slang$z64$;
  #272 = NameAndType        #270:#271     // z64:()Lorg/sireum/Z64$Z64$Slang$z64$;
  #273 = Methodref          #140.#272     // org/sireum/Z64$Z64$Slang.z64:()Lorg/sireum/Z64$Z64$Slang$z64$;
  #274 = Methodref          #145.#229     // org/sireum/Z64$Z64$Slang$z64$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #275 = Utf8               toN
  #276 = Utf8               org/sireum/N$
  #277 = Class              #276          // org/sireum/N$
  #278 = Utf8               Lorg/sireum/N$;
  #279 = NameAndType        #155:#278     // MODULE$:Lorg/sireum/N$;
  #280 = Fieldref           #277.#279     // org/sireum/N$.MODULE$:Lorg/sireum/N$;
  #281 = Utf8               (Lscala/StringContext;)Lorg/sireum/N$N$Slang;
  #282 = NameAndType        #19:#281      // N$Slang:(Lscala/StringContext;)Lorg/sireum/N$N$Slang;
  #283 = Methodref          #277.#282     // org/sireum/N$.N$Slang:(Lscala/StringContext;)Lorg/sireum/N$N$Slang;
  #284 = Utf8               n
  #285 = Utf8               ()Lorg/sireum/N$N$Slang$n$;
  #286 = NameAndType        #284:#285     // n:()Lorg/sireum/N$N$Slang$n$;
  #287 = Methodref          #16.#286      // org/sireum/N$N$Slang.n:()Lorg/sireum/N$N$Slang$n$;
  #288 = Methodref          #21.#229      // org/sireum/N$N$Slang$n$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #289 = Utf8               toN8
  #290 = Utf8               org/sireum/N8$
  #291 = Class              #290          // org/sireum/N8$
  #292 = Utf8               Lorg/sireum/N8$;
  #293 = NameAndType        #155:#292     // MODULE$:Lorg/sireum/N8$;
  #294 = Fieldref           #291.#293     // org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
  #295 = Utf8               (Lscala/StringContext;)Lorg/sireum/N8$N8$Slang;
  #296 = NameAndType        #51:#295      // N8$Slang:(Lscala/StringContext;)Lorg/sireum/N8$N8$Slang;
  #297 = Methodref          #291.#296     // org/sireum/N8$.N8$Slang:(Lscala/StringContext;)Lorg/sireum/N8$N8$Slang;
  #298 = Utf8               n8
  #299 = Utf8               ()Lorg/sireum/N8$N8$Slang$n8$;
  #300 = NameAndType        #298:#299     // n8:()Lorg/sireum/N8$N8$Slang$n8$;
  #301 = Methodref          #48.#300      // org/sireum/N8$N8$Slang.n8:()Lorg/sireum/N8$N8$Slang$n8$;
  #302 = Methodref          #53.#229      // org/sireum/N8$N8$Slang$n8$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #303 = Utf8               toN16
  #304 = Utf8               org/sireum/N16$
  #305 = Class              #304          // org/sireum/N16$
  #306 = Utf8               Lorg/sireum/N16$;
  #307 = NameAndType        #155:#306     // MODULE$:Lorg/sireum/N16$;
  #308 = Fieldref           #305.#307     // org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
  #309 = Utf8               (Lscala/StringContext;)Lorg/sireum/N16$N16$Slang;
  #310 = NameAndType        #27:#309      // N16$Slang:(Lscala/StringContext;)Lorg/sireum/N16$N16$Slang;
  #311 = Methodref          #305.#310     // org/sireum/N16$.N16$Slang:(Lscala/StringContext;)Lorg/sireum/N16$N16$Slang;
  #312 = Utf8               n16
  #313 = Utf8               ()Lorg/sireum/N16$N16$Slang$n16$;
  #314 = NameAndType        #312:#313     // n16:()Lorg/sireum/N16$N16$Slang$n16$;
  #315 = Methodref          #24.#314      // org/sireum/N16$N16$Slang.n16:()Lorg/sireum/N16$N16$Slang$n16$;
  #316 = Methodref          #29.#229      // org/sireum/N16$N16$Slang$n16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #317 = Utf8               toN32
  #318 = Utf8               org/sireum/N32$
  #319 = Class              #318          // org/sireum/N32$
  #320 = Utf8               Lorg/sireum/N32$;
  #321 = NameAndType        #155:#320     // MODULE$:Lorg/sireum/N32$;
  #322 = Fieldref           #319.#321     // org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
  #323 = Utf8               (Lscala/StringContext;)Lorg/sireum/N32$N32$Slang;
  #324 = NameAndType        #35:#323      // N32$Slang:(Lscala/StringContext;)Lorg/sireum/N32$N32$Slang;
  #325 = Methodref          #319.#324     // org/sireum/N32$.N32$Slang:(Lscala/StringContext;)Lorg/sireum/N32$N32$Slang;
  #326 = Utf8               n32
  #327 = Utf8               ()Lorg/sireum/N32$N32$Slang$n32$;
  #328 = NameAndType        #326:#327     // n32:()Lorg/sireum/N32$N32$Slang$n32$;
  #329 = Methodref          #32.#328      // org/sireum/N32$N32$Slang.n32:()Lorg/sireum/N32$N32$Slang$n32$;
  #330 = Methodref          #37.#229      // org/sireum/N32$N32$Slang$n32$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #331 = Utf8               toN64
  #332 = Utf8               org/sireum/N64$
  #333 = Class              #332          // org/sireum/N64$
  #334 = Utf8               Lorg/sireum/N64$;
  #335 = NameAndType        #155:#334     // MODULE$:Lorg/sireum/N64$;
  #336 = Fieldref           #333.#335     // org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
  #337 = Utf8               (Lscala/StringContext;)Lorg/sireum/N64$N64$Slang;
  #338 = NameAndType        #43:#337      // N64$Slang:(Lscala/StringContext;)Lorg/sireum/N64$N64$Slang;
  #339 = Methodref          #333.#338     // org/sireum/N64$.N64$Slang:(Lscala/StringContext;)Lorg/sireum/N64$N64$Slang;
  #340 = Utf8               n64
  #341 = Utf8               ()Lorg/sireum/N64$N64$Slang$n64$;
  #342 = NameAndType        #340:#341     // n64:()Lorg/sireum/N64$N64$Slang$n64$;
  #343 = Methodref          #40.#342      // org/sireum/N64$N64$Slang.n64:()Lorg/sireum/N64$N64$Slang$n64$;
  #344 = Methodref          #45.#229      // org/sireum/N64$N64$Slang$n64$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #345 = Utf8               toS8
  #346 = Utf8               (Z)B
  #347 = Utf8               org/sireum/S8$
  #348 = Class              #347          // org/sireum/S8$
  #349 = Utf8               Lorg/sireum/S8$;
  #350 = NameAndType        #155:#349     // MODULE$:Lorg/sireum/S8$;
  #351 = Fieldref           #348.#350     // org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
  #352 = Utf8               (Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
  #353 = NameAndType        #87:#352      // S8$Slang:(Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
  #354 = Methodref          #348.#353     // org/sireum/S8$.S8$Slang:(Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
  #355 = Utf8               s8
  #356 = Utf8               ()Lorg/sireum/S8$S8$Slang$s8$;
  #357 = NameAndType        #355:#356     // s8:()Lorg/sireum/S8$S8$Slang$s8$;
  #358 = Methodref          #84.#357      // org/sireum/S8$S8$Slang.s8:()Lorg/sireum/S8$S8$Slang$s8$;
  #359 = Utf8               (Lscala/collection/immutable/Seq;)B
  #360 = NameAndType        #184:#359     // apply:(Lscala/collection/immutable/Seq;)B
  #361 = Methodref          #89.#360      // org/sireum/S8$S8$Slang$s8$.apply:(Lscala/collection/immutable/Seq;)B
  #362 = Utf8               toS16
  #363 = Utf8               (Z)S
  #364 = Utf8               org/sireum/S16$
  #365 = Class              #364          // org/sireum/S16$
  #366 = Utf8               Lorg/sireum/S16$;
  #367 = NameAndType        #155:#366     // MODULE$:Lorg/sireum/S16$;
  #368 = Fieldref           #365.#367     // org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
  #369 = Utf8               (Lscala/StringContext;)Lorg/sireum/S16$S16$Slang;
  #370 = NameAndType        #63:#369      // S16$Slang:(Lscala/StringContext;)Lorg/sireum/S16$S16$Slang;
  #371 = Methodref          #365.#370     // org/sireum/S16$.S16$Slang:(Lscala/StringContext;)Lorg/sireum/S16$S16$Slang;
  #372 = Utf8               s16
  #373 = Utf8               ()Lorg/sireum/S16$S16$Slang$s16$;
  #374 = NameAndType        #372:#373     // s16:()Lorg/sireum/S16$S16$Slang$s16$;
  #375 = Methodref          #60.#374      // org/sireum/S16$S16$Slang.s16:()Lorg/sireum/S16$S16$Slang$s16$;
  #376 = Utf8               (Lscala/collection/immutable/Seq;)S
  #377 = NameAndType        #184:#376     // apply:(Lscala/collection/immutable/Seq;)S
  #378 = Methodref          #65.#377      // org/sireum/S16$S16$Slang$s16$.apply:(Lscala/collection/immutable/Seq;)S
  #379 = Utf8               toS32
  #380 = Utf8               (Z)I
  #381 = Utf8               org/sireum/S32$
  #382 = Class              #381          // org/sireum/S32$
  #383 = Utf8               Lorg/sireum/S32$;
  #384 = NameAndType        #155:#383     // MODULE$:Lorg/sireum/S32$;
  #385 = Fieldref           #382.#384     // org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
  #386 = Utf8               (Lscala/StringContext;)Lorg/sireum/S32$S32$Slang;
  #387 = NameAndType        #71:#386      // S32$Slang:(Lscala/StringContext;)Lorg/sireum/S32$S32$Slang;
  #388 = Methodref          #382.#387     // org/sireum/S32$.S32$Slang:(Lscala/StringContext;)Lorg/sireum/S32$S32$Slang;
  #389 = Utf8               s32
  #390 = Utf8               ()Lorg/sireum/S32$S32$Slang$s32$;
  #391 = NameAndType        #389:#390     // s32:()Lorg/sireum/S32$S32$Slang$s32$;
  #392 = Methodref          #68.#391      // org/sireum/S32$S32$Slang.s32:()Lorg/sireum/S32$S32$Slang$s32$;
  #393 = Utf8               (Lscala/collection/immutable/Seq;)I
  #394 = NameAndType        #184:#393     // apply:(Lscala/collection/immutable/Seq;)I
  #395 = Methodref          #73.#394      // org/sireum/S32$S32$Slang$s32$.apply:(Lscala/collection/immutable/Seq;)I
  #396 = Utf8               toS64
  #397 = Utf8               (Z)J
  #398 = Utf8               org/sireum/S64$
  #399 = Class              #398          // org/sireum/S64$
  #400 = Utf8               Lorg/sireum/S64$;
  #401 = NameAndType        #155:#400     // MODULE$:Lorg/sireum/S64$;
  #402 = Fieldref           #399.#401     // org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
  #403 = Utf8               (Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
  #404 = NameAndType        #79:#403      // S64$Slang:(Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
  #405 = Methodref          #399.#404     // org/sireum/S64$.S64$Slang:(Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
  #406 = Utf8               s64
  #407 = Utf8               ()Lorg/sireum/S64$S64$Slang$s64$;
  #408 = NameAndType        #406:#407     // s64:()Lorg/sireum/S64$S64$Slang$s64$;
  #409 = Methodref          #76.#408      // org/sireum/S64$S64$Slang.s64:()Lorg/sireum/S64$S64$Slang$s64$;
  #410 = Utf8               (Lscala/collection/immutable/Seq;)J
  #411 = NameAndType        #184:#410     // apply:(Lscala/collection/immutable/Seq;)J
  #412 = Methodref          #81.#411      // org/sireum/S64$S64$Slang$s64$.apply:(Lscala/collection/immutable/Seq;)J
  #413 = Utf8               toU8
  #414 = Utf8               org/sireum/U8$
  #415 = Class              #414          // org/sireum/U8$
  #416 = Utf8               Lorg/sireum/U8$;
  #417 = NameAndType        #155:#416     // MODULE$:Lorg/sireum/U8$;
  #418 = Fieldref           #415.#417     // org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
  #419 = Utf8               (Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
  #420 = NameAndType        #119:#419     // U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
  #421 = Methodref          #415.#420     // org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
  #422 = Utf8               u8
  #423 = Utf8               ()Lorg/sireum/U8$U8$Slang$u8$;
  #424 = NameAndType        #422:#423     // u8:()Lorg/sireum/U8$U8$Slang$u8$;
  #425 = Methodref          #116.#424     // org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
  #426 = Methodref          #121.#360     // org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
  #427 = Utf8               toU16
  #428 = Utf8               org/sireum/U16$
  #429 = Class              #428          // org/sireum/U16$
  #430 = Utf8               Lorg/sireum/U16$;
  #431 = NameAndType        #155:#430     // MODULE$:Lorg/sireum/U16$;
  #432 = Fieldref           #429.#431     // org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
  #433 = Utf8               (Lscala/StringContext;)Lorg/sireum/U16$U16$Slang;
  #434 = NameAndType        #95:#433      // U16$Slang:(Lscala/StringContext;)Lorg/sireum/U16$U16$Slang;
  #435 = Methodref          #429.#434     // org/sireum/U16$.U16$Slang:(Lscala/StringContext;)Lorg/sireum/U16$U16$Slang;
  #436 = Utf8               u16
  #437 = Utf8               ()Lorg/sireum/U16$U16$Slang$u16$;
  #438 = NameAndType        #436:#437     // u16:()Lorg/sireum/U16$U16$Slang$u16$;
  #439 = Methodref          #92.#438      // org/sireum/U16$U16$Slang.u16:()Lorg/sireum/U16$U16$Slang$u16$;
  #440 = Methodref          #97.#377      // org/sireum/U16$U16$Slang$u16$.apply:(Lscala/collection/immutable/Seq;)S
  #441 = Utf8               toU32
  #442 = Utf8               org/sireum/U32$
  #443 = Class              #442          // org/sireum/U32$
  #444 = Utf8               Lorg/sireum/U32$;
  #445 = NameAndType        #155:#444     // MODULE$:Lorg/sireum/U32$;
  #446 = Fieldref           #443.#445     // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
  #447 = Utf8               (Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
  #448 = NameAndType        #103:#447     // U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
  #449 = Methodref          #443.#448     // org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
  #450 = Utf8               u32
  #451 = Utf8               ()Lorg/sireum/U32$U32$Slang$u32$;
  #452 = NameAndType        #450:#451     // u32:()Lorg/sireum/U32$U32$Slang$u32$;
  #453 = Methodref          #100.#452     // org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
  #454 = Methodref          #105.#394     // org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
  #455 = Utf8               toU64
  #456 = Utf8               org/sireum/U64$
  #457 = Class              #456          // org/sireum/U64$
  #458 = Utf8               Lorg/sireum/U64$;
  #459 = NameAndType        #155:#458     // MODULE$:Lorg/sireum/U64$;
  #460 = Fieldref           #457.#459     // org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
  #461 = Utf8               (Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #462 = NameAndType        #111:#461     // U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #463 = Methodref          #457.#462     // org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
  #464 = Utf8               u64
  #465 = Utf8               ()Lorg/sireum/U64$U64$Slang$u64$;
  #466 = NameAndType        #464:#465     // u64:()Lorg/sireum/U64$U64$Slang$u64$;
  #467 = Methodref          #108.#466     // org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
  #468 = Methodref          #113.#411     // org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
  #469 = Utf8               toF32
  #470 = Utf8               (Z)F
  #471 = Utf8               Lorg/sireum/F32$$String$;
  #472 = NameAndType        #155:#471     // MODULE$:Lorg/sireum/F32$$String$;
  #473 = Fieldref           #7.#472       // org/sireum/F32$$String$.MODULE$:Lorg/sireum/F32$$String$;
  #474 = Utf8               1.0
  #475 = String             #474          // 1.0
  #476 = Utf8               (Ljava/lang/String;)F
  #477 = NameAndType        #184:#476     // apply:(Ljava/lang/String;)F
  #478 = Methodref          #7.#477       // org/sireum/F32$$String$.apply:(Ljava/lang/String;)F
  #479 = Utf8               0.0
  #480 = String             #479          // 0.0
  #481 = Utf8               toF64
  #482 = Utf8               (Z)D
  #483 = Utf8               Lorg/sireum/F64$$String$;
  #484 = NameAndType        #155:#483     // MODULE$:Lorg/sireum/F64$$String$;
  #485 = Fieldref           #12.#484      // org/sireum/F64$$String$.MODULE$:Lorg/sireum/F64$$String$;
  #486 = Utf8               (Ljava/lang/String;)D
  #487 = NameAndType        #184:#486     // apply:(Ljava/lang/String;)D
  #488 = Methodref          #12.#487      // org/sireum/F64$$String$.apply:(Ljava/lang/String;)D
  #489 = Utf8               toR
  #490 = Utf8               (Z)Lscala/math/BigDecimal;
  #491 = Utf8               Lorg/sireum/R$$String$;
  #492 = NameAndType        #155:#491     // MODULE$:Lorg/sireum/R$$String$;
  #493 = Fieldref           #56.#492      // org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
  #494 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
  #495 = NameAndType        #184:#494     // apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #496 = Methodref          #56.#495      // org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #497 = Utf8               scala/math/BigDecimal
  #498 = Class              #497          // scala/math/BigDecimal
  #499 = Methodref          #4.#160       // java/lang/Object."<init>":()V
  #500 = Utf8               Code
  #501 = Utf8               LineNumberTable
  #502 = Utf8               LocalVariableTable
  #503 = Utf8               MethodParameters
  #504 = Utf8               StackMapTable
  #505 = Utf8               InnerClasses
  #506 = Utf8               SourceFile
  #507 = Utf8               ScalaInlineInfo
  #508 = Utf8               Scala
{
  public static final org.sireum.conversions.B_Ext$ MODULE$;
    descriptor: Lorg/sireum/conversions/B_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/B_Ext$
         3: dup
         4: invokespecial #161                // Method "<init>":()V
         7: putstatic     #163                // Field MODULE$:Lorg/sireum/conversions/B_Ext$;
        10: return
      LineNumberTable:
        line 47: 0

  public boolean toB(boolean);
    descriptor: (Z)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/conversions/B_Ext$;
            0       2     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toZ(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          20
        10: getstatic     #183                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        13: iconst_1
        14: invokevirtual #187                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        17: goto          27
        20: getstatic     #183                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        23: iconst_0
        24: invokevirtual #187                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        27: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/sireum/conversions/B_Ext$;
            0      28     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toZ8(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #195                // Field org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #218                // Method org/sireum/Z8$.Z8$Slang:(Lscala/StringContext;)Lorg/sireum/Z8$Z8$Slang;
        41: invokevirtual #222                // Method org/sireum/Z8$Z8$Slang.z8:()Lorg/sireum/Z8$Z8$Slang$z8$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #230                // Method org/sireum/Z8$Z8$Slang$z8$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #195                // Field org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #218                // Method org/sireum/Z8$.Z8$Slang:(Lscala/StringContext;)Lorg/sireum/Z8$Z8$Slang;
        84: invokevirtual #222                // Method org/sireum/Z8$Z8$Slang.z8:()Lorg/sireum/Z8$Z8$Slang$z8$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #230                // Method org/sireum/Z8$Z8$Slang$z8$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toZ16(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #238                // Field org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #241                // Method org/sireum/Z16$.Z16$Slang:(Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
        41: invokevirtual #245                // Method org/sireum/Z16$Z16$Slang.z16:()Lorg/sireum/Z16$Z16$Slang$z16$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #246                // Method org/sireum/Z16$Z16$Slang$z16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #238                // Field org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #241                // Method org/sireum/Z16$.Z16$Slang:(Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
        84: invokevirtual #245                // Method org/sireum/Z16$Z16$Slang.z16:()Lorg/sireum/Z16$Z16$Slang$z16$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #246                // Method org/sireum/Z16$Z16$Slang$z16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toZ32(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #252                // Field org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #255                // Method org/sireum/Z32$.Z32$Slang:(Lscala/StringContext;)Lorg/sireum/Z32$Z32$Slang;
        41: invokevirtual #259                // Method org/sireum/Z32$Z32$Slang.z32:()Lorg/sireum/Z32$Z32$Slang$z32$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #260                // Method org/sireum/Z32$Z32$Slang$z32$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #252                // Field org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #255                // Method org/sireum/Z32$.Z32$Slang:(Lscala/StringContext;)Lorg/sireum/Z32$Z32$Slang;
        84: invokevirtual #259                // Method org/sireum/Z32$Z32$Slang.z32:()Lorg/sireum/Z32$Z32$Slang$z32$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #260                // Method org/sireum/Z32$Z32$Slang$z32$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toZ64(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #266                // Field org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #269                // Method org/sireum/Z64$.Z64$Slang:(Lscala/StringContext;)Lorg/sireum/Z64$Z64$Slang;
        41: invokevirtual #273                // Method org/sireum/Z64$Z64$Slang.z64:()Lorg/sireum/Z64$Z64$Slang$z64$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #274                // Method org/sireum/Z64$Z64$Slang$z64$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #266                // Field org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #269                // Method org/sireum/Z64$.Z64$Slang:(Lscala/StringContext;)Lorg/sireum/Z64$Z64$Slang;
        84: invokevirtual #273                // Method org/sireum/Z64$Z64$Slang.z64:()Lorg/sireum/Z64$Z64$Slang$z64$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #274                // Method org/sireum/Z64$Z64$Slang$z64$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toN(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #280                // Field org/sireum/N$.MODULE$:Lorg/sireum/N$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #283                // Method org/sireum/N$.N$Slang:(Lscala/StringContext;)Lorg/sireum/N$N$Slang;
        41: invokevirtual #287                // Method org/sireum/N$N$Slang.n:()Lorg/sireum/N$N$Slang$n$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #288                // Method org/sireum/N$N$Slang$n$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #280                // Field org/sireum/N$.MODULE$:Lorg/sireum/N$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #283                // Method org/sireum/N$.N$Slang:(Lscala/StringContext;)Lorg/sireum/N$N$Slang;
        84: invokevirtual #287                // Method org/sireum/N$N$Slang.n:()Lorg/sireum/N$N$Slang$n$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #288                // Method org/sireum/N$N$Slang$n$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toN8(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #294                // Field org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #297                // Method org/sireum/N8$.N8$Slang:(Lscala/StringContext;)Lorg/sireum/N8$N8$Slang;
        41: invokevirtual #301                // Method org/sireum/N8$N8$Slang.n8:()Lorg/sireum/N8$N8$Slang$n8$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #302                // Method org/sireum/N8$N8$Slang$n8$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #294                // Field org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #297                // Method org/sireum/N8$.N8$Slang:(Lscala/StringContext;)Lorg/sireum/N8$N8$Slang;
        84: invokevirtual #301                // Method org/sireum/N8$N8$Slang.n8:()Lorg/sireum/N8$N8$Slang$n8$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #302                // Method org/sireum/N8$N8$Slang$n8$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toN16(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #308                // Field org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #311                // Method org/sireum/N16$.N16$Slang:(Lscala/StringContext;)Lorg/sireum/N16$N16$Slang;
        41: invokevirtual #315                // Method org/sireum/N16$N16$Slang.n16:()Lorg/sireum/N16$N16$Slang$n16$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #316                // Method org/sireum/N16$N16$Slang$n16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #308                // Field org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #311                // Method org/sireum/N16$.N16$Slang:(Lscala/StringContext;)Lorg/sireum/N16$N16$Slang;
        84: invokevirtual #315                // Method org/sireum/N16$N16$Slang.n16:()Lorg/sireum/N16$N16$Slang$n16$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #316                // Method org/sireum/N16$N16$Slang$n16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toN32(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #322                // Field org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #325                // Method org/sireum/N32$.N32$Slang:(Lscala/StringContext;)Lorg/sireum/N32$N32$Slang;
        41: invokevirtual #329                // Method org/sireum/N32$N32$Slang.n32:()Lorg/sireum/N32$N32$Slang$n32$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #330                // Method org/sireum/N32$N32$Slang$n32$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #322                // Field org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #325                // Method org/sireum/N32$.N32$Slang:(Lscala/StringContext;)Lorg/sireum/N32$N32$Slang;
        84: invokevirtual #329                // Method org/sireum/N32$N32$Slang.n32:()Lorg/sireum/N32$N32$Slang$n32$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #330                // Method org/sireum/N32$N32$Slang$n32$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z toN64(boolean);
    descriptor: (Z)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #336                // Field org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #339                // Method org/sireum/N64$.N64$Slang:(Lscala/StringContext;)Lorg/sireum/N64$N64$Slang;
        41: invokevirtual #343                // Method org/sireum/N64$N64$Slang.n64:()Lorg/sireum/N64$N64$Slang$n64$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #344                // Method org/sireum/N64$N64$Slang$n64$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        50: goto          93
        53: getstatic     #336                // Field org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #339                // Method org/sireum/N64$.N64$Slang:(Lscala/StringContext;)Lorg/sireum/N64$N64$Slang;
        84: invokevirtual #343                // Method org/sireum/N64$N64$Slang.n64:()Lorg/sireum/N64$N64$Slang$n64$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #344                // Method org/sireum/N64$N64$Slang$n64$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        93: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public byte toS8(boolean);
    descriptor: (Z)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #351                // Field org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #354                // Method org/sireum/S8$.S8$Slang:(Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
        41: invokevirtual #358                // Method org/sireum/S8$S8$Slang.s8:()Lorg/sireum/S8$S8$Slang$s8$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #361                // Method org/sireum/S8$S8$Slang$s8$.apply:(Lscala/collection/immutable/Seq;)B
        50: goto          93
        53: getstatic     #351                // Field org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #354                // Method org/sireum/S8$.S8$Slang:(Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
        84: invokevirtual #358                // Method org/sireum/S8$S8$Slang.s8:()Lorg/sireum/S8$S8$Slang$s8$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #361                // Method org/sireum/S8$S8$Slang$s8$.apply:(Lscala/collection/immutable/Seq;)B
        93: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public short toS16(boolean);
    descriptor: (Z)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #368                // Field org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #371                // Method org/sireum/S16$.S16$Slang:(Lscala/StringContext;)Lorg/sireum/S16$S16$Slang;
        41: invokevirtual #375                // Method org/sireum/S16$S16$Slang.s16:()Lorg/sireum/S16$S16$Slang$s16$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #378                // Method org/sireum/S16$S16$Slang$s16$.apply:(Lscala/collection/immutable/Seq;)S
        50: goto          93
        53: getstatic     #368                // Field org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #371                // Method org/sireum/S16$.S16$Slang:(Lscala/StringContext;)Lorg/sireum/S16$S16$Slang;
        84: invokevirtual #375                // Method org/sireum/S16$S16$Slang.s16:()Lorg/sireum/S16$S16$Slang$s16$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #378                // Method org/sireum/S16$S16$Slang$s16$.apply:(Lscala/collection/immutable/Seq;)S
        93: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public int toS32(boolean);
    descriptor: (Z)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #385                // Field org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #388                // Method org/sireum/S32$.S32$Slang:(Lscala/StringContext;)Lorg/sireum/S32$S32$Slang;
        41: invokevirtual #392                // Method org/sireum/S32$S32$Slang.s32:()Lorg/sireum/S32$S32$Slang$s32$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #395                // Method org/sireum/S32$S32$Slang$s32$.apply:(Lscala/collection/immutable/Seq;)I
        50: goto          93
        53: getstatic     #385                // Field org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #388                // Method org/sireum/S32$.S32$Slang:(Lscala/StringContext;)Lorg/sireum/S32$S32$Slang;
        84: invokevirtual #392                // Method org/sireum/S32$S32$Slang.s32:()Lorg/sireum/S32$S32$Slang$s32$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #395                // Method org/sireum/S32$S32$Slang$s32$.apply:(Lscala/collection/immutable/Seq;)I
        93: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public long toS64(boolean);
    descriptor: (Z)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #402                // Field org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #405                // Method org/sireum/S64$.S64$Slang:(Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
        41: invokevirtual #409                // Method org/sireum/S64$S64$Slang.s64:()Lorg/sireum/S64$S64$Slang$s64$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #412                // Method org/sireum/S64$S64$Slang$s64$.apply:(Lscala/collection/immutable/Seq;)J
        50: goto          93
        53: getstatic     #402                // Field org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #405                // Method org/sireum/S64$.S64$Slang:(Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
        84: invokevirtual #409                // Method org/sireum/S64$S64$Slang.s64:()Lorg/sireum/S64$S64$Slang$s64$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #412                // Method org/sireum/S64$S64$Slang$s64$.apply:(Lscala/collection/immutable/Seq;)J
        93: lreturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ long ]
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public byte toU8(boolean);
    descriptor: (Z)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #418                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #421                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        41: invokevirtual #425                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #426                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        50: goto          93
        53: getstatic     #418                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #421                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        84: invokevirtual #425                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #426                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        93: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public short toU16(boolean);
    descriptor: (Z)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #432                // Field org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #435                // Method org/sireum/U16$.U16$Slang:(Lscala/StringContext;)Lorg/sireum/U16$U16$Slang;
        41: invokevirtual #439                // Method org/sireum/U16$U16$Slang.u16:()Lorg/sireum/U16$U16$Slang$u16$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #440                // Method org/sireum/U16$U16$Slang$u16$.apply:(Lscala/collection/immutable/Seq;)S
        50: goto          93
        53: getstatic     #432                // Field org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #435                // Method org/sireum/U16$.U16$Slang:(Lscala/StringContext;)Lorg/sireum/U16$U16$Slang;
        84: invokevirtual #439                // Method org/sireum/U16$U16$Slang.u16:()Lorg/sireum/U16$U16$Slang$u16$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #440                // Method org/sireum/U16$U16$Slang$u16$.apply:(Lscala/collection/immutable/Seq;)S
        93: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public int toU32(boolean);
    descriptor: (Z)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #446                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #449                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
        41: invokevirtual #453                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #454                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
        50: goto          93
        53: getstatic     #446                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #449                // Method org/sireum/U32$.U32$Slang:(Lscala/StringContext;)Lorg/sireum/U32$U32$Slang;
        84: invokevirtual #453                // Method org/sireum/U32$U32$Slang.u32:()Lorg/sireum/U32$U32$Slang$u32$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #454                // Method org/sireum/U32$U32$Slang$u32$.apply:(Lscala/collection/immutable/Seq;)I
        93: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public long toU64(boolean);
    descriptor: (Z)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          53
        10: getstatic     #460                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        13: new           #197                // class scala/StringContext
        16: dup
        17: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #204                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #206                // String 1
        28: aastore
        29: checkcast     #208                // class "[Ljava/lang/Object;"
        32: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #463                // Method org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
        41: invokevirtual #467                // Method org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
        44: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #468                // Method org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
        50: goto          93
        53: getstatic     #460                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        56: new           #197                // class scala/StringContext
        59: dup
        60: getstatic     #202                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #204                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #232                // String 0
        71: aastore
        72: checkcast     #208                // class "[Ljava/lang/Object;"
        75: invokevirtual #212                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #215                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #463                // Method org/sireum/U64$.U64$Slang:(Lscala/StringContext;)Lorg/sireum/U64$U64$Slang;
        84: invokevirtual #467                // Method org/sireum/U64$U64$Slang.u64:()Lorg/sireum/U64$U64$Slang$u64$;
        87: getstatic     #227                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #468                // Method org/sireum/U64$U64$Slang$u64$.apply:(Lscala/collection/immutable/Seq;)J
        93: lreturn
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ long ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/sireum/conversions/B_Ext$;
            0      94     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public float toF32(boolean);
    descriptor: (Z)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          22
        10: getstatic     #473                // Field org/sireum/F32$$String$.MODULE$:Lorg/sireum/F32$$String$;
        13: ldc_w         #475                // String 1.0
        16: invokevirtual #478                // Method org/sireum/F32$$String$.apply:(Ljava/lang/String;)F
        19: goto          31
        22: getstatic     #473                // Field org/sireum/F32$$String$.MODULE$:Lorg/sireum/F32$$String$;
        25: ldc_w         #480                // String 0.0
        28: invokevirtual #478                // Method org/sireum/F32$$String$.apply:(Ljava/lang/String;)F
        31: freturn
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ float ]
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/sireum/conversions/B_Ext$;
            0      32     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public double toF64(boolean);
    descriptor: (Z)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          22
        10: getstatic     #485                // Field org/sireum/F64$$String$.MODULE$:Lorg/sireum/F64$$String$;
        13: ldc_w         #475                // String 1.0
        16: invokevirtual #488                // Method org/sireum/F64$$String$.apply:(Ljava/lang/String;)D
        19: goto          31
        22: getstatic     #485                // Field org/sireum/F64$$String$.MODULE$:Lorg/sireum/F64$$String$;
        25: ldc_w         #480                // String 0.0
        28: invokevirtual #488                // Method org/sireum/F64$$String$.apply:(Ljava/lang/String;)D
        31: dreturn
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ double ]
      LineNumberTable:
        line 89: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/sireum/conversions/B_Ext$;
            0      32     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public scala.math.BigDecimal toR(boolean);
    descriptor: (Z)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #175                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: invokevirtual #178                // Method org/sireum/B$.$4B:(Z)Z
         7: ifeq          22
        10: getstatic     #493                // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
        13: ldc_w         #475                // String 1.0
        16: invokevirtual #496                // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        19: goto          31
        22: getstatic     #493                // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
        25: ldc_w         #480                // String 0.0
        28: invokevirtual #496                // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        31: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigDecimal ]
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/sireum/conversions/B_Ext$;
            0      32     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  private org.sireum.conversions.B_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #499                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/B_Ext$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/F32$$String$ of class org/sireum/F32
  public static #10= #12 of #14;          // $String$=class org/sireum/F64$$String$ of class org/sireum/F64
  public static #19= #16 of #18;          // N$Slang=class org/sireum/N$N$Slang of class org/sireum/N
  public #22= #21 of #16;                 // n$=class org/sireum/N$N$Slang$n$ of class org/sireum/N$N$Slang
  public static #27= #24 of #26;          // N16$Slang=class org/sireum/N16$N16$Slang of class org/sireum/N16
  public #30= #29 of #24;                 // n16$=class org/sireum/N16$N16$Slang$n16$ of class org/sireum/N16$N16$Slang
  public static #35= #32 of #34;          // N32$Slang=class org/sireum/N32$N32$Slang of class org/sireum/N32
  public #38= #37 of #32;                 // n32$=class org/sireum/N32$N32$Slang$n32$ of class org/sireum/N32$N32$Slang
  public static #43= #40 of #42;          // N64$Slang=class org/sireum/N64$N64$Slang of class org/sireum/N64
  public #46= #45 of #40;                 // n64$=class org/sireum/N64$N64$Slang$n64$ of class org/sireum/N64$N64$Slang
  public static #51= #48 of #50;          // N8$Slang=class org/sireum/N8$N8$Slang of class org/sireum/N8
  public #54= #53 of #48;                 // n8$=class org/sireum/N8$N8$Slang$n8$ of class org/sireum/N8$N8$Slang
  public static #10= #56 of #58;          // $String$=class org/sireum/R$$String$ of class org/sireum/R
  public static #63= #60 of #62;          // S16$Slang=class org/sireum/S16$S16$Slang of class org/sireum/S16
  public #66= #65 of #60;                 // s16$=class org/sireum/S16$S16$Slang$s16$ of class org/sireum/S16$S16$Slang
  public static #71= #68 of #70;          // S32$Slang=class org/sireum/S32$S32$Slang of class org/sireum/S32
  public #74= #73 of #68;                 // s32$=class org/sireum/S32$S32$Slang$s32$ of class org/sireum/S32$S32$Slang
  public static #79= #76 of #78;          // S64$Slang=class org/sireum/S64$S64$Slang of class org/sireum/S64
  public #82= #81 of #76;                 // s64$=class org/sireum/S64$S64$Slang$s64$ of class org/sireum/S64$S64$Slang
  public static #87= #84 of #86;          // S8$Slang=class org/sireum/S8$S8$Slang of class org/sireum/S8
  public #90= #89 of #84;                 // s8$=class org/sireum/S8$S8$Slang$s8$ of class org/sireum/S8$S8$Slang
  public static #95= #92 of #94;          // U16$Slang=class org/sireum/U16$U16$Slang of class org/sireum/U16
  public #98= #97 of #92;                 // u16$=class org/sireum/U16$U16$Slang$u16$ of class org/sireum/U16$U16$Slang
  public static #103= #100 of #102;       // U32$Slang=class org/sireum/U32$U32$Slang of class org/sireum/U32
  public #106= #105 of #100;              // u32$=class org/sireum/U32$U32$Slang$u32$ of class org/sireum/U32$U32$Slang
  public static #111= #108 of #110;       // U64$Slang=class org/sireum/U64$U64$Slang of class org/sireum/U64
  public #114= #113 of #108;              // u64$=class org/sireum/U64$U64$Slang$u64$ of class org/sireum/U64$U64$Slang
  public static #119= #116 of #118;       // U8$Slang=class org/sireum/U8$U8$Slang of class org/sireum/U8
  public #122= #121 of #116;              // u8$=class org/sireum/U8$U8$Slang$u8$ of class org/sireum/U8$U8$Slang
  public static #127= #124 of #126;       // Z16$Slang=class org/sireum/Z16$Z16$Slang of class org/sireum/Z16
  public #130= #129 of #124;              // z16$=class org/sireum/Z16$Z16$Slang$z16$ of class org/sireum/Z16$Z16$Slang
  public static #135= #132 of #134;       // Z32$Slang=class org/sireum/Z32$Z32$Slang of class org/sireum/Z32
  public #138= #137 of #132;              // z32$=class org/sireum/Z32$Z32$Slang$z32$ of class org/sireum/Z32$Z32$Slang
  public static #143= #140 of #142;       // Z64$Slang=class org/sireum/Z64$Z64$Slang of class org/sireum/Z64
  public #146= #145 of #140;              // z64$=class org/sireum/Z64$Z64$Slang$z64$ of class org/sireum/Z64$Z64$Slang
  public static #151= #148 of #150;       // Z8$Slang=class org/sireum/Z8$Z8$Slang of class org/sireum/Z8
  public #154= #153 of #148;              // z8$=class org/sireum/Z8$Z8$Slang$z8$ of class org/sireum/Z8$Z8$Slang
SourceFile: "extension.scala"
  ScalaInlineInfo: length = 0x77 (unknown attribute)
   01 01 00 17 00 9F 00 9E 01 00 A4 00 A5 01 01 D5
   01 D6 01 01 E1 01 E2 01 01 13 00 AA 01 01 2F 00
   AA 01 01 3D 00 AA 01 01 4B 00 AA 01 01 21 00 AA
   01 01 E9 01 EA 01 01 6A 01 6B 01 01 7B 01 7C 01
   01 8C 01 8D 01 01 59 01 5A 01 01 AB 01 6B 01 01
   B9 01 7C 01 01 C7 01 8D 01 01 9D 01 5A 01 00 A9
   00 AA 01 00 E9 00 AA 01 00 F7 00 AA 01 01 05 00
   AA 01 00 BE 00 AA 01
  Scala: length = 0x0 (unknown attribute)

