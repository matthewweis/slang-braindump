Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/package$$Slang$string$.class
  Last modified May 29, 2022; size 1524 bytes
  SHA-256 checksum 24b08b36ea896fd5be98f907ec87a64b0ad934c57977aa7c94d84852cc8922bb
  Compiled from "package.scala"
public final class org.sireum.package$$Slang$string$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/package$$Slang$string$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 2, attributes: 4
Constant pool:
   #1 = Utf8               org/sireum/package$$Slang$string$
   #2 = Class              #1             // org/sireum/package$$Slang$string$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               package.scala
   #6 = Utf8               org/sireum/package$$Slang
   #7 = Class              #6             // org/sireum/package$$Slang
   #8 = Utf8               org/sireum/package
   #9 = Class              #8             // org/sireum/package
  #10 = Utf8               $Slang
  #11 = Utf8               string$
  #12 = Utf8               $outer
  #13 = Utf8               Lorg/sireum/package$$Slang;
  #14 = Utf8               unapply
  #15 = Utf8               (Ljava/lang/String;)Z
  #16 = Utf8               s
  #17 = Utf8               scala/Predef$
  #18 = Class              #17            // scala/Predef$
  #19 = Utf8               MODULE$
  #20 = Utf8               Lscala/Predef$;
  #21 = NameAndType        #19:#20        // MODULE$:Lscala/Predef$;
  #22 = Fieldref           #18.#21        // scala/Predef$.MODULE$:Lscala/Predef$;
  #23 = NameAndType        #12:#13        // $outer:Lorg/sireum/package$$Slang;
  #24 = Fieldref           #2.#23         // org/sireum/package$$Slang$string$.$outer:Lorg/sireum/package$$Slang;
  #25 = Utf8               $sc
  #26 = Utf8               ()Lscala/StringContext;
  #27 = NameAndType        #25:#26        // $sc:()Lscala/StringContext;
  #28 = Methodref          #7.#27         // org/sireum/package$$Slang.$sc:()Lscala/StringContext;
  #29 = Utf8               scala/StringContext
  #30 = Class              #29            // scala/StringContext
  #31 = Utf8               parts
  #32 = Utf8               ()Lscala/collection/immutable/Seq;
  #33 = NameAndType        #31:#32        // parts:()Lscala/collection/immutable/Seq;
  #34 = Methodref          #30.#33        // scala/StringContext.parts:()Lscala/collection/immutable/Seq;
  #35 = Utf8               scala/collection/immutable/Seq
  #36 = Class              #35            // scala/collection/immutable/Seq
  #37 = Utf8               size
  #38 = Utf8               ()I
  #39 = NameAndType        #37:#38        // size:()I
  #40 = InterfaceMethodref #36.#39        // scala/collection/immutable/Seq.size:()I
  #41 = Utf8               assume
  #42 = Utf8               (Z)V
  #43 = NameAndType        #41:#42        // assume:(Z)V
  #44 = Methodref          #18.#43        // scala/Predef$.assume:(Z)V
  #45 = Utf8               scala/StringContext$
  #46 = Class              #45            // scala/StringContext$
  #47 = Utf8               Lscala/StringContext$;
  #48 = NameAndType        #19:#47        // MODULE$:Lscala/StringContext$;
  #49 = Fieldref           #46.#48        // scala/StringContext$.MODULE$:Lscala/StringContext$;
  #50 = Utf8               head
  #51 = Utf8               ()Ljava/lang/Object;
  #52 = NameAndType        #50:#51        // head:()Ljava/lang/Object;
  #53 = InterfaceMethodref #36.#52        // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
  #54 = Utf8               java/lang/String
  #55 = Class              #54            // java/lang/String
  #56 = Utf8               processEscapes
  #57 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #58 = NameAndType        #56:#57        // processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #59 = Methodref          #46.#58        // scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #60 = Utf8               equals
  #61 = Utf8               (Ljava/lang/Object;)Z
  #62 = NameAndType        #60:#61        // equals:(Ljava/lang/Object;)Z
  #63 = Methodref          #4.#62         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #64 = Utf8               other
  #65 = Utf8               Ljava/lang/String;
  #66 = Utf8               r
  #67 = Utf8               Z
  #68 = Utf8               this
  #69 = Utf8               Lorg/sireum/package$$Slang$string$;
  #70 = Utf8               <init>
  #71 = Utf8               (Lorg/sireum/package$$Slang;)V
  #72 = Utf8               ()V
  #73 = NameAndType        #70:#72        // "<init>":()V
  #74 = Methodref          #4.#73         // java/lang/Object."<init>":()V
  #75 = Utf8               Code
  #76 = Utf8               StackMapTable
  #77 = Utf8               LineNumberTable
  #78 = Utf8               LocalVariableTable
  #79 = Utf8               MethodParameters
  #80 = Utf8               InnerClasses
  #81 = Utf8               SourceFile
  #82 = Utf8               ScalaInlineInfo
  #83 = Utf8               apply
  #84 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #85 = Utf8               Scala
{
  private final org.sireum.package$$Slang $outer;
    descriptor: Lorg/sireum/package$$Slang;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public boolean unapply(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: getstatic     #22                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: getfield      #24                 // Field $outer:Lorg/sireum/package$$Slang;
         7: invokevirtual #28                 // Method org/sireum/package$$Slang.$sc:()Lscala/StringContext;
        10: invokevirtual #34                 // Method scala/StringContext.parts:()Lscala/collection/immutable/Seq;
        13: invokeinterface #40,  1           // InterfaceMethod scala/collection/immutable/Seq.size:()I
        18: iconst_1
        19: if_icmpne     26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: invokevirtual #44                 // Method scala/Predef$.assume:(Z)V
        30: getstatic     #49                 // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        33: aload_0
        34: getfield      #24                 // Field $outer:Lorg/sireum/package$$Slang;
        37: invokevirtual #28                 // Method org/sireum/package$$Slang.$sc:()Lscala/StringContext;
        40: invokevirtual #34                 // Method scala/StringContext.parts:()Lscala/collection/immutable/Seq;
        43: invokeinterface #53,  1           // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        48: checkcast     #55                 // class java/lang/String
        51: invokevirtual #59                 // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        54: astore_2
        55: aload_1
        56: aload_2
        57: astore        4
        59: dup
        60: ifnonnull     72
        63: pop
        64: aload         4
        66: ifnull        80
        69: goto          84
        72: aload         4
        74: invokevirtual #63                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        77: ifeq          84
        80: iconst_1
        81: goto          85
        84: iconst_0
        85: istore_3
        86: iload_3
        87: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 90 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/package$$Slang$string$, class java/lang/String ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class org/sireum/package$$Slang$string$, class java/lang/String, class java/lang/String, top, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 108: 0
        line 109: 30
        line 110: 55
        line 111: 86
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55      32     2 other   Ljava/lang/String;
           86       1     3     r   Z
            0      88     0  this   Lorg/sireum/package$$Slang$string$;
            0      88     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public org.sireum.package$$Slang$string$(org.sireum.package$$Slang);
    descriptor: (Lorg/sireum/package$$Slang;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #24                 // Field $outer:Lorg/sireum/package$$Slang;
        11: aload_0
        12: invokespecial #74                 // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/sireum/package$$Slang$string$;
            0      16     1 $outer   Lorg/sireum/package$$Slang;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public static final #10= #7 of #9;      // $Slang=class org/sireum/package$$Slang of class org/sireum/package
  public final #11= #2 of #7;             // string$=class org/sireum/package$$Slang$string$ of class org/sireum/package$$Slang
SourceFile: "package.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 46 00 47 01 00 53 00 54 01 00 0E
   00 0F 01
  Scala: length = 0x0 (unknown attribute)

